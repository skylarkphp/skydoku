{"version":3,"sources":["skylark-widgets-base-all.js"],"names":["define","obj1","path","obj2","split","length","ns","i","name","_attach","skylark","attach","obj","main","class2type","nativeIsArray","Array","isArray","toString","type","forEach","toLowerCase","String","call","object","constructor","isEmptyObject","isFunction","value","isHtmlNode","nodeType","isNumber","isObject","isString","isWindow","window","isArrayLike","isBoolean","isDefined","isDocument","DOCUMENT_NODE","isElement","isEmpty","isNaN","isNull","isNumeric","isPlainObject","Object","getPrototypeOf","prototype","isSameOrigin","href","origin","location","protocol","hostname","port","startsWith","isSymbol","isObjectLike","objectToString","symbolTag","isUndefined","types","INFINITY","MAX_INTEGER","NAN","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","toFinite","toNumber","sign","other","valueOf","replace","isBinary","test","slice","toInteger","result","remainder","numbers","eq","deepEq","hasOwnProperty","keysFunc","defaults","SymbolProto","Symbol","allKeys","keys","key","push","has","_mixin","target","source","deep","safe","undefined","_parseMixinArgs","args","params","arguments","shift","pop","sources","mixin","apply","this","values","a","b","aStack","bStack","className","areArrays","aCtor","bCtor","clone","src","checkCloneMethod","copy","index","l","each","callback","undef","extend","arg","isEqual","includes","collection","fromIndex","guard","nativeMax","indexOf","baseIndexOf","isMatch","attrs","omit","prop1","prop2","pn","pick","removeItem","items","item","idx","splice","fallback","prop","safeMixin","objects","filter","find","baseFindIndex","array","predicate","fromRight","baseIsNaN","flatten","j","compact","first","n","func","grep","out","inArray","makeArray","offset","startWith","concat","merge","second","arr","fn","map","elements","reduce","initialValue","uniq","arrays","createClass","_constructor","_construct","init","props","parent","mixins","options","innerParent","ctor","Error","clss","unshift","superclass","cls","clsMixines","serialMixins","newCtor","xtor","Function","create","__proto__","__mixin__","mergeMixins","klassName","__mixins__","partial","proto","_super","noOverrided","overrides","superFn","tmp","overrided","ret","defineProperty","extendClass","inherit","f1","klass","proxy","context","TypeError","delegate","TMP","templateSettings","evaluate","interpolate","escape","noMatch","escapes","'","\\","\r","\n","\t"," "," ","escaper","bind","debounce","wait","timeout","clearTimeout","setTimeout","defer","requestAnimationFrame","setTimeoutout","negate","noop","returnTrue","returnFalse","template","text","data","settings","render","matcher","RegExp","join","match","variable","e","argument","funcs","eventMethods","preventDefault","stopImmediatePropagation","stopPropagation","compatible","event","isDefaultPrevented","sourceMethod","Event","CustomEvent","[object Object]","super","parse","segs","Emitter","on","events","selector","ctx","one","self","_hub","parsed","emit","eventName","listeners","len","reCompact","isImmediatePropagationStopped","listener","listened","evtArr","_events","listenTo","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","listenToOnce","off","evts","liveEvents","_","unlistenTo","trigger","createEvent","Evented","collections","Collection","_clear","clear","count","c","it","iterator","hasNext","thisArg","next","toArray","Map","_getInnerItems","_items","_findKeyByRegExp","regExp","get","strKey","silent","set","oldValue","updated","remove","findByRegExp","removeByRegExp","toPlain","plain","delim","_Map","HashMap","base","ActionManager","addAction","category","executeAction","removeAction","ActiionManager","Action","tooltip","icon","shortcut","state","_state","checked","disabled","_init","execute","_execute","QueryResults","results","isPromise","then","addIterativeMethod","method","Deferred","when","total","ArrayStore","queryEngine","query","queryObject","required","thisObject","cache","buildFn","sortSet","sort","aValue","attribute","bValue","descending","start","Infinity","matches","idProperty","id","getIdentity","put","Math","random","overwrite","add","setData","identifier","nextId","aspect","methodName","advice","receiveArguments","dispatcher","existing","executionId","before","around","after","newResults","signal","previous","advised","advise","Promise","always","handler","done","fail","catch","promise","makePromise2","resolve","reject","_resolve","_reject","isResolved","isPending","isRejected","v","notified","onResolved","onRejected","onProgress","progress","__ctx__","pipe","notify","error","resolveWith","_resolved","p","reason","rejectWith","_rejected","errback","progback","all","d","race","valueOrPromise","receivedPromise","nativePromise","deferred","cancel","err","immediate","async","parallel","rets","series","waterful","parseMilliSeconds","str","strs","number","trim","datetimes","hoster","isBrowser","isNode","global","browser","node","process","versions","v8","_document","w","require","document","matched","ua","exec","version","uaMatch","navigator","userAgent","chrome","webkit","safari","escapeCharMap","freeze","&","<",">","\"","`","=","replaceChar","escapeChars","idCounter","string","line","body","escapeHTML","me","callee","stash","getElementById","innerHTML","camelCase","toUpperCase","dasherize","deserializeValue","JSON","generateUUID","r","lowerFirst","charAt","rtrim","serializeValue","stringify","substitute","transform","getObject","retVal","getValue","_k","reverse","format","slugify","from","uniqueId","prefix","upperFirst","strings","base64","decode","input","binary","chr1","chr2","chr3","enc1","enc2","enc3","enc4","output","_keyStr","fromCharCode","utftext","c1","c2","charCodeAt","c3","_utf8_decode","encode","_utf8_encode","Stateful","attributes","cid","cidPrefix","changed","validationError","idAttribute","toJSON","attr","val","_validate","unset","changes","changing","_changing","_previousAttributes","current","prev","_pending","hasChanged","changedAttributes","diff","old","previousAttributes","isNew","isValid","validate","hub","publish","arg1","argn","subscribe","topic","_uid","langx","funcArg","payload","getQueryParams","url","queryParam","nv","toPixel","parseFloat","uid","URL","webkitURL","vendorPrefix","vendorPrefixRE","transEndEventNames","WebkitTransition","MozTransition","OTransition","transition","transEndEventName","css3PropPrefix","css3EventPrefix","cssStyles","cssProps","vendorPrefixesRE","testEl","createElement","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","requestFullScreen","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","testStyle","exitFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen","style","cssPropName","isIE","normalizeStyleProperty","normalizeCssProperty","normalizeCssEvent","support","end","fragmentRE","singleTagRE","div","table","tableBody","tableRow","containers","tr","tbody","thead","tfoot","td","th","*","rootNodeRE","ensureNodes","nodes","copyByClone","cloneNode","nodeName","elm","chkName","enhancePlaceContent","placing","neddsFlattern","append","parentNode","appendChild","tag","createElementNS","setAttribute","rxhtmlTag","isChildOf","directly","documentElement","contains","ownerDoc","ownerDocument","noder","active","doc","el","activeElement","refNode","nextSibling","insertBefore","blur","getAttribs","setAttrib","getAttrib","child","contents","contentDocument","childNodes","createFragment","html","$1","container","xml","newXml","edsplit","removeSelfClosingTags","dom","removeChild","createTextNode","empty","hasChildNodes","firstChild","fullScreen","exitFullScreen","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","focusable","element","hasTabindex","mapName","img","focusableIfVisible","fieldset","$","is","closest","visible","isActive","elem","isInDocument","offsetParent","defaultView","getComputedStyle","position","ownerWindow","parentWindow","prepend","reflow","offsetHeight","console","warn","children","oldNode","replaceChild","selectable","onselectstart","MozUserSelect","KhtmlUserSelect","unselectable","traverse","wrapper","wrapperNode","wrapperInner","unwrap","isDoc","local","nativeMatchesSelector","separatorIndex","combinatorIndex","reversed","reverseCache","reUnescape","expression","isReversed","Slick","currentCache","expressions","raw","regexp","parser","reverseCombinator","combinator","exp","last","parts","cexp","escapeRegExp","rawMatch","separator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","currentSeparator","currentParsed","classList","classes","pseudos","operator","rinputs","rheader","parseSelector","button","enabled","even","focus","tabindex","gt","sel","header","hidden","lt","not","odd","selected","tabbable","tabIndex","offsetWidth","createInputPseudo","createButtonPseudo","isArrayFilter","radio","checkbox","file","password","image","submit","reset","ancestors","root","rootIsSelector","descendants","querySelectorAll","matchError","descendant","querySelector","lastChild","previousSibling","check","adjacent","nextSiblings","previousSiblings","siblings","divide","cond","nativeSelector","customPseudos","part","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","filterSingle","matchs","combine","bit","node1","op","divided","single","currentBit","founds","found","currentItems","finder","ancestor","byId","findAll","capitalRE","propMap","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","valHooks","option","select","selectedIndex","max","optionSet","attrName","_store","confirm","store","_attributeData","_setData","dataAttrName","camelName","_getData","cleanData","txt","textContent","hooks","value1","datax","dataName","aria","pluck","property","removeAttr","removeAttribute","removeData","names","removeProp","isQ","some","every","rquickExpr","wrapper_node_operation","oldValueFunc","argType","wrapper_map","wrapper_selector","wrapper_selector_until","util","wrapper_every_act","wrapper_value","newValue","NodeList","ready","rootQuery","size","excludes","parents","parentsUntil","pushStack","elms","prevObject","replaceWith","newContent","wrap","htmlIsFunction","wrapAll","firstElementChild","wrapInner","toggle","setting","css","show","hide","prevAll","nextAll","detach","hover","fnOver","fnOut","mouseenter","mouseleave","appendTo","prependTo","insertAfter","replaceAll","original","elems","insert","scrollParent","includeHidden","excludeStaticParent","overflowRegex","andSelf","addBack","eventType","place","addContent","content","disableSelection","enableSelection","flow","isBlockNode","plugin","returnValue","plugins","instantiate","wraps","wrapper_some_chk","wrapper_every_act_firstArgFunc","newArg1","wrapper_name_value","VisualElement","_elm","velm","batch","action","HTMLElement","_delegator","ignoreProperties","readyRE","NativeEventCtors","NativeEvents","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","abort","change","selectionchange","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","textInput","touchstart","touchmove","touchend","load","resize","scroll","unload","wheel","bubbles","cancelable","namespace","getEventCtor","createProxy","originalEvent","specialEvents","focusinSupported","realEvent","handlers","EventBindings","_target","_event","_bindings","bindings","binding","_listener","domEvt","_args","currentTarget","liveFired","related","relatedTarget","addEventListener","removing","removeEventListener","EventsHandler","_handler","register","specialEvent","bindingEvent","bindType","bindEventName","unregister","findHandler","readyState","keyCodeLookup","backspace","comma","delete","down","enter","home","left","page_down","page_up","period","right","space","tab","up","eventer","transitionEnd","delegateType","shortcuts","registry","run","metaKey","ctrlKey","ctrl","alt","altKey","shiftKey","keyCode","charCode","pattern","shortcutKey","regKey","special","stop","evented","dispatchEvent","delegateMethodNames","files","maybeAddPx","cssNumber","column-count","columns","font-weight","line-height","opacity","z-index","zoom","classReCache","classRE","svg","baseVal","elementDisplay","getStyles","view","opener","styler","autocssfix","cssHooks","addClass","re","computedStyle","getPropertyValue","removeProperty","cssText","hasClass","isInvisible","removeClass","display","defaultDisplay","toggleClass","replaceClass","newClass","oldClass","diskfs","webentry","entry","onError","isFile","relativePath","isDirectory","dirReader","createReader","readEntries","entries","dropzone","hoverClass","droppedCallback","dropped","enterdCount","dataTransfer","webkitGetAsEntry","getAsEntry","pastezone","pastedCallback","pasted","clipboardData","getAsFile","fileInput","maxFileSize","directory","multiple","accept","title","fileSelected","picked","selectFiles","pickedFiles","top","onchange","webkitEntries","webkitdirectory","picker","http","getAbsoluteUrl","Xhr","jsonpID","rscript","scriptTypeRE","xmlTypeRE","jsonType","htmlType","blankRE","XhrDefaultOptions","beforeSend","success","complete","accepts","script","json","crossDomain","processData","traditional","xhrFields","withCredentials","mimeToDataType","mime","appendQuery","serializeData","param","serialize","scope","t","hash","encodeURIComponent","_request","xhr","XMLHttpRequest","dataType","handleAs","mimeType","headers","isFormData","FormData","basicAuthorizationToken","user","contentType","overrideMimeType","finish","onloadend","onabort","onprogress","ontimeout","status","getResponseHeader","responseText","eval","responseXML","Blob","xhrObj","response","reponse","statusText","evt","open","setRequestHeader","send","request","post","patch","del","defaultOptions","blobSlice","webkitSlice","mozSlice","Upload","_options","debug","maxConnections","maxChunkSize","fileName","loaded","onComplete","onCancel","onFailure","_queue","_params","_files","_xhrs","_loaded","_send","sendAll","_cancel","_dequeue","cancelAll","getName","getSize","fileSize","getLoaded","curUploadingSize","chunkSize","curLoadedSize","formParamName","formData","lengthComputable","getQueue","cachedScrollbarWidth","px","scrollbarWidth","w1","w2","innerDiv","clientWidth","borderExtents","bottom","s","borderLeftWidth","borderTopWidth","borderRightWidth","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","clientSize","dimension","width","height","clientHeight","isBorderBox","bex","pex","paddingExtents","getDocumentSize","scrollWidth","scrollHeight","marginLeft","marginTop","marginRight","marginBottom","marginSize","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","pageXOffset","pageYOffset","relativeRect","scrollLeft","hasScrollLeft","scrollTo","scrollY","scrollTop","hasScrollTop","scrollX","innerWidth","innerHeight","geom","contentRect","cs","fullCover","hor","vert","vertical","horizontal","marginRect","pageRect","round","scrollIntoView","align","x","y","parentWidth","parentHeight","parentElm","pos","rootElm","offsetLeft","offsetTop","getOffset","abs","rhorizontal","rvertical","roffset","rposition","rpercent","getOffsets","offsets","parseCss","positions","fit","newOverRight","within","withinOffset","outerWidth","collisionPosLeft","collisionPosition","overLeft","overRight","collisionWidth","newOverBottom","outerHeight","collisionPosTop","overTop","overBottom","collisionHeight","flip","newOverLeft","myOffset","my","elemWidth","atOffset","at","targetWidth","newOverTop","elemHeight","targetHeight","flipfit","posit","targetOffset","basePosition","dimensions","of","withinElement","hasOffset","msize","scrollInfo","overflowX","overflowY","hasOverflowX","getScrollInfo","collision","pageY","pageX","horizontalOffset","verticalOffset","using","dir","feedback","important","Dimension","m","margin","cb","mb","animationName","animationDuration","animationTiming","transitionProperty","transitionDuration","transitionTiming","transitionDelay","animationEnd","supportedTransforms","cssReset","animate","properties","duration","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","easing","fx","speeds","normal","eace","clientLeft","scrollToTop","speed","scale","scrollFrom","freq","interval","setInterval","clearInterval","fadeTo","fadeIn","fadeOut","slideDown","visibility","overflow","slideUp","queue","fast","slow","emulateTransitionEnd","called","fadeToggle","ceasing","allback","slideToggle","throb","timer","time","throbber","overlayDiv","zIndex","overlay","textNode","update","nodeValue","toogle","elmx","pluginKlasses","pluginName","pair","instanceDataName","pluginInstance","destroy","pluginKlass","Plugin","_initOptions","ctors","_destroy","_delay","instance","curOption","_setOptions","_setOption","getUID","domNode","shortcutName","extfn","shortcutter","args2","FileUpload","MultiUploader","uploadUrl","allowedExtensions","sizeLimit","minSizeLimit","autoUpload","selectors","fileList","fileItem","nodata","startUploads","cancelUploads","_velm","_initEventHandler","_initFileHandlers","_initUpoadHandler","_updateFileList","dzSelector","pzSelector","pkSelector","_addFiles","_onProgress","_onComplete","_onCancel","_onFailure","itemSelectors","_listElement","$fileItem","fileId","$files","$item","_getItemByFileId","percent","progressHTML","_formatSize","_updateFile","_filesInProgress","doneMsg","_addToList","_formatFileName","with_files_elements","without_files_elements","when_pending","when_running","when_done","item2","_validateFile","_addFile","_isAllowedExtension","_error","code","messages","replacement","showMessage","ext","allowed","bytes","toFixed","Widget","_elmx","_parse","_create","addonCategoryOptions","addons","widgetCtor","categoryName","addonOption","addonName","addonSetting","addonCtor","addon","parentElement","_startup","optionsAttr","options1","widgetClass","_refresh","updates","mapping","attributs","styles","_addons","getEnclosing","getEnclosed","ArrayList","ex","enable","disable","getEl","ariaTarget","_aria","meta","addStatePropMethod","widgetName"],"mappings":"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","file":"../skylark-widgets-base-all.js","sourcesContent":["define('skylark-langx-ns/_attach',[],function(){\r\n    return  function attach(obj1,path,obj2) {\r\n        if (typeof path == \"string\") {\r\n            path = path.split(\".\");//[path]\r\n        };\r\n        var length = path.length,\r\n            ns=obj1,\r\n            i=0,\r\n            name = path[i++];\r\n\r\n        while (i < length) {\r\n            ns = ns[name] = ns[name] || {};\r\n            name = path[i++];\r\n        }\r\n\r\n        return ns[name] = obj2;\r\n    }\r\n});\ndefine('skylark-langx-ns/ns',[\r\n    \"./_attach\"\r\n], function(_attach) {\r\n    var skylark = {\r\n    \tattach : function(path,obj) {\r\n    \t\treturn _attach(skylark,path,obj);\r\n    \t}\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-langx-ns/main',[\r\n\t\"./ns\"\r\n],function(skylark){\r\n\treturn skylark;\r\n});\ndefine('skylark-langx-ns', ['skylark-langx-ns/main'], function (main) { return main; });\n\ndefine('skylark-langx/skylark',[\r\n    \"skylark-langx-ns\"\r\n], function(ns) {\r\n\treturn ns;\r\n});\r\n\ndefine('skylark-widgets-base/base',[\r\n\t\"skylark-langx/skylark\"\r\n],function(skylark){\r\n\treturn skylark.attach(\"widgets.base\",{});\r\n});\ndefine('skylark-langx-types/types',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n    var nativeIsArray = Array.isArray, \r\n        toString = {}.toString;\r\n    \r\n    var type = (function() {\r\n        var class2type = {};\r\n\r\n        // Populate the class2type map\r\n        \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split(\" \").forEach(function(name) {\r\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n        });\r\n\r\n        return function type(obj) {\r\n            return obj == null ? String(obj) :\r\n                class2type[toString.call(obj)] || \"object\";\r\n        };\r\n    })();\r\n\r\n \r\n    var  isArray = nativeIsArray || function(obj) {\r\n        return object && object.constructor === Array;\r\n    };\r\n\r\n\r\n    /**\r\n     * Checks if `value` is array-like. A value is considered array-like if it's\r\n     * not a function/string/element and has a `value.length` that's an integer greater than or\r\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\r\n     *\r\n     * @category Lang\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\r\n     * @example\r\n     *\r\n     * isArrayLike([1, 2, 3])\r\n     * // => true\r\n     *\r\n     * isArrayLike(document.body.children)\r\n     * // => false\r\n     *\r\n     * isArrayLike('abc')\r\n     * // => true\r\n     *\r\n     * isArrayLike(Function)\r\n     * // => false\r\n     */    \r\n    function isArrayLike(obj) {\r\n        return !isString(obj) && !isHtmlNode(obj) && typeof obj.length == 'number' && !isFunction(obj);\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is classified as a boolean primitive or object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\r\n     * @example\r\n     *\r\n     * isBoolean(false)\r\n     * // => true\r\n     *\r\n     * isBoolean(null)\r\n     * // => false\r\n     */\r\n    function isBoolean(obj) {\r\n       return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\r\n       //return typeof(obj) === \"boolean\";\r\n    }\r\n\r\n    function isDefined(obj) {\r\n        return typeof obj !== 'undefined';\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\r\n    }\r\n\r\n   // Is a given value a DOM element?\r\n    function isElement(obj) {\r\n        return !!(obj && obj.nodeType === 1);\r\n    }   \r\n\r\n    function isEmptyObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n            if (obj[name] !== null) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    /**\r\n     * Checks if `value` is classified as a `Function` object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\r\n     * @example\r\n     *\r\n     * isFunction(parseInt)\r\n     * // => true\r\n     *\r\n     * isFunction(/abc/)\r\n     * // => false\r\n     */\r\n    function isFunction(value) {\r\n        return type(value) == \"function\";\r\n    }\r\n\r\n\r\n\r\n    function isHtmlNode(obj) {\r\n        return obj && obj.nodeType; // obj instanceof Node; //Consider the elements in IFRAME\r\n    }\r\n\r\n    function isInstanceOf( /*Object*/ value, /*Type*/ type) {\r\n        //Tests whether the value is an instance of a type.\r\n        if (value === undefined) {\r\n            return false;\r\n        } else if (value === null || type == Object) {\r\n            return true;\r\n        } else if (typeof value === \"number\") {\r\n            return type === Number;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else if (typeof value === \"boolean\") {\r\n            return type === Boolean;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else {\r\n            return (value instanceof type) || (value && value.isInstanceOf ? value.isInstanceOf(type) : false);\r\n        }\r\n    }\r\n\r\n    function isNull(obj) {\r\n        return obj === null;\r\n    }\r\n\r\n    function isNumber(obj) {\r\n        return typeof obj == 'number';\r\n    }\r\n\r\n    function isObject(obj) {\r\n        var type = typeof obj;\r\n        return type === 'function' || type === 'object' && !!obj;        \r\n        //return type(obj) == \"object\";\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return obj && obj == obj.window;\r\n    }\r\n\r\n    function isSameOrigin(href) {\r\n        if (href) {\r\n            var origin = location.protocol + '//' + location.hostname;\r\n            if (location.port) {\r\n                origin += ':' + location.port;\r\n            }\r\n            return href.startsWith(origin);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is classified as a `Symbol` primitive or object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\r\n     * @example\r\n     *\r\n     * _.isSymbol(Symbol.iterator);\r\n     * // => true\r\n     *\r\n     * _.isSymbol('abc');\r\n     * // => false\r\n     */\r\n    function isSymbol(value) {\r\n      return typeof value == 'symbol' ||\r\n        (isObjectLike(value) && objectToString.call(value) == symbolTag);\r\n    }\r\n\r\n    // Is a given variable undefined?\r\n    function isUndefined(obj) {\r\n        return obj === void 0;\r\n    }\r\n\r\n    return skylark.attach(\"langx.types\",{\r\n\r\n        isArray: isArray,\r\n\r\n        isArrayLike: isArrayLike,\r\n\r\n        isBoolean: isBoolean,\r\n\r\n        isDefined: isDefined,\r\n\r\n        isDocument: isDocument,\r\n\r\n        isElement,\r\n\r\n        isEmpty : isEmptyObject,\r\n\r\n        isEmptyObject: isEmptyObject,\r\n\r\n        isFunction: isFunction,\r\n\r\n        isHtmlNode: isHtmlNode,\r\n\r\n        isNaN : function (obj) {\r\n            return isNaN(obj);\r\n        },\r\n\r\n        isNull: isNull,\r\n\r\n\r\n        isNumber: isNumber,\r\n\r\n        isNumeric: isNumber,\r\n\r\n        isObject: isObject,\r\n\r\n        isPlainObject: isPlainObject,\r\n\r\n        isString: isString,\r\n\r\n        isSameOrigin: isSameOrigin,\r\n\r\n        isSymbol : isSymbol,\r\n\r\n        isUndefined: isUndefined,\r\n\r\n        isWindow: isWindow,\r\n\r\n        type: type\r\n    });\r\n\r\n});\ndefine('skylark-langx-types/main',[\r\n\t\"./types\"\r\n],function(types){\r\n\treturn types;\r\n});\ndefine('skylark-langx-types', ['skylark-langx-types/main'], function (main) { return main; });\n\ndefine('skylark-langx-numbers/numbers',[\r\n    \"skylark-langx-ns\",\r\n    \"skylark-langx-types\"\r\n],function(skylark,types){\r\n\tvar isObject = types.isObject,\r\n\t\tisSymbol = types.isSymbol;\r\n\r\n\tvar INFINITY = 1 / 0,\r\n\t    MAX_SAFE_INTEGER = 9007199254740991,\r\n\t    MAX_INTEGER = 1.7976931348623157e+308,\r\n\t    NAN = 0 / 0;\r\n\r\n\t/** Used to match leading and trailing whitespace. */\r\n\tvar reTrim = /^\\s+|\\s+$/g;\r\n\r\n\t/** Used to detect bad signed hexadecimal string values. */\r\n\tvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\r\n\r\n\t/** Used to detect binary string values. */\r\n\tvar reIsBinary = /^0b[01]+$/i;\r\n\r\n\t/** Used to detect octal string values. */\r\n\tvar reIsOctal = /^0o[0-7]+$/i;\r\n\r\n\t/** Used to detect unsigned integer values. */\r\n\tvar reIsUint = /^(?:0|[1-9]\\d*)$/;\r\n\r\n\t/** Built-in method references without a dependency on `root`. */\r\n\tvar freeParseInt = parseInt;\r\n\r\n\t/**\r\n\t * Converts `value` to a finite number.\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @since 4.12.0\r\n\t * @category Lang\r\n\t * @param {*} value The value to convert.\r\n\t * @returns {number} Returns the converted number.\r\n\t * @example\r\n\t *\r\n\t * _.toFinite(3.2);\r\n\t * // => 3.2\r\n\t *\r\n\t * _.toFinite(Number.MIN_VALUE);\r\n\t * // => 5e-324\r\n\t *\r\n\t * _.toFinite(Infinity);\r\n\t * // => 1.7976931348623157e+308\r\n\t *\r\n\t * _.toFinite('3.2');\r\n\t * // => 3.2\r\n\t */\r\n\tfunction toFinite(value) {\r\n\t  if (!value) {\r\n\t    return value === 0 ? value : 0;\r\n\t  }\r\n\t  value = toNumber(value);\r\n\t  if (value === INFINITY || value === -INFINITY) {\r\n\t    var sign = (value < 0 ? -1 : 1);\r\n\t    return sign * MAX_INTEGER;\r\n\t  }\r\n\t  return value === value ? value : 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts `value` to an integer.\r\n\t *\r\n\t * **Note:** This method is loosely based on\r\n\t * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @param {*} value The value to convert.\r\n\t * @returns {number} Returns the converted integer.\r\n\t * @example\r\n\t *\r\n\t * _.toInteger(3.2);\r\n\t * // => 3\r\n\t *\r\n\t * _.toInteger(Number.MIN_VALUE);\r\n\t * // => 0\r\n\t *\r\n\t * _.toInteger(Infinity);\r\n\t * // => 1.7976931348623157e+308\r\n\t *\r\n\t * _.toInteger('3.2');\r\n\t * // => 3\r\n\t */\r\n\tfunction toInteger(value) {\r\n\t  var result = toFinite(value),\r\n\t      remainder = result % 1;\r\n\r\n\t  return result === result ? (remainder ? result - remainder : result) : 0;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Converts `value` to a number.\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @since 4.0.0\r\n\t * @category Lang\r\n\t * @param {*} value The value to process.\r\n\t * @returns {number} Returns the number.\r\n\t * @example\r\n\t *\r\n\t * _.toNumber(3.2);\r\n\t * // => 3.2\r\n\t *\r\n\t * _.toNumber(Number.MIN_VALUE);\r\n\t * // => 5e-324\r\n\t *\r\n\t * _.toNumber(Infinity);\r\n\t * // => Infinity\r\n\t *\r\n\t * _.toNumber('3.2');\r\n\t * // => 3.2\r\n\t */\r\n\tfunction toNumber(value) {\r\n\t  if (typeof value == 'number') {\r\n\t    return value;\r\n\t  }\r\n\t  if (isSymbol(value)) {\r\n\t    return NAN;\r\n\t  }\r\n\t  if (isObject(value)) {\r\n\t    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\r\n\t    value = isObject(other) ? (other + '') : other;\r\n\t  }\r\n\t  if (typeof value != 'string') {\r\n\t    return value === 0 ? value : +value;\r\n\t  }\r\n\t  value = value.replace(reTrim, '');\r\n\t  var isBinary = reIsBinary.test(value);\r\n\t  return (isBinary || reIsOctal.test(value))\r\n\t    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\r\n\t    : (reIsBadHex.test(value) ? NAN : +value);\r\n\t}\r\n\r\n\treturn  skylark.attach(\"langx.numbers\",{\r\n\t\ttoFinite : toFinite,\r\n\t\ttoNumber : toNumber,\r\n\t\ttoInteger : toInteger\r\n\t});\r\n});\ndefine('skylark-langx-numbers/main',[\r\n\t\"./numbers\"\r\n],function(numbers){\r\n\treturn numbers;\r\n});\ndefine('skylark-langx-numbers', ['skylark-langx-numbers/main'], function (main) { return main; });\n\ndefine('skylark-langx-objects/objects',[\r\n    \"skylark-langx-ns/ns\",\r\n    \"skylark-langx-ns/_attach\",\r\n\t\"skylark-langx-types\",\r\n    \"skylark-langx-numbers\"\r\n],function(skylark,_attach,types,numbers){\r\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty,\r\n        slice = Array.prototype.slice,\r\n        isBoolean = types.isBoolean,\r\n        isFunction = types.isFunction,\r\n\t\tisObject = types.isObject,\r\n\t\tisPlainObject = types.isPlainObject,\r\n\t\tisArray = types.isArray,\r\n        isArrayLike = types.isArrayLike,\r\n        isString = types.isString,\r\n        toInteger = numbers.toInteger;\r\n\r\n     // An internal function for creating assigner functions.\r\n    function createAssigner(keysFunc, defaults) {\r\n        return function(obj) {\r\n          var length = arguments.length;\r\n          if (defaults) obj = Object(obj);  \r\n          if (length < 2 || obj == null) return obj;\r\n          for (var index = 1; index < length; index++) {\r\n            var source = arguments[index],\r\n                keys = keysFunc(source),\r\n                l = keys.length;\r\n            for (var i = 0; i < l; i++) {\r\n              var key = keys[i];\r\n              if (!defaults || obj[key] === void 0) obj[key] = source[key];\r\n            }\r\n          }\r\n          return obj;\r\n       };\r\n    }\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    var eq, deepEq;\r\n    var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\r\n\r\n    eq = function(a, b, aStack, bStack) {\r\n        // Identical objects are equal. `0 === -0`, but they aren't identical.\r\n        // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n        if (a === b) return a !== 0 || 1 / a === 1 / b;\r\n        // `null` or `undefined` only equal to itself (strict comparison).\r\n        if (a == null || b == null) return false;\r\n        // `NaN`s are equivalent, but non-reflexive.\r\n        if (a !== a) return b !== b;\r\n        // Exhaust primitive checks\r\n        var type = typeof a;\r\n        if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\r\n        return deepEq(a, b, aStack, bStack);\r\n    };\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    deepEq = function(a, b, aStack, bStack) {\r\n        // Unwrap any wrapped objects.\r\n        //if (a instanceof _) a = a._wrapped;\r\n        //if (b instanceof _) b = b._wrapped;\r\n        // Compare `[[Class]]` names.\r\n        var className = toString.call(a);\r\n        if (className !== toString.call(b)) return false;\r\n        switch (className) {\r\n            // Strings, numbers, regular expressions, dates, and booleans are compared by value.\r\n            case '[object RegExp]':\r\n            // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\r\n            case '[object String]':\r\n                // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n                // equivalent to `new String(\"5\")`.\r\n                return '' + a === '' + b;\r\n            case '[object Number]':\r\n                // `NaN`s are equivalent, but non-reflexive.\r\n                // Object(NaN) is equivalent to NaN.\r\n                if (+a !== +a) return +b !== +b;\r\n                // An `egal` comparison is performed for other numeric values.\r\n                return +a === 0 ? 1 / +a === 1 / b : +a === +b;\r\n            case '[object Date]':\r\n            case '[object Boolean]':\r\n                // Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n                // millisecond representations. Note that invalid dates with millisecond representations\r\n                // of `NaN` are not equivalent.\r\n                return +a === +b;\r\n            case '[object Symbol]':\r\n                return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\r\n        }\r\n\r\n        var areArrays = className === '[object Array]';\r\n        if (!areArrays) {\r\n            if (typeof a != 'object' || typeof b != 'object') return false;\r\n            // Objects with different constructors are not equivalent, but `Object`s or `Array`s\r\n            // from different frames are.\r\n            var aCtor = a.constructor, bCtor = b.constructor;\r\n            if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\r\n                               isFunction(bCtor) && bCtor instanceof bCtor)\r\n                          && ('constructor' in a && 'constructor' in b)) {\r\n                return false;\r\n            }\r\n        }\r\n        // Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n\r\n        // Initializing stack of traversed objects.\r\n        // It's done here since we only need them for objects and arrays comparison.\r\n        aStack = aStack || [];\r\n        bStack = bStack || [];\r\n        var length = aStack.length;\r\n        while (length--) {\r\n            // Linear search. Performance is inversely proportional to the number of\r\n            // unique nested structures.\r\n            if (aStack[length] === a) return bStack[length] === b;\r\n        }\r\n\r\n        // Add the first object to the stack of traversed objects.\r\n        aStack.push(a);\r\n        bStack.push(b);\r\n\r\n        // Recursively compare objects and arrays.\r\n        if (areArrays) {\r\n            // Compare array lengths to determine if a deep comparison is necessary.\r\n            length = a.length;\r\n            if (length !== b.length) return false;\r\n            // Deep compare the contents, ignoring non-numeric properties.\r\n            while (length--) {\r\n                if (!eq(a[length], b[length], aStack, bStack)) return false;\r\n            }\r\n        } else {\r\n            // Deep compare objects.\r\n            var keys = Object.keys(a), key;\r\n            length = keys.length;\r\n            // Ensure that both objects contain the same number of properties before comparing deep equality.\r\n            if (Object.keys(b).length !== length) return false;\r\n            while (length--) {\r\n                // Deep compare each member\r\n                key = keys[length];\r\n                if (!(b[key]!==undefined && eq(a[key], b[key], aStack, bStack))) return false;\r\n            }\r\n        }\r\n        // Remove the first object from the stack of traversed objects.\r\n        aStack.pop();\r\n        bStack.pop();\r\n        return true;\r\n    };\r\n\r\n    // Retrieve all the property names of an object.\r\n    function allKeys(obj) {\r\n        if (!isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function each(obj, callback) {\r\n        var length, key, i, undef, value;\r\n\r\n        if (obj) {\r\n            length = obj.length;\r\n\r\n            if (length === undef) {\r\n                // Loop object items\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        value = obj[key];\r\n                        if (callback.call(value, key, value) === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Loop array items\r\n                for (i = 0; i < length; i++) {\r\n                    value = obj[i];\r\n                    if (callback.call(value, i, value) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function extend(target) {\r\n        var deep, args = slice.call(arguments, 1);\r\n        if (typeof target == 'boolean') {\r\n            deep = target\r\n            target = args.shift()\r\n        }\r\n        if (args.length == 0) {\r\n            args = [target];\r\n            target = this;\r\n        }\r\n        args.forEach(function(arg) {\r\n            mixin(target, arg, deep);\r\n        });\r\n        return target;\r\n    }\r\n\r\n    // Retrieve the names of an object's own properties.\r\n    // Delegates to **ECMAScript 5**'s native `Object.keys`.\r\n    function keys(obj) {\r\n        if (isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) if (has(obj, key)) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function has(obj, path) {\r\n        if (!isArray(path)) {\r\n            return obj != null && hasOwnProperty.call(obj, path);\r\n        }\r\n        var length = path.length;\r\n        for (var i = 0; i < length; i++) {\r\n            var key = path[i];\r\n            if (obj == null || !hasOwnProperty.call(obj, key)) {\r\n                return false;\r\n            }\r\n            obj = obj[key];\r\n        }\r\n        return !!length;\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\r\n     * checked for a substring of `value`, otherwise\r\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\r\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\r\n     * the offset from the end of `collection`.\r\n     *\r\n     * @static\r\n     * @memberOf _\r\n     * @since 0.1.0\r\n     * @category Collection\r\n     * @param {Array|Object|string} collection The collection to inspect.\r\n     * @param {*} value The value to search for.\r\n     * @param {number} [fromIndex=0] The index to search from.\r\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\r\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\r\n     * @example\r\n     *\r\n     * _.includes([1, 2, 3], 1);\r\n     * // => true\r\n     *\r\n     * _.includes([1, 2, 3], 1, 2);\r\n     * // => false\r\n     *\r\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\r\n     * // => true\r\n     *\r\n     * _.includes('abcd', 'bc');\r\n     * // => true\r\n     */\r\n    function includes(collection, value, fromIndex, guard) {\r\n      collection = isArrayLike(collection) ? collection : values(collection);\r\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\r\n\r\n      var length = collection.length;\r\n      if (fromIndex < 0) {\r\n        fromIndex = nativeMax(length + fromIndex, 0);\r\n      }\r\n      return isString(collection)\r\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\r\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\r\n    }\r\n\r\n\r\n   // Perform a deep comparison to check if two objects are equal.\r\n    function isEqual(a, b) {\r\n        return eq(a, b);\r\n    }\r\n\r\n    // Returns whether an object has a given set of `key:value` pairs.\r\n    function isMatch(object, attrs) {\r\n        var keys = keys(attrs), length = keys.length;\r\n        if (object == null) return !length;\r\n        var obj = Object(object);\r\n        for (var i = 0; i < length; i++) {\r\n          var key = keys[i];\r\n          if (attrs[key] !== obj[key] || !(key in obj)) return false;\r\n        }\r\n        return true;\r\n    }    \r\n\r\n    function _mixin(target, source, deep, safe) {\r\n        for (var key in source) {\r\n            //if (!source.hasOwnProperty(key)) {\r\n            //    continue;\r\n            //}\r\n            if (safe && target[key] !== undefined) {\r\n                continue;\r\n            }\r\n            if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n                if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\r\n                    target[key] = {};\r\n                }\r\n                if (isArray(source[key]) && !isArray(target[key])) {\r\n                    target[key] = [];\r\n                }\r\n                _mixin(target[key], source[key], deep, safe);\r\n            } else if (source[key] !== undefined) {\r\n                target[key] = source[key]\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function _parseMixinArgs(args) {\r\n        var params = slice.call(arguments, 0),\r\n            target = params.shift(),\r\n            deep = false;\r\n        if (isBoolean(params[params.length - 1])) {\r\n            deep = params.pop();\r\n        }\r\n\r\n        return {\r\n            target: target,\r\n            sources: params,\r\n            deep: deep\r\n        };\r\n    }\r\n\r\n    function mixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, false);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n   // Return a copy of the object without the blacklisted properties.\r\n    function omit(obj, prop1,prop2) {\r\n        if (!obj) {\r\n            return null;\r\n        }\r\n        var result = mixin({},obj);\r\n        for(var i=1;i<arguments.length;i++) {\r\n            var pn = arguments[i];\r\n            if (pn in obj) {\r\n                delete result[pn];\r\n            }\r\n        }\r\n        return result;\r\n\r\n    }\r\n\r\n   // Return a copy of the object only containing the whitelisted properties.\r\n    function pick(obj,prop1,prop2) {\r\n        if (!obj) {\r\n            return null;\r\n        }\r\n        var result = {};\r\n        for(var i=1;i<arguments.length;i++) {\r\n            var pn = arguments[i];\r\n            if (pn in obj) {\r\n                result[pn] = obj[pn];\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function removeItem(items, item) {\r\n        if (isArray(items)) {\r\n            var idx = items.indexOf(item);\r\n            if (idx != -1) {\r\n                items.splice(idx, 1);\r\n            }\r\n        } else if (isPlainObject(items)) {\r\n            for (var key in items) {\r\n                if (items[key] == item) {\r\n                    delete items[key];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function result(obj, path, fallback) {\r\n        if (!isArray(path)) {\r\n            path = path.split(\".\");//[path]\r\n        };\r\n        var length = path.length;\r\n        if (!length) {\r\n          return isFunction(fallback) ? fallback.call(obj) : fallback;\r\n        }\r\n        for (var i = 0; i < length; i++) {\r\n          var prop = obj == null ? void 0 : obj[path[i]];\r\n          if (prop === void 0) {\r\n            prop = fallback;\r\n            i = length; // Ensure we don't continue iterating.\r\n          }\r\n          obj = isFunction(prop) ? prop.call(obj) : prop;\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    function safeMixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, true);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    // Retrieve the values of an object's properties.\r\n    function values(obj) {\r\n        var keys = allKeys(obj);\r\n        var length = keys.length;\r\n        var values = Array(length);\r\n        for (var i = 0; i < length; i++) {\r\n            values[i] = obj[keys[i]];\r\n        }\r\n        return values;\r\n    }\r\n\r\n    function clone( /*anything*/ src,checkCloneMethod) {\r\n        var copy;\r\n        if (src === undefined || src === null) {\r\n            copy = src;\r\n        } else if (checkCloneMethod && src.clone) {\r\n            copy = src.clone();\r\n        } else if (isArray(src)) {\r\n            copy = [];\r\n            for (var i = 0; i < src.length; i++) {\r\n                copy.push(clone(src[i]));\r\n            }\r\n        } else if (isPlainObject(src)) {\r\n            copy = {};\r\n            for (var key in src) {\r\n                copy[key] = clone(src[key]);\r\n            }\r\n        } else {\r\n            copy = src;\r\n        }\r\n\r\n        return copy;\r\n\r\n    }\r\n\r\n    return skylark.attach(\"langx.objects\",{\r\n        allKeys: allKeys,\r\n\r\n        attach : _attach,\r\n\r\n        clone: clone,\r\n\r\n        defaults : createAssigner(allKeys, true),\r\n\r\n        each : each,\r\n\r\n        extend : extend,\r\n\r\n        has: has,\r\n\r\n        isEqual: isEqual,   \r\n\r\n        includes: includes,\r\n\r\n        isMatch: isMatch,\r\n\r\n        keys: keys,\r\n\r\n        mixin: mixin,\r\n\r\n        omit: omit,\r\n\r\n        pick: pick,\r\n\r\n        removeItem: removeItem,\r\n\r\n        result : result,\r\n        \r\n        safeMixin: safeMixin,\r\n\r\n        values: values\r\n    });\r\n\r\n\r\n});\ndefine('skylark-langx-objects/main',[\r\n\t\"./objects\"\r\n],function(objects){\r\n\treturn objects;\r\n});\ndefine('skylark-langx-objects', ['skylark-langx-objects/main'], function (main) { return main; });\n\ndefine('skylark-langx/objects',[\r\n    \"skylark-langx-objects\"\r\n],function(objects){\r\n    return objects;\r\n});\ndefine('skylark-langx-arrays/arrays',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\"\r\n],function(skylark,types,objects){\r\n  var filter = Array.prototype.filter,\r\n      find = Array.prototype.find,\r\n    isArrayLike = types.isArrayLike;\r\n\r\n    /**\r\n     * The base implementation of `_.findIndex` and `_.findLastIndex` without\r\n     * support for iteratee shorthands.\r\n     *\r\n     * @param {Array} array The array to inspect.\r\n     * @param {Function} predicate The function invoked per iteration.\r\n     * @param {number} fromIndex The index to search from.\r\n     * @param {boolean} [fromRight] Specify iterating from right to left.\r\n     * @returns {number} Returns the index of the matched value, else `-1`.\r\n     */\r\n    function baseFindIndex(array, predicate, fromIndex, fromRight) {\r\n      var length = array.length,\r\n          index = fromIndex + (fromRight ? 1 : -1);\r\n\r\n      while ((fromRight ? index-- : ++index < length)) {\r\n        if (predicate(array[index], index, array)) {\r\n          return index;\r\n        }\r\n      }\r\n      return -1;\r\n    }\r\n\r\n    /**\r\n     * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\r\n     *\r\n     * @param {Array} array The array to inspect.\r\n     * @param {*} value The value to search for.\r\n     * @param {number} fromIndex The index to search from.\r\n     * @returns {number} Returns the index of the matched value, else `-1`.\r\n     */\r\n    function baseIndexOf(array, value, fromIndex) {\r\n      if (value !== value) {\r\n        return baseFindIndex(array, baseIsNaN, fromIndex);\r\n      }\r\n      var index = fromIndex - 1,\r\n          length = array.length;\r\n\r\n      while (++index < length) {\r\n        if (array[index] === value) {\r\n          return index;\r\n        }\r\n      }\r\n      return -1;\r\n    }\r\n\r\n    /**\r\n     * The base implementation of `isNaN` without support for number objects.\r\n     *\r\n     * @private\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\r\n     */\r\n    function baseIsNaN(value) {\r\n      return value !== value;\r\n    }\r\n\r\n\r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n\r\n    function filter2(array,func) {\r\n      return filter.call(array,func);\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0; i < array.length; i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j < item.length; j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        objects.each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item);\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n       if (isArrayLike(obj) ) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n      }\r\n\r\n      // array of single index\r\n      return [ obj ];             \r\n    }\r\n\r\n\r\n    function forEach (arr, fn) {\r\n      if (arr.forEach) return arr.forEach(fn)\r\n      for (var i = 0; i < arr.length; i++) fn(arr[i], i);\r\n    }\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n\r\n    function merge( first, second ) {\r\n      var l = second.length,\r\n          i = first.length,\r\n          j = 0;\r\n\r\n      if ( typeof l === \"number\" ) {\r\n        for ( ; j < l; j++ ) {\r\n          first[ i++ ] = second[ j ];\r\n        }\r\n      } else {\r\n        while ( second[j] !== undefined ) {\r\n          first[ i++ ] = second[ j++ ];\r\n        }\r\n      }\r\n\r\n      first.length = i;\r\n\r\n      return first;\r\n    }\r\n\r\n    function reduce(array,callback,initialValue) {\r\n        return Array.prototype.reduce.call(array,callback,initialValue);\r\n    }\r\n\r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    function find2(array,func) {\r\n      return find.call(array,func);\r\n    }\r\n\r\n    return skylark.attach(\"langx.arrays\",{\r\n        baseFindIndex: baseFindIndex,\r\n\r\n        baseIndexOf : baseIndexOf,\r\n        \r\n        compact: compact,\r\n\r\n        first : function(items,n) {\r\n            if (n) {\r\n                return items.slice(0,n);\r\n            } else {\r\n                return items[0];\r\n            }\r\n        },\r\n\r\n        filter : filter2,\r\n\r\n        find : find2,\r\n        \r\n        flatten: flatten,\r\n\r\n        grep: grep,\r\n\r\n        inArray: inArray,\r\n\r\n        makeArray: makeArray,\r\n\r\n        merge : merge,\r\n\r\n        forEach : forEach,\r\n\r\n        map : map,\r\n        \r\n        reduce : reduce,\r\n\r\n        uniq : uniq\r\n\r\n    });\r\n});\ndefine('skylark-langx-arrays/main',[\r\n\t\"./arrays\"\r\n],function(arrays){\r\n\treturn arrays;\r\n});\ndefine('skylark-langx-arrays', ['skylark-langx-arrays/main'], function (main) { return main; });\n\ndefine('skylark-langx-klass/klass',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-arrays\",\r\n],function(skylark,types,objects,arrays){\r\n    var uniq = arrays.uniq,\r\n        has = objects.has,\r\n        mixin = objects.mixin,\r\n        isArray = types.isArray,\r\n        isDefined = types.isDefined;\r\n\r\n/* for reference \r\n function klass(props,parent) {\r\n    var ctor = function(){\r\n        this._construct();\r\n    };\r\n    ctor.prototype = props;\r\n    if (parent) {\r\n        ctor._proto_ = parent;\r\n        props.__proto__ = parent.prototype;\r\n    }\r\n    return ctor;\r\n}\r\n\r\n// Type some JavaScript code here.\r\nlet animal = klass({\r\n  _construct(){\r\n      this.name = this.name + \",hi\";\r\n  },\r\n    \r\n  name: \"Animal\",\r\n  eat() {         // [[HomeObject]] == animal\r\n    alert(`${this.name} eats.`);\r\n  }\r\n    \r\n    \r\n});\r\n\r\n\r\nlet rabbit = klass({\r\n  name: \"Rabbit\",\r\n  _construct(){\r\n      super._construct();\r\n  },\r\n  eat() {         // [[HomeObject]] == rabbit\r\n    super.eat();\r\n  }\r\n},animal);\r\n\r\nlet longEar = klass({\r\n  name: \"Long Ear\",\r\n  eat() {         // [[HomeObject]] == longEar\r\n    super.eat();\r\n  }\r\n},rabbit);\r\n*/\r\n    \r\n    function inherit(ctor, base) {\r\n        var f = function() {};\r\n        f.prototype = base.prototype;\r\n\r\n        ctor.prototype = new f();\r\n    }\r\n\r\n    var f1 = function() {\r\n        function extendClass(ctor, props, options) {\r\n            // Copy the properties to the prototype of the class.\r\n            var proto = ctor.prototype,\r\n                _super = ctor.superclass.prototype,\r\n                noOverrided = options && options.noOverrided,\r\n                overrides = options && options.overrides || {};\r\n\r\n            for (var name in props) {\r\n                if (name === \"constructor\") {\r\n                    continue;\r\n                }\r\n\r\n                // Check if we're overwriting an existing function\r\n                var prop = props[name];\r\n                if (typeof props[name] == \"function\") {\r\n                    proto[name] =  !prop._constructor && !noOverrided && typeof _super[name] == \"function\" ?\r\n                          (function(name, fn, superFn) {\r\n                            return function() {\r\n                                var tmp = this.overrided;\r\n\r\n                                // Add a new ._super() method that is the same method\r\n                                // but on the super-class\r\n                                this.overrided = superFn;\r\n\r\n                                // The method only need to be bound temporarily, so we\r\n                                // remove it when we're done executing\r\n                                var ret = fn.apply(this, arguments);\r\n\r\n                                this.overrided = tmp;\r\n\r\n                                return ret;\r\n                            };\r\n                        })(name, prop, _super[name]) :\r\n                        prop;\r\n                } else if (types.isPlainObject(prop) && prop!==null && (prop.get)) {\r\n                    Object.defineProperty(proto,name,prop);\r\n                } else {\r\n                    proto[name] = prop;\r\n                }\r\n            }\r\n            return ctor;\r\n        }\r\n\r\n        function serialMixins(ctor,mixins) {\r\n            var result = [];\r\n\r\n            mixins.forEach(function(mixin){\r\n                if (has(mixin,\"__mixins__\")) {\r\n                     throw new Error(\"nested mixins\");\r\n                }\r\n                var clss = [];\r\n                while (mixin) {\r\n                    clss.unshift(mixin);\r\n                    mixin = mixin.superclass;\r\n                }\r\n                result = result.concat(clss);\r\n            });\r\n\r\n            result = uniq(result);\r\n\r\n            result = result.filter(function(mixin){\r\n                var cls = ctor;\r\n                while (cls) {\r\n                    if (mixin === cls) {\r\n                        return false;\r\n                    }\r\n                    if (has(cls,\"__mixins__\")) {\r\n                        var clsMixines = cls[\"__mixins__\"];\r\n                        for (var i=0; i<clsMixines.length;i++) {\r\n                            if (clsMixines[i]===mixin) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                    cls = cls.superclass;\r\n                }\r\n                return true;\r\n            });\r\n\r\n            if (result.length>0) {\r\n                return result;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        function mergeMixins(ctor,mixins) {\r\n            var newCtor =ctor;\r\n            for (var i=0;i<mixins.length;i++) {\r\n                var xtor = new Function();\r\n                xtor.prototype = Object.create(newCtor.prototype);\r\n                xtor.__proto__ = newCtor;\r\n                xtor.superclass = null;\r\n                mixin(xtor.prototype,mixins[i].prototype);\r\n                xtor.prototype.__mixin__ = mixins[i];\r\n                newCtor = xtor;\r\n            }\r\n\r\n            return newCtor;\r\n        }\r\n\r\n        function _constructor ()  {\r\n            if (this._construct) {\r\n                return this._construct.apply(this, arguments);\r\n            } else  if (this.init) {\r\n                return this.init.apply(this, arguments);\r\n            }\r\n        }\r\n\r\n        return function createClass(props, parent, mixins,options) {\r\n            if (isArray(parent)) {\r\n                options = mixins;\r\n                mixins = parent;\r\n                parent = null;\r\n            }\r\n            parent = parent || Object;\r\n\r\n            if (isDefined(mixins) && !isArray(mixins)) {\r\n                options = mixins;\r\n                mixins = false;\r\n            }\r\n\r\n            var innerParent = parent;\r\n\r\n            if (mixins) {\r\n                mixins = serialMixins(innerParent,mixins);\r\n            }\r\n\r\n            if (mixins) {\r\n                innerParent = mergeMixins(innerParent,mixins);\r\n            }\r\n\r\n            var klassName = props.klassName || \"\",\r\n                ctor = new Function(\r\n                    \"return function \" + klassName + \"() {\" +\r\n                    \"var inst = this,\" +\r\n                    \" ctor = arguments.callee;\" +\r\n                    \"if (!(inst instanceof ctor)) {\" +\r\n                    \"inst = Object.create(ctor.prototype);\" +\r\n                    \"}\" +\r\n                    \"return ctor._constructor.apply(inst, arguments) || inst;\" + \r\n                    \"}\"\r\n                )();\r\n\r\n\r\n            // Populate our constructed prototype object\r\n            ctor.prototype = Object.create(innerParent.prototype);\r\n\r\n            // Enforce the constructor to be what we expect\r\n            ctor.prototype.constructor = ctor;\r\n            ctor.superclass = parent;\r\n\r\n            // And make this class extendable\r\n            ctor.__proto__ = innerParent;\r\n\r\n\r\n            if (!ctor._constructor) {\r\n                ctor._constructor = _constructor;\r\n            } \r\n\r\n            if (mixins) {\r\n                ctor.__mixins__ = mixins;\r\n            }\r\n\r\n            if (!ctor.partial) {\r\n                ctor.partial = function(props, options) {\r\n                    return extendClass(this, props, options);\r\n                };\r\n            }\r\n            if (!ctor.inherit) {\r\n                ctor.inherit = function(props, mixins,options) {\r\n                    return createClass(props, this, mixins,options);\r\n                };\r\n            }\r\n\r\n            ctor.partial(props, options);\r\n\r\n            return ctor;\r\n        };\r\n    }\r\n\r\n    var createClass = f1();\r\n\r\n    return skylark.attach(\"langx.klass\",createClass);\r\n});\ndefine('skylark-langx-klass/main',[\r\n\t\"./klass\"\r\n],function(klass){\r\n\treturn klass;\r\n});\ndefine('skylark-langx-klass', ['skylark-langx-klass/main'], function (main) { return main; });\n\ndefine('skylark-langx-funcs/funcs',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\"\r\n],function(skylark,types,objects){\r\n\tvar mixin = objects.mixin,\r\n        slice = Array.prototype.slice,\r\n        isFunction = types.isFunction,\r\n        isString = types.isString;\r\n\r\n    function defer(fn) {\r\n        if (requestAnimationFrame) {\r\n            requestAnimationFrame(fn);\r\n        } else {\r\n            setTimeoutout(fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function noop() {\r\n    }\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n    function debounce(fn, wait) {\r\n        var timeout;\r\n        return function () {\r\n            var context = this, args = arguments;\r\n            var later = function () {\r\n                timeout = null;\r\n                fn.apply(context, args);\r\n            };\r\n            if (timeout) clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n   \r\n    var delegate = (function() {\r\n        // boodman/crockford delegation w/ cornford optimization\r\n        function TMP() {}\r\n        return function(obj, props) {\r\n            TMP.prototype = obj;\r\n            var tmp = new TMP();\r\n            TMP.prototype = null;\r\n            if (props) {\r\n                mixin(tmp, props);\r\n            }\r\n            return tmp; // Object\r\n        };\r\n    })();\r\n\r\n\r\n    // By default, Underscore uses ERB-style template delimiters, change the\r\n    // following template settings to use alternative delimiters.\r\n    var templateSettings = {\r\n        evaluate: /<%([\\s\\S]+?)%>/g,\r\n        interpolate: /<%=([\\s\\S]+?)%>/g,\r\n        escape: /<%-([\\s\\S]+?)%>/g\r\n    };\r\n\r\n    // When customizing `templateSettings`, if you don't want to define an\r\n    // interpolation, evaluation or escaping regex, we need one that is\r\n    // guaranteed not to match.\r\n    var noMatch = /(.)^/;\r\n\r\n\r\n    // Certain characters need to be escaped so that they can be put into a\r\n    // string literal.\r\n    var escapes = {\r\n      \"'\":      \"'\",\r\n      '\\\\':     '\\\\',\r\n      '\\r':     'r',\r\n      '\\n':     'n',\r\n      '\\t':     't',\r\n      '\\u2028': 'u2028',\r\n      '\\u2029': 'u2029'\r\n    };\r\n\r\n    var escaper = /\\\\|'|\\r|\\n|\\t|\\u2028|\\u2029/g;\r\n\r\n\r\n    function template(text, data, settings) {\r\n        var render;\r\n        settings = objects.defaults({}, settings,templateSettings);\r\n\r\n        // Combine delimiters into one regular expression via alternation.\r\n        var matcher = RegExp([\r\n          (settings.escape || noMatch).source,\r\n          (settings.interpolate || noMatch).source,\r\n          (settings.evaluate || noMatch).source\r\n        ].join('|') + '|$', 'g');\r\n\r\n        // Compile the template source, escaping string literals appropriately.\r\n        var index = 0;\r\n        var source = \"__p+='\";\r\n        text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\r\n          source += text.slice(index, offset)\r\n              .replace(escaper, function(match) { return '\\\\' + escapes[match]; });\r\n\r\n          if (escape) {\r\n            source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\r\n          }\r\n          if (interpolate) {\r\n            source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\r\n          }\r\n          if (evaluate) {\r\n            source += \"';\\n\" + evaluate + \"\\n__p+='\";\r\n          }\r\n          index = offset + match.length;\r\n          return match;\r\n        });\r\n        source += \"';\\n\";\r\n\r\n        // If a variable is not specified, place data values in local scope.\r\n        if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\r\n\r\n        source = \"var __t,__p='',__j=Array.prototype.join,\" +\r\n          \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\r\n          source + 'return __p;\\n';\r\n\r\n        try {\r\n          render = new Function(settings.variable || 'obj', '_', source);\r\n        } catch (e) {\r\n          e.source = source;\r\n          throw e;\r\n        }\r\n\r\n        if (data) {\r\n          return render(data,this)\r\n        }\r\n        var template = proxy(function(data) {\r\n          return render.call(this, data,this);\r\n        },this);\r\n\r\n        // Provide the compiled source as a convenience for precompilation.\r\n        var argument = settings.variable || 'obj';\r\n        template.source = 'function(' + argument + '){\\n' + source + '}';\r\n\r\n        return template;\r\n    }\r\n\r\n\r\n    /**\r\n     * Creates a function that negates the result of the predicate `func`. The\r\n     * `func` predicate is invoked with the `this` binding and arguments of the\r\n     * created function.\r\n     * @category Function\r\n     * @param {Function} predicate The predicate to negate.\r\n     * @returns {Function} Returns the new negated function.\r\n     * @example\r\n     *\r\n     * function isEven(n) {\r\n     *   return n % 2 == 0\r\n     * }\r\n     *\r\n     * filter([1, 2, 3, 4, 5, 6], negate(isEven))\r\n     * // => [1, 3, 5]\r\n     */\r\n    function negate(predicate) {\r\n      if (typeof predicate !== 'function') {\r\n        throw new TypeError('Expected a function')\r\n      }\r\n      return function(...args) {\r\n        return !predicate.apply(this, args)\r\n      }\r\n    }\r\n\r\n\r\n    return skylark.attach(\"langx.funcs\",{\r\n        bind : proxy,\r\n        \r\n        debounce: debounce,\r\n\r\n        delegate: delegate,\r\n\r\n        defer: defer,\r\n\r\n        negate: negate,\r\n\r\n        noop : noop,\r\n\r\n        proxy: proxy,\r\n\r\n        returnTrue: function() {\r\n            return true;\r\n        },\r\n\r\n        returnFalse: function() {\r\n            return false;\r\n        },\r\n\r\n        templateSettings : templateSettings,\r\n        template : template\r\n    });\r\n});\ndefine('skylark-langx-funcs/main',[\r\n\t\"./funcs\"\r\n],function(funcs){\r\n\treturn funcs;\r\n});\ndefine('skylark-langx-funcs', ['skylark-langx-funcs/main'], function (main) { return main; });\n\ndefine('skylark-langx-emitter/Event',[\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-funcs\",\r\n  \"skylark-langx-klass\",\r\n],function(objects,funcs,klass){\r\n    var eventMethods = {\r\n        preventDefault: \"isDefaultPrevented\",\r\n        stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n        stopPropagation: \"isPropagationStopped\"\r\n     };\r\n        \r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            objects.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = funcs.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = funcs.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n\r\n    /*\r\n    var Event = klass({\r\n        _construct : function(type,props) {\r\n            CustomEvent.call(this,type.props);\r\n            objects.safeMixin(this, props);\r\n            compatible(this);\r\n        }\r\n    },CustomEvent);\r\n    */\r\n\r\n    class Event extends CustomEvent {\r\n        constructor(type,props) {\r\n            super(type,props);\r\n            objects.safeMixin(this, props);\r\n            compatible(this);\r\n        } \r\n    }\r\n\r\n\r\n    Event.compatible = compatible;\r\n\r\n    return Event;\r\n    \r\n});\ndefine('skylark-langx-emitter/Emitter',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-arrays\",\r\n  \"skylark-langx-klass\",\r\n  \"./Event\"\r\n],function(skylark,types,objects,arrays,klass,Event){\r\n    var slice = Array.prototype.slice,\r\n        compact = arrays.compact,\r\n        isDefined = types.isDefined,\r\n        isPlainObject = types.isPlainObject,\r\n        isFunction = types.isFunction,\r\n        isString = types.isString,\r\n        isEmptyObject = types.isEmptyObject,\r\n        mixin = objects.mixin,\r\n        safeMixin = objects.safeMixin;\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            name: segs[0],\r\n            ns: segs.slice(1).join(\" \")\r\n        };\r\n    }\r\n\r\n    var Emitter = klass({\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(event) {\r\n                var parsed = parse(event),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    ns : ns,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        emit: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new Event(e); //new CustomEvent(e);\r\n            }\r\n\r\n            Object.defineProperty(e,\"target\",{\r\n                value : this\r\n            });\r\n\r\n            var args = slice.call(arguments, 1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var parsed = parse(eventName),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                var listeners = self._hub[name];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                        return this;\r\n                    }\r\n                    var listener = listeners[i];\r\n                    if (ns && (!listener.ns ||  !listener.ns.startsWith(ns))) {\r\n                        continue;\r\n                    }\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                obj.one(event, callback, this);\r\n            } else {\r\n                obj.on(event, callback, this);\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event, callback) {\r\n            return this.listenTo(obj, event, callback, 1);\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(event) {\r\n                var parsed = parse(event),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                var evts = _hub[name];\r\n\r\n                if (evts) {\r\n                    var liveEvents = [];\r\n\r\n                    if (callback || ns) {\r\n                        for (var i = 0, len = evts.length; i < len; i++) {\r\n                            \r\n                            if (callback && evts[i].fn !== callback && evts[i].fn._ !== callback) {\r\n                                liveEvents.push(evts[i]);\r\n                                continue;\r\n                            } \r\n\r\n                            if (ns && (!evts[i].ns || evts[i].ns.indexOf(ns)!=0)) {\r\n                                liveEvents.push(evts[i]);\r\n                                continue;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (liveEvents.length) {\r\n                        _hub[name] = liveEvents;\r\n                    } else {\r\n                        delete _hub[name];\r\n                    }\r\n\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    var listeningEvent = listeningEvents[eventName];\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        trigger  : function() {\r\n            return this.emit.apply(this,arguments);\r\n        }\r\n    });\r\n\r\n    Emitter.createEvent = function (type,props) {\r\n        //var e = new CustomEvent(type,props);\r\n        //return safeMixin(e, props);\r\n        return new Event(type,props);\r\n    };\r\n\r\n    Emitter.Event = Event;\r\n\r\n    return skylark.attach(\"langx.Emitter\",Emitter);\r\n\r\n});\ndefine('skylark-langx-emitter/Evented',[\r\n  \"skylark-langx-ns/ns\",\r\n\t\"./Emitter\"\r\n],function(skylark,Emitter){\r\n\treturn skylark.attach(\"langx.Evented\",Emitter);\r\n});\ndefine('skylark-langx-emitter/main',[\r\n\t\"./Emitter\",\r\n\t\"./Evented\"\r\n],function(Emitter){\r\n\treturn Emitter;\r\n});\ndefine('skylark-langx-emitter', ['skylark-langx-emitter/main'], function (main) { return main; });\n\ndefine('skylark-langx/Evented',[\r\n    \"skylark-langx-emitter\"\r\n],function(Evented){\r\n    return Evented;\r\n});\ndefine('skylark-data-collection/collections',[\r\n\t\"skylark-langx/skylark\"\r\n],function(skylark){\r\n\treturn skylark.attach(\"data.collections\",{});\r\n});\ndefine('skylark-data-collection/Collection',[\r\n    \"skylark-langx/Evented\",\r\n    \"./collections\"\r\n], function(Evented, collections) {\r\n\r\n    var Collection = collections.Collection = Evented.inherit({\r\n\r\n        \"klassName\": \"Collection\",\r\n\r\n        _clear: function() {\r\n            throw new Error('Unimplemented API');\r\n        },\r\n\r\n        \"clear\": function() {\r\n            //desc: \"Removes all items from the Collection\",\r\n            //result: {\r\n            //    type: Collection,\r\n            //    desc: \"this instance for chain call\"\r\n            //},\r\n            //params: [],\r\n            this._clear();\r\n            this.trigger(\"changed:clear\");\r\n            return this;\r\n        },\r\n\r\n        /*\r\n         *@method count\r\n         *@return {Number}\r\n         */\r\n        count : /*Number*/function () {\r\n            var c = 0,\r\n                it = this.iterator();\r\n            while(!it.hasNext()){\r\n                c++;\r\n            }\r\n            return c;\r\n        },\r\n\r\n        \"forEach\": function( /*Function*/ func, /*Object?*/ thisArg) {\r\n            //desc: \"Executes a provided callback function once per collection item.\",\r\n            //result: {\r\n            //    type: Number,\r\n            //    desc: \"the number of items\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"func\",\r\n            //    type: Function,\r\n            //    desc: \"Function to execute for each element.\"\r\n            //}, {\r\n            //    name: \"thisArg\",\r\n            //    type: Object,\r\n            //    desc: \"Value to use as this when executing callback.\"\r\n            //}],\r\n            var it = this.iterator();\r\n            while(it.hasNext()){\r\n                var item = it.next();\r\n                func.call(thisArg || item,item);\r\n            }\r\n            return this;\r\n\r\n        },\r\n\r\n        \"iterator\" : function() {\r\n            throw new Error('Unimplemented API');\r\n        },\r\n\r\n        \"toArray\": function() {\r\n            //desc: \"Returns an array containing all of the items in this collection in proper sequence (from first to last item).\",\r\n            //result: {\r\n            //    type: Array,\r\n            //    desc: \"an array containing all of the elements in this collection in proper sequence\"\r\n            //},\r\n            //params: [],\r\n            var items = [],\r\n                it = this.iterator();\r\n            while(!it.hasNext()){\r\n                items.push(it.next());\r\n            }\r\n            return items;\r\n        }\r\n    });\r\n\r\n    return Collection;\r\n});\r\n\n\r\ndefine('skylark-data-collection/Map',[\r\n    \"./collections\",\r\n    \"./Collection\"\r\n], function( collections, Collection) {\r\n\r\n    var Map = collections.Map = Collection.inherit({\r\n\r\n        \"klassName\": \"Map\",\r\n\r\n        _getInnerItems : function() {\r\n            return this._items;\r\n        },\r\n\r\n        _clear : function() {\r\n            this._items = [];\r\n        },\r\n\r\n        _findKeyByRegExp: function(regExp, callback) {\r\n            var items = this._getInnerItems();\r\n            return items.filter(function(key) {\r\n                if (key.match(regExp)) {\r\n                    if (callback) callback(key);\r\n                    return true;\r\n                } else {\r\n                    return false;\r\n                }\r\n            });\r\n        },\r\n\r\n        \"get\":  function(strKey, silent) {\r\n            //desc: \"Returns the item at the specified key in the Hashtable.\",\r\n            //result: {\r\n            //    type: Object,\r\n            //    desc: \"The item at the specified key.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"strKey\",\r\n            //    type: String,\r\n            //    desc: \"The key of the item to return.\"\r\n            //}, {\r\n            //    name: \"silent\",\r\n            //    type: Boolean,\r\n            //    desc: \"the silent flag.\",\r\n            //    optional: true\r\n            //}],\r\n            if (typeof(strKey) != \"string\") {\r\n                throw \"hash key is not string!\";\r\n            }\r\n            /*\r\n            if (!silent && !this.contains(strKey)) {\r\n                throw \"hash key is not  existed\";\r\n            }\r\n            */\r\n            var items = this._getInnerItems();\r\n            return items[strKey];\r\n        },\r\n\r\n        \"iterator\" : function() {\r\n            var i =0;\r\n            return {\r\n                hasNext : function() {\r\n                    return i < this._items.length;\r\n                },\r\n                next : function() {\r\n                    var key =  this._items[i++];\r\n                    return [this._items[key],key];\r\n                }\r\n            }\r\n        },\r\n\r\n        \"set\": function( /*String*/ strKey, /*Object*/ value) {\r\n            //desc: \"Replaces the item at the specified key in the Hashtable with the specified item.\",\r\n            //result: {\r\n            //    type: Map,\r\n            //    desc: \"this instance for chain call.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"strKey\",\r\n            //    type: String,\r\n            //    desc: \"key of the item to replace.\"\r\n            //}, {\r\n            //    name: \"value\",\r\n            //    type: Object,\r\n            //    desc: \"item to be stored at the specified position.\"\r\n            //}],\r\n            if (typeof(strKey) != \"string\") {\r\n                throw \"hash key is not string!\";\r\n            }\r\n\r\n            /*\r\n            if (!this.contains(strKey)) {\r\n                throw \"hash key is not existed\";\r\n            }\r\n            */\r\n\r\n            var items = this._getInnerItems();\r\n            if (items.indexOf(strKey) == -1) {\r\n                items.push(strKey);\r\n            }\r\n            var oldValue = items[strKey];\r\n            if (oldValue !== value) {\r\n                items[strKey] = value;\r\n                var updated = {};\r\n                updated[strKey] = {\r\n                    name : strKey,\r\n                    value : value,\r\n                    oldValue : oldValue\r\n                };\r\n                this.trigger(\"changed\" ,{ //TODO: \"changed:\"+ strKey\r\n                    data : updated\r\n                });\r\n            }\r\n            return this;\r\n        },\r\n\r\n\r\n        \"remove\": function( /*String*/ strKey) {\r\n            //desc: \"Removes the first occurrence of a specific item from the Hashtable\",\r\n            //result: {\r\n            //    type: Map,\r\n            //    desc: \"this instance for chain call.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"strKey\",\r\n            //    type: String,\r\n            //    desc: \"The key for The item to remove from the Hashtable.\"\r\n            //}],\r\n            if (typeof(strKey) != \"string\") {\r\n                throw \"hash key is not string!\";\r\n            }\r\n            var items = this._getInnerItems();\r\n            var idx = items.indexOf(strKey);\r\n            if (idx >= 0) {\r\n                delete items[strKey];\r\n                delete items[idx];\r\n            }\r\n        },\r\n\r\n        findByRegExp: function( /*String*/ regExp, callback) {\r\n            //desc: \"find regExp items\",\r\n            //result: {\r\n            //    type: Map,\r\n            //    desc: \"this instance for chain call.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"regExp\",\r\n            //    type: String,\r\n            //    desc: \"The key for The item to remove from the Hashtable.\"\r\n            //}, {\r\n            //    name: \"callback\",\r\n            //    type: Function,\r\n            //    desc: \"the callback method\"\r\n            //}],\r\n            var items = [],\r\n                self = this;\r\n            this._findKeyByRegExp(regExp, function(key) {\r\n                var item = self.get(key);\r\n                if (callback) callback(item);\r\n                items.push(item);\r\n            });\r\n            return items;\r\n        },\r\n\r\n        removeByRegExp: function( /*String*/ regExp) {\r\n            //desc: \"Removes regExp items\",\r\n            //result: {\r\n            //    type: Map,\r\n            //    desc: \"this instance for chain call.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"regExp\",\r\n            //    type: String,\r\n            //    desc: \"The key for The item to remove from the Hashtable.\"\r\n            //}],\r\n            var self = this;\r\n            this._findKeyByRegExp(regExp, function(key) {\r\n                self.remove(key);\r\n            });\r\n        },\r\n\r\n        \"toPlain\": function() {\r\n            //desc: \"Returns a plain object containing all of the items in this Hashable.\",\r\n            //result: {\r\n            //    type: Object,\r\n            //    desc: \"a plain object containing all of the items in this Hashtable.\"\r\n            //},\r\n            //params: [],\r\n            var items = this._getInnerItems(); \r\n\r\n            for (var i = 0; i < items.length; i++) {\r\n                var key = items[i];\r\n                plain[key] = items[key];\r\n            }\r\n            return plain;\r\n        },\r\n\r\n        \"toString\": function( /*String?*/ delim) {\r\n            //desc: \"implementation of toString, follows [].toString().\",\r\n            //result: {\r\n            //    type: String,\r\n            //   desc: \"The string.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"delim\",\r\n            //    type: String,\r\n            //    desc: \"The delim \",\r\n            //    optional: true\r\n            //}],\r\n            var items = this._getInnerItems();\r\n\r\n            return items.join((delim || \",\"));\r\n        },\r\n\r\n        \"init\": function( /*Object*/ data) {\r\n            var items = this._items = [];\r\n            for (var name in data) {\r\n                items.push(name);\r\n                items[name]= data[name];\r\n            }\r\n        }\r\n       \r\n    });\r\n    return Map;\r\n});\r\n\n\r\ndefine('skylark-data-collection/HashMap',[\r\n    \"./collections\",\r\n\t\"./Map\"\r\n],function(collections,_Map) {\r\n\r\n\tvar HashMap = collections.HashMap = _Map.inherit({\r\n\t});\r\n\r\n\treturn HashMap;\r\n});\ndefine('skylark-widgets-base/ActionManager',[\r\n\t\"skylark-langx/Evented\",\r\n\t\"./base\"\r\n], function(Evented,base){\r\n\r\n\tvar ActionManager = Evented.inherit({\r\n\t\t\"klassName\"\t\t:\t\"Manager\",\r\n\r\n\r\n\t\taddAction : function(category,name,fn,options) {\r\n\r\n\t\t},\r\n\r\n\t\texecuteAction : function() {\r\n\r\n\t\t},\r\n\r\n\t\tremoveAction : function(category,name) {\r\n\r\n\t\t}\r\n\r\n\t});\r\n\r\n\treturn base.ActionManager = ActionManager;\r\n\r\n});\r\n\r\n\ndefine('skylark-widgets-base/Action',[\r\n\t\"skylark-langx/objects\",\r\n\t\"skylark-langx/Evented\",\r\n\t\"skylark-data-collection/HashMap\",\r\n\t\"./base\",\r\n\t\"./ActionManager\"\r\n], function(objects,Evented, HashMap, base, ActiionManager){\r\n\r\n\tvar Action = Evented.inherit({\r\n\t\t\"klassName\" : \"Action\",\r\n\r\n\t\t\"name\"  : \"\",\r\n\r\n\t\t\"category\" : \"\",\r\n\r\n\t\t\"text\" : \"\",\r\n\r\n\t\t\"tooltip\" : \"\",\r\n\r\n\t\t\"icon\" : \"\",\r\n\r\n\t\t\"shortcut\" : \"\",\r\n\r\n\t\t\"state\"  : {\r\n\t\t\tget : function() {\r\n\t\t\t\treturn  this._state || (this._state = new HashMap({\r\n\t\t\t\t\tchecked : false,\r\n\t\t\t\t\tdisabled : false\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_construct : function(options) {\r\n\t\t\tif (options) {\r\n\t\t\t\tobjects.mixin(this,options);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_init : function() {\r\n\r\n\t\t},\r\n\r\n\t    /**\r\n\t     * Executes the command. Additional arguments are passed to the executing function\r\n\t     *\r\n\t     * @return {$.Promise} a  promise that will be resolved when the command completes.\r\n\t     */\r\n\t\texecute: function(params){\r\n\t\t\tif (this._execute) {\r\n\t\t\t\tthis._execute(params);\r\n\t\t\t}\r\n\t\t\tthis.trigger(\"executed\",{\r\n\t\t\t\tparams :params\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t});\r\n\t\r\n\treturn base.Action = Action;\r\n});\r\n\r\n\r\n\ndefine('skylark-langx/arrays',[\r\n\t\"skylark-langx-arrays\"\r\n],function(arrays){\r\n  return arrays;\r\n});\ndefine('skylark-langx/klass',[\r\n    \"skylark-langx-klass\"\r\n],function(klass){\r\n    return klass;\r\n});\ndefine('skylark-langx/ArrayStore',[\r\n    \"./klass\"\r\n],function(klass){\r\n    var SimpleQueryEngine = function(query, options){\r\n        // summary:\r\n        //      Simple query engine that matches using filter functions, named filter\r\n        //      functions or objects by name-value on a query object hash\r\n        //\r\n        // description:\r\n        //      The SimpleQueryEngine provides a way of getting a QueryResults through\r\n        //      the use of a simple object hash as a filter.  The hash will be used to\r\n        //      match properties on data objects with the corresponding value given. In\r\n        //      other words, only exact matches will be returned.\r\n        //\r\n        //      This function can be used as a template for more complex query engines;\r\n        //      for example, an engine can be created that accepts an object hash that\r\n        //      contains filtering functions, or a string that gets evaluated, etc.\r\n        //\r\n        //      When creating a new dojo.store, simply set the store's queryEngine\r\n        //      field as a reference to this function.\r\n        //\r\n        // query: Object\r\n        //      An object hash with fields that may match fields of items in the store.\r\n        //      Values in the hash will be compared by normal == operator, but regular expressions\r\n        //      or any object that provides a test() method are also supported and can be\r\n        //      used to match strings by more complex expressions\r\n        //      (and then the regex's or object's test() method will be used to match values).\r\n        //\r\n        // options: dojo/store/api/Store.QueryOptions?\r\n        //      An object that contains optional information such as sort, start, and count.\r\n        //\r\n        // returns: Function\r\n        //      A function that caches the passed query under the field \"matches\".  See any\r\n        //      of the \"query\" methods on dojo.stores.\r\n        //\r\n        // example:\r\n        //      Define a store with a reference to this engine, and set up a query method.\r\n        //\r\n        //  |   var myStore = function(options){\r\n        //  |       //  ...more properties here\r\n        //  |       this.queryEngine = SimpleQueryEngine;\r\n        //  |       //  define our query method\r\n        //  |       this.query = function(query, options){\r\n        //  |           return QueryResults(this.queryEngine(query, options)(this.data));\r\n        //  |       };\r\n        //  |   };\r\n\r\n        // create our matching query function\r\n        switch(typeof query){\r\n            default:\r\n                throw new Error(\"Can not query with a \" + typeof query);\r\n            case \"object\": case \"undefined\":\r\n                var queryObject = query;\r\n                query = function(object){\r\n                    for(var key in queryObject){\r\n                        var required = queryObject[key];\r\n                        if(required && required.test){\r\n                            // an object can provide a test method, which makes it work with regex\r\n                            if(!required.test(object[key], object)){\r\n                                return false;\r\n                            }\r\n                        }else if(required != object[key]){\r\n                            return false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                };\r\n                break;\r\n            case \"string\":\r\n                // named query\r\n                if(!this[query]){\r\n                    throw new Error(\"No filter function \" + query + \" was found in store\");\r\n                }\r\n                query = this[query];\r\n                // fall through\r\n            case \"function\":\r\n                // fall through\r\n        }\r\n        \r\n        function filter(arr, callback, thisObject){\r\n            // summary:\r\n            //      Returns a new Array with those items from arr that match the\r\n            //      condition implemented by callback.\r\n            // arr: Array\r\n            //      the array to iterate over.\r\n            // callback: Function|String\r\n            //      a function that is invoked with three arguments (item,\r\n            //      index, array). The return of this function is expected to\r\n            //      be a boolean which determines whether the passed-in item\r\n            //      will be included in the returned array.\r\n            // thisObject: Object?\r\n            //      may be used to scope the call to callback\r\n            // returns: Array\r\n            // description:\r\n            //      This function corresponds to the JavaScript 1.6 Array.filter() method, with one difference: when\r\n            //      run over sparse arrays, this implementation passes the \"holes\" in the sparse array to\r\n            //      the callback function with a value of undefined. JavaScript 1.6's filter skips the holes in the sparse array.\r\n            //      For more details, see:\r\n            //      https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter\r\n            // example:\r\n            //  | // returns [2, 3, 4]\r\n            //  | array.filter([1, 2, 3, 4], function(item){ return item>1; });\r\n\r\n            // TODO: do we need \"Ctr\" here like in map()?\r\n            var i = 0, l = arr && arr.length || 0, out = [], value;\r\n            if(l && typeof arr == \"string\") arr = arr.split(\"\");\r\n            if(typeof callback == \"string\") callback = cache[callback] || buildFn(callback);\r\n            if(thisObject){\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback.call(thisObject, value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }else{\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback(value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }\r\n            return out; // Array\r\n        }\r\n\r\n        function execute(array){\r\n            // execute the whole query, first we filter\r\n            var results = filter(array, query);\r\n            // next we sort\r\n            var sortSet = options && options.sort;\r\n            if(sortSet){\r\n                results.sort(typeof sortSet == \"function\" ? sortSet : function(a, b){\r\n                    for(var sort, i=0; sort = sortSet[i]; i++){\r\n                        var aValue = a[sort.attribute];\r\n                        var bValue = b[sort.attribute];\r\n                        // valueOf enables proper comparison of dates\r\n                        aValue = aValue != null ? aValue.valueOf() : aValue;\r\n                        bValue = bValue != null ? bValue.valueOf() : bValue;\r\n                        if (aValue != bValue){\r\n                            // modified by lwf 2016/07/09\r\n                            //return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                            return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                        }\r\n                    }\r\n                    return 0;\r\n                });\r\n            }\r\n            // now we paginate\r\n            if(options && (options.start || options.count)){\r\n                var total = results.length;\r\n                results = results.slice(options.start || 0, (options.start || 0) + (options.count || Infinity));\r\n                results.total = total;\r\n            }\r\n            return results;\r\n        }\r\n        execute.matches = query;\r\n        return execute;\r\n    };\r\n\r\n    var QueryResults = function(results){\r\n        // summary:\r\n        //      A function that wraps the results of a store query with additional\r\n        //      methods.\r\n        // description:\r\n        //      QueryResults is a basic wrapper that allows for array-like iteration\r\n        //      over any kind of returned data from a query.  While the simplest store\r\n        //      will return a plain array of data, other stores may return deferreds or\r\n        //      promises; this wrapper makes sure that *all* results can be treated\r\n        //      the same.\r\n        //\r\n        //      Additional methods include `forEach`, `filter` and `map`.\r\n        // results: Array|dojo/promise/Promise\r\n        //      The result set as an array, or a promise for an array.\r\n        // returns:\r\n        //      An array-like object that can be used for iterating over.\r\n        // example:\r\n        //      Query a store and iterate over the results.\r\n        //\r\n        //  |   store.query({ prime: true }).forEach(function(item){\r\n        //  |       //  do something\r\n        //  |   });\r\n\r\n        if(!results){\r\n            return results;\r\n        }\r\n\r\n        var isPromise = !!results.then;\r\n        // if it is a promise it may be frozen\r\n        if(isPromise){\r\n            results = Object.delegate(results);\r\n        }\r\n        function addIterativeMethod(method){\r\n            // Always add the iterative methods so a QueryResults is\r\n            // returned whether the environment is ES3 or ES5\r\n            results[method] = function(){\r\n                var args = arguments;\r\n                var result = Deferred.when(results, function(results){\r\n                    //Array.prototype.unshift.call(args, results);\r\n                    return QueryResults(Array.prototype[method].apply(results, args));\r\n                });\r\n                // forEach should only return the result of when()\r\n                // when we're wrapping a promise\r\n                if(method !== \"forEach\" || isPromise){\r\n                    return result;\r\n                }\r\n            };\r\n        }\r\n\r\n        addIterativeMethod(\"forEach\");\r\n        addIterativeMethod(\"filter\");\r\n        addIterativeMethod(\"map\");\r\n        if(results.total == null){\r\n            results.total = Deferred.when(results, function(results){\r\n                return results.length;\r\n            });\r\n        }\r\n        return results; // Object\r\n    };\r\n\r\n    var ArrayStore = klass({\r\n        \"klassName\": \"ArrayStore\",\r\n\r\n        \"queryEngine\": SimpleQueryEngine,\r\n        \r\n        \"idProperty\": \"id\",\r\n\r\n\r\n        get: function(id){\r\n            // summary:\r\n            //      Retrieves an object by its identity\r\n            // id: Number\r\n            //      The identity to use to lookup the object\r\n            // returns: Object\r\n            //      The object in the store that matches the given id.\r\n            return this.data[this.index[id]];\r\n        },\r\n\r\n        getIdentity: function(object){\r\n            return object[this.idProperty];\r\n        },\r\n\r\n        put: function(object, options){\r\n            var data = this.data,\r\n                index = this.index,\r\n                idProperty = this.idProperty;\r\n            var id = object[idProperty] = (options && \"id\" in options) ? options.id : idProperty in object ? object[idProperty] : Math.random();\r\n            if(id in index){\r\n                // object exists\r\n                if(options && options.overwrite === false){\r\n                    throw new Error(\"Object already exists\");\r\n                }\r\n                // replace the entry in data\r\n                data[index[id]] = object;\r\n            }else{\r\n                // add the new object\r\n                index[id] = data.push(object) - 1;\r\n            }\r\n            return id;\r\n        },\r\n\r\n        add: function(object, options){\r\n            (options = options || {}).overwrite = false;\r\n            // call put with overwrite being false\r\n            return this.put(object, options);\r\n        },\r\n\r\n        remove: function(id){\r\n            // summary:\r\n            //      Deletes an object by its identity\r\n            // id: Number\r\n            //      The identity to use to delete the object\r\n            // returns: Boolean\r\n            //      Returns true if an object was removed, falsy (undefined) if no object matched the id\r\n            var index = this.index;\r\n            var data = this.data;\r\n            if(id in index){\r\n                data.splice(index[id], 1);\r\n                // now we have to reindex\r\n                this.setData(data);\r\n                return true;\r\n            }\r\n        },\r\n        query: function(query, options){\r\n            // summary:\r\n            //      Queries the store for objects.\r\n            // query: Object\r\n            //      The query to use for retrieving objects from the store.\r\n            // options: dojo/store/api/Store.QueryOptions?\r\n            //      The optional arguments to apply to the resultset.\r\n            // returns: dojo/store/api/Store.QueryResults\r\n            //      The results of the query, extended with iterative methods.\r\n            //\r\n            // example:\r\n            //      Given the following store:\r\n            //\r\n            //  |   var store = new Memory({\r\n            //  |       data: [\r\n            //  |           {id: 1, name: \"one\", prime: false },\r\n            //  |           {id: 2, name: \"two\", even: true, prime: true},\r\n            //  |           {id: 3, name: \"three\", prime: true},\r\n            //  |           {id: 4, name: \"four\", even: true, prime: false},\r\n            //  |           {id: 5, name: \"five\", prime: true}\r\n            //  |       ]\r\n            //  |   });\r\n            //\r\n            //  ...find all items where \"prime\" is true:\r\n            //\r\n            //  |   var results = store.query({ prime: true });\r\n            //\r\n            //  ...or find all items where \"even\" is true:\r\n            //\r\n            //  |   var results = store.query({ even: true });\r\n            return QueryResults(this.queryEngine(query, options)(this.data));\r\n        },\r\n\r\n        setData: function(data){\r\n            // summary:\r\n            //      Sets the given data as the source for this store, and indexes it\r\n            // data: Object[]\r\n            //      An array of objects to use as the source of data.\r\n            if(data.items){\r\n                // just for convenience with the data format IFRS expects\r\n                this.idProperty = data.identifier || this.idProperty;\r\n                data = this.data = data.items;\r\n            }else{\r\n                this.data = data;\r\n            }\r\n            this.index = {};\r\n            for(var i = 0, l = data.length; i < l; i++){\r\n                this.index[data[i][this.idProperty]] = i;\r\n            }\r\n        },\r\n\r\n        init: function(options) {\r\n            for(var i in options){\r\n                this[i] = options[i];\r\n            }\r\n            this.setData(this.data || []);\r\n        }\r\n\r\n    });\r\n\r\n\treturn ArrayStore;\r\n});\ndefine('skylark-langx-aspect/aspect',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n\r\n  var undefined, nextId = 0;\r\n    function advise(dispatcher, type, advice, receiveArguments){\r\n        var previous = dispatcher[type];\r\n        var around = type == \"around\";\r\n        var signal;\r\n        if(around){\r\n            var advised = advice(function(){\r\n                return previous.advice(this, arguments);\r\n            });\r\n            signal = {\r\n                remove: function(){\r\n                    if(advised){\r\n                        advised = dispatcher = advice = null;\r\n                    }\r\n                },\r\n                advice: function(target, args){\r\n                    return advised ?\r\n                        advised.apply(target, args) :  // called the advised function\r\n                        previous.advice(target, args); // cancelled, skip to next one\r\n                }\r\n            };\r\n        }else{\r\n            // create the remove handler\r\n            signal = {\r\n                remove: function(){\r\n                    if(signal.advice){\r\n                        var previous = signal.previous;\r\n                        var next = signal.next;\r\n                        if(!next && !previous){\r\n                            delete dispatcher[type];\r\n                        }else{\r\n                            if(previous){\r\n                                previous.next = next;\r\n                            }else{\r\n                                dispatcher[type] = next;\r\n                            }\r\n                            if(next){\r\n                                next.previous = previous;\r\n                            }\r\n                        }\r\n\r\n                        // remove the advice to signal that this signal has been removed\r\n                        dispatcher = advice = signal.advice = null;\r\n                    }\r\n                },\r\n                id: nextId++,\r\n                advice: advice,\r\n                receiveArguments: receiveArguments\r\n            };\r\n        }\r\n        if(previous && !around){\r\n            if(type == \"after\"){\r\n                // add the listener to the end of the list\r\n                // note that we had to change this loop a little bit to workaround a bizarre IE10 JIT bug\r\n                while(previous.next && (previous = previous.next)){}\r\n                previous.next = signal;\r\n                signal.previous = previous;\r\n            }else if(type == \"before\"){\r\n                // add to beginning\r\n                dispatcher[type] = signal;\r\n                signal.next = previous;\r\n                previous.previous = signal;\r\n            }\r\n        }else{\r\n            // around or first one just replaces\r\n            dispatcher[type] = signal;\r\n        }\r\n        return signal;\r\n    }\r\n    function aspect(type){\r\n        return function(target, methodName, advice, receiveArguments){\r\n            var existing = target[methodName], dispatcher;\r\n            if(!existing || existing.target != target){\r\n                // no dispatcher in place\r\n                target[methodName] = dispatcher = function(){\r\n                    var executionId = nextId;\r\n                    // before advice\r\n                    var args = arguments;\r\n                    var before = dispatcher.before;\r\n                    while(before){\r\n                        args = before.advice.apply(this, args) || args;\r\n                        before = before.next;\r\n                    }\r\n                    // around advice\r\n                    if(dispatcher.around){\r\n                        var results = dispatcher.around.advice(this, args);\r\n                    }\r\n                    // after advice\r\n                    var after = dispatcher.after;\r\n                    while(after && after.id < executionId){\r\n                        if(after.receiveArguments){\r\n                            var newResults = after.advice.apply(this, args);\r\n                            // change the return value only if a new value was returned\r\n                            results = newResults === undefined ? results : newResults;\r\n                        }else{\r\n                            results = after.advice.call(this, results, args);\r\n                        }\r\n                        after = after.next;\r\n                    }\r\n                    return results;\r\n                };\r\n                if(existing){\r\n                    dispatcher.around = {advice: function(target, args){\r\n                        return existing.apply(target, args);\r\n                    }};\r\n                }\r\n                dispatcher.target = target;\r\n            }\r\n            var results = advise((dispatcher || existing), type, advice, receiveArguments);\r\n            advice = null;\r\n            return results;\r\n        };\r\n    }\r\n\r\n    return skylark.attach(\"langx.aspect\",{\r\n        after: aspect(\"after\"),\r\n \r\n        around: aspect(\"around\"),\r\n        \r\n        before: aspect(\"before\")\r\n    });\r\n});\ndefine('skylark-langx-aspect/main',[\r\n\t\"./aspect\"\r\n],function(aspect){\r\n\treturn aspect;\r\n});\ndefine('skylark-langx-aspect', ['skylark-langx-aspect/main'], function (main) { return main; });\n\ndefine('skylark-langx/aspect',[\r\n    \"skylark-langx-aspect\"\r\n],function(aspect){\r\n  return aspect;\r\n});\ndefine('skylark-langx-async/Deferred',[\r\n    \"skylark-langx-arrays\",\r\n\t\"skylark-langx-funcs\",\r\n    \"skylark-langx-objects\"\r\n],function(arrays,funcs,objects){\r\n    \"use strict\";\r\n\r\n    var slice = Array.prototype.slice,\r\n        proxy = funcs.proxy,\r\n        makeArray = arrays.makeArray,\r\n        result = objects.result,\r\n        mixin = objects.mixin;\r\n\r\n    mixin(Promise.prototype,{\r\n        always: function(handler) {\r\n            //this.done(handler);\r\n            //this.fail(handler);\r\n            this.then(handler,handler);\r\n            return this;\r\n        },\r\n        done : function() {\r\n            for (var i = 0;i<arguments.length;i++) {\r\n                this.then(arguments[i]);\r\n            }\r\n            return this;\r\n        },\r\n        fail : function(handler) { \r\n            //return mixin(Promise.prototype.catch.call(this,handler),added);\r\n            //return this.then(null,handler);\r\n            this.catch(handler);\r\n            return this;\r\n         }\r\n    });\r\n\r\n\r\n    var Deferred = function() {\r\n        var self = this,\r\n            p = this.promise = makePromise2(new Promise(function(resolve, reject) {\r\n                self._resolve = resolve;\r\n                self._reject = reject;\r\n            }));\r\n\r\n        //wrapPromise(p,self);\r\n\r\n        //this[PGLISTENERS] = [];\r\n        //this[PGNOTIFIES] = [];\r\n\r\n        //this.resolve = Deferred.prototype.resolve.bind(this);\r\n        //this.reject = Deferred.prototype.reject.bind(this);\r\n        //this.progress = Deferred.prototype.progress.bind(this);\r\n\r\n    };\r\n\r\n   \r\n    function makePromise2(promise) {\r\n        // Don't modify any promise that has been already modified.\r\n        if (promise.isResolved) return promise;\r\n\r\n        // Set initial state\r\n        var isPending = true;\r\n        var isRejected = false;\r\n        var isResolved = false;\r\n\r\n        // Observe the promise, saving the fulfillment in a closure scope.\r\n        var result = promise.then(\r\n            function(v) {\r\n                isResolved = true;\r\n                isPending = false;\r\n                return v; \r\n            }, \r\n            function(e) {\r\n                isRejected = true;\r\n                isPending = false;\r\n                throw e; \r\n            }\r\n        );\r\n\r\n        result.isResolved = function() { return isResolved; };\r\n        result.isPending = function() { return isPending; };\r\n        result.isRejected = function() { return isRejected; };\r\n\r\n        result.state = function() {\r\n            if (isResolved) {\r\n                return 'resolved';\r\n            }\r\n            if (isRejected) {\r\n                return 'rejected';\r\n            }\r\n            return 'pending';\r\n        };\r\n\r\n        var notified = [],\r\n            listeners = [];\r\n\r\n          \r\n        result.then = function(onResolved,onRejected,onProgress) {\r\n            if (onProgress) {\r\n                this.progress(onProgress);\r\n            }\r\n            return makePromise2(Promise.prototype.then.call(this,\r\n                onResolved && function(args) {\r\n                    if (args && args.__ctx__ !== undefined) {\r\n                        return onResolved.apply(args.__ctx__,args);\r\n                    } else {\r\n                        return onResolved(args);\r\n                    }\r\n                },\r\n                onRejected && function(args){\r\n                    if (args && args.__ctx__ !== undefined) {\r\n                        return onRejected.apply(args.__ctx__,args);\r\n                    } else {\r\n                        return onRejected(args);\r\n                    }\r\n                }\r\n            ));\r\n        };\r\n\r\n        result.progress = function(handler) {\r\n            notified.forEach(function (value) {\r\n                handler(value);\r\n            });\r\n            listeners.push(handler);\r\n            return this;\r\n        };\r\n\r\n        result.pipe = result.then;\r\n\r\n        result.notify = function(value) {\r\n            try {\r\n                notified.push(value);\r\n\r\n                return listeners.forEach(function (listener) {\r\n                    return listener(value);\r\n                });\r\n            } catch (error) {\r\n            this.reject(error);\r\n            }\r\n            return this;\r\n        };\r\n\r\n        return result;\r\n    }\r\n\r\n \r\n    Deferred.prototype.resolve = function(value) {\r\n        var args = slice.call(arguments);\r\n        return this.resolveWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.resolveWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._resolve(args);\r\n        this._resolved = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.notify = function(value) {\r\n        var p = result(this,\"promise\");\r\n        p.notify(value);\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        var args = slice.call(arguments);\r\n        return this.rejectWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.rejectWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._reject(args);\r\n        this._rejected = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.isResolved = function() {\r\n        var p = result(this,\"promise\");\r\n        return p.isResolved();\r\n    };\r\n\r\n    Deferred.prototype.isRejected = function() {\r\n        var p = result(this,\"promise\");\r\n        return p.isRejected();\r\n    };\r\n\r\n    Deferred.prototype.state = function() {\r\n        var p = result(this,\"promise\");\r\n        return p.state();\r\n    };\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        var p = result(this,\"promise\");\r\n        return p.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.prototype.progress = function(progback){\r\n        var p = result(this,\"promise\");\r\n        return p.progress(progback);\r\n    };\r\n   \r\n    Deferred.prototype.catch = function(errback) {\r\n        var p = result(this,\"promise\");\r\n        return p.catch(errback);\r\n    };\r\n\r\n\r\n    Deferred.prototype.always  = function() {\r\n        var p = result(this,\"promise\");\r\n        p.always.apply(p,arguments);\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.done  = function() {\r\n        var p = result(this,\"promise\");\r\n        p.done.apply(p,arguments);\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.fail = function(errback) {\r\n        var p = result(this,\"promise\");\r\n        p.fail(errback);\r\n        return this;\r\n    };\r\n\r\n\r\n    Deferred.all = function(array) {\r\n        //return wrapPromise(Promise.all(array));\r\n        var d = new Deferred();\r\n        Promise.all(array).then(d.resolve.bind(d),d.reject.bind(d));\r\n        return result(d,\"promise\");\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return makePromise2(Promise.race(array));\r\n    };\r\n\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n        } else if (!nativePromise) {\r\n            var deferred = new Deferred(valueOrPromise.cancel);\r\n            valueOrPromise.then(proxy(deferred.resolve,deferred), proxy(deferred.reject,deferred), deferred.notify);\r\n            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve.apply(d,arguments);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n\r\n    Deferred.promise = function(callback) {\r\n        var d = new Deferred();\r\n\r\n        callback(d.resolve.bind(d),d.reject.bind(d),d.progress.bind(d));\r\n\r\n        return d.promise;\r\n    };\r\n\r\n    return Deferred;\r\n});\ndefine('skylark-langx-async/async',[\r\n    \"skylark-langx-ns\",\r\n    \"skylark-langx-objects\",\r\n    \"./Deferred\"\r\n],function(skylark,objects,Deferred){\r\n    var each = objects.each;\r\n    \r\n    var async = {\r\n        Deferred : Deferred,\r\n\r\n        parallel : function(arr,args,ctx) {\r\n            var rets = [];\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            each(arr,function(i,func){\r\n                rets.push(func.apply(ctx,args));\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        series : function(arr,args,ctx) {\r\n            var rets = [],\r\n                d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolve();\r\n            each(arr,function(i,func){\r\n                p = p.then(function(){\r\n                    return func.apply(ctx,args);\r\n                });\r\n                rets.push(p);\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        waterful : function(arr,args,ctx) {\r\n            var d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolveWith(ctx,args);\r\n\r\n            each(arr,function(i,func){\r\n                p = p.then(func);\r\n            });\r\n            return p;\r\n        }\r\n    };\r\n\r\n\treturn skylark.attach(\"langx.async\",async);\t\r\n});\ndefine('skylark-langx-async/main',[\r\n\t\"./async\"\r\n],function(async){\r\n\treturn async;\r\n});\ndefine('skylark-langx-async', ['skylark-langx-async/main'], function (main) { return main; });\n\ndefine('skylark-langx/async',[\r\n    \"skylark-langx-async\"\r\n],function(async){\r\n    return async;\r\n});\ndefine('skylark-langx-datetimes/datetimes',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n     function parseMilliSeconds(str) {\r\n\r\n        var strs = str.split(' ');\r\n        var number = parseInt(strs[0]);\r\n\r\n        if (isNaN(number)){\r\n            return 0;\r\n        }\r\n\r\n        var min = 60000 * 60;\r\n\r\n        switch (strs[1].trim().replace(/\\./g, '')) {\r\n            case 'minutes':\r\n            case 'minute':\r\n            case 'min':\r\n            case 'mm':\r\n            case 'm':\r\n                return 60000 * number;\r\n            case 'hours':\r\n            case 'hour':\r\n            case 'HH':\r\n            case 'hh':\r\n            case 'h':\r\n            case 'H':\r\n                return min * number;\r\n            case 'seconds':\r\n            case 'second':\r\n            case 'sec':\r\n            case 'ss':\r\n            case 's':\r\n                return 1000 * number;\r\n            case 'days':\r\n            case 'day':\r\n            case 'DD':\r\n            case 'dd':\r\n            case 'd':\r\n                return (min * 24) * number;\r\n            case 'months':\r\n            case 'month':\r\n            case 'MM':\r\n            case 'M':\r\n                return (min * 24 * 28) * number;\r\n            case 'weeks':\r\n            case 'week':\r\n            case 'W':\r\n            case 'w':\r\n                return (min * 24 * 7) * number;\r\n            case 'years':\r\n            case 'year':\r\n            case 'yyyy':\r\n            case 'yy':\r\n            case 'y':\r\n                return (min * 24 * 365) * number;\r\n            default:\r\n                return 0;\r\n        }\r\n    };\r\n\t\r\n\treturn skylark.attach(\"langx.datetimes\",{\r\n\t\tparseMilliSeconds\r\n\t});\r\n});\ndefine('skylark-langx-datetimes/main',[\r\n\t\"./datetimes\"\r\n],function(datetimes){\r\n\treturn datetimes;\r\n});\ndefine('skylark-langx-datetimes', ['skylark-langx-datetimes/main'], function (main) { return main; });\n\ndefine('skylark-langx/datetimes',[\r\n    \"skylark-langx-datetimes\"\r\n],function(datetimes){\r\n    return datetimes;\r\n});\ndefine('skylark-langx/Deferred',[\r\n    \"skylark-langx-async/Deferred\"\r\n],function(Deferred){\r\n    return Deferred;\r\n});\ndefine('skylark-langx/Emitter',[\r\n    \"skylark-langx-emitter\"\r\n],function(Evented){\r\n    return Evented;\r\n});\ndefine('skylark-langx/funcs',[\r\n    \"skylark-langx-funcs\"\r\n],function(funcs){\r\n    return funcs;\r\n});\ndefine('skylark-langx-hoster/hoster',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n\t// The javascript host environment, brower and nodejs are supported.\r\n\tvar hoster = {\r\n\t\t\"isBrowser\" : true, // default\r\n\t\t\"isNode\" : null,\r\n\t\t\"global\" : this,\r\n\t\t\"browser\" : null,\r\n\t\t\"node\" : null\r\n\t};\r\n\r\n\tif (typeof process == \"object\" && process.versions && process.versions.node && process.versions.v8) {\r\n\t\thoster.isNode = true;\r\n\t\thoster.isBrowser = false;\r\n\t}\r\n\r\n\thoster.global = (function(){\r\n\t\tif (typeof global !== 'undefined' && typeof global !== 'function') {\r\n\t\t\t// global spec defines a reference to the global object called 'global'\r\n\t\t\t// https://github.com/tc39/proposal-global\r\n\t\t\t// `global` is also defined in NodeJS\r\n\t\t\treturn global;\r\n\t\t} else if (typeof window !== 'undefined') {\r\n\t\t\t// window is defined in browsers\r\n\t\t\treturn window;\r\n\t\t}\r\n\t\telse if (typeof self !== 'undefined') {\r\n\t\t\t// self is defined in WebWorkers\r\n\t\t\treturn self;\r\n\t\t}\r\n\t\treturn this;\r\n\t})();\r\n\r\n\tvar _document = null;\r\n\r\n\tObject.defineProperty(hoster,\"document\",function(){\r\n\t\tif (!_document) {\r\n\t\t\tvar w = typeof window === 'undefined' ? require('html-element') : window;\r\n\t\t\t_document = w.document;\r\n\t\t}\r\n\r\n\t\treturn _document;\r\n\t});\r\n\r\n\tif (hoster.isBrowser) {\r\n\t    function uaMatch( ua ) {\r\n\t\t    ua = ua.toLowerCase();\r\n\r\n\t\t    var match = /(chrome)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(webkit)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(opera)(?:.*version|)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(msie) ([\\w.]+)/.exec( ua ) ||\r\n\t\t      ua.indexOf('compatible') < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec( ua ) ||\r\n\t\t      [];\r\n\r\n\t\t    return {\r\n\t\t      browser: match[ 1 ] || '',\r\n\t\t      version: match[ 2 ] || '0'\r\n\t\t    };\r\n\t  \t};\r\n\r\n\t    var matched = uaMatch( navigator.userAgent );\r\n\r\n\t    var browser = hoster.browser = {};\r\n\r\n\t    if ( matched.browser ) {\r\n\t      browser[ matched.browser ] = true;\r\n\t      browser.version = matched.version;\r\n\t    }\r\n\r\n\t    // Chrome is Webkit, but Webkit is also Safari.\r\n\t    if ( browser.chrome ) {\r\n\t      browser.webkit = true;\r\n\t    } else if ( browser.webkit ) {\r\n\t      browser.safari = true;\r\n\t    }\r\n\t}\r\n\r\n\treturn  skylark.attach(\"langx.hoster\",hoster);\r\n});\ndefine('skylark-langx-hoster/main',[\r\n\t\"./hoster\"\r\n],function(hoster){\r\n\treturn hoster;\r\n});\ndefine('skylark-langx-hoster', ['skylark-langx-hoster/main'], function (main) { return main; });\n\ndefine('skylark-langx/hoster',[\r\n\t\"skylark-langx-hoster\"\r\n],function(hoster){\r\n\treturn hoster;\r\n});\ndefine('skylark-langx/numbers',[\r\n\t\"skylark-langx-numbers\"\r\n],function(numbers){\r\n\treturn numbers;\r\n});\ndefine('skylark-langx-strings/strings',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n    // add default escape function for escaping HTML entities\r\n    var escapeCharMap = Object.freeze({\r\n        '&': '&amp;',\r\n        '<': '&lt;',\r\n        '>': '&gt;',\r\n        '\"': '&quot;',\r\n        \"'\": '&#x27;',\r\n        '`': '&#x60;',\r\n        '=': '&#x3D;',\r\n    });\r\n    function replaceChar(c) {\r\n        return escapeCharMap[c];\r\n    }\r\n    var escapeChars = /[&<>\"'`=]/g;\r\n\r\n\r\n     /*\r\n     * Converts camel case into dashes.\r\n     * @param {String} str\r\n     * @return {String}\r\n     * @exapmle marginTop -> margin-top\r\n     */\r\n    function dasherize(str) {\r\n        return str.replace(/::/g, '/')\r\n            .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\r\n            .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\r\n            .replace(/_/g, '-')\r\n            .toLowerCase();\r\n    }\r\n\r\n    function deserializeValue(value) {\r\n        try {\r\n            return value ?\r\n                value == \"true\" ||\r\n                (value == \"false\" ? false :\r\n                    value == \"null\" ? null :\r\n                    +value + \"\" == value ? +value :\r\n                    /^[\\[\\{]/.test(value) ? JSON.parse(value) :\r\n                    value) : value;\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    function escapeHTML(str) {\r\n        if (str == null) {\r\n            return '';\r\n        }\r\n        if (!str) {\r\n            return String(str);\r\n        }\r\n\r\n        return str.toString().replace(escapeChars, replaceChar);\r\n    }\r\n\r\n    function generateUUID() {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n            var r = Math.random() * 16 | 0;\r\n            var v = c === 'x' ? r : ((r & 0x3) | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    }\r\n\r\n    function trim(str) {\r\n        return str == null ? \"\" : String.prototype.trim.call(str);\r\n    }\r\n\r\n    function substitute( /*String*/ template,\r\n        /*Object|Array*/\r\n        map,\r\n        /*Function?*/\r\n        transform,\r\n        /*Object?*/\r\n        thisObject) {\r\n        // summary:\r\n        //    Performs parameterized substitutions on a string. Throws an\r\n        //    exception if any parameter is unmatched.\r\n        // template:\r\n        //    a string with expressions in the form `${key}` to be replaced or\r\n        //    `${key:format}` which specifies a format function. keys are case-sensitive.\r\n        // map:\r\n        //    hash to search for substitutions\r\n        // transform:\r\n        //    a function to process all parameters before substitution takes\r\n\r\n\r\n        thisObject = thisObject || window;\r\n        transform = transform ?\r\n            proxy(thisObject, transform) : function(v) {\r\n                return v;\r\n            };\r\n\r\n        function getObject(key, map) {\r\n            if (key.match(/\\./)) {\r\n                var retVal,\r\n                    getValue = function(keys, obj) {\r\n                        var _k = keys.pop();\r\n                        if (_k) {\r\n                            if (!obj[_k]) return null;\r\n                            return getValue(keys, retVal = obj[_k]);\r\n                        } else {\r\n                            return retVal;\r\n                        }\r\n                    };\r\n                return getValue(key.split(\".\").reverse(), map);\r\n            } else {\r\n                return map[key];\r\n            }\r\n        }\r\n\r\n        return template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\r\n            function(match, key, format) {\r\n                var value = getObject(key, map);\r\n                if (format) {\r\n                    value = getObject(format, thisObject).call(thisObject, value, key);\r\n                }\r\n                return transform(value, key).toString();\r\n            }); // String\r\n    }\r\n\r\n    var idCounter = 0;\r\n    function uniqueId (prefix) {\r\n        var id = ++idCounter + '';\r\n        return prefix ? prefix + id : id;\r\n    }\r\n\r\n\r\n    /**\r\n     * https://github.com/cho45/micro-template.js\r\n     * (c) cho45 http://cho45.github.com/mit-license\r\n     */\r\n    function template (id, data) {\r\n\r\n        function include(name, args) {\r\n            var stash = {};\r\n            for (var key in template.context.stash) if (template.context.stash.hasOwnProperty(key)) {\r\n                stash[key] = template.context.stash[key];\r\n            }\r\n            if (args) for (var key in args) if (args.hasOwnProperty(key)) {\r\n                stash[key] = args[key];\r\n            }\r\n            var context = template.context;\r\n            context.ret += template(name, stash);\r\n            template.context = context;\r\n        }\r\n\r\n        function wrapper(name, fun) {\r\n            var current = template.context.ret;\r\n            template.context.ret = '';\r\n            fun.apply(template.context);\r\n            var content = template.context.ret;\r\n            var orig_content = template.context.stash.content;\r\n            template.context.stash.content = content;\r\n            template.context.ret = current + template(name, template.context.stash);\r\n            template.context.stash.content = orig_content;\r\n        }\r\n\r\n        var me = arguments.callee;\r\n        if (!me.cache[id]) me.cache[id] = (function () {\r\n            var name = id, string = /^[\\w\\-]+$/.test(id) ? me.get(id): (name = 'template(string)', id); // no warnings\r\n            var line = 1, body = (\r\n                \"try { \" +\r\n                    (me.variable ?  \"var \" + me.variable + \" = this.stash;\" : \"with (this.stash) { \") +\r\n                        \"this.ret += '\"  +\r\n                        string.\r\n                            replace(/<%/g, '\\x11').replace(/%>/g, '\\x13'). // if you want other tag, just edit this line\r\n                            replace(/'(?![^\\x11\\x13]+?\\x13)/g, '\\\\x27').\r\n                            replace(/^\\s*|\\s*$/g, '').\r\n                            replace(/\\n|\\r\\n/g, function () { return \"';\\nthis.line = \" + (++line) + \"; this.ret += '\\\\n\" }).\r\n                            replace(/\\x11=raw(.+?)\\x13/g, \"' + ($1) + '\").\r\n                            replace(/\\x11=(.+?)\\x13/g, \"' + this.escapeHTML($1) + '\").\r\n                            replace(/\\x11(.+?)\\x13/g, \"'; $1; this.ret += '\") +\r\n                    \"'; \" + (me.variable ? \"\" : \"}\") + \"return this.ret;\" +\r\n                \"} catch (e) { throw 'TemplateError: ' + e + ' (on \" + name + \"' + ' line ' + this.line + ')'; } \" +\r\n                \"//@ sourceURL=\" + name + \"\\n\" // source map\r\n            ).replace(/this\\.ret \\+= '';/g, '');\r\n            var func = new Function(body);\r\n            var map  = { '&' : '&amp;', '<' : '&lt;', '>' : '&gt;', '\\x22' : '&#x22;', '\\x27' : '&#x27;' };\r\n            var escapeHTML = function (string) { return (''+string).replace(/[&<>\\'\\\"]/g, function (_) { return map[_] }) };\r\n            return function (stash) { return func.call(me.context = { escapeHTML: escapeHTML, line: 1, ret : '', stash: stash }) };\r\n        })();\r\n        return data ? me.cache[id](data) : me.cache[id];\r\n    }\r\n\r\n    template.cache = {};\r\n    \r\n\r\n    template.get = function (id) {\r\n        return document.getElementById(id).innerHTML;\r\n    };\r\n\r\n    function rtrim(str) {\r\n        return str.replace(/\\s+$/g, '');\r\n    }\r\n\r\n    // Slugify a string\r\n    function slugify(str) {\r\n        str = str.replace(/^\\s+|\\s+$/g, '');\r\n\r\n        // Make the string lowercase\r\n        str = str.toLowerCase();\r\n\r\n        // Remove accents, swap ñ for n, etc\r\n        var from = \"ÁÄÂÀÃÅČÇĆĎÉĚËÈÊẼĔȆÍÌÎÏŇÑÓÖÒÔÕØŘŔŠŤÚŮÜÙÛÝŸŽáäâàãåčçćďéěëèêẽĕȇíìîïňñóöòôõøðřŕšťúůüùûýÿžþÞĐđßÆa·/_,:;\";\r\n        var to   = \"AAAAAACCCDEEEEEEEEIIIINNOOOOOORRSTUUUUUYYZaaaaaacccdeeeeeeeeiiiinnooooooorrstuuuuuyyzbBDdBAa------\";\r\n        for (var i=0, l=from.length ; i<l ; i++) {\r\n            str = str.replace(new RegExp(from.charAt(i), 'g'), to.charAt(i));\r\n        }\r\n\r\n        // Remove invalid chars\r\n        //str = str.replace(/[^a-z0-9 -]/g, '') \r\n        // Collapse whitespace and replace by -\r\n        str = str.replace(/\\s+/g, '-') \r\n        // Collapse dashes\r\n        .replace(/-+/g, '-'); \r\n\r\n        return str;\r\n    }    \r\n\r\n    // return boolean if string 'true' or string 'false', or if a parsable string which is a number\r\n    // also supports JSON object and/or arrays parsing\r\n    function toType(str) {\r\n        var type = typeof str;\r\n        if (type !== 'string') {\r\n            return str;\r\n        }\r\n        var nb = parseFloat(str);\r\n        if (!isNaN(nb) && isFinite(str)) {\r\n            return nb;\r\n        }\r\n        if (str === 'false') {\r\n            return false;\r\n        }\r\n        if (str === 'true') {\r\n            return true;\r\n        }\r\n\r\n        try {\r\n            str = JSON.parse(str);\r\n        } catch (e) {}\r\n\r\n        return str;\r\n    }\r\n\r\n\treturn skylark.attach(\"langx.strings\",{\r\n        camelCase: function(str) {\r\n            return str.replace(/-([\\da-z])/g, function(a) {\r\n                return a.toUpperCase().replace('-', '');\r\n            });\r\n        },\r\n\r\n        dasherize: dasherize,\r\n\r\n        deserializeValue: deserializeValue,\r\n\r\n        escapeHTML : escapeHTML,\r\n\r\n        generateUUID : generateUUID,\r\n\r\n        lowerFirst: function(str) {\r\n            return str.charAt(0).toLowerCase() + str.slice(1);\r\n        },\r\n\r\n        rtrim : rtrim,\r\n\r\n        serializeValue: function(value) {\r\n            return JSON.stringify(value)\r\n        },\r\n\r\n\r\n        substitute: substitute,\r\n\r\n        slugify : slugify,\r\n\r\n        //template : template,\r\n\r\n        trim: trim,\r\n\r\n        uniqueId: uniqueId,\r\n\r\n        upperFirst: function(str) {\r\n            return str.charAt(0).toUpperCase() + str.slice(1);\r\n        }\r\n\t}) ; \r\n\r\n});\ndefine('skylark-langx-strings/base64',[\r\n\t\"./strings\"\r\n],function(strings) {\r\n\r\n\t// private property\r\n\tconst _keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\n\r\n\t// private method for UTF-8 encoding\r\n\tfunction _utf8_encode(string) {\r\n\t\tstring = string.replace(/\\r\\n/g,\"\\n\");\r\n\t\tvar utftext = \"\";\r\n\r\n\t\tfor (var n = 0; n < string.length; n++) {\r\n\r\n\t\t\tvar c = string.charCodeAt(n);\r\n\r\n\t\t\tif (c < 128) {\r\n\t\t\t\tutftext += String.fromCharCode(c);\r\n\t\t\t}\r\n\t\t\telse if((c > 127) && (c < 2048)) {\r\n\t\t\t\tutftext += String.fromCharCode((c >> 6) | 192);\r\n\t\t\t\tutftext += String.fromCharCode((c & 63) | 128);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tutftext += String.fromCharCode((c >> 12) | 224);\r\n\t\t\t\tutftext += String.fromCharCode(((c >> 6) & 63) | 128);\r\n\t\t\t\tutftext += String.fromCharCode((c & 63) | 128);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn utftext;\r\n\t}\r\n\r\n\t// private method for UTF-8 decoding\r\n\tfunction _utf8_decode(utftext) {\r\n\t\tvar string = \"\";\r\n\t\tvar i = 0;\r\n\t\tvar c = c1 = c2 = 0;\r\n\r\n\t\twhile ( i < utftext.length ) {\r\n\r\n\t\t\tc = utftext.charCodeAt(i);\r\n\r\n\t\t\tif (c < 128) {\r\n\t\t\t\tstring += String.fromCharCode(c);\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t\telse if((c > 191) && (c < 224)) {\r\n\t\t\t\tc2 = utftext.charCodeAt(i+1);\r\n\t\t\t\tstring += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\r\n\t\t\t\ti += 2;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tc2 = utftext.charCodeAt(i+1);\r\n\t\t\t\tc3 = utftext.charCodeAt(i+2);\r\n\t\t\t\tstring += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\r\n\t\t\t\ti += 3;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn string;\r\n\t}\r\n\r\n\t// public method for encoding\r\n\tfunction encode(input, binary) {\r\n\t\tbinary = (binary != null) ? binary : false;\r\n\t\tvar output = \"\";\r\n\t\tvar chr1, chr2, chr3, enc1, enc2, enc3, enc4;\r\n\t\tvar i = 0;\r\n\r\n\t\tif (!binary)\r\n\t\t{\r\n\t\t\tinput = _utf8_encode(input);\r\n\t\t}\r\n\r\n\t\twhile (i < input.length) {\r\n\r\n\t\t\tchr1 = input.charCodeAt(i++);\r\n\t\t\tchr2 = input.charCodeAt(i++);\r\n\t\t\tchr3 = input.charCodeAt(i++);\r\n\r\n\t\t\tenc1 = chr1 >> 2;\r\n\t\t\tenc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\r\n\t\t\tenc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\r\n\t\t\tenc4 = chr3 & 63;\r\n\r\n\t\t\tif (isNaN(chr2)) {\r\n\t\t\t\tenc3 = enc4 = 64;\r\n\t\t\t} else if (isNaN(chr3)) {\r\n\t\t\t\tenc4 = 64;\r\n\t\t\t}\r\n\r\n\t\t\toutput = output +\r\n\t\t\tthis._keyStr.charAt(enc1) + this._keyStr.charAt(enc2) +\r\n\t\t\tthis._keyStr.charAt(enc3) + this._keyStr.charAt(enc4);\r\n\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\t// public method for decoding\r\n\tfunction decode(input, binary) {\r\n\t\tbinary = (binary != null) ? binary : false;\r\n\t\tvar output = \"\";\r\n\t\tvar chr1, chr2, chr3;\r\n\t\tvar enc1, enc2, enc3, enc4;\r\n\t\tvar i = 0;\r\n\r\n\t\tinput = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\r\n\r\n\t\twhile (i < input.length) {\r\n\r\n\t\t\tenc1 = this._keyStr.indexOf(input.charAt(i++));\r\n\t\t\tenc2 = this._keyStr.indexOf(input.charAt(i++));\r\n\t\t\tenc3 = this._keyStr.indexOf(input.charAt(i++));\r\n\t\t\tenc4 = this._keyStr.indexOf(input.charAt(i++));\r\n\r\n\t\t\tchr1 = (enc1 << 2) | (enc2 >> 4);\r\n\t\t\tchr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\r\n\t\t\tchr3 = ((enc3 & 3) << 6) | enc4;\r\n\r\n\t\t\toutput = output + String.fromCharCode(chr1);\r\n\r\n\t\t\tif (enc3 != 64) {\r\n\t\t\t\toutput = output + String.fromCharCode(chr2);\r\n\t\t\t}\r\n\t\t\tif (enc4 != 64) {\r\n\t\t\t\toutput = output + String.fromCharCode(chr3);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif (!binary) {\r\n\t\t\toutput = _utf8_decode(output);\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\r\n\t}\r\n\r\n\r\n\treturn strings.base64 = {\r\n\t\tdecode,\r\n\t\tencode\r\n\t};\r\n\t\r\n});\ndefine('skylark-langx-strings/main',[\r\n\t\"./strings\",\r\n\t\"./base64\"\r\n],function(strings){\r\n\treturn strings;\r\n});\ndefine('skylark-langx-strings', ['skylark-langx-strings/main'], function (main) { return main; });\n\ndefine('skylark-langx/strings',[\r\n    \"skylark-langx-strings\"\r\n],function(strings){\r\n    return strings;\r\n});\ndefine('skylark-langx/Stateful',[\r\n\t\"./Evented\",\r\n  \"./strings\",\r\n  \"./objects\"\r\n],function(Evented,strings,objects){\r\n    var isEqual = objects.isEqual,\r\n        mixin = objects.mixin,\r\n        result = objects.result,\r\n        isEmptyObject = objects.isEmptyObject,\r\n        clone = objects.clone,\r\n        uniqueId = strings.uniqueId;\r\n\r\n    var Stateful = Evented.inherit({\r\n        _construct : function(attributes, options) {\r\n            var attrs = attributes || {};\r\n            options || (options = {});\r\n            this.cid = uniqueId(this.cidPrefix);\r\n            this.attributes = {};\r\n            if (options.collection) this.collection = options.collection;\r\n            if (options.parse) attrs = this.parse(attrs, options) || {};\r\n            var defaults = result(this, 'defaults');\r\n            attrs = mixin({}, defaults, attrs);\r\n            this.set(attrs, options);\r\n            this.changed = {};\r\n        },\r\n\r\n        // A hash of attributes whose current and previous value differ.\r\n        changed: null,\r\n\r\n        // The value returned during the last failed validation.\r\n        validationError: null,\r\n\r\n        // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\r\n        // CouchDB users may want to set this to `\"_id\"`.\r\n        idAttribute: 'id',\r\n\r\n        // The prefix is used to create the client id which is used to identify models locally.\r\n        // You may want to override this if you're experiencing name clashes with model ids.\r\n        cidPrefix: 'c',\r\n\r\n\r\n        // Return a copy of the model's `attributes` object.\r\n        toJSON: function(options) {\r\n          return clone(this.attributes);\r\n        },\r\n\r\n\r\n        // Get the value of an attribute.\r\n        get: function(attr) {\r\n          return this.attributes[attr];\r\n        },\r\n\r\n        // Returns `true` if the attribute contains a value that is not null\r\n        // or undefined.\r\n        has: function(attr) {\r\n          return this.get(attr) != null;\r\n        },\r\n\r\n        // Set a hash of model attributes on the object, firing `\"change\"`. This is\r\n        // the core primitive operation of a model, updating the data and notifying\r\n        // anyone who needs to know about the change in state. The heart of the beast.\r\n        set: function(key, val, options) {\r\n          if (key == null) return this;\r\n\r\n          // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n          var attrs;\r\n          if (typeof key === 'object') {\r\n            attrs = key;\r\n            options = val;\r\n          } else {\r\n            (attrs = {})[key] = val;\r\n          }\r\n\r\n          options || (options = {});\r\n\r\n          // Run validation.\r\n          if (!this._validate(attrs, options)) return false;\r\n\r\n          // Extract attributes and options.\r\n          var unset      = options.unset;\r\n          var silent     = options.silent;\r\n          var changes    = [];\r\n          var changing   = this._changing;\r\n          this._changing = true;\r\n\r\n          if (!changing) {\r\n            this._previousAttributes = clone(this.attributes);\r\n            this.changed = {};\r\n          }\r\n\r\n          var current = this.attributes;\r\n          var changed = this.changed;\r\n          var prev    = this._previousAttributes;\r\n\r\n          // For each `set` attribute, update or delete the current value.\r\n          for (var attr in attrs) {\r\n            val = attrs[attr];\r\n            if (!isEqual(current[attr], val)) changes.push(attr);\r\n            if (!isEqual(prev[attr], val)) {\r\n              changed[attr] = val;\r\n            } else {\r\n              delete changed[attr];\r\n            }\r\n            unset ? delete current[attr] : current[attr] = val;\r\n          }\r\n\r\n          // Update the `id`.\r\n          if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\r\n\r\n          // Trigger all relevant attribute changes.\r\n          if (!silent) {\r\n            if (changes.length) this._pending = options;\r\n            for (var i = 0; i < changes.length; i++) {\r\n              this.trigger('change:' + changes[i], this, current[changes[i]], options);\r\n            }\r\n          }\r\n\r\n          // You might be wondering why there's a `while` loop here. Changes can\r\n          // be recursively nested within `\"change\"` events.\r\n          if (changing) return this;\r\n          if (!silent) {\r\n            while (this._pending) {\r\n              options = this._pending;\r\n              this._pending = false;\r\n              this.trigger('change', this, options);\r\n            }\r\n          }\r\n          this._pending = false;\r\n          this._changing = false;\r\n          return this;\r\n        },\r\n\r\n        // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\r\n        // if the attribute doesn't exist.\r\n        unset: function(attr, options) {\r\n          return this.set(attr, void 0, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Clear all attributes on the model, firing `\"change\"`.\r\n        clear: function(options) {\r\n          var attrs = {};\r\n          for (var key in this.attributes) attrs[key] = void 0;\r\n          return this.set(attrs, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Determine if the model has changed since the last `\"change\"` event.\r\n        // If you specify an attribute name, determine if that attribute has changed.\r\n        hasChanged: function(attr) {\r\n          if (attr == null) return !isEmptyObject(this.changed);\r\n          return this.changed[attr] !== undefined;\r\n        },\r\n\r\n        // Return an object containing all the attributes that have changed, or\r\n        // false if there are no changed attributes. Useful for determining what\r\n        // parts of a view need to be updated and/or what attributes need to be\r\n        // persisted to the server. Unset attributes will be set to undefined.\r\n        // You can also pass an attributes object to diff against the model,\r\n        // determining if there *would be* a change.\r\n        changedAttributes: function(diff) {\r\n          if (!diff) return this.hasChanged() ? clone(this.changed) : false;\r\n          var old = this._changing ? this._previousAttributes : this.attributes;\r\n          var changed = {};\r\n          for (var attr in diff) {\r\n            var val = diff[attr];\r\n            if (isEqual(old[attr], val)) continue;\r\n            changed[attr] = val;\r\n          }\r\n          return !isEmptyObject(changed) ? changed : false;\r\n        },\r\n\r\n        // Get the previous value of an attribute, recorded at the time the last\r\n        // `\"change\"` event was fired.\r\n        previous: function(attr) {\r\n          if (attr == null || !this._previousAttributes) return null;\r\n          return this._previousAttributes[attr];\r\n        },\r\n\r\n        // Get all of the attributes of the model at the time of the previous\r\n        // `\"change\"` event.\r\n        previousAttributes: function() {\r\n          return clone(this._previousAttributes);\r\n        },\r\n\r\n        // Create a new model with identical attributes to this one.\r\n        clone: function() {\r\n          return new this.constructor(this.attributes);\r\n        },\r\n\r\n        // A model is new if it has never been saved to the server, and lacks an id.\r\n        isNew: function() {\r\n          return !this.has(this.idAttribute);\r\n        },\r\n\r\n        // Check if the model is currently in a valid state.\r\n        isValid: function(options) {\r\n          return this._validate({}, mixin({}, options, {validate: true}));\r\n        },\r\n\r\n        // Run validation against the next complete set of model attributes,\r\n        // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\r\n        _validate: function(attrs, options) {\r\n          if (!options.validate || !this.validate) return true;\r\n          attrs = mixin({}, this.attributes, attrs);\r\n          var error = this.validationError = this.validate(attrs, options) || null;\r\n          if (!error) return true;\r\n          this.trigger('invalid', this, error, mixin(options, {validationError: error}));\r\n          return false;\r\n        }\r\n    });\r\n\r\n\treturn Stateful;\r\n});\ndefine('skylark-langx-topic/topic',[\r\n\t\"skylark-langx-ns\",\r\n\t\"skylark-langx-emitter/Evented\"\r\n],function(skylark,Evented){\r\n\tvar hub = new Evented();\r\n\r\n\treturn skylark.attach(\"langx.topic\",{\r\n\t    publish: function(name, arg1,argn) {\r\n\t        var data = [].slice.call(arguments, 1);\r\n\r\n\t        return hub.trigger({\r\n\t            type : name,\r\n\t            data : data\r\n\t        });\r\n\t    },\r\n\r\n        subscribe: function(name, listener,ctx) {\r\n        \tvar handler = function(e){\r\n                listener.apply(ctx,e.data);\r\n            };\r\n            hub.on(name, handler);\r\n            return {\r\n            \tremove : function(){\r\n            \t\thub.off(name,handler);\r\n            \t}\r\n            }\r\n\r\n        }\r\n\r\n\t});\r\n});\ndefine('skylark-langx-topic/main',[\r\n\t\"./topic\"\r\n],function(topic){\r\n\treturn topic;\r\n});\ndefine('skylark-langx-topic', ['skylark-langx-topic/main'], function (main) { return main; });\n\ndefine('skylark-langx/topic',[\r\n\t\"skylark-langx-topic\"\r\n],function(topic){\r\n\treturn topic;\r\n});\ndefine('skylark-langx/types',[\r\n    \"skylark-langx-types\"\r\n],function(types){\r\n    return types;\r\n});\ndefine('skylark-langx/langx',[\r\n    \"./skylark\",\r\n    \"./arrays\",\r\n    \"./ArrayStore\",\r\n    \"./aspect\",\r\n    \"./async\",\r\n    \"./datetimes\",\r\n    \"./Deferred\",\r\n    \"./Emitter\",\r\n    \"./Evented\",\r\n    \"./funcs\",\r\n    \"./hoster\",\r\n    \"./klass\",\r\n    \"./numbers\",\r\n    \"./objects\",\r\n    \"./Stateful\",\r\n    \"./strings\",\r\n    \"./topic\",\r\n    \"./types\"\r\n], function(skylark,arrays,ArrayStore,aspect,async,datetimes,Deferred,Emitter,Evented,funcs,hoster,klass,numbers,objects,Stateful,strings,topic,types) {\r\n    \"use strict\";\r\n    var toString = {}.toString,\r\n        concat = Array.prototype.concat,\r\n        indexOf = Array.prototype.indexOf,\r\n        slice = Array.prototype.slice,\r\n        filter = Array.prototype.filter,\r\n        mixin = objects.mixin,\r\n        safeMixin = objects.safeMixin,\r\n        isFunction = types.isFunction;\r\n\r\n\r\n    function funcArg(context, arg, idx, payload) {\r\n        return isFunction(arg) ? arg.call(context, idx, payload) : arg;\r\n    }\r\n\r\n    function getQueryParams(url) {\r\n        var url = url || window.location.href,\r\n            segs = url.split(\"?\"),\r\n            params = {};\r\n\r\n        if (segs.length > 1) {\r\n            segs[1].split(\"&\").forEach(function(queryParam) {\r\n                var nv = queryParam.split('=');\r\n                params[nv[0]] = nv[1];\r\n            });\r\n        }\r\n        return params;\r\n    }\r\n\r\n\r\n    function toPixel(value) {\r\n        // style values can be floats, client code may want\r\n        // to round for integer pixels.\r\n        return parseFloat(value) || 0;\r\n    }\r\n\r\n\r\n    var _uid = 1;\r\n\r\n    function uid(obj) {\r\n        return obj._uid || (obj._uid = _uid++);\r\n    }\r\n\r\n    function langx() {\r\n        return langx;\r\n    }\r\n\r\n    mixin(langx, {\r\n        createEvent : Emitter.createEvent,\r\n\r\n        funcArg: funcArg,\r\n\r\n        getQueryParams: getQueryParams,\r\n\r\n        toPixel: toPixel,\r\n\r\n        uid: uid,\r\n\r\n        URL: typeof window !== \"undefined\" ? window.URL || window.webkitURL : null\r\n\r\n    });\r\n\r\n\r\n    mixin(langx, arrays,aspect,datetimes,funcs,numbers,objects,strings,types,{\r\n        ArrayStore : ArrayStore,\r\n\r\n        async : async,\r\n        \r\n        Deferred: Deferred,\r\n\r\n        Emitter: Emitter,\r\n\r\n        Evented: Evented,\r\n\r\n        hoster : hoster,\r\n\r\n        klass : klass,\r\n       \r\n        Stateful: Stateful,\r\n\r\n        topic : topic\r\n    });\r\n\r\n    return skylark.langx = langx;\r\n});\ndefine('skylark-domx-browser/browser',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\"\r\n], function(skylark,langx) {\r\n    \"use strict\";\r\n\r\n    var browser = langx.hoster.browser;\r\n \r\n    var checkedCssProperties = {\r\n            \"transitionproperty\": \"TransitionProperty\",\r\n        },\r\n        transEndEventNames = {\r\n          WebkitTransition : 'webkitTransitionEnd',\r\n          MozTransition    : 'transitionend',\r\n          OTransition      : 'oTransitionEnd otransitionend',\r\n          transition       : 'transitionend'\r\n        },\r\n        transEndEventName = null;\r\n\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n                          testEl.mozMatchesSelector ||\r\n                          testEl.oMatchesSelector ||\r\n                          testEl.matchesSelector,\r\n\r\n        requestFullScreen = testEl.requestFullscreen || \r\n                            testEl.webkitRequestFullscreen || \r\n                            testEl.mozRequestFullScreen || \r\n                            testEl.msRequestFullscreen,\r\n\r\n        exitFullScreen =  document.exitFullscreen ||\r\n                          document.webkitCancelFullScreen ||\r\n                          document.mozCancelFullScreen ||\r\n                          document.msExitFullscreen,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n            if (transEndEventNames[name]) {\r\n              transEndEventName = transEndEventNames[name];\r\n            }\r\n        }\r\n    }\r\n\r\n    if (!transEndEventName) {\r\n        if (testStyle[\"transition\"] !== undefined) {\r\n            transEndEventName = transEndEventNames[\"transition\"];\r\n        }\r\n    }\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        isIE : !!/msie/i.exec( window.navigator.userAgent ),\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        requestFullScreen : requestFullScreen,\r\n\r\n        exitFullscreen : requestFullScreen,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {\r\n\r\n        }\r\n\r\n    });\r\n\r\n    if  (transEndEventName) {\r\n        browser.support.transition = {\r\n            end : transEndEventName\r\n        };\r\n    }\r\n\r\n    testEl = null;\r\n\r\n    return skylark.attach(\"domx.browser\",browser);\r\n});\r\n\ndefine('skylark-domx-browser/main',[\r\n\t\"./browser\"\r\n],function(browser){\r\n\treturn browser;\r\n});\ndefine('skylark-domx-browser', ['skylark-domx-browser/main'], function (main) { return main; });\n\ndefine('skylark-domx-noder/noder',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\"\r\n], function(skylark, langx, browser) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n\r\n    function activeElement(doc) {\r\n        doc = doc || document;\r\n        var el;\r\n\r\n        // Support: IE 9 only\r\n        // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\r\n        try {\r\n            el = doc.activeElement;\r\n        } catch ( error ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 9 - 11 only\r\n        // IE may return null instead of an element\r\n        // Interestingly, this only seems to occur when NOT in an iframe\r\n        if ( !el ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 11 only\r\n        // IE11 returns a seemingly empty object in some cases when accessing\r\n        // document.activeElement from an <iframe>\r\n        if ( !el.nodeName ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        return el;\r\n    };\r\n\r\n    function enhancePlaceContent(placing,node) {\r\n        if (langx.isFunction(placing)) {\r\n            return placing.apply(node,[]);\r\n        }\r\n        if (langx.isArrayLike(placing)) {\r\n            var neddsFlattern;\r\n            for (var i=0;i<placing.length;i++) {\r\n                if (langx.isFunction(placing[i])) {\r\n                    placing[i] = placing[i].apply(node,[]);\r\n                    if (langx.isArrayLike(placing[i])) {\r\n                        neddsFlattern = true;\r\n                    }\r\n                }\r\n            }\r\n            if (neddsFlattern) {\r\n                placing = langx.flatten(placing);\r\n            }\r\n        }\r\n        return placing;\r\n    }\r\n    function after(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Get the children of the specified node, including text and comment nodes.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    /*   \r\n     * Create a element and set attributes on it.\r\n     * @param {HTMLElement} tag\r\n     * @param {props} props\r\n     * @param } parent\r\n     */\r\n    function createElement(tag, props, parent) {\r\n        var node;\r\n\r\n        if (/svg/i.test(tag)) {\r\n            node = document.createElementNS(\"http://www.w3.org/2000/svg\", tag)\r\n        } else {\r\n            node = document.createElement(tag);\r\n        }\r\n\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent, node);\r\n        }\r\n        return node;\r\n    }\r\n\r\nfunction removeSelfClosingTags(xml) {\r\n    var split = xml.split(\"/>\");\r\n    var newXml = \"\";\r\n    for (var i = 0; i < split.length - 1;i++) {\r\n        var edsplit = split[i].split(\"<\");\r\n        newXml += split[i] + \"></\" + edsplit[edsplit.length - 1].split(\" \")[0] + \">\";\r\n    }\r\n    return newXml + split[split.length-1];\r\n}\r\n\r\n    /*   \r\n     * Create a DocumentFragment from the HTML fragment.\r\n     * @param {String} html\r\n     */\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = removeSelfClosingTags(\"\" + html);\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    /*   \r\n     * Create a deep copy of the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {Boolean} deep\r\n     */\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node .\r\n     * @param {String} node\r\n     * @param {Node} child\r\n     */\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    /*   \r\n     * Create a new Text node.\r\n     * @param {String} text\r\n     * @param {Node} child\r\n     */\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    /*   \r\n     * Get the current document object.\r\n     */\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    /*   \r\n     * Remove all child nodes of the set of matched elements from the DOM.\r\n     * @param {Object} node\r\n     */\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    var fulledEl = null;\r\n\r\n    function fullScreen(el) {\r\n        if (el === false) {\r\n            browser.exitFullScreen.apply(document);\r\n        } else if (el) {\r\n            browser.requestFullScreen.apply(el);\r\n            fulledEl = el;\r\n        } else {\r\n            return (\r\n                document.fullscreenElement ||\r\n                document.webkitFullscreenElement ||\r\n                document.mozFullScreenElement ||\r\n                document.msFullscreenElement\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    // Selectors\r\n    function focusable( element, hasTabindex ) {\r\n        var map, mapName, img, focusableIfVisible, fieldset,\r\n            nodeName = element.nodeName.toLowerCase();\r\n\r\n        if ( \"area\" === nodeName ) {\r\n            map = element.parentNode;\r\n            mapName = map.name;\r\n            if ( !element.href || !mapName || map.nodeName.toLowerCase() !== \"map\" ) {\r\n                return false;\r\n            }\r\n            img = $( \"img[usemap='#\" + mapName + \"']\" );\r\n            return img.length > 0 && img.is( \":visible\" );\r\n        }\r\n\r\n        if ( /^(input|select|textarea|button|object)$/.test( nodeName ) ) {\r\n            focusableIfVisible = !element.disabled;\r\n\r\n            if ( focusableIfVisible ) {\r\n\r\n                // Form controls within a disabled fieldset are disabled.\r\n                // However, controls within the fieldset's legend do not get disabled.\r\n                // Since controls generally aren't placed inside legends, we skip\r\n                // this portion of the check.\r\n                fieldset = $( element ).closest( \"fieldset\" )[ 0 ];\r\n                if ( fieldset ) {\r\n                    focusableIfVisible = !fieldset.disabled;\r\n                }\r\n            }\r\n        } else if ( \"a\" === nodeName ) {\r\n            focusableIfVisible = element.href || hasTabindex;\r\n        } else {\r\n            focusableIfVisible = hasTabindex;\r\n        }\r\n\r\n        return focusableIfVisible && $( element ).is( \":visible\" ) && visible( $( element ) );\r\n    };\r\n\r\n\r\n   var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi;\r\n \r\n    /*   \r\n     * Get the HTML contents of the first element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} html\r\n     */\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html)) {\r\n                html = html.replace( rxhtmlTag, \"<$1></$2>\" );\r\n            }\r\n            if (langx.isString(html) || langx.isNumber(html)) {               \r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isChildOf(node, parent, directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a document.\r\n     * @param {Node} node\r\n     */\r\n    function isDocument(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is in the document\r\n     * @param {Node} node\r\n     */\r\n    function isInDocument(node) {\r\n      return (node === document.body) ? true : document.body.contains(node);\r\n    }        \r\n\r\n    var blockNodes = [\"div\", \"p\", \"ul\", \"ol\", \"li\", \"blockquote\", \"hr\", \"pre\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"table\"];\r\n\r\n    function isBlockNode(node) {\r\n        if (!node || node.nodeType === 3) {\r\n          return false;\r\n        }\r\n        return new RegExp(\"^(\" + (blockNodes.join('|')) + \")$\").test(node.nodeName.toLowerCase());\r\n    }\r\n\r\n    function isActive (elem) {\r\n            return elem === document.activeElement && (elem.type || elem.href);\r\n    }\r\n\r\n    /*   \r\n     * Get the owner document object for the specified element.\r\n     * @param {Node} elm\r\n     */\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return doc.defaultView || doc.parentWindow;\r\n    }\r\n\r\n    /*   \r\n     * insert one or more nodes as the first children of the specified node.\r\n     * @param {Node} node\r\n     * @param {Node or ArrayLike} placing\r\n     * @param {Boolean Optional} copyByClone\r\n     */\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && document.defaultView.getComputedStyle(parent).position == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    /*   \r\n     * Remove the set of matched elements from the DOM.\r\n     * @param {Node} node\r\n     */\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n                node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\", e);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function removeChild(node,children) {\r\n        if (!langx.isArrayLike(children)) {\r\n            children = [children];\r\n        }\r\n        for (var i=0;i<children.length;i++) {\r\n            node.removeChild(children[i]);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollParent( elm, includeHidden ) {\r\n        var position = document.defaultView.getComputedStyle(elm).position,\r\n            excludeStaticParent = position === \"absolute\",\r\n            overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n            scrollParent = this.parents().filter( function() {\r\n                var parent = $( this );\r\n                if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                    return false;\r\n                }\r\n                return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                    parent.css( \"overflow-x\" ) );\r\n            } ).eq( 0 );\r\n\r\n        return position === \"fixed\" || !scrollParent.length ?\r\n            $( this[ 0 ].ownerDocument || document ) :\r\n            scrollParent;\r\n    };\r\n\r\n\r\n    function reflow(elm) {\r\n        if (el == null) {\r\n          elm = document;\r\n        }\r\n        elm.offsetHeight;\r\n\r\n        return this;      \r\n    }\r\n\r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {Node} node\r\n     * @param {Node} oldNode\r\n     */\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n\r\n    function selectable(elem, selectable) {\r\n        if (elem === undefined || elem.style === undefined)\r\n            return;\r\n        elem.onselectstart = selectable ? function () {\r\n            return false;\r\n        } : function () {\r\n        };\r\n        elem.style.MozUserSelect = selectable ? 'auto' : 'none';\r\n        elem.style.KhtmlUserSelect = selectable ? 'auto' : 'none';\r\n        elem.unselectable = selectable ? 'on' : 'off';\r\n    }\r\n\r\n    /*   \r\n     * traverse the specified node and its descendants, perform the callback function on each\r\n     * @param {Node} node\r\n     * @param {Function} fn\r\n     */\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} node\r\n     */\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around each element in the set of matched elements.\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around the content of each element in the set of matched\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Remove the parents of the set of matched elements from the DOM, leaving the matched\r\n     * @param {Node} node\r\n     */\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        active  : activeElement,\r\n\r\n        after: after,\r\n\r\n        append: append,\r\n\r\n        before: before,\r\n\r\n        blur : function(el) {\r\n            el.blur();\r\n        },\r\n\r\n        body: function() {\r\n            return document.body;\r\n        },\r\n\r\n        clone: clone,\r\n\r\n        contains: contains,\r\n\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n     \r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        fullScreen: fullScreen,\r\n\r\n        focusable: focusable,\r\n\r\n        html: html,\r\n\r\n        isActive,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDocument: isDocument,\r\n\r\n        isInDocument: isInDocument,\r\n\r\n        isWindow: langx.isWindow,\r\n\r\n        nodeName : nodeName,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow: ownerWindow,\r\n\r\n        prepend: prepend,\r\n\r\n        reflow: reflow,\r\n\r\n        remove: remove,\r\n\r\n        removeChild : removeChild,\r\n\r\n        replace: replace,\r\n\r\n        selectable,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.attach(\"domx.noder\" , noder);\r\n});\ndefine('skylark-domx-noder/main',[\r\n\t\"./noder\"\r\n],function(noder){\r\n\treturn noder;\r\n});\ndefine('skylark-domx-noder', ['skylark-domx-noder/main'], function (main) { return main; });\n\ndefine('skylark-domx-finder/finder',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-noder\"\r\n], function(skylark, langx, browser, noder) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        rinputs = /^(?:input|select|textarea|button)$/i,\r\n        rheader = /^h\\d$/i,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    var pseudos = local.pseudos = {\r\n        // custom pseudos\r\n        \"button\": function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === \"button\" || name === \"button\";\r\n        },\r\n\r\n        'checked': function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        'contains': function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        'eq': function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'even': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 0;\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        'focusable': function( elm ) {\r\n            return noder.focusable(elm, elm.tabindex != null );\r\n        },\r\n\r\n        'first': function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        'gt': function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        'has': function(elm, idx, nodes, sel) {\r\n            return find(elm, sel);\r\n        },\r\n\r\n        // Element/input types\r\n        \"header\": function(elem) {\r\n            return rheader.test(elem.nodeName);\r\n        },\r\n\r\n        'hidden': function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        \"input\": function(elem) {\r\n            return rinputs.test(elem.nodeName);\r\n        },\r\n\r\n        'last': function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        'lt': function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        'not': function(elm, idx, nodes, sel) {\r\n            return !matches(elm, sel);\r\n        },\r\n\r\n        'odd': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 1;\r\n        },\r\n\r\n        /*   \r\n         * Get the parent of each element in the current set of matched elements.\r\n         * @param {Object} elm\r\n         */\r\n        'parent': function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        'selected': function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        'tabbable': function(elm) {\r\n            var tabIndex = elm.tabindex,\r\n                hasTabindex = tabIndex != null;\r\n            return ( !hasTabindex || tabIndex >= 0 ) && noder.focusable( element, hasTabindex );\r\n        },\r\n\r\n        'text': function(elm) {\r\n            return elm.type === \"text\";\r\n        },\r\n\r\n        'visible': function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        },\r\n        'empty': function(elm) {\r\n            return !elm.hasChildNodes();\r\n        }\r\n    };\r\n\r\n    [\"first\", \"eq\", \"last\"].forEach(function(item) {\r\n        pseudos[item].isArrayFilter = true;\r\n    });\r\n\r\n\r\n\r\n    pseudos[\"nth\"] = pseudos[\"eq\"];\r\n\r\n    function createInputPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === type;\r\n        };\r\n    }\r\n\r\n    function createButtonPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return (name === \"input\" || name === \"button\") && elem.type === type;\r\n        };\r\n    }\r\n\r\n    // Add button/input type pseudos\r\n    for (i in {\r\n        radio: true,\r\n        checkbox: true,\r\n        file: true,\r\n        password: true,\r\n        image: true\r\n    }) {\r\n        pseudos[i] = createInputPseudo(i);\r\n    }\r\n    for (i in {\r\n        submit: true,\r\n        reset: true\r\n    }) {\r\n        pseudos[i] = createButtonPseudo(i);\r\n    }\r\n\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value) + \"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            if (tag !== \"*\") {\r\n                nativeSelector = tag.toUpperCase() + nativeSelector;\r\n            }\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes, arrayFilte) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos,\r\n\r\n            i, part, cls, pseudo;\r\n\r\n        if (!arrayFilte) {\r\n            if (tag = cond.tag) {\r\n                var nodeName = node.nodeName.toUpperCase();\r\n                if (tag == '*') {\r\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n                } else {\r\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n                }\r\n            }\r\n\r\n            if (id = cond.id) {\r\n                if (node.getAttribute('id') != id) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (classes = cond.classes) {\r\n                for (i = classes.length; i--;) {\r\n                    cls = node.getAttribute('class');\r\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\r\n                }\r\n            }\r\n\r\n            if (attributes = cond.attributes) {\r\n                for (i = attributes.length; i--;) {\r\n                    part = attributes[i];\r\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\r\n                        if (!pseudo(node, idx, nodes, part.value)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            parsed = selector;\r\n        }\r\n\r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i,\r\n            currentExpression;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node, exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    local.filterSingle = function(nodes, exp) {\r\n        var matchs = filter.call(nodes, function(node, idx) {\r\n            return local.check(node, exp, idx, nodes, false);\r\n        });\r\n\r\n        matchs = filter.call(matchs, function(node, idx) {\r\n            return local.check(node, exp, idx, matchs, true);\r\n        });\r\n        return matchs;\r\n    };\r\n\r\n    local.filter = function(nodes, selector) {\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            return local.filterSingle(nodes, selector);\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            i,\r\n            currentExpression,\r\n            ret = [];\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n\r\n                var matchs = local.filterSingle(nodes, exp);\r\n\r\n                ret = langx.uniq(ret.concat(matchs));\r\n            } else {\r\n                throw new Error(\"not supported selector:\" + selector);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n\r\n    };\r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, false)\r\n                        });\r\n\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, true)\r\n                        });\r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n    /*\r\n     * Get the nearest ancestor of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the ancestors of the specitied element , optionally filtered by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestors(node, selector, root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while ((node = node.parentNode) && (node.nodeType !== 9)) {\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (langx.isArrayLike(root)) {\r\n                    if (langx.inArray(node,root)>-1) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n            if (!selector || matches(node, selector)) {\r\n              ret.push(node); \r\n            }\r\n        }\r\n\r\n        //if (selector) {\r\n        //    ret = local.filter(ret, selector);\r\n        //}\r\n        return ret;\r\n    }\r\n\r\n\r\n    /*\r\n     * Returns a element by its ID.\r\n     * @param {string} id\r\n     */\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    /*\r\n     * Get the children of the specified element , optionally filtered by a selector.\r\n     * @param {string} node\r\n     * @param {String optionlly} selector\r\n     */\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    /*\r\n     * Get the decendant of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the nearest decendent of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the descendants of each element in the current set of matched elements, filtered by a selector, jQuery object, or element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function find(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        if (matches(elm, selector)) {\r\n            return elm;\r\n        } else {\r\n            return descendant(elm, selector);\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the findAll of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function findAll(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        return descendants(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the first child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String} first\r\n     */\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the last child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String } last\r\n     */\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Check the specified element against a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm, selector) > -1;\r\n        } else if (langx.isPlainObject(selector)) {\r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Get the nearest next sibing of the specitied element , optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional} adjacent\r\n     */\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the next siblings of the specified element , optional filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Get the parent element of the specified element. if a selector is provided, it retrieves the parent element only if it matches that selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get hte nearest previous sibling of the specified element ,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional } adjacent\r\n     */\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get all preceding siblings of each element in the set of matched elements, optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Selects all sibling elements that follow after the “prev” element, have the same parent, and match the filtering “siblings” selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling,\r\n\r\n        previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return skylark.attach(\"domx.finder\", finder);\r\n});\ndefine('skylark-domx-finder/main',[\r\n\t\"./finder\"\r\n],function(finder){\r\n\r\n\treturn finder;\r\n});\ndefine('skylark-domx-finder', ['skylark-domx-finder/main'], function (main) { return main; });\n\ndefine('skylark-domx-data/data',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-noder\"\r\n], function(skylark, langx, finder,noder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n\r\n    // Strip and collapse whitespace according to HTML spec\r\n    function stripAndCollapse( value ) {\r\n      var tokens = value.match( /[^\\x20\\t\\r\\n\\f]+/g ) || [];\r\n      return tokens.join( \" \" );\r\n    }\r\n\r\n\r\n    var valHooks = {\r\n      option: {\r\n        get: function( elem ) {\r\n          var val = elem.getAttribute( \"value\" );\r\n          return val != null ?  val :  stripAndCollapse(text( elem ) );\r\n        }\r\n      },\r\n      select: {\r\n        get: function( elem ) {\r\n          var value, option, i,\r\n            options = elem.options,\r\n            index = elem.selectedIndex,\r\n            one = elem.type === \"select-one\",\r\n            values = one ? null : [],\r\n            max = one ? index + 1 : options.length;\r\n\r\n          if ( index < 0 ) {\r\n            i = max;\r\n\r\n          } else {\r\n            i = one ? index : 0;\r\n          }\r\n\r\n          // Loop through all the selected options\r\n          for ( ; i < max; i++ ) {\r\n            option = options[ i ];\r\n\r\n            if ( option.selected &&\r\n\r\n                // Don't return options that are disabled or in a disabled optgroup\r\n                !option.disabled &&\r\n                ( !option.parentNode.disabled ||\r\n                  !noder.nodeName( option.parentNode, \"optgroup\" ) ) ) {\r\n\r\n              // Get the specific value for the option\r\n              value = val(option);\r\n\r\n              // We don't need an array for one selects\r\n              if ( one ) {\r\n                return value;\r\n              }\r\n\r\n              // Multi-Selects return an array\r\n              values.push( value );\r\n            }\r\n          }\r\n\r\n          return values;\r\n        },\r\n\r\n        set: function( elem, value ) {\r\n          var optionSet, option,\r\n            options = elem.options,\r\n            values = langx.makeArray( value ),\r\n            i = options.length;\r\n\r\n          while ( i-- ) {\r\n            option = options[ i ];\r\n\r\n            /* eslint-disable no-cond-assign */\r\n\r\n            if ( option.selected =\r\n              langx.inArray( valHooks.option.get( option ), values ) > -1\r\n            ) {\r\n              optionSet = true;\r\n            }\r\n\r\n            /* eslint-enable no-cond-assign */\r\n          }\r\n\r\n          // Force browsers to behave consistently when non-matching value is set\r\n          if ( !optionSet ) {\r\n            elem.selectedIndex = -1;\r\n          }\r\n          return values;\r\n        }\r\n      }\r\n    };\r\n\r\n\r\n    // Radios and checkboxes getter/setter\r\n    langx.each( [ \"radio\", \"checkbox\" ], function() {\r\n      valHooks[ this ] = {\r\n        set: function( elem, value ) {\r\n          if ( langx.isArray( value ) ) {\r\n            return ( elem.checked = langx.inArray( val(elem), value ) > -1 );\r\n          }\r\n        }\r\n      };\r\n    });\r\n\r\n\r\n\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function aria(elm, name, value) {\r\n        return this.attr(elm, \"aria-\" + name, value);\r\n    }\r\n\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return elm.getAttribute ? elm.getAttribute(name) : elm[name];\r\n            }\r\n        } else {\r\n            elm.setAttribute ? elm.setAttribute(name, value) : elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    /*\r\n     *  Read all \"data-*\" attributes from a node\r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    /*\r\n     * xxx\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    } \r\n    /*\r\n     * Remove from the element all items that have not yet been run. \r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function cleanData(elm) {\r\n        if (elm[\"_$_store\"]) {\r\n            delete elm[\"_$_store\"];\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Remove a previously-stored piece of data. \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function removeData(elm, names) {\r\n        if (names) {\r\n            if (langx.isString(names)) {\r\n                names = names.split(/\\s+/);\r\n            }\r\n            var store = _store(elm, true);\r\n            names.forEach(function(name) {\r\n                delete store[name];\r\n            });            \r\n        } else {\r\n            cleanData(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * xxx \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    /*\r\n     * Get or set the value of an property for the specified element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * remove Attributes  \r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n\r\n    /*\r\n     * Remove the value of a property for the first element in the set of matched elements or set one or more properties for every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Get the combined text contents of each element in the set of matched elements, including their descendants, or set the text contents of the matched elements.  \r\n     * @param {Object} elm  \r\n     * @param {String} txt\r\n     */\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Get the current value of the first element in the set of matched elements or set the value of every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} value\r\n     */\r\n    function val(elm, value) {\r\n        var hooks = valHooks[ elm.type ] || valHooks[ elm.nodeName.toLowerCase() ];\r\n        if (value === undefined) {\r\n/*\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                if (/input|textarea/i.test(elm.tagName)) {\r\n                  return elm.value;\r\n                }\r\n                return text(elm);\r\n            }\r\n*/\r\n\r\n          if ( hooks &&  \"get\" in hooks &&  ( ret = hooks.get( elm, \"value\" ) ) !== undefined ) {\r\n            return ret;\r\n          }\r\n\r\n          ret = elm.value;\r\n\r\n          // Handle most common string cases\r\n          if ( typeof ret === \"string\" ) {\r\n            return ret.replace( /\\r/g, \"\" );\r\n          }\r\n\r\n          // Handle cases where value is null/undef or number\r\n          return ret == null ? \"\" : ret;\r\n\r\n        } else {\r\n/*          \r\n            if (/input|textarea/i.test(elm.tagName)) {\r\n              elm.value = value;\r\n            } else {\r\n              text(elm,value);\r\n            }\r\n            return this;\r\n*/\r\n          // Treat null/undefined as \"\"; convert numbers to string\r\n          if ( value == null ) {\r\n            value = \"\";\r\n\r\n          } else if ( typeof value === \"number\" ) {\r\n            value += \"\";\r\n\r\n          } else if ( langx.isArray( value ) ) {\r\n            value = langx.map( value, function( value1 ) {\r\n              return value1 == null ? \"\" : value1 + \"\";\r\n            } );\r\n          }\r\n\r\n          // If set returns undefined, fall back to normal setting\r\n          if ( !hooks || !( \"set\" in hooks ) || hooks.set( elm, value, \"value\" ) === undefined ) {\r\n            elm.value = value;\r\n          }\r\n        }      \r\n    }\r\n\r\n\r\n    finder.pseudos.data = function( elem, i, match,dataName ) {\r\n        return !!data( elem, dataName || match[3]);\r\n    };\r\n   \r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        aria: aria,\r\n\r\n        attr: attr,\r\n\r\n        cleanData: cleanData,\r\n\r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val,\r\n\r\n        valHooks : valHooks\r\n    });\r\n\r\n    return skylark.attach(\"domx.data\", datax);\r\n});\ndefine('skylark-domx-query/query',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-finder\"\r\n], function(skylark, langx, noder, finder) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        indexOf = Array.prototype.indexOf,\r\n        sort = Array.prototype.sort,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_node_operation(func, context, oldValueFunc) {\r\n        return function(html) {\r\n            var argType, nodes = langx.map(arguments, function(arg) {\r\n                argType = type(arg)\r\n                return argType == \"function\" || argType == \"object\" || argType == \"array\" || arg == null ?\r\n                    arg : noder.createFragment(arg)\r\n            });\r\n            if (nodes.length < 1) {\r\n                return this\r\n            }\r\n            this.each(function(idx) {\r\n                func.apply(context, [this, nodes, idx > 0]);\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = langx.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return query(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                } else {\r\n                    return [];\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            //if (selector === undefined) { //TODO : needs confirm?\r\n            //    selector = util;\r\n            //    util = undefined;\r\n            //}\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) { // TODO\r\n                //if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                //} else {\r\n                //    return [];\r\n                //}\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx,node) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, newArg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this;\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem,name,newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        if (langx.isString(context)) {\r\n                            context = finder.find(context);\r\n                        }\r\n\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (selector !== window && isArrayLike(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    });\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                $.ready(function() {\r\n                    selector($);\r\n                });\r\n                return rootQuery;\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        },rootQuery = $(document);\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n            length : 0,\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            forEach: function() {\r\n                return forEach.apply(this,arguments);\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            indexOf: function() {\r\n                return indexOf.apply(this,arguments);\r\n            },\r\n\r\n            sort : function() {\r\n                return sort.apply(this,arguments);\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            //remove: wrapper_every_act(noder.remove, noder),\r\n            remove : function(selector) {\r\n                if (selector) {\r\n                    return this.find(selector).remove();\r\n                }\r\n                this.each(function(i,node){\r\n                    noder.remove(node);\r\n                });\r\n                return this;\r\n            },\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                if (this.length > 0) {\r\n                    var self = this;\r\n                    if (langx.isString(selector)) {\r\n                        return some.call(self,function(elem) {\r\n                            return finder.matches(elem, selector);\r\n                        });\r\n                    } else if (langx.isArrayLike(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return langx.inArray(elem, selector) > -1;\r\n                        });\r\n                    } else if (langx.isHtmlNode(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return elem ==  selector;\r\n                        });\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            \r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx,node) {\r\n                        if (!selector.call(this, idx,node)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            html: wrapper_value(noder.html, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            pushStack : function(elms) {\r\n                var ret = $(elms);\r\n                ret.prevObject = this;\r\n                return ret;\r\n            },\r\n            \r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(html) {\r\n                /*\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index,node) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index,node) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n                */\r\n                var htmlIsFunction = typeof html === \"function\";\r\n\r\n                return this.each( function( i ) {\r\n                    $( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );\r\n                } );                \r\n            },\r\n\r\n            wrapAll: function(html) {\r\n                /*\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n                */\r\n                var wrap;\r\n\r\n                if ( this[ 0 ] ) {\r\n                    if ( typeof html === \"function\" ) {\r\n                        html = html.call( this[ 0 ] );\r\n                    }\r\n\r\n                    // The elements to wrap the target around\r\n                    wrap = $( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\r\n\r\n                    if ( this[ 0 ].parentNode ) {\r\n                        wrap.insertBefore( this[ 0 ] );\r\n                    }\r\n\r\n                    wrap.map( function() {\r\n                        var elem = this;\r\n\r\n                        while ( elem.firstElementChild ) {\r\n                            elem = elem.firstElementChild;\r\n                        }\r\n\r\n                        return elem;\r\n                    } ).append( this );\r\n                }\r\n\r\n                return this;\r\n\r\n            },\r\n\r\n            wrapInner: function(html) {\r\n                /*\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index,node) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index,node) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n                */\r\n                if ( typeof html === \"function\" ) {\r\n                    return this.each( function( i ) {\r\n                        $( this ).wrapInner( html.call( this, i ) );\r\n                    } );\r\n                }\r\n\r\n                return this.each( function() {\r\n                    var self = $( this ),\r\n                        contents = self.contents();\r\n\r\n                    if ( contents.length ) {\r\n                        contents.wrapAll( html );\r\n\r\n                    } else {\r\n                        self.append( html );\r\n                    }\r\n                } );\r\n\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                /*\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n                */\r\n                this.parent(selector).not(\"body\").each( function() {\r\n                    $(this).replaceWith(this.childNodes);\r\n                });\r\n                return this;\r\n\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSiblings, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            }\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n        $.fn.hover = function(fnOver, fnOut) {\r\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n        };\r\n\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n\r\n        langx.each( {\r\n            appendTo: \"append\",\r\n            prependTo: \"prepend\",\r\n            insertBefore: \"before\",\r\n            insertAfter: \"after\",\r\n            replaceAll: \"replaceWith\"\r\n        }, function( name, original ) {\r\n            $.fn[ name ] = function( selector ) {\r\n                var elems,\r\n                    ret = [],\r\n                    insert = $( selector ),\r\n                    last = insert.length - 1,\r\n                    i = 0;\r\n\r\n                for ( ; i <= last; i++ ) {\r\n                    elems = i === last ? this : this.clone( true );\r\n                    $( insert[ i ] )[ original ]( elems );\r\n\r\n                    // Support: Android <=4.0 only, PhantomJS 1 only\r\n                    // .get() because push.apply(_, arraylike) throws on ancient WebKit\r\n                    push.apply( ret, elems.get() );\r\n                }\r\n\r\n                return this.pushStack( ret );\r\n            };\r\n        } );\r\n\r\n/*\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceAll = function(selector) {\r\n            $(selector).replaceWith(this);\r\n            return this;\r\n        };\r\n*/\r\n        return $;\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.scrollParent = function( includeHidden ) {\r\n            var position = this.css( \"position\" ),\r\n                excludeStaticParent = position === \"absolute\",\r\n                overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n                scrollParent = this.parents().filter( function() {\r\n                    var parent = $( this );\r\n                    if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                        return false;\r\n                    }\r\n                    return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                        parent.css( \"overflow-x\" ) );\r\n                } ).eq( 0 );\r\n\r\n            return position === \"fixed\" || !scrollParent.length ?\r\n                $( this[ 0 ].ownerDocument || document ) :\r\n                scrollParent;\r\n        };\r\n\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings,prev,prevAll,next,nextAll'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n\r\n\r\n        $.fn.disableSelection = ( function() {\r\n            var eventType = \"onselectstart\" in document.createElement( \"div\" ) ?\r\n                \"selectstart\" :\r\n                \"mousedown\";\r\n\r\n            return function() {\r\n                return this.on( eventType + \".ui-disableSelection\", function( event ) {\r\n                    event.preventDefault();\r\n                } );\r\n            };\r\n        } )();\r\n\r\n        $.fn.enableSelection = function() {\r\n            return this.off( \".ui-disableSelection\" );\r\n        };\r\n\r\n        $.fn.reflow = function() {\r\n            return noder.flow(this[0]);\r\n        };\r\n\r\n        $.fn.isBlockNode = function() {\r\n            return noder.isBlockNode(this[0]);\r\n        };\r\n       \r\n\r\n    })(query);\r\n\r\n    query.fn.plugin = function(name,options) {\r\n        var args = slice.call( arguments, 1 ),\r\n            self = this,\r\n            returnValue = this;\r\n\r\n        this.each(function(){\r\n            returnValue = plugins.instantiate.apply(self,[this,name].concat(args));\r\n        });\r\n        return returnValue;\r\n    };\r\n\r\n\r\n    query.wraps = {\r\n        wrapper_node_operation,\r\n        wrapper_map,\r\n        wrapper_value,\r\n        wrapper_selector,\r\n        wrapper_some_chk,\r\n        wrapper_selector_until,\r\n        wrapper_every_act_firstArgFunc,\r\n        wrapper_every_act,\r\n        wrapper_name_value\r\n\r\n    };\r\n\r\n    return skylark.attach(\"domx.query\", query);\r\n\r\n});\ndefine('skylark-domx-query/main',[\r\n\t\"./query\"\r\n],function(query){\r\n\treturn query;\r\n});\ndefine('skylark-domx-query', ['skylark-domx-query/main'], function (main) { return main; });\n\ndefine('skylark-domx-velm/velm',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-query\"\r\n], function(skylark, langx, noder, finder, $) {\r\n    var map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n    /*\r\n     * VisualElement is a skylark class type wrapping a visule dom node,\r\n     * provides a number of prototype methods and supports chain calls.\r\n     */\r\n    var VisualElement = langx.klass({\r\n        klassName: \"VisualElement\",\r\n\r\n        \"_construct\": function(node) {\r\n            if (langx.isString(node)) {\r\n                if (node.charAt(0) === \"<\") {\r\n                    //html\r\n                    node = noder.createFragment(node)[0];\r\n                } else {\r\n                    // id\r\n                    node = document.getElementById(node);\r\n                }\r\n            }\r\n            this._elm = node;\r\n        }\r\n    });\r\n\r\n    VisualElement.prototype.$ = VisualElement.prototype.query = function(selector) {\r\n        return $(selector,this._elm);\r\n    };\r\n\r\n    VisualElement.prototype.elm = function() {\r\n        return this._elm;\r\n    };\r\n\r\n    /*\r\n     * the VisualElement object wrapping document.body\r\n     */\r\n    var root = new VisualElement(document.body),\r\n        velm = function(node) {\r\n            if (node) {\r\n                return new VisualElement(node);\r\n            } else {\r\n                return root;\r\n            }\r\n        };\r\n    /*\r\n     * Extend VisualElement prototype with wrapping the specified methods.\r\n     * @param {ArrayLike} fn\r\n     * @param {Object} context\r\n     */\r\n    function _delegator(fn, context) {\r\n        return function() {\r\n            var self = this,\r\n                elem = self._elm,\r\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\r\n\r\n            if (ret) {\r\n                if (ret === context) {\r\n                    return self;\r\n                } else {\r\n                    if (ret instanceof HTMLElement) {\r\n                        ret = new VisualElement(ret);\r\n                    } else if (langx.isArrayLike(ret)) {\r\n                        ret = map.call(ret, function(el) {\r\n                            if (el instanceof HTMLElement) {\r\n                                return new VisualElement(el);\r\n                            } else {\r\n                                return el;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n    }\r\n\r\n    langx.mixin(velm, {\r\n        batch: function(nodes, action, args) {\r\n            nodes.forEach(function(node) {\r\n                var elm = (node instanceof VisualElement) ? node : velm(node);\r\n                elm[action].apply(elm, args);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        root: new VisualElement(document.body),\r\n\r\n        VisualElement: VisualElement,\r\n\r\n        partial: function(name, fn) {\r\n            var props = {};\r\n\r\n            props[name] = fn;\r\n\r\n            VisualElement.partial(props);\r\n        },\r\n\r\n        delegate: function(names, context) {\r\n            var props = {};\r\n\r\n            names.forEach(function(name) {\r\n                props[name] = _delegator(context[name], context);\r\n            });\r\n\r\n            VisualElement.partial(props);\r\n        }\r\n    });\r\n\r\n    // from ./finder\r\n    velm.delegate([\r\n        \"ancestor\",\r\n        \"ancestors\",\r\n        \"children\",\r\n        \"descendant\",\r\n        \"find\",\r\n        \"findAll\",\r\n        \"firstChild\",\r\n        \"lastChild\",\r\n        \"matches\",\r\n        \"nextSibling\",\r\n        \"nextSiblings\",\r\n        \"parent\",\r\n        \"previousSibling\",\r\n        \"previousSiblings\",\r\n        \"siblings\"\r\n    ], finder);\r\n\r\n    /*\r\n     * find a dom element matched by the specified selector.\r\n     * @param {String} selector\r\n     */\r\n    velm.find = function(selector) {\r\n        if (selector === \"body\") {\r\n            return this.root;\r\n        } else {\r\n            return this.root.descendant(selector);\r\n        }\r\n    };\r\n\r\n\r\n    // from ./noder\r\n    velm.delegate([\r\n        \"after\",\r\n        \"append\",\r\n        \"before\",\r\n        \"clone\",\r\n        \"contains\",\r\n        \"contents\",\r\n        \"empty\",\r\n        \"html\",\r\n        \"isChildOf\",\r\n        \"isDocument\",\r\n        \"isInDocument\",\r\n        \"isWindow\",\r\n        \"ownerDoc\",\r\n        \"prepend\",\r\n        \"remove\",\r\n        \"removeChild\",\r\n        \"replace\",\r\n        \"reverse\",\r\n        \"throb\",\r\n        \"traverse\",\r\n        \"wrapper\",\r\n        \"wrapperInner\",\r\n        \"unwrap\"\r\n    ], noder);\r\n\r\n\r\n    return skylark.attach(\"domx.velm\", velm);\r\n});\ndefine('skylark-domx-velm/main',[\r\n\t\"./velm\"\r\n],function(velm){\r\n\treturn velm;\r\n});\ndefine('skylark-domx-velm', ['skylark-domx-velm/main'], function (main) { return main; });\n\ndefine('skylark-domx-data/main',[\r\n    \"./data\",\r\n    \"skylark-domx-velm\",\r\n    \"skylark-domx-query\"    \r\n],function(data,velm,$){\r\n    // from ./data\r\n    velm.delegate([\r\n        \"attr\",\r\n        \"data\",\r\n        \"prop\",\r\n        \"removeAttr\",\r\n        \"removeData\",\r\n        \"text\",\r\n        \"val\"\r\n    ], data);\r\n\r\n    $.fn.text = $.wraps.wrapper_value(data.text, data, data.text);\r\n\r\n    $.fn.attr = $.wraps.wrapper_name_value(data.attr, data, data.attr);\r\n\r\n    $.fn.removeAttr = $.wraps.wrapper_every_act(data.removeAttr, data);\r\n\r\n    $.fn.prop = $.wraps.wrapper_name_value(data.prop, data, data.prop);\r\n\r\n    $.fn.removeProp = $.wraps.wrapper_every_act(data.removeProp, data);\r\n\r\n    $.fn.data = $.wraps.wrapper_name_value(data.data, data);\r\n\r\n    $.fn.removeData = $.wraps.wrapper_every_act(data.removeData);\r\n\r\n    $.fn.val = $.wraps.wrapper_value(data.val, data, data.val);\r\n\r\n\r\n    return data;\r\n});\ndefine('skylark-domx-data', ['skylark-domx-data/main'], function (main) { return main; });\n\ndefine('skylark-domx-eventer/eventer',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-data\"\r\n], function(skylark, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n\r\n    var NativeEventCtors = [\r\n            window[\"CustomEvent\"], // 0 default\r\n            window[\"CompositionEvent\"], // 1\r\n            window[\"DragEvent\"], // 2\r\n            window[\"Event\"], // 3\r\n            window[\"FocusEvent\"], // 4\r\n            window[\"KeyboardEvent\"], // 5\r\n            window[\"MessageEvent\"], // 6\r\n            window[\"MouseEvent\"], // 7\r\n            window[\"MouseScrollEvent\"], // 8\r\n            window[\"MouseWheelEvent\"], // 9\r\n            window[\"MutationEvent\"], // 10\r\n            window[\"ProgressEvent\"], // 11\r\n            window[\"TextEvent\"], // 12\r\n            window[\"TouchEvent\"], // 13\r\n            window[\"UIEvent\"], // 14\r\n            window[\"WheelEvent\"], // 15\r\n            window[\"ClipboardEvent\"] // 16\r\n        ],\r\n        NativeEvents = {\r\n            \"compositionstart\": 1, // CompositionEvent\r\n            \"compositionend\": 1, // CompositionEvent\r\n            \"compositionupdate\": 1, // CompositionEvent\r\n\r\n            \"beforecopy\": 16, // ClipboardEvent\r\n            \"beforecut\": 16, // ClipboardEvent\r\n            \"beforepaste\": 16, // ClipboardEvent\r\n            \"copy\": 16, // ClipboardEvent\r\n            \"cut\": 16, // ClipboardEvent\r\n            \"paste\": 16, // ClipboardEvent\r\n\r\n            \"drag\": 2, // DragEvent\r\n            \"dragend\": 2, // DragEvent\r\n            \"dragenter\": 2, // DragEvent\r\n            \"dragexit\": 2, // DragEvent\r\n            \"dragleave\": 2, // DragEvent\r\n            \"dragover\": 2, // DragEvent\r\n            \"dragstart\": 2, // DragEvent\r\n            \"drop\": 2, // DragEvent\r\n\r\n            \"abort\": 3, // Event\r\n            \"change\": 3, // Event\r\n            \"error\": 3, // Event\r\n            \"selectionchange\": 3, // Event\r\n            \"submit\": 3, // Event\r\n            \"reset\": 3, // Event\r\n\r\n            \"focus\": 4, // FocusEvent\r\n            \"blur\": 4, // FocusEvent\r\n            \"focusin\": 4, // FocusEvent\r\n            \"focusout\": 4, // FocusEvent\r\n\r\n            \"keydown\": 5, // KeyboardEvent\r\n            \"keypress\": 5, // KeyboardEvent\r\n            \"keyup\": 5, // KeyboardEvent\r\n\r\n            \"message\": 6, // MessageEvent\r\n\r\n            \"click\": 7, // MouseEvent\r\n            \"contextmenu\": 7, // MouseEvent\r\n            \"dblclick\": 7, // MouseEvent\r\n            \"mousedown\": 7, // MouseEvent\r\n            \"mouseup\": 7, // MouseEvent\r\n            \"mousemove\": 7, // MouseEvent\r\n            \"mouseover\": 7, // MouseEvent\r\n            \"mouseout\": 7, // MouseEvent\r\n            \"mouseenter\": 7, // MouseEvent\r\n            \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n            \"textInput\": 12, // TextEvent\r\n\r\n            \"touchstart\": 13, // TouchEvent\r\n            \"touchmove\": 13, // TouchEvent\r\n            \"touchend\": 13, // TouchEvent\r\n\r\n            \"load\": 14, // UIEvent\r\n            \"resize\": 14, // UIEvent\r\n            \"select\": 14, // UIEvent\r\n            \"scroll\": 14, // UIEvent\r\n            \"unload\": 14, // UIEvent,\r\n\r\n            \"wheel\": 15 // WheelEvent\r\n        };\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return NativeEventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type || {};\r\n                type = props.type || \"\";\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(src, props) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: src\r\n            };\r\n        for (key in src) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && src[key] !== undefined) {\r\n                proxy[key] = src[key];\r\n            }\r\n        }\r\n        if (props) {\r\n            langx.mixin(proxy, props);\r\n        }\r\n        return compatible(proxy, src);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings, function(idx, binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns && options.ns.indexOf(ns) === -1) {\r\n                                return;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            var originalEvent = self._event;\r\n                            if (originalEvent in hover) {\r\n                                var related = e.relatedTarget;\r\n                                if (related && (related === match || noder.contains(match, related))) {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n                    /*\r\n                                        if (event in hover) {\r\n                                            var l = self._listener;\r\n                                            self._listener = function(e) {\r\n                                                var related = e.relatedTarget;\r\n                                                if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                                    return l.apply(this, arguments);\r\n                                                }\r\n                                            }\r\n                                        }\r\n                    */\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                if (event) {\r\n                    var listener = events[event];\r\n\r\n                    if (listener) {\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                } else {\r\n                    //remove all events\r\n                    for (event in events) {\r\n                        var listener = events[event];\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    /*   \r\n     * Remove an event handler for one or more events from the specified element.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional } selector\r\n     * @param {Function} callback\r\n     */\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach an event handler function for one or more events to the selected elements.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     * @param {Boolean　Optional} one\r\n     */\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach a handler to an event for the elements. The handler is executed at most once per \r\n     * @param {HTMLElement} elm  \r\n     * @param {String} event\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     */\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Prevents propagation and clobbers the default action of the passed event. The same as calling event.preventDefault() and event.stopPropagation(). \r\n     * @param {String} event\r\n     */\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Execute all handlers and behaviors attached to the matched elements for the given event  \r\n     * @param {String} evented\r\n     * @param {String} type\r\n     * @param {Array or PlainObject } args\r\n     */\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        var fn = (evented.dispatchEvent || evented.trigger);\r\n        if (fn) {\r\n            fn.call(evented, e);\r\n        } else {\r\n            console.warn(\"The evented parameter is not a eventable object\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n    /*   \r\n     * Specify a function to execute when the DOM is fully loaded.  \r\n     * @param {Function} callback\r\n     */\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            langx.defer(callback);\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"backspace\": 8,\r\n        \"comma\": 188,\r\n        \"delete\": 46,\r\n        \"down\": 40,\r\n        \"end\": 35,\r\n        \"enter\": 13,\r\n        \"escape\": 27,\r\n        \"home\": 36,\r\n        \"left\": 37,\r\n        \"page_down\": 34,\r\n        \"page_up\": 33,\r\n        \"period\": 190,\r\n        \"right\": 39,\r\n        \"space\": 32,\r\n        \"tab\": 9,\r\n        \"up\": 38\r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    if (browser.support.transition) {\r\n        specialEvents.transitionEnd = {\r\n//          handle: function (e) {\r\n//            if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)\r\n//          },\r\n          bindType: browser.support.transition.end,\r\n          delegateType: browser.support.transition.end\r\n        }        \r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        NativeEvents : NativeEvents,\r\n        \r\n        create: createEvent,\r\n\r\n        keys: keyCodeLookup,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special: specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    each(NativeEvents,function(name){\r\n        eventer[name] = function(elm,selector,data,callback) {\r\n            if (arguments.length>1) {\r\n                return this.on(elm,name,selector,data,callback);\r\n            } else {\r\n                if (name == \"focus\") {\r\n                    if (elm.focus) {\r\n                        elm.focus();\r\n                    }\r\n                } else if (name == \"blur\") {\r\n                    if (elm.blur) {\r\n                        elm.blur();\r\n                    }\r\n                } else if (name == \"click\") {\r\n                    if (elm.click) {\r\n                        elm.click();\r\n                    }\r\n                } else {\r\n                    this.trigger(elm,name);\r\n                }\r\n\r\n                return this;\r\n            }\r\n        };\r\n    });\r\n\r\n    return skylark.attach(\"domx.eventer\",eventer);\r\n});\ndefine('skylark-domx-eventer/main',[\r\n    \"skylark-langx/langx\",\r\n    \"./eventer\",\r\n    \"skylark-domx-velm\",\r\n    \"skylark-domx-query\"        \r\n],function(langx,eventer,velm,$){\r\n\r\n    var delegateMethodNames = [\r\n        \"off\",\r\n        \"on\",\r\n        \"one\",\r\n        \"trigger\"\r\n    ];\r\n\r\n    langx.each(eventer.NativeEvents,function(name){\r\n        delegateMethodNames.push(name);\r\n    });\r\n\r\n    // from ./eventer\r\n    velm.delegate(delegateMethodNames, eventer);\r\n\r\n    langx.each(delegateMethodNames,function(i,name){\r\n        $.fn[name] = $.wraps.wrapper_every_act(eventer[name],eventer);\r\n    });\r\n\r\n\r\n    /*\r\n    $.fn.on = $.wraps.wrapper_every_act(eventer.on, eventer);\r\n\r\n    $.fn.off = $.wraps.wrapper_every_act(eventer.off, eventer);\r\n\r\n    $.fn.trigger = $.wraps.wrapper_every_act(eventer.trigger, eventer);\r\n\r\n    ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n        'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n        'change select keydown keypress keyup error transitionEnd').split(' ').forEach(function(event) {\r\n        $.fn[event] = $.wraps.wrapper_every_act(eventer[event],eventer);\r\n    });\r\n\r\n    $.fn.one = function(event, selector, data, callback) {\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = null;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = null;\r\n        }\r\n\r\n        return this.on(event, selector, data, callback, 1)\r\n    }; \r\n    */\r\n\r\n    $.ready = eventer.ready;\r\n\r\n    return eventer;\r\n});\ndefine('skylark-domx-eventer', ['skylark-domx-eventer/main'], function (main) { return main; });\n\ndefine('skylark-domx-files/files',[\r\n    \"skylark-langx/skylark\"\r\n], function(skylark) {\r\n\r\n    function dataURLtoBlob(dataurl) {\r\n        var arr = dataurl.split(','),\r\n            mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]),\r\n            n = bstr.length,\r\n            u8arr = new Uint8Array(n);\r\n        while (n--) {\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], { type: mime });\r\n    }\r\n\r\n\r\n    var files = function() {\r\n        return files;\r\n    };\r\n\r\n    return skylark.attach(\"domx.files\", files);\r\n});\ndefine('skylark-domx-styler/styler',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\"\r\n], function(skylark, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} value\r\n     */\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n    function disabled(elm, value ) {\r\n        if (arguments.length < 2) {\r\n            return !!this.dom.disabled;\r\n        }\r\n\r\n        elm.disabled = value;\r\n\r\n        return this;\r\n    }\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getStyles(element).getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n    /*\r\n     * Display the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    /*\r\n     * Hide the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n\r\n    function getStyles( elem ) {\r\n\r\n        // Support: IE <=11 only, Firefox <=30 (#15098, #14150)\r\n        // IE throws on elements created in popups\r\n        // FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\r\n        var view = elem.ownerDocument.defaultView;\r\n\r\n        if ( !view || !view.opener ) {\r\n            view = window;\r\n        }\r\n\r\n        return view.getComputedStyle( elem);\r\n    }\r\n\r\n\r\n    /*\r\n     * Get the value of a computed style property for the first element in the set of matched elements or set one or more CSS properties for every matched element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} property\r\n     * @param {Any} value\r\n     */\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getStyles(elm)\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(dasherize(property))\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(dasherize(prop)))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Determine whether any of the matched elements are assigned the given class.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    /*\r\n     * Remove a single class, multiple classes, or all classes from each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm, \"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Add or remove one or more classes from the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     * @param {} when\r\n     */\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: false,\r\n        cssHooks: {\r\n\r\n        },\r\n\r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        disabled : disabled,        \r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return skylark.attach(\"domx.styler\", styler);\r\n});\ndefine('skylark-domx-styler/main',[\r\n\t\"./styler\",\r\n\t\"skylark-domx-velm\",\r\n\t\"skylark-domx-query\"\t\r\n],function(styler,velm,$){\r\n\t\r\n    // from ./styler\r\n    velm.delegate([\r\n        \"addClass\",\r\n        \"className\",\r\n        \"css\",\r\n        \"hasClass\",\r\n        \"hide\",\r\n        \"isInvisible\",\r\n        \"removeClass\",\r\n        \"show\",\r\n        \"toggleClass\"\r\n    ], styler);\r\n\r\n    // properties\r\n\r\n    var properties = [ 'position', 'left', 'top', 'right', 'bottom', 'width', 'height', 'border', 'borderLeft',\r\n    'borderTop', 'borderRight', 'borderBottom', 'borderColor', 'display', 'overflow', 'margin', 'marginLeft', 'marginTop', 'marginRight', 'marginBottom', 'padding', 'paddingLeft', 'paddingTop', 'paddingRight', 'paddingBottom', 'color',\r\n    'background', 'backgroundColor', 'opacity', 'fontSize', 'fontWeight', 'textAlign', 'textDecoration', 'textTransform', 'cursor', 'zIndex' ];\r\n\r\n    properties.forEach( function ( property ) {\r\n\r\n        var method = property;\r\n\r\n        velm.VisualElement.prototype[method ] = function (value) {\r\n\r\n            this.css( property, value );\r\n\r\n            return this;\r\n\r\n        };\r\n\r\n    });\r\n\r\n\r\n    $.fn.style = $.wraps.wrapper_name_value(styler.css, styler);\r\n\r\n    $.fn.css = $.wraps.wrapper_name_value(styler.css, styler);\r\n\r\n    //hasClass(name)\r\n    $.fn.hasClass = $.wraps.wrapper_some_chk(styler.hasClass, styler);\r\n\r\n    //addClass(name)\r\n    $.fn.addClass = $.wraps.wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className);\r\n\r\n    //removeClass(name)\r\n    $.fn.removeClass = $.wraps.wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className);\r\n\r\n    //toogleClass(name,when)\r\n    $.fn.toggleClass = $.wraps.wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className);\r\n\r\n    $.fn.replaceClass = function(newClass, oldClass) {\r\n        this.removeClass(oldClass);\r\n        this.addClass(newClass);\r\n        return this;\r\n    };\r\n\r\n    $.fn.replaceClass = function(newClass, oldClass) {\r\n        this.removeClass(oldClass);\r\n        this.addClass(newClass);\r\n        return this;\r\n    };\r\n        \r\n\treturn styler;\r\n});\ndefine('skylark-domx-styler', ['skylark-domx-styler/main'], function (main) { return main; });\n\ndefine('skylark-io-diskfs/diskfs',[\r\n    \"skylark-langx/skylark\"\r\n], function(skylark) {\r\n\r\n    function dataURLtoBlob(dataurl) {\r\n        var arr = dataurl.split(','),\r\n            mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]),\r\n            n = bstr.length,\r\n            u8arr = new Uint8Array(n);\r\n        while (n--) {\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], { type: mime });\r\n    }\r\n\r\n\r\n    var diskfs = function() {\r\n        return diskfs;\r\n    };\r\n\r\n    return skylark.attach(\"storages.diskfs\", diskfs);\r\n});\n define('skylark-io-diskfs/webentry',[\r\n    \"skylark-langx/arrays\",\r\n    \"skylark-langx/Deferred\",\r\n    \"./diskfs\"\r\n],function(arrays,Deferred, diskfs){\r\n    var concat = Array.prototype.concat;\r\n    var webentry = (function() {\r\n        function one(entry, path) {\r\n            var d = new Deferred(),\r\n                onError = function(e) {\r\n                    d.reject(e);\r\n                };\r\n\r\n            path = path || '';\r\n            if (entry.isFile) {\r\n                entry.file(function(file) {\r\n                    file.relativePath = path;\r\n                    d.resolve(file);\r\n                }, onError);\r\n            } else if (entry.isDirectory) {\r\n                var dirReader = entry.createReader();\r\n                dirReader.readEntries(function(entries) {\r\n                    all(\r\n                        entries,\r\n                        path + entry.name + '/'\r\n                    ).then(function(files) {\r\n                        d.resolve(files);\r\n                    }).catch(onError);\r\n                }, onError);\r\n            } else {\r\n                // Return an empy list for file system items\r\n                // other than files or directories:\r\n                d.resolve([]);\r\n            }\r\n            return d.promise;\r\n        }\r\n\r\n        function all(entries, path) {\r\n            return Deferred.all(\r\n                arrays.map(entries, function(entry) {\r\n                    return one(entry, path);\r\n                })\r\n            ).then(function() {\r\n                return concat.apply([], arguments);\r\n            });\r\n        }\r\n\r\n        return {\r\n            one: one,\r\n            all: all\r\n        };\r\n    })();\r\n\r\n    return diskfs.webentry = webentry;\r\n});\n  define('skylark-domx-files/dropzone',[\r\n    \"skylark-langx/arrays\",\r\n    \"skylark-langx/Deferred\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-eventer\",\r\n    \"./files\",\r\n    \"skylark-io-diskfs/webentry\"\r\n],function(arrays,Deferred, styler, eventer, files, webentry){  /*\r\n     * Make the specified element to could accept HTML5 file drag and drop.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} params\r\n     */\r\n    function dropzone(elm, params) {\r\n        params = params || {};\r\n        var hoverClass = params.hoverClass || \"dropzone\",\r\n            droppedCallback = params.dropped;\r\n\r\n        var enterdCount = 0;\r\n        eventer.on(elm, \"dragenter\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                eventer.stop(e);\r\n                enterdCount++;\r\n                styler.addClass(elm, hoverClass)\r\n            }\r\n        });\r\n\r\n        eventer.on(elm, \"dragover\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                eventer.stop(e);\r\n            }\r\n        });\r\n\r\n        eventer.on(elm, \"dragleave\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                enterdCount--\r\n                if (enterdCount == 0) {\r\n                    styler.removeClass(elm, hoverClass);\r\n                }\r\n            }\r\n        });\r\n\r\n        eventer.on(elm, \"drop\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                styler.removeClass(elm, hoverClass)\r\n                eventer.stop(e);\r\n                if (droppedCallback) {\r\n                    var items = e.dataTransfer.items;\r\n                    if (items && items.length && (items[0].webkitGetAsEntry ||\r\n                            items[0].getAsEntry)) {\r\n                        webentry.all(\r\n                            arrays.map(items, function(item) {\r\n                                if (item.webkitGetAsEntry) {\r\n                                    return item.webkitGetAsEntry();\r\n                                }\r\n                                return item.getAsEntry();\r\n                            })\r\n                        ).then(droppedCallback);\r\n                    } else {\r\n                        droppedCallback(e.dataTransfer.files);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n     return files.dropzone = dropzone;\r\n});\ndefine('skylark-domx-files/pastezone',[\r\n    \"skylark-langx/objects\",\r\n    \"skylark-domx-eventer\",\r\n    \"./files\"\r\n],function(objects, eventer, files){\r\n    function pastezone(elm, params) {\r\n        params = params || {};\r\n        var hoverClass = params.hoverClass || \"pastezone\",\r\n            pastedCallback = params.pasted;\r\n\r\n        eventer.on(elm, \"paste\", function(e) {\r\n            var items = e.originalEvent && e.originalEvent.clipboardData &&\r\n                e.originalEvent.clipboardData.items,\r\n                files = [];\r\n            if (items && items.length) {\r\n                objects.each(items, function(index, item) {\r\n                    var file = item.getAsFile && item.getAsFile();\r\n                    if (file) {\r\n                        files.push(file);\r\n                    }\r\n                });\r\n            }\r\n            if (pastedCallback && files.length) {\r\n                pastedCallback(files);\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    return files.pastezone = pastezone;\r\n\r\n});\r\n\ndefine('skylark-io-diskfs/select',[\r\n    \"./diskfs\"\r\n],function(diskfs){\r\n    var fileInput,\r\n        fileInputForm,\r\n        fileSelected,\r\n        maxFileSize = 1 / 0;\r\n\r\n    function select(params) {\r\n        params = params || {};\r\n        var directory = params.directory || false,\r\n            multiple = params.multiple || false,\r\n            accept = params.accept || \"\", //'image/gif,image/jpeg,image/jpg,image/png,image/svg'\r\n            title = params.title || \"\",\r\n            fileSelected = params.picked;\r\n        if (!fileInput) {\r\n            var input = fileInput = document.createElement(\"input\");\r\n\r\n            function selectFiles(pickedFiles) {\r\n                for (var i = pickedFiles.length; i--;) {\r\n                    if (pickedFiles[i].size > maxFileSize) {\r\n                        pickedFiles.splice(i, 1);\r\n                    }\r\n                }\r\n                fileSelected(pickedFiles);\r\n            }\r\n\r\n            input.type = \"file\";\r\n            input.style.position = \"fixed\";\r\n            input.style.left = 0;\r\n            input.style.top = 0;\r\n            input.style.opacity = .001;\r\n            document.body.appendChild(input);\r\n\r\n            input.onchange = function(e) {\r\n                var entries = e.target.webkitEntries || e.target.entries;\r\n\r\n                if (entries && entries.length) {\r\n                    webentry.all(entries).then(function(files) {\r\n                        selectFiles(files);\r\n                    });\r\n                } else {\r\n                    selectFiles(Array.prototype.slice.call(e.target.files));\r\n                }\r\n                // reset to \"\", so selecting the same file next time still trigger the change handler\r\n                input.value = \"\";\r\n            };\r\n        }\r\n        fileInput.multiple = multiple;\r\n        fileInput.accept = accept;\r\n        fileInput.title = title;\r\n\r\n        fileInput.webkitdirectory = directory;\r\n        fileInput.click();\r\n    }\r\n\r\n    return diskfs.select = select;\r\n});\r\n\r\n\ndefine('skylark-domx-files/picker',[\r\n    \"skylark-langx/objects\",\r\n    \"skylark-domx-eventer\",\r\n    \"./files\",\r\n    \"skylark-io-diskfs/select\"\r\n],function(objects, eventer, files, select){\r\n    /*\r\n     * Make the specified element to pop-up the file selection dialog box when clicked , and read the contents the files selected from client file system by user.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} params\r\n     */\r\n    function picker(elm, params) {\r\n        eventer.on(elm, \"click\", function(e) {\r\n            e.preventDefault();\r\n            select(params);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    return files.picker = picker;\r\n\r\n});\r\n\r\n\r\n\ndefine('skylark-net-http/http',[\r\n  \"skylark-langx-ns/ns\",\r\n],function(skylark){\r\n\treturn skylark.attach(\"net.http\",{});\r\n});\ndefine('skylark-net-http/Xhr',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-arrays\",\r\n  \"skylark-langx-funcs\",\r\n  \"skylark-langx-async/Deferred\",\r\n  \"skylark-langx-emitter/Evented\",\r\n  \"./http\"\r\n],function(skylark,types,objects,arrays,funcs,Deferred,Evented,http){\r\n\r\n    var each = objects.each,\r\n        mixin = objects.mixin,\r\n        noop = funcs.noop,\r\n        isArray = types.isArray,\r\n        isFunction = types.isFunction,\r\n        isPlainObject = types.isPlainObject,\r\n        type = types.type;\r\n \r\n     var getAbsoluteUrl = (function() {\r\n        var a;\r\n\r\n        return function(url) {\r\n            if (!a) a = document.createElement('a');\r\n            a.href = url;\r\n\r\n            return a.href;\r\n        };\r\n    })();\r\n   \r\n    var Xhr = (function(){\r\n        var jsonpID = 0,\r\n            key,\r\n            name,\r\n            rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\r\n            scriptTypeRE = /^(?:text|application)\\/javascript/i,\r\n            xmlTypeRE = /^(?:text|application)\\/xml/i,\r\n            jsonType = 'application/json',\r\n            htmlType = 'text/html',\r\n            blankRE = /^\\s*$/;\r\n\r\n        var XhrDefaultOptions = {\r\n            async: true,\r\n\r\n            // Default type of request\r\n            type: 'GET',\r\n            // Callback that is executed before request\r\n            beforeSend: noop,\r\n            // Callback that is executed if the request succeeds\r\n            success: noop,\r\n            // Callback that is executed the the server drops error\r\n            error: noop,\r\n            // Callback that is executed on request complete (both: error and success)\r\n            complete: noop,\r\n            // The context for the callbacks\r\n            context: null,\r\n            // Whether to trigger \"global\" Ajax events\r\n            global: true,\r\n\r\n            // MIME types mapping\r\n            // IIS returns Javascript as \"application/x-javascript\"\r\n            accepts: {\r\n                script: 'text/javascript, application/javascript, application/x-javascript',\r\n                json: 'application/json',\r\n                xml: 'application/xml, text/xml',\r\n                html: 'text/html',\r\n                text: 'text/plain'\r\n            },\r\n            // Whether the request is to another domain\r\n            crossDomain: false,\r\n            // Default timeout\r\n            timeout: 0,\r\n            // Whether data should be serialized to string\r\n            processData: false,\r\n            // Whether the browser should be allowed to cache GET responses\r\n            cache: true,\r\n\r\n            traditional : false,\r\n            \r\n            xhrFields : {\r\n                withCredentials : false\r\n            }\r\n        };\r\n\r\n        function mimeToDataType(mime) {\r\n            if (mime) {\r\n                mime = mime.split(';', 2)[0];\r\n            }\r\n            if (mime) {\r\n                if (mime == htmlType) {\r\n                    return \"html\";\r\n                } else if (mime == jsonType) {\r\n                    return \"json\";\r\n                } else if (scriptTypeRE.test(mime)) {\r\n                    return \"script\";\r\n                } else if (xmlTypeRE.test(mime)) {\r\n                    return \"xml\";\r\n                }\r\n            }\r\n            return \"text\";\r\n        }\r\n\r\n        function appendQuery(url, query) {\r\n            if (query == '') return url\r\n            return (url + '&' + query).replace(/[&?]{1,2}/, '?')\r\n        }\r\n\r\n        // serialize payload and append it to the URL for GET requests\r\n        function serializeData(options) {\r\n            options.data = options.data || options.query;\r\n            if (options.processData && options.data && type(options.data) != \"string\") {\r\n                options.data = param(options.data, options.traditional);\r\n            }\r\n            if (options.data && (!options.type || options.type.toUpperCase() == 'GET')) {\r\n                if (type(options.data) != \"string\") {\r\n                    options.data = param(options.data, options.traditional);\r\n                }\r\n                options.url = appendQuery(options.url, options.data);\r\n                options.data = undefined;\r\n            }\r\n        }\r\n        \r\n        function serialize(params, obj, traditional, scope) {\r\n            var t, array = isArray(obj),\r\n                hash = isPlainObject(obj)\r\n            each(obj, function(key, value) {\r\n                t =type(value);\r\n                if (scope) key = traditional ? scope :\r\n                    scope + '[' + (hash || t == 'object' || t == 'array' ? key : '') + ']'\r\n                // handle data in serializeArray() format\r\n                if (!scope && array) params.add(value.name, value.value)\r\n                // recurse into nested objects\r\n                else if (t == \"array\" || (!traditional && t == \"object\"))\r\n                    serialize(params, value, traditional, key)\r\n                else params.add(key, value)\r\n            })\r\n        }\r\n\r\n        var param = function(obj, traditional) {\r\n            var params = []\r\n            params.add = function(key, value) {\r\n                if (isFunction(value)) {\r\n                  value = value();\r\n                }\r\n                if (value == null) {\r\n                  value = \"\";\r\n                }\r\n                this.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\r\n            };\r\n            serialize(params, obj, traditional)\r\n            return params.join('&').replace(/%20/g, '+')\r\n        };\r\n\r\n        var Xhr = Evented.inherit({\r\n            klassName : \"Xhr\",\r\n\r\n            _request  : function(args) {\r\n                var _ = this._,\r\n                    self = this,\r\n                    options = mixin({},XhrDefaultOptions,_.options,args),\r\n                    xhr = _.xhr = new XMLHttpRequest();\r\n\r\n                serializeData(options)\r\n\r\n                if (options.beforeSend) {\r\n                    options.beforeSend.call(this, xhr, options);\r\n                }                \r\n\r\n                var dataType = options.dataType || options.handleAs,\r\n                    mime = options.mimeType || options.accepts[dataType],\r\n                    headers = options.headers,\r\n                    xhrFields = options.xhrFields,\r\n                    isFormData = options.data && options.data instanceof FormData,\r\n                    basicAuthorizationToken = options.basicAuthorizationToken,\r\n                    type = options.type,\r\n                    url = options.url,\r\n                    async = options.async,\r\n                    user = options.user , \r\n                    password = options.password,\r\n                    deferred = new Deferred(),\r\n                    contentType = options.contentType || (isFormData ? false : 'application/x-www-form-urlencoded');\r\n\r\n                if (xhrFields) {\r\n                    for (name in xhrFields) {\r\n                        xhr[name] = xhrFields[name];\r\n                    }\r\n                }\r\n\r\n                if (mime && mime.indexOf(',') > -1) {\r\n                    mime = mime.split(',', 2)[0];\r\n                }\r\n                if (mime && xhr.overrideMimeType) {\r\n                    xhr.overrideMimeType(mime);\r\n                }\r\n\r\n                //if (dataType) {\r\n                //    xhr.responseType = dataType;\r\n                //}\r\n\r\n                var finish = function() {\r\n                    xhr.onloadend = noop;\r\n                    xhr.onabort = noop;\r\n                    xhr.onprogress = noop;\r\n                    xhr.ontimeout = noop;\r\n                    xhr = null;\r\n                }\r\n                var onloadend = function() {\r\n                    var result, error = false\r\n                    if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && getAbsoluteUrl(url).startsWith('file:'))) {\r\n                        dataType = dataType || mimeToDataType(options.mimeType || xhr.getResponseHeader('content-type'));\r\n\r\n                        result = xhr.responseText;\r\n                        try {\r\n                            if (dataType == 'script') {\r\n                                eval(result);\r\n                            } else if (dataType == 'xml') {\r\n                                result = xhr.responseXML;\r\n                            } else if (dataType == 'json') {\r\n                                result = blankRE.test(result) ? null : JSON.parse(result);\r\n                            } else if (dataType == \"blob\") {\r\n                                result = Blob([xhrObj.response]);\r\n                            } else if (dataType == \"arraybuffer\") {\r\n                                result = xhr.reponse;\r\n                            }\r\n                        } catch (e) { \r\n                            error = e;\r\n                        }\r\n\r\n                        if (error) {\r\n                            deferred.reject(error,xhr.status,xhr);\r\n                        } else {\r\n                            deferred.resolve(result,xhr.status,xhr);\r\n                        }\r\n                    } else {\r\n                        deferred.reject(new Error(xhr.statusText),xhr.status,xhr);\r\n                    }\r\n                    finish();\r\n                };\r\n\r\n                var onabort = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"abort\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n \r\n                var ontimeout = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"timeout\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n\r\n                var onprogress = function(evt) {\r\n                    if (deferred) {\r\n                        deferred.notify(evt,xhr.status,xhr);\r\n                    }\r\n                }\r\n\r\n                xhr.onloadend = onloadend;\r\n                xhr.onabort = onabort;\r\n                xhr.ontimeout = ontimeout;\r\n                xhr.onprogress = onprogress;\r\n\r\n                xhr.open(type, url, async, user, password);\r\n               \r\n                if (headers) {\r\n                    for ( var key in headers) {\r\n                        var value = headers[key];\r\n \r\n                        if(key.toLowerCase() === 'content-type'){\r\n                            contentType = value;\r\n                        } else {\r\n                           xhr.setRequestHeader(key, value);\r\n                        }\r\n                    }\r\n                }   \r\n\r\n                if  (contentType && contentType !== false){\r\n                    xhr.setRequestHeader('Content-Type', contentType);\r\n                }\r\n\r\n                if(!headers || !('X-Requested-With' in headers)){\r\n                    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n                }\r\n\r\n\r\n                //If basicAuthorizationToken is defined set its value into \"Authorization\" header\r\n                if (basicAuthorizationToken) {\r\n                    xhr.setRequestHeader(\"Authorization\", basicAuthorizationToken);\r\n                }\r\n\r\n                xhr.send(options.data ? options.data : null);\r\n\r\n                return deferred.promise;\r\n\r\n            },\r\n\r\n            \"abort\": function() {\r\n                var _ = this._,\r\n                    xhr = _.xhr;\r\n\r\n                if (xhr) {\r\n                    xhr.abort();\r\n                }    \r\n            },\r\n\r\n\r\n            \"request\": function(args) {\r\n                return this._request(args);\r\n            },\r\n\r\n            get : function(args) {\r\n                args = args || {};\r\n                args.type = \"GET\";\r\n                return this._request(args);\r\n            },\r\n\r\n            post : function(args) {\r\n                args = args || {};\r\n                args.type = \"POST\";\r\n                return this._request(args);\r\n            },\r\n\r\n            patch : function(args) {\r\n                args = args || {};\r\n                args.type = \"PATCH\";\r\n                return this._request(args);\r\n            },\r\n\r\n            put : function(args) {\r\n                args = args || {};\r\n                args.type = \"PUT\";\r\n                return this._request(args);\r\n            },\r\n\r\n            del : function(args) {\r\n                args = args || {};\r\n                args.type = \"DELETE\";\r\n                return this._request(args);\r\n            },\r\n\r\n            \"init\": function(options) {\r\n                this._ = {\r\n                    options : options || {}\r\n                };\r\n            }\r\n        });\r\n\r\n        [\"request\",\"get\",\"post\",\"put\",\"del\",\"patch\"].forEach(function(name){\r\n            Xhr[name] = function(url,args) {\r\n                var xhr = new Xhr({\"url\" : url});\r\n                return xhr[name](args);\r\n            };\r\n        });\r\n\r\n        Xhr.defaultOptions = XhrDefaultOptions;\r\n        Xhr.param = param;\r\n\r\n        return Xhr;\r\n    })();\r\n\r\n\treturn http.Xhr = Xhr;\t\r\n});\ndefine('skylark-net-http/Upload',[\r\n    \"skylark-langx-types\",\r\n    \"skylark-langx-objects\",\r\n    \"skylark-langx-arrays\",\r\n    \"skylark-langx-async/Deferred\",\r\n    \"skylark-langx-emitter/Evented\",    \r\n    \"./Xhr\",\r\n    \"./http\"\r\n],function(types, objects, arrays, Deferred, Evented,Xhr, http){\r\n\r\n    var blobSlice = Blob.prototype.slice || Blob.prototype.webkitSlice || Blob.prototype.mozSlice;\r\n\r\n\r\n    /*\r\n     *Class for uploading files using xhr.\r\n     */\r\n    var Upload = Evented.inherit({\r\n        klassName : \"Upload\",\r\n\r\n        _construct : function(options) {\r\n            this._options = objects.mixin({\r\n                debug: false,\r\n                url: '/upload',\r\n                // maximum number of concurrent uploads\r\n                maxConnections: 999,\r\n                // To upload large files in smaller chunks, set the following option\r\n                // to a preferred maximum chunk size. If set to 0, null or undefined,\r\n                // or the browser does not support the required Blob API, files will\r\n                // be uploaded as a whole.\r\n                maxChunkSize: undefined,\r\n\r\n                onProgress: function(id, fileName, loaded, total){\r\n                },\r\n                onComplete: function(id, fileName){\r\n                },\r\n                onCancel: function(id, fileName){\r\n                },\r\n                onFailure : function(id,fileName,e) {                    \r\n                }\r\n            },options);\r\n\r\n            this._queue = [];\r\n            // params for files in queue\r\n            this._params = [];\r\n\r\n            this._files = [];\r\n            this._xhrs = [];\r\n\r\n            // current loaded size in bytes for each file\r\n            this._loaded = [];\r\n\r\n        },\r\n\r\n        /**\r\n         * Adds file to the queue\r\n         * Returns id to use with upload, cancel\r\n         **/\r\n        add: function(file){\r\n            return this._files.push(file) - 1;\r\n        },\r\n\r\n        /**\r\n         * Sends the file identified by id and additional query params to the server.\r\n         */\r\n        send: function(id, params){\r\n            if (!this._files[id]) {\r\n                // Already sended or canceled\r\n                return ;\r\n            }\r\n            if (this._queue.indexOf(id)>-1) {\r\n                // Already in the queue\r\n                return;\r\n            }\r\n            var len = this._queue.push(id);\r\n\r\n            var copy = objects.clone(params);\r\n\r\n            this._params[id] = copy;\r\n\r\n            // if too many active uploads, wait...\r\n            if (len <= this._options.maxConnections){\r\n                this._send(id, this._params[id]);\r\n            }     \r\n        },\r\n\r\n        /**\r\n         * Sends all files  and additional query params to the server.\r\n         */\r\n        sendAll: function(params){\r\n           for( var id = 0; id <this._files.length; id++) {\r\n                this.send(id,params);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Cancels file upload by id\r\n         */\r\n        cancel: function(id){\r\n            this._cancel(id);\r\n            this._dequeue(id);\r\n        },\r\n\r\n        /**\r\n         * Cancells all uploads\r\n         */\r\n        cancelAll: function(){\r\n            for (var i=0; i<this._queue.length; i++){\r\n                this._cancel(this._queue[i]);\r\n            }\r\n            this._queue = [];\r\n        },\r\n\r\n        getName: function(id){\r\n            var file = this._files[id];\r\n            return file.fileName != null ? file.fileName : file.name;\r\n        },\r\n\r\n        getSize: function(id){\r\n            var file = this._files[id];\r\n            return file.fileSize != null ? file.fileSize : file.size;\r\n        },\r\n\r\n        /**\r\n         * Returns uploaded bytes for file identified by id\r\n         */\r\n        getLoaded: function(id){\r\n            return this._loaded[id] || 0;\r\n        },\r\n\r\n\r\n        /**\r\n         * Sends the file identified by id and additional query params to the server\r\n         * @param {Object} params name-value string pairs\r\n         */\r\n        _send: function(id, params){\r\n            var options = this._options,\r\n                name = this.getName(id),\r\n                size = this.getSize(id),\r\n                chunkSize = options.maxChunkSize || 0,\r\n                curUploadingSize,\r\n                curLoadedSize = 0,\r\n                file = this._files[id],\r\n                args = {\r\n                    headers : {\r\n                    }                    \r\n                };\r\n\r\n            this._loaded[id] = this._loaded[id] || 0;\r\n\r\n            var xhr = this._xhrs[id] = new Xhr({\r\n                url : options.url\r\n            });\r\n\r\n            if (chunkSize)  {\r\n\r\n                args.data = blobSlice.call(\r\n                    file,\r\n                    this._loaded[id],\r\n                    this._loaded[id] + chunkSize,\r\n                    file.type\r\n                );\r\n                // Store the current chunk size, as the blob itself\r\n                // will be dereferenced after data processing:\r\n                curUploadingSize = args.data.size;\r\n                // Expose the chunk bytes position range:\r\n                args.headers[\"content-range\"] = 'bytes ' + this._loaded[id] + '-' +\r\n                    (this._loaded[id] + curUploadingSize - 1) + '/' + size;\r\n                args.headers[\"Content-Type\"] = \"application/octet-stream\";\r\n            }  else {\r\n                curUploadingSize = size;\r\n                var formParamName =  params.formParamName,\r\n                    formData = params.formData;\r\n\r\n                if (formParamName) {\r\n                    if (!formData) {\r\n                        formData = new FormData();\r\n                    }\r\n                    formData.append(formParamName,file);\r\n                    args.data = formData;\r\n    \r\n                } else {\r\n                    args.headers[\"Content-Type\"] = file.type || \"application/octet-stream\";\r\n                    args.data = file;\r\n                }\r\n            }\r\n\r\n\r\n            var self = this;\r\n            xhr.post(\r\n                args\r\n            ).progress(function(e){\r\n                if (e.lengthComputable){\r\n                    curLoadedSize = curLoadedSize + e.loaded;\r\n                    self._loaded[id] = self._loaded[id] + e.loaded;\r\n                    self._options.onProgress(id, name, self._loaded[id], size);\r\n                }\r\n            }).then(function(){\r\n                if (!self._files[id]) {\r\n                    // the request was aborted/cancelled\r\n                    return;\r\n                }\r\n\r\n                if (curLoadedSize < curUploadingSize) {\r\n                    // Create a progress event if no final progress event\r\n                    // with loaded equaling total has been triggered\r\n                    // for this chunk:\r\n                    self._loaded[id] = self._loaded[id] + curUploadingSize - curLoadedSize;\r\n                    self._options.onProgress(id, name, self._loaded[id], size);                    \r\n                }\r\n\r\n                if (self._loaded[id] <size) {\r\n                    // File upload not yet complete,\r\n                    // continue with the next chunk:\r\n                    self._send(id,params);\r\n                } else {\r\n                    self._options.onComplete(id,name);\r\n\r\n                    self._files[id] = null;\r\n                    self._xhrs[id] = null;\r\n                    self._dequeue(id);\r\n                }\r\n\r\n\r\n            }).catch(function(e){\r\n                self._options.onFailure(id,name,e);\r\n\r\n                self._files[id] = null;\r\n                self._xhrs[id] = null;\r\n                self._dequeue(id);\r\n            });\r\n        },\r\n\r\n        _cancel: function(id){\r\n            this._options.onCancel(id, this.getName(id));\r\n\r\n            this._files[id] = null;\r\n\r\n            if (this._xhrs[id]){\r\n                this._xhrs[id].abort();\r\n                this._xhrs[id] = null;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Returns id of files being uploaded or\r\n         * waiting for their turn\r\n         */\r\n        getQueue: function(){\r\n            return this._queue;\r\n        },\r\n\r\n\r\n        /**\r\n         * Removes element from queue, starts upload of next\r\n         */\r\n        _dequeue: function(id){\r\n            var i = arrays.inArray(id,this._queue);\r\n            this._queue.splice(i, 1);\r\n\r\n            var max = this._options.maxConnections;\r\n\r\n            if (this._queue.length >= max && i < max){\r\n                var nextId = this._queue[max-1];\r\n                this._send(nextId, this._params[nextId]);\r\n            }\r\n        }\r\n    });\r\n\r\n    return http.Upload = Upload;    \r\n});\ndefine('skylark-domx-geom/geom',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-styler\"\r\n], function(skylark, langx, noder, styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel,\r\n        offsetParent = noder.offsetParent,\r\n        cachedScrollbarWidth;\r\n\r\n    function scrollbarWidth() {\r\n        if (cachedScrollbarWidth !== undefined) {\r\n            return cachedScrollbarWidth;\r\n        }\r\n        var w1, w2,\r\n            div = noder.createFragment(\"<div style=\" +\r\n                \"'display:block;position:absolute;width:200px;height:200px;overflow:hidden;'>\" +\r\n                \"<div style='height:300px;width:auto;'></div></div>\")[0],\r\n            innerDiv = div.childNodes[0];\r\n\r\n        noder.append(document.body, div);\r\n\r\n        w1 = innerDiv.offsetWidth;\r\n\r\n        styler.css(div, \"overflow\", \"scroll\");\r\n\r\n        w2 = innerDiv.offsetWidth;\r\n\r\n        if (w1 === w2) {\r\n            w2 = div[0].clientWidth;\r\n        }\r\n\r\n        noder.remove(div);\r\n\r\n        return (cachedScrollbarWidth = w1 - w2);\r\n    }\r\n    /*\r\n     * Get the widths of each border of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function borderExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth, elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    /*\r\n     * Get or set the viewport position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the viewport rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the height of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the size of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get or set the width of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the rect of the specified element content box.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n\r\n    function fullCover(elem, hor, vert) {\r\n        let vertical = vert;\r\n        let horizontal = hor;\r\n        if (langx.isUndefined(horizontal)) {\r\n            horizontal = true;\r\n        }\r\n        if (langx.isUndefined(vertical)) {\r\n            vertical = true;\r\n        }\r\n        elem.style.position = 'absolute';\r\n        if (horizontal) {\r\n            elem.style.left = 0;\r\n            elem.style.right = 0;\r\n        }\r\n        if (vertical) {\r\n            elem.style.top = 0;\r\n            elem.style.bottom = 0;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLDocument} doc\r\n     */\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each margin of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function marginExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n\r\n    function marginRect(elm) {\r\n        var obj = relativeRect(elm),\r\n            me = marginExtents(elm);\r\n\r\n        return {\r\n            left: obj.left,\r\n            top: obj.top,\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n\r\n    function marginSize(elm) {\r\n        var obj = size(elm),\r\n            me = marginExtents(elm);\r\n\r\n        return {\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each padding of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function paddingExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the position of the specified element border box , relative to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the rect of the specified element border box , relatived to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Scroll the specified element into view.\r\n     * @param {HTMLElement} elm\r\n     * @param {} align\r\n     */\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n    /*\r\n     * Get or set the current horizontal position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollLeft(elm, value) {\r\n        if (elm.nodeType === 9) {\r\n            elm = elm.defaultView;\r\n        }\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or the current vertical position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollTop(elm, value) {\r\n        if (elm.nodeType === 9) {\r\n            elm = elm.defaultView;\r\n        }\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject}dimension\r\n     */\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined && props.width !== \"\" && props.width !== null) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined && props.height !== \"\" && props.height !== null) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        fullCover,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        marginRect: marginRect,\r\n\r\n        marginSize: marginSize,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollbarWidth: scrollbarWidth,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    ( function() {\r\n        var max = Math.max,\r\n            abs = Math.abs,\r\n            rhorizontal = /left|center|right/,\r\n            rvertical = /top|center|bottom/,\r\n            roffset = /[\\+\\-]\\d+(\\.[\\d]+)?%?/,\r\n            rposition = /^\\w+/,\r\n            rpercent = /%$/;\r\n\r\n        function getOffsets( offsets, width, height ) {\r\n            return [\r\n                parseFloat( offsets[ 0 ] ) * ( rpercent.test( offsets[ 0 ] ) ? width / 100 : 1 ),\r\n                parseFloat( offsets[ 1 ] ) * ( rpercent.test( offsets[ 1 ] ) ? height / 100 : 1 )\r\n            ];\r\n        }\r\n\r\n        function parseCss( element, property ) {\r\n            return parseInt( styler.css( element, property ), 10 ) || 0;\r\n        }\r\n\r\n        function getDimensions( raw ) {\r\n            if ( raw.nodeType === 9 ) {\r\n                return {\r\n                    size: size(raw),\r\n                    offset: { top: 0, left: 0 }\r\n                };\r\n            }\r\n            if ( noder.isWindow( raw ) ) {\r\n                return {\r\n                    size: size(raw),\r\n                    offset: { \r\n                        top: scrollTop(raw), \r\n                        left: scrollLeft(raw) \r\n                    }\r\n                };\r\n            }\r\n            if ( raw.preventDefault ) {\r\n                return {\r\n                    size : {\r\n                        width: 0,\r\n                        height: 0\r\n                    },\r\n                    offset: { \r\n                        top: raw.pageY, \r\n                        left: raw.pageX \r\n                    }\r\n                };\r\n            }\r\n            return {\r\n                size: size(raw),\r\n                offset: pagePosition(raw)\r\n            };\r\n        }\r\n\r\n        function getScrollInfo( within ) {\r\n            var overflowX = within.isWindow || within.isDocument ? \"\" :\r\n                    styler.css(within.element,\"overflow-x\" ),\r\n                overflowY = within.isWindow || within.isDocument ? \"\" :\r\n                    styler.css(within.element,\"overflow-y\" ),\r\n                hasOverflowX = overflowX === \"scroll\" ||\r\n                    ( overflowX === \"auto\" && within.width < scrollWidth(within.element) ),\r\n                hasOverflowY = overflowY === \"scroll\" ||\r\n                    ( overflowY === \"auto\" && within.height < scrollHeight(within.element));\r\n            return {\r\n                width: hasOverflowY ? scrollbarWidth() : 0,\r\n                height: hasOverflowX ? scrollbarWidth() : 0\r\n            };\r\n        }\r\n\r\n        function getWithinInfo( element ) {\r\n            var withinElement = element || window,\r\n                isWindow = noder.isWindow( withinElement),\r\n                isDocument = !!withinElement && withinElement.nodeType === 9,\r\n                hasOffset = !isWindow && !isDocument,\r\n                msize = marginSize(withinElement);\r\n            return {\r\n                element: withinElement,\r\n                isWindow: isWindow,\r\n                isDocument: isDocument,\r\n                offset: hasOffset ? pagePosition(element) : { left: 0, top: 0 },\r\n                scrollLeft: scrollLeft(withinElement),\r\n                scrollTop: scrollTop(withinElement),\r\n                width: msize.width,\r\n                height: msize.height\r\n            };\r\n        }\r\n\r\n        function posit(elm,options ) {\r\n            // Make a copy, we don't want to modify arguments\r\n            options = langx.extend( {}, options );\r\n\r\n            var atOffset, targetWidth, targetHeight, targetOffset, basePosition, dimensions,\r\n                target = options.of,\r\n                within = getWithinInfo( options.within ),\r\n                scrollInfo = getScrollInfo( within ),\r\n                collision = ( options.collision || \"flip\" ).split( \" \" ),\r\n                offsets = {};\r\n\r\n            dimensions = getDimensions( target );\r\n            if ( target.preventDefault ) {\r\n\r\n                // Force left top to allow flipping\r\n                options.at = \"left top\";\r\n            }\r\n            targetWidth = dimensions.size.width;\r\n            targetHeight = dimensions.size.height;\r\n            targetOffset = dimensions.offset;\r\n\r\n            // Clone to reuse original targetOffset later\r\n            basePosition = langx.extend( {}, targetOffset );\r\n\r\n            // Force my and at to have valid horizontal and vertical positions\r\n            // if a value is missing or invalid, it will be converted to center\r\n            langx.each( [ \"my\", \"at\" ], function() {\r\n                var pos = ( options[ this ] || \"\" ).split( \" \" ),\r\n                    horizontalOffset,\r\n                    verticalOffset;\r\n\r\n                if ( pos.length === 1 ) {\r\n                    pos = rhorizontal.test( pos[ 0 ] ) ?\r\n                        pos.concat( [ \"center\" ] ) :\r\n                        rvertical.test( pos[ 0 ] ) ?\r\n                            [ \"center\" ].concat( pos ) :\r\n                            [ \"center\", \"center\" ];\r\n                }\r\n                pos[ 0 ] = rhorizontal.test( pos[ 0 ] ) ? pos[ 0 ] : \"center\";\r\n                pos[ 1 ] = rvertical.test( pos[ 1 ] ) ? pos[ 1 ] : \"center\";\r\n\r\n                // Calculate offsets\r\n                horizontalOffset = roffset.exec( pos[ 0 ] );\r\n                verticalOffset = roffset.exec( pos[ 1 ] );\r\n                offsets[ this ] = [\r\n                    horizontalOffset ? horizontalOffset[ 0 ] : 0,\r\n                    verticalOffset ? verticalOffset[ 0 ] : 0\r\n                ];\r\n\r\n                // Reduce to just the positions without the offsets\r\n                options[ this ] = [\r\n                    rposition.exec( pos[ 0 ] )[ 0 ],\r\n                    rposition.exec( pos[ 1 ] )[ 0 ]\r\n                ];\r\n            } );\r\n\r\n            // Normalize collision option\r\n            if ( collision.length === 1 ) {\r\n                collision[ 1 ] = collision[ 0 ];\r\n            }\r\n\r\n            if ( options.at[ 0 ] === \"right\" ) {\r\n                basePosition.left += targetWidth;\r\n            } else if ( options.at[ 0 ] === \"center\" ) {\r\n                basePosition.left += targetWidth / 2;\r\n            }\r\n\r\n            if ( options.at[ 1 ] === \"bottom\" ) {\r\n                basePosition.top += targetHeight;\r\n            } else if ( options.at[ 1 ] === \"center\" ) {\r\n                basePosition.top += targetHeight / 2;\r\n            }\r\n\r\n            atOffset = getOffsets( offsets.at, targetWidth, targetHeight );\r\n            basePosition.left += atOffset[ 0 ];\r\n            basePosition.top += atOffset[ 1 ];\r\n\r\n            return ( function(elem) {\r\n                var collisionPosition, using,\r\n                    msize = marginSize(elem),\r\n                    elemWidth = msize.width,\r\n                    elemHeight = msize.height,\r\n                    marginLeft = parseCss( elem, \"marginLeft\" ),\r\n                    marginTop = parseCss( elem, \"marginTop\" ),\r\n                    collisionWidth = elemWidth + marginLeft + parseCss( elem, \"marginRight\" ) +\r\n                        scrollInfo.width,\r\n                    collisionHeight = elemHeight + marginTop + parseCss( elem, \"marginBottom\" ) +\r\n                        scrollInfo.height,\r\n                    position = langx.extend( {}, basePosition ),\r\n                    myOffset = getOffsets( offsets.my, msize.width, msize.height);\r\n\r\n                if ( options.my[ 0 ] === \"right\" ) {\r\n                    position.left -= elemWidth;\r\n                } else if ( options.my[ 0 ] === \"center\" ) {\r\n                    position.left -= elemWidth / 2;\r\n                }\r\n\r\n                if ( options.my[ 1 ] === \"bottom\" ) {\r\n                    position.top -= elemHeight;\r\n                } else if ( options.my[ 1 ] === \"center\" ) {\r\n                    position.top -= elemHeight / 2;\r\n                }\r\n\r\n                position.left += myOffset[ 0 ];\r\n                position.top += myOffset[ 1 ];\r\n\r\n                collisionPosition = {\r\n                    marginLeft: marginLeft,\r\n                    marginTop: marginTop\r\n                };\r\n\r\n                langx.each( [ \"left\", \"top\" ], function( i, dir ) {\r\n                    if ( positions[ collision[ i ] ] ) {\r\n                        positions[ collision[ i ] ][ dir ]( position, {\r\n                            targetWidth: targetWidth,\r\n                            targetHeight: targetHeight,\r\n                            elemWidth: elemWidth,\r\n                            elemHeight: elemHeight,\r\n                            collisionPosition: collisionPosition,\r\n                            collisionWidth: collisionWidth,\r\n                            collisionHeight: collisionHeight,\r\n                            offset: [ atOffset[ 0 ] + myOffset[ 0 ], atOffset [ 1 ] + myOffset[ 1 ] ],\r\n                            my: options.my,\r\n                            at: options.at,\r\n                            within: within,\r\n                            elem: elem\r\n                        } );\r\n                    }\r\n                } );\r\n\r\n                if ( options.using ) {\r\n\r\n                    // Adds feedback as second argument to using callback, if present\r\n                    using = function( props ) {\r\n                        var left = targetOffset.left - position.left,\r\n                            right = left + targetWidth - elemWidth,\r\n                            top = targetOffset.top - position.top,\r\n                            bottom = top + targetHeight - elemHeight,\r\n                            feedback = {\r\n                                target: {\r\n                                    element: target,\r\n                                    left: targetOffset.left,\r\n                                    top: targetOffset.top,\r\n                                    width: targetWidth,\r\n                                    height: targetHeight\r\n                                },\r\n                                element: {\r\n                                    element: elem,\r\n                                    left: position.left,\r\n                                    top: position.top,\r\n                                    width: elemWidth,\r\n                                    height: elemHeight\r\n                                },\r\n                                horizontal: right < 0 ? \"left\" : left > 0 ? \"right\" : \"center\",\r\n                                vertical: bottom < 0 ? \"top\" : top > 0 ? \"bottom\" : \"middle\"\r\n                            };\r\n                        if ( targetWidth < elemWidth && abs( left + right ) < targetWidth ) {\r\n                            feedback.horizontal = \"center\";\r\n                        }\r\n                        if ( targetHeight < elemHeight && abs( top + bottom ) < targetHeight ) {\r\n                            feedback.vertical = \"middle\";\r\n                        }\r\n                        if ( max( abs( left ), abs( right ) ) > max( abs( top ), abs( bottom ) ) ) {\r\n                            feedback.important = \"horizontal\";\r\n                        } else {\r\n                            feedback.important = \"vertical\";\r\n                        }\r\n                        options.using.call( this, props, feedback );\r\n                    };\r\n                }\r\n\r\n                pagePosition(elem, langx.extend( position, { using: using } ));\r\n            })(elm);\r\n        }\r\n\r\n        var positions = {\r\n            fit: {\r\n                left: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.isWindow ? within.scrollLeft : within.offset.left,\r\n                        outerWidth = within.width,\r\n                        collisionPosLeft = position.left - data.collisionPosition.marginLeft,\r\n                        overLeft = withinOffset - collisionPosLeft,\r\n                        overRight = collisionPosLeft + data.collisionWidth - outerWidth - withinOffset,\r\n                        newOverRight;\r\n\r\n                    // Element is wider than within\r\n                    if ( data.collisionWidth > outerWidth ) {\r\n\r\n                        // Element is initially over the left side of within\r\n                        if ( overLeft > 0 && overRight <= 0 ) {\r\n                            newOverRight = position.left + overLeft + data.collisionWidth - outerWidth -\r\n                                withinOffset;\r\n                            position.left += overLeft - newOverRight;\r\n\r\n                        // Element is initially over right side of within\r\n                        } else if ( overRight > 0 && overLeft <= 0 ) {\r\n                            position.left = withinOffset;\r\n\r\n                        // Element is initially over both left and right sides of within\r\n                        } else {\r\n                            if ( overLeft > overRight ) {\r\n                                position.left = withinOffset + outerWidth - data.collisionWidth;\r\n                            } else {\r\n                                position.left = withinOffset;\r\n                            }\r\n                        }\r\n\r\n                    // Too far left -> align with left edge\r\n                    } else if ( overLeft > 0 ) {\r\n                        position.left += overLeft;\r\n\r\n                    // Too far right -> align with right edge\r\n                    } else if ( overRight > 0 ) {\r\n                        position.left -= overRight;\r\n\r\n                    // Adjust based on position and margin\r\n                    } else {\r\n                        position.left = max( position.left - collisionPosLeft, position.left );\r\n                    }\r\n                },\r\n                top: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.isWindow ? within.scrollTop : within.offset.top,\r\n                        outerHeight = data.within.height,\r\n                        collisionPosTop = position.top - data.collisionPosition.marginTop,\r\n                        overTop = withinOffset - collisionPosTop,\r\n                        overBottom = collisionPosTop + data.collisionHeight - outerHeight - withinOffset,\r\n                        newOverBottom;\r\n\r\n                    // Element is taller than within\r\n                    if ( data.collisionHeight > outerHeight ) {\r\n\r\n                        // Element is initially over the top of within\r\n                        if ( overTop > 0 && overBottom <= 0 ) {\r\n                            newOverBottom = position.top + overTop + data.collisionHeight - outerHeight -\r\n                                withinOffset;\r\n                            position.top += overTop - newOverBottom;\r\n\r\n                        // Element is initially over bottom of within\r\n                        } else if ( overBottom > 0 && overTop <= 0 ) {\r\n                            position.top = withinOffset;\r\n\r\n                        // Element is initially over both top and bottom of within\r\n                        } else {\r\n                            if ( overTop > overBottom ) {\r\n                                position.top = withinOffset + outerHeight - data.collisionHeight;\r\n                            } else {\r\n                                position.top = withinOffset;\r\n                            }\r\n                        }\r\n\r\n                    // Too far up -> align with top\r\n                    } else if ( overTop > 0 ) {\r\n                        position.top += overTop;\r\n\r\n                    // Too far down -> align with bottom edge\r\n                    } else if ( overBottom > 0 ) {\r\n                        position.top -= overBottom;\r\n\r\n                    // Adjust based on position and margin\r\n                    } else {\r\n                        position.top = max( position.top - collisionPosTop, position.top );\r\n                    }\r\n                }\r\n            },\r\n            flip: {\r\n                left: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.offset.left + within.scrollLeft,\r\n                        outerWidth = within.width,\r\n                        offsetLeft = within.isWindow ? within.scrollLeft : within.offset.left,\r\n                        collisionPosLeft = position.left - data.collisionPosition.marginLeft,\r\n                        overLeft = collisionPosLeft - offsetLeft,\r\n                        overRight = collisionPosLeft + data.collisionWidth - outerWidth - offsetLeft,\r\n                        myOffset = data.my[ 0 ] === \"left\" ?\r\n                            -data.elemWidth :\r\n                            data.my[ 0 ] === \"right\" ?\r\n                                data.elemWidth :\r\n                                0,\r\n                        atOffset = data.at[ 0 ] === \"left\" ?\r\n                            data.targetWidth :\r\n                            data.at[ 0 ] === \"right\" ?\r\n                                -data.targetWidth :\r\n                                0,\r\n                        offset = -2 * data.offset[ 0 ],\r\n                        newOverRight,\r\n                        newOverLeft;\r\n\r\n                    if ( overLeft < 0 ) {\r\n                        newOverRight = position.left + myOffset + atOffset + offset + data.collisionWidth -\r\n                            outerWidth - withinOffset;\r\n                        if ( newOverRight < 0 || newOverRight < abs( overLeft ) ) {\r\n                            position.left += myOffset + atOffset + offset;\r\n                        }\r\n                    } else if ( overRight > 0 ) {\r\n                        newOverLeft = position.left - data.collisionPosition.marginLeft + myOffset +\r\n                            atOffset + offset - offsetLeft;\r\n                        if ( newOverLeft > 0 || abs( newOverLeft ) < overRight ) {\r\n                            position.left += myOffset + atOffset + offset;\r\n                        }\r\n                    }\r\n                },\r\n                top: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.offset.top + within.scrollTop,\r\n                        outerHeight = within.height,\r\n                        offsetTop = within.isWindow ? within.scrollTop : within.offset.top,\r\n                        collisionPosTop = position.top - data.collisionPosition.marginTop,\r\n                        overTop = collisionPosTop - offsetTop,\r\n                        overBottom = collisionPosTop + data.collisionHeight - outerHeight - offsetTop,\r\n                        top = data.my[ 1 ] === \"top\",\r\n                        myOffset = top ?\r\n                            -data.elemHeight :\r\n                            data.my[ 1 ] === \"bottom\" ?\r\n                                data.elemHeight :\r\n                                0,\r\n                        atOffset = data.at[ 1 ] === \"top\" ?\r\n                            data.targetHeight :\r\n                            data.at[ 1 ] === \"bottom\" ?\r\n                                -data.targetHeight :\r\n                                0,\r\n                        offset = -2 * data.offset[ 1 ],\r\n                        newOverTop,\r\n                        newOverBottom;\r\n                    if ( overTop < 0 ) {\r\n                        newOverBottom = position.top + myOffset + atOffset + offset + data.collisionHeight -\r\n                            outerHeight - withinOffset;\r\n                        if ( newOverBottom < 0 || newOverBottom < abs( overTop ) ) {\r\n                            position.top += myOffset + atOffset + offset;\r\n                        }\r\n                    } else if ( overBottom > 0 ) {\r\n                        newOverTop = position.top - data.collisionPosition.marginTop + myOffset + atOffset +\r\n                            offset - offsetTop;\r\n                        if ( newOverTop > 0 || abs( newOverTop ) < overBottom ) {\r\n                            position.top += myOffset + atOffset + offset;\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            flipfit: {\r\n                left: function() {\r\n                    positions.flip.left.apply( this, arguments );\r\n                    positions.fit.left.apply( this, arguments );\r\n                },\r\n                top: function() {\r\n                    positions.flip.top.apply( this, arguments );\r\n                    positions.fit.top.apply( this, arguments );\r\n                }\r\n            }\r\n        };\r\n\r\n        geom.posit = posit;\r\n    })();\r\n\r\n    return skylark.attach(\"domx.geom\", geom);\r\n});\ndefine('skylark-domx-geom/main',[\r\n    \"skylark-langx/langx\",\r\n    \"./geom\",\r\n    \"skylark-domx-velm\",\r\n    \"skylark-domx-query\"        \r\n],function(langx,geom,velm,$){\r\n   // from ./geom\r\n    velm.delegate([\r\n        \"borderExtents\",\r\n        \"boundingPosition\",\r\n        \"boundingRect\",\r\n        \"clientHeight\",\r\n        \"clientSize\",\r\n        \"clientWidth\",\r\n        \"contentRect\",\r\n        \"height\",\r\n        \"marginExtents\",\r\n        \"offsetParent\",\r\n        \"paddingExtents\",\r\n        \"pagePosition\",\r\n        \"pageRect\",\r\n        \"relativePosition\",\r\n        \"relativeRect\",\r\n        \"scrollIntoView\",\r\n        \"scrollLeft\",\r\n        \"scrollTop\",\r\n        \"size\",\r\n        \"width\"\r\n    ], geom);\r\n\r\n    $.fn.offset = $.wraps.wrapper_value(geom.pagePosition, geom, geom.pagePosition);\r\n\r\n    $.fn.scrollTop = $.wraps.wrapper_value(geom.scrollTop, geom);\r\n\r\n    $.fn.scrollLeft = $.wraps.wrapper_value(geom.scrollLeft, geom);\r\n\r\n    $.fn.position =  function(options) {\r\n        if (!this.length) {\r\n            return this;\r\n        }\r\n\r\n        if (options) {\r\n            if (options.of && options.of.length) {\r\n                options = langx.clone(options);\r\n                options.of = options.of[0];\r\n            }\r\n            return this.each( function() {\r\n                geom.posit(this,options);\r\n            });\r\n        } else {\r\n            var elem = this[0];\r\n\r\n            return geom.relativePosition(elem);\r\n\r\n        }             \r\n    };\r\n\r\n    $.fn.offsetParent = $.wraps.wrapper_map(geom.offsetParent, geom);\r\n\r\n\r\n    $.fn.size = $.wraps.wrapper_value(geom.size, geom);\r\n\r\n    $.fn.width = $.wraps.wrapper_value(geom.width, geom, geom.width);\r\n\r\n    $.fn.height = $.wraps.wrapper_value(geom.height, geom, geom.height);\r\n\r\n    $.fn.clientSize = $.wraps.wrapper_value(geom.clientSize, geom.clientSize);\r\n    \r\n    ['width', 'height'].forEach(function(dimension) {\r\n        var offset, Dimension = dimension.replace(/./, function(m) {\r\n            return m[0].toUpperCase()\r\n        });\r\n\r\n        $.fn['outer' + Dimension] = function(margin, value) {\r\n            if (arguments.length) {\r\n                if (typeof margin !== 'boolean') {\r\n                    value = margin;\r\n                    margin = false;\r\n                }\r\n            } else {\r\n                margin = false;\r\n                value = undefined;\r\n            }\r\n\r\n            if (value === undefined) {\r\n                var el = this[0];\r\n                if (!el) {\r\n                    return undefined;\r\n                }\r\n                var cb = geom.size(el);\r\n                if (margin) {\r\n                    var me = geom.marginExtents(el);\r\n                    cb.width = cb.width + me.left + me.right;\r\n                    cb.height = cb.height + me.top + me.bottom;\r\n                }\r\n                return dimension === \"width\" ? cb.width : cb.height;\r\n            } else {\r\n                return this.each(function(idx, el) {\r\n                    var mb = {};\r\n                    var me = geom.marginExtents(el);\r\n                    if (dimension === \"width\") {\r\n                        mb.width = value;\r\n                        if (margin) {\r\n                            mb.width = mb.width - me.left - me.right\r\n                        }\r\n                    } else {\r\n                        mb.height = value;\r\n                        if (margin) {\r\n                            mb.height = mb.height - me.top - me.bottom;\r\n                        }\r\n                    }\r\n                    geom.size(el, mb);\r\n                })\r\n\r\n            }\r\n        };\r\n    })\r\n\r\n    $.fn.innerWidth = $.wraps.wrapper_value(geom.clientWidth, geom, geom.clientWidth);\r\n\r\n    $.fn.innerHeight = $.wraps.wrapper_value(geom.clientHeight, geom, geom.clientHeight);\r\n\r\n    return geom;\r\n});\ndefine('skylark-domx-geom', ['skylark-domx-geom/main'], function (main) { return main; });\n\ndefine('skylark-domx-fx/fx',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-eventer\"\r\n], function(skylark, langx, browser, noder, geom, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    /*   \r\n     * Perform a custom animation of a set of CSS properties.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} properties\r\n     * @param {String} ease\r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     * @param {Number or String} delay\r\n     */\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false,\r\n            resetClipAuto = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                var v = properties[key];\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + v + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    if (key == \"clip\" && langx.isPlainObject(v)) {\r\n                        cssValues[key] = \"rect(\" + v.top+\"px,\"+ v.right +\"px,\"+ v.bottom +\"px,\"+ v.left+\"px)\";\r\n                        if (styler.css(elm,\"clip\") == \"auto\") {\r\n                            var size = geom.size(elm);\r\n                            styler.css(elm,\"clip\",\"rect(\"+\"0px,\"+ size.width +\"px,\"+ size.height +\"px,\"+\"0px)\");  \r\n                            resetClipAuto = true;\r\n                        }\r\n\r\n                    } else {\r\n                        cssValues[key] = v;\r\n                    }\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            if (resetClipAuto) {\r\n //               styler.css(elm,\"clip\",\"auto\");\r\n            }\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Hide an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Set the vertical position of the scroll bar for an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} pos\r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Adjust the opacity of an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Number or String} opacity\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display an element by fading them to opaque.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide an element by fading them to transparent.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            opacity = styler.css(elm,\"opacity\"),\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.css(elm,\"opacity\",opacity);\r\n            styler.hide(elm);\r\n            if (complete) {\r\n                complete.call(elm);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element by animating its opacity.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} ceasing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeToggle(elm, speed, ceasing, allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing, callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideDown(elm, duration, callback) {\r\n\r\n        // get the element position to restore it then\r\n        var position = styler.css(elm, 'position');\r\n\r\n        // show element if it is hidden\r\n        show(elm);\r\n\r\n        // place it so it displays as usually but hidden\r\n        styler.css(elm, {\r\n            position: 'absolute',\r\n            visibility: 'hidden'\r\n        });\r\n\r\n        // get naturally height, margin, padding\r\n        var marginTop = styler.css(elm, 'margin-top');\r\n        var marginBottom = styler.css(elm, 'margin-bottom');\r\n        var paddingTop = styler.css(elm, 'padding-top');\r\n        var paddingBottom = styler.css(elm, 'padding-bottom');\r\n        var height = styler.css(elm, 'height');\r\n\r\n        // set initial css for animation\r\n        styler.css(elm, {\r\n            position: position,\r\n            visibility: 'visible',\r\n            overflow: 'hidden',\r\n            height: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n\r\n        // animate to gotten height, margin and padding\r\n        animate(elm, {\r\n            height: height,\r\n            marginTop: marginTop,\r\n            marginBottom: marginBottom,\r\n            paddingTop: paddingTop,\r\n            paddingBottom: paddingBottom\r\n        }, {\r\n            duration: duration,\r\n            complete: function() {\r\n                if (callback) {\r\n                    callback.apply(elm);\r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideUp(elm, duration, callback) {\r\n        // active the function only if the element is visible\r\n        if (geom.height(elm) > 0) {\r\n\r\n            // get the element position to restore it then\r\n            var position = styler.css(elm, 'position');\r\n\r\n            // get the element height, margin and padding to restore them then\r\n            var height = styler.css(elm, 'height');\r\n            var marginTop = styler.css(elm, 'margin-top');\r\n            var marginBottom = styler.css(elm, 'margin-bottom');\r\n            var paddingTop = styler.css(elm, 'padding-top');\r\n            var paddingBottom = styler.css(elm, 'padding-bottom');\r\n\r\n            // set initial css for animation\r\n            styler.css(elm, {\r\n                visibility: 'visible',\r\n                overflow: 'hidden',\r\n                height: height,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                paddingTop: paddingTop,\r\n                paddingBottom: paddingBottom\r\n            });\r\n\r\n            // animate element height, margin and padding to zero\r\n            animate(elm, {\r\n                height: 0,\r\n                marginTop: 0,\r\n                marginBottom: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0\r\n            }, {\r\n                // callback : restore the element position, height, margin and padding to original values\r\n                duration: duration,\r\n                queue: false,\r\n                complete: function() {\r\n                    hide(elm);\r\n                    styler.css(elm, {\r\n                        visibility: 'visible',\r\n                        overflow: 'hidden',\r\n                        height: height,\r\n                        marginTop: marginTop,\r\n                        marginBottom: marginBottom,\r\n                        paddingTop: paddingTop,\r\n                        paddingBottom: paddingBottom\r\n                    });\r\n                    if (callback) {\r\n                        callback.apply(elm);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display or hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideToggle(elm, duration, callback) {\r\n\r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm, duration, callback);\r\n        }\r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm, duration, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function emulateTransitionEnd(elm,duration) {\r\n        var called = false;\r\n        eventer.one(elm,'transitionEnd', function () { \r\n            called = true;\r\n        })\r\n        var callback = function () { \r\n            if (!called) {\r\n                eventer.trigger(elm,browser.support.transition.end) \r\n            }\r\n        };\r\n        setTimeout(callback, duration);\r\n        \r\n        return this;\r\n    } \r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     * @param {Node} params\r\n     */\r\n    function overlay(elm, params) {\r\n        var overlayDiv = noder.createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n    \r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {HTMLElement} elm\r\n     * @param {Node} params\r\n     */\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n\r\n            throbber = noder.createElement(\"div\", {\r\n                \"class\": params.className || \"throbber\"\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                \"class\": 'overlay fade'\r\n            }),\r\n            throb = noder.createElement(\"div\", {\r\n                \"class\": \"throb\"\r\n            }),\r\n            textNode = noder.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    noder.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        if (params.style) {\r\n            styler.css(throbber,params.style);\r\n        }\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate,\r\n        emulateTransitionEnd,\r\n        fadeIn,\r\n        fadeOut,\r\n        fadeTo,\r\n        fadeToggle,\r\n        hide,\r\n        scrollToTop,\r\n\r\n        slideDown,\r\n        slideToggle,\r\n        slideUp,\r\n        show,\r\n        throb,\r\n        toggle\r\n    });\r\n\r\n    return skylark.attach(\"domx.fx\", fx);\r\n});\ndefine('skylark-domx-fx/main',[\r\n\t\"./fx\",\r\n\t\"skylark-domx-velm\",\r\n\t\"skylark-domx-query\"\t\r\n],function(fx,velm,$){\r\n    // from ./fx\r\n    velm.delegate([\r\n        \"animate\",\r\n        \"emulateTransitionEnd\",\r\n        \"fadeIn\",\r\n        \"fadeOut\",\r\n        \"fadeTo\",\r\n        \"fadeToggle\",\r\n        \"hide\",\r\n        \"scrollToTop\",\r\n        \"slideDown\",\r\n        \"slideToggle\",\r\n        \"slideUp\",\r\n        \"show\",\r\n        \"toggle\"\r\n    ], fx);\r\n\r\n    $.fn.hide =  $.wraps.wrapper_every_act(fx.hide, fx);\r\n\r\n    $.fn.animate = $.wraps.wrapper_every_act(fx.animate, fx);\r\n    $.fn.emulateTransitionEnd = $.wraps.wrapper_every_act(fx.emulateTransitionEnd, fx);\r\n\r\n    $.fn.show = $.wraps.wrapper_every_act(fx.show, fx);\r\n    $.fn.hide = $.wraps.wrapper_every_act(fx.hide, fx);\r\n    $.fn.toogle = $.wraps.wrapper_every_act(fx.toogle, fx);\r\n    $.fn.fadeTo = $.wraps.wrapper_every_act(fx.fadeTo, fx);\r\n    $.fn.fadeIn = $.wraps.wrapper_every_act(fx.fadeIn, fx);\r\n    $.fn.fadeOut = $.wraps.wrapper_every_act(fx.fadeOut, fx);\r\n    $.fn.fadeToggle = $.wraps.wrapper_every_act(fx.fadeToggle, fx);\r\n\r\n    $.fn.slideDown = $.wraps.wrapper_every_act(fx.slideDown, fx);\r\n    $.fn.slideToggle = $.wraps.wrapper_every_act(fx.slideToggle, fx);\r\n    $.fn.slideUp = $.wraps.wrapper_every_act(fx.slideUp, fx);\r\n\r\n\treturn fx;\r\n});\ndefine('skylark-domx-fx', ['skylark-domx-fx/main'], function (main) { return main; });\n\ndefine('skylark-domx-plugins/plugins',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-data\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-fx\",\r\n    \"skylark-domx-query\",\r\n    \"skylark-domx-velm\"\r\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx, $, elmx) {\r\n    \"use strict\";\r\n\r\n    var slice = Array.prototype.slice,\r\n        concat = Array.prototype.concat,\r\n        pluginKlasses = {},\r\n        shortcuts = {};\r\n\r\n    /*\r\n     * Create or get or destory a plugin instance assocated with the element.\r\n     */\r\n    function instantiate(elm,pluginName,options) {\r\n        var pair = pluginName.split(\":\"),\r\n            instanceDataName = pair[1];\r\n        pluginName = pair[0];\r\n\r\n        if (!instanceDataName) {\r\n            instanceDataName = pluginName;\r\n        }\r\n\r\n        var pluginInstance = datax.data( elm, instanceDataName );\r\n\r\n        if (options === \"instance\") {\r\n            return pluginInstance;\r\n        } else if (options === \"destroy\") {\r\n            if (!pluginInstance) {\r\n                throw new Error (\"The plugin instance is not existed\");\r\n            }\r\n            pluginInstance.destroy();\r\n            datax.removeData( elm, pluginName);\r\n            pluginInstance = undefined;\r\n        } else {\r\n            if (!pluginInstance) {\r\n                if (options !== undefined && typeof options !== \"object\") {\r\n                    throw new Error (\"The options must be a plain object\");\r\n                }\r\n                var pluginKlass = pluginKlasses[pluginName]; \r\n                pluginInstance = new pluginKlass(elm,options);\r\n                datax.data( elm, instanceDataName,pluginInstance );\r\n            } else if (options) {\r\n                pluginInstance.reset(options);\r\n            }\r\n        }\r\n\r\n        return pluginInstance;\r\n    }\r\n\r\n\r\n    function shortcutter(pluginName,extfn) {\r\n       /*\r\n        * Create or get or destory a plugin instance assocated with the element,\r\n        * and also you can execute the plugin method directory;\r\n        */\r\n        return function (elm,options) {\r\n            var  plugin = instantiate(elm, pluginName,\"instance\");\r\n            if ( options === \"instance\" ) {\r\n              return plugin || null;\r\n            }\r\n\r\n            if (!plugin) {\r\n                plugin = instantiate(elm, pluginName,typeof options == 'object' && options || {});\r\n                if (typeof options != \"string\") {\r\n                  return this;\r\n                }\r\n            } \r\n            if (options) {\r\n                var args = slice.call(arguments,1); //2\r\n                if (extfn) {\r\n                    return extfn.apply(plugin,args);\r\n                } else {\r\n                    if (typeof options == 'string') {\r\n                        var methodName = options;\r\n\r\n                        if ( !plugin ) {\r\n                            throw new Error( \"cannot call methods on \" + pluginName +\r\n                                \" prior to initialization; \" +\r\n                                \"attempted to call method '\" + methodName + \"'\" );\r\n                        }\r\n\r\n                        if ( !langx.isFunction( plugin[ methodName ] ) || methodName.charAt( 0 ) === \"_\" ) {\r\n                            throw new Error( \"no such method '\" + methodName + \"' for \" + pluginName +\r\n                                \" plugin instance\" );\r\n                        }\r\n\r\n                        var ret = plugin[methodName].apply(plugin,args);\r\n                        if (ret == plugin) {\r\n                          ret = undefined;\r\n                        }\r\n\r\n                        return ret;\r\n                    }                \r\n                }                \r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Register a plugin type\r\n     */\r\n    function register( pluginKlass,shortcutName,instanceDataName,extfn) {\r\n        var pluginName = pluginKlass.prototype.pluginName;\r\n        \r\n        pluginKlasses[pluginName] = pluginKlass;\r\n\r\n        if (shortcutName) {\r\n            if (instanceDataName && langx.isFunction(instanceDataName)) {\r\n                extfn = instanceDataName;\r\n                instanceDataName = null;\r\n            } \r\n            if (instanceDataName) {\r\n                pluginName = pluginName + \":\" + instanceDataName;\r\n            }\r\n\r\n            var shortcut = shortcuts[shortcutName] = shortcutter(pluginName,extfn);\r\n                \r\n            $.fn[shortcutName] = function(options) {\r\n                var returnValue = this;\r\n\r\n                if ( !this.length && options === \"instance\" ) {\r\n                  returnValue = undefined;\r\n                } else {\r\n                  var args = slice.call(arguments);\r\n                  this.each(function () {\r\n                    var args2 = slice.call(args);\r\n                    args2.unshift(this);\r\n                    var  ret  = shortcut.apply(undefined,args2);\r\n                    if (ret !== undefined) {\r\n                        returnValue = ret;\r\n                    }\r\n                  });\r\n                }\r\n\r\n                return returnValue;\r\n            };\r\n\r\n            elmx.partial(shortcutName,function(options) {\r\n                var  ret  = shortcut(this._elm,options);\r\n                if (ret === undefined) {\r\n                    ret = this;\r\n                }\r\n                return ret;\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n \r\n    var Plugin =   langx.Evented.inherit({\r\n        klassName: \"Plugin\",\r\n\r\n        _construct : function(elm,options) {\r\n           this._elm = elm;\r\n           this._initOptions(options);\r\n        },\r\n\r\n        _initOptions : function(options) {\r\n          var ctor = this.constructor,\r\n              cache = ctor.cache = ctor.cache || {},\r\n              defaults = cache.defaults;\r\n          if (!defaults) {\r\n            var  ctors = [];\r\n            do {\r\n              ctors.unshift(ctor);\r\n              if (ctor === Plugin) {\r\n                break;\r\n              }\r\n              ctor = ctor.superclass;\r\n            } while (ctor);\r\n\r\n            defaults = cache.defaults = {};\r\n            for (var i=0;i<ctors.length;i++) {\r\n              ctor = ctors[i];\r\n              if (ctor.prototype.hasOwnProperty(\"options\")) {\r\n                langx.mixin(defaults,ctor.prototype.options,true);\r\n              }\r\n              if (ctor.hasOwnProperty(\"options\")) {\r\n                langx.mixin(defaults,ctor.options,true);\r\n              }\r\n            }\r\n          }\r\n          Object.defineProperty(this,\"options\",{\r\n            value :langx.mixin({},defaults,options,true)\r\n          });\r\n\r\n          //return this.options = langx.mixin({},defaults,options);\r\n          return this.options;\r\n        },\r\n\r\n\r\n        destroy: function() {\r\n            var that = this;\r\n\r\n            this._destroy();\r\n            // We can probably remove the unbind calls in 2.0\r\n            // all event bindings should go through this._on()\r\n            datax.removeData(this._elm,this.pluginName );\r\n        },\r\n\r\n        _destroy: langx.noop,\r\n\r\n        _delay: function( handler, delay ) {\r\n            function handlerProxy() {\r\n                return ( typeof handler === \"string\" ? instance[ handler ] : handler )\r\n                    .apply( instance, arguments );\r\n            }\r\n            var instance = this;\r\n            return setTimeout( handlerProxy, delay || 0 );\r\n        },\r\n\r\n        option: function( key, value ) {\r\n            var options = key;\r\n            var parts;\r\n            var curOption;\r\n            var i;\r\n\r\n            if ( arguments.length === 0 ) {\r\n\r\n                // Don't return a reference to the internal hash\r\n                return langx.mixin( {}, this.options );\r\n            }\r\n\r\n            if ( typeof key === \"string\" ) {\r\n\r\n                // Handle nested keys, e.g., \"foo.bar\" => { foo: { bar: ___ } }\r\n                options = {};\r\n                parts = key.split( \".\" );\r\n                key = parts.shift();\r\n                if ( parts.length ) {\r\n                    curOption = options[ key ] = langx.mixin( {}, this.options[ key ] );\r\n                    for ( i = 0; i < parts.length - 1; i++ ) {\r\n                        curOption[ parts[ i ] ] = curOption[ parts[ i ] ] || {};\r\n                        curOption = curOption[ parts[ i ] ];\r\n                    }\r\n                    key = parts.pop();\r\n                    if ( arguments.length === 1 ) {\r\n                        return curOption[ key ] === undefined ? null : curOption[ key ];\r\n                    }\r\n                    curOption[ key ] = value;\r\n                } else {\r\n                    if ( arguments.length === 1 ) {\r\n                        return this.options[ key ] === undefined ? null : this.options[ key ];\r\n                    }\r\n                    options[ key ] = value;\r\n                }\r\n            }\r\n\r\n            this._setOptions( options );\r\n\r\n            return this;\r\n        },\r\n\r\n        _setOptions: function( options ) {\r\n            var key;\r\n\r\n            for ( key in options ) {\r\n                this._setOption( key, options[ key ] );\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        _setOption: function( key, value ) {\r\n\r\n            this.options[ key ] = value;\r\n\r\n            return this;\r\n        },\r\n\r\n        getUID : function (prefix) {\r\n            prefix = prefix || \"plugin\";\r\n            do prefix += ~~(Math.random() * 1000000)\r\n            while (document.getElementById(prefix))\r\n            return prefix;\r\n        },\r\n\r\n        elm : function() {\r\n            return this._elm;\r\n        }\r\n\r\n    });\r\n\r\n    $.fn.plugin = function(name,options) {\r\n        var args = slice.call( arguments, 1 ),\r\n            self = this,\r\n            returnValue = this;\r\n\r\n        this.each(function(){\r\n            returnValue = instantiate.apply(self,[this,name].concat(args));\r\n        });\r\n        return returnValue;\r\n    };\r\n\r\n    elmx.partial(\"plugin\",function(name,options) {\r\n        var args = slice.call( arguments, 1 );\r\n        return instantiate.apply(this,[this.domNode,name].concat(args));\r\n    }); \r\n\r\n\r\n    function plugins() {\r\n        return plugins;\r\n    }\r\n     \r\n    langx.mixin(plugins, {\r\n        instantiate,\r\n        Plugin,\r\n        register,\r\n        shortcuts\r\n    });\r\n\r\n    return  skylark.attach(\"domx.plugins\",plugins);\r\n});\ndefine('skylark-domx-plugins/main',[\r\n\t\"./plugins\"\r\n],function(plugins){\r\n\treturn plugins;\r\n});\ndefine('skylark-domx-plugins', ['skylark-domx-plugins/main'], function (main) { return main; });\n\ndefine('skylark-domx-files/MultiUploader',[\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-velm\",\r\n  \"skylark-net-http/Upload\",\r\n  \"skylark-domx-plugins\",\r\n  \"./files\"\r\n]  ,function(skylark,langx,$, elmx,FileUpload, plugins,files){\r\n\r\n    var fileListTemplate = '<div class=\"lark-multiuploader\">' + \r\n        '    <h3 class=\"popover-title\">Upload files</h3>' + \r\n        '    <div class=\"popover-content container-fluid\" class=\"file-list file-dropzone file-pastezone\">' + \r\n        '        <div class=\"no-data\"><em>Add files.</em></div>' + \r\n        '    </div>' + \r\n        '    <footer>' + \r\n        '        <button class=\"btn btn-warning pull-right btn-sm\" id=\"cancel-uploads-button\"><i class=\"icon-cancel\"></i>Cancel uploads</button>' + \r\n        '        <span class=\"btn btn-success fileinput-button btn-sm\" id=\"fileinput-button\">' + \r\n        '            <i class=\"icon-plus\"></i>' + \r\n        '            <span>Add files...</span>' + \r\n        '            <input id=\"fileupload\" type=\"file\" name=\"files[]\" multiple=\"multiple\">' + \r\n        '        </span>' + \r\n        '        <button class=\"btn btn-primary btn-sm\" id=\"start-uploads-button\"><i class=\"icon-start\"></i>Start uploads</button>' + \r\n        '    </footer>' + \r\n        '</div>',\r\n        fileItemTemplate = '<div class=\"file-item row\">' +\r\n        '   <div class=\"col-md-6\"><span class=\"name\"></span></div>' + \r\n        '   <div class=\"col-md-3\">' +\r\n        '    <span class=\"size\"></span>' +\r\n        '    <div class=\"progress hidden\">' +\r\n        '        <div class=\"progress-label\"></div>' +\r\n        '        <div class=\"bar\"></div>' +\r\n        '    </div>' +\r\n        '    <span class=\"message hidden\"></span>' +\r\n        '   </div>' +\r\n        '   <div class=\"col-md-3\">' +\r\n        '    <button class=\"btn btn-warning btn-xs cancel\"><i class=\"icon-remove\"></i>Cancel</button>' +\r\n        '    <button class=\"btn btn-xs clear hidden\">Clear</button>' +\r\n        '   </div>' +\r\n        '</div>';\r\n\r\n    var MultiUploader =  plugins.Plugin.inherit({\r\n        klassName : \"Uploader\",\r\n        pluginName : \"lark.multiuploader\",\r\n\r\n        options: {\r\n            uploadUrl: '/upload',\r\n\r\n        \tparams: {\r\n                formParamName : \"file\"\r\n            },\r\n\r\n    \t    maxConnections: 3,\r\n        \t// validation\r\n        \tallowedExtensions: [],\r\n        \tsizeLimit: 0,\r\n        \tminSizeLimit: 0,\r\n\r\n            autoUpload: false,\r\n            selectors : {\r\n              fileList : \".file-list\",\r\n              fileItem : \".file-item\",\r\n              nodata : \".file-list .no-data\",\r\n\r\n              picker   : \".file-picker\",\r\n              dropzone : \".file-dropzone\",\r\n              pastezone: \".file-pastezone\",\r\n\r\n              startUploads: '.start-uploads',\r\n              cancelUploads: '.cancel-uploads',\r\n            },\r\n\r\n            template : fileListTemplate,\r\n\r\n            dataType: 'json',\r\n\r\n            fileItem : {\r\n            \tselectors : {\r\n                    name : \".name\",\r\n                    size : \".size\",\r\n                    cancel: \".cancel\",\r\n                    clear : \".clear\",\r\n                    progress : \".progress\",\r\n                    message : \".message\"                   \r\n            \t},\r\n\r\n            \ttemplate : fileItemTemplate\r\n            }\r\n        },\r\n\r\n\r\n        _construct : function(elm,options) {\r\n            var self = this;\r\n\r\n\r\n            // Render current files\r\n            /*\r\n            this.files.forEach(function (file) {\r\n                self.renderFile(file);\r\n            });\r\n            */\r\n\r\n            //this._refresh({files:true});\r\n        \r\n\r\n            //this._files.on('all', function(){\r\n            //  self._refresh({files:true});\r\n            //});\r\n\r\n\r\n           this.overrided(elm,options);\r\n\r\n\r\n           this._velm = elmx(this._elm);\r\n        \r\n\r\n\r\n            this._initEventHandler();\r\n            this._initFileHandlers();\r\n            this._initUpoadHandler();\r\n            this._updateFileList();\r\n        },\r\n\r\n        _initFileHandlers : function() {\r\n            var self = this;\r\n\r\n            var selectors = this.options.selectors,\r\n            \tdzSelector = selectors.dropzone,\r\n            \tpzSelector = selectors.pastezone,\r\n            \tpkSelector = selectors.picker;\r\n\r\n            if (dzSelector) {\r\n\t\t\t\tthis._velm.$(dzSelector).dropzone({\r\n\t                dropped : function (files) {\r\n                        self._addFiles(files);\r\n\t                }\r\n\t\t\t\t});\r\n            }\r\n\r\n\r\n            if (pzSelector) {\r\n                this._velm.$(pzSelector).pastezone({\r\n                    pasted : function (files) {\r\n                        self._addFiles(files);\r\n                    }\r\n                });                \r\n            }\r\n\r\n            if (pkSelector) {\r\n                this._velm.$(pkSelector).picker({\r\n                    multiple: true,\r\n                    picked : function (files) {\r\n                        self._addFiles(files);\r\n                    }\r\n                });                \r\n            }\r\n        },\r\n\r\n        _initUpoadHandler: function(){\r\n            var self = this,\r\n                handlerClass;\r\n\r\n            this._handler = new FileUpload({\r\n                url: this.options.uploadUrl,\r\n                maxConnections: this.options.maxConnections,\r\n                onProgress: function(id, fileName, loaded, total){\r\n                    self._onProgress(id, fileName, loaded, total);\r\n                },\r\n                onComplete: function(id, fileName, result){\r\n                    self._onComplete(id, fileName, result);\r\n                },\r\n                onCancel: function(id, fileName){\r\n                    self._onCancel(id, fileName);\r\n                },\r\n                onFailure: function(id,fileName,e){\r\n                    self._onFailure(id,fileName,e);\r\n                }\r\n            });\r\n        },\r\n        \r\n         /**\r\n         * delegate click event for cancel link\r\n         **/\r\n        _initEventHandler: function(){\r\n            var self = this,\r\n               selectors = this.options.selectors,\r\n               itemSelectors = this.options.fileItem.selectors, \r\n               list = this._listElement;\r\n\r\n            // Add cancel handler\r\n            this._velm.$(selectors.fileList).on(\"click\",itemSelectors.cancel,function(e){\r\n                var $fileItem = $(this).closest(selectors.fileItem),\r\n                    fileId = $fileItem.data(\"fileId\");\r\n                self._handler.cancel(fileId);\r\n                $fileItem.remove();\r\n                self._updateFileList();\r\n            });\r\n\r\n            // Add clear handler\r\n            this._velm.$(selectors.fileList).on(\"click\",itemSelectors.clear,function(e){\r\n                var $fileItem = $(this).closest(selectors.fileItem),\r\n                    fileId = $fileItem.data(\"fileId\");\r\n                $fileItem.remove();\r\n                self._updateFileList();\r\n            });\r\n\r\n            // Add cancel all handler\r\n            this._velm.$(selectors.cancelUploads).click(function(){\r\n                var $files = self._velm.$(selectors.fileList).find(selectors.fileItem);           \r\n                $files.forEach(function(fileItem){\r\n                    var $fileItem = $(fileItem),\r\n                        fileId = $fileItem.data(\"fileId\");\r\n                    self._handler.cancel(fileId);\r\n                    $fileItem.remove();\r\n                });\r\n                self._updateFileList();\r\n\r\n            });\r\n\r\n            // Add start uploads handler\r\n            this._velm.$(selectors.startUploads).click(function(){\r\n                var $files = self._velm.$(selectors.fileList).find(selectors.fileItem);           \r\n                $files.forEach(function(fileItem){\r\n                    var $fileItem = $(fileItem),\r\n                        fileId = $fileItem.data(\"fileId\");\r\n                    if (!$fileItem.data(\"status\")) {\r\n                        // The file has not yet been sent\r\n                        self._handler.send(fileId,self.options.params);\r\n                    }\r\n                });\r\n\r\n            });\r\n            \r\n\r\n        },       \r\n\r\n        _onProgress: function(id, fileName, loaded, total){          \r\n            var $item = this._getItemByFileId(id);\r\n\r\n            var percent = parseInt(loaded / total * 100, 10);\r\n            var progressHTML = this._formatSize(loaded)+' of '+ this._formatSize(total);\r\n\r\n            $item.data(\"status\",\"running\");\r\n            $item.find('.progress')\r\n                .find('.bar')\r\n                .css('width', percent+'%')\r\n                .parent()\r\n                .find('.progress-label')\r\n                .html(progressHTML);\r\n            this._updateFile($item);\r\n\r\n        },\r\n\r\n        _onComplete: function(id, fileName, result){\r\n            this._filesInProgress--;\r\n            var $item = this._getItemByFileId(id);\r\n            $item.data(\"status\",\"done\");\r\n            $item.find('.message').html('<i class=\"icon-success\"></i> ' + (this.doneMsg || 'Uploaded'));\r\n            this._updateFile($item);\r\n        },\r\n\r\n        _onFailure : function(id,fileName,e) {\r\n            this._filesInProgress--;\r\n            var $item = this._getItemByFileId(id);\r\n            $item.data(\"status\",\"error\");\r\n            $item.find('.message').html('<i class=\"icon-error\"></i> ');;\r\n            this._updateFile($item)\r\n\r\n        },\r\n\r\n        _onCancel: function(id, fileName){\r\n            this._filesInProgress--;\r\n            var $item = this._getItemByFileId(id);\r\n            $item.data(\"status\",\"cancel\");\r\n            this._updateFile($item)\r\n        },\r\n\r\n        _addToList: function(id, fileName){\r\n            var self = this;\r\n\r\n\r\n            var fileName = this._handler.getName(id),\r\n                fileSize = this._handler.getSize(id);\r\n\r\n            var item = $(this.options.fileItem.template);\r\n            item.data(\"fileId\",id);\r\n\r\n            item.find(this.options.fileItem.selectors.name).html(this._formatFileName(fileName));\r\n            item.find(this.options.fileItem.selectors.size).html(this._formatSize(fileSize));\r\n\r\n            this._velm.$(this.options.selectors.fileList).append(item);\r\n\r\n            this._updateFileList();\r\n        },\r\n    \r\n        _updateFileList : function ()  {\r\n            var selectors = this.options.selectors,\r\n                itemSelectors = this.options.fileItem.selectors,\r\n                files = this._velm.$(selectors.fileList).find(selectors.fileItem);\r\n\r\n            var with_files_elements = this._velm.$(selectors.cancelUploads + ',' + selectors.startUploads);\r\n            var without_files_elements = this._velm.$(selectors.nodata);\r\n            if (files.length > 0) {\r\n                with_files_elements.removeClass('hidden');\r\n                without_files_elements.addClass('hidden');\r\n            } else {\r\n                with_files_elements.addClass('hidden');\r\n                without_files_elements.removeClass('hidden');\r\n            }\r\n        },\r\n        \r\n        _updateFile: function ($item) {\r\n            var selectors = this.options.fileItem.selectors,\r\n                when_pending = $item.find(selectors.size + \",\" + selectors.cancel),\r\n                when_running = $item.find(selectors.progress + \",\" + selectors.cancel),\r\n                when_done = $item.find(selectors.message + \",\" + selectors.clear);\r\n\r\n            var status = $item.data(\"status\");    \r\n            if (status == \"pending\") {\r\n                when_running.add(when_done).addClass('hidden');\r\n                when_pending.removeClass('hidden');\r\n            } else if (status == \"running\") {\r\n                when_pending.add(when_done).addClass('hidden');\r\n                when_running.removeClass('hidden');\r\n            } else if (status == \"done\" || status == \"error\") {\r\n                when_pending.add(when_running).addClass('hidden');\r\n                when_done.removeClass('hidden');\r\n            }\r\n        },\r\n\r\n        _getItemByFileId: function(id){\r\n            var selectors = this.options.selectors,\r\n                files = this._velm.$(selectors.fileList).find(selectors.fileItem),\r\n                item;\r\n\r\n            // there can't be txt nodes in dynamically created list\r\n            // and we can  use nextSibling\r\n\r\n            for (var i = 0; i<files.length;i++){\r\n                var item2 = files[i];\r\n                if ($(item2).data(\"fileId\") == id) {\r\n                    item = item2;\r\n                    break;\r\n                }\r\n            }\r\n            if (item) {\r\n                return $(item);\r\n            }\r\n        },\r\n\r\n\r\n            \r\n        _addFiles: function(files){\r\n            for (var i=0; i<files.length; i++){\r\n                if ( !this._validateFile(files[i])){\r\n                    return;\r\n                }\r\n            }\r\n\r\n            for (var i=0; i<files.length; i++){\r\n                this._addFile(files[i]);\r\n            }\r\n        },\r\n\r\n        _addFile: function(file){\r\n            var id = this._handler.add(file);\r\n\r\n            this._filesInProgress++;\r\n            this._addToList(id);\r\n\r\n            //this._handler.upload(id, this.options.params);\r\n        },\r\n\r\n        _validateFile: function(file){\r\n            var name, size;\r\n\r\n            if (file.value){\r\n                // it is a file input\r\n                // get input value and remove path to normalize\r\n                name = file.value.replace(/.*(\\/|\\\\)/, \"\");\r\n            } else {\r\n                // fix missing properties in Safari\r\n                name = file.fileName != null ? file.fileName : file.name;\r\n                size = file.fileSize != null ? file.fileSize : file.size;\r\n            }\r\n\r\n            if (! this._isAllowedExtension(name)){\r\n                this._error('typeError', name);\r\n                return false;\r\n\r\n            } else if (size === 0){\r\n                this._error('emptyError', name);\r\n                return false;\r\n\r\n            } else if (size && this.options.sizeLimit && size > this.options.sizeLimit){\r\n                this._error('sizeError', name);\r\n                return false;\r\n\r\n            } else if (size && size < this.options.minSizeLimit){\r\n                this._error('minSizeError', name);\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        },\r\n\r\n        _error: function(code, fileName){\r\n            var message = this.options.messages[code];\r\n            function r(name, replacement){ message = message.replace(name, replacement); }\r\n\r\n            r('{file}', this._formatFileName(fileName));\r\n            r('{extensions}', this.options.allowedExtensions.join(', '));\r\n            r('{sizeLimit}', this._formatSize(this.options.sizeLimit));\r\n            r('{minSizeLimit}', this._formatSize(this.options.minSizeLimit));\r\n\r\n            this.options.showMessage(message);\r\n        },\r\n\r\n        _formatFileName: function(name){\r\n            if (name.length > 33){\r\n                name = name.slice(0, 19) + '...' + name.slice(-13);\r\n            }\r\n            return name;\r\n        },\r\n\r\n        _isAllowedExtension: function(fileName){\r\n            var ext = (-1 !== fileName.indexOf('.')) ? fileName.replace(/.*[.]/, '').toLowerCase() : '';\r\n            var allowed = this.options.allowedExtensions;\r\n\r\n            if (!allowed.length){return true;}\r\n\r\n            for (var i=0; i<allowed.length; i++){\r\n                if (allowed[i].toLowerCase() == ext){ return true;}\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        _formatSize: function(bytes){\r\n            var i = -1;\r\n            do {\r\n                bytes = bytes / 1024;\r\n                i++;\r\n            } while (bytes > 99);\r\n\r\n            return Math.max(bytes, 0.1).toFixed(1) + ['KB', 'MB', 'GB', 'TB', 'PB', 'EB'][i];\r\n        }\r\n\r\n    });\r\n\r\n   plugins.register(MultiUploader);\r\n\r\n\r\n\r\n\treturn files.MultiUploader = MultiUploader;\r\n});\ndefine('skylark-domx-files/main',[\r\n\t\"./files\",\r\n\t\"skylark-domx-velm\",\r\n\t\"skylark-domx-query\",\r\n\t\"./dropzone\",\r\n\t\"./pastezone\",\r\n\t\"./picker\",\r\n\t\"./MultiUploader\"\r\n],function(files,velm,$){\r\n\tvelm.delegate([\r\n\t\t\"dropzone\",\r\n\t\t\"pastezone\",\r\n\t\t\"picker\"\r\n\t],files);\r\n\r\n    $.fn.pastezone = $.wraps.wrapper_every_act(files.pastezone, files);\r\n    $.fn.dropzone = $.wraps.wrapper_every_act(files.dropzone, files);\r\n    $.fn.picker = $.wraps.wrapper_every_act(files.picker, files);\r\n\r\n\treturn files;\r\n});\ndefine('skylark-domx-files', ['skylark-domx-files/main'], function (main) { return main; });\n\ndefine('skylark-widgets-base/Widget',[\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-data\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-files\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-velm\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-fx\",\r\n  \"skylark-domx-plugins\",\r\n  \"skylark-data-collection/HashMap\",\r\n  \"./base\"\r\n],function(skylark,langx,browser,datax,eventer,noder,files,geom,elmx,$,fx, plugins,HashMap,base){\r\n\r\n/*---------------------------------------------------------------------------------*/\r\n\r\n  var Widget = plugins.Plugin.inherit({\r\n    klassName: \"Widget\",\r\n\r\n    _elmx : elmx,\r\n\r\n    _construct : function(elm,options) {\r\n        if (langx.isHtmlNode(elm)) {\r\n          options = this._parse(elm,options);\r\n        } else {\r\n          options = elm;\r\n          elm = null;\r\n        }\r\n        this.overrided(elm,options);\r\n\r\n        if (!elm) {\r\n          this._velm = this._create();\r\n          this._elm = this._velm.elm();\r\n        } else {\r\n          this._velm = elmx(this._elm);\r\n        }\r\n        \r\n        Object.defineProperty(this,\"state\",{\r\n          value :this.options.state || new HashMap()\r\n        });\r\n\r\n        //this.state = this.options.state || new Map();\r\n        this._init();\r\n\r\n        var addonCategoryOptions = this.options.addons;\r\n        if (addonCategoryOptions) {\r\n          var widgetCtor = this.constructor,\r\n              addons = widgetCtor.addons;\r\n          for (var categoryName in addonCategoryOptions) {\r\n              for (var i =0;i < addonCategoryOptions[categoryName].length; i++ ) {\r\n                var addonOption = addonCategoryOptions[categoryName][i];\r\n                if (langx.isString(addonOption)) {\r\n                  var addonName = addonOption,\r\n                      addonSetting = addons[categoryName][addonName],\r\n                      addonCtor = addonSetting.ctor ? addonSetting.ctor : addonSetting;\r\n\r\n                  this.addon(addonCtor,addonSetting.options);\r\n\r\n                }\r\n\r\n              }\r\n          }\r\n        }\r\n\r\n        if (this._elm.parentElement) {\r\n          // The widget is already in document\r\n          this._startup();\r\n        }\r\n\r\n     },\r\n\r\n    /**\r\n     * Parses widget options from attached element.\r\n     * This is a callback method called by constructor when attached element is specified.\r\n     * @method _parse\r\n     * @return {Object} options.\r\n     */\r\n    _parse : function(elm,options) {\r\n      var optionsAttr = datax.data(elm,\"options\");\r\n      if (optionsAttr) {\r\n         //var options1 = JSON.parse(\"{\" + optionsAttr + \"}\");\r\n         var options1 = eval(\"({\" + optionsAttr + \"})\");\r\n         options = langx.mixin(options1,options); \r\n      }\r\n      return options || {};\r\n    },\r\n\r\n\r\n    /**\r\n     * Create html element for this widget.\r\n     * This is a callback method called by constructor when attached element is not specified.\r\n     * @method _create\r\n     */\r\n    _create : function() {\r\n        var template = this.options.template;\r\n        if (template) {\r\n          return this._elmx(template);\r\n        } else {\r\n          throw new Error(\"The template is not existed in options!\");\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Init widget.\r\n     * This is a callback method called by constructor.\r\n     * @method _init\r\n     */\r\n    _init : function() {\r\n      var self = this;\r\n      if (this.widgetClass) {\r\n        this._velm.addClass(this.widgetClass);\r\n      }\r\n      this.state.on(\"changed\",function(e,args) {\r\n        self._refresh(args.data);\r\n      });\r\n    },\r\n\r\n\r\n    /**\r\n     * Startup widget.\r\n     * This is a callback method called when widget element is added into dom.\r\n     * @method _post\r\n     */\r\n    _startup : function() {\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * Refresh widget.\r\n     * This is a callback method called when widget state is changed.\r\n     * @method _refresh\r\n     */\r\n    _refresh : function(updates) {\r\n      /*\r\n      var _ = this._,\r\n          model = _.model,\r\n          dom = _.dom,\r\n          props = {\r\n\r\n          };\r\n      updates = updates || {};\r\n      for (var attrName in updates){\r\n          var v = updates[attrName].value;\r\n          if (v && v.toCss) {\r\n              v.toCss(props);\r\n              updates[attrName].processed = true;\r\n          }\r\n\r\n      };\r\n\r\n      this.css(props);\r\n\r\n      if (updates[\"disabled\"]) {\r\n          var v = updates[\"disabled\"].value;\r\n          dom.aria('disabled', v);\r\n          self.classes.toggle('disabled', v);\r\n      }\r\n      */\r\n    },                \r\n\r\n    mapping : {\r\n      \"events\" : {\r\n  //       'mousedown .title':  'edit',\r\n  //       'click .button':     'save',\r\n  //       'click .open':       function(e) { ... }            \r\n      },\r\n\r\n      \"attributs\" : {\r\n\r\n      },\r\n\r\n      \"properties\" : {\r\n\r\n      },\r\n\r\n      \"styles\" : {\r\n\r\n      }\r\n    },\r\n\r\n    addon : function(ctor,setting) {\r\n      var categoryName = ctor.categoryName,\r\n          addonName = ctor.addonName;\r\n\r\n      this._addons = this.addons || {};\r\n      var category = this._addons[categoryName] = this._addons[categoryName] || {};\r\n      category[addonName] = new ctor(this,setting);\r\n      return this;\r\n    },\r\n\r\n    addons : function(categoryName,settings) {\r\n      this._addons = this.addons || {};\r\n      var category = this._addons[categoryName] = this._addons[categoryName] || {};\r\n\r\n      if (settings == undefined) {\r\n        return langx.clone(category || null);\r\n      } else {\r\n        langx.mixin(category,settings);\r\n      }\r\n    },\r\n\r\n\r\n    /**\r\n     * Returns a html element representing the widget.\r\n     *\r\n     * @method render\r\n     * @return {HtmlElement} HTML element representing the widget.\r\n     */\r\n    render: function() {\r\n      return this._elm;\r\n    },\r\n\r\n\r\n\r\n    /**\r\n     * Returns a parent widget  enclosing this widgets, or null if not exist.\r\n     *\r\n     * @method getEnclosing\r\n     * @return {Widget} The enclosing parent widget, or null if not exist.\r\n     */\r\n    getEnclosing : function(selector) {\r\n      return null;\r\n    },\r\n\r\n    /**\r\n     * Returns a widget collection with all enclosed child widgets.\r\n     *\r\n     * @method getEnclosed\r\n     * @return {List} Collection with all enclosed child widgets..\r\n     */\r\n    getEnclosed : function() {\r\n      var self = this;\r\n          children = new ArrayList();\r\n      return children;\r\n    },\r\n\r\n    /**\r\n     * Sets the visible state to true.\r\n     *\r\n     * @method show\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n\r\n    show : function() {\r\n      this._velm.show();\r\n    },\r\n\r\n    /**\r\n     * Sets the visible state to false.\r\n     *\r\n     * @method hide\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    hide : function() {\r\n      this._velm.hide();\r\n    },\r\n\r\n    /**\r\n     * Focuses the current widget.\r\n     *\r\n     * @method focus\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    focus :function() {\r\n      try {\r\n        this._velm.focus();\r\n      } catch (ex) {\r\n        // Ignore IE error\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Blurs the current widget.\r\n     *\r\n     * @method blur\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    blur : function() {\r\n      this._velm.blur();\r\n\r\n      return this;\r\n    },\r\n\r\n    enable: function () {\r\n      this.state.set('disabled',false);\r\n      return this;\r\n    },\r\n\r\n    disable: function () {\r\n      this.state.set('disabled',true);\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the specified aria property.\r\n     *\r\n     * @method aria\r\n     * @param {String} name Name of the aria property to set.\r\n     * @param {String} value Value of the aria property.\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    aria : function(name, value) {\r\n      const self = this, elm = self.getEl(self.ariaTarget);\r\n\r\n      if (typeof value === 'undefined') {\r\n        return self._aria[name];\r\n      }\r\n\r\n      self._aria[name] = value;\r\n\r\n      if (self.state.get('rendered')) {\r\n        elm.setAttribute(name === 'role' ? name : 'aria-' + name, value);\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    attr: function (name,value) {\r\n        var velm = this._velm,\r\n            ret = velm.attr(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    css: function (name, value) {\r\n        var velm = this._velm,\r\n            ret = velm.css(name, value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    data: function (name, value) {\r\n        var velm = this._velm,\r\n            ret = velm.data(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    prop: function (name,value) {\r\n        var velm = this._velm,\r\n            ret = velm.prop(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    throb: function(params) {\r\n      return fx.throb(this._elm,params);\r\n    },\r\n\r\n    emit : function(type,params) {\r\n      var e = langx.Emitter.createEvent(type,{\r\n        data : params\r\n      });\r\n      return langx.Emitter.prototype.emit.call(this,e,params);\r\n    },\r\n\r\n    /**\r\n     *  Attach the current widget element to dom document.\r\n     *\r\n     * @method attach\r\n     * @return {Widget} This Widget.\r\n     */\r\n    attach : function(target,position){\r\n        var elm = target;\r\n        if (!position || position==\"child\") {\r\n            noder.append(elm,this._elm);\r\n        } else  if (position == \"before\") {\r\n            noder.before(elm,this._elm);\r\n        } else if (position == \"after\") {\r\n            noder.after(elm,this._elm);\r\n        }\r\n        this._startup();\r\n    },\r\n\r\n    /**\r\n     *  Detach the current widget element from dom document.\r\n     *\r\n     * @method html\r\n     * @return {HtmlElement} HTML element representing the widget.\r\n     */\r\n    detach : function() {\r\n      this._velm.remove();\r\n    }\r\n  });\r\n\r\n  Widget.inherit = function(meta) {\r\n    var ctor = plugins.Plugin.inherit.apply(this,arguments);\r\n\r\n    function addStatePropMethod(name) {\r\n        ctor.prototype[name] = function(value) {\r\n          if (value !== undefined) {\r\n            this.state.set(name,value);\r\n            return this;\r\n          } else {\r\n            return this.state.get(name);\r\n          }\r\n        };\r\n    }\r\n    if (meta.state) {\r\n      for (var name in meta.state) {\r\n          addStatePropMethod(name);\r\n      }\r\n    }\r\n\r\n    if (meta.pluginName) {\r\n      plugins.register(ctor,meta.pluginName);\r\n    }\r\n    return ctor;\r\n  };\r\n\r\n  Widget.register = function(ctor,widgetName) {\r\n    var meta = ctor.prototype,\r\n        pluginName = widgetName || meta.pluginName;\r\n\r\n    function addStatePropMethod(name) {\r\n        ctor.prototype[name] = function(value) {\r\n          if (value !== undefined) {\r\n            this.state.set(name,value);\r\n            return this;\r\n          } else {\r\n            return this.state.get(name);\r\n          }\r\n        };\r\n    }\r\n    if (meta.state) {\r\n      for (var name in meta.state) {\r\n          addStatePropMethod(name);\r\n      }\r\n    }\r\n\r\n    if (pluginName) {\r\n      plugins.register(ctor,pluginName);\r\n    }\r\n    return ctor;\r\n  };\r\n\r\n  return base.Widget = Widget;\r\n});\r\n\ndefine('skylark-widgets-base/main',[\r\n\t\"./base\",\r\n\t\"./Action\",\r\n\t\"./ActionManager\",\r\n\t\"./Widget\"\r\n],function(base){\r\n\treturn base;\r\n});\ndefine('skylark-widgets-base', ['skylark-widgets-base/main'], function (main) { return main; });\n\n"]}