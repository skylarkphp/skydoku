{"version":3,"sources":["skylark-widgets-repeater.js"],"names":["define","skylark","langx","browser","eventer","noder","geom","elmx","$","Widget","Repeater","inherit","klassName","pluginName","options","dataSource","callback","count","end","items","page","pages","start","defaultView","dropPagingCap","staticHeight","views","searchOnKeyPress","allowCancel","addons","_init","$btn","currentView","self","this","$element","_elm","$canvas","find","$count","$end","$filters","$loader","$pageSize","$nextBtn","$pages","$prevBtn","$primaryPaging","$search","$secondaryPaging","$start","$viewport","$views","on","e","dropdown","currentPage","isDisabled","infiniteScrollingCallback","infiniteScrollingCont","infiniteScrollingEnabled","infiniteScrollingEnd","infiniteScrollingOptions","lastPageInput","pageIncrement","resizeTimeout","stamp","Date","getTime","Math","floor","random","storedDataSourceOpts","syncingViewButtonState","viewType","plugin","value","trigger","render","clearInfinite","proxy","next","previous","evt","data","pageInputChange","text","val","keyCode","viewChanged","window","clearTimeout","setTimeout","resize","length","initViewTypes","changeView","clear","opts","preserve","scan","empty","undefined","_view","cleared","clearPreservedDataSourceOptions","destroy","markup","each","attr","outerHTML","infinitescroll","remove","off","disable","addClass","enabled","status","enable","removeClass","removeAttr","hasClass","parseInt","html","getDataOptions","dataSourceOptions","preserveDataSourceOptions","mixin","returnOptions","view","pageIndex","filter","selectedItem","pageSize","searchValue","search","dataOptions","infiniteScrolling","footer","viewport","css","height","outerHeight","hide","cont","show","infiniteScrollPaging","NaN","initInfiniteScrolling","helpers","_views","viewTypes","i","setting","Error","ctor","push","initViewType","call","itemization","dataFromCombobox","pageInc","pagination","totalPages","currenPageOutput","dropMenu","l","append","is","focus","prevView","split","selected","syncViewButtonState","_throbber","throb","className","beforeRender","repeaterPrototypeContext","viewTypeObj","dataSourceReturnedData","doRender","viewportMargins","currentHiddenElement","scrubbedElements","previousProperties","$hiddenElements","parentsUntil","currentElementIndex","style","bottom","top","staticHeightValue","headerHeight","footerHeight","bottomMargin","topMargin","width","outerWidth","forEach","element","renderItems","container","before","addBefore","addItem","$dataContainer","$container","renderItem","subset","objectAndPropsToRepeatOnString","repeat","objectAndPropsToRepeatOn","objectToRepeatOn","propsToRepeatOn","slice","prop","logWarn","subItemIndex","addSubItem","index","after","addAfter","$selected","target","parents","$itemToCheck","getNestedProperty","obj","property","replace","str","singleQuoteProp","doubleQuoteProp","arrayIndex","dotProp","getDataProperty","key","dataset","_","b","toUpperCase","getAttribute","toLowerCase","test","parseJSON","ignore","getItemProperty","msg","console","warn","keep","children","item","pres","detach","$parent","response","action","callNextInit","currentViewType","nextViewType","currentViewtype","initialize","state","d","renderOptions","attach","ViewBase","Evented","controlsClass","fullScreen","_create$Item","template","itemData","invalid","indexOf","trim","substring","init","repeater","hasControls","that","initOptions","close","getValue","getSelectedItems","ListView","alignment","infiniteScroll","itemRendered","noItemsHTML","selectable","clearSelectedItems","setSelectedItems","force","$item","n","compareItemIndex","compareItemSelector","selector","selectItem","$itm","select","thumbnail_clearSelectedItems","isArray","infScroll","$cont","$thumbnail","name","SliderView","slidesContainer","titleElement","displayClass","singleClass","leftEdgeClass","rightEdgeClass","playingClass","slideClass","slideLoadingClass","slideErrorClass","slideContentClass","toggleClass","prevClass","nextClass","closeClass","playPauseClass","displayTransition","clearSlides","toggleControlsOnReturn","toggleControlsOnSlideClick","toggleSlideshowOnSpace","enableKeyboardNavigation","closeOnEscape","closeOnSlideClick","closeOnSwipeUpOrDown","emulateTouchEvents","stopTouchEventsPropagation","hidePageScrollbars","disableScroll","carousel","continuous","unloadElements","startSlideshow","slideshowInterval","preloadRange","transitionSpeed","slideshowTransitionSpeed","event","onslide","onslideend","onslidecomplete","indicatorContainer","activeIndicatorClass","thumbnailProperty","thumbnailIndicators","indicators","support","touch","ontouchstart","DocumentTouch","document","transitions","webkitTransition","prefix","MozTransition","OTransition","transition","hasOwnProperty","elementTests","translateZ","body","appendChild","getComputedStyle","getPropertyValue","transform","translate","backgroundSize","contain","cover","removeChild","createElement","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","cancelAnimationFrame","webkitCancelRequestAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","helper","list","num","initStartIndex","initView","initEventListeners","ontransitionend","play","slide","to","speed","timeout","direction","naturalDirection","diff","circle","abs","positions","slideWidth","move","animate","getIndex","getNumber","prev","dist","translateX","x","y","slides","translateY","from","timer","setInterval","timeElap","left","clearInterval","time","interval","animationFrameId","pause","add","concat","Array","prototype","addSlide","positionSlide","initSlides","resetSlides","unloadAllSlides","preventDefault","returnValue","stopPropagation","cancelBubble","onresize","onmousedown","which","nodeName","originalEvent","touches","pageX","pageY","onmousemove","touchStart","ontouchmove","onmouseup","ontouchend","onmouseout","related","relatedTarget","contains","now","isScrolling","touchDelta","touchDeltaX","indices","scale","unshift","pop","indexForward","indexBackward","distanceForward","distanceBackward","isShortDuration","Number","isValidSlide","isPastBounds","slideHeight","ontouchcancel","onkeydown","toggleControls","toggleSlideshow","handleClick","srcElement","parent","parentNode","getNodeIndex","isTarget","onclick","updateEdgeClasses","handleSlide","loadElements","setTitle","setActiveIndicator","firstChild","title","alt","createTextNode","func","args","wait","apply","loadElement","elements","proxyListener","limit","min","j","unloadSlide","createIndicator","thumbnailUrl","thumbnail","indicator","indicatorPrototype","cloneNode","getElementsByTagName","src","backgroundImage","addIndicator","setAttribute","activeIndicator","slidePrototype","reload","imagePrototype","elementPrototype","clientWidth","clientHeight","len","getItemUrl","type","destroyEventListeners","first","log","bodyOverflowStyle","overflow","display","overrided","TableView","columnRendered","columnSizing","columnSyncing","highlightSortedColumn","sortClearing","rowRendered","frozenColumns","actions","highlightColumn","tbody","col","positionHeadings","$wrapper","offsetLeft","offset","scrollLeft","$heading","itms","checkIfItemMatchesValue","rowIndex","slct","$frozenCols","prepend","sizeHeadings","$table","$th","setFrozenColumns","frozenTable","repeaterWrapper","numFrozenColumns","$frozenColumnWrapper","insertBefore","$frozenColumn","clone","$frozenThead","$frozenTheadWrapper","$checkboxLabel","sizeFrozenColumns","click","positionColumns","scrollTop","frozenEnabled","actionsEnabled","canvasWidth","tableWidth","actionsWidth","shouldScroll","createItemActions","actionsHtml","$actionsTable","actionsDropdown","$actionsColumnWrapper","actions_width","$actionsColumn","label","$actionsCells","rowNumber","sizeActionsTable","actionName","row","rows","getActionItems","selectorIndex","selectedObj","actionObj","grep","selectedRowsL","clickedRow","rowData","clickAction","$actionsTableHeader","columnWidth","frozenOptionsInitialize","$checkboxes","$headerCheckbox","$everyTable","checkbox","$rowCheckboxes","$checkAll","revertCheckbox","$checkbox","revertingCheckbox","currentTarget","numSelected","sortDirection","sortProperty","toggleActionsHeaderButton","specialBrowserClass","noItems","sizeColumns","firstRender","$listContainer","renderThead","renderTbody","renderRow","$sorted","renderColumn","$row","columns","columnIndex","content","$col","_auto_width","checkBoxMarkup","renderHeader","$tr","$both","sortable","$span","$spans","chevDown","chevUp","$div","checkAllID","$header","$tbody","isMulti","isActions","$repeater","$frozenRow","$actionsRow","$checkBox","keyup","colLength","columnAttr","$empty","error","$thead","oldCols","newCols","newColsL","areDifferentColumns","splice","actionsColumn","checkboxWidth","selectColumn","column","newWidth","widthTaken","automaticallyGeneratedWidths","minWidth","ua","navigator","userAgent","msie","firefox","selectedSelector","TileView","center","justify","right","thumbnail_injectSpacers","main"],"mappings":"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","file":"../skylark-widgets-repeater.js","sourcesContent":["define('skylark-widgets-repeater/Repeater',[\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-velm\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-widgets-swt/Widget\",\r\n  \"skylark-widgets-swt/SelectList\",\r\n  \"skylark-widgets-swt/ComboBox\",\r\n  \"skylark-widgets-swt/SearchBox\"  \r\n],function(skylark,langx,browser,eventer,noder,geom,elmx,$,Widget){\r\n\r\n\t// REPEATER CONSTRUCTOR AND PROTOTYPE\r\n\r\n\tvar Repeater = Widget.inherit({\r\n\t\tklassName: \"Repeater\",\r\n\r\n\t\tpluginName: \"lark.repeater\",\r\n\r\n\t\toptions : {\r\n\t\t\tdataSource: function dataSource (options, callback) {\r\n\t\t\t\tcallback({ count: 0, end: 0, items: [], page: 0, pages: 1, start: 0 });\r\n\t\t\t},\r\n\t\t\tdefaultView: -1, // should be a string value. -1 means it will grab the active view from the view controls\r\n\t\t\tdropPagingCap: 10,\r\n\t\t\tstaticHeight: -1, // normally true or false. -1 means it will look for data-staticheight on the element\r\n\t\t\tviews: null, // can be set to an object to configure multiple views of the same type,\r\n\t\t\tsearchOnKeyPress: false,\r\n\t\t\tallowCancel: true,\r\n\r\n\t\t\taddons : {\r\n\t\t\t\tviews : [\"table\",\"tile\"]\r\n\t\t\t}\r\n\t\t},\r\n\r\n//\t\t_init : function(element,options) {\r\n\t\t_init : function() {\r\n\t\t\tvar self = this;\r\n\t\t\tvar $btn;\r\n\t\t\tvar currentView;\r\n\r\n\t\t\tthis.$element = $(this._elm); //$(element);\r\n\r\n\t\t\tthis.$canvas = this.$element.find('.repeater-canvas');\r\n\t\t\tthis.$count = this.$element.find('.repeater-count');\r\n\t\t\tthis.$end = this.$element.find('.repeater-end');\r\n\t\t\tthis.$filters = this.$element.find('.repeater-filters');\r\n\t\t\tthis.$loader = this.$element.find('.repeater-loader');\r\n\t\t\tthis.$pageSize = this.$element.find('.repeater-itemization .selectlist');\r\n\t\t\tthis.$nextBtn = this.$element.find('.repeater-next');\r\n\t\t\tthis.$pages = this.$element.find('.repeater-pages');\r\n\t\t\tthis.$prevBtn = this.$element.find('.repeater-prev');\r\n\t\t\tthis.$primaryPaging = this.$element.find('.repeater-primaryPaging');\r\n\t\t\tthis.$search = this.$element.find('.repeater-search').find('.search');\r\n\t\t\tthis.$secondaryPaging = this.$element.find('.repeater-secondaryPaging');\r\n\t\t\tthis.$start = this.$element.find('.repeater-start');\r\n\t\t\tthis.$viewport = this.$element.find('.repeater-viewport');\r\n\t\t\tthis.$views = this.$element.find('.repeater-views');\r\n\r\n\t\t\tthis.$element.on('mousedown.bs.dropdown.data-api', '[data-toggle=\"dropdown\"]',function(e) {\r\n\t\t\t\t$(this).dropdown();\r\n\t\t\t}); \r\n\r\n\t\t\tthis.currentPage = 0;\r\n\t\t\tthis.currentView = null;\r\n\t\t\tthis.isDisabled = false;\r\n\t\t\tthis.infiniteScrollingCallback = function noop () {};\r\n\t\t\tthis.infiniteScrollingCont = null;\r\n\t\t\tthis.infiniteScrollingEnabled = false;\r\n\t\t\tthis.infiniteScrollingEnd = null;\r\n\t\t\tthis.infiniteScrollingOptions = {};\r\n\t\t\tthis.lastPageInput = 0;\r\n\t\t\t//this.options = langx.mixin({}, $.fn.repeater.defaults, options);\r\n\t\t\tthis.pageIncrement = 0;// store direction navigated\r\n\t\t\tthis.resizeTimeout = {};\r\n\t\t\tthis.stamp = new Date().getTime() + (Math.floor(Math.random() * 100) + 1);\r\n\t\t\tthis.storedDataSourceOpts = null;\r\n\t\t\tthis.syncingViewButtonState = false;\r\n//\t\t\tthis.viewOptions = {};\r\n\t\t\tthis.viewType = null;\r\n\r\n\t\t\tthis.$filters.plugin(\"lark.selectlist\");\r\n\t\t\tthis.$pageSize.plugin(\"lark.selectlist\");\r\n\t\t\tthis.$primaryPaging.find('.combobox').plugin(\"lark.combobox\");\r\n\t\t\tthis.$search.plugin(\"lark.searchbox\",{\r\n\t\t\t\tsearchOnKeyPress: this.options.searchOnKeyPress,\r\n\t\t\t\tallowCancel: this.options.allowCancel\r\n\t\t\t});\r\n\r\n\t\t\tthis.$filters.on('changed.fu.selectlist', function onFiltersChanged (e, value) {\r\n\t\t\t\tself.$element.trigger('filtered.lark.repeater', value);\r\n\t\t\t\tself.render({\r\n\t\t\t\t\tclearInfinite: true,\r\n\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tthis.$nextBtn.on('click.lark.repeater', langx.proxy(this.next, this));\r\n\t\t\tthis.$pageSize.on('changed.fu.selectlist', function onPageSizeChanged (e, value) {\r\n\t\t\t\tself.$element.trigger('pageSizeChanged.lark.repeater', value);\r\n\t\t\t\tself.render({\r\n\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tthis.$prevBtn.on('click.lark.repeater', langx.proxy(this.previous, this));\r\n\t\t\tthis.$primaryPaging.find('.combobox').on('changed.fu.combobox', function onPrimaryPagingChanged (evt, data) {\r\n\t\t\t\tself.pageInputChange(data.text, data);\r\n\t\t\t});\r\n\t\t\tthis.$search.on('searched.fu.search cleared.fu.search', function onSearched (e, value) {\r\n\t\t\t\tself.$element.trigger('searchChanged.lark.repeater', value);\r\n\t\t\t\tself.render({\r\n\t\t\t\t\tclearInfinite: true,\r\n\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tthis.$search.on('canceled.fu.search', function onSearchCanceled (e, value) {\r\n\t\t\t\tself.$element.trigger('canceled.lark.repeater', value);\r\n\t\t\t\tself.render({\r\n\t\t\t\t\tclearInfinite: true,\r\n\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\tthis.$secondaryPaging.on('blur.lark.repeater', function onSecondaryPagingBlur () {\r\n\t\t\t\tself.pageInputChange(self.$secondaryPaging.val());\r\n\t\t\t});\r\n\t\t\tthis.$secondaryPaging.on('keyup', function onSecondaryPagingKeyup (e) {\r\n\t\t\t\tif (e.keyCode === 13) {\r\n\t\t\t\t\tself.pageInputChange(self.$secondaryPaging.val());\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tthis.$views.find('input').on('change.lark.repeater', langx.proxy(this.viewChanged, this));\r\n\r\n\t\t\t$(window).on('resize.lark.repeater.' + this.stamp, function onResizeRepeater () {\r\n\t\t\t\tclearTimeout(self.resizeTimeout);\r\n\t\t\t\tself.resizeTimeout = setTimeout(function resizeTimeout () {\r\n\t\t\t\t\tself.resize();\r\n\t\t\t\t\tself.$element.trigger('resized.lark.repeater');\r\n\t\t\t\t}, 75);\r\n\t\t\t});\r\n\r\n\t\t\t//this.$loader.loader();\r\n\t\t\t//this.$loader.loader('pause');\r\n\t\t\tif (this.options.defaultView !== -1) {\r\n\t\t\t\tcurrentView = this.options.defaultView;\r\n\t\t\t} else {\r\n\t\t\t\t$btn = this.$views.find('label.active input');\r\n\t\t\t\tcurrentView = ($btn.length > 0) ? $btn.val() : 'table';\r\n\t\t\t}\r\n\r\n\t\t\t//this.setViewOptions(currentView); // by lwf\r\n\r\n\t\t\tthis.initViewTypes(function initViewTypes () {\r\n\t\t\t\tself.resize();\r\n\t\t\t\tself.$element.trigger('resized.lark.repeater');\r\n\t\t\t\tself.render({\r\n\t\t\t\t\tchangeView: currentView\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tclear: function clear (opts) {\r\n\t\t\tvar options = opts || {};\r\n\r\n\t\t\tif (!options.preserve) {\r\n\t\t\t\t// Just trash everything because preserve is false\r\n\t\t\t\tthis.$canvas.empty();\r\n\t\t\t} else if (!this.infiniteScrollingEnabled || options.clearInfinite) {\r\n\t\t\t\t// Preserve clear only if infiniteScrolling is disabled or if specifically told to do so\r\n\t\t\t\tscan(this.$canvas);\r\n\t\t\t} // Otherwise don't clear because infiniteScrolling is enabled\r\n\r\n\t\t\t// If viewChanged and current viewTypeObj has a cleared function, call it\r\n\t\t\tvar viewChanged = (options.viewChanged !== undefined) ? options.viewChanged : false;\r\n\t\t\t/* lwf\r\n\t\t\tvar viewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\t\t\tif (!viewChanged && viewTypeObj.cleared) {\r\n\t\t\t\tviewTypeObj.cleared.call(this, {\r\n\t\t\t\t\toptions: options\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t\tif (this._view) {\r\n\t\t\t\tthis._view.cleared({\r\n\t\t\t\t\toptions: options\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tclearPreservedDataSourceOptions: function clearPreservedDataSourceOptions () {\r\n\t\t\tthis.storedDataSourceOpts = null;\r\n\t\t},\r\n\r\n\t\tdestroy: function destroy () {\r\n\t\t\tvar markup;\r\n\t\t\t// set input value attrbute in markup\r\n\t\t\tthis.$element.find('input').each(function eachInput () {\r\n\t\t\t\t$(this).attr('value', $(this).val());\r\n\t\t\t});\r\n\r\n\t\t\t// empty elements to return to original markup\r\n\t\t\tthis.$canvas.empty();\r\n\t\t\tmarkup = this.$element[0].outerHTML;\r\n\r\n\t\t\t// destroy components and remove leftover\r\n\t\t\tthis.$element.find('.combobox').plugin(\"lark.combobox\").destroy();\r\n\t\t\tthis.$element.find('.selectlist').plugin(\"lark.selectlist\").destroy();\r\n\t\t\tthis.$element.find('.search').plugin(\"lark.searchbox\").destroy();\r\n\t\t\tif (this.infiniteScrollingEnabled) {\r\n\t\t\t\t$(this.infiniteScrollingCont).infinitescroll('destroy');\r\n\t\t\t}\r\n\r\n\t\t\tthis.$element.remove();\r\n\r\n\t\t\t// any external events\r\n\t\t\t$(window).off('resize.lark.repeater.' + this.stamp);\r\n\r\n\t\t\treturn markup;\r\n\t\t},\r\n\r\n\t\tdisable: function disable () {\r\n\t\t\t//var viewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\r\n\t\t\tthis.$search.plugin(\"lark.searchbox\").disable();\r\n\t\t\tthis.$filters.plugin(\"lark.selectlist\").disable();\r\n\t\t\tthis.$views.find('label, input').addClass('disabled').attr('disabled', 'disabled');\r\n\t\t\tthis.$pageSize.plugin(\"lark.selectlist\").disable();\r\n\t\t\tthis.$primaryPaging.find('.combobox').plugin(\"lark.combobox\").disable();\r\n\t\t\tthis.$secondaryPaging.attr('disabled', 'disabled');\r\n\t\t\tthis.$prevBtn.attr('disabled', 'disabled');\r\n\t\t\tthis.$nextBtn.attr('disabled', 'disabled');\r\n\r\n\t\t\t/* lwf\r\n\t\t\tif (viewTypeObj.enabled) {\r\n\t\t\t\tviewTypeObj.enabled.call(this, {\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t\tif (this._view) {\r\n\t\t\t\tthis._view.enabled({\r\n\t\t\t\t\tstatus: false\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis.isDisabled = true;\r\n\t\t\tthis.$element.addClass('disabled');\r\n\t\t\tthis.$element.trigger('disabled.lark.repeater');\r\n\t\t},\r\n\r\n\t\tenable: function enable () {\r\n\t\t\t//var viewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\r\n\t\t\tthis.$search.plugin(\"lark.searchbox\").enable();\r\n\t\t\tthis.$filters.plugin(\"lark.selectlist\").enable()\r\n\t\t\tthis.$views.find('label, input').removeClass('disabled').removeAttr('disabled');\r\n\t\t\tthis.$pageSize.plugin(\"lark.selectlist\").enable()\r\n\t\t\tthis.$primaryPaging.find('.combobox').plugin(\"lark.combobox\").enable();\r\n\t\t\tthis.$secondaryPaging.removeAttr('disabled');\r\n\r\n\t\t\tif (!this.$prevBtn.hasClass('page-end')) {\r\n\t\t\t\tthis.$prevBtn.removeAttr('disabled');\r\n\t\t\t}\r\n\t\t\tif (!this.$nextBtn.hasClass('page-end')) {\r\n\t\t\t\tthis.$nextBtn.removeAttr('disabled');\r\n\t\t\t}\r\n\r\n\t\t\t// is 0 or 1 pages, if using $primaryPaging (combobox)\r\n\t\t\t// if using selectlist allow user to use selectlist to select 0 or 1\r\n\t\t\tif (this.$prevBtn.hasClass('page-end') && this.$nextBtn.hasClass('page-end')) {\r\n\t\t\t\tthis.$primaryPaging.plugin(\"lark.combobox\").disable();\r\n\t\t\t}\r\n\r\n\t\t\t// if there are no items\r\n\t\t\tif (parseInt(this.$count.html(), 10) !== 0) {\r\n\t\t\t\tthis.$pageSize.plugin(\"lark.selectlist\").enable();\r\n\t\t\t} else {\r\n\t\t\t\tthis.$pageSize.plugin(\"lark.selectlist\").disable();\r\n\t\t\t}\r\n\r\n\t\t\t/* lwf\r\n\t\t\tif (viewTypeObj.enabled) {\r\n\t\t\t\tviewTypeObj.enabled.call(this, {\r\n\t\t\t\t\tstatus: true\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t\tif (this._view) {\r\n\t\t\t\tthis._view.enabled({\r\n\t\t\t\t\tstatus: true\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis.isDisabled = false;\r\n\t\t\tthis.$element.removeClass('disabled');\r\n\t\t\tthis.$element.trigger('enabled.lark.repeater');\r\n\t\t},\r\n\r\n\t\tgetDataOptions: function getDataOptions (opts) {\r\n\t\t\tvar options = opts || {};\r\n\t\t\tif (options.pageIncrement !== undefined) {\r\n\t\t\t\tif (options.pageIncrement === null) {\r\n\t\t\t\t\tthis.currentPage = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.currentPage += options.pageIncrement;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar dataSourceOptions = {};\r\n\t\t\tif (options.dataSourceOptions) {\r\n\t\t\t\tdataSourceOptions = options.dataSourceOptions;\r\n\r\n\t\t\t\tif (options.preserveDataSourceOptions) {\r\n\t\t\t\t\tif (this.storedDataSourceOpts) {\r\n\t\t\t\t\t\tthis.storedDataSourceOpts = langx.mixin(this.storedDataSourceOpts, dataSourceOptions);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.storedDataSourceOpts = dataSourceOptions;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this.storedDataSourceOpts) {\r\n\t\t\t\tdataSourceOptions = langx.mixin(this.storedDataSourceOpts, dataSourceOptions);\r\n\t\t\t}\r\n\r\n\t\t\tvar returnOptions = {\r\n\t\t\t\tview: this.currentView,\r\n\t\t\t\tpageIndex: this.currentPage,\r\n\t\t\t\tfilter: {\r\n\t\t\t\t\ttext: 'All',\r\n\t\t\t\t\tvalue: 'all'\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tif (this.$filters.length > 0) {\r\n\t\t\t\treturnOptions.filter = this.$filters.plugin(\"lark.selectlist\").selectedItem();\r\n\t\t\t}\r\n\r\n\t\t\tif (!this.infiniteScrollingEnabled) {\r\n\t\t\t\treturnOptions.pageSize = 25;\r\n\r\n\t\t\t\tif (this.$pageSize.length > 0) {\r\n\t\t\t\t\treturnOptions.pageSize = parseInt(this.$pageSize.plugin(\"lark.selectlist\").selectedItem().value, 10);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar searchValue = this.$search && this.$search.find('input') && this.$search.find('input').val();\r\n\t\t\tif (searchValue !== '') {\r\n\t\t\t\treturnOptions.search = searchValue;\r\n\t\t\t}\r\n\r\n\t\t\t/* lwf\r\n\t\t\tvar viewType = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\t\t\tvar addViewTypeData = viewType.dataOptions;\r\n\t\t\tif (addViewTypeData) {\r\n\t\t\t\treturnOptions = addViewTypeData.call(this, returnOptions);\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t\tif (this._view) {\r\n\t\t\t\treturnOptions = this._view.dataOptions(returnOptions);\r\n\t\t\t}\r\n\r\n\r\n\t\t\treturnOptions = langx.mixin(returnOptions, dataSourceOptions);\r\n\r\n\t\t\treturn returnOptions;\r\n\t\t},\r\n\r\n\t\tinfiniteScrolling: function infiniteScrolling (enable, opts) {\r\n\t\t\tvar footer = this.$element.find('.repeater-footer');\r\n\t\t\tvar viewport = this.$element.find('.repeater-viewport');\r\n\t\t\tvar options = opts || {};\r\n\r\n\t\t\tif (enable) {\r\n\t\t\t\tthis.infiniteScrollingEnabled = true;\r\n\t\t\t\tthis.infiniteScrollingEnd = options.end;\r\n\t\t\t\tdelete options.dataSource;\r\n\t\t\t\tdelete options.end;\r\n\t\t\t\tthis.infiniteScrollingOptions = options;\r\n\t\t\t\tviewport.css({\r\n\t\t\t\t\theight: viewport.height() + footer.outerHeight()\r\n\t\t\t\t});\r\n\t\t\t\tfooter.hide();\r\n\t\t\t} else {\r\n\t\t\t\tvar cont = this.infiniteScrollingCont;\r\n\t\t\t\tvar data = cont.data();\r\n\t\t\t\tdelete data.infinitescroll;\r\n\t\t\t\tcont.off('scroll');\r\n\t\t\t\tcont.removeClass('infinitescroll');\r\n\r\n\t\t\t\tthis.infiniteScrollingCont = null;\r\n\t\t\t\tthis.infiniteScrollingEnabled = false;\r\n\t\t\t\tthis.infiniteScrollingEnd = null;\r\n\t\t\t\tthis.infiniteScrollingOptions = {};\r\n\t\t\t\tviewport.css({\r\n\t\t\t\t\theight: viewport.height() - footer.outerHeight()\r\n\t\t\t\t});\r\n\t\t\t\tfooter.show();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tinfiniteScrollPaging: function infiniteScrollPaging (data) {\r\n\t\t\tvar end = (this.infiniteScrollingEnd !== true) ? this.infiniteScrollingEnd : undefined;\r\n\t\t\tvar page = data.page;\r\n\t\t\tvar pages = data.pages;\r\n\r\n\t\t\tthis.currentPage = (page !== undefined) ? page : NaN;\r\n\r\n\t\t\tif (data.end === true || (this.currentPage + 1) >= pages) {\r\n\t\t\t\tthis.infiniteScrollingCont.infinitescroll('end', end);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tinitInfiniteScrolling: function initInfiniteScrolling () {\r\n\t\t\tvar cont = this.$canvas.find('[data-infinite=\"true\"]:first');\r\n\r\n\t\t\tcont = (cont.length < 1) ? this.$canvas : cont;\r\n\t\t\tif (cont.data('fu.infinitescroll')) {\r\n\t\t\t\tcont.infinitescroll('enable');\r\n\t\t\t} else {\r\n\t\t\t\tvar self = this;\r\n\t\t\t\tvar opts = langx.mixin({}, this.infiniteScrollingOptions);\r\n\t\t\t\topts.dataSource = function dataSource (helpers, callback) {\r\n\t\t\t\t\tself.infiniteScrollingCallback = callback;\r\n\t\t\t\t\tself.render({\r\n\t\t\t\t\t\tpageIncrement: 1\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\t\t\t\tcont.infinitescroll(opts);\r\n\t\t\t\tthis.infiniteScrollingCont = cont;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tinitViewTypes: function initViewTypes (callback) {\r\n\t\t\t/*\r\n\t\t\tvar viewTypes = [];\r\n\r\n\t\t\tfor (var key in $.fn.repeater.viewTypes) {\r\n\t\t\t\tif ({}.hasOwnProperty.call($.fn.repeater.viewTypes, key)) {\r\n\t\t\t\t\tviewTypes.push($.fn.repeater.viewTypes[key]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t*/\r\n\r\n\t\t\tvar views = this._views = [];\r\n\t\t\tvar viewTypes = this.options.addons.views;\r\n\t\t\tfor (var i = 0; i< viewTypes.length; i++) {\r\n\t\t\t\tvar setting = Repeater.addons.views[viewTypes[i]];\r\n\t\t\t\tif (!setting) {\r\n\t\t\t\t\tthrow new Error(\"The view type \" + viewTypes[i] + \" is not defined!\");\r\n\t\t\t\t} \r\n\t\t\t\tvar ctor = setting.ctor;\r\n\t\t\t\tthis._views.push(this._views[viewTypes[i]] = new ctor(this));\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif (views.length > 0) {\r\n\t\t\t\tinitViewType.call(this, 0, viewTypes, callback);\r\n\t\t\t} else {\r\n\t\t\t\tcallback();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\titemization: function itemization (data) {\r\n\t\t\tthis.$count.html((data.count !== undefined) ? data.count : '?');\r\n\t\t\tthis.$end.html((data.end !== undefined) ? data.end : '?');\r\n\t\t\tthis.$start.html((data.start !== undefined) ? data.start : '?');\r\n\t\t},\r\n\r\n\t\tnext: function next () {\r\n\t\t\tthis.$nextBtn.attr('disabled', 'disabled');\r\n\t\t\tthis.$prevBtn.attr('disabled', 'disabled');\r\n\t\t\tthis.pageIncrement = 1;\r\n\t\t\tthis.$element.trigger('nextClicked.lark.repeater');\r\n\t\t\tthis.render({\r\n\t\t\t\tpageIncrement: this.pageIncrement\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tpageInputChange: function pageInputChange (val, dataFromCombobox) {\r\n\t\t\t// dataFromCombobox is a proxy for data from combobox's changed event,\r\n\t\t\t// if no combobox is present data will be undefined\r\n\t\t\tvar pageInc;\r\n\t\t\tif (val !== this.lastPageInput) {\r\n\t\t\t\tthis.lastPageInput = val;\r\n\t\t\t\tvar value = parseInt(val, 10) - 1;\r\n\t\t\t\tpageInc = value - this.currentPage;\r\n\t\t\t\tthis.$element.trigger('pageChanged.lark.repeater', [value, dataFromCombobox]);\r\n\t\t\t\tthis.render({\r\n\t\t\t\t\tpageIncrement: pageInc\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tpagination: function pagination (data) {\r\n\t\t\tthis.$primaryPaging.removeClass('active');\r\n\t\t\tthis.$secondaryPaging.removeClass('active');\r\n\r\n\t\t\tvar totalPages = data.pages;\r\n\t\t\tthis.currentPage = (data.page !== undefined) ? data.page : NaN;\r\n\t\t\t// set paging to 0 if total pages is 0, otherwise use one-based index\r\n\t\t\tvar currenPageOutput = totalPages === 0 ? 0 : this.currentPage + 1;\r\n\r\n\t\t\tif (totalPages <= this.options.dropPagingCap) {\r\n\t\t\t\tthis.$primaryPaging.addClass('active');\r\n\t\t\t\tvar dropMenu = this.$primaryPaging.find('.dropdown-menu');\r\n\t\t\t\tdropMenu.empty();\r\n\t\t\t\tfor (var i = 0; i < totalPages; i++) {\r\n\t\t\t\t\tvar l = i + 1;\r\n\t\t\t\t\tdropMenu.append('<li data-value=\"' + l + '\"><a href=\"#\">' + l + '</a></li>');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.$primaryPaging.find('input.form-control').val(currenPageOutput);\r\n\t\t\t} else {\r\n\t\t\t\tthis.$secondaryPaging.addClass('active');\r\n\t\t\t\tthis.$secondaryPaging.val(currenPageOutput);\r\n\t\t\t}\r\n\r\n\t\t\tthis.lastPageInput = this.currentPage + 1 + '';\r\n\r\n\t\t\tthis.$pages.html('' + totalPages);\r\n\r\n\t\t\t// this is not the last page\r\n\t\t\tif ((this.currentPage + 1) < totalPages) {\r\n\t\t\t\tthis.$nextBtn.removeAttr('disabled');\r\n\t\t\t\tthis.$nextBtn.removeClass('page-end');\r\n\t\t\t} else {\r\n\t\t\t\tthis.$nextBtn.attr('disabled', 'disabled');\r\n\t\t\t\tthis.$nextBtn.addClass('page-end');\r\n\t\t\t}\r\n\r\n\t\t\t// this is not the first page\r\n\t\t\tif ((this.currentPage - 1) >= 0) {\r\n\t\t\t\tthis.$prevBtn.removeAttr('disabled');\r\n\t\t\t\tthis.$prevBtn.removeClass('page-end');\r\n\t\t\t} else {\r\n\t\t\t\tthis.$prevBtn.attr('disabled', 'disabled');\r\n\t\t\t\tthis.$prevBtn.addClass('page-end');\r\n\t\t\t}\r\n\r\n\t\t\t// return focus to next/previous buttons after navigating\r\n\t\t\tif (this.pageIncrement !== 0) {\r\n\t\t\t\tif (this.pageIncrement > 0) {\r\n\t\t\t\t\tif (this.$nextBtn.is(':disabled')) {\r\n\t\t\t\t\t\t// if you can't focus, go the other way\r\n\t\t\t\t\t\tthis.$prevBtn.focus();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.$nextBtn.focus();\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (this.$prevBtn.is(':disabled')) {\r\n\t\t\t\t\t// if you can't focus, go the other way\r\n\t\t\t\t\tthis.$nextBtn.focus();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.$prevBtn.focus();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tprevious: function previous () {\r\n\t\t\tthis.$nextBtn.attr('disabled', 'disabled');\r\n\t\t\tthis.$prevBtn.attr('disabled', 'disabled');\r\n\t\t\tthis.pageIncrement = -1;\r\n\t\t\tthis.$element.trigger('previousClicked.lark.repeater');\r\n\t\t\tthis.render({\r\n\t\t\t\tpageIncrement: this.pageIncrement\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t// This functions more as a \"pre-render\" than a true \"render\"\r\n\t\trender: function render (opts) {\r\n\t\t\tthis.disable();\r\n\r\n\t\t\tvar viewChanged = false;\r\n\t\t\t//var viewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\t\t\tvar options = opts || {};\r\n\r\n\t\t\tif (options.changeView && (this.currentView !== options.changeView)) {\r\n\t\t\t\tvar prevView = this.currentView;\r\n\t\t\t\tthis.currentView = options.changeView;\r\n\t\t\t\tthis.viewType = this.currentView.split('.')[0];\r\n\r\n\t\t\t\tthis._view = this._views[this.viewType];\r\n\r\n\t\t\t\t//this.setViewOptions(this.currentView);\r\n\r\n\t\t\t\tthis.$element.attr('data-currentview', this.currentView);\r\n\t\t\t\tthis.$element.attr('data-viewtype', this.viewType);\r\n\t\t\t\tviewChanged = true;\r\n\t\t\t\toptions.viewChanged = viewChanged;\r\n\r\n\t\t\t\tthis.$element.trigger('viewChanged.lark.repeater', this.currentView);\r\n\r\n\t\t\t\tif (this.infiniteScrollingEnabled) {\r\n\t\t\t\t\tthis.infiniteScrolling(false);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t/* lwf\r\n\t\t\t\tviewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\t\t\t\tif (viewTypeObj.selected) {\r\n\t\t\t\t\tviewTypeObj.selected.call(this, {\r\n\t\t\t\t\t\tprevView: prevView\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t*/\r\n\t\t\t\tthis._view.selected({\r\n\t\t\t\t\tprevView: prevView\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\tthis.syncViewButtonState();\r\n\r\n\t\t\toptions.preserve = (options.preserve !== undefined) ? options.preserve : !viewChanged;\r\n\t\t\tthis.clear(options);\r\n\r\n\t\t\tif (!this.infiniteScrollingEnabled || (this.infiniteScrollingEnabled && viewChanged)) {\r\n\t\t\t\t//this.$loader.show().loader('play');\r\n\t\t\t\tthis._throbber = this.throb({\r\n\t\t\t\t\tclassName : \"loader\"\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tvar dataOptions = this.getDataOptions(options);\r\n\r\n\t\t\tvar beforeRender = this.options.dataSource;\r\n\t\t\tvar repeaterPrototypeContext = this;\r\n\t\t\tvar viewTypeObj = this._view;\r\n\t\t\tbeforeRender(\r\n\t\t\t\tdataOptions,\r\n\t\t\t\t// this serves as a bridge function to pass all required data through to the actual function\r\n\t\t\t\t// that does the rendering for us.\r\n\t\t\t\tfunction callDoRender (dataSourceReturnedData) {\r\n\t\t\t\t\tdoRender.call(\r\n\t\t\t\t\t\trepeaterPrototypeContext,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tdata: dataSourceReturnedData,\r\n\t\t\t\t\t\t\tdataOptions: dataOptions,\r\n\t\t\t\t\t\t\toptions: options,\r\n\t\t\t\t\t\t\tviewChanged: viewChanged,\r\n\t\t\t\t\t\t\tviewTypeObj: viewTypeObj\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\tresize: function resize () {\r\n\t\t\tvar staticHeight = (this.options.staticHeight === -1) ? this.$element.attr('data-staticheight') : this.options.staticHeight;\r\n\t\t\tvar viewTypeObj = {};\r\n\t\t\tvar height;\r\n\t\t\tvar viewportMargins;\r\n\t\t\tvar scrubbedElements = [];\r\n\t\t\tvar previousProperties = [];\r\n\t\t\t//var $hiddenElements = this.$element.parentsUntil(':visible').addBack(); // del addBack() not supported by skyalrk\r\n\t\t\tvar $hiddenElements = this.$element.parentsUntil(':visible');\r\n\t\t\tvar currentHiddenElement;\r\n\t\t\tvar currentElementIndex = 0;\r\n\r\n\t\t\t// Set parents to 'display:block' until repeater is visible again\r\n\t\t\twhile (currentElementIndex < $hiddenElements.length && this.$element.is(':hidden')) {\r\n\t\t\t\tcurrentHiddenElement = $hiddenElements[currentElementIndex];\r\n\t\t\t\t// Only set display property on elements that are explicitly hidden (i.e. do not inherit it from their parent)\r\n\t\t\t\tif ($(currentHiddenElement).is(':hidden')) {\r\n\t\t\t\t\tpreviousProperties.push(currentHiddenElement.style['display']);\r\n\t\t\t\t\tcurrentHiddenElement.style['display'] = 'block';\r\n\t\t\t\t\tscrubbedElements.push(currentHiddenElement);\r\n\t\t\t\t}\r\n\t\t\t\tcurrentElementIndex++;\r\n\t\t\t}\r\n\r\n\t\t\t//if (this.viewType) {\r\n\t\t\t//\tviewTypeObj = $.fn.repeater.viewTypes[this.viewType] || {};\r\n\t\t\t//}\r\n\r\n\t\t\tif (staticHeight !== undefined && staticHeight !== false && staticHeight !== 'false') {\r\n\t\t\t\tthis.$canvas.addClass('scrolling');\r\n\t\t\t\tviewportMargins = {\r\n\t\t\t\t\tbottom: this.$viewport.css('margin-bottom'),\r\n\t\t\t\t\ttop: this.$viewport.css('margin-top')\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar staticHeightValue = (staticHeight === 'true' || staticHeight === true) ? this.$element.height() : parseInt(staticHeight, 10);\r\n\t\t\t\tvar headerHeight = this.$element.find('.repeater-header').outerHeight();\r\n\t\t\t\tvar footerHeight = this.$element.find('.repeater-footer').outerHeight();\r\n\t\t\t\tvar bottomMargin = (viewportMargins.bottom === 'auto') ? 0 : parseInt(viewportMargins.bottom, 10);\r\n\t\t\t\tvar topMargin = (viewportMargins.top === 'auto') ? 0 : parseInt(viewportMargins.top, 10);\r\n\r\n\t\t\t\theight = staticHeightValue - headerHeight - footerHeight - bottomMargin - topMargin;\r\n\t\t\t\tthis.$viewport.outerHeight(height);\r\n\t\t\t} else {\r\n\t\t\t\tthis.$canvas.removeClass('scrolling');\r\n\t\t\t}\r\n\r\n\r\n\r\n\t\t\t/* lwf\r\n\t\t\tif (viewTypeObj.resize) {\r\n\t\t\t\tviewTypeObj.resize.call(this, {\r\n\t\t\t\t\theight: this.$element.outerHeight(),\r\n\t\t\t\t\twidth: this.$element.outerWidth()\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t\tif (this._view) {\r\n\t\t\t\tthis._view.resize({\r\n\t\t\t\t\theight: this.$element.outerHeight(),\r\n\t\t\t\t\twidth: this.$element.outerWidth()\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tscrubbedElements.forEach(function (element, i) {\r\n\t\t\t\telement.style['display'] = previousProperties[i];\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t// e.g. \"Rows\" or \"Thumbnails\"\r\n\t\trenderItems: function renderItems (viewTypeObj, data, callback) {\r\n\t\t\tif (!viewTypeObj.render) {\r\n\t\t\t\tif (viewTypeObj.before) {\r\n\t\t\t\t\tvar addBefore = viewTypeObj.before({\r\n\t\t\t\t\t\tcontainer: this.$canvas,\r\n\t\t\t\t\t\tdata: data\r\n\t\t\t\t\t});\r\n\t\t\t\t\taddItem(this.$canvas, addBefore);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar $dataContainer = this.$canvas.find('[data-container=\"true\"]:last');\r\n\t\t\t\tvar $container = ($dataContainer.length > 0) ? $dataContainer : this.$canvas;\r\n\r\n\t\t\t\t// It appears that the following code would theoretically allow you to pass a deeply\r\n\t\t\t\t// nested value to \"repeat on\" to be added to the repeater.\r\n\t\t\t\t// eg. `data.foo.bar.items`\r\n\t\t\t\tif (viewTypeObj.renderItem) {\r\n\t\t\t\t\tvar subset;\r\n\t\t\t\t\tvar objectAndPropsToRepeatOnString = viewTypeObj.repeat || 'data.items';\r\n\t\t\t\t\tvar objectAndPropsToRepeatOn = objectAndPropsToRepeatOnString.split('.');\r\n\t\t\t\t\tvar objectToRepeatOn = objectAndPropsToRepeatOn[0];\r\n\r\n\t\t\t\t\tif (objectToRepeatOn === 'data' || objectToRepeatOn === 'this') {\r\n\t\t\t\t\t\tsubset = (objectToRepeatOn === 'this') ? this : data;\r\n\r\n\t\t\t\t\t\t// Extracts subset from object chain (get `items` out of `foo.bar.items`). I think....\r\n\t\t\t\t\t\tvar propsToRepeatOn = objectAndPropsToRepeatOn.slice(1);\r\n\t\t\t\t\t\tfor (var prop = 0; prop < propsToRepeatOn.length; prop++) {\r\n\t\t\t\t\t\t\tif (subset[propsToRepeatOn[prop]] !== undefined) {\r\n\t\t\t\t\t\t\t\tsubset = subset[propsToRepeatOn[prop]];\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tsubset = [];\r\n\t\t\t\t\t\t\t\tlogWarn('WARNING: Repeater unable to find property to iterate renderItem on.');\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tfor (var subItemIndex = 0; subItemIndex < subset.length; subItemIndex++) {\r\n\t\t\t\t\t\t\tvar addSubItem = viewTypeObj.renderItem({\r\n\t\t\t\t\t\t\t\tcontainer: $container,\r\n\t\t\t\t\t\t\t\tdata: data,\r\n\t\t\t\t\t\t\t\tindex: subItemIndex,\r\n\t\t\t\t\t\t\t\tsubset: subset\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\taddItem($container, addSubItem);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlogWarn('WARNING: Repeater plugin \"repeat\" value must start with either \"data\" or \"this\"');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (viewTypeObj.after) {\r\n\t\t\t\t\tvar addAfter = viewTypeObj.after({\r\n\t\t\t\t\t\tcontainer: this.$canvas,\r\n\t\t\t\t\t\tdata: data\r\n\t\t\t\t\t});\r\n\t\t\t\t\taddItem(this.$canvas, addAfter);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcallback(data);\r\n\t\t\t} else {\r\n\t\t\t\tviewTypeObj.render({\r\n\t\t\t\t\tcontainer: this.$canvas,\r\n\t\t\t\t\tdata: data\r\n\t\t\t\t}, callback);\r\n\t\t\t\tcallback(data);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/* // by lwf\r\n\t\tsetViewOptions: function setViewOptions (curView) {\r\n\t\t\tvar opts = {};\r\n\t\t\tvar viewName = curView.split('.')[1];\r\n\r\n\t\t\tif (this.options.views) {\r\n\t\t\t\topts = this.options.views[viewName] || this.options.views[curView] || {};\r\n\t\t\t} else {\r\n\t\t\t\topts = {};\r\n\t\t\t}\r\n\r\n\t\t\tthis.viewOptions = langx.mixin({}, this.options, opts);\r\n\t\t},\r\n\t\t*/\r\n\t\tviewChanged: function viewChanged (e) {\r\n\t\t\tvar $selected = $(e.target);\r\n\t\t\tvar val = $selected.val();\r\n\r\n\t\t\tif (!this.syncingViewButtonState) {\r\n\t\t\t\tif (this.isDisabled || $selected.parents('label:first').hasClass('disabled')) {\r\n\t\t\t\t\tthis.syncViewButtonState();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.render({\r\n\t\t\t\t\t\tchangeView: val,\r\n\t\t\t\t\t\tpageIncrement: null\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tsyncViewButtonState: function syncViewButtonState () {\r\n\t\t\tvar $itemToCheck = this.$views.find('input[value=\"' + this.currentView + '\"]');\r\n\r\n\t\t\tthis.syncingViewButtonState = true;\r\n\t\t\tthis.$views.find('input').prop('checked', false);\r\n\t\t\tthis.$views.find('label.active').removeClass('active');\r\n\r\n\t\t\tif ($itemToCheck.length > 0) {\r\n\t\t\t\t$itemToCheck.prop('checked', true);\r\n\t\t\t\t$itemToCheck.parents('label:first').addClass('active');\r\n\t\t\t}\r\n\t\t\tthis.syncingViewButtonState = false;\r\n\t\t},\r\n\r\n\t\tgetNestedProperty: function (obj, property) {\r\n\t\t\tproperty.replace(\r\n\t\t\t\t// Matches native JavaScript notation in a String,\r\n\t\t\t\t// e.g. '[\"doubleQuoteProp\"].dotProp[2]'\r\n\t\t\t\t// eslint-disable-next-line no-useless-escape\r\n\t\t\t\t/\\[(?:'([^']+)'|\"([^\"]+)\"|(\\d+))\\]|(?:(?:^|\\.)([^\\.\\[]+))/g,\r\n\t\t\t\tfunction (str, singleQuoteProp, doubleQuoteProp, arrayIndex, dotProp) {\r\n\t\t\t\t\tvar prop =\r\n\t\t\t\t\t\tdotProp ||\r\n\t\t\t\t\t\tsingleQuoteProp ||\r\n\t\t\t\t\t\tdoubleQuoteProp ||\r\n\t\t\t\t\t\t(arrayIndex && parseInt(arrayIndex, 10))\r\n\t\t\t\t\tif (str && obj) {\r\n\t\t\t\t\t\tobj = obj[prop]\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\treturn obj\r\n\t\t},\r\n\r\n\t\tgetDataProperty: function (obj, property) {\r\n\t\t\tvar key\r\n\t\t\tvar prop\r\n\t\t\tif (obj.dataset) {\r\n\t\t\t\tkey = property.replace(/-([a-z])/g, function (_, b) {\r\n\t\t\t\t\treturn b.toUpperCase()\r\n\t\t\t\t})\r\n\t\t\t\tprop = obj.dataset[key]\r\n\t\t\t} else if (obj.getAttribute) {\r\n\t\t\t\tprop = obj.getAttribute(\r\n\t\t\t\t\t'data-' + property.replace(/([A-Z])/g, '-$1').toLowerCase()\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\tif (typeof prop === 'string') {\r\n\t\t\t\t// eslint-disable-next-line no-useless-escape\r\n\t\t\t\tif (\r\n\t\t\t\t\t/^(true|false|null|-?\\d+(\\.\\d+)?|\\{[\\s\\S]*\\}|\\[[\\s\\S]*\\])$/.test(prop)\r\n\t\t\t\t) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\treturn $.parseJSON(prop)\r\n\t\t\t\t\t} catch (ignore) {}\r\n\t\t\t\t}\r\n\t\t\t\treturn prop\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tgetItemProperty: function (obj, property) {\r\n\t\t\tvar prop = this.getDataProperty(obj, property)\r\n\t\t\tif (prop === undefined) {\r\n\t\t\t\tprop = obj[property]\r\n\t\t\t}\r\n\t\t\tif (prop === undefined) {\r\n\t\t\t\tprop = this.getNestedProperty(obj, property)\r\n\t\t\t}\r\n\t\t\treturn prop\r\n\t\t}\r\n\r\n\t\t\r\n\t});\r\n\r\n\tvar logWarn = function logWarn (msg) {\r\n\t\tif (window.console && window.console.warn) {\r\n\t\t\twindow.console.warn(msg);\r\n\t\t}\r\n\t};\r\n\r\n\tvar scan = function scan (cont) {\r\n\t\tvar keep = [];\r\n\t\tcont.children().each(function eachContainerChild () {\r\n\t\t\tvar item = $(this);\r\n\t\t\tvar pres = item.attr('data-preserve');\r\n\t\t\tif (pres === 'deep') {\r\n\t\t\t\titem.detach();\r\n\t\t\t\tkeep.push(item);\r\n\t\t\t} else if (pres === 'shallow') {\r\n\t\t\t\tscan(item);\r\n\t\t\t\titem.detach();\r\n\t\t\t\tkeep.push(item);\r\n\t\t\t}\r\n\t\t});\r\n\t\tcont.empty();\r\n\t\tcont.append(keep);\r\n\t};\r\n\r\n\tvar addItem = function addItem ($parent, response) {\r\n\t\tvar action;\r\n\t\tif (response) {\r\n\t\t\taction = (response.action) ? response.action : 'append';\r\n\t\t\tif (action !== 'none' && response.item !== undefined) {\r\n\t\t\t\tvar $container = (response.container !== undefined) ? $(response.container) : $parent;\r\n\t\t\t\t$container[action](response.item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar callNextInit = function callNextInit (currentViewType, viewTypes, callback) {\r\n\t\tvar nextViewType = currentViewType + 1;\r\n\t\tif (nextViewType < viewTypes.length) {\r\n\t\t\tinitViewType.call(this, nextViewType, viewTypes, callback);\r\n\t\t} else {\r\n\t\t\tcallback();\r\n\t\t}\r\n\t};\r\n\r\n\tvar initViewType = function initViewType (currentViewtype, viewTypes, callback) {\r\n\t\tif (viewTypes[currentViewtype].initialize) {\r\n\t\t\tviewTypes[currentViewtype].initialize.call(this, {}, function afterInitialize () {\r\n\t\t\t\tcallNextInit.call(this, currentViewtype, viewTypes, callback);\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tcallNextInit.call(this, currentViewtype, viewTypes, callback);\r\n\t\t}\r\n\t};\r\n\r\n\t// Does all of our cleanup post-render\r\n\tvar afterRender = function afterRender (state) {\r\n\t\tvar data = state.data || {};\r\n\r\n\t\tif (this.infiniteScrollingEnabled) {\r\n\t\t\tif (state.viewChanged || state.options.clearInfinite) {\r\n\t\t\t\tthis.initInfiniteScrolling();\r\n\t\t\t}\r\n\r\n\t\t\tthis.infiniteScrollPaging(data, state.options);\r\n\t\t}\r\n\r\n\t\t//this.$loader.hide().loader('pause');\r\n\t\tif (this._throbber) {\r\n\t\t\tthis._throbber.remove();\r\n\t\t\tthis._throbber = null;\r\n\t\t}\r\n\t\tthis.enable();\r\n\r\n\t\tthis.$search.trigger('rendered.lark.repeater', {\r\n\t\t\tdata: data,\r\n\t\t\toptions: state.dataOptions,\r\n\t\t\trenderOptions: state.options\r\n\t\t});\r\n\t\tthis.$element.trigger('rendered.lark.repeater', {\r\n\t\t\tdata: data,\r\n\t\t\toptions: state.dataOptions,\r\n\t\t\trenderOptions: state.options\r\n\t\t});\r\n\r\n\t\t// for maintaining support of 'loaded' event\r\n\t\tthis.$element.trigger('loaded.lark.repeater', state.dataOptions);\r\n\t};\r\n\r\n\t// This does the actual rendering of the repeater\r\n\tvar doRender = function doRender (state) {\r\n\t\tvar data = state.data || {};\r\n\r\n\t\tif (this.infiniteScrollingEnabled) {\r\n\t\t\t// pass empty object because data handled in infiniteScrollPaging method\r\n\t\t\tthis.infiniteScrollingCallback({});\r\n\t\t} else {\r\n\t\t\tthis.itemization(data);\r\n\t\t\tthis.pagination(data);\r\n\t\t}\r\n\r\n\t\tvar self = this;\r\n\t\tthis.renderItems(\r\n\t\t\tstate.viewTypeObj,\r\n\t\t\tdata,\r\n\t\t\tfunction callAfterRender (d) {\r\n\t\t\t\tstate.data = d;\r\n\t\t\t\tafterRender.call(self, state);\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\r\n\tRepeater.addons = {};\r\n\r\n\r\n\treturn skylark.attach(\"widgets.Repeater\",Repeater);\r\n\r\n});\r\n\ndefine('skylark-widgets-repeater/views',[\r\n\t\"./Repeater\"\r\n],function(Repeater){\r\n\treturn Repeater.addons.views = {};\r\n});\ndefine('skylark-widgets-repeater/views/ViewBase',[\r\n\t\"skylark-langx/langx\",\r\n\t\"skylark-domx-noder\",\r\n\t\"skylark-domx-query\",\r\n\t\"../views\",\t\r\n],function(langx,noder,$,views) {\r\n\r\n\tvar ViewBase = langx.Evented.inherit({\r\n\t    klassName: \"ViewBase\",\r\n\r\n\t    options : {\r\n\t      // The class to add when the gallery controls are visible:\r\n\t      controlsClass: \"skylarkui-repeater-controls\",\r\n\t\t  // Defines if the gallery should open in fullscreen mode:\r\n\t\t  fullScreen: false\r\n\r\n\t    },\r\n\r\n\r\n    \t_create$Item : function (template,itemData) {\r\n        \tvar invalid = false;\r\n\r\n        \tfunction replace() {\r\n            \tvar end, start, val;\r\n\r\n            \tstart = template.indexOf('{{');\r\n            \tend = template.indexOf('}}', start + 2);\r\n\r\n            \tif (start > -1 && end > -1) {\r\n                \tval = langx.trim(template.substring(start + 2, end));\r\n                \tval = (itemData[val] !== undefined) ? itemData[val] : '';\r\n                \ttemplate = template.substring(0, start) + val + template.substring(end + 2);\r\n            \t} else {\r\n                \tinvalid = true;\r\n            \t}\r\n       \t\t}\r\n\r\n        \twhile (!invalid && template.search('{{') >= 0) {\r\n            \treplace(template);\r\n        \t}\r\n\r\n        \treturn $(template);\r\n    \t},\t    \r\n\t    \r\n\t\tinit : function (repeater,options) {\r\n\t\t\tvar that = this,\r\n\t\t\t\thasControls;\r\n\t\t\tthis.repeater = repeater;\r\n\t\t\tthis.initOptions(options);\r\n\t        if (this.options.fullScreen) {\r\n\t          noder.fullScreen(this.container[0]);\r\n\t        }\r\n\t        this.repeater.on(\"item.running\",function(e){\r\n\t            if (that.container.hasClass(that.options.controlsClass)) {\r\n\t              hasControls = true\r\n\t              that.container.removeClass(that.options.controlsClass);\r\n\t            } else {\r\n\t              hasControls = false\r\n\t            }\r\n\t        });\r\n\r\n\t        this.repeater.on(\"item.running\",function(e){\r\n\t            if (hasControls) {\r\n\t              that.container.addClass(that.options.controlsClass);\r\n\t            }\r\n\t        });\r\n\t\t},\r\n\r\n\t    initOptions: function (options) {\r\n\t      // Create a copy of the prototype options:\r\n\t      this.options = langx.mixin({}, this.options,options);\r\n\t    },\r\n\r\n\t    close: function () {\r\n      \t\tif (noder.fullScreen() === this.container[0]) {\r\n        \t\tnoder.fullScreen(false);\r\n      \t\t}\r\n      \t},\r\n\r\n      \tgetValue : function() {\r\n      \t\treturn this.getSelectedItems();\r\n      \t},\r\n\r\n      \tcleared : function() {\r\n\r\n      \t},\r\n\r\n      \tselected : function() {\r\n\r\n      \t},\r\n\r\n\t    dataOptions: function (options) {\r\n\t    \treturn options;\r\n\t    },\r\n\r\n\t    enabled : function(helpers){\r\n\t    \t\r\n\t    }\r\n\r\n\t});\r\n\r\n\treturn views.ViewBase = ViewBase;\r\n});\r\n\ndefine('skylark-widgets-repeater/views/ListView',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-query\",\r\n    \"../views\",   \r\n    \"./ViewBase\"\r\n], function(langx, browser, eventer, noder, geom, $, views, ViewBase) {\r\n\r\n\r\n  var ListView = ViewBase.inherit({\r\n    klassName : \"ListView\",\r\n\r\n    options: {\r\n        alignment: 'left',\r\n        infiniteScroll: false,\r\n        itemRendered: null,\r\n        noItemsHTML: 'no items found',\r\n        selectable: false,\r\n\r\n        template : '<ul class=\"clearfix repeater-list\" data-container=\"true\" data-infinite=\"true\" data-preserve=\"shallow\"></ul>',\r\n        item : {\r\n            template: '<li class=\"repeater-item\"><img  src=\"{{ThumbnailImage}}\" class=\"thumb\"/><h4 class=\"title\">{{name}}</h4></div>'\r\n        },\r\n    },\r\n\r\n    //ADDITIONAL METHODS\r\n    clearSelectedItems : function() {\r\n        this.repeater.$canvas.find('.repeater-list .selectable.selected').removeClass('selected');\r\n    },\r\n\r\n    getSelectedItems : function() {\r\n        var selected = [];\r\n        this.repeater.$canvas.find('.repeater-list .selectable.selected').each(function() {\r\n            selected.push($(this));\r\n        });\r\n        return selected;\r\n    },\r\n\r\n    setSelectedItems : function(items, force) {\r\n        var selectable = this.options.selectable;\r\n        var self = this;\r\n        var i, $item, l, n;\r\n\r\n        //this function is necessary because lint yells when a function is in a loop\r\n        function compareItemIndex() {\r\n            if (n === items[i].index) {\r\n                $item = $(this);\r\n                return false;\r\n            } else {\r\n                n++;\r\n            }\r\n        }\r\n\r\n        //this function is necessary because lint yells when a function is in a loop\r\n        function compareItemSelector() {\r\n            $item = $(this);\r\n            if ($item.is(items[i].selector)) {\r\n                selectItem($item, items[i].selected);\r\n            }\r\n        }\r\n\r\n        function selectItem($itm, select) {\r\n            select = (select !== undefined) ? select : true;\r\n            if (select) {\r\n                if (!force && selectable !== 'multi') {\r\n                    self.thumbnail_clearSelectedItems();\r\n                }\r\n\r\n                $itm.addClass('selected');\r\n            } else {\r\n                $itm.removeClass('selected');\r\n            }\r\n        }\r\n\r\n        if (!langx.isArray(items)) {\r\n            items = [items];\r\n        }\r\n\r\n        if (force === true || selectable === 'multi') {\r\n            l = items.length;\r\n        } else if (selectable) {\r\n            l = (items.length > 0) ? 1 : 0;\r\n        } else {\r\n            l = 0;\r\n        }\r\n\r\n        for (i = 0; i < l; i++) {\r\n            if (items[i].index !== undefined) {\r\n                $item = $();\r\n                n = 0;\r\n                this.repeater.$canvas.find('.repeater-list .selectable').each(compareItemIndex);\r\n                if ($item.length > 0) {\r\n                    selectItem($item, items[i].selected);\r\n                }\r\n\r\n            } else if (items[i].selector) {\r\n                this.repeater.$canvas.find('.repeater-list .selectable').each(compareItemSelector);\r\n            }\r\n        }\r\n    },\r\n\r\n    selected: function() {\r\n        var infScroll = this.options.infiniteScroll;\r\n        var opts;\r\n        if (infScroll) {\r\n            opts = (typeof infScroll === 'object') ? infScroll : {};\r\n            this.infiniteScrolling(true, opts);\r\n        }\r\n    },\r\n    before: function(helpers) {\r\n        var alignment = this.options.alignment;\r\n        var $cont = this.repeater.$canvas.find('.repeater-list');\r\n        var data = helpers.data;\r\n        var response = {};\r\n        var $empty, validAlignments;\r\n\r\n        if ($cont.length < 1) {\r\n            $cont = $(this.options.template);\r\n\r\n            response.item = $cont;\r\n        } else {\r\n            response.action = 'none';\r\n        }\r\n\r\n        return response;\r\n    },\r\n\r\n    renderItem: function(helpers) {\r\n        var selectable = this.options.selectable;\r\n        var selected = 'selected';\r\n        var self = this;\r\n        var $item = this._create$Item(this.options.item.template,helpers.subset[helpers.index]);\r\n\r\n        $item.data('item_data', helpers.data.items[helpers.index]);\r\n\r\n        if (selectable) {\r\n            $item.addClass('selectable');\r\n            $item.on('click', function() {\r\n                if (self.isDisabled) return;\r\n\r\n                if (!$item.hasClass(selected)) {\r\n                    if (selectable !== 'multi') {\r\n                        self.repeater.$canvas.find('.repeater-list .selectable.selected').each(function() {\r\n                            var $itm = $(this);\r\n                            $itm.removeClass(selected);\r\n                            self.repeater.$element.trigger('deselected.lark.repeaterList', $itm);\r\n                        });\r\n                    }\r\n\r\n                    $item.addClass(selected);\r\n                    self.repeater.$element.trigger('selected.lark.repeaterList', $item);\r\n                } else {\r\n                    $item.removeClass(selected);\r\n                    self.repeater.$element.trigger('deselected.lark.repeaterList', $item);\r\n                }\r\n            });\r\n        }\r\n\r\n        helpers.container.append($item);\r\n\r\n\r\n        if (this.options.itemRendered) {\r\n            this.options.itemRendered({\r\n                container: helpers.container,\r\n                item: $thumbnail,\r\n                itemData: helpers.subset[helpers.index]\r\n            }, function() {});\r\n        }\r\n\r\n        return false;\r\n    }\r\n    \r\n  });\r\n\r\n\r\n    views[\"list\"] = {\r\n        name : \"list\",\r\n        ctor : ListView\r\n    };\r\n\r\n    return ListView;\r\n    \r\n});\n/* global define, window, document, DocumentTouch */\r\n\r\ndefine('skylark-widgets-repeater/views/SliderView',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-query\",\r\n  \"../views\", \r\n  \"./ViewBase\"\r\n],function (langx,noder,$,views,ViewBase) {\r\n  'use strict'\r\n\r\n  var SliderView = ViewBase.inherit({\r\n    klassName : \"SliderView\",\r\n\r\n    options: {\r\n      // The Id, element or querySelector of the repeater view:\r\n      container: null,\r\n      // The tag name, Id, element or querySelector of the slides container:\r\n      slidesContainer: 'div.slides',\r\n      // The tag name, Id, element or querySelector of the title element:\r\n      titleElement: 'h3',\r\n      // The class to add when the gallery is visible:\r\n      displayClass: 'slider-display',\r\n      // The class to add when the gallery only displays one element:\r\n      singleClass: 'slider-single',\r\n      // The class to add when the left edge has been reached:\r\n      leftEdgeClass: 'slider-left',\r\n      // The class to add when the right edge has been reached:\r\n      rightEdgeClass: 'slider-right',\r\n      // The class to add when the automatic slideshow is active:\r\n      playingClass: 'slider-playing',\r\n      // The class for all slides:\r\n      slideClass: 'slide',\r\n      // The slide class for loading elements:\r\n      slideLoadingClass: 'slide-loading',\r\n      // The slide class for elements that failed to load:\r\n      slideErrorClass: 'slide-error',\r\n      // The class for the content element loaded into each slide:\r\n      slideContentClass: 'slide-content',\r\n      // The class for the \"toggle\" control:\r\n      toggleClass: 'toggle',\r\n      // The class for the \"prev\" control:\r\n      prevClass: 'prev',\r\n      // The class for the \"next\" control:\r\n      nextClass: 'next',\r\n      // The class for the \"close\" control:\r\n      closeClass: 'close',\r\n\r\n      // The class for the \"play-pause\" toggle control:\r\n      playPauseClass: 'play-pause',\r\n      // The list object property (or data attribute) with the object type:\r\n      //--- typeProperty: 'type',\r\n      // The list object property (or data attribute) with the object title:\r\n      //--- titleProperty: 'title',\r\n      // The list object property (or data attribute) with the object alt text:\r\n      //--- altTextProperty: 'alt',\r\n      // The list object property (or data attribute) with the object URL:\r\n      //--- urlProperty: 'href',\r\n      // The list object property (or data attribute) with the object srcset URL(s):\r\n      //--- srcsetProperty: 'urlset',\r\n      // The gallery listens for transitionend events before triggering the\r\n      // opened and closed events, unless the following option is set to false:\r\n      displayTransition: true,\r\n      // Defines if the gallery slides are cleared from the gallery modal,\r\n      // or reused for the next gallery initialization:\r\n      clearSlides: true,\r\n      // Defines if images should be stretched to fill the available space,\r\n      // while maintaining their aspect ratio (will only be enabled for browsers\r\n      // supporting background-size=\"contain\", which excludes IE < 9).\r\n      // Set to \"cover\", to make images cover all available space (requires\r\n      // support for background-size=\"cover\", which excludes IE < 9):\r\n      //--- stretchImages: false,\r\n      // Toggle the controls on pressing the Return key:\r\n      toggleControlsOnReturn: true,\r\n      // Toggle the controls on slide click:\r\n      toggleControlsOnSlideClick: true,\r\n      // Toggle the automatic slideshow interval on pressing the Space key:\r\n      toggleSlideshowOnSpace: true,\r\n      // Navigate the gallery by pressing left and right on the keyboard:\r\n      enableKeyboardNavigation: true,\r\n      // Close the gallery on pressing the Esc key:\r\n      closeOnEscape: true,\r\n      // Close the gallery when clicking on an empty slide area:\r\n      closeOnSlideClick: true,\r\n      // Close the gallery by swiping up or down:\r\n      closeOnSwipeUpOrDown: true,\r\n      // Emulate touch events on mouse-pointer devices such as desktop browsers:\r\n      emulateTouchEvents: true,\r\n      // Stop touch events from bubbling up to ancestor elements of the Gallery:\r\n      stopTouchEventsPropagation: false,\r\n      // Hide the page scrollbars:\r\n      hidePageScrollbars: false,\r\n      // Stops any touches on the container from scrolling the page:\r\n      disableScroll: true,\r\n      // Carousel mode (shortcut for carousel specific options):\r\n      carousel: false,\r\n      // Allow continuous navigation, moving from last to first\r\n      // and from first to last slide:\r\n      continuous: true,\r\n      // Remove elements outside of the preload range from the DOM:\r\n      unloadElements: true,\r\n      // Start with the automatic slideshow:\r\n      startSlideshow: true,\r\n      // Delay in milliseconds between slides for the automatic slideshow:\r\n      slideshowInterval: 5000,\r\n      // The starting index as integer.\r\n      // Can also be an object of the given list,\r\n      // or an equal object with the same url property:\r\n      index: 0,\r\n      // The number of elements to load around the current index:\r\n      preloadRange: 2,\r\n      // The transition speed between slide changes in milliseconds:\r\n      transitionSpeed: 400,\r\n      // The transition speed for automatic slide changes, set to an integer\r\n      // greater 0 to override the default transition speed:\r\n      slideshowTransitionSpeed: undefined,\r\n      // The event object for which the default action will be canceled\r\n      // on Gallery initialization (e.g. the click event to open the Gallery):\r\n      event: undefined,\r\n\r\n      // Callback function executed on slide change.\r\n      // Is called with the gallery instance as \"this\" object and the\r\n      // current index and slide as arguments:\r\n      onslide: undefined,\r\n      // Callback function executed after the slide change transition.\r\n      // Is called with the gallery instance as \"this\" object and the\r\n      // current index and slide as arguments:\r\n      onslideend: undefined,\r\n      // Callback function executed on slide content load.\r\n      // Is called with the gallery instance as \"this\" object and the\r\n      // slide index and slide element as arguments:\r\n      onslidecomplete: undefined,\r\n\r\n\r\n      // The tag name, Id, element or querySelector of the indicator container:\r\n      indicatorContainer: 'ol',\r\n      // The class for the active indicator:\r\n      activeIndicatorClass: 'active',\r\n      // The list object property (or data attribute) with the thumbnail URL,\r\n      // used as alternative to a thumbnail child element:\r\n      thumbnailProperty: 'ThumbnailImage',\r\n      // Defines if the gallery indicators should display a thumbnail:\r\n      thumbnailIndicators: true,\r\n\r\n      indicators : {\r\n            // Hide the page scrollbars:\r\n          hidePageScrollbars: false,\r\n\r\n          // The tag name, Id, element or querySelector of the indicator container:\r\n          indicatorContainer: 'ol',\r\n          // The class for the active indicator:\r\n          activeIndicatorClass: 'active',\r\n          // The list object property (or data attribute) with the thumbnail URL,\r\n          // used as alternative to a thumbnail child element:\r\n          thumbnailProperty: 'thumbnail',\r\n          // Defines if the gallery indicators should display a thumbnail:\r\n          thumbnailIndicators: true\r\n      },\r\n\r\n\r\n\r\n      \"template\" :'<div class=\"repeater-slider\">' + \r\n                  '<div class=\"slides\"></div>' +\r\n                  '<h3 class=\"title\"></h3>' +\r\n                  '<a class=\"prev\">‹</a>' +\r\n                  '<a class=\"next\">›</a>' +\r\n                  '<a class=\"play-pause\"></a>' +\r\n                  '<ol class=\"indicator\"></ol>' +\r\n                  \"</div>\",\r\n\r\n      \"item\" : {\r\n        template : '<img height=\"75\" src=\"{{ThumbnailImage}}\" width=\"65\"/>' \r\n      }\r\n    },\r\n\r\n    /*---\r\n    carouselOptions: {\r\n      hidePageScrollbars: false,\r\n      toggleControlsOnReturn: false,\r\n      toggleSlideshowOnSpace: false,\r\n      enableKeyboardNavigation: false,\r\n      closeOnEscape: false,\r\n      closeOnSlideClick: false,\r\n      closeOnSwipeUpOrDown: false,\r\n      disableScroll: false,\r\n      startSlideshow: true\r\n    },\r\n    */\r\n    \r\n    // Detect touch, transition, transform and background-size support:\r\n    support: (function (element) {\r\n      var support = {\r\n        touch:\r\n          window.ontouchstart !== undefined ||\r\n          (window.DocumentTouch && document instanceof DocumentTouch)\r\n      }\r\n      var transitions = {\r\n        webkitTransition: {\r\n          end: 'webkitTransitionEnd',\r\n          prefix: '-webkit-'\r\n        },\r\n        MozTransition: {\r\n          end: 'transitionend',\r\n          prefix: '-moz-'\r\n        },\r\n        OTransition: {\r\n          end: 'otransitionend',\r\n          prefix: '-o-'\r\n        },\r\n        transition: {\r\n          end: 'transitionend',\r\n          prefix: ''\r\n        }\r\n      }\r\n      var prop\r\n      for (prop in transitions) {\r\n        if (\r\n          transitions.hasOwnProperty(prop) &&\r\n          element.style[prop] !== undefined\r\n        ) {\r\n          support.transition = transitions[prop]\r\n          support.transition.name = prop\r\n          break\r\n        }\r\n      }\r\n      function elementTests () {\r\n        var transition = support.transition\r\n        var prop\r\n        var translateZ\r\n        document.body.appendChild(element)\r\n        if (transition) {\r\n          prop = transition.name.slice(0, -9) + 'ransform'\r\n          if (element.style[prop] !== undefined) {\r\n            element.style[prop] = 'translateZ(0)'\r\n            translateZ = window\r\n              .getComputedStyle(element)\r\n              .getPropertyValue(transition.prefix + 'transform')\r\n            support.transform = {\r\n              prefix: transition.prefix,\r\n              name: prop,\r\n              translate: true,\r\n              translateZ: !!translateZ && translateZ !== 'none'\r\n            }\r\n          }\r\n        }\r\n        if (element.style.backgroundSize !== undefined) {\r\n          support.backgroundSize = {}\r\n          element.style.backgroundSize = 'contain'\r\n          support.backgroundSize.contain =\r\n            window\r\n              .getComputedStyle(element)\r\n              .getPropertyValue('background-size') === 'contain'\r\n          element.style.backgroundSize = 'cover'\r\n          support.backgroundSize.cover =\r\n            window\r\n              .getComputedStyle(element)\r\n              .getPropertyValue('background-size') === 'cover'\r\n        }\r\n        document.body.removeChild(element)\r\n      }\r\n      if (document.body) {\r\n        elementTests()\r\n      } else {\r\n        $(document).on('DOMContentLoaded', elementTests)\r\n      }\r\n      return support\r\n      // Test element, has to be standard HTML and must not be hidden\r\n      // for the CSS3 tests using window.getComputedStyle to be applicable:\r\n    })(document.createElement('div')),\r\n\r\n    requestAnimationFrame:\r\n      window.requestAnimationFrame ||\r\n      window.webkitRequestAnimationFrame ||\r\n      window.mozRequestAnimationFrame,\r\n\r\n    cancelAnimationFrame:\r\n      window.cancelAnimationFrame ||\r\n      window.webkitCancelRequestAnimationFrame ||\r\n      window.webkitCancelAnimationFrame ||\r\n      window.mozCancelAnimationFrame,\r\n\r\n    render: function (helper){\r\n      //this.overrided(repeater,options);\r\n\r\n      this.container = this.repeater.$canvas.find('.repeater-slider');\r\n\r\n      if (this.container.length < 1) {\r\n        this.container = $(this.options.template);\r\n        this.repeater.$canvas.append(this.container);\r\n      } \r\n      this.list = helper.data.items;\r\n      //this.options.container = helper.container;\r\n      this.num = this.list.length;\r\n\r\n      this.initStartIndex()\r\n      this.initView();\r\n\r\n      this.initEventListeners()\r\n      // Load the slide at the given index:\r\n      this.onslide(this.index)\r\n      // Manually trigger the slideend event for the initial slide:\r\n      this.ontransitionend()\r\n      // Start the automatic slideshow if applicable:\r\n      if (this.options.startSlideshow) {\r\n        this.play()\r\n      }\r\n\r\n    },\r\n\r\n    slide: function (to, speed) {\r\n      window.clearTimeout(this.timeout)\r\n      var index = this.index\r\n      var direction\r\n      var naturalDirection\r\n      var diff\r\n      if (index === to || this.num === 1) {\r\n        return\r\n      }\r\n      if (!speed) {\r\n        speed = this.options.transitionSpeed\r\n      }\r\n      if (this.support.transform) {\r\n        if (!this.options.continuous) {\r\n          to = this.circle(to)\r\n        }\r\n        // 1: backward, -1: forward:\r\n        direction = Math.abs(index - to) / (index - to)\r\n        // Get the actual position of the slide:\r\n        if (this.options.continuous) {\r\n          naturalDirection = direction\r\n          direction = -this.positions[this.circle(to)] / this.slideWidth\r\n          // If going forward but to < index, use to = slides.length + to\r\n          // If going backward but to > index, use to = -slides.length + to\r\n          if (direction !== naturalDirection) {\r\n            to = -direction * this.num + to\r\n          }\r\n        }\r\n        diff = Math.abs(index - to) - 1\r\n        // Move all the slides between index and to in the right direction:\r\n        while (diff) {\r\n          diff -= 1\r\n          this.move(\r\n            this.circle((to > index ? to : index) - diff - 1),\r\n            this.slideWidth * direction,\r\n            0\r\n          )\r\n        }\r\n        to = this.circle(to)\r\n        this.move(index, this.slideWidth * direction, speed)\r\n        this.move(to, 0, speed)\r\n        if (this.options.continuous) {\r\n          this.move(\r\n            this.circle(to - direction),\r\n            -(this.slideWidth * direction),\r\n            0\r\n          )\r\n        }\r\n      } else {\r\n        to = this.circle(to)\r\n        this.animate(index * -this.slideWidth, to * -this.slideWidth, speed)\r\n      }\r\n      this.onslide(to)\r\n    },\r\n\r\n    getIndex: function () {\r\n      return this.index\r\n    },\r\n\r\n    getNumber: function () {\r\n      return this.num\r\n    },\r\n\r\n    prev: function () {\r\n      if (this.options.continuous || this.index) {\r\n        this.slide(this.index - 1)\r\n      }\r\n    },\r\n\r\n    next: function () {\r\n      if (this.options.continuous || this.index < this.num - 1) {\r\n        this.slide(this.index + 1)\r\n      }\r\n    },\r\n\r\n    circle: function (index) {\r\n      // Always return a number inside of the slides index range:\r\n      return (this.num + index % this.num) % this.num\r\n    },\r\n\r\n    move: function (index, dist, speed) {\r\n      this.translateX(index, dist, speed)\r\n      this.positions[index] = dist\r\n    },\r\n\r\n    translate: function (index, x, y, speed) {\r\n      var style = this.slides[index].style\r\n      var transition = this.support.transition\r\n      var transform = this.support.transform\r\n      style[transition.name + 'Duration'] = speed + 'ms'\r\n      style[transform.name] =\r\n        'translate(' +\r\n        x +\r\n        'px, ' +\r\n        y +\r\n        'px)' +\r\n        (transform.translateZ ? ' translateZ(0)' : '')\r\n    },\r\n\r\n    translateX: function (index, x, speed) {\r\n      this.translate(index, x, 0, speed)\r\n    },\r\n\r\n    translateY: function (index, y, speed) {\r\n      this.translate(index, 0, y, speed)\r\n    },\r\n\r\n    animate: function (from, to, speed) {\r\n      if (!speed) {\r\n        this.slidesContainer[0].style.left = to + 'px'\r\n        return\r\n      }\r\n      var that = this\r\n      var start = new Date().getTime()\r\n      var timer = window.setInterval(function () {\r\n        var timeElap = new Date().getTime() - start\r\n        if (timeElap > speed) {\r\n          that.slidesContainer[0].style.left = to + 'px'\r\n          that.ontransitionend()\r\n          window.clearInterval(timer)\r\n          return\r\n        }\r\n        that.slidesContainer[0].style.left =\r\n          (to - from) * (Math.floor(timeElap / speed * 100) / 100) + from + 'px'\r\n      }, 4)\r\n    },\r\n\r\n    play: function (time) {\r\n      var that = this\r\n      window.clearTimeout(this.timeout)\r\n      this.interval = time || this.options.slideshowInterval;\r\n      this.timeout = this.setTimeout(\r\n        (!this.requestAnimationFrame && this.slide) ||\r\n          function (to, speed) {\r\n            that.animationFrameId = that.requestAnimationFrame.call(\r\n              window,\r\n              function () {\r\n                that.slide(to, speed)\r\n              }\r\n            )\r\n          },\r\n        [this.index + 1, this.options.slideshowTransitionSpeed],\r\n        this.interval\r\n      )\r\n\r\n      this.container.addClass(this.options.playingClass)\r\n    },\r\n\r\n    pause: function () {\r\n      window.clearTimeout(this.timeout)\r\n      this.interval = null\r\n      if (this.cancelAnimationFrame) {\r\n        this.cancelAnimationFrame.call(window, this.animationFrameId)\r\n        this.animationFrameId = null\r\n      }\r\n      this.container.removeClass(this.options.playingClass)\r\n    },\r\n\r\n    add: function (list) {\r\n      var i\r\n      if (!list.concat) {\r\n        // Make a real array out of the list to add:\r\n        list = Array.prototype.slice.call(list)\r\n      }\r\n      if (!this.list.concat) {\r\n        // Make a real array out of the Gallery list:\r\n        this.list = Array.prototype.slice.call(this.list)\r\n      }\r\n      this.list = this.list.concat(list)\r\n      this.num = this.list.length\r\n      if (this.num > 2 && this.options.continuous === null) {\r\n        this.options.continuous = true\r\n        this.container.removeClass(this.options.leftEdgeClass)\r\n      }\r\n      this.container\r\n        .removeClass(this.options.rightEdgeClass)\r\n        .removeClass(this.options.singleClass)\r\n      for (i = this.num - list.length; i < this.num; i += 1) {\r\n        this.addSlide(i)\r\n        this.positionSlide(i)\r\n      }\r\n      this.positions.length = this.num\r\n      this.initSlides(true)\r\n    },\r\n\r\n    resetSlides: function () {\r\n      this.slidesContainer.empty()\r\n      this.unloadAllSlides()\r\n      this.slides = []\r\n\r\n      this.indicatorContainer.empty();\r\n      this.indicators = [];\r\n\r\n    },\r\n\r\n    preventDefault: function (event) {\r\n      if (event.preventDefault) {\r\n        event.preventDefault()\r\n      } else {\r\n        event.returnValue = false\r\n      }\r\n    },\r\n\r\n    stopPropagation: function (event) {\r\n      if (event.stopPropagation) {\r\n        event.stopPropagation()\r\n      } else {\r\n        event.cancelBubble = true\r\n      }\r\n    },\r\n\r\n    onresize: function () {\r\n      this.initSlides(true)\r\n    },\r\n\r\n    onmousedown: function (event) {\r\n      // Trigger on clicks of the left mouse button only\r\n      // and exclude video & audio elements:\r\n      if (\r\n        event.which &&\r\n        event.which === 1 &&\r\n        event.target.nodeName !== 'VIDEO' &&\r\n        event.target.nodeName !== 'AUDIO'\r\n      ) {\r\n        // Preventing the default mousedown action is required\r\n        // to make touch emulation work with Firefox:\r\n        event.preventDefault()\r\n        ;(event.originalEvent || event).touches = [\r\n          {\r\n            pageX: event.pageX,\r\n            pageY: event.pageY\r\n          }\r\n        ]\r\n        this.ontouchstart(event)\r\n      }\r\n    },\r\n\r\n    onmousemove: function (event) {\r\n      if (this.touchStart) {\r\n        ;(event.originalEvent || event).touches = [\r\n          {\r\n            pageX: event.pageX,\r\n            pageY: event.pageY\r\n          }\r\n        ]\r\n        this.ontouchmove(event)\r\n      }\r\n    },\r\n\r\n    onmouseup: function (event) {\r\n      if (this.touchStart) {\r\n        this.ontouchend(event)\r\n        delete this.touchStart\r\n      }\r\n    },\r\n\r\n    onmouseout: function (event) {\r\n      if (this.touchStart) {\r\n        var target = event.target\r\n        var related = event.relatedTarget\r\n        if (!related || (related !== target && !noder.contains(target, related))) {\r\n          this.onmouseup(event)\r\n        }\r\n      }\r\n    },\r\n\r\n    ontouchstart: function (event) {\r\n      if (this.options.stopTouchEventsPropagation) {\r\n        this.stopPropagation(event)\r\n      }\r\n      // jQuery doesn't copy touch event properties by default,\r\n      // so we have to access the originalEvent object:\r\n      var touches = (event.originalEvent || event).touches[0]\r\n      this.touchStart = {\r\n        // Remember the initial touch coordinates:\r\n        x: touches.pageX,\r\n        y: touches.pageY,\r\n        // Store the time to determine touch duration:\r\n        time: Date.now()\r\n      }\r\n      // Helper variable to detect scroll movement:\r\n      this.isScrolling = undefined\r\n      // Reset delta values:\r\n      this.touchDelta = {}\r\n    },\r\n\r\n    ontouchmove: function (event) {\r\n      if (this.options.stopTouchEventsPropagation) {\r\n        this.stopPropagation(event)\r\n      }\r\n      // jQuery doesn't copy touch event properties by default,\r\n      // so we have to access the originalEvent object:\r\n      var touches = (event.originalEvent || event).touches[0]\r\n      var scale = (event.originalEvent || event).scale\r\n      var index = this.index\r\n      var touchDeltaX\r\n      var indices\r\n      // Ensure this is a one touch swipe and not, e.g. a pinch:\r\n      if (touches.length > 1 || (scale && scale !== 1)) {\r\n        return\r\n      }\r\n      if (this.options.disableScroll) {\r\n        event.preventDefault()\r\n      }\r\n      // Measure change in x and y coordinates:\r\n      this.touchDelta = {\r\n        x: touches.pageX - this.touchStart.x,\r\n        y: touches.pageY - this.touchStart.y\r\n      }\r\n      touchDeltaX = this.touchDelta.x\r\n      // Detect if this is a vertical scroll movement (run only once per touch):\r\n      if (this.isScrolling === undefined) {\r\n        this.isScrolling =\r\n          this.isScrolling ||\r\n          Math.abs(touchDeltaX) < Math.abs(this.touchDelta.y)\r\n      }\r\n      if (!this.isScrolling) {\r\n        // Always prevent horizontal scroll:\r\n        event.preventDefault()\r\n        // Stop the slideshow:\r\n        window.clearTimeout(this.timeout)\r\n        if (this.options.continuous) {\r\n          indices = [this.circle(index + 1), index, this.circle(index - 1)]\r\n        } else {\r\n          // Increase resistance if first slide and sliding left\r\n          // or last slide and sliding right:\r\n          this.touchDelta.x = touchDeltaX =\r\n            touchDeltaX /\r\n            ((!index && touchDeltaX > 0) ||\r\n            (index === this.num - 1 && touchDeltaX < 0)\r\n              ? Math.abs(touchDeltaX) / this.slideWidth + 1\r\n              : 1)\r\n          indices = [index]\r\n          if (index) {\r\n            indices.push(index - 1)\r\n          }\r\n          if (index < this.num - 1) {\r\n            indices.unshift(index + 1)\r\n          }\r\n        }\r\n        while (indices.length) {\r\n          index = indices.pop()\r\n          this.translateX(index, touchDeltaX + this.positions[index], 0)\r\n        }\r\n      } else {\r\n        this.translateY(index, this.touchDelta.y + this.positions[index], 0)\r\n      }\r\n    },\r\n\r\n    ontouchend: function (event) {\r\n      if (this.options.stopTouchEventsPropagation) {\r\n        this.stopPropagation(event)\r\n      }\r\n      var index = this.index\r\n      var speed = this.options.transitionSpeed\r\n      var slideWidth = this.slideWidth\r\n      var isShortDuration = Number(Date.now() - this.touchStart.time) < 250\r\n      // Determine if slide attempt triggers next/prev slide:\r\n      var isValidSlide =\r\n        (isShortDuration && Math.abs(this.touchDelta.x) > 20) ||\r\n        Math.abs(this.touchDelta.x) > slideWidth / 2\r\n      // Determine if slide attempt is past start or end:\r\n      var isPastBounds =\r\n        (!index && this.touchDelta.x > 0) ||\r\n        (index === this.num - 1 && this.touchDelta.x < 0)\r\n      var isValidClose =\r\n        !isValidSlide &&\r\n        this.options.closeOnSwipeUpOrDown &&\r\n        ((isShortDuration && Math.abs(this.touchDelta.y) > 20) ||\r\n          Math.abs(this.touchDelta.y) > this.slideHeight / 2)\r\n      var direction\r\n      var indexForward\r\n      var indexBackward\r\n      var distanceForward\r\n      var distanceBackward\r\n      if (this.options.continuous) {\r\n        isPastBounds = false\r\n      }\r\n      // Determine direction of swipe (true: right, false: left):\r\n      direction = this.touchDelta.x < 0 ? -1 : 1\r\n      if (!this.isScrolling) {\r\n        if (isValidSlide && !isPastBounds) {\r\n          indexForward = index + direction\r\n          indexBackward = index - direction\r\n          distanceForward = slideWidth * direction\r\n          distanceBackward = -slideWidth * direction\r\n          if (this.options.continuous) {\r\n            this.move(this.circle(indexForward), distanceForward, 0)\r\n            this.move(this.circle(index - 2 * direction), distanceBackward, 0)\r\n          } else if (indexForward >= 0 && indexForward < this.num) {\r\n            this.move(indexForward, distanceForward, 0)\r\n          }\r\n          this.move(index, this.positions[index] + distanceForward, speed)\r\n          this.move(\r\n            this.circle(indexBackward),\r\n            this.positions[this.circle(indexBackward)] + distanceForward,\r\n            speed\r\n          )\r\n          index = this.circle(indexBackward)\r\n          this.onslide(index)\r\n        } else {\r\n          // Move back into position\r\n          if (this.options.continuous) {\r\n            this.move(this.circle(index - 1), -slideWidth, speed)\r\n            this.move(index, 0, speed)\r\n            this.move(this.circle(index + 1), slideWidth, speed)\r\n          } else {\r\n            if (index) {\r\n              this.move(index - 1, -slideWidth, speed)\r\n            }\r\n            this.move(index, 0, speed)\r\n            if (index < this.num - 1) {\r\n              this.move(index + 1, slideWidth, speed)\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n          // Move back into position\r\n          this.translateY(index, 0, speed)\r\n      }\r\n    },\r\n\r\n    ontouchcancel: function (event) {\r\n      if (this.touchStart) {\r\n        this.ontouchend(event)\r\n        delete this.touchStart\r\n      }\r\n    },\r\n\r\n    ontransitionend: function (event) {\r\n      var slide = this.slides[this.index]\r\n      if (!event || slide === event.target) {\r\n        if (this.interval) {\r\n          this.play()\r\n        }\r\n        this.setTimeout(this.options.onslideend, [this.index, slide])\r\n      }\r\n    },\r\n\r\n    onkeydown: function (event) {\r\n      switch (event.which || event.keyCode) {\r\n        case 13: // Return\r\n          if (this.options.toggleControlsOnReturn) {\r\n            this.preventDefault(event)\r\n            this.toggleControls()\r\n          }\r\n          break\r\n        case 27: // Esc\r\n          break\r\n        case 32: // Space\r\n          if (this.options.toggleSlideshowOnSpace) {\r\n            this.preventDefault(event)\r\n            this.toggleSlideshow()\r\n          }\r\n          break\r\n        case 37: // Left\r\n          if (this.options.enableKeyboardNavigation) {\r\n            this.preventDefault(event)\r\n            this.prev()\r\n          }\r\n          break\r\n        case 39: // Right\r\n          if (this.options.enableKeyboardNavigation) {\r\n            this.preventDefault(event)\r\n            this.next()\r\n          }\r\n          break\r\n      }\r\n    },\r\n\r\n    handleClick: function (event) {\r\n      var options = this.options\r\n      var target = event.target || event.srcElement\r\n      var parent = target.parentNode\r\n\r\n      if (parent === this.indicatorContainer[0]) {\r\n        // Click on indicator element\r\n        this.preventDefault(event)\r\n        this.slide(this.getNodeIndex(target))\r\n      } else if (parent.parentNode === this.indicatorContainer[0]) {\r\n        // Click on indicator child element\r\n        this.preventDefault(event)\r\n        this.slide(this.getNodeIndex(parent))\r\n      } else {\r\n        function isTarget (className) {\r\n          return $(target).hasClass(className) || $(parent).hasClass(className)\r\n        }\r\n\r\n\r\n        if (isTarget(options.toggleClass)) {\r\n          // Click on \"toggle\" control\r\n          this.preventDefault(event)\r\n          this.toggleControls()\r\n        } else if (isTarget(options.prevClass)) {\r\n          // Click on \"prev\" control\r\n          this.preventDefault(event)\r\n          this.prev()\r\n        } else if (isTarget(options.nextClass)) {\r\n          // Click on \"next\" control\r\n          this.preventDefault(event)\r\n          this.next()\r\n        } else if (isTarget(options.playPauseClass)) {\r\n          // Click on \"play-pause\" control\r\n          this.preventDefault(event)\r\n          this.toggleSlideshow()\r\n        } else if (parent === this.slidesContainer[0]) {\r\n          // Click on slide background\r\n          if (options.toggleControlsOnSlideClick) {\r\n            this.preventDefault(event)\r\n            this.toggleControls()\r\n          }\r\n        } else if (\r\n          parent.parentNode &&\r\n          parent.parentNode === this.slidesContainer[0]\r\n        ) {\r\n          // Click on displayed element\r\n          if (options.toggleControlsOnSlideClick) {\r\n            this.preventDefault(event)\r\n            this.toggleControls()\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    onclick: function (event) {\r\n      if (\r\n        this.options.emulateTouchEvents &&\r\n        this.touchDelta &&\r\n        (Math.abs(this.touchDelta.x) > 20 || Math.abs(this.touchDelta.y) > 20)\r\n      ) {\r\n        delete this.touchDelta\r\n        return\r\n      }\r\n      return this.handleClick(event)\r\n    },\r\n\r\n    updateEdgeClasses: function (index) {\r\n      if (!index) {\r\n        this.container.addClass(this.options.leftEdgeClass)\r\n      } else {\r\n        this.container.removeClass(this.options.leftEdgeClass)\r\n      }\r\n      if (index === this.num - 1) {\r\n        this.container.addClass(this.options.rightEdgeClass)\r\n      } else {\r\n        this.container.removeClass(this.options.rightEdgeClass)\r\n      }\r\n    },\r\n\r\n    handleSlide: function (index) {\r\n      if (!this.options.continuous) {\r\n        this.updateEdgeClasses(index)\r\n      }\r\n      this.loadElements(index)\r\n      if (this.options.unloadElements) {\r\n        this.unloadElements(index)\r\n      }\r\n      this.setTitle(index)\r\n\r\n      this.setActiveIndicator(index)\r\n\r\n    },\r\n\r\n    onslide: function (index) {\r\n      this.index = index\r\n      this.handleSlide(index)\r\n      this.setTimeout(this.options.onslide, [index, this.slides[index]])\r\n    },\r\n\r\n    setTitle: function (index) {\r\n      var firstChild = this.slides[index].firstChild\r\n      var text = firstChild.title || firstChild.alt\r\n      var titleElement = this.titleElement\r\n      if (titleElement.length) {\r\n        this.titleElement.empty()\r\n        if (text) {\r\n          titleElement[0].appendChild(document.createTextNode(text))\r\n        }\r\n      }\r\n    },\r\n\r\n    setTimeout: function (func, args, wait) {\r\n      var that = this\r\n      return (\r\n        func &&\r\n        window.setTimeout(function () {\r\n          func.apply(that, args || [])\r\n        }, wait || 0)\r\n      )\r\n    },\r\n\r\n    createElement: function (obj, callback) {\r\n      var $item = this._create$Item(this.options.item.template,obj);\r\n      $item.find(\"img\").on('load error', callback);\r\n\r\n      $item.addClass(this.options.slideContentClass);\r\n      return $item;\r\n    },\r\n\r\n    loadElement: function (index) {\r\n      if (!this.elements[index]) {\r\n        if (this.slides[index].firstChild) {\r\n          this.elements[index] = $(this.slides[index]).hasClass(\r\n            this.options.slideErrorClass\r\n          )\r\n            ? 3\r\n            : 2\r\n        } else {\r\n          this.elements[index] = 1 // Loading\r\n          $(this.slides[index]).append(            \r\n            this.createElement(this.list[index], this.proxyListener)\r\n          );\r\n          //$(this.slides[index]).addClass(this.options.slideLoadingClass).append(            \r\n          //  this.createElement(this.list[index], this.proxyListener)\r\n          //);\r\n        }\r\n      }\r\n    },\r\n\r\n    loadElements: function (index) {\r\n      var limit = Math.min(this.num, this.options.preloadRange * 2 + 1)\r\n      var j = index\r\n      var i\r\n      for (i = 0; i < limit; i += 1) {\r\n        // First load the current slide element (0),\r\n        // then the next one (+1),\r\n        // then the previous one (-2),\r\n        // then the next after next (+2), etc.:\r\n        j += i * (i % 2 === 0 ? -1 : 1)\r\n        // Connect the ends of the list to load slide elements for\r\n        // continuous navigation:\r\n        j = this.circle(j)\r\n        this.loadElement(j)\r\n      }\r\n    },\r\n\r\n    unloadElements: function (index) {\r\n      var i, diff\r\n      for (i in this.elements) {\r\n        if (this.elements.hasOwnProperty(i)) {\r\n          diff = Math.abs(index - i)\r\n          if (\r\n            diff > this.options.preloadRange &&\r\n            diff + this.options.preloadRange < this.num\r\n          ) {\r\n            this.unloadSlide(i)\r\n            delete this.elements[i]\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n\r\n    createIndicator: function (obj) {\r\n      var repeater = this.repeater,\r\n          indicator = this.indicatorPrototype.cloneNode(false)\r\n      var title = repeater.getItemProperty(obj,\"title\")\r\n      var thumbnailProperty = this.options.thumbnailProperty\r\n      var thumbnailUrl\r\n      var thumbnail\r\n      if (this.options.thumbnailIndicators) {\r\n        if (thumbnailProperty) {\r\n          thumbnailUrl = repeater.getItemProperty(obj, thumbnailProperty)\r\n        }\r\n        if (thumbnailUrl === undefined) {\r\n          thumbnail = obj.getElementsByTagName && $(obj).find('img')[0]\r\n          if (thumbnail) {\r\n            thumbnailUrl = thumbnail.src\r\n          }\r\n        }\r\n        if (thumbnailUrl) {\r\n          indicator.style.backgroundImage = 'url(\"' + thumbnailUrl + '\")'\r\n        }\r\n      }\r\n      if (title) {\r\n        indicator.title = title;\r\n      }\r\n      return indicator;\r\n    },\r\n\r\n    addIndicator: function (index) {\r\n      if (this.indicatorContainer.length) {\r\n        var indicator = this.createIndicator(this.list[index])\r\n        indicator.setAttribute('data-index', index)\r\n        this.indicatorContainer[0].appendChild(indicator)\r\n        this.indicators.push(indicator)\r\n      }\r\n    },\r\n\r\n    setActiveIndicator: function (index) {\r\n      if (this.indicators) {\r\n        if (this.activeIndicator) {\r\n          this.activeIndicator.removeClass(this.options.activeIndicatorClass)\r\n        }\r\n        this.activeIndicator = $(this.indicators[index])\r\n        this.activeIndicator.addClass(this.options.activeIndicatorClass)\r\n      }\r\n    },\r\n\r\n\r\n    addSlide: function (index) {\r\n      var slide = this.slidePrototype.cloneNode(false)\r\n      slide.setAttribute('data-index', index)\r\n      this.slidesContainer[0].appendChild(slide)\r\n      this.slides.push(slide)\r\n\r\n      this.addIndicator(index)\r\n    },\r\n\r\n    positionSlide: function (index) {\r\n      var slide = this.slides[index]\r\n      slide.style.width = this.slideWidth + 'px'\r\n      if (this.support.transform) {\r\n        slide.style.left = index * -this.slideWidth + 'px'\r\n        this.move(\r\n          index,\r\n          this.index > index\r\n            ? -this.slideWidth\r\n            : this.index < index ? this.slideWidth : 0,\r\n          0\r\n        )\r\n      }\r\n    },\r\n\r\n    initSlides: function (reload) {\r\n      var clearSlides, i\r\n      if (!reload) {\r\n        // indicator\r\n        this.indicatorContainer = this.container.find(\r\n          this.options.indicatorContainer\r\n        )\r\n        if (this.indicatorContainer.length) {\r\n          this.indicatorPrototype = document.createElement('li')\r\n          this.indicators = this.indicatorContainer[0].children\r\n        }\r\n\r\n        this.positions = []\r\n        this.positions.length = this.num\r\n        this.elements = {}\r\n        this.imagePrototype = document.createElement('img')\r\n        this.elementPrototype = document.createElement('div')\r\n        this.slidePrototype = document.createElement('div')\r\n        $(this.slidePrototype).addClass(this.options.slideClass)\r\n        this.slides = this.slidesContainer[0].children\r\n        clearSlides =\r\n          this.options.clearSlides || this.slides.length !== this.num\r\n      }\r\n      this.slideWidth = this.container[0].clientWidth\r\n      this.slideHeight = this.container[0].clientHeight\r\n      this.slidesContainer[0].style.width = this.num * this.slideWidth + 'px'\r\n      if (clearSlides) {\r\n        this.resetSlides()\r\n      }\r\n      for (i = 0; i < this.num; i += 1) {\r\n        if (clearSlides) {\r\n          this.addSlide(i)\r\n        }\r\n        this.positionSlide(i)\r\n      }\r\n      // Reposition the slides before and after the given index:\r\n      if (this.options.continuous && this.support.transform) {\r\n        this.move(this.circle(this.index - 1), -this.slideWidth, 0)\r\n        this.move(this.circle(this.index + 1), this.slideWidth, 0)\r\n      }\r\n      if (!this.support.transform) {\r\n        this.slidesContainer[0].style.left =\r\n          this.index * -this.slideWidth + 'px'\r\n      }\r\n    },\r\n\r\n    unloadSlide: function (index) {\r\n      var slide, firstChild\r\n      slide = this.slides[index]\r\n      firstChild = slide.firstChild\r\n      if (firstChild !== null) {\r\n        slide.removeChild(firstChild)\r\n      }\r\n    },\r\n\r\n    unloadAllSlides: function () {\r\n      var i, len\r\n      for (i = 0, len = this.slides.length; i < len; i++) {\r\n        this.unloadSlide(i)\r\n      }\r\n    },\r\n\r\n    toggleControls: function () {\r\n\r\n      var controlsClass = this.options.controlsClass\r\n      if (this.container.hasClass(controlsClass)) {\r\n        this.container.removeClass(controlsClass)\r\n      } else {\r\n        this.container.addClass(controlsClass)\r\n      }\r\n    },\r\n\r\n    toggleSlideshow: function () {\r\n      if (!this.interval) {\r\n        this.play()\r\n      } else {\r\n        this.pause()\r\n      }\r\n    },\r\n\r\n    getNodeIndex: function (element) {\r\n      return parseInt(element.getAttribute('data-index'), 10)\r\n    },\r\n\r\n    initStartIndex: function () {\r\n      var repeater = this.repeater,\r\n          index = this.options.index;\r\n      var i\r\n      // Check if the index is given as a list object:\r\n      if (index && typeof index !== 'number') {\r\n        for (i = 0; i < this.num; i += 1) {\r\n          if (\r\n            this.list[i] === index || repeater.getItemUrl(this.list[i]) ===  repeater.getItemUrl(index) ) {\r\n            index = i\r\n            break\r\n          }\r\n        }\r\n      }\r\n      // Make sure the index is in the list range:\r\n      this.index = this.circle(parseInt(index, 10) || 0)\r\n    },\r\n\r\n    initEventListeners: function () {\r\n      var that = this\r\n      var slidesContainer = this.slidesContainer\r\n      function proxyListener (event) {\r\n        var type =\r\n          that.support.transition && that.support.transition.end === event.type\r\n            ? 'transitionend'\r\n            : event.type\r\n        that['on' + type](event)\r\n      }\r\n      $(window).on('resize', proxyListener)\r\n      $(document.body).on('keydown', proxyListener)\r\n      this.container.on('click', proxyListener)\r\n      if (this.support.touch) {\r\n        slidesContainer.on(\r\n          'touchstart touchmove touchend touchcancel',\r\n          proxyListener\r\n        )\r\n      } else if (this.options.emulateTouchEvents && this.support.transition) {\r\n        slidesContainer.on(\r\n          'mousedown mousemove mouseup mouseout',\r\n          proxyListener\r\n        )\r\n      }\r\n      if (this.support.transition) {\r\n        slidesContainer.on(this.support.transition.end, proxyListener)\r\n      }\r\n      this.proxyListener = proxyListener\r\n    },\r\n\r\n    destroyEventListeners: function () {\r\n      var slidesContainer = this.slidesContainer\r\n      var proxyListener = this.proxyListener\r\n      $(window).off('resize', proxyListener)\r\n      $(document.body).off('keydown', proxyListener)\r\n      this.container.off('click', proxyListener)\r\n      if (this.support.touch) {\r\n        slidesContainer.off(\r\n          'touchstart touchmove touchend touchcancel',\r\n          proxyListener\r\n        )\r\n      } else if (this.options.emulateTouchEvents && this.support.transition) {\r\n        slidesContainer.off(\r\n          'mousedown mousemove mouseup mouseout',\r\n          proxyListener\r\n        )\r\n      }\r\n      if (this.support.transition) {\r\n        slidesContainer.off(this.support.transition.end, proxyListener)\r\n      }\r\n    },\r\n\r\n\r\n    initView: function () {\r\n      var that = this\r\n\r\n      /*\r\n      this.container = $(this.options.container)\r\n      if (!this.container.length) {\r\n        console.log(\r\n          'blueimp Gallery: Widget container not found.',\r\n          this.options.container\r\n        )\r\n        return false\r\n      }\r\n      */\r\n\r\n      this.slidesContainer = this.container\r\n        .find(this.options.slidesContainer)\r\n        .first()\r\n      if (!this.slidesContainer.length) {\r\n        console.log(\r\n          'blueimp Gallery: Slides container not found.',\r\n          this.options.slidesContainer\r\n        )\r\n        return false\r\n      }\r\n      this.titleElement = this.container.find(this.options.titleElement).first()\r\n      if (this.num === 1) {\r\n        this.container.addClass(this.options.singleClass)\r\n      }\r\n      if (this.options.hidePageScrollbars) {\r\n        // Hide the page scrollbars:\r\n        this.bodyOverflowStyle = document.body.style.overflow\r\n        document.body.style.overflow = 'hidden'\r\n      }\r\n      this.container[0].style.display = 'block'\r\n      this.initSlides()\r\n      this.container.addClass(this.options.displayClass)\r\n    },\r\n\r\n    initOptions: function (options) {\r\n      // Create a copy of the prototype options:\r\n      this.overrided(langx.mixin({}, SliderView.prototype.options,options));\r\n\r\n      if (this.num < 3) {\r\n        // 1 or 2 slides cannot be displayed continuous,\r\n        // remember the original option by setting to null instead of false:\r\n        this.options.continuous = this.options.continuous ? null : false\r\n      }\r\n      if (!this.support.transition) {\r\n        this.options.emulateTouchEvents = false\r\n      }\r\n      if (this.options.event) {\r\n        this.preventDefault(this.options.event)\r\n      }\r\n    }\r\n  });\r\n\r\n  views[\"slider\"] = {\r\n    \"name\" :  \"slider\",\r\n    \"ctor\" :  SliderView\r\n  };\r\n\r\n  return SliderView;\r\n\r\n});\r\n\ndefine('skylark-widgets-repeater/views/TableView',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-query\",\r\n    \"../views\",   \r\n    \"./ViewBase\"\r\n], function(langx, browser, eventer, noder, geom, $, views, ViewBase) {\r\n\r\n  var TableView = ViewBase.inherit({\r\n    klassName : \"TableView\",\r\n\r\n    options: {\r\n        columnRendered: null,\r\n        columnSizing: true,\r\n        columnSyncing: true,\r\n        highlightSortedColumn: true,\r\n        infiniteScroll: false,\r\n        noItemsHTML: 'no items found',\r\n        selectable: false,\r\n        sortClearing: false,\r\n        rowRendered: null,\r\n        frozenColumns: 0,\r\n        actions: false\r\n    },\r\n\r\n    clearSelectedItems : function listClearSelectedItems () {\r\n        this.repeater.$canvas.find('.repeater-table-check').remove();\r\n        this.repeater.$canvas.find('.repeater-table table tbody tr.selected').removeClass('selected');\r\n    },\r\n\r\n    highlightColumn : function listHighlightColumn (index, force) {\r\n        var tbody = this.repeater.$canvas.find('.repeater-table-wrapper > table tbody');\r\n        if (this.options.highlightSortedColumn || force) {\r\n            tbody.find('td.sorted').removeClass('sorted');\r\n            tbody.find('tr').each(function eachTR () {\r\n                var col = $(this).find('td:nth-child(' + (index + 1) + ')').filter(function filterChildren () { return !$(this).parent().hasClass('empty'); });\r\n                col.addClass('sorted');\r\n            });\r\n        }\r\n    },\r\n\r\n    getSelectedItems : function listGetSelectedItems () {\r\n        var selected = [];\r\n        this.repeater.$canvas.find('.repeater-table .repeater-table-wrapper > table tbody tr.selected').each(function eachSelectedTR () {\r\n            var $item = $(this);\r\n            selected.push({\r\n                data: $item.data('item_data'),\r\n                element: $item\r\n            });\r\n        });\r\n        return selected;\r\n    },\r\n\r\n    positionHeadings : function listPositionHeadings () {\r\n        var $wrapper = this.repeater.$element.find('.repeater-table-wrapper');\r\n        var offsetLeft = $wrapper.offset().left;\r\n        var scrollLeft = $wrapper.scrollLeft();\r\n        if (scrollLeft > 0) {\r\n            $wrapper.find('.repeater-table-heading').each(function eachListHeading () {\r\n                var $heading = $(this);\r\n                var left = ($heading.parents('th:first').offset().left - offsetLeft) + 'px';\r\n                $heading.addClass('shifted').css('left', left);\r\n            });\r\n        } else {\r\n            $wrapper.find('.repeater-table-heading').each(function eachListHeading () {\r\n                $(this).removeClass('shifted').css('left', '');\r\n            });\r\n        }\r\n    },\r\n\r\n    setSelectedItems : function listSetSelectedItems (itms, force) {\r\n        var selectable = this.options.selectable;\r\n        var self = this;\r\n        var data;\r\n        var i;\r\n        var $item;\r\n        var length;\r\n\r\n        var items = itms;\r\n        if (!$.isArray(items)) {\r\n            items = [items];\r\n        }\r\n\r\n        // this function is necessary because lint yells when a function is in a loop\r\n        var checkIfItemMatchesValue = function checkIfItemMatchesValue (rowIndex) {\r\n            $item = $(this);\r\n\r\n            data = $item.data('item_data') || {};\r\n            if (data[items[i].property] === items[i].value) {\r\n                selectItem($item, items[i].selected, rowIndex);\r\n            }\r\n        };\r\n\r\n        var selectItem = function selectItem ($itm, slct, index) {\r\n            var $frozenCols;\r\n\r\n            var select = (slct !== undefined) ? slct : true;\r\n            if (select) {\r\n                if (!force && selectable !== 'multi') {\r\n                    self.clearSelectedItems();\r\n                }\r\n\r\n                if (!$itm.hasClass('selected')) {\r\n                    $itm.addClass('selected');\r\n\r\n                    if (self.options.frozenColumns || self.options.selectable === 'multi') {\r\n                        $frozenCols = self.repeater.$element.find('.frozen-column-wrapper tr:nth-child(' + (index + 1) + ')');\r\n\r\n                        $frozenCols.addClass('selected');\r\n                        $frozenCols.find('.repeater-select-checkbox').addClass('checked');\r\n                    }\r\n\r\n                    if (self.options.actions) {\r\n                        self.repeater.$element.find('.actions-column-wrapper tr:nth-child(' + (index + 1) + ')').addClass('selected');\r\n                    }\r\n\r\n                    $itm.find('td:first').prepend('<div class=\"repeater-table-check\"><span class=\"glyphicon glyphicon-ok\"></span></div>');\r\n                }\r\n            } else {\r\n                if (self.options.frozenColumns) {\r\n                    $frozenCols = self.repeater.$element.find('.frozen-column-wrapper tr:nth-child(' + (index + 1) + ')');\r\n\r\n                    $frozenCols.addClass('selected');\r\n                    $frozenCols.find('.repeater-select-checkbox').removeClass('checked');\r\n                }\r\n\r\n                if (self.options.actions) {\r\n                    self.repeater.$element.find('.actions-column-wrapper tr:nth-child(' + (index + 1) + ')').removeClass('selected');\r\n                }\r\n\r\n                $itm.find('.repeater-table-check').remove();\r\n                $itm.removeClass('selected');\r\n            }\r\n        };\r\n\r\n        if (force === true || selectable === 'multi') {\r\n            length = items.length;\r\n        } else if (selectable) {\r\n            length = (items.length > 0) ? 1 : 0;\r\n        } else {\r\n            length = 0;\r\n        }\r\n\r\n        for (i = 0; i < length; i++) {\r\n            if (items[i].index !== undefined) {\r\n                $item = this.repeater.$canvas.find('.repeater-table .repeater-table-wrapper > table tbody tr:nth-child(' + (items[i].index + 1) + ')');\r\n                if ($item.length > 0) {\r\n                    selectItem($item, items[i].selected, items[i].index);\r\n                }\r\n            } else if (items[i].property !== undefined && items[i].value !== undefined) {\r\n                this.repeater.$canvas.find('.repeater-table .repeater-table-wrapper > table tbody tr').each(checkIfItemMatchesValue);\r\n            }\r\n        }\r\n    },\r\n\r\n    sizeHeadings : function listSizeHeadings () {\r\n        var $table = this.repeater.$element.find('.repeater-table table');\r\n        $table.find('thead th').each(function eachTH () {\r\n            var $th = $(this);\r\n            var $heading = $th.find('.repeater-table-heading');\r\n            $heading.css({ height: $th.outerHeight() });\r\n            $heading.outerWidth($heading.data('forced-width') || $th.outerWidth());\r\n        });\r\n    },\r\n\r\n    setFrozenColumns : function listSetFrozenColumns () {\r\n        var frozenTable = this.repeater.$canvas.find('.table-frozen');\r\n        var $wrapper = this.repeater.$element.find('.repeater-canvas');\r\n        var $table = this.repeater.$element.find('.repeater-table .repeater-table-wrapper > table');\r\n        var repeaterWrapper = this.repeater.$element.find('.repeater-table');\r\n        var numFrozenColumns = this.options.frozenColumns;\r\n        var self = this;\r\n\r\n        if (this.options.selectable === 'multi') {\r\n            numFrozenColumns = numFrozenColumns + 1;\r\n            $wrapper.addClass('multi-select-enabled');\r\n        }\r\n\r\n        if (frozenTable.length < 1) {\r\n            // setup frozen column markup\r\n            // main wrapper and remove unneeded columns\r\n            var $frozenColumnWrapper = $('<div class=\"frozen-column-wrapper\"></div>').insertBefore($table);\r\n            var $frozenColumn = $table.clone().addClass('table-frozen');\r\n            $frozenColumn.find('th:not(:lt(' + numFrozenColumns + '))').remove();\r\n            $frozenColumn.find('td:not(:nth-child(n+0):nth-child(-n+' + numFrozenColumns + '))').remove();\r\n\r\n            // need to set absolute heading for vertical scrolling\r\n            var $frozenThead = $frozenColumn.clone().removeClass('table-frozen');\r\n            $frozenThead.find('tbody').remove();\r\n            var $frozenTheadWrapper = $('<div class=\"frozen-thead-wrapper\"></div>').append($frozenThead);\r\n\r\n            // this gets a little messy with all the cloning. We need to make sure the ID and FOR\r\n            // attribs are unique for the 'top most' cloned checkbox\r\n            var $checkboxLabel = $frozenTheadWrapper.find('th label.checkbox-custom.checkbox-inline');\r\n            $checkboxLabel.attr('id', $checkboxLabel.attr('id') + '_cloned');\r\n\r\n            $frozenColumnWrapper.append($frozenColumn);\r\n            repeaterWrapper.append($frozenTheadWrapper);\r\n            this.repeater.$canvas.addClass('frozen-enabled');\r\n        }\r\n\r\n        this.sizeFrozenColumns();\r\n\r\n        $('.frozen-thead-wrapper .repeater-table-heading').on('click', function onClickHeading () {\r\n            var index = $(this).parent('th').index();\r\n            index = index + 1;\r\n            self.repeater.$element.find('.repeater-table-wrapper > table thead th:nth-child(' + index + ') .repeater-table-heading')[0].click();\r\n        });\r\n    },\r\n\r\n    positionColumns : function listPositionColumns () {\r\n        var $wrapper = this.repeater.$element.find('.repeater-canvas');\r\n        var scrollTop = $wrapper.scrollTop();\r\n        var scrollLeft = $wrapper.scrollLeft();\r\n        var frozenEnabled = this.options.frozenColumns || this.options.selectable === 'multi';\r\n        var actionsEnabled = this.options.actions;\r\n\r\n        var canvasWidth = this.repeater.$element.find('.repeater-canvas').outerWidth();\r\n        var tableWidth = this.repeater.$element.find('.repeater-table .repeater-table-wrapper > table').outerWidth();\r\n\r\n        var actionsWidth = this.repeater.$element.find('.table-actions') ? this.repeater.$element.find('.table-actions').outerWidth() : 0;\r\n\r\n        var shouldScroll = (tableWidth - (canvasWidth - actionsWidth)) >= scrollLeft;\r\n\r\n\r\n        if (scrollTop > 0) {\r\n            $wrapper.find('.repeater-table-heading').css('top', scrollTop);\r\n        } else {\r\n            $wrapper.find('.repeater-table-heading').css('top', '0');\r\n        }\r\n\r\n        if (scrollLeft > 0) {\r\n            if (frozenEnabled) {\r\n                $wrapper.find('.frozen-thead-wrapper').css('left', scrollLeft);\r\n                $wrapper.find('.frozen-column-wrapper').css('left', scrollLeft);\r\n            }\r\n            if (actionsEnabled && shouldScroll) {\r\n                $wrapper.find('.actions-thead-wrapper').css('right', -scrollLeft);\r\n                $wrapper.find('.actions-column-wrapper').css('right', -scrollLeft);\r\n            }\r\n        } else {\r\n            if (frozenEnabled) {\r\n                $wrapper.find('.frozen-thead-wrapper').css('left', '0');\r\n                $wrapper.find('.frozen-column-wrapper').css('left', '0');\r\n            }\r\n            if (actionsEnabled) {\r\n                $wrapper.find('.actions-thead-wrapper').css('right', '0');\r\n                $wrapper.find('.actions-column-wrapper').css('right', '0');\r\n            }\r\n        }\r\n    },\r\n\r\n    createItemActions : function listCreateItemActions () {\r\n        var actionsHtml = '';\r\n        var self = this;\r\n        var i;\r\n        var length;\r\n        var $table = this.repeater.$element.find('.repeater-table .repeater-table-wrapper > table');\r\n        var $actionsTable = this.repeater.$canvas.find('.table-actions');\r\n\r\n        for (i = 0, length = this.options.actions.items.length; i < length; i++) {\r\n            var action = this.options.actions.items[i];\r\n            var html = action.html;\r\n\r\n            actionsHtml += '<li><a href=\"#\" data-action=\"' + action.name + '\" class=\"action-item\"> ' + html + '</a></li>';\r\n        }\r\n\r\n        var actionsDropdown = '<div class=\"btn-group\">' +\r\n            '<button type=\"button\" class=\"btn btn-xs btn-default dropdown-toggle repeater-actions-button\" data-toggle=\"dropdown\" data-flip=\"auto\" aria-expanded=\"false\">' +\r\n            '<span class=\"caret\"></span>' +\r\n            '</button>' +\r\n            '<ul class=\"dropdown-menu dropdown-menu-right\" role=\"menu\">' +\r\n            actionsHtml +\r\n            '</ul></div>';\r\n\r\n        if ($actionsTable.length < 1) {\r\n            var $actionsColumnWrapper = $('<div class=\"actions-column-wrapper\" style=\"width: ' + this.actions_width + 'px\"></div>').insertBefore($table);\r\n            var $actionsColumn = $table.clone().addClass('table-actions');\r\n            $actionsColumn.find('th:not(:last-child)').remove();\r\n            $actionsColumn.find('tr td:not(:last-child)').remove();\r\n\r\n            // Dont show actions dropdown in header if not multi select\r\n            if (this.options.selectable === 'multi' || this.options.selectable === 'action') {\r\n                $actionsColumn.find('thead tr').html('<th><div class=\"repeater-table-heading\">' + actionsDropdown + '</div></th>');\r\n\r\n                if (this.options.selectable !== 'action') {\r\n                    // disable the header dropdown until an item is selected\r\n                    $actionsColumn.find('thead .btn').attr('disabled', 'disabled');\r\n                }\r\n            } else {\r\n                var label = this.options.actions.label || '<span class=\"actions-hidden\">a</span>';\r\n                $actionsColumn.find('thead tr').addClass('empty-heading').html('<th>' + label + '<div class=\"repeater-table-heading\">' + label + '</div></th>');\r\n            }\r\n\r\n            // Create Actions dropdown for each cell in actions table\r\n            var $actionsCells = $actionsColumn.find('td');\r\n\r\n            $actionsCells.each(function addActionsDropdown (rowNumber) {\r\n                $(this).html(actionsDropdown);\r\n                $(this).find('a').attr('data-row', rowNumber + 1);\r\n            });\r\n\r\n            $actionsColumnWrapper.append($actionsColumn);\r\n\r\n            this.repeater.$canvas.addClass('actions-enabled');\r\n        }\r\n\r\n        this.sizeActionsTable();\r\n\r\n        // row level actions click\r\n        this.repeater.$element.find('.table-actions tbody .action-item').on('click', function onBodyActionItemClick (e) {\r\n            if (!self.isDisabled) {\r\n                var actionName = $(this).data('action');\r\n                var row = $(this).data('row');\r\n                var selected = {\r\n                    actionName: actionName,\r\n                    rows: [row]\r\n                };\r\n                self.getActionItems(selected, e);\r\n            }\r\n        });\r\n        // bulk actions click\r\n        this.repeater.$element.find('.table-actions thead .action-item').on('click', function onHeadActionItemClick (e) {\r\n            if (!self.isDisabled) {\r\n                var actionName = $(this).data('action');\r\n                var selected = {\r\n                    actionName: actionName,\r\n                    rows: []\r\n                };\r\n                var selector = '.repeater-table-wrapper > table .selected';\r\n\r\n                if ( self.options.selectable === 'action' ) {\r\n                    selector = '.repeater-table-wrapper > table tr';\r\n                }\r\n                self.repeater.$element.find(selector).each(function eachSelector (selectorIndex) {\r\n                    selected.rows.push(selectorIndex + 1);\r\n                });\r\n\r\n                self.getActionItems(selected, e);\r\n            }\r\n        });\r\n    },\r\n\r\n    getActionItems : function listGetActionItems (selected, e) {\r\n        var selectedObj = [];\r\n        var actionObj = $.grep(this.options.actions.items, function matchedActions (actions) {\r\n            return actions.name === selected.actionName;\r\n        })[0];\r\n        for (var i = 0, selectedRowsL = selected.rows.length; i < selectedRowsL; i++) {\r\n            var clickedRow = this.repeater.$canvas.find('.repeater-table-wrapper > table tbody tr:nth-child(' + selected.rows[i] + ')');\r\n            selectedObj.push({\r\n                item: clickedRow,\r\n                rowData: clickedRow.data('item_data')\r\n            });\r\n        }\r\n        if (selectedObj.length === 1) {\r\n            selectedObj = selectedObj[0];\r\n        }\r\n\r\n        if (actionObj.clickAction) {\r\n            var callback = function noop () {};// for backwards compatibility. No idea why this was originally here...\r\n            actionObj.clickAction(selectedObj, callback, e);\r\n        }\r\n    },\r\n\r\n    sizeActionsTable : function listSizeActionsTable () {\r\n        var $actionsTable = this.repeater.$element.find('.repeater-table table.table-actions');\r\n        var $actionsTableHeader = $actionsTable.find('thead tr th');\r\n        var $table = this.repeater.$element.find('.repeater-table-wrapper > table');\r\n\r\n        $actionsTableHeader.outerHeight($table.find('thead tr th').outerHeight());\r\n        $actionsTableHeader.find('.repeater-table-heading').outerHeight($actionsTableHeader.outerHeight());\r\n        $actionsTable.find('tbody tr td:first-child').each(function eachFirstChild (i) {\r\n            $(this).outerHeight($table.find('tbody tr:eq(' + i + ') td').outerHeight());\r\n        });\r\n    },\r\n\r\n    sizeFrozenColumns : function listSizeFrozenColumns () {\r\n        var $table = this.repeater.$element.find('.repeater-table .repeater-table-wrapper > table');\r\n\r\n        this.repeater.$element.find('.repeater-table table.table-frozen tr').each(function eachTR (i) {\r\n            $(this).height($table.find('tr:eq(' + i + ')').height());\r\n        });\r\n\r\n        var columnWidth = $table.find('td:eq(0)').outerWidth();\r\n        this.repeater.$element.find('.frozen-column-wrapper, .frozen-thead-wrapper').width(columnWidth);\r\n    },\r\n\r\n    frozenOptionsInitialize : function listFrozenOptionsInitialize () {\r\n        var $checkboxes = this.repeater.$element.find('.frozen-column-wrapper .checkbox-inline');\r\n        var $headerCheckbox = this.repeater.$element.find('.header-checkbox .checkbox-custom');\r\n        var $everyTable = this.repeater.$element.find('.repeater-table table');\r\n        var self = this;\r\n\r\n        // Make sure if row is hovered that it is shown in frozen column as well\r\n        this.repeater.$element.find('tr.selectable').on('mouseover mouseleave', function onMouseEvents (e) {\r\n            var index = $(this).index();\r\n            index = index + 1;\r\n            if (e.type === 'mouseover') {\r\n                $everyTable.find('tbody tr:nth-child(' + index + ')').addClass('hovered');\r\n            } else {\r\n                $everyTable.find('tbody tr:nth-child(' + index + ')').removeClass('hovered');\r\n            }\r\n        });\r\n\r\n        $headerCheckbox.checkbox();\r\n        $checkboxes.checkbox();\r\n\r\n        // Row checkboxes\r\n        var $rowCheckboxes = this.repeater.$element.find('.table-frozen tbody .checkbox-inline');\r\n        var $checkAll = this.repeater.$element.find('.frozen-thead-wrapper thead .checkbox-inline input');\r\n        $rowCheckboxes.on('change', function onChangeRowCheckboxes (e) {\r\n            e.preventDefault();\r\n\r\n            if (!self.revertingCheckbox) {\r\n                if (self.isDisabled) {\r\n                    revertCheckbox($(e.currentTarget));\r\n                } else {\r\n                    var row = $(this).attr('data-row');\r\n                    row = parseInt(row, 10) + 1;\r\n                    self.repeater.$element.find('.repeater-table-wrapper > table tbody tr:nth-child(' + row + ')').click();\r\n\r\n                    var numSelected = self.repeater.$element.find('.table-frozen tbody .checkbox-inline.checked').length;\r\n                    if (numSelected === 0) {\r\n                        $checkAll.prop('checked', false);\r\n                        $checkAll.prop('indeterminate', false);\r\n                    } else if (numSelected === $rowCheckboxes.length) {\r\n                        $checkAll.prop('checked', true);\r\n                        $checkAll.prop('indeterminate', false);\r\n                    } else {\r\n                        $checkAll.prop('checked', false);\r\n                        $checkAll.prop('indeterminate', true);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        // \"Check All\" checkbox\r\n        $checkAll.on('change', function onChangeCheckAll (e) {\r\n            if (!self.revertingCheckbox) {\r\n                if (self.isDisabled) {\r\n                    revertCheckbox($(e.currentTarget));\r\n                } else if ($(this).is(':checked')) {\r\n                    self.repeater.$element.find('.repeater-table-wrapper > table tbody tr:not(.selected)').click();\r\n                    self.repeater.$element.trigger('selected.lark.repeaterList', $checkboxes);\r\n                } else {\r\n                    self.repeater.$element.find('.repeater-table-wrapper > table tbody tr.selected').click();\r\n                    self.repeater.$element.trigger('deselected.lark.repeaterList', $checkboxes);\r\n                }\r\n            }\r\n        });\r\n\r\n        function revertCheckbox ($checkbox) {\r\n            self.revertingCheckbox = true;\r\n            $checkbox.checkbox('toggle');\r\n            delete self.revertingCheckbox;\r\n        }\r\n    },\r\n\r\n    cleared: function cleared () {\r\n        if (this.options.columnSyncing) {\r\n            this.sizeHeadings();\r\n        }\r\n    },\r\n    dataOptions: function dataOptions (options) {\r\n        if (this.sortDirection) {\r\n            options.sortDirection = this.sortDirection;\r\n        }\r\n        if (this.sortProperty) {\r\n            options.sortProperty = this.sortProperty;\r\n        }\r\n        return options;\r\n    },\r\n    enabled: function enabled (helpers) {\r\n        if (this.options.actions) {\r\n            if (!helpers.status) {\r\n                this.repeater.$canvas.find('.repeater-actions-button').attr('disabled', 'disabled');\r\n            } else {\r\n                this.repeater.$canvas.find('.repeater-actions-button').removeAttr('disabled');\r\n                toggleActionsHeaderButton.call(this);\r\n            }\r\n        }\r\n    },\r\n    initialize: function initialize (helpers, callback) {\r\n        this.sortDirection = null;\r\n        this.sortProperty = null;\r\n        this.specialBrowserClass = specialBrowserClass();\r\n        this.actions_width = (this.options.actions.width !== undefined) ? this.options.actions.width : 37;\r\n        this.noItems = false;\r\n        callback();\r\n    },\r\n    resize: function resize () {\r\n        sizeColumns.call(this, this.repeater.$element.find('.repeater-table-wrapper > table thead tr'));\r\n        if (this.options.actions) {\r\n            this.sizeActionsTable();\r\n        }\r\n        if (this.options.frozenColumns || this.options.selectable === 'multi') {\r\n            this.sizeFrozenColumns();\r\n        }\r\n        if (this.options.columnSyncing) {\r\n            this.sizeHeadings();\r\n        }\r\n    },\r\n    selected: function selected () {\r\n        var infScroll = this.options.infiniteScroll;\r\n        var opts;\r\n\r\n        this.firstRender = true;\r\n        this.repeater.$loader.addClass('noHeader');\r\n\r\n        if (infScroll) {\r\n            opts = (typeof infScroll === 'object') ? infScroll : {};\r\n            this.repeater.infiniteScrolling(true, opts);\r\n        }\r\n    },\r\n    before: function before (helpers) {\r\n        var $listContainer = helpers.container.find('.repeater-table');\r\n        var self = this;\r\n        var $table;\r\n\r\n        // this is a patch, it was pulled out of `renderThead`\r\n        if (helpers.data.count > 0) {\r\n            this.noItems = false;\r\n        } else {\r\n            this.noItems = true;\r\n        }\r\n\r\n        if ($listContainer.length < 1) {\r\n            $listContainer = $('<div class=\"repeater-table ' + this.specialBrowserClass + '\" data-preserve=\"shallow\"><div class=\"repeater-table-wrapper\" data-infinite=\"true\" data-preserve=\"shallow\"><table aria-readonly=\"true\" class=\"table\" data-preserve=\"shallow\" role=\"grid\"></table></div></div>');\r\n            $listContainer.find('.repeater-table-wrapper').on('scroll.lark.repeaterList', function onScrollRepeaterList () {\r\n                if (self.options.columnSyncing) {\r\n                    self.positionHeadings();\r\n                }\r\n            });\r\n            if (self.options.frozenColumns || self.options.actions || self.options.selectable === 'multi') {\r\n                helpers.container.on('scroll.lark.repeaterList', function onScrollRepeaterList () {\r\n                    self.positionColumns();\r\n                });\r\n            }\r\n\r\n            helpers.container.append($listContainer);\r\n        }\r\n        helpers.container.removeClass('actions-enabled actions-enabled multi-select-enabled');\r\n\r\n        $table = $listContainer.find('table');\r\n        renderThead.call(this, $table, helpers.data);\r\n        renderTbody.call(this, $table, helpers.data);\r\n\r\n        return false;\r\n    },\r\n    renderItem: function renderItem (helpers) {\r\n        renderRow.call(this, helpers.container, helpers.subset, helpers.index);\r\n        return false;\r\n    },\r\n    after: function after () {\r\n        var $sorted;\r\n\r\n        if ((this.options.frozenColumns || this.options.selectable === 'multi') && !this.noItems) {\r\n            this.setFrozenColumns();\r\n        }\r\n\r\n        if (this.options.actions && !this.noItems) {\r\n            this.createItemActions();\r\n            this.sizeActionsTable();\r\n        }\r\n\r\n        if ((this.options.frozenColumns || this.options.actions || this.options.selectable === 'multi') && !this.noItems) {\r\n            this.positionColumns();\r\n            this.frozenOptionsInitialize();\r\n        }\r\n\r\n        if (this.options.columnSyncing) {\r\n            this.sizeHeadings();\r\n            this.positionHeadings();\r\n        }\r\n\r\n        $sorted = this.repeater.$canvas.find('.repeater-table-wrapper > table .repeater-table-heading.sorted');\r\n        if ($sorted.length > 0) {\r\n            this.highlightColumn($sorted.data('fu_item_index'));\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n\r\n  });\r\n\r\n\r\n\r\n    // ADDITIONAL METHODS\r\n    var areDifferentColumns = function areDifferentColumns (oldCols, newCols) {\r\n        if (!newCols) {\r\n            return false;\r\n        }\r\n        if (!oldCols || (newCols.length !== oldCols.length)) {\r\n            return true;\r\n        }\r\n        for (var i = 0, newColsL = newCols.length; i < newColsL; i++) {\r\n            if (!oldCols[i]) {\r\n                return true;\r\n            }\r\n\r\n            for (var j in newCols[i]) {\r\n                if (newCols[i].hasOwnProperty(j) && oldCols[i][j] !== newCols[i][j]) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    var renderColumn = function renderColumn ($row, rows, rowIndex, columns, columnIndex) {\r\n        var className = columns[columnIndex].className;\r\n        var content = rows[rowIndex][columns[columnIndex].property];\r\n        var $col = $('<td></td>');\r\n        var width = columns[columnIndex]._auto_width;\r\n\r\n        var property = columns[columnIndex].property;\r\n        if (this.options.actions !== false && property === '@_ACTIONS_@') {\r\n            content = '<div class=\"repeater-table-actions-placeholder\" style=\"width: ' + this.actions_width  + 'px\"></div>';\r\n        }\r\n\r\n        content = (content !== undefined) ? content : '';\r\n\r\n        $col.addClass(((className !== undefined) ? className : '')).append(content);\r\n        if (width !== undefined) {\r\n            $col.outerWidth(width);\r\n        }\r\n\r\n        $row.append($col);\r\n\r\n        if (this.options.selectable === 'multi' && columns[columnIndex].property === '@_CHECKBOX_@') {\r\n            var checkBoxMarkup = '<label data-row=\"' + rowIndex + '\" class=\"checkbox-custom checkbox-inline body-checkbox repeater-select-checkbox\">' +\r\n                '<input class=\"sr-only\" type=\"checkbox\"></label>';\r\n\r\n            $col.html(checkBoxMarkup);\r\n        }\r\n\r\n        return $col;\r\n    };\r\n\r\n    var renderHeader = function renderHeader ($tr, columns, index) {\r\n        var chevDown = 'glyphicon-chevron-down';\r\n        var chevron = '.glyphicon.rlc:first';\r\n        var chevUp = 'glyphicon-chevron-up';\r\n        var $div = $('<div class=\"repeater-table-heading\"><span class=\"glyphicon rlc\"></span></div>');\r\n        var checkAllID = (this.repeater.$element.attr('id') + '_' || '') + 'checkall';\r\n\r\n        var checkBoxMarkup = '<div class=\"repeater-table-heading header-checkbox\">' +\r\n                '<label id=\"' + checkAllID + '\" class=\"checkbox-custom checkbox-inline\">' +\r\n                    '<input class=\"sr-only\" type=\"checkbox\" value=\"\">' +\r\n                    '<span class=\"checkbox-label\">&nbsp;</span>' +\r\n                '</label>' +\r\n            '</div>';\r\n\r\n        var $header = $('<th></th>');\r\n        var self = this;\r\n        var $both;\r\n        var className;\r\n        var sortable;\r\n        var $span;\r\n        var $spans;\r\n\r\n        $div.data('fu_item_index', index);\r\n        $div.prepend(columns[index].label);\r\n        $header.html($div.html()).find('[id]').removeAttr('id');\r\n\r\n        if (columns[index].property !== '@_CHECKBOX_@') {\r\n            $header.append($div);\r\n        } else {\r\n            $header.append(checkBoxMarkup);\r\n        }\r\n\r\n        $both = $header.add($div);\r\n        $span = $div.find(chevron);\r\n        $spans = $span.add($header.find(chevron));\r\n\r\n        if (this.options.actions && columns[index].property === '@_ACTIONS_@') {\r\n            var width = this.actions_width;\r\n            $header.css('width', width);\r\n            $div.css('width', width);\r\n        }\r\n\r\n        className = columns[index].className;\r\n        if (className !== undefined) {\r\n            $both.addClass(className);\r\n        }\r\n\r\n        sortable = columns[index].sortable;\r\n        if (sortable) {\r\n            $both.addClass('sortable');\r\n            $div.on('click.lark.repeaterList', function onClickRepeaterList () {\r\n                if (!self.isDisabled) {\r\n                    self.sortProperty = (typeof sortable === 'string') ? sortable : columns[index].property;\r\n                    if ($div.hasClass('sorted')) {\r\n                        if ($span.hasClass(chevUp)) {\r\n                            $spans.removeClass(chevUp).addClass(chevDown);\r\n                            self.sortDirection = 'desc';\r\n                        } else if (!self.options.sortClearing) {\r\n                            $spans.removeClass(chevDown).addClass(chevUp);\r\n                            self.sortDirection = 'asc';\r\n                        } else {\r\n                            $both.removeClass('sorted');\r\n                            $spans.removeClass(chevDown);\r\n                            self.sortDirection = null;\r\n                            self.sortProperty = null;\r\n                        }\r\n                    } else {\r\n                        $tr.find('th, .repeater-table-heading').removeClass('sorted');\r\n                        $spans.removeClass(chevDown).addClass(chevUp);\r\n                        self.sortDirection = 'asc';\r\n                        $both.addClass('sorted');\r\n                    }\r\n\r\n                    self.repeater.render({\r\n                        clearInfinite: true,\r\n                        pageIncrement: null\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n        if (columns[index].sortDirection === 'asc' || columns[index].sortDirection === 'desc') {\r\n            $tr.find('th, .repeater-table-heading').removeClass('sorted');\r\n            $both.addClass('sortable sorted');\r\n            if (columns[index].sortDirection === 'asc') {\r\n                $spans.addClass(chevUp);\r\n                this.sortDirection = 'asc';\r\n            } else {\r\n                $spans.addClass(chevDown);\r\n                this.sortDirection = 'desc';\r\n            }\r\n\r\n            this.sortProperty = (typeof sortable === 'string') ? sortable : columns[index].property;\r\n        }\r\n\r\n        $tr.append($header);\r\n    };\r\n\r\n    var onClickRowRepeaterList = function onClickRowRepeaterList (repeater) {\r\n        var isMulti = repeater.options.selectable === 'multi';\r\n        var isActions = repeater.options.actions;\r\n        var $repeater = repeater.$element;\r\n\r\n        if (!repeater.isDisabled) {\r\n            var $item = $(this);\r\n            var index = $(this).index() + 1;\r\n            var $frozenRow = $repeater.find('.frozen-column-wrapper tr:nth-child(' + index + ')');\r\n            var $actionsRow = $repeater.find('.actions-column-wrapper tr:nth-child(' + index + ')');\r\n            var $checkBox = $repeater.find('.frozen-column-wrapper tr:nth-child(' + index + ') .checkbox-inline');\r\n\r\n            if ($item.is('.selected')) {\r\n                $item.removeClass('selected');\r\n                if (isMulti) {\r\n                    $checkBox.click();\r\n                    $frozenRow.removeClass('selected');\r\n                    if (isActions) {\r\n                        $actionsRow.removeClass('selected');\r\n                    }\r\n                } else {\r\n                    $item.find('.repeater-table-check').remove();\r\n                }\r\n\r\n                $repeater.trigger('deselected.lark.repeaterList', $item);\r\n            } else {\r\n                if (!isMulti) {\r\n                    repeater.$canvas.find('.repeater-table-check').remove();\r\n                    repeater.$canvas.find('.repeater-table tbody tr.selected').each(function deslectRow () {\r\n                        $(this).removeClass('selected');\r\n                        $repeater.trigger('deselected.lark.repeaterList', $(this));\r\n                    });\r\n                    $item.find('td:first').prepend('<div class=\"repeater-table-check\"><span class=\"glyphicon glyphicon-ok\"></span></div>');\r\n                    $item.addClass('selected');\r\n                    $frozenRow.addClass('selected');\r\n                } else {\r\n                    $checkBox.click();\r\n                    $item.addClass('selected');\r\n                    $frozenRow.addClass('selected');\r\n                    if (isActions) {\r\n                        $actionsRow.addClass('selected');\r\n                    }\r\n                }\r\n                $repeater.trigger('selected.lark.repeaterList', $item);\r\n            }\r\n\r\n            toggleActionsHeaderButton.call(repeater);\r\n        }\r\n    };\r\n\r\n    var renderRow = function renderRow ($tbody, rows, index) {\r\n        var $row = $('<tr></tr>');\r\n\r\n        if (this.options.selectable) {\r\n            $row.data('item_data', rows[index]);\r\n\r\n            if (this.options.selectable !== 'action') {\r\n                $row.addClass('selectable');\r\n                $row.attr('tabindex', 0);   // allow items to be tabbed to / focused on\r\n\r\n                var repeater = this;\r\n                $row.on('click.lark.repeaterList', function callOnClickRowRepeaterList() {\r\n                    onClickRowRepeaterList.call(this, repeater);\r\n                });\r\n\r\n                // allow selection via enter key\r\n                $row.keyup(function onRowKeyup (e) {\r\n                    if (e.keyCode === 13) {\r\n                        // triggering a standard click event to be caught by the row click handler above\r\n                        $row.trigger('click.lark.repeaterList');\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.options.actions && !this.options.selectable) {\r\n            $row.data('item_data', rows[index]);\r\n        }\r\n\r\n        var columns = [];\r\n        for (var i = 0, length = this.columns.length; i < length; i++) {\r\n            columns.push(renderColumn.call(this, $row, rows, index, this.columns, i));\r\n        }\r\n\r\n        $tbody.append($row);\r\n\r\n        if (this.options.columnRendered) {\r\n            for (var columnIndex = 0, colLength = columns.length; columnIndex < colLength; columnIndex++) {\r\n                if (!(this.columns[columnIndex].property === '@_CHECKBOX_@' || this.columns[columnIndex].property === '@_ACTIONS_@')) {\r\n                    this.options.columnRendered({\r\n                        container: $row,\r\n                        columnAttr: this.columns[columnIndex].property,\r\n                        item: columns[columnIndex],\r\n                        rowData: rows[index]\r\n                    }, function noop () {});\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.options.rowRendered) {\r\n            this.options.rowRendered({\r\n                container: $tbody,\r\n                item: $row,\r\n                rowData: rows[index]\r\n            }, function noop () {});\r\n        }\r\n    };\r\n\r\n    var renderTbody = function renderTbody ($table, data) {\r\n        var $tbody = $table.find('tbody');\r\n        var $empty;\r\n\r\n        if ($tbody.length < 1) {\r\n            $tbody = $('<tbody data-container=\"true\"></tbody>');\r\n            $table.append($tbody);\r\n        }\r\n\r\n        if (typeof data.error === 'string' && data.error.length > 0) {\r\n            $empty = $('<tr class=\"empty text-danger\"><td colspan=\"' + this.columns.length + '\"></td></tr>');\r\n            $empty.find('td').append(data.error);\r\n            $tbody.append($empty);\r\n        } else if (data.items && data.items.length < 1) {\r\n            $empty = $('<tr class=\"empty\"><td colspan=\"' + this.columns.length + '\"></td></tr>');\r\n            $empty.find('td').append(this.options.noItemsHTML);\r\n            $tbody.append($empty);\r\n        }\r\n    };\r\n\r\n    var renderThead = function renderThead ($table, data) {\r\n        var columns = data.columns || [];\r\n        var $thead = $table.find('thead');\r\n        var i;\r\n        var length;\r\n        var $tr;\r\n\r\n        if (this.firstRender || areDifferentColumns(this.columns, columns) || $thead.length === 0) {\r\n            $thead.remove();\r\n\r\n            // noItems is set in `before` method\r\n\r\n            if (this.options.selectable === 'multi' && !this.noItems) {\r\n                var checkboxColumn = {\r\n                    label: 'c',\r\n                    property: '@_CHECKBOX_@',\r\n                    sortable: false\r\n                };\r\n                columns.splice(0, 0, checkboxColumn);\r\n            }\r\n\r\n            this.columns = columns;\r\n            this.firstRender = false;\r\n            this.repeater.$loader.removeClass('noHeader');\r\n\r\n            // keep action column header even when empty, you'll need it later....\r\n            if (this.options.actions) {\r\n                var actionsColumn = {\r\n                    label: this.options.actions.label || '<span class=\"actions-hidden\">a</span>',\r\n                    property: '@_ACTIONS_@',\r\n                    sortable: false,\r\n                    width: this.actions_width\r\n                };\r\n                columns.push(actionsColumn);\r\n            }\r\n\r\n\r\n            $thead = $('<thead data-preserve=\"deep\"><tr></tr></thead>');\r\n            $tr = $thead.find('tr');\r\n            for (i = 0, length = columns.length; i < length; i++) {\r\n                renderHeader.call(this, $tr, columns, i);\r\n            }\r\n            $table.prepend($thead);\r\n\r\n            if (this.options.selectable === 'multi' && !this.noItems) {\r\n                // after checkbox column is created need to get width of checkbox column from\r\n                // its css class\r\n                var checkboxWidth = this.repeater.$element.find('.repeater-table-wrapper .header-checkbox').outerWidth();\r\n                var selectColumn = $.grep(columns, function grepColumn (column) {\r\n                    return column.property === '@_CHECKBOX_@';\r\n                })[0];\r\n                selectColumn.width = checkboxWidth;\r\n            }\r\n            sizeColumns.call(this, $tr);\r\n        }\r\n    };\r\n\r\n    var sizeColumns = function sizeColumns ($tr) {\r\n        var automaticallyGeneratedWidths = [];\r\n        var self = this;\r\n        var i;\r\n        var length;\r\n        var newWidth;\r\n        var widthTaken;\r\n\r\n        if (this.options.columnSizing) {\r\n            i = 0;\r\n            widthTaken = 0;\r\n            $tr.find('th').each(function eachTH () {\r\n                var $th = $(this);\r\n                var width;\r\n                if (self.columns[i].width !== undefined) {\r\n                    width = self.columns[i].width;\r\n                    $th.outerWidth(width);\r\n                    widthTaken += $th.outerWidth();\r\n                    self.columns[i]._auto_width = width;\r\n                } else {\r\n                    var outerWidth = $th.find('.repeater-table-heading').outerWidth();\r\n                    automaticallyGeneratedWidths.push({\r\n                        col: $th,\r\n                        index: i,\r\n                        minWidth: outerWidth\r\n                    });\r\n                }\r\n\r\n                i++;\r\n            });\r\n\r\n            length = automaticallyGeneratedWidths.length;\r\n            if (length > 0) {\r\n                var canvasWidth = this.repeater.$canvas.find('.repeater-table-wrapper').outerWidth();\r\n                newWidth = Math.floor((canvasWidth - widthTaken) / length);\r\n                for (i = 0; i < length; i++) {\r\n                    if (automaticallyGeneratedWidths[i].minWidth > newWidth) {\r\n                        newWidth = automaticallyGeneratedWidths[i].minWidth;\r\n                    }\r\n                    automaticallyGeneratedWidths[i].col.outerWidth(newWidth);\r\n                    this.columns[automaticallyGeneratedWidths[i].index]._auto_width = newWidth;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    var specialBrowserClass = function specialBrowserClass () {\r\n        var ua = window.navigator.userAgent;\r\n        var msie = ua.indexOf('MSIE ');\r\n        var firefox = ua.indexOf('Firefox');\r\n\r\n        if (msie > 0 ) {\r\n            return 'ie-' + parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\r\n        } else if (firefox > 0) {\r\n            return 'firefox';\r\n        }\r\n\r\n        return '';\r\n    };\r\n\r\n    var toggleActionsHeaderButton = function toggleActionsHeaderButton () {\r\n        var selectedSelector = '.repeater-table-wrapper > table .selected';\r\n        var $actionsColumn = this.repeater.$element.find('.table-actions');\r\n        var $selected;\r\n\r\n        if (this.options.selectable === 'action') {\r\n            selectedSelector = '.repeater-table-wrapper > table tr';\r\n        }\r\n\r\n        $selected = this.repeater.$canvas.find( selectedSelector );\r\n\r\n        if ($selected.length > 0) {\r\n            $actionsColumn.find('thead .btn').removeAttr('disabled');\r\n        } else {\r\n            $actionsColumn.find('thead .btn').attr('disabled', 'disabled');\r\n        }\r\n    };\r\n\r\n\r\n     views[\"table\"] = {\r\n        name : \"table\",\r\n        ctor : TableView\r\n    }; \r\n\r\n    return TableView;\r\n\r\n});\ndefine('skylark-widgets-repeater/views/TileView',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-query\",\r\n    \"../views\",   \r\n    \"./ViewBase\"\r\n], function(langx, browser, eventer, noder, geom, $, views, ViewBase) {\r\n\r\n\r\n  var TileView = ViewBase.inherit({\r\n    klassName : \"TileView\",\r\n\r\n    options: {\r\n        alignment: 'left',\r\n        infiniteScroll: false,\r\n        itemRendered: null,\r\n        noItemsHTML: 'no items found',\r\n        selectable: false,\r\n        template : '<div class=\"clearfix repeater-tile\" data-container=\"true\" data-infinite=\"true\" data-preserve=\"shallow\"></div>',\r\n        item : {\r\n            template: '<div class=\"thumbnail repeater-thumbnail\"><img height=\"75\" src=\"{{src}}\" width=\"65\"><span>{{name}}</span></div>'\r\n        }\r\n    },\r\n\r\n    //ADDITIONAL METHODS\r\n    clearSelectedItems : function() {\r\n        this.repeater.$canvas.find('.repeater-tile .selectable.selected').removeClass('selected');\r\n    },\r\n\r\n    getSelectedItems : function() {\r\n        var selected = [];\r\n        this.repeater.$canvas.find('.repeater-tile .selectable.selected').each(function() {\r\n            selected.push($(this));\r\n        });\r\n        return selected;\r\n    },\r\n\r\n    setSelectedItems : function(items, force) {\r\n        var selectable = this.options.selectable;\r\n        var self = this;\r\n        var i, $item, l, n;\r\n\r\n        //this function is necessary because lint yells when a function is in a loop\r\n        function compareItemIndex() {\r\n            if (n === items[i].index) {\r\n                $item = $(this);\r\n                return false;\r\n            } else {\r\n                n++;\r\n            }\r\n        }\r\n\r\n        //this function is necessary because lint yells when a function is in a loop\r\n        function compareItemSelector() {\r\n            $item = $(this);\r\n            if ($item.is(items[i].selector)) {\r\n                selectItem($item, items[i].selected);\r\n            }\r\n        }\r\n\r\n        function selectItem($itm, select) {\r\n            select = (select !== undefined) ? select : true;\r\n            if (select) {\r\n                if (!force && selectable !== 'multi') {\r\n                    self.thumbnail_clearSelectedItems();\r\n                }\r\n\r\n                $itm.addClass('selected');\r\n            } else {\r\n                $itm.removeClass('selected');\r\n            }\r\n        }\r\n\r\n        if (!langx.isArray(items)) {\r\n            items = [items];\r\n        }\r\n\r\n        if (force === true || selectable === 'multi') {\r\n            l = items.length;\r\n        } else if (selectable) {\r\n            l = (items.length > 0) ? 1 : 0;\r\n        } else {\r\n            l = 0;\r\n        }\r\n\r\n        for (i = 0; i < l; i++) {\r\n            if (items[i].index !== undefined) {\r\n                $item = $();\r\n                n = 0;\r\n                this.repeater.$canvas.find('.repeater-tile .selectable').each(compareItemIndex);\r\n                if ($item.length > 0) {\r\n                    selectItem($item, items[i].selected);\r\n                }\r\n\r\n            } else if (items[i].selector) {\r\n                this.repeater.$canvas.find('.repeater-tile .selectable').each(compareItemSelector);\r\n            }\r\n        }\r\n    },\r\n\r\n    selected: function() {\r\n        var infScroll = this.options.infiniteScroll;\r\n        var opts;\r\n        if (infScroll) {\r\n            opts = (typeof infScroll === 'object') ? infScroll : {};\r\n            this.infiniteScrolling(true, opts);\r\n        }\r\n    },\r\n    before: function(helpers) {\r\n        var alignment = this.options.alignment;\r\n        var $cont = this.repeater.$canvas.find('.repeater-tile');\r\n        var data = helpers.data;\r\n        var response = {};\r\n        var $empty, validAlignments;\r\n\r\n        if ($cont.length < 1) {\r\n            $cont = $(this.options.template);\r\n            if (alignment && alignment !== 'none') {\r\n                validAlignments = {\r\n                    'center': 1,\r\n                    'justify': 1,\r\n                    'left': 1,\r\n                    'right': 1\r\n                };\r\n                alignment = (validAlignments[alignment]) ? alignment : 'justify';\r\n                $cont.addClass('align-' + alignment);\r\n                this.thumbnail_injectSpacers = true;\r\n            } else {\r\n                this.thumbnail_injectSpacers = false;\r\n            }\r\n            response.item = $cont;\r\n        } else {\r\n            response.action = 'none';\r\n        }\r\n\r\n        if (data.items && data.items.length < 1) {\r\n            $empty = $('<div class=\"empty\"></div>');\r\n            $empty.append(this.options.noItemsHTML);\r\n            $cont.append($empty);\r\n        } else {\r\n            $cont.find('.empty:first').remove();\r\n        }\r\n\r\n        return response;\r\n    },\r\n    renderItem: function(helpers) {\r\n        var selectable = this.options.selectable;\r\n        var selected = 'selected';\r\n        var self = this;\r\n        var $thumbnail = this._create$Item(this.options.item.template,helpers.subset[helpers.index]);\r\n\r\n        $thumbnail.data('item_data', helpers.data.items[helpers.index]);\r\n\r\n        if (selectable) {\r\n            $thumbnail.addClass('selectable');\r\n            $thumbnail.on('click', function() {\r\n                if (self.isDisabled) return;\r\n\r\n                if (!$thumbnail.hasClass(selected)) {\r\n                    if (selectable !== 'multi') {\r\n                        self.repeater.$canvas.find('.repeater-tile .selectable.selected').each(function() {\r\n                            var $itm = $(this);\r\n                            $itm.removeClass(selected);\r\n                            self.repeater.$element.trigger('deselected.lark.repeaterThumbnail', $itm);\r\n                        });\r\n                    }\r\n\r\n                    $thumbnail.addClass(selected);\r\n                    self.repeater.$element.trigger('selected.lark.repeaterThumbnail', $thumbnail);\r\n                } else {\r\n                    $thumbnail.removeClass(selected);\r\n                    self.repeater.$element.trigger('deselected.lark.repeaterThumbnail', $thumbnail);\r\n                }\r\n            });\r\n        }\r\n\r\n        helpers.container.append($thumbnail);\r\n        if (this.thumbnail_injectSpacers) {\r\n            $thumbnail.after('<span class=\"spacer\">&nbsp;</span>');\r\n        }\r\n\r\n        if (this.options.itemRendered) {\r\n            this.options.itemRendered({\r\n                container: helpers.container,\r\n                item: $thumbnail,\r\n                itemData: helpers.subset[helpers.index]\r\n            }, function() {});\r\n        }\r\n\r\n        return false;\r\n    }\r\n    \r\n  });\r\n\r\n\r\n    views[\"tile\"] = {\r\n        name : \"tile\",\r\n        ctor : TileView\r\n    };\r\n\r\n    return TileView;\r\n    \r\n});\ndefine('skylark-widgets-repeater/main',[\r\n    \"./Repeater\",\r\n    \"./views\",\r\n    \"./views/ViewBase\",\r\n    \"./views/ListView\",\r\n    \"./views/SliderView\",\r\n    \"./views/TableView\",\r\n    \"./views/TileView\"\r\n], function(Repeater) {\r\n    return Repeater;\r\n});\ndefine('skylark-widgets-repeater', ['skylark-widgets-repeater/main'], function (main) { return main; });\n\n"]}