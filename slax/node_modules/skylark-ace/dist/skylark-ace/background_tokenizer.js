/**
 * skylark-ace - A version of ace v1.4.3 that ported to running on skylarkjs.
 * @author Hudaokeji Co.,Ltd
 * @version v0.9.0
 * @link www.skylarkjs.org
 * @license MIT
 */
define(function(t,i,e){"use strict";var n=t("./lib/oop"),s=t("./lib/event_emitter").EventEmitter,r=function(t,i){this.running=!1,this.lines=[],this.states=[],this.currentLine=0,this.tokenizer=t;var e=this;this.$worker=function(){if(e.running){for(var t=new Date,i=e.currentLine,n=-1,s=e.doc,r=i;e.lines[i];)i++;var h=s.getLength(),o=0;for(e.running=!1;i<h;){e.$tokenizeRow(i),n=i;do{i++}while(e.lines[i]);if(++o%5==0&&new Date-t>20){e.running=setTimeout(e.$worker,20);break}}e.currentLine=i,-1==n&&(n=i),r<=n&&e.fireUpdateEvent(r,n)}}};(function(){n.implement(this,s),this.setTokenizer=function(t){this.tokenizer=t,this.lines=[],this.states=[],this.start(0)},this.setDocument=function(t){this.doc=t,this.lines=[],this.states=[],this.stop()},this.fireUpdateEvent=function(t,i){var e={first:t,last:i};this._signal("update",{data:e})},this.start=function(t){this.currentLine=Math.min(t||0,this.currentLine,this.doc.getLength()),this.lines.splice(this.currentLine,this.lines.length),this.states.splice(this.currentLine,this.states.length),this.stop(),this.running=setTimeout(this.$worker,700)},this.scheduleStart=function(){this.running||(this.running=setTimeout(this.$worker,700))},this.$updateOnChange=function(t){var i=t.start.row,e=t.end.row-i;if(0===e)this.lines[i]=null;else if("remove"==t.action)this.lines.splice(i,e+1,null),this.states.splice(i,e+1,null);else{var n=Array(e+1);n.unshift(i,1),this.lines.splice.apply(this.lines,n),this.states.splice.apply(this.states,n)}this.currentLine=Math.min(i,this.currentLine,this.doc.getLength()),this.stop()},this.stop=function(){this.running&&clearTimeout(this.running),this.running=!1},this.getTokens=function(t){return this.lines[t]||this.$tokenizeRow(t)},this.getState=function(t){return this.currentLine==t&&this.$tokenizeRow(t),this.states[t]||"start"},this.$tokenizeRow=function(t){var i=this.doc.getLine(t),e=this.states[t-1],n=this.tokenizer.getLineTokens(i,e,t);return this.states[t]+""!=n.state+""?(this.states[t]=n.state,this.lines[t+1]=null,this.currentLine>t+1&&(this.currentLine=t+1)):this.currentLine==t&&(this.currentLine=t+1),this.lines[t]=n.tokens}}).call(r.prototype),i.BackgroundTokenizer=r});
//# sourceMappingURL=sourcemaps/background_tokenizer.js.map
