/**
 * skylark-ace - A version of ace v1.4.3 that ported to running on skylarkjs.
 * @author Hudaokeji Co.,Ltd
 * @version v0.9.0
 * @link www.skylarkjs.org
 * @license MIT
 */
define(function(require,exports,module){"use strict";var t=require("../range").Range;function n(n,o){this.foldData=n,Array.isArray(o)?this.folds=o:o=this.folds=[o];var r=o[o.length-1];this.range=new t(o[0].start.row,o[0].start.column,r.end.row,r.end.column),this.start=this.range.start,this.end=this.range.end,this.folds.forEach(function(t){t.setFoldLine(this)},this)}(function(){this.shiftRow=function(t){this.start.row+=t,this.end.row+=t,this.folds.forEach(function(n){n.start.row+=t,n.end.row+=t})},this.addFold=function(t){if(t.sameRow){if(t.start.row<this.startRow||t.endRow>this.endRow)throw new Error("Can't add a fold to this FoldLine as it has no connection");this.folds.push(t),this.folds.sort(function(t,n){return-t.range.compareEnd(n.start.row,n.start.column)}),this.range.compareEnd(t.start.row,t.start.column)>0?(this.end.row=t.end.row,this.end.column=t.end.column):this.range.compareStart(t.end.row,t.end.column)<0&&(this.start.row=t.start.row,this.start.column=t.start.column)}else if(t.start.row==this.end.row)this.folds.push(t),this.end.row=t.end.row,this.end.column=t.end.column;else{if(t.end.row!=this.start.row)throw new Error("Trying to add fold to FoldRow that doesn't have a matching row");this.folds.unshift(t),this.start.row=t.start.row,this.start.column=t.start.column}t.foldLine=this},this.containsRow=function(t){return t>=this.start.row&&t<=this.end.row},this.walk=function(t,n,o){var r,s,i=0,e=this.folds,a=!0;null==n&&(n=this.end.row,o=this.end.column);for(var l=0;l<e.length;l++){if(-1==(s=(r=e[l]).range.compareStart(n,o)))return void t(null,n,o,i,a);if(!t(null,r.start.row,r.start.column,i,a)&&t(r.placeholder,r.start.row,r.start.column,i)||0===s)return;a=!r.sameRow,i=r.end.column}t(null,n,o,i,a)},this.getNextFoldTo=function(t,n){for(var o,r,s=0;s<this.folds.length;s++){if(-1==(r=(o=this.folds[s]).range.compareEnd(t,n)))return{fold:o,kind:"after"};if(0===r)return{fold:o,kind:"inside"}}return null},this.addRemoveChars=function(t,n,o){var r,s,i=this.getNextFoldTo(t,n);if(i)if(r=i.fold,"inside"==i.kind&&r.start.column!=n&&r.start.row!=t)window.console&&window.console.log(t,n,r);else if(r.start.row==t){var e=(s=this.folds).indexOf(r);for(0===e&&(this.start.column+=o);e<s.length;e++){if((r=s[e]).start.column+=o,!r.sameRow)return;r.end.column+=o}this.end.column+=o}},this.split=function(t,o){var r=this.getNextFoldTo(t,o);if(!r||"inside"==r.kind)return null;var s=r.fold,i=this.folds,e=this.foldData,a=i.indexOf(s),l=i[a-1];this.end.row=l.end.row,this.end.column=l.end.column;var d=new n(e,i=i.splice(a,i.length-a));return e.splice(e.indexOf(this)+1,0,d),d},this.merge=function(t){for(var n=t.folds,o=0;o<n.length;o++)this.addFold(n[o]);var r=this.foldData;r.splice(r.indexOf(t),1)},this.toString=function(){var t=[this.range.toString()+": ["];return this.folds.forEach(function(n){t.push("  "+n.toString())}),t.push("]"),t.join("\n")},this.idxToPosition=function(t){for(var n=0,o=0;o<this.folds.length;o++){var r=this.folds[o];if((t-=r.start.column-n)<0)return{row:r.start.row,column:r.start.column+t};if((t-=r.placeholder.length)<0)return r.start;n=r.end.column}return{row:this.end.row,column:this.end.column+t}}}).call(n.prototype),exports.FoldLine=n});
//# sourceMappingURL=../sourcemaps/edit_session/fold_line.js.map
