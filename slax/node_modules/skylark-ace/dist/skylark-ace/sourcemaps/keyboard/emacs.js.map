{"version":3,"sources":["keyboard/emacs.js"],"names":["define","require","exports","module","dom","iSearchCommandModule","HashHandler","handler","isEmacs","$id","$formerLongWords","$formerLineStart","initialized","attach","editor","importCssString","session","$selectLongWords","$useEmacsStyleLineStart","$emacsMark","$emacsMarkRing","emacsMark","this","setEmacsMark","p","pushEmacsMark","activate","prevMark","push","popEmacsMark","mark","pop","getLastEmacsMark","slice","emacsMarkForSelection","replacement","sel","selection","multiRangeLength","multiSelect","getAllRanges","length","selIndex","index","markRing","markIndex","lastMark","anchor","splice","undefined","on","$resetMarkMode","$kbSessionChange","renderer","$blockCursor","setStyle","commands","addCommands","platform","$emacsModeHandler","addEventListener","onCopy","onPaste","detach","removeEventListener","unsetStyle","removeCommands","e","oldSession","hasOwnProperty","keys","KEY_MODS","eMods","C","S","M","CMD","forEach","c","hashId","split","toLowerCase","$handlesEmacsOnCopy","killRingSave","exec","getCursorPosition","bindKey","key","command","ckb","commandKeyBinding","keyPart","reduce","keyMapKeys","i","prefix","concat","getStatusText","data","str","count","keyChain","handleKeyboard","keyCode","_signal","Array","join","args","modifier","parseInt","isNaN","Math","max","readOnly","isYank","lastCommand","handlesCount","multiSelectAction","emacsKeys","Up|C-p","Down|C-n","Left|C-b","Right|C-f","C-Left|M-b","C-Right|M-f","Home|C-a","End|C-e","C-Home|S-M-,","C-End|S-M-.","S-Up|S-C-p","S-Down|S-C-n","S-Left|S-C-b","S-Right|S-C-f","S-C-Left|S-M-b","S-C-Right|S-M-f","S-Home|S-C-a","S-End|S-C-e","S-C-Home","S-C-End","C-l","M-s","M-g","C-x C-p","C-Down","C-Up","PageDown|C-v","PageUp|M-v","S-C-Down","S-C-Up","C-s","C-r","M-C-s","M-C-r","S-M-5","Backspace","Delete|C-d","Return|C-m","C-o","M-d|C-Delete","C-Backspace|M-Backspace|M-Delete","C-k","C-y|S-Delete","M-y","C-g","C-w|C-S-W","M-w","C-Space","C-x C-x","C-t","M-u","M-l","M-/","C-u","M-;","C-/|C-x u|S-C--|C-z","S-C-/|S-C-x u|C--|S-C-z","C-x r","M-x","bindKeys","recenterTopBottom","pos","$cursorLayer","getPixelPosition","h","$size","scrollerHeight","lineHeight","scrollTop","abs","top","setScrollTop","selectRectangularRegion","toggleBlockSelection","setMark","inMultiSelectMode","forEachSelection","moveToMark","ranges","rangePositions","map","r","row","start","column","hasNoSelection","every","range","isEmpty","clearSelection","bind","moveCursorToPosition","exchangePointAndMark","lead","selectToPosition","setSelectionRange","getRange","isBackwards","killWord","dir","selectWordLeft","selectWordRight","getSelectionRange","text","getTextRange","killRing","add","remove","killLine","line","getLine","end","substr","foldLine","getFoldLine","test","prevOp","append","yank","get","keyBinding","$data","yankRotate","undo","rotate","killRegion","getCopyText","byName","cut","marks","deselectedMarks","setTimeout","deselect","reverse","keyboardQuit","focusCommandLine","arg","showCommandLine","iSearchStartCommands","shift","idx","n","unshift"],"mappings":"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","file":"../../keyboard/emacs.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2010, Ajax.org B.V.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\ndefine(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar dom = require(\"../lib/dom\");\r\nrequire(\"../incremental_search\");\r\nvar iSearchCommandModule = require(\"../commands/incremental_search_commands\");\r\n\r\n\r\nvar HashHandler = require(\"./hash_handler\").HashHandler;\r\nexports.handler = new HashHandler();\r\n\r\nexports.handler.isEmacs = true;\r\nexports.handler.$id = \"ace/keyboard/emacs\";\r\n\r\nvar initialized = false;\r\nvar $formerLongWords;\r\nvar $formerLineStart;\r\n\r\nexports.handler.attach = function(editor) {\r\n    if (!initialized) {\r\n        initialized = true;\r\n        dom.importCssString('\\\r\n            .emacs-mode .ace_cursor{\\\r\n                border: 1px rgba(50,250,50,0.8) solid!important;\\\r\n                box-sizing: border-box!important;\\\r\n                background-color: rgba(0,250,0,0.9);\\\r\n                opacity: 0.5;\\\r\n            }\\\r\n            .emacs-mode .ace_hidden-cursors .ace_cursor{\\\r\n                opacity: 1;\\\r\n                background-color: transparent;\\\r\n            }\\\r\n            .emacs-mode .ace_overwrite-cursors .ace_cursor {\\\r\n                opacity: 1;\\\r\n                background-color: transparent;\\\r\n                border-width: 0 0 2px 2px !important;\\\r\n            }\\\r\n            .emacs-mode .ace_text-layer {\\\r\n                z-index: 4\\\r\n            }\\\r\n            .emacs-mode .ace_cursor-layer {\\\r\n                z-index: 2\\\r\n            }', 'emacsMode'\r\n        );\r\n    }\r\n    // in emacs, gotowordleft/right should not count a space as a word..\r\n    $formerLongWords = editor.session.$selectLongWords;\r\n    editor.session.$selectLongWords = true;\r\n    // CTRL-A should go to actual beginning of line\r\n    $formerLineStart = editor.session.$useEmacsStyleLineStart;\r\n    editor.session.$useEmacsStyleLineStart = true;\r\n\r\n    editor.session.$emacsMark = null; // the active mark\r\n    editor.session.$emacsMarkRing = editor.session.$emacsMarkRing || [];\r\n\r\n    editor.emacsMark = function() {\r\n        return this.session.$emacsMark;\r\n    };\r\n\r\n    editor.setEmacsMark = function(p) {\r\n        // to deactivate pass in a falsy value\r\n        this.session.$emacsMark = p;\r\n    };\r\n\r\n    editor.pushEmacsMark = function(p, activate) {\r\n        var prevMark = this.session.$emacsMark;\r\n        if (prevMark)\r\n            this.session.$emacsMarkRing.push(prevMark);\r\n        if (!p || activate) this.setEmacsMark(p);\r\n        else this.session.$emacsMarkRing.push(p);\r\n    };\r\n\r\n    editor.popEmacsMark = function() {\r\n        var mark = this.emacsMark();\r\n        if (mark) { this.setEmacsMark(null); return mark; }\r\n        return this.session.$emacsMarkRing.pop();\r\n    };\r\n\r\n    editor.getLastEmacsMark = function(p) {\r\n        return this.session.$emacsMark || this.session.$emacsMarkRing.slice(-1)[0];\r\n    };\r\n\r\n    editor.emacsMarkForSelection = function(replacement) {\r\n        // find the mark in $emacsMarkRing corresponding to the current\r\n        // selection\r\n        var sel = this.selection,\r\n            multiRangeLength = this.multiSelect ?\r\n                this.multiSelect.getAllRanges().length : 1,\r\n            selIndex = sel.index || 0,\r\n            markRing = this.session.$emacsMarkRing,\r\n            markIndex = markRing.length - (multiRangeLength - selIndex),\r\n            lastMark = markRing[markIndex] || sel.anchor;\r\n        if (replacement) {\r\n            markRing.splice(markIndex, 1,\r\n                \"row\" in replacement && \"column\" in replacement ?\r\n                    replacement : undefined);\r\n        }\r\n        return lastMark;\r\n    };\r\n\r\n    editor.on(\"click\", $resetMarkMode);\r\n    editor.on(\"changeSession\", $kbSessionChange);\r\n    editor.renderer.$blockCursor = true;\r\n    editor.setStyle(\"emacs-mode\");\r\n    editor.commands.addCommands(commands);\r\n    exports.handler.platform = editor.commands.platform;\r\n    editor.$emacsModeHandler = this;\r\n    editor.addEventListener('copy', this.onCopy);\r\n    editor.addEventListener('paste', this.onPaste);\r\n};\r\n\r\nexports.handler.detach = function(editor) {\r\n    editor.renderer.$blockCursor = false;\r\n    editor.session.$selectLongWords = $formerLongWords;\r\n    editor.session.$useEmacsStyleLineStart = $formerLineStart;\r\n    editor.removeEventListener(\"click\", $resetMarkMode);\r\n    editor.removeEventListener(\"changeSession\", $kbSessionChange);\r\n    editor.unsetStyle(\"emacs-mode\");\r\n    editor.commands.removeCommands(commands);\r\n    editor.removeEventListener('copy', this.onCopy);\r\n    editor.removeEventListener('paste', this.onPaste);\r\n    editor.$emacsModeHandler = null;\r\n};\r\n\r\nvar $kbSessionChange = function(e) {\r\n    if (e.oldSession) {\r\n        e.oldSession.$selectLongWords = $formerLongWords;\r\n        e.oldSession.$useEmacsStyleLineStart = $formerLineStart;\r\n    }\r\n\r\n    $formerLongWords = e.session.$selectLongWords;\r\n    e.session.$selectLongWords = true;\r\n    $formerLineStart = e.session.$useEmacsStyleLineStart;\r\n    e.session.$useEmacsStyleLineStart = true;\r\n\r\n    if (!e.session.hasOwnProperty('$emacsMark'))\r\n        e.session.$emacsMark = null;\r\n    if (!e.session.hasOwnProperty('$emacsMarkRing'))\r\n        e.session.$emacsMarkRing = [];\r\n};\r\n\r\nvar $resetMarkMode = function(e) {\r\n    e.editor.session.$emacsMark = null;\r\n};\r\n\r\nvar keys = require(\"../lib/keys\").KEY_MODS;\r\nvar eMods = {C: \"ctrl\", S: \"shift\", M: \"alt\", CMD: \"command\"};\r\nvar combinations = [\"C-S-M-CMD\",\r\n                    \"S-M-CMD\", \"C-M-CMD\", \"C-S-CMD\", \"C-S-M\",\r\n                    \"M-CMD\", \"S-CMD\", \"S-M\", \"C-CMD\", \"C-M\", \"C-S\",\r\n                    \"CMD\", \"M\", \"S\", \"C\"];\r\ncombinations.forEach(function(c) {\r\n    var hashId = 0;\r\n    c.split(\"-\").forEach(function(c) {\r\n        hashId = hashId | keys[eMods[c]];\r\n    });\r\n    eMods[hashId] = c.toLowerCase() + \"-\";\r\n});\r\n\r\nexports.handler.onCopy = function(e, editor) {\r\n    if (editor.$handlesEmacsOnCopy) return;\r\n    editor.$handlesEmacsOnCopy = true;\r\n    exports.handler.commands.killRingSave.exec(editor);\r\n    editor.$handlesEmacsOnCopy = false;\r\n};\r\n\r\nexports.handler.onPaste = function(e, editor) {\r\n    editor.pushEmacsMark(editor.getCursorPosition());\r\n};\r\n\r\nexports.handler.bindKey = function(key, command) {\r\n    if (typeof key == \"object\")\r\n        key = key[this.platform];\r\n    if (!key)\r\n        return;\r\n\r\n    var ckb = this.commandKeyBinding;\r\n    key.split(\"|\").forEach(function(keyPart) {\r\n        keyPart = keyPart.toLowerCase();\r\n        ckb[keyPart] = command;\r\n        // register all partial key combos as null commands\r\n        // to be able to activate key combos with arbitrary length\r\n        // Example: if keyPart is \"C-c C-l t\" then \"C-c C-l t\" will\r\n        // get command assigned and \"C-c\" and \"C-c C-l\" will get\r\n        // a null command assigned in this.commandKeyBinding. For\r\n        // the lookup logic see handleKeyboard()\r\n        var keyParts = keyPart.split(\" \").slice(0,-1);\r\n        keyParts.reduce(function(keyMapKeys, keyPart, i) {\r\n            var prefix = keyMapKeys[i-1] ? keyMapKeys[i-1] + ' ' : '';\r\n            return keyMapKeys.concat([prefix + keyPart]);\r\n        }, []).forEach(function(keyPart) {\r\n            if (!ckb[keyPart]) ckb[keyPart] = \"null\";\r\n        });\r\n    }, this);\r\n};\r\n\r\nexports.handler.getStatusText = function(editor, data) {\r\n  var str = \"\";\r\n  if (data.count)\r\n    str += data.count;\r\n  if (data.keyChain)\r\n    str += \" \" + data.keyChain;\r\n  return str;\r\n};\r\n\r\nexports.handler.handleKeyboard = function(data, hashId, key, keyCode) {\r\n    // if keyCode == -1 a non-printable key was pressed, such as just\r\n    // control. Handling those is currently not supported in this handler\r\n    if (keyCode === -1) return undefined;\r\n\r\n    var editor = data.editor;\r\n    editor._signal(\"changeStatus\");\r\n    // insertstring data.count times\r\n    if (hashId == -1) {\r\n        editor.pushEmacsMark();\r\n        if (data.count) {\r\n            var str = new Array(data.count + 1).join(key);\r\n            data.count = null;\r\n            return {command: \"insertstring\", args: str};\r\n        }\r\n    }\r\n\r\n    var modifier = eMods[hashId];\r\n\r\n    // CTRL + number / universalArgument for setting data.count\r\n    if (modifier == \"c-\" || data.count) {\r\n        var count = parseInt(key[key.length - 1]);\r\n        if (typeof count === 'number' && !isNaN(count)) {\r\n            data.count = Math.max(data.count, 0) || 0;\r\n            data.count = 10 * data.count + count;\r\n            return {command: \"null\"};\r\n        }\r\n    }\r\n\r\n    // this.commandKeyBinding maps key specs like \"c-p\" (for CTRL + P) to\r\n    // command objects, for lookup key needs to include the modifier\r\n    if (modifier) key = modifier + key;\r\n\r\n    // Key combos like CTRL+X H build up the data.keyChain\r\n    if (data.keyChain) key = data.keyChain += \" \" + key;\r\n\r\n    // Key combo prefixes get stored as \"null\" (String!) in this\r\n    // this.commandKeyBinding. When encountered no command is invoked but we\r\n    // buld up data.keyChain\r\n    var command = this.commandKeyBinding[key];\r\n    data.keyChain = command == \"null\" ? key : \"\";\r\n\r\n    // there really is no command\r\n    if (!command) return undefined;\r\n\r\n    // we pass b/c of key combo or universalArgument\r\n    if (command === \"null\") return {command: \"null\"};\r\n\r\n    if (command === \"universalArgument\") {\r\n        // if no number pressed emacs repeats action 4 times.\r\n        // minus sign is needed to allow next keypress to replace it\r\n        data.count = -4;\r\n        return {command: \"null\"};\r\n    }\r\n\r\n    // lookup command\r\n    // TODO extract special handling of markmode\r\n    // TODO special case command.command is really unnecessary, remove\r\n    var args;\r\n    if (typeof command !== \"string\") {\r\n        args = command.args;\r\n        if (command.command) command = command.command;\r\n        if (command === \"goorselect\") {\r\n            command = editor.emacsMark() ? args[1] : args[0];\r\n            args = null;\r\n        }\r\n    }\r\n\r\n    if (typeof command === \"string\") {\r\n        if (command === \"insertstring\" ||\r\n            command === \"splitline\" ||\r\n            command === \"togglecomment\") {\r\n            editor.pushEmacsMark();\r\n        }\r\n        command = this.commands[command] || editor.commands.commands[command];\r\n        if (!command) return undefined;\r\n    }\r\n\r\n    if (!command.readOnly && !command.isYank)\r\n        data.lastCommand = null;\r\n\r\n    if (!command.readOnly && editor.emacsMark())\r\n        editor.setEmacsMark(null);\r\n        \r\n    if (data.count) {\r\n        var count = data.count;\r\n        data.count = 0;\r\n        if (!command || !command.handlesCount) {\r\n            return {\r\n                args: args,\r\n                command: {\r\n                    exec: function(editor, args) {\r\n                        for (var i = 0; i < count; i++)\r\n                            command.exec(editor, args);\r\n                    },\r\n                    multiSelectAction: command.multiSelectAction\r\n                }\r\n            };\r\n        } else {\r\n            if (!args) args = {};\r\n            if (typeof args === 'object') args.count = count;\r\n        }\r\n    }\r\n\r\n    return {command: command, args: args};\r\n};\r\n\r\nexports.emacsKeys = {\r\n    // movement\r\n    \"Up|C-p\"      : {command: \"goorselect\", args: [\"golineup\",\"selectup\"]},\r\n    \"Down|C-n\"    : {command: \"goorselect\", args: [\"golinedown\",\"selectdown\"]},\r\n    \"Left|C-b\"    : {command: \"goorselect\", args: [\"gotoleft\",\"selectleft\"]},\r\n    \"Right|C-f\"   : {command: \"goorselect\", args: [\"gotoright\",\"selectright\"]},\r\n    \"C-Left|M-b\"  : {command: \"goorselect\", args: [\"gotowordleft\",\"selectwordleft\"]},\r\n    \"C-Right|M-f\" : {command: \"goorselect\", args: [\"gotowordright\",\"selectwordright\"]},\r\n    \"Home|C-a\"    : {command: \"goorselect\", args: [\"gotolinestart\",\"selecttolinestart\"]},\r\n    \"End|C-e\"     : {command: \"goorselect\", args: [\"gotolineend\",\"selecttolineend\"]},\r\n    \"C-Home|S-M-,\": {command: \"goorselect\", args: [\"gotostart\",\"selecttostart\"]},\r\n    \"C-End|S-M-.\" : {command: \"goorselect\", args: [\"gotoend\",\"selecttoend\"]},\r\n\r\n    // selection\r\n    \"S-Up|S-C-p\"      : \"selectup\",\r\n    \"S-Down|S-C-n\"    : \"selectdown\",\r\n    \"S-Left|S-C-b\"    : \"selectleft\",\r\n    \"S-Right|S-C-f\"   : \"selectright\",\r\n    \"S-C-Left|S-M-b\"  : \"selectwordleft\",\r\n    \"S-C-Right|S-M-f\" : \"selectwordright\",\r\n    \"S-Home|S-C-a\"    : \"selecttolinestart\",\r\n    \"S-End|S-C-e\"     : \"selecttolineend\",\r\n    \"S-C-Home\"        : \"selecttostart\",\r\n    \"S-C-End\"         : \"selecttoend\",\r\n\r\n    \"C-l\" : \"recenterTopBottom\",\r\n    \"M-s\" : \"centerselection\",\r\n    \"M-g\": \"gotoline\",\r\n    \"C-x C-p\": \"selectall\",\r\n\r\n    // todo fix these\r\n    \"C-Down\": {command: \"goorselect\", args: [\"gotopagedown\",\"selectpagedown\"]},\r\n    \"C-Up\": {command: \"goorselect\", args: [\"gotopageup\",\"selectpageup\"]},\r\n    \"PageDown|C-v\": {command: \"goorselect\", args: [\"gotopagedown\",\"selectpagedown\"]},\r\n    \"PageUp|M-v\": {command: \"goorselect\", args: [\"gotopageup\",\"selectpageup\"]},\r\n    \"S-C-Down\": \"selectpagedown\",\r\n    \"S-C-Up\": \"selectpageup\",\r\n\r\n    \"C-s\": \"iSearch\",\r\n    \"C-r\": \"iSearchBackwards\",\r\n\r\n    \"M-C-s\": \"findnext\",\r\n    \"M-C-r\": \"findprevious\",\r\n    \"S-M-5\": \"replace\",\r\n\r\n    // basic editing\r\n    \"Backspace\": \"backspace\",\r\n    \"Delete|C-d\": \"del\",\r\n    \"Return|C-m\": {command: \"insertstring\", args: \"\\n\"}, // \"newline\"\r\n    \"C-o\": \"splitline\",\r\n\r\n    \"M-d|C-Delete\": {command: \"killWord\", args: \"right\"},\r\n    \"C-Backspace|M-Backspace|M-Delete\": {command: \"killWord\", args: \"left\"},\r\n    \"C-k\": \"killLine\",\r\n\r\n    \"C-y|S-Delete\": \"yank\",\r\n    \"M-y\": \"yankRotate\",\r\n    \"C-g\": \"keyboardQuit\",\r\n\r\n    \"C-w|C-S-W\": \"killRegion\",\r\n    \"M-w\": \"killRingSave\",\r\n    \"C-Space\": \"setMark\",\r\n    \"C-x C-x\": \"exchangePointAndMark\",\r\n\r\n    \"C-t\": \"transposeletters\",\r\n    \"M-u\": \"touppercase\",    // Doesn't work\r\n    \"M-l\": \"tolowercase\",\r\n    \"M-/\": \"autocomplete\",   // Doesn't work\r\n    \"C-u\": \"universalArgument\",\r\n\r\n    \"M-;\": \"togglecomment\",\r\n\r\n    \"C-/|C-x u|S-C--|C-z\": \"undo\",\r\n    \"S-C-/|S-C-x u|C--|S-C-z\": \"redo\", // infinite undo?\r\n    // vertical editing\r\n    \"C-x r\":  \"selectRectangularRegion\",\r\n    \"M-x\": {command: \"focusCommandLine\", args: \"M-x \"}\r\n    // todo\r\n    // \"C-x C-t\" \"M-t\" \"M-c\" \"F11\" \"C-M- \"M-q\"\r\n};\r\n\r\n\r\nexports.handler.bindKeys(exports.emacsKeys);\r\n\r\nexports.handler.addCommands({\r\n    recenterTopBottom: function(editor) {\r\n        var renderer = editor.renderer;\r\n        var pos = renderer.$cursorLayer.getPixelPosition();\r\n        var h = renderer.$size.scrollerHeight - renderer.lineHeight;\r\n        var scrollTop = renderer.scrollTop;\r\n        if (Math.abs(pos.top - scrollTop) < 2) {\r\n            scrollTop = pos.top - h;\r\n        } else if (Math.abs(pos.top - scrollTop - h * 0.5) < 2) {\r\n            scrollTop = pos.top;\r\n        } else {\r\n            scrollTop = pos.top - h * 0.5;\r\n        }\r\n        editor.session.setScrollTop(scrollTop);\r\n    },\r\n    selectRectangularRegion:  function(editor) {\r\n        editor.multiSelect.toggleBlockSelection();\r\n    },\r\n    setMark:  {\r\n        exec: function(editor, args) {\r\n            // Sets mark-mode and clears current selection.\r\n            // When mark is set, keyboard cursor movement commands become\r\n            // selection modification commands. That is,\r\n            // \"goto\" commands become \"select\" commands.\r\n            // Any insertion or mouse click resets mark-mode.\r\n            // setMark twice in a row at the same place resets markmode.\r\n            // in multi select mode, ea selection is handled individually\r\n\r\n            if (args && args.count) {\r\n                if (editor.inMultiSelectMode) editor.forEachSelection(moveToMark);\r\n                else moveToMark();\r\n                moveToMark();\r\n                return;\r\n            }\r\n\r\n            var mark = editor.emacsMark(),\r\n                ranges = editor.selection.getAllRanges(),\r\n                rangePositions = ranges.map(function(r) { return {row: r.start.row, column: r.start.column}; }),\r\n                transientMarkModeActive = true,\r\n                hasNoSelection = ranges.every(function(range) { return range.isEmpty(); });\r\n            // if transientMarkModeActive then mark behavior is a little\r\n            // different. Deactivate the mark when setMark is run with active\r\n            // mark\r\n            if (transientMarkModeActive && (mark || !hasNoSelection)) {\r\n                if (editor.inMultiSelectMode) editor.forEachSelection({exec: editor.clearSelection.bind(editor)});\r\n                else editor.clearSelection();\r\n                if (mark) editor.pushEmacsMark(null);\r\n                return;\r\n            }\r\n\r\n            if (!mark) {\r\n                rangePositions.forEach(function(pos) { editor.pushEmacsMark(pos); });\r\n                editor.setEmacsMark(rangePositions[rangePositions.length-1]);\r\n                return;\r\n            }\r\n\r\n            // -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\r\n\r\n            function moveToMark() {\r\n                var mark = editor.popEmacsMark();\r\n                mark && editor.moveCursorToPosition(mark);\r\n            }\r\n\r\n        },\r\n        readOnly: true,\r\n        handlesCount: true\r\n    },\r\n    exchangePointAndMark: {\r\n        exec: function exchangePointAndMark$exec(editor, args) {\r\n            var sel = editor.selection;\r\n            if (!args.count && !sel.isEmpty()) { // just invert selection\r\n                sel.setSelectionRange(sel.getRange(), !sel.isBackwards());\r\n                return;\r\n            }\r\n\r\n            if (args.count) { // replace mark and point\r\n                var pos = {row: sel.lead.row, column: sel.lead.column};\r\n                sel.clearSelection();\r\n                sel.moveCursorToPosition(editor.emacsMarkForSelection(pos));\r\n            } else { // create selection to last mark\r\n                sel.selectToPosition(editor.emacsMarkForSelection());\r\n            }\r\n        },\r\n        readOnly: true,\r\n        handlesCount: true,\r\n        multiSelectAction: \"forEach\"\r\n    },\r\n    killWord: {\r\n        exec: function(editor, dir) {\r\n            editor.clearSelection();\r\n            if (dir == \"left\")\r\n                editor.selection.selectWordLeft();\r\n            else\r\n                editor.selection.selectWordRight();\r\n\r\n            var range = editor.getSelectionRange();\r\n            var text = editor.session.getTextRange(range);\r\n            exports.killRing.add(text);\r\n\r\n            editor.session.remove(range);\r\n            editor.clearSelection();\r\n        },\r\n        multiSelectAction: \"forEach\"\r\n    },\r\n    killLine: function(editor) {\r\n        editor.pushEmacsMark(null);\r\n        // don't delete the selection if it's before the cursor\r\n        editor.clearSelection();\r\n        var range = editor.getSelectionRange();\r\n        var line = editor.session.getLine(range.start.row);\r\n        range.end.column = line.length;\r\n        line = line.substr(range.start.column);\r\n        \r\n        var foldLine = editor.session.getFoldLine(range.start.row);\r\n        if (foldLine && range.end.row != foldLine.end.row) {\r\n            range.end.row = foldLine.end.row;\r\n            line = \"x\";\r\n        }\r\n        // remove EOL if only whitespace remains after the cursor\r\n        if (/^\\s*$/.test(line)) {\r\n            range.end.row++;\r\n            line = editor.session.getLine(range.end.row);\r\n            range.end.column = /^\\s*$/.test(line) ? line.length : 0;\r\n        }\r\n        var text = editor.session.getTextRange(range);\r\n        if (editor.prevOp.command == this)\r\n            exports.killRing.append(text);\r\n        else\r\n            exports.killRing.add(text);\r\n\r\n        editor.session.remove(range);\r\n        editor.clearSelection();\r\n    },\r\n    yank: function(editor) {\r\n        editor.onPaste(exports.killRing.get() || '');\r\n        editor.keyBinding.$data.lastCommand = \"yank\";\r\n    },\r\n    yankRotate: function(editor) {\r\n        if (editor.keyBinding.$data.lastCommand != \"yank\")\r\n            return;\r\n        editor.undo();\r\n        editor.session.$emacsMarkRing.pop(); // also undo recording mark\r\n        editor.onPaste(exports.killRing.rotate());\r\n        editor.keyBinding.$data.lastCommand = \"yank\";\r\n    },\r\n    killRegion: {\r\n        exec: function(editor) {\r\n            exports.killRing.add(editor.getCopyText());\r\n            editor.commands.byName.cut.exec(editor);\r\n            editor.setEmacsMark(null);\r\n        },\r\n        readOnly: true,\r\n        multiSelectAction: \"forEach\"\r\n    },\r\n    killRingSave: {\r\n        exec: function(editor) {\r\n            // copy text and deselect. will save marks for starts of the\r\n            // selection(s)\r\n\r\n            editor.$handlesEmacsOnCopy = true;\r\n            var marks = editor.session.$emacsMarkRing.slice(),\r\n                deselectedMarks = [];\r\n            exports.killRing.add(editor.getCopyText());\r\n\r\n            setTimeout(function() {\r\n                function deselect() {\r\n                    var sel = editor.selection, range = sel.getRange(),\r\n                        pos = sel.isBackwards() ? range.end : range.start;\r\n                    deselectedMarks.push({row: pos.row, column: pos.column});\r\n                    sel.clearSelection();\r\n                }\r\n                editor.$handlesEmacsOnCopy = false;\r\n                if (editor.inMultiSelectMode) editor.forEachSelection({exec: deselect});\r\n                else deselect();\r\n                editor.setEmacsMark(null);\r\n                editor.session.$emacsMarkRing = marks.concat(deselectedMarks.reverse());\r\n            }, 0);\r\n        },\r\n        readOnly: true\r\n    },\r\n    keyboardQuit: function(editor) {\r\n        editor.selection.clearSelection();\r\n        editor.setEmacsMark(null);\r\n        editor.keyBinding.$data.count = null;\r\n    },\r\n    focusCommandLine: function(editor, arg) {\r\n        if (editor.showCommandLine)\r\n            editor.showCommandLine(arg);\r\n    }\r\n});\r\n\r\nexports.handler.addCommands(iSearchCommandModule.iSearchStartCommands);\r\n\r\nvar commands = exports.handler.commands;\r\ncommands.yank.isYank = true;\r\ncommands.yankRotate.isYank = true;\r\n\r\nexports.killRing = {\r\n    $data: [],\r\n    add: function(str) {\r\n        str && this.$data.push(str);\r\n        if (this.$data.length > 30)\r\n            this.$data.shift();\r\n    },\r\n    append: function(str) {\r\n        var idx = this.$data.length - 1;\r\n        var text = this.$data[idx] || \"\";\r\n        if (str) text += str;\r\n        if (text) this.$data[idx] = text;\r\n    },\r\n    get: function(n) {\r\n        n = n || 1;\r\n        return this.$data.slice(this.$data.length-n, this.$data.length).reverse().join('\\n');\r\n    },\r\n    pop: function() {\r\n        if (this.$data.length > 1)\r\n            this.$data.pop();\r\n        return this.get();\r\n    },\r\n    rotate: function() {\r\n        this.$data.unshift(this.$data.pop());\r\n        return this.get();\r\n    }\r\n};\r\n\r\n});\r\n"]}