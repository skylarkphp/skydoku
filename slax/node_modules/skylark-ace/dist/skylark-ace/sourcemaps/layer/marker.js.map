{"version":3,"sources":["layer/marker.js"],"names":["define","require","exports","module","Range","dom","Marker","parentEl","this","element","createElement","className","appendChild","$padding","setPadding","padding","setSession","session","setMarkers","markers","elt","css","x","i","childNodes","document","style","cssText","update","config","html","key","marker","range","clipRows","firstRow","lastRow","isEmpty","toScreenRange","renderer","top","$getTop","start","row","left","column","characterWidth","type","drawFullLineMarker","clazz","drawScreenLineMarker","isMultiLine","drawTextMarker","drawMultiLineMarker","drawSingleLineMarker","childElementCount","removeChild","lastChild","layerConfig","firstRowScreen","lineHeight","stringBuilder","extraStyle","end","prev","curr","next","getScreenLastRowColumn","lineRange","getRowWrapIndent","height","$bidiHandler","isBidiRow","range1","clone","getLine","length","drawBidiSingleLineMarker","width","radiusClass","extraLength","getSelections","forEach","selection","call","prototype"],"mappings":"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","file":"../../layer/marker.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2010, Ajax.org B.V.\r\n * All rights reserved.\r\n * \r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n * \r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\ndefine(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar Range = require(\"../range\").Range;\r\nvar dom = require(\"../lib/dom\");\r\n\r\nvar Marker = function(parentEl) {\r\n    this.element = dom.createElement(\"div\");\r\n    this.element.className = \"ace_layer ace_marker-layer\";\r\n    parentEl.appendChild(this.element);\r\n};\r\n\r\n(function() {\r\n\r\n    this.$padding = 0;\r\n\r\n    this.setPadding = function(padding) {\r\n        this.$padding = padding;\r\n    };\r\n    this.setSession = function(session) {\r\n        this.session = session;\r\n    };\r\n    \r\n    this.setMarkers = function(markers) {\r\n        this.markers = markers;\r\n    };\r\n    \r\n    this.elt = function(className, css) {\r\n        var x = this.i != -1 && this.element.childNodes[this.i];\r\n        if (!x) {\r\n            x = document.createElement(\"div\");\r\n            this.element.appendChild(x);\r\n            this.i = -1;\r\n        } else {\r\n            this.i++;\r\n        }\r\n        x.style.cssText = css;\r\n        x.className = className;\r\n    };\r\n\r\n    this.update = function(config) {\r\n        if (!config) return;\r\n\r\n        this.config = config;\r\n\r\n        this.i = 0;\r\n        var html;\r\n        for (var key in this.markers) {\r\n            var marker = this.markers[key];\r\n\r\n            if (!marker.range) {\r\n                marker.update(html, this, this.session, config);\r\n                continue;\r\n            }\r\n\r\n            var range = marker.range.clipRows(config.firstRow, config.lastRow);\r\n            if (range.isEmpty()) continue;\r\n\r\n            range = range.toScreenRange(this.session);\r\n            if (marker.renderer) {\r\n                var top = this.$getTop(range.start.row, config);\r\n                var left = this.$padding + range.start.column * config.characterWidth;\r\n                marker.renderer(html, range, left, top, config);\r\n            } else if (marker.type == \"fullLine\") {\r\n                this.drawFullLineMarker(html, range, marker.clazz, config);\r\n            } else if (marker.type == \"screenLine\") {\r\n                this.drawScreenLineMarker(html, range, marker.clazz, config);\r\n            } else if (range.isMultiLine()) {\r\n                if (marker.type == \"text\")\r\n                    this.drawTextMarker(html, range, marker.clazz, config);\r\n                else\r\n                    this.drawMultiLineMarker(html, range, marker.clazz, config);\r\n            } else {\r\n                this.drawSingleLineMarker(html, range, marker.clazz + \" ace_start\" + \" ace_br15\", config);\r\n            }\r\n        }\r\n        if (this.i !=-1) {\r\n            while (this.i < this.element.childElementCount)\r\n                this.element.removeChild(this.element.lastChild);\r\n        }\r\n    };\r\n\r\n    this.$getTop = function(row, layerConfig) {\r\n        return (row - layerConfig.firstRowScreen) * layerConfig.lineHeight;\r\n    };\r\n\r\n    function getBorderClass(tl, tr, br, bl) {\r\n        return (tl ? 1 : 0) | (tr ? 2 : 0) | (br ? 4 : 0) | (bl ? 8 : 0);\r\n    }\r\n    // Draws a marker, which spans a range of text on multiple lines \r\n    this.drawTextMarker = function(stringBuilder, range, clazz, layerConfig, extraStyle) {\r\n        var session = this.session;\r\n        var start = range.start.row;\r\n        var end = range.end.row;\r\n        var row = start;\r\n        var prev = 0; \r\n        var curr = 0;\r\n        var next = session.getScreenLastRowColumn(row);\r\n        var lineRange = new Range(row, range.start.column, row, curr);\r\n        for (; row <= end; row++) {\r\n            lineRange.start.row = lineRange.end.row = row;\r\n            lineRange.start.column = row == start ? range.start.column : session.getRowWrapIndent(row);\r\n            lineRange.end.column = next;\r\n            prev = curr;\r\n            curr = next;\r\n            next = row + 1 < end ? session.getScreenLastRowColumn(row + 1) : row == end ? 0 : range.end.column;\r\n            this.drawSingleLineMarker(stringBuilder, lineRange, \r\n                clazz + (row == start  ? \" ace_start\" : \"\") + \" ace_br\"\r\n                    + getBorderClass(row == start || row == start + 1 && range.start.column, prev < curr, curr > next, row == end),\r\n                layerConfig, row == end ? 0 : 1, extraStyle);\r\n        }\r\n    };\r\n\r\n    // Draws a multi line marker, where lines span the full width\r\n    this.drawMultiLineMarker = function(stringBuilder, range, clazz, config, extraStyle) {\r\n        // from selection start to the end of the line\r\n        var padding = this.$padding;\r\n        var height = config.lineHeight;\r\n        var top = this.$getTop(range.start.row, config);\r\n        var left = padding + range.start.column * config.characterWidth;\r\n        extraStyle = extraStyle || \"\";\r\n\r\n        if (this.session.$bidiHandler.isBidiRow(range.start.row)) {\r\n           var range1 = range.clone();\r\n           range1.end.row = range1.start.row;\r\n           range1.end.column = this.session.getLine(range1.start.row).length;\r\n           this.drawBidiSingleLineMarker(stringBuilder, range1, clazz + \" ace_br1 ace_start\", config, null, extraStyle);\r\n        } else {\r\n            this.elt(\r\n                clazz + \" ace_br1 ace_start\",\r\n                \"height:\"+ height+ \"px;\"+ \"right:0;\"+ \"top:\"+top+ \"px;left:\"+ left+ \"px;\" + (extraStyle || \"\")\r\n            );\r\n        }\r\n        // from start of the last line to the selection end\r\n        if (this.session.$bidiHandler.isBidiRow(range.end.row)) {\r\n           var range1 = range.clone();\r\n           range1.start.row = range1.end.row;\r\n           range1.start.column = 0;\r\n           this.drawBidiSingleLineMarker(stringBuilder, range1, clazz + \" ace_br12\", config, null, extraStyle);\r\n        } else {\r\n            top = this.$getTop(range.end.row, config);\r\n            var width = range.end.column * config.characterWidth;\r\n\r\n            this.elt(\r\n                clazz + \" ace_br12\",\r\n                \"height:\"+ height+ \"px;\"+\r\n                \"width:\"+ width+ \"px;\"+\r\n                \"top:\"+ top+ \"px;\"+\r\n                \"left:\"+ padding+ \"px;\"+ (extraStyle || \"\")\r\n            );\r\n        }\r\n        // all the complete lines\r\n        height = (range.end.row - range.start.row - 1) * config.lineHeight;\r\n        if (height <= 0)\r\n            return;\r\n        top = this.$getTop(range.start.row + 1, config);\r\n        \r\n        var radiusClass = (range.start.column ? 1 : 0) | (range.end.column ? 0 : 8);\r\n\r\n        this.elt(\r\n            clazz + (radiusClass ? \" ace_br\" + radiusClass : \"\"),\r\n            \"height:\"+ height+ \"px;\"+\r\n            \"right:0;\"+\r\n            \"top:\"+ top+ \"px;\"+\r\n            \"left:\"+ padding+ \"px;\"+ (extraStyle || \"\")\r\n        );\r\n    };\r\n\r\n    // Draws a marker which covers part or whole width of a single screen line\r\n    this.drawSingleLineMarker = function(stringBuilder, range, clazz, config, extraLength, extraStyle) {\r\n        if (this.session.$bidiHandler.isBidiRow(range.start.row))\r\n            return this.drawBidiSingleLineMarker(stringBuilder, range, clazz, config, extraLength, extraStyle);\r\n        var height = config.lineHeight;\r\n        var width = (range.end.column + (extraLength || 0) - range.start.column) * config.characterWidth;\r\n\r\n        var top = this.$getTop(range.start.row, config);\r\n        var left = this.$padding + range.start.column * config.characterWidth;\r\n\r\n        this.elt(\r\n            clazz,\r\n            \"height:\"+ height+ \"px;\"+\r\n            \"width:\"+ width+ \"px;\"+\r\n            \"top:\"+ top+ \"px;\"+\r\n            \"left:\"+ left+ \"px;\"+ (extraStyle || \"\")\r\n        );\r\n    };\r\n\r\n    // Draws Bidi marker which covers part or whole width of a single screen line\r\n    this.drawBidiSingleLineMarker = function(stringBuilder, range, clazz, config, extraLength, extraStyle) {\r\n        var height = config.lineHeight, top = this.$getTop(range.start.row, config), padding = this.$padding;\r\n        var selections = this.session.$bidiHandler.getSelections(range.start.column, range.end.column);\r\n\r\n        selections.forEach(function(selection) {\r\n            this.elt(\r\n                clazz,\r\n                \"height:\" + height + \"px;\" +\r\n                \"width:\" + selection.width + (extraLength || 0) + \"px;\" +\r\n                \"top:\" + top + \"px;\" +\r\n                \"left:\" + (padding + selection.left) + \"px;\" + (extraStyle || \"\")\r\n            );\r\n        }, this);\r\n    };\r\n\r\n    this.drawFullLineMarker = function(stringBuilder, range, clazz, config, extraStyle) {\r\n        var top = this.$getTop(range.start.row, config);\r\n        var height = config.lineHeight;\r\n        if (range.start.row != range.end.row)\r\n            height += this.$getTop(range.end.row, config) - top;\r\n\r\n        this.elt(\r\n            clazz,\r\n            \"height:\"+ height+ \"px;\"+\r\n            \"top:\"+ top+ \"px;\"+\r\n            \"left:0;right:0;\"+ (extraStyle || \"\")\r\n        );\r\n    };\r\n    \r\n    this.drawScreenLineMarker = function(stringBuilder, range, clazz, config, extraStyle) {\r\n        var top = this.$getTop(range.start.row, config);\r\n        var height = config.lineHeight;\r\n\r\n        this.elt(\r\n            clazz,\r\n            \"height:\"+ height+ \"px;\"+\r\n            \"top:\"+ top+ \"px;\"+\r\n            \"left:0;right:0;\"+ (extraStyle || \"\")\r\n        );\r\n    };\r\n\r\n}).call(Marker.prototype);\r\n\r\nexports.Marker = Marker;\r\n\r\n});"]}