{"version":3,"sources":["layer/gutter.js"],"names":["define","require","exports","module","dom","oop","lang","EventEmitter","Lines","Gutter","parentEl","this","element","createElement","className","appendChild","setShowFoldWidgets","$showFoldWidgets","gutterWidth","$annotations","$updateAnnotations","bind","$lines","$offsetCoefficient","onCreateCell","textNode","document","createTextNode","foldWidget","implement","setSession","session","removeEventListener","on","addGutterDecoration","row","window","console","warn","removeGutterDecoration","setAnnotations","annotations","i","length","annotation","rowInfo","text","annoText","escapeHTML","html","indexOf","push","type","delta","firstRow","start","len","end","action","splice","args","Array","unshift","apply","update","config","lastRow","Math","min","gutterOffset","getLength","oldLastRow","moveContainer","$updateCursorRow","fold","getNextFoldLine","foldStart","Infinity","cell","index","pop","get","createCell","$renderCell","_signal","$updateGutterWidth","gutterRenderer","$renderer","firstLineNumber","$firstLineNumber","lastLineText","last","$fixedWidth","$useWrapMode","getWidth","toString","characterWidth","padding","$padding","$computePadding","left","right","isNaN","parentNode","style","width","ceil","$highlightGutterLine","position","selection","getCursor","$cursorRow","updateLineHighlight","cursor","$cursorCell","replace","cells","getFoldLine","scrollLines","oldConfig","pageChanged","getFoldedRowCount","shift","$renderLines","fragment","foldLine","childNodes","breakpoints","$breakpoints","decorations","$decorations","foldWidgets","Number","MAX_VALUE","c","getFoldWidget","foldHeight","lineHeight","setStyle","getText","data","computeLineHeight","computeLineTop","setHighlightGutterLine","highlightGutterLine","$showLineNumbers","setShowLineNumbers","show","getShowLineNumbers","addCssClass","removeCssClass","getShowFoldWidgets","firstChild","computedStyle","parseInt","borderLeftWidth","paddingLeft","borderRightWidth","paddingRight","getRegion","point","rect","getBoundingClientRect","x","call","prototype"],"mappings":"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","file":"../../layer/gutter.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2010, Ajax.org B.V.\r\n * All rights reserved.\r\n * \r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n * \r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\ndefine(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar dom = require(\"../lib/dom\");\r\nvar oop = require(\"../lib/oop\");\r\nvar lang = require(\"../lib/lang\");\r\nvar EventEmitter = require(\"../lib/event_emitter\").EventEmitter;\r\nvar Lines = require(\"./lines\").Lines;\r\n\r\nvar Gutter = function(parentEl) {\r\n    this.element = dom.createElement(\"div\");\r\n    this.element.className = \"ace_layer ace_gutter-layer\";\r\n    parentEl.appendChild(this.element);\r\n    this.setShowFoldWidgets(this.$showFoldWidgets);\r\n    \r\n    this.gutterWidth = 0;\r\n\r\n    this.$annotations = [];\r\n    this.$updateAnnotations = this.$updateAnnotations.bind(this);\r\n    \r\n    this.$lines = new Lines(this.element);\r\n    this.$lines.$offsetCoefficient = 1;\r\n};\r\n\r\n(function() {\r\n\r\n    oop.implement(this, EventEmitter);\r\n\r\n    this.setSession = function(session) {\r\n        if (this.session)\r\n            this.session.removeEventListener(\"change\", this.$updateAnnotations);\r\n        this.session = session;\r\n        if (session)\r\n            session.on(\"change\", this.$updateAnnotations);\r\n    };\r\n\r\n    this.addGutterDecoration = function(row, className) {\r\n        if (window.console)\r\n            console.warn && console.warn(\"deprecated use session.addGutterDecoration\");\r\n        this.session.addGutterDecoration(row, className);\r\n    };\r\n\r\n    this.removeGutterDecoration = function(row, className) {\r\n        if (window.console)\r\n            console.warn && console.warn(\"deprecated use session.removeGutterDecoration\");\r\n        this.session.removeGutterDecoration(row, className);\r\n    };\r\n\r\n    this.setAnnotations = function(annotations) {\r\n        // iterate over sparse array\r\n        this.$annotations = [];\r\n        for (var i = 0; i < annotations.length; i++) {\r\n            var annotation = annotations[i];\r\n            var row = annotation.row;\r\n            var rowInfo = this.$annotations[row];\r\n            if (!rowInfo)\r\n                rowInfo = this.$annotations[row] = {text: []};\r\n           \r\n            var annoText = annotation.text;\r\n            annoText = annoText ? lang.escapeHTML(annoText) : annotation.html || \"\";\r\n\r\n            if (rowInfo.text.indexOf(annoText) === -1)\r\n                rowInfo.text.push(annoText);\r\n\r\n            var type = annotation.type;\r\n            if (type == \"error\")\r\n                rowInfo.className = \" ace_error\";\r\n            else if (type == \"warning\" && rowInfo.className != \" ace_error\")\r\n                rowInfo.className = \" ace_warning\";\r\n            else if (type == \"info\" && (!rowInfo.className))\r\n                rowInfo.className = \" ace_info\";\r\n        }\r\n    };\r\n\r\n    this.$updateAnnotations = function (delta) {\r\n        if (!this.$annotations.length)\r\n            return;\r\n        var firstRow = delta.start.row;\r\n        var len = delta.end.row - firstRow;\r\n        if (len === 0) {\r\n            // do nothing\r\n        } else if (delta.action == 'remove') {\r\n            this.$annotations.splice(firstRow, len + 1, null);\r\n        } else {\r\n            var args = new Array(len + 1);\r\n            args.unshift(firstRow, 1);\r\n            this.$annotations.splice.apply(this.$annotations, args);\r\n        }\r\n    };\r\n\r\n    this.update = function(config) {\r\n        this.config = config;\r\n        \r\n        var session = this.session;\r\n        var firstRow = config.firstRow;\r\n        var lastRow = Math.min(config.lastRow + config.gutterOffset,  // needed to compensate for hor scollbar\r\n            session.getLength() - 1);\r\n            \r\n        this.oldLastRow = lastRow;\r\n        this.config = config;\r\n        \r\n        this.$lines.moveContainer(config);\r\n        this.$updateCursorRow();\r\n            \r\n        var fold = session.getNextFoldLine(firstRow);\r\n        var foldStart = fold ? fold.start.row : Infinity;\r\n\r\n        var cell = null;\r\n        var index = -1;\r\n        var row = firstRow;\r\n        \r\n        while (true) {\r\n            if (row > foldStart) {\r\n                row = fold.end.row + 1;\r\n                fold = session.getNextFoldLine(row, fold);\r\n                foldStart = fold ? fold.start.row : Infinity;\r\n            }\r\n            if (row > lastRow) {\r\n                while (this.$lines.getLength() > index + 1)\r\n                    this.$lines.pop();\r\n                    \r\n                break;\r\n            }\r\n\r\n            cell = this.$lines.get(++index);\r\n            if (cell) {\r\n                cell.row = row;\r\n            } else {\r\n                cell = this.$lines.createCell(row, config, this.session, onCreateCell);\r\n                this.$lines.push(cell);\r\n            }\r\n\r\n            this.$renderCell(cell, config, fold, row);\r\n            row++;\r\n        }\r\n        \r\n        this._signal(\"afterRender\");\r\n        this.$updateGutterWidth(config);\r\n    };\r\n\r\n    this.$updateGutterWidth = function(config) {\r\n        var session = this.session;\r\n        \r\n        var gutterRenderer = session.gutterRenderer || this.$renderer;\r\n        \r\n        var firstLineNumber = session.$firstLineNumber;\r\n        var lastLineText = this.$lines.last() ? this.$lines.last().text : \"\";\r\n        \r\n        if (this.$fixedWidth || session.$useWrapMode)\r\n            lastLineText = session.getLength() + firstLineNumber - 1;\r\n\r\n        var gutterWidth = gutterRenderer \r\n            ? gutterRenderer.getWidth(session, lastLineText, config)\r\n            : lastLineText.toString().length * config.characterWidth;\r\n        \r\n        var padding = this.$padding || this.$computePadding();\r\n        gutterWidth += padding.left + padding.right;\r\n        if (gutterWidth !== this.gutterWidth && !isNaN(gutterWidth)) {\r\n            this.gutterWidth = gutterWidth;\r\n            this.element.parentNode.style.width = \r\n            this.element.style.width = Math.ceil(this.gutterWidth) + \"px\";\r\n            this._signal(\"changeGutterWidth\", gutterWidth);\r\n        }\r\n    };\r\n    \r\n    this.$updateCursorRow = function() {\r\n        if (!this.$highlightGutterLine)\r\n            return;\r\n            \r\n        var position = this.session.selection.getCursor();\r\n        if (this.$cursorRow === position.row)\r\n            return;\r\n        \r\n        this.$cursorRow = position.row;\r\n    };\r\n    \r\n    this.updateLineHighlight = function() {\r\n        if (!this.$highlightGutterLine)\r\n            return;\r\n        var row = this.session.selection.cursor.row;\r\n        this.$cursorRow = row;\r\n\r\n        if (this.$cursorCell && this.$cursorCell.row == row)\r\n            return;\r\n        if (this.$cursorCell)\r\n            this.$cursorCell.element.className = this.$cursorCell.element.className.replace(\"ace_gutter-active-line \", \"\");\r\n        var cells = this.$lines.cells;\r\n        this.$cursorCell = null;\r\n        for (var i = 0; i < cells.length; i++) {\r\n            var cell = cells[i];\r\n            if (cell.row >= this.$cursorRow) {\r\n                if (cell.row > this.$cursorRow) {\r\n                    var fold = this.session.getFoldLine(this.$cursorRow);\r\n                    if (i > 0 && fold && fold.start.row == cells[i - 1].row)\r\n                        cell = cells[i - 1];\r\n                    else\r\n                        break;\r\n                }\r\n                cell.element.className = \"ace_gutter-active-line \" + cell.element.className;\r\n                this.$cursorCell = cell;\r\n                break;\r\n            }\r\n        }\r\n    };\r\n    \r\n    this.scrollLines = function(config) {\r\n        var oldConfig = this.config;\r\n        this.config = config;\r\n        \r\n        this.$updateCursorRow();\r\n        if (this.$lines.pageChanged(oldConfig, config))\r\n            return this.update(config);\r\n        \r\n        this.$lines.moveContainer(config);\r\n\r\n        var lastRow = Math.min(config.lastRow + config.gutterOffset,  // needed to compensate for hor scollbar\r\n            this.session.getLength() - 1);\r\n        var oldLastRow = this.oldLastRow;\r\n        this.oldLastRow = lastRow;\r\n        \r\n        if (!oldConfig || oldLastRow < config.firstRow)\r\n            return this.update(config);\r\n\r\n        if (lastRow < oldConfig.firstRow)\r\n            return this.update(config);\r\n\r\n        if (oldConfig.firstRow < config.firstRow)\r\n            for (var row=this.session.getFoldedRowCount(oldConfig.firstRow, config.firstRow - 1); row>0; row--)\r\n                this.$lines.shift();\r\n\r\n        if (oldLastRow > lastRow)\r\n            for (var row=this.session.getFoldedRowCount(lastRow + 1, oldLastRow); row>0; row--)\r\n                this.$lines.pop();\r\n\r\n        if (config.firstRow < oldConfig.firstRow) {\r\n            this.$lines.unshift(this.$renderLines(config, config.firstRow, oldConfig.firstRow - 1));\r\n        }\r\n\r\n        if (lastRow > oldLastRow) {\r\n            this.$lines.push(this.$renderLines(config, oldLastRow + 1, lastRow));\r\n        }\r\n        \r\n        this.updateLineHighlight();\r\n        \r\n        this._signal(\"afterRender\");\r\n        this.$updateGutterWidth(config);\r\n    };\r\n\r\n    this.$renderLines = function(config, firstRow, lastRow) {\r\n        var fragment = [];\r\n        var row = firstRow;\r\n        var foldLine = this.session.getNextFoldLine(row);\r\n        var foldStart = foldLine ? foldLine.start.row : Infinity;\r\n\r\n        while (true) {\r\n            if (row > foldStart) {\r\n                row = foldLine.end.row+1;\r\n                foldLine = this.session.getNextFoldLine(row, foldLine);\r\n                foldStart = foldLine ? foldLine.start.row : Infinity;\r\n            }\r\n            if (row > lastRow)\r\n                break;\r\n\r\n            var cell = this.$lines.createCell(row, config, this.session, onCreateCell);\r\n            this.$renderCell(cell, config, foldLine, row);\r\n            fragment.push(cell);\r\n\r\n            row++;\r\n        }\r\n        return fragment;\r\n    };\r\n    \r\n    this.$renderCell = function(cell, config, fold, row) {\r\n        var element = cell.element;\r\n        \r\n        var session = this.session;\r\n        \r\n        var textNode = element.childNodes[0];\r\n        var foldWidget = element.childNodes[1];\r\n\r\n        var firstLineNumber = session.$firstLineNumber;\r\n        \r\n        var breakpoints = session.$breakpoints;\r\n        var decorations = session.$decorations;\r\n        var gutterRenderer = session.gutterRenderer || this.$renderer;\r\n        var foldWidgets = this.$showFoldWidgets && session.foldWidgets;\r\n        var foldStart = fold ? fold.start.row : Number.MAX_VALUE;\r\n        \r\n        var className = \"ace_gutter-cell \";\r\n        if (this.$highlightGutterLine) {\r\n            if (row == this.$cursorRow || (fold && row < this.$cursorRow && row >= foldStart &&  this.$cursorRow <= fold.end.row)) {\r\n                className += \"ace_gutter-active-line \";\r\n                if (this.$cursorCell != cell) {\r\n                    if (this.$cursorCell)\r\n                        this.$cursorCell.element.className = this.$cursorCell.element.className.replace(\"ace_gutter-active-line \", \"\");\r\n                    this.$cursorCell = cell;\r\n                }\r\n            }\r\n        }\r\n        \r\n        if (breakpoints[row])\r\n            className += breakpoints[row];\r\n        if (decorations[row])\r\n            className += decorations[row];\r\n        if (this.$annotations[row])\r\n            className += this.$annotations[row].className;\r\n        if (element.className != className)\r\n            element.className = className;\r\n\r\n        if (foldWidgets) {\r\n            var c = foldWidgets[row];\r\n            // check if cached value is invalidated and we need to recompute\r\n            if (c == null)\r\n                c = foldWidgets[row] = session.getFoldWidget(row);\r\n        }\r\n\r\n        if (c) {\r\n            var className = \"ace_fold-widget ace_\" + c;\r\n            if (c == \"start\" && row == foldStart && row < fold.end.row)\r\n                className += \" ace_closed\";\r\n            else\r\n                className += \" ace_open\";\r\n            if (foldWidget.className != className)\r\n                foldWidget.className = className;\r\n\r\n            var foldHeight = config.lineHeight + \"px\";\r\n            dom.setStyle(foldWidget.style, \"height\", foldHeight);\r\n            dom.setStyle(foldWidget.style, \"display\", \"inline-block\");\r\n        } else {\r\n            if (foldWidget) {\r\n                dom.setStyle(foldWidget.style, \"display\", \"none\");\r\n            }\r\n        }\r\n        \r\n        var text = (gutterRenderer\r\n            ? gutterRenderer.getText(session, row)\r\n            : row + firstLineNumber).toString();\r\n            \r\n        if (text !== textNode.data) {\r\n            textNode.data = text;\r\n        }\r\n        \r\n        dom.setStyle(cell.element.style, \"height\", this.$lines.computeLineHeight(row, config, session) + \"px\");\r\n        dom.setStyle(cell.element.style, \"top\", this.$lines.computeLineTop(row, config, session) + \"px\");\r\n        \r\n        cell.text = text;\r\n        return cell;\r\n    };\r\n\r\n    this.$fixedWidth = false;\r\n    \r\n    this.$highlightGutterLine = true;\r\n    this.$renderer = \"\";\r\n    this.setHighlightGutterLine = function(highlightGutterLine) {\r\n        this.$highlightGutterLine = highlightGutterLine;\r\n    };\r\n    \r\n    this.$showLineNumbers = true;\r\n    this.$renderer = \"\";\r\n    this.setShowLineNumbers = function(show) {\r\n        this.$renderer = !show && {\r\n            getWidth: function() {return 0;},\r\n            getText: function() {return \"\";}\r\n        };\r\n    };\r\n    \r\n    this.getShowLineNumbers = function() {\r\n        return this.$showLineNumbers;\r\n    };\r\n    \r\n    this.$showFoldWidgets = true;\r\n    this.setShowFoldWidgets = function(show) {\r\n        if (show)\r\n            dom.addCssClass(this.element, \"ace_folding-enabled\");\r\n        else\r\n            dom.removeCssClass(this.element, \"ace_folding-enabled\");\r\n\r\n        this.$showFoldWidgets = show;\r\n        this.$padding = null;\r\n    };\r\n    \r\n    this.getShowFoldWidgets = function() {\r\n        return this.$showFoldWidgets;\r\n    };\r\n\r\n    this.$computePadding = function() {\r\n        if (!this.element.firstChild)\r\n            return {left: 0, right: 0};\r\n        var style = dom.computedStyle(this.element.firstChild);\r\n        this.$padding = {};\r\n        this.$padding.left = (parseInt(style.borderLeftWidth) || 0)\r\n            + (parseInt(style.paddingLeft) || 0) + 1;\r\n        this.$padding.right = (parseInt(style.borderRightWidth) || 0)\r\n            + (parseInt(style.paddingRight) || 0);\r\n        return this.$padding;\r\n    };\r\n\r\n    this.getRegion = function(point) {\r\n        var padding = this.$padding || this.$computePadding();\r\n        var rect = this.element.getBoundingClientRect();\r\n        if (point.x < padding.left + rect.left)\r\n            return \"markers\";\r\n        if (this.$showFoldWidgets && point.x > rect.right - padding.right)\r\n            return \"foldWidgets\";\r\n    };\r\n\r\n}).call(Gutter.prototype);\r\n\r\nfunction onCreateCell(element) {\r\n    var textNode = document.createTextNode('');\r\n    element.appendChild(textNode);\r\n    \r\n    var foldWidget = dom.createElement(\"span\");\r\n    element.appendChild(foldWidget);\r\n    \r\n    return element;\r\n}\r\n\r\nexports.Gutter = Gutter;\r\n\r\n});\r\n"]}