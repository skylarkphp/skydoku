{"version":3,"sources":["multi_select.js"],"names":["define","require","exports","module","RangeList","Range","Selection","onMouseDown","event","lang","commands","defaultCommands","concat","multiSelectCommands","search","Search","EditSession","this","getSelectionMarkers","$selectionMarkers","call","prototype","ranges","rangeList","addRange","range","$blockChangeEvents","inMultiSelectMode","rangeCount","oldRange","toOrientedRange","add","length","removeAll","fromOrientedRange","$onAddRange","cursor","end","removed","$onRemoveRange","_signal","session","$undoSelect","attach","toSingleRange","substractPoint","pos","mergeOverlappingRanges","merge","unshift","lastRange","pop","push","i","index","indexOf","splice","detach","isEqual","getRange","$initRangeList","getAllRanges","splitIntoLines","fromPoints","start","setSelectionRange","isBackwards","startRow","row","endRow","rectSel","r","getLineRange","column","forEach","toggleBlockSelection","documentToScreenPosition","anchor","rectangularRangeBlock","screenCursor","screenAnchor","includeEmptyLines","xBackwards","startColumn","endColumn","startOffsetX","offsetX","endOffsetX","docEnd","p1","p2","yBackwards","screenToDocumentPosition","isEmpty","reverse","Editor","MultiSelect","editor","$multiselectOnSessionChange","bind","$onMultiSelect","$onSingleSelect","onSessionChange","$checkMultiselectChange","on","addCommands","el","textInput","getElement","altCursor","reset","e","renderer","setMouseCursor","addListener","altDown","keyCode","ctrlKey","shiftKey","metaKey","$blockSelectEnabled","addAltCursorListeners","updateSelectionMarkers","updateCursor","updateBackMarkers","addSelectionMarker","orientedRange","style","getSelectionStyle","marker","addMarker","selectionMarkerCount","removeSelectionMarker","removeMarker","removeSelectionMarkers","markerList","setStyle","keyBinding","addKeyboardHandler","keyboardHandler","setDefaultHandler","$onMultiSelectExec","multiSelect","inVirtualMode","unsetStyle","removeKeyboardHandler","removeDefaultHandler","_emit","command","multiSelectAction","result","forEachSelection","args","exitMultiSelectMode","exec","cmd","options","inVirtualSelectionMode","keepOrder","$byLines","selection","reg","_eventRegistry","tmpSel","cmdResult","undefined","anim","$scrollAnimation","onCursorChange","onSelectionChange","from","to","animateScrolling","getSelectedText","text","buf","getTextRange","nl","getDocument","getNewLineCharacter","join","getSelectionRange","$clipPositionToDocument","findAll","needle","additive","getWordRange","$search","set","rangeAtPoint","selectMoreLines","dir","skip","screenLead","$desiredColumn","newRange","lead","desiredColumn","toRemove","transposeSelections","sel","all","tmp","words","shift","clone","replace","selectMore","stopAtFirst","$options","wrap","backwards","find","unfold","scrollCursorIntoView","alignCursors","sameRowRanges","filter","maxCol","minSpace","Infinity","spaceOffsets","map","p","spaceOffset","getLine","substr","l","d","insert","stringRepeat","remove","fr","lr","guessRange","line","max","getLength","test","lines","removeFullLines","$reAlignText","setRange","forceLeft","startW","textW","endW","isLeftAligned","isRightAligned","m","match","alignLeft","spaces","n","oldSession","off","defineOptions","enableMultiselect","val","value","enableBlockSelect"],"mappings":"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","file":"../multi_select.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2010, Ajax.org B.V.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\ndefine(function(require, exports, module) {\r\n\r\nvar RangeList = require(\"./range_list\").RangeList;\r\nvar Range = require(\"./range\").Range;\r\nvar Selection = require(\"./selection\").Selection;\r\nvar onMouseDown = require(\"./mouse/multi_select_handler\").onMouseDown;\r\nvar event = require(\"./lib/event\");\r\nvar lang = require(\"./lib/lang\");\r\nvar commands = require(\"./commands/multi_select_commands\");\r\nexports.commands = commands.defaultCommands.concat(commands.multiSelectCommands);\r\n\r\n// Todo: session.find or editor.findVolatile that returns range\r\nvar Search = require(\"./search\").Search;\r\nvar search = new Search();\r\n\r\nfunction find(session, needle, dir) {\r\n    search.$options.wrap = true;\r\n    search.$options.needle = needle;\r\n    search.$options.backwards = dir == -1;\r\n    return search.find(session);\r\n}\r\n\r\n// extend EditSession\r\nvar EditSession = require(\"./edit_session\").EditSession;\r\n(function() {\r\n    this.getSelectionMarkers = function() {\r\n        return this.$selectionMarkers;\r\n    };\r\n}).call(EditSession.prototype);\r\n\r\n// extend Selection\r\n(function() {\r\n    // list of ranges in reverse addition order\r\n    this.ranges = null;\r\n\r\n    // automatically sorted list of ranges\r\n    this.rangeList = null;\r\n\r\n    /** \r\n     * Adds a range to a selection by entering multiselect mode, if necessary.\r\n     * @param {Range} range The new range to add\r\n     * @param {Boolean} $blockChangeEvents Whether or not to block changing events\r\n     * @method Selection.addRange\r\n     **/\r\n    this.addRange = function(range, $blockChangeEvents) {\r\n        if (!range)\r\n            return;\r\n\r\n        if (!this.inMultiSelectMode && this.rangeCount === 0) {\r\n            var oldRange = this.toOrientedRange();\r\n            this.rangeList.add(oldRange);\r\n            this.rangeList.add(range);\r\n            if (this.rangeList.ranges.length != 2) {\r\n                this.rangeList.removeAll();\r\n                return $blockChangeEvents || this.fromOrientedRange(range);\r\n            }\r\n            this.rangeList.removeAll();\r\n            this.rangeList.add(oldRange);\r\n            this.$onAddRange(oldRange);\r\n        }\r\n\r\n        if (!range.cursor)\r\n            range.cursor = range.end;\r\n\r\n        var removed = this.rangeList.add(range);\r\n\r\n        this.$onAddRange(range);\r\n\r\n        if (removed.length)\r\n            this.$onRemoveRange(removed);\r\n\r\n        if (this.rangeCount > 1 && !this.inMultiSelectMode) {\r\n            this._signal(\"multiSelect\");\r\n            this.inMultiSelectMode = true;\r\n            this.session.$undoSelect = false;\r\n            this.rangeList.attach(this.session);\r\n        }\r\n\r\n        return $blockChangeEvents || this.fromOrientedRange(range);\r\n    };\r\n\r\n    /**\r\n     * @method Selection.toSingleRange\r\n     **/\r\n\r\n    this.toSingleRange = function(range) {\r\n        range = range || this.ranges[0];\r\n        var removed = this.rangeList.removeAll();\r\n        if (removed.length)\r\n            this.$onRemoveRange(removed);\r\n\r\n        range && this.fromOrientedRange(range);\r\n    };\r\n\r\n    /**\r\n     * Removes a Range containing pos (if it exists).\r\n     * @param {Range} pos The position to remove, as a `{row, column}` object\r\n     * @method Selection.substractPoint\r\n     **/\r\n    this.substractPoint = function(pos) {\r\n        var removed = this.rangeList.substractPoint(pos);\r\n        if (removed) {\r\n            this.$onRemoveRange(removed);\r\n            return removed[0];\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Merges overlapping ranges ensuring consistency after changes\r\n     * @method Selection.mergeOverlappingRanges\r\n     **/\r\n    this.mergeOverlappingRanges = function() {\r\n        var removed = this.rangeList.merge();\r\n        if (removed.length)\r\n            this.$onRemoveRange(removed);\r\n    };\r\n\r\n    this.$onAddRange = function(range) {\r\n        this.rangeCount = this.rangeList.ranges.length;\r\n        this.ranges.unshift(range);\r\n        this._signal(\"addRange\", {range: range});\r\n    };\r\n\r\n    this.$onRemoveRange = function(removed) {\r\n        this.rangeCount = this.rangeList.ranges.length;\r\n        if (this.rangeCount == 1 && this.inMultiSelectMode) {\r\n            var lastRange = this.rangeList.ranges.pop();\r\n            removed.push(lastRange);\r\n            this.rangeCount = 0;\r\n        }\r\n\r\n        for (var i = removed.length; i--; ) {\r\n            var index = this.ranges.indexOf(removed[i]);\r\n            this.ranges.splice(index, 1);\r\n        }\r\n\r\n        this._signal(\"removeRange\", {ranges: removed});\r\n\r\n        if (this.rangeCount === 0 && this.inMultiSelectMode) {\r\n            this.inMultiSelectMode = false;\r\n            this._signal(\"singleSelect\");\r\n            this.session.$undoSelect = true;\r\n            this.rangeList.detach(this.session);\r\n        }\r\n\r\n        lastRange = lastRange || this.ranges[0];\r\n        if (lastRange && !lastRange.isEqual(this.getRange()))\r\n            this.fromOrientedRange(lastRange);\r\n    };\r\n\r\n    // adds multicursor support to selection\r\n    this.$initRangeList = function() {\r\n        if (this.rangeList)\r\n            return;\r\n\r\n        this.rangeList = new RangeList();\r\n        this.ranges = [];\r\n        this.rangeCount = 0;\r\n    };\r\n\r\n    /**\r\n     * Returns a concatenation of all the ranges.\r\n     * @returns {Array}\r\n     * @method Selection.getAllRanges\r\n     **/\r\n    this.getAllRanges = function() {\r\n        return this.rangeCount ? this.rangeList.ranges.concat() : [this.getRange()];\r\n    };\r\n\r\n    /**\r\n     * Splits all the ranges into lines.\r\n     * @method Selection.splitIntoLines\r\n     **/\r\n\r\n    this.splitIntoLines = function () {\r\n        if (this.rangeCount > 1) {\r\n            var ranges = this.rangeList.ranges;\r\n            var lastRange = ranges[ranges.length - 1];\r\n            var range = Range.fromPoints(ranges[0].start, lastRange.end);\r\n\r\n            this.toSingleRange();\r\n            this.setSelectionRange(range, lastRange.cursor == lastRange.start);\r\n        } else {\r\n            var range = this.getRange();\r\n            var isBackwards = this.isBackwards();\r\n            var startRow = range.start.row;\r\n            var endRow = range.end.row;\r\n            if (startRow == endRow) {\r\n                if (isBackwards)\r\n                    var start = range.end, end = range.start;\r\n                else\r\n                    var start = range.start, end = range.end;\r\n                \r\n                this.addRange(Range.fromPoints(end, end));\r\n                this.addRange(Range.fromPoints(start, start));\r\n                return;\r\n            }\r\n\r\n            var rectSel = [];\r\n            var r = this.getLineRange(startRow, true);\r\n            r.start.column = range.start.column;\r\n            rectSel.push(r);\r\n\r\n            for (var i = startRow + 1; i < endRow; i++)\r\n                rectSel.push(this.getLineRange(i, true));\r\n\r\n            r = this.getLineRange(endRow, true);\r\n            r.end.column = range.end.column;\r\n            rectSel.push(r);\r\n\r\n            rectSel.forEach(this.addRange, this);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @method Selection.toggleBlockSelection\r\n     **/\r\n    this.toggleBlockSelection = function () {\r\n        if (this.rangeCount > 1) {\r\n            var ranges = this.rangeList.ranges;\r\n            var lastRange = ranges[ranges.length - 1];\r\n            var range = Range.fromPoints(ranges[0].start, lastRange.end);\r\n\r\n            this.toSingleRange();\r\n            this.setSelectionRange(range, lastRange.cursor == lastRange.start);\r\n        } else {\r\n            var cursor = this.session.documentToScreenPosition(this.cursor);\r\n            var anchor = this.session.documentToScreenPosition(this.anchor);\r\n\r\n            var rectSel = this.rectangularRangeBlock(cursor, anchor);\r\n            rectSel.forEach(this.addRange, this);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * \r\n     * Gets list of ranges composing rectangular block on the screen\r\n     * \r\n     * @param {Cursor} screenCursor The cursor to use\r\n     * @param {Anchor} screenAnchor The anchor to use\r\n     * @param {Boolean} includeEmptyLines If true, this includes ranges inside the block which are empty due to clipping\r\n     * @returns {Range}\r\n     * @method Selection.rectangularRangeBlock\r\n     **/\r\n    this.rectangularRangeBlock = function(screenCursor, screenAnchor, includeEmptyLines) {\r\n        var rectSel = [];\r\n\r\n        var xBackwards = screenCursor.column < screenAnchor.column;\r\n        if (xBackwards) {\r\n            var startColumn = screenCursor.column;\r\n            var endColumn = screenAnchor.column;\r\n            var startOffsetX = screenCursor.offsetX;\r\n            var endOffsetX = screenAnchor.offsetX;\r\n        } else {\r\n            var startColumn = screenAnchor.column;\r\n            var endColumn = screenCursor.column;\r\n            var startOffsetX = screenAnchor.offsetX;\r\n            var endOffsetX = screenCursor.offsetX;\r\n        }\r\n\r\n        var yBackwards = screenCursor.row < screenAnchor.row;\r\n        if (yBackwards) {\r\n            var startRow = screenCursor.row;\r\n            var endRow = screenAnchor.row;\r\n        } else {\r\n            var startRow = screenAnchor.row;\r\n            var endRow = screenCursor.row;\r\n        }\r\n\r\n        if (startColumn < 0)\r\n            startColumn = 0;\r\n        if (startRow < 0)\r\n            startRow = 0;\r\n\r\n        if (startRow == endRow)\r\n            includeEmptyLines = true;\r\n\r\n        var docEnd;\r\n        for (var row = startRow; row <= endRow; row++) {\r\n            var range = Range.fromPoints(\r\n                this.session.screenToDocumentPosition(row, startColumn, startOffsetX),\r\n                this.session.screenToDocumentPosition(row, endColumn, endOffsetX)\r\n            );\r\n            if (range.isEmpty()) {\r\n                if (docEnd && isSamePoint(range.end, docEnd))\r\n                    break;\r\n                docEnd = range.end;\r\n            }\r\n            range.cursor = xBackwards ? range.start : range.end;\r\n            rectSel.push(range);\r\n        }\r\n\r\n        if (yBackwards)\r\n            rectSel.reverse();\r\n\r\n        if (!includeEmptyLines) {\r\n            var end = rectSel.length - 1;\r\n            while (rectSel[end].isEmpty() && end > 0)\r\n                end--;\r\n            if (end > 0) {\r\n                var start = 0;\r\n                while (rectSel[start].isEmpty())\r\n                    start++;\r\n            }\r\n            for (var i = end; i >= start; i--) {\r\n                if (rectSel[i].isEmpty())\r\n                    rectSel.splice(i, 1);\r\n            }\r\n        }\r\n\r\n        return rectSel;\r\n    };\r\n}).call(Selection.prototype);\r\n\r\n// extend Editor\r\nvar Editor = require(\"./editor\").Editor;\r\n(function() {\r\n\r\n    /** \r\n     * \r\n     * Updates the cursor and marker layers.\r\n     * @method Editor.updateSelectionMarkers\r\n     *\r\n     **/\r\n    this.updateSelectionMarkers = function() {\r\n        this.renderer.updateCursor();\r\n        this.renderer.updateBackMarkers();\r\n    };\r\n\r\n    /** \r\n     * Adds the selection and cursor.\r\n     * @param {Range} orientedRange A range containing a cursor\r\n     * @returns {Range}\r\n     * @method Editor.addSelectionMarker\r\n     **/\r\n    this.addSelectionMarker = function(orientedRange) {\r\n        if (!orientedRange.cursor)\r\n            orientedRange.cursor = orientedRange.end;\r\n\r\n        var style = this.getSelectionStyle();\r\n        orientedRange.marker = this.session.addMarker(orientedRange, \"ace_selection\", style);\r\n\r\n        this.session.$selectionMarkers.push(orientedRange);\r\n        this.session.selectionMarkerCount = this.session.$selectionMarkers.length;\r\n        return orientedRange;\r\n    };\r\n\r\n    /** \r\n     * Removes the selection marker.\r\n     * @param {Range} range The selection range added with [[Editor.addSelectionMarker `addSelectionMarker()`]].\r\n     * @method Editor.removeSelectionMarker\r\n     **/\r\n    this.removeSelectionMarker = function(range) {\r\n        if (!range.marker)\r\n            return;\r\n        this.session.removeMarker(range.marker);\r\n        var index = this.session.$selectionMarkers.indexOf(range);\r\n        if (index != -1)\r\n            this.session.$selectionMarkers.splice(index, 1);\r\n        this.session.selectionMarkerCount = this.session.$selectionMarkers.length;\r\n    };\r\n\r\n    this.removeSelectionMarkers = function(ranges) {\r\n        var markerList = this.session.$selectionMarkers;\r\n        for (var i = ranges.length; i--; ) {\r\n            var range = ranges[i];\r\n            if (!range.marker)\r\n                continue;\r\n            this.session.removeMarker(range.marker);\r\n            var index = markerList.indexOf(range);\r\n            if (index != -1)\r\n                markerList.splice(index, 1);\r\n        }\r\n        this.session.selectionMarkerCount = markerList.length;\r\n    };\r\n\r\n    this.$onAddRange = function(e) {\r\n        this.addSelectionMarker(e.range);\r\n        this.renderer.updateCursor();\r\n        this.renderer.updateBackMarkers();\r\n    };\r\n\r\n    this.$onRemoveRange = function(e) {\r\n        this.removeSelectionMarkers(e.ranges);\r\n        this.renderer.updateCursor();\r\n        this.renderer.updateBackMarkers();\r\n    };\r\n\r\n    this.$onMultiSelect = function(e) {\r\n        if (this.inMultiSelectMode)\r\n            return;\r\n        this.inMultiSelectMode = true;\r\n\r\n        this.setStyle(\"ace_multiselect\");\r\n        this.keyBinding.addKeyboardHandler(commands.keyboardHandler);\r\n        this.commands.setDefaultHandler(\"exec\", this.$onMultiSelectExec);\r\n\r\n        this.renderer.updateCursor();\r\n        this.renderer.updateBackMarkers();\r\n    };\r\n\r\n    this.$onSingleSelect = function(e) {\r\n        if (this.session.multiSelect.inVirtualMode)\r\n            return;\r\n        this.inMultiSelectMode = false;\r\n\r\n        this.unsetStyle(\"ace_multiselect\");\r\n        this.keyBinding.removeKeyboardHandler(commands.keyboardHandler);\r\n\r\n        this.commands.removeDefaultHandler(\"exec\", this.$onMultiSelectExec);\r\n        this.renderer.updateCursor();\r\n        this.renderer.updateBackMarkers();\r\n        this._emit(\"changeSelection\");\r\n    };\r\n\r\n    this.$onMultiSelectExec = function(e) {\r\n        var command = e.command;\r\n        var editor = e.editor;\r\n        if (!editor.multiSelect)\r\n            return;\r\n        if (!command.multiSelectAction) {\r\n            var result = command.exec(editor, e.args || {});\r\n            editor.multiSelect.addRange(editor.multiSelect.toOrientedRange());\r\n            editor.multiSelect.mergeOverlappingRanges();\r\n        } else if (command.multiSelectAction == \"forEach\") {\r\n            result = editor.forEachSelection(command, e.args);\r\n        } else if (command.multiSelectAction == \"forEachLine\") {\r\n            result = editor.forEachSelection(command, e.args, true);\r\n        } else if (command.multiSelectAction == \"single\") {\r\n            editor.exitMultiSelectMode();\r\n            result = command.exec(editor, e.args || {});\r\n        } else {\r\n            result = command.multiSelectAction(editor, e.args || {});\r\n        }\r\n        return result;\r\n    };\r\n\r\n    /** \r\n     * Executes a command for each selection range.\r\n     * @param {Object} cmd The command to execute\r\n     * @param {String} args Any arguments for the command\r\n     * @method Editor.forEachSelection\r\n     **/ \r\n    this.forEachSelection = function(cmd, args, options) {\r\n        if (this.inVirtualSelectionMode)\r\n            return;\r\n        var keepOrder = options && options.keepOrder;\r\n        var $byLines = options == true || options && options.$byLines;\r\n        var session = this.session;\r\n        var selection = this.selection;\r\n        var rangeList = selection.rangeList;\r\n        var ranges = (keepOrder ? selection : rangeList).ranges;\r\n        var result;\r\n        \r\n        if (!ranges.length)\r\n            return cmd.exec ? cmd.exec(this, args || {}) : cmd(this, args || {});\r\n        \r\n        var reg = selection._eventRegistry;\r\n        selection._eventRegistry = {};\r\n\r\n        var tmpSel = new Selection(session);\r\n        this.inVirtualSelectionMode = true;\r\n        for (var i = ranges.length; i--;) {\r\n            if ($byLines) {\r\n                while (i > 0 && ranges[i].start.row == ranges[i - 1].end.row)\r\n                    i--;\r\n            }\r\n            tmpSel.fromOrientedRange(ranges[i]);\r\n            tmpSel.index = i;\r\n            this.selection = session.selection = tmpSel;\r\n            var cmdResult = cmd.exec ? cmd.exec(this, args || {}) : cmd(this, args || {});\r\n            if (!result && cmdResult !== undefined)\r\n                result = cmdResult;\r\n            tmpSel.toOrientedRange(ranges[i]);\r\n        }\r\n        tmpSel.detach();\r\n\r\n        this.selection = session.selection = selection;\r\n        this.inVirtualSelectionMode = false;\r\n        selection._eventRegistry = reg;\r\n        selection.mergeOverlappingRanges();\r\n        if (selection.ranges[0])\r\n            selection.fromOrientedRange(selection.ranges[0]);\r\n        \r\n        var anim = this.renderer.$scrollAnimation;\r\n        this.onCursorChange();\r\n        this.onSelectionChange();\r\n        if (anim && anim.from == anim.to)\r\n            this.renderer.animateScrolling(anim.from);\r\n        \r\n        return result;\r\n    };\r\n\r\n    /** \r\n    * Removes all the selections except the last added one.\r\n    * @method Editor.exitMultiSelectMode\r\n    **/\r\n    this.exitMultiSelectMode = function() {\r\n        if (!this.inMultiSelectMode || this.inVirtualSelectionMode)\r\n            return;\r\n        this.multiSelect.toSingleRange();\r\n    };\r\n\r\n    this.getSelectedText = function() {\r\n        var text = \"\";\r\n        if (this.inMultiSelectMode && !this.inVirtualSelectionMode) {\r\n            var ranges = this.multiSelect.rangeList.ranges;\r\n            var buf = [];\r\n            for (var i = 0; i < ranges.length; i++) {\r\n                buf.push(this.session.getTextRange(ranges[i]));\r\n            }\r\n            var nl = this.session.getDocument().getNewLineCharacter();\r\n            text = buf.join(nl);\r\n            if (text.length == (buf.length - 1) * nl.length)\r\n                text = \"\";\r\n        } else if (!this.selection.isEmpty()) {\r\n            text = this.session.getTextRange(this.getSelectionRange());\r\n        }\r\n        return text;\r\n    };\r\n    \r\n    this.$checkMultiselectChange = function(e, anchor) {\r\n        if (this.inMultiSelectMode && !this.inVirtualSelectionMode) {\r\n            var range = this.multiSelect.ranges[0];\r\n            if (this.multiSelect.isEmpty() && anchor == this.multiSelect.anchor)\r\n                return;\r\n            var pos = anchor == this.multiSelect.anchor\r\n                ? range.cursor == range.start ? range.end : range.start\r\n                : range.cursor;\r\n            if (pos.row != anchor.row \r\n                || this.session.$clipPositionToDocument(pos.row, pos.column).column != anchor.column)\r\n                this.multiSelect.toSingleRange(this.multiSelect.toOrientedRange());\r\n            else\r\n                this.multiSelect.mergeOverlappingRanges();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Finds and selects all the occurrences of `needle`.\r\n     * @param {String} The text to find\r\n     * @param {Object} The search options\r\n     * @param {Boolean} keeps\r\n     *\r\n     * @returns {Number} The cumulative count of all found matches \r\n     * @method Editor.findAll\r\n     **/\r\n    this.findAll = function(needle, options, additive) {\r\n        options = options || {};\r\n        options.needle = needle || options.needle;\r\n        if (options.needle == undefined) {\r\n            var range = this.selection.isEmpty()\r\n                ? this.selection.getWordRange()\r\n                : this.selection.getRange();\r\n            options.needle = this.session.getTextRange(range);\r\n        }    \r\n        this.$search.set(options);\r\n        \r\n        var ranges = this.$search.findAll(this.session);\r\n        if (!ranges.length)\r\n            return 0;\r\n\r\n        var selection = this.multiSelect;\r\n\r\n        if (!additive)\r\n            selection.toSingleRange(ranges[0]);\r\n\r\n        for (var i = ranges.length; i--; )\r\n            selection.addRange(ranges[i], true);\r\n\r\n        // keep old selection as primary if possible\r\n        if (range && selection.rangeList.rangeAtPoint(range.start))\r\n            selection.addRange(range, true);\r\n        \r\n        return ranges.length;\r\n    };\r\n\r\n    /**\r\n     * Adds a cursor above or below the active cursor.\r\n     * \r\n     * @param {Number} dir The direction of lines to select: -1 for up, 1 for down\r\n     * @param {Boolean} skip If `true`, removes the active selection range\r\n     *\r\n     * @method Editor.selectMoreLines \r\n     */\r\n    this.selectMoreLines = function(dir, skip) {\r\n        var range = this.selection.toOrientedRange();\r\n        var isBackwards = range.cursor == range.end;\r\n\r\n        var screenLead = this.session.documentToScreenPosition(range.cursor);\r\n        if (this.selection.$desiredColumn)\r\n            screenLead.column = this.selection.$desiredColumn;\r\n\r\n        var lead = this.session.screenToDocumentPosition(screenLead.row + dir, screenLead.column);\r\n\r\n        if (!range.isEmpty()) {\r\n            var screenAnchor = this.session.documentToScreenPosition(isBackwards ? range.end : range.start);\r\n            var anchor = this.session.screenToDocumentPosition(screenAnchor.row + dir, screenAnchor.column);\r\n        } else {\r\n            var anchor = lead;\r\n        }\r\n\r\n        if (isBackwards) {\r\n            var newRange = Range.fromPoints(lead, anchor);\r\n            newRange.cursor = newRange.start;\r\n        } else {\r\n            var newRange = Range.fromPoints(anchor, lead);\r\n            newRange.cursor = newRange.end;\r\n        }\r\n\r\n        newRange.desiredColumn = screenLead.column;\r\n        if (!this.selection.inMultiSelectMode) {\r\n            this.selection.addRange(range);\r\n        } else {\r\n            if (skip)\r\n                var toRemove = range.cursor;\r\n        }\r\n\r\n        this.selection.addRange(newRange);\r\n        if (toRemove)\r\n            this.selection.substractPoint(toRemove);\r\n    };\r\n\r\n    /** \r\n     * Transposes the selected ranges.\r\n     * @param {Number} dir The direction to rotate selections\r\n     * @method Editor.transposeSelections\r\n     **/\r\n    this.transposeSelections = function(dir) {\r\n        var session = this.session;\r\n        var sel = session.multiSelect;\r\n        var all = sel.ranges;\r\n\r\n        for (var i = all.length; i--; ) {\r\n            var range = all[i];\r\n            if (range.isEmpty()) {\r\n                var tmp = session.getWordRange(range.start.row, range.start.column);\r\n                range.start.row = tmp.start.row;\r\n                range.start.column = tmp.start.column;\r\n                range.end.row = tmp.end.row;\r\n                range.end.column = tmp.end.column;\r\n            }\r\n        }\r\n        sel.mergeOverlappingRanges();\r\n\r\n        var words = [];\r\n        for (var i = all.length; i--; ) {\r\n            var range = all[i];\r\n            words.unshift(session.getTextRange(range));\r\n        }\r\n\r\n        if (dir < 0)\r\n            words.unshift(words.pop());\r\n        else\r\n            words.push(words.shift());\r\n\r\n        for (var i = all.length; i--; ) {\r\n            var range = all[i];\r\n            var tmp = range.clone();\r\n            session.replace(range, words[i]);\r\n            range.start.row = tmp.start.row;\r\n            range.start.column = tmp.start.column;\r\n        }\r\n        sel.fromOrientedRange(sel.ranges[0]);\r\n    };\r\n\r\n    /** \r\n     * Finds the next occurrence of text in an active selection and adds it to the selections.\r\n     * @param {Number} dir The direction of lines to select: -1 for up, 1 for down\r\n     * @param {Boolean} skip If `true`, removes the active selection range\r\n     * @method Editor.selectMore\r\n     **/\r\n    this.selectMore = function(dir, skip, stopAtFirst) {\r\n        var session = this.session;\r\n        var sel = session.multiSelect;\r\n\r\n        var range = sel.toOrientedRange();\r\n        if (range.isEmpty()) {\r\n            range = session.getWordRange(range.start.row, range.start.column);\r\n            range.cursor = dir == -1 ? range.start : range.end;\r\n            this.multiSelect.addRange(range);\r\n            if (stopAtFirst)\r\n                return;\r\n        }\r\n        var needle = session.getTextRange(range);\r\n\r\n        var newRange = find(session, needle, dir);\r\n        if (newRange) {\r\n            newRange.cursor = dir == -1 ? newRange.start : newRange.end;\r\n            this.session.unfold(newRange);\r\n            this.multiSelect.addRange(newRange);\r\n            this.renderer.scrollCursorIntoView(null, 0.5);\r\n        }\r\n        if (skip)\r\n            this.multiSelect.substractPoint(range.cursor);\r\n    };\r\n\r\n    /** \r\n     * Aligns the cursors or selected text.\r\n     * @method Editor.alignCursors\r\n     **/\r\n    this.alignCursors = function() {\r\n        var session = this.session;\r\n        var sel = session.multiSelect;\r\n        var ranges = sel.ranges;\r\n        // filter out ranges on same row\r\n        var row = -1;\r\n        var sameRowRanges = ranges.filter(function(r) {\r\n            if (r.cursor.row == row)\r\n                return true;\r\n            row = r.cursor.row;\r\n        });\r\n        \r\n        if (!ranges.length || sameRowRanges.length == ranges.length - 1) {\r\n            var range = this.selection.getRange();\r\n            var fr = range.start.row, lr = range.end.row;\r\n            var guessRange = fr == lr;\r\n            if (guessRange) {\r\n                var max = this.session.getLength();\r\n                var line;\r\n                do {\r\n                    line = this.session.getLine(lr);\r\n                } while (/[=:]/.test(line) && ++lr < max);\r\n                do {\r\n                    line = this.session.getLine(fr);\r\n                } while (/[=:]/.test(line) && --fr > 0);\r\n                \r\n                if (fr < 0) fr = 0;\r\n                if (lr >= max) lr = max - 1;\r\n            }\r\n            var lines = this.session.removeFullLines(fr, lr);\r\n            lines = this.$reAlignText(lines, guessRange);\r\n            this.session.insert({row: fr, column: 0}, lines.join(\"\\n\") + \"\\n\");\r\n            if (!guessRange) {\r\n                range.start.column = 0;\r\n                range.end.column = lines[lines.length - 1].length;\r\n            }\r\n            this.selection.setRange(range);\r\n        } else {\r\n            sameRowRanges.forEach(function(r) {\r\n                sel.substractPoint(r.cursor);\r\n            });\r\n\r\n            var maxCol = 0;\r\n            var minSpace = Infinity;\r\n            var spaceOffsets = ranges.map(function(r) {\r\n                var p = r.cursor;\r\n                var line = session.getLine(p.row);\r\n                var spaceOffset = line.substr(p.column).search(/\\S/g);\r\n                if (spaceOffset == -1)\r\n                    spaceOffset = 0;\r\n\r\n                if (p.column > maxCol)\r\n                    maxCol = p.column;\r\n                if (spaceOffset < minSpace)\r\n                    minSpace = spaceOffset;\r\n                return spaceOffset;\r\n            });\r\n            ranges.forEach(function(r, i) {\r\n                var p = r.cursor;\r\n                var l = maxCol - p.column;\r\n                var d = spaceOffsets[i] - minSpace;\r\n                if (l > d)\r\n                    session.insert(p, lang.stringRepeat(\" \", l - d));\r\n                else\r\n                    session.remove(new Range(p.row, p.column, p.row, p.column - l + d));\r\n\r\n                r.start.column = r.end.column = maxCol;\r\n                r.start.row = r.end.row = p.row;\r\n                r.cursor = r.end;\r\n            });\r\n            sel.fromOrientedRange(ranges[0]);\r\n            this.renderer.updateCursor();\r\n            this.renderer.updateBackMarkers();\r\n        }\r\n    };\r\n\r\n    this.$reAlignText = function(lines, forceLeft) {\r\n        var isLeftAligned = true, isRightAligned = true;\r\n        var startW, textW, endW;\r\n\r\n        return lines.map(function(line) {\r\n            var m = line.match(/(\\s*)(.*?)(\\s*)([=:].*)/);\r\n            if (!m)\r\n                return [line];\r\n\r\n            if (startW == null) {\r\n                startW = m[1].length;\r\n                textW = m[2].length;\r\n                endW = m[3].length;\r\n                return m;\r\n            }\r\n\r\n            if (startW + textW + endW != m[1].length + m[2].length + m[3].length)\r\n                isRightAligned = false;\r\n            if (startW != m[1].length)\r\n                isLeftAligned = false;\r\n\r\n            if (startW > m[1].length)\r\n                startW = m[1].length;\r\n            if (textW < m[2].length)\r\n                textW = m[2].length;\r\n            if (endW > m[3].length)\r\n                endW = m[3].length;\r\n\r\n            return m;\r\n        }).map(forceLeft ? alignLeft :\r\n            isLeftAligned ? isRightAligned ? alignRight : alignLeft : unAlign);\r\n\r\n        function spaces(n) {\r\n            return lang.stringRepeat(\" \", n);\r\n        }\r\n\r\n        function alignLeft(m) {\r\n            return !m[2] ? m[0] : spaces(startW) + m[2]\r\n                + spaces(textW - m[2].length + endW)\r\n                + m[4].replace(/^([=:])\\s+/, \"$1 \");\r\n        }\r\n        function alignRight(m) {\r\n            return !m[2] ? m[0] : spaces(startW + textW - m[2].length) + m[2]\r\n                + spaces(endW)\r\n                + m[4].replace(/^([=:])\\s+/, \"$1 \");\r\n        }\r\n        function unAlign(m) {\r\n            return !m[2] ? m[0] : spaces(startW) + m[2]\r\n                + spaces(endW)\r\n                + m[4].replace(/^([=:])\\s+/, \"$1 \");\r\n        }\r\n    };\r\n}).call(Editor.prototype);\r\n\r\n\r\nfunction isSamePoint(p1, p2) {\r\n    return p1.row == p2.row && p1.column == p2.column;\r\n}\r\n\r\n// patch\r\n// adds multicursor support to a session\r\nexports.onSessionChange = function(e) {\r\n    var session = e.session;\r\n    if (session && !session.multiSelect) {\r\n        session.$selectionMarkers = [];\r\n        session.selection.$initRangeList();\r\n        session.multiSelect = session.selection;\r\n    }\r\n    this.multiSelect = session && session.multiSelect;\r\n\r\n    var oldSession = e.oldSession;\r\n    if (oldSession) {\r\n        oldSession.multiSelect.off(\"addRange\", this.$onAddRange);\r\n        oldSession.multiSelect.off(\"removeRange\", this.$onRemoveRange);\r\n        oldSession.multiSelect.off(\"multiSelect\", this.$onMultiSelect);\r\n        oldSession.multiSelect.off(\"singleSelect\", this.$onSingleSelect);\r\n        oldSession.multiSelect.lead.off(\"change\", this.$checkMultiselectChange);\r\n        oldSession.multiSelect.anchor.off(\"change\", this.$checkMultiselectChange);\r\n    }\r\n\r\n    if (session) {\r\n        session.multiSelect.on(\"addRange\", this.$onAddRange);\r\n        session.multiSelect.on(\"removeRange\", this.$onRemoveRange);\r\n        session.multiSelect.on(\"multiSelect\", this.$onMultiSelect);\r\n        session.multiSelect.on(\"singleSelect\", this.$onSingleSelect);\r\n        session.multiSelect.lead.on(\"change\", this.$checkMultiselectChange);\r\n        session.multiSelect.anchor.on(\"change\", this.$checkMultiselectChange);\r\n    }\r\n\r\n    if (session && this.inMultiSelectMode != session.selection.inMultiSelectMode) {\r\n        if (session.selection.inMultiSelectMode)\r\n            this.$onMultiSelect();\r\n        else\r\n            this.$onSingleSelect();\r\n    }\r\n};\r\n\r\n// MultiSelect(editor)\r\n// adds multiple selection support to the editor\r\n// (note: should be called only once for each editor instance)\r\nfunction MultiSelect(editor) {\r\n    if (editor.$multiselectOnSessionChange)\r\n        return;\r\n    editor.$onAddRange = editor.$onAddRange.bind(editor);\r\n    editor.$onRemoveRange = editor.$onRemoveRange.bind(editor);\r\n    editor.$onMultiSelect = editor.$onMultiSelect.bind(editor);\r\n    editor.$onSingleSelect = editor.$onSingleSelect.bind(editor);\r\n    editor.$multiselectOnSessionChange = exports.onSessionChange.bind(editor);\r\n    editor.$checkMultiselectChange = editor.$checkMultiselectChange.bind(editor);\r\n\r\n    editor.$multiselectOnSessionChange(editor);\r\n    editor.on(\"changeSession\", editor.$multiselectOnSessionChange);\r\n\r\n    editor.on(\"mousedown\", onMouseDown);\r\n    editor.commands.addCommands(commands.defaultCommands);\r\n\r\n    addAltCursorListeners(editor);\r\n}\r\n\r\nfunction addAltCursorListeners(editor){\r\n    var el = editor.textInput.getElement();\r\n    var altCursor = false;\r\n    event.addListener(el, \"keydown\", function(e) {\r\n        var altDown = e.keyCode == 18 && !(e.ctrlKey || e.shiftKey || e.metaKey);\r\n        if (editor.$blockSelectEnabled && altDown) {\r\n            if (!altCursor) {\r\n                editor.renderer.setMouseCursor(\"crosshair\");\r\n                altCursor = true;\r\n            }\r\n        } else if (altCursor) {\r\n            reset();\r\n        }\r\n    });\r\n\r\n    event.addListener(el, \"keyup\", reset);\r\n    event.addListener(el, \"blur\", reset);\r\n    function reset(e) {\r\n        if (altCursor) {\r\n            editor.renderer.setMouseCursor(\"\");\r\n            altCursor = false;\r\n            // TODO disable menu popping up\r\n            // e && e.preventDefault()\r\n        }\r\n    }\r\n}\r\n\r\nexports.MultiSelect = MultiSelect;\r\n\r\n\r\nrequire(\"./config\").defineOptions(Editor.prototype, \"editor\", {\r\n    enableMultiselect: {\r\n        set: function(val) {\r\n            MultiSelect(this);\r\n            if (val) {\r\n                this.on(\"changeSession\", this.$multiselectOnSessionChange);\r\n                this.on(\"mousedown\", onMouseDown);\r\n            } else {\r\n                this.off(\"changeSession\", this.$multiselectOnSessionChange);\r\n                this.off(\"mousedown\", onMouseDown);\r\n            }\r\n        },\r\n        value: true\r\n    },\r\n    enableBlockSelect: {\r\n        set: function(val) {\r\n            this.$blockSelectEnabled = val;\r\n        },\r\n        value: true\r\n    }\r\n});\r\n\r\n\r\n\r\n});\r\n"]}