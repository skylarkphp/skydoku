{"version":3,"sources":["mouse/default_gutter_handler.js"],"names":["define","require","exports","module","dom","oop","event","Tooltip","GutterTooltip","parentNode","call","this","inherits","setPosition","x","y","windowWidth","window","innerWidth","document","documentElement","clientWidth","windowHeight","innerHeight","clientHeight","width","getWidth","height","getHeight","prototype","GutterHandler","mouseHandler","tooltipTimeout","mouseEvent","tooltipAnnotation","editor","gutter","renderer","$gutterLayer","tooltip","container","hideTooltip","clearTimeout","hide","_signal","removeEventListener","moveTooltip","e","setDefaultHandler","isFocused","getButton","getRegion","row","getDocumentPosition","selection","session","getShiftKey","selectTo","domEvent","detail","selectAll","preventDefault","$clickSelection","getLineRange","setState","captureMouse","target","srcElement","hasCssClass","$tooltipFollowsMouse","setTimeout","isMousePressed","annotation","$annotations","getLength","screenRow","pixelToScreenCoordinates","pos","$pos","documentToScreenRow","column","text","join","setHtml","show","on","rect","getBoundingClientRect","style","getElement","left","right","top","bottom","showTooltip","addListener","$gutter"],"mappings":"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","file":"../../mouse/default_gutter_handler.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2010, Ajax.org B.V.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\ndefine(function(require, exports, module) {\r\n\"use strict\";\r\nvar dom = require(\"../lib/dom\");\r\nvar oop = require(\"../lib/oop\");\r\nvar event = require(\"../lib/event\");\r\nvar Tooltip = require(\"../tooltip\").Tooltip;\r\n\r\nfunction GutterHandler(mouseHandler) {\r\n    var editor = mouseHandler.editor;\r\n    var gutter = editor.renderer.$gutterLayer;\r\n    var tooltip = new GutterTooltip(editor.container);\r\n\r\n    mouseHandler.editor.setDefaultHandler(\"guttermousedown\", function(e) {\r\n        if (!editor.isFocused() || e.getButton() != 0)\r\n            return;\r\n        var gutterRegion = gutter.getRegion(e);\r\n\r\n        if (gutterRegion == \"foldWidgets\")\r\n            return;\r\n\r\n        var row = e.getDocumentPosition().row;\r\n        var selection = editor.session.selection;\r\n\r\n        if (e.getShiftKey())\r\n            selection.selectTo(row, 0);\r\n        else {\r\n            if (e.domEvent.detail == 2) {\r\n                editor.selectAll();\r\n                return e.preventDefault();\r\n            }\r\n            mouseHandler.$clickSelection = editor.selection.getLineRange(row);\r\n        }\r\n        mouseHandler.setState(\"selectByLines\");\r\n        mouseHandler.captureMouse(e);\r\n        return e.preventDefault();\r\n    });\r\n\r\n\r\n    var tooltipTimeout, mouseEvent, tooltipAnnotation;\r\n\r\n    function showTooltip() {\r\n        var row = mouseEvent.getDocumentPosition().row;\r\n        var annotation = gutter.$annotations[row];\r\n        if (!annotation)\r\n            return hideTooltip();\r\n\r\n        var maxRow = editor.session.getLength();\r\n        if (row == maxRow) {\r\n            var screenRow = editor.renderer.pixelToScreenCoordinates(0, mouseEvent.y).row;\r\n            var pos = mouseEvent.$pos;\r\n            if (screenRow > editor.session.documentToScreenRow(pos.row, pos.column))\r\n                return hideTooltip();\r\n        }\r\n\r\n        if (tooltipAnnotation == annotation)\r\n            return;\r\n        tooltipAnnotation = annotation.text.join(\"<br/>\");\r\n\r\n        tooltip.setHtml(tooltipAnnotation);\r\n        tooltip.show();\r\n        editor._signal(\"showGutterTooltip\", tooltip);\r\n        editor.on(\"mousewheel\", hideTooltip);\r\n\r\n        if (mouseHandler.$tooltipFollowsMouse) {\r\n            moveTooltip(mouseEvent);\r\n        } else {\r\n            var gutterElement = mouseEvent.domEvent.target;\r\n            var rect = gutterElement.getBoundingClientRect();\r\n            var style = tooltip.getElement().style;\r\n            style.left = rect.right + \"px\";\r\n            style.top = rect.bottom + \"px\";\r\n        }\r\n    }\r\n\r\n    function hideTooltip() {\r\n        if (tooltipTimeout)\r\n            tooltipTimeout = clearTimeout(tooltipTimeout);\r\n        if (tooltipAnnotation) {\r\n            tooltip.hide();\r\n            tooltipAnnotation = null;\r\n            editor._signal(\"hideGutterTooltip\", tooltip);\r\n            editor.removeEventListener(\"mousewheel\", hideTooltip);\r\n        }\r\n    }\r\n\r\n    function moveTooltip(e) {\r\n        tooltip.setPosition(e.x, e.y);\r\n    }\r\n\r\n    mouseHandler.editor.setDefaultHandler(\"guttermousemove\", function(e) {\r\n        var target = e.domEvent.target || e.domEvent.srcElement;\r\n        if (dom.hasCssClass(target, \"ace_fold-widget\"))\r\n            return hideTooltip();\r\n\r\n        if (tooltipAnnotation && mouseHandler.$tooltipFollowsMouse)\r\n            moveTooltip(e);\r\n\r\n        mouseEvent = e;\r\n        if (tooltipTimeout)\r\n            return;\r\n        tooltipTimeout = setTimeout(function() {\r\n            tooltipTimeout = null;\r\n            if (mouseEvent && !mouseHandler.isMousePressed)\r\n                showTooltip();\r\n            else\r\n                hideTooltip();\r\n        }, 50);\r\n    });\r\n\r\n    event.addListener(editor.renderer.$gutter, \"mouseout\", function(e) {\r\n        mouseEvent = null;\r\n        if (!tooltipAnnotation || tooltipTimeout)\r\n            return;\r\n\r\n        tooltipTimeout = setTimeout(function() {\r\n            tooltipTimeout = null;\r\n            hideTooltip();\r\n        }, 50);\r\n    });\r\n    \r\n    editor.on(\"changeSession\", hideTooltip);\r\n}\r\n\r\nfunction GutterTooltip(parentNode) {\r\n    Tooltip.call(this, parentNode);\r\n}\r\n\r\noop.inherits(GutterTooltip, Tooltip);\r\n\r\n(function(){\r\n    this.setPosition = function(x, y) {\r\n        var windowWidth = window.innerWidth || document.documentElement.clientWidth;\r\n        var windowHeight = window.innerHeight || document.documentElement.clientHeight;\r\n        var width = this.getWidth();\r\n        var height = this.getHeight();\r\n        x += 15;\r\n        y += 15;\r\n        if (x + width > windowWidth) {\r\n            x -= (x + width) - windowWidth;\r\n        }\r\n        if (y + height > windowHeight) {\r\n            y -= 20 + height;\r\n        }\r\n        Tooltip.prototype.setPosition.call(this, x, y);\r\n    };\r\n\r\n}).call(GutterTooltip.prototype);\r\n\r\n\r\n\r\nexports.GutterHandler = GutterHandler;\r\n\r\n});\r\n"]}