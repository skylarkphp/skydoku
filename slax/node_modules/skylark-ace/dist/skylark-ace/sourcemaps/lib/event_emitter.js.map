{"version":3,"sources":["lib/event_emitter.js"],"names":["define","require","exports","module","EventEmitter","stopPropagation","this","propagationStopped","preventDefault","defaultPrevented","_emit","_dispatchEvent","eventName","e","_eventRegistry","_defaultHandlers","listeners","defaultHandler","length","type","slice","i","_signal","once","callback","_self","addEventListener","newCallback","removeEventListener","apply","arguments","Promise","resolve","setDefaultHandler","handlers","_disabled_","old","disabled","push","indexOf","splice","removeDefaultHandler","pop","on","capturing","off","removeListener","index","removeAllListeners"],"mappings":"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","file":"../../lib/event_emitter.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2010, Ajax.org B.V.\r\n * All rights reserved.\r\n * \r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n * \r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\ndefine(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar EventEmitter = {};\r\nvar stopPropagation = function() { this.propagationStopped = true; };\r\nvar preventDefault = function() { this.defaultPrevented = true; };\r\n\r\nEventEmitter._emit =\r\nEventEmitter._dispatchEvent = function(eventName, e) {\r\n    this._eventRegistry || (this._eventRegistry = {});\r\n    this._defaultHandlers || (this._defaultHandlers = {});\r\n\r\n    var listeners = this._eventRegistry[eventName] || [];\r\n    var defaultHandler = this._defaultHandlers[eventName];\r\n    if (!listeners.length && !defaultHandler)\r\n        return;\r\n\r\n    if (typeof e != \"object\" || !e)\r\n        e = {};\r\n\r\n    if (!e.type)\r\n        e.type = eventName;\r\n    if (!e.stopPropagation)\r\n        e.stopPropagation = stopPropagation;\r\n    if (!e.preventDefault)\r\n        e.preventDefault = preventDefault;\r\n\r\n    listeners = listeners.slice();\r\n    for (var i=0; i<listeners.length; i++) {\r\n        listeners[i](e, this);\r\n        if (e.propagationStopped)\r\n            break;\r\n    }\r\n    \r\n    if (defaultHandler && !e.defaultPrevented)\r\n        return defaultHandler(e, this);\r\n};\r\n\r\n\r\nEventEmitter._signal = function(eventName, e) {\r\n    var listeners = (this._eventRegistry || {})[eventName];\r\n    if (!listeners)\r\n        return;\r\n    listeners = listeners.slice();\r\n    for (var i=0; i<listeners.length; i++)\r\n        listeners[i](e, this);\r\n};\r\n\r\nEventEmitter.once = function(eventName, callback) {\r\n    var _self = this;\r\n    this.addEventListener(eventName, function newCallback() {\r\n        _self.removeEventListener(eventName, newCallback);\r\n        callback.apply(null, arguments);\r\n    });\r\n    if (!callback) {\r\n        /*global Promise*/\r\n        return new Promise(function(resolve) {\r\n            callback = resolve;\r\n        });\r\n    }\r\n};\r\n\r\n\r\nEventEmitter.setDefaultHandler = function(eventName, callback) {\r\n    var handlers = this._defaultHandlers;\r\n    if (!handlers)\r\n        handlers = this._defaultHandlers = {_disabled_: {}};\r\n    \r\n    if (handlers[eventName]) {\r\n        var old = handlers[eventName];\r\n        var disabled = handlers._disabled_[eventName];\r\n        if (!disabled)\r\n            handlers._disabled_[eventName] = disabled = [];\r\n        disabled.push(old);\r\n        var i = disabled.indexOf(callback);\r\n        if (i != -1) \r\n            disabled.splice(i, 1);\r\n    }\r\n    handlers[eventName] = callback;\r\n};\r\nEventEmitter.removeDefaultHandler = function(eventName, callback) {\r\n    var handlers = this._defaultHandlers;\r\n    if (!handlers)\r\n        return;\r\n    var disabled = handlers._disabled_[eventName];\r\n    \r\n    if (handlers[eventName] == callback) {\r\n        if (disabled)\r\n            this.setDefaultHandler(eventName, disabled.pop());\r\n    } else if (disabled) {\r\n        var i = disabled.indexOf(callback);\r\n        if (i != -1)\r\n            disabled.splice(i, 1);\r\n    }\r\n};\r\n\r\nEventEmitter.on =\r\nEventEmitter.addEventListener = function(eventName, callback, capturing) {\r\n    this._eventRegistry = this._eventRegistry || {};\r\n\r\n    var listeners = this._eventRegistry[eventName];\r\n    if (!listeners)\r\n        listeners = this._eventRegistry[eventName] = [];\r\n\r\n    if (listeners.indexOf(callback) == -1)\r\n        listeners[capturing ? \"unshift\" : \"push\"](callback);\r\n    return callback;\r\n};\r\n\r\nEventEmitter.off =\r\nEventEmitter.removeListener =\r\nEventEmitter.removeEventListener = function(eventName, callback) {\r\n    this._eventRegistry = this._eventRegistry || {};\r\n\r\n    var listeners = this._eventRegistry[eventName];\r\n    if (!listeners)\r\n        return;\r\n\r\n    var index = listeners.indexOf(callback);\r\n    if (index !== -1)\r\n        listeners.splice(index, 1);\r\n};\r\n\r\nEventEmitter.removeAllListeners = function(eventName) {\r\n    if (this._eventRegistry) this._eventRegistry[eventName] = [];\r\n};\r\n\r\nexports.EventEmitter = EventEmitter;\r\n\r\n});\r\n"]}