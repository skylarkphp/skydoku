{"version":3,"sources":["lib/bidiutil.js"],"names":["define","require","exports","module","dir","hiLevel","lastArabic","hasUBAT_B","hasUBAT_S","impTab_LTR","impTab_RTL","RTL","L","R","EN","AN","ON","B","S","AL","WS","CS","ES","ET","NSM","LRE","RLE","PDF","LRO","RLO","BN","UnicodeTBL00","UnicodeTBL20","_invertLevel","lev","levels","_array","end","lo","hi","tmp","len","length","start","reverse","_getCharClass","chars","types","classes","ix","wType","nType","i","cType","c","rtlCandidate","_getCharacterType","ch","uc","charCodeAt","test","ON_R","R_H","DOT","doBidiReorder","text","textCharTypes","isRtl","split","logicalFromVisual","Array","bidiLevels","charTypes","impTab","prevState","newClass","newLevel","newState","action","condPos","j","_computeLevels","hasBidiCharacters","ret","charAt","getVisualFromLogicalIdx","logIdx","rowMap"],"mappings":"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","file":"../../lib/bidiutil.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2010, Ajax.org B.V.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\ndefine(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar ArabicAlefBetIntervalsBegine = ['\\u0621', '\\u0641'];\r\nvar ArabicAlefBetIntervalsEnd = ['\\u063A', '\\u064a'];\r\nvar dir = 0, hiLevel = 0;\r\nvar lastArabic = false, hasUBAT_AL = false,  hasUBAT_B = false,  hasUBAT_S = false, hasBlockSep = false, hasSegSep = false;\r\n\r\nvar impTab_LTR = [\r\n\t\t\t\t/*\t\tL,\t\tR,\t\tEN,\t\tAN,\t\tN,\t\tIL,\t\tCond */\r\n/* 0 LTR text\t*/\t[\t0,\t\t3,\t\t0,\t\t1,\t\t0,\t\t0,\t\t0\t],\r\n/* 1 LTR+AN\t\t*/\t[\t0,\t\t3,\t\t0,\t\t1,\t\t2,\t\t2,\t\t0\t],\r\n/* 2 LTR+AN+N\t*/\t[\t0,\t\t3,\t\t0,\t\t0x11,\t\t2,\t\t0,\t\t1\t],\r\n/* 3 RTL text\t*/\t[\t0,\t\t3,\t\t5,\t\t5,\t\t4,\t\t1,\t\t0\t],\r\n/* 4 RTL cont\t*/\t[\t0,\t\t3,\t\t0x15,\t\t0x15,\t\t4,\t\t0,\t\t1\t],\r\n/* 5 RTL+EN/AN\t*/\t[\t0,\t\t3,\t\t5,\t\t5,\t\t4,\t\t2,\t\t0\t]\r\n];\r\n\r\nvar impTab_RTL = [\r\n\t\t/*\t\tL,\t\tR,\t\tEN,\t\tAN,\t\tN,\t\tIL,\t\tCond */\r\n/* 0 RTL text\t*/\t[\t2,\t\t0,\t\t1,\t\t1,\t\t0,\t\t1,\t\t0\t],\r\n/* 1 RTL+EN/AN\t*/\t[\t2,\t\t0,\t\t1,\t\t1,\t\t0,\t\t2,\t\t0\t],\r\n/* 2 LTR text\t*/\t[\t2,\t\t0,\t\t2,\t\t1,\t\t3,\t\t2,\t\t0\t],\r\n/* 3 LTR+cont\t*/\t[\t2,\t\t0,\t\t2,\t\t0x21,\t\t3,\t\t1,\t\t1\t]\r\n];\r\n\r\nvar LTR = 0, RTL = 1;\r\n\r\nvar L = 0; /* left to right */\r\nvar R = 1; /* right to left */\r\nvar EN = 2; /* European digit */\r\nvar AN = 3; /* Arabic-Indic digit */\r\nvar ON = 4; /* neutral */\r\nvar B = 5; /* block separator */\r\nvar S = 6; /* segment separator */\r\nvar AL = 7; /* Arabic Letter */\r\nvar WS = 8; /* white space */\r\nvar CS = 9; /* common digit separator */\r\nvar ES = 10; /* European digit separator */\r\nvar ET = 11; /* European digit terminator */\r\nvar NSM = 12; /* Non Spacing Mark */\r\nvar LRE = 13; /* LRE */\r\nvar RLE = 14; /* RLE */\r\nvar PDF = 15; /* PDF */\r\nvar LRO = 16; /* LRO */\r\nvar RLO = 17; /* RLO */\r\nvar BN = 18; /* Boundary Neutral */\r\n\r\nvar UnicodeTBL00 = [\r\nBN,BN,BN,BN,BN,BN,BN,BN,BN,S,B,S,WS,B,BN,BN,\r\nBN,BN,BN,BN,BN,BN,BN,BN,BN,BN,BN,BN,B,B,B,S,\r\nWS,ON,ON,ET,ET,ET,ON,ON,ON,ON,ON,ES,CS,ES,CS,CS,\r\nEN,EN,EN,EN,EN,EN,EN,EN,EN,EN,CS,ON,ON,ON,ON,ON,\r\nON,L,L,L,L,L,L,L,L,L,L,L,L,L,L,L,\r\nL,L,L,L,L,L,L,L,L,L,L,ON,ON,ON,ON,ON,\r\nON,L,L,L,L,L,L,L,L,L,L,L,L,L,L,L,\r\nL,L,L,L,L,L,L,L,L,L,L,ON,ON,ON,ON,BN,\r\nBN,BN,BN,BN,BN,B,BN,BN,BN,BN,BN,BN,BN,BN,BN,BN,\r\nBN,BN,BN,BN,BN,BN,BN,BN,BN,BN,BN,BN,BN,BN,BN,BN,\r\nCS,ON,ET,ET,ET,ET,ON,ON,ON,ON,L,ON,ON,BN,ON,ON,\r\nET,ET,EN,EN,ON,L,ON,ON,ON,EN,L,ON,ON,ON,ON,ON\r\n];\r\n\r\nvar UnicodeTBL20 = [\r\nWS,WS,WS,WS,WS,WS,WS,WS,WS,WS,WS,BN,BN,BN,L,R\t,\r\nON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,\r\nON,ON,ON,ON,ON,ON,ON,ON,WS,B,LRE,RLE,PDF,LRO,RLO,CS,\r\nET,ET,ET,ET,ET,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,\r\nON,ON,ON,ON,CS,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,\r\nON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,ON,WS\r\n];\r\n\r\nfunction _computeLevels(chars, levels, len, charTypes) {\r\n\tvar impTab = dir ? impTab_RTL : impTab_LTR\r\n\t\t, prevState = null, newClass = null, newLevel = null, newState = 0\r\n\t\t, action = null, cond = null, condPos = -1, i = null, ix = null, classes = [];\r\n\r\n\tif (!charTypes) {\r\n\t\tfor (i = 0, charTypes = []; i < len; i++) {\r\n\t\t\tcharTypes[i] = _getCharacterType(chars[i]);\r\n\t\t}\r\n\t}\r\n\thiLevel = dir;\r\n\tlastArabic = false;\r\n\thasUBAT_AL = false;\r\n\thasUBAT_B = false;\r\n\thasUBAT_S = false;\r\n\tfor (ix = 0; ix < len; ix++){\r\n\t\tprevState = newState;\r\n\t\tclasses[ix] = newClass = _getCharClass(chars, charTypes, classes, ix);\r\n\t\tnewState = impTab[prevState][newClass];\r\n\t\taction = newState & 0xF0;\r\n\t\tnewState &= 0x0F;\r\n\t\tlevels[ix] = newLevel = impTab[newState][5];\r\n\t\tif (action > 0){\r\n\t\t\tif (action == 0x10){\r\n\t\t\t\tfor(i = condPos; i < ix; i++){\r\n\t\t\t\t\tlevels[i] = 1;\r\n\t\t\t\t}\r\n\t\t\t\tcondPos = -1;\r\n\t\t\t} else {\r\n\t\t\t\tcondPos = -1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tcond = impTab[newState][6];\r\n\t\tif (cond){\r\n\t\t\tif(condPos == -1){\r\n\t\t\t\tcondPos = ix;\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tif (condPos > -1){\r\n\t\t\t\tfor(i = condPos; i < ix; i++){\r\n\t\t\t\t\tlevels[i] = newLevel;\r\n\t\t\t\t}\r\n\t\t\t\tcondPos = -1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (charTypes[ix] == B){\r\n\t\t\tlevels[ix] = 0;\r\n\t\t}\r\n\t\thiLevel |= newLevel;\r\n\t}\r\n\tif (hasUBAT_S){\r\n\t\tfor(i = 0; i < len; i++){\r\n\t\t\tif(charTypes[i] == S){\r\n\t\t\t\tlevels[i] = dir;\r\n\t\t\t\tfor(var j = i - 1; j >= 0; j--){\r\n\t\t\t\t\tif(charTypes[j] == WS){\r\n\t\t\t\t\t\tlevels[j] = dir;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction _invertLevel(lev, levels, _array) {\r\n\tif (hiLevel < lev){\r\n\t\treturn;\r\n\t}\r\n\tif (lev == 1 && dir == RTL && !hasUBAT_B){\r\n\t\t_array.reverse();\r\n\t\treturn;\r\n\t}\r\n\tvar len = _array.length, start = 0, end, lo, hi, tmp;\r\n\twhile(start < len){\r\n\t\tif (levels[start] >= lev){\r\n\t\t\tend = start + 1;\r\n\t\twhile(end < len && levels[end] >= lev){\r\n\t\t\tend++;\r\n\t\t}\r\n\t\tfor(lo = start, hi = end - 1 ; lo < hi; lo++, hi--){\r\n\t\t\ttmp = _array[lo];\r\n\t\t\t_array[lo] = _array[hi];\r\n\t\t\t_array[hi] = tmp;\r\n\t\t}\r\n\t\tstart = end;\r\n\t}\r\n\tstart++;\r\n\t}\r\n}\r\n\r\nfunction _getCharClass(chars, types, classes, ix) {\t\t\t\r\n\tvar cType = types[ix], wType, nType, len, i;\r\n\tswitch(cType){\r\n\t\tcase L:\r\n\t\tcase R:\r\n\t\t\tlastArabic = false;\r\n\t\tcase ON:\r\n\t\tcase AN:\r\n\t\t\treturn cType;\r\n\t\tcase EN:\r\n\t\t\treturn lastArabic ? AN : EN;\r\n\t\tcase AL:\r\n\t\t\tlastArabic = true;\r\n\t\t\thasUBAT_AL = true;\r\n\t\t\treturn R;\r\n\t\tcase WS:\r\n\t\t\treturn ON;\r\n\t\tcase CS:\r\n\t\t\tif (ix < 1 || (ix + 1) >= types.length ||\r\n\t\t\t\t((wType = classes[ix - 1]) != EN && wType != AN) ||\r\n\t\t\t\t((nType = types[ix + 1]) != EN && nType != AN)){\r\n\t\t\t\treturn ON;\r\n\t\t\t}\r\n\t\t\tif (lastArabic){nType = AN;}\r\n\t\t\treturn nType == wType ? nType : ON;\r\n\t\tcase ES:\r\n\t\t\twType = ix > 0 ? classes[ix - 1] : B;\r\n\t\t\tif (wType == EN && (ix + 1) < types.length && types[ix + 1] == EN){\r\n\t\t\t\treturn EN;\r\n\t\t\t}\r\n\t\t\treturn ON;\r\n\t\tcase ET:\r\n\t\t\tif (ix > 0 && classes[ix - 1] == EN){\r\n\t\t\t\treturn EN;\r\n\t\t\t}\r\n\t\t\tif (lastArabic){\r\n\t\t\t\treturn ON;\r\n\t\t\t}\r\n\t\t\ti = ix + 1;\r\n\t\t\tlen = types.length;\r\n\t\t\twhile (i < len && types[i] == ET){\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t\tif (i < len && types[i] == EN){\r\n\t\t\t\treturn EN;\r\n\t\t\t}\r\n\t\t\treturn ON;\r\n\t\tcase NSM:\r\n\t\t\tlen = types.length;\r\n\t\t\ti = ix + 1;\r\n\t\t\twhile (i < len && types[i] == NSM){\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t\tif (i < len){\r\n\t\t\t\tvar c = chars[ix], rtlCandidate = (c >= 0x0591 && c <= 0x08FF) || c == 0xFB1E;\r\n\t\t\t\t\r\n\t\t\t\twType = types[i];\r\n\t\t\t\tif (rtlCandidate && (wType == R || wType == AL)){\r\n\t\t\t\t\treturn R;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (ix < 1 || (wType = types[ix - 1]) == B){\r\n\t\t\t\treturn ON;\r\n\t\t\t}\r\n\t\t\treturn classes[ix - 1];\r\n\t\tcase B:\r\n\t\t\tlastArabic = false;\r\n\t\t\thasUBAT_B = true;\r\n\t\t\treturn dir;\r\n\t\tcase S:\r\n\t\t\thasUBAT_S = true;\r\n\t\t\treturn ON;\r\n\t\tcase LRE:\r\n\t\tcase RLE:\r\n\t\tcase LRO:\r\n\t\tcase RLO:\r\n\t\tcase PDF:\r\n\t\t\tlastArabic = false;\r\n\t\tcase BN:\r\n\t\t\treturn ON;\r\n\t}\r\n}\r\n\r\nfunction _getCharacterType( ch ) {\t\t\r\n\tvar uc = ch.charCodeAt(0), hi = uc >> 8;\r\n\t\r\n\tif (hi == 0) {\t\t\r\n\t\treturn ((uc > 0x00BF) ? L : UnicodeTBL00[uc]);\r\n\t} else if (hi == 5) {\r\n\t\treturn (/[\\u0591-\\u05f4]/.test(ch) ? R : L);\r\n\t} else if (hi == 6) {\r\n\t\tif (/[\\u0610-\\u061a\\u064b-\\u065f\\u06d6-\\u06e4\\u06e7-\\u06ed]/.test(ch))\r\n\t\t\treturn NSM;\r\n\t\telse if (/[\\u0660-\\u0669\\u066b-\\u066c]/.test(ch))\r\n\t\t\treturn AN;\r\n\t\telse if (uc == 0x066A)\r\n\t\t\treturn ET;\r\n\t\telse if (/[\\u06f0-\\u06f9]/.test(ch))\r\n\t\t\treturn EN;\t\t\t\r\n\t\telse\r\n\t\t\treturn AL;\r\n\t} else if (hi == 0x20 && uc <= 0x205F) {\r\n\t\treturn UnicodeTBL20[uc & 0xFF];\r\n\t} else if (hi == 0xFE) {\r\n\t\treturn (uc >= 0xFE70 ? AL : ON);\r\n\t}\t\t\r\n\treturn ON;\t\r\n}\r\n\r\nfunction _isArabicDiacritics( ch ) {\r\n\treturn (ch >= '\\u064b' && ch <= '\\u0655');\r\n}\r\n\r\n/* Strong LTR character (0 - even), regular width */\r\nexports.L = L;\r\n/* Strong RTL character (1 - odd), Bidi width */\r\nexports.R = R;\r\n/* European digit (2 - even), regular width */\r\nexports.EN = EN;\r\n/* Neutral RTL-by-context character (3 - odd), regular width */\r\nexports.ON_R = 3;\r\n/* Hindi (Arabic) digit (4 - even), Bidi width */\r\nexports.AN = 4;\r\n/* Arabic LamAlef (5 - odd), Half Bidi width */\r\nexports.R_H = 5;\r\n/* invisible EOL (6 - even), zero width */\r\nexports.B = 6;\r\n/* invisible RLE (7 - odd), zero width */\r\nexports.RLE = 7;\r\n\r\nexports.DOT = \"\\xB7\";\r\n\r\n/**\r\n * Performs text reordering by implementing Unicode Bidi algorithm\r\n * with aim to produce logical<->visual map and Bidi levels\r\n * @param {String} text string to be reordered\r\n * @param {Array} unicode character types produced by call to 'hasBidiCharacters'\r\n * @param {Boolean} 'true' for right-to-left text direction, otherwise 'false'\r\n *\r\n * @return {Object} An object containing logicalFromVisual map and Bidi levels\r\n **/\r\nexports.doBidiReorder = function(text, textCharTypes, isRtl) {\r\n\tif (text.length < 2)\r\n\t\treturn {};\r\n\t\t\r\n\tvar chars = text.split(\"\"), logicalFromVisual = new Array(chars.length),\r\n\t\tbidiLevels = new Array(chars.length), levels = []; \r\n\r\n\tdir = isRtl ? RTL : LTR;\r\n\r\n\t_computeLevels(chars, levels, chars.length, textCharTypes);\r\n\r\n\tfor (var i = 0; i < logicalFromVisual.length; logicalFromVisual[i] = i, i++);\r\n\r\n\t_invertLevel(2, levels, logicalFromVisual);\r\n\t_invertLevel(1, levels, logicalFromVisual);\r\n\r\n\tfor (var i = 0; i < logicalFromVisual.length - 1; i++) { //fix levels to reflect character width\r\n\t\tif (textCharTypes[i] === AN) {\r\n\t\t\tlevels[i] = exports.AN;\r\n\t\t} else if (levels[i] === R && ((textCharTypes[i] > AL && textCharTypes[i] < LRE) \r\n\t\t\t|| textCharTypes[i] === ON || textCharTypes[i] === BN)) {\r\n\t\t\tlevels[i] = exports.ON_R;\r\n\t\t} else if ((i > 0 && chars[i - 1] === '\\u0644') && /\\u0622|\\u0623|\\u0625|\\u0627/.test(chars[i])) {\r\n\t\t\tlevels[i - 1] = levels[i] = exports.R_H;\r\n\t\t\ti++;\r\n\t\t}\r\n\t}\r\n\t/* fix level to mark zero length EOL */\r\n\tif (chars[chars.length - 1] === exports.DOT)\r\n\t\tlevels[chars.length - 1] = exports.B;\r\n\t\t\t\t\r\n\tif (chars[0] === '\\u202B')\r\n\t\tlevels[0] = exports.RLE;\r\n\t\t\t\t\r\n\tfor (var i = 0; i < logicalFromVisual.length; i++) {\r\n\t\tbidiLevels[i] = levels[logicalFromVisual[i]];\r\n\t}\r\n\r\n\treturn {'logicalFromVisual': logicalFromVisual, 'bidiLevels': bidiLevels};\r\n};\t\r\n\r\n/**\r\n * Performs character classification, to be used in Unicode Bidi algorithm.\r\n * @param {String} text string to be reordered\r\n * @param {Array} unicode character types (to be filled by this method)\r\n *\r\n * @return {Boolean} 'true' if text contains Bidi characters, otherwise 'false' \r\n **/\r\nexports.hasBidiCharacters = function(text, textCharTypes){\r\n\tvar ret = false;\r\n\tfor (var i = 0; i < text.length; i++){\r\n\t\ttextCharTypes[i] = _getCharacterType(text.charAt(i));\r\n\t\tif (!ret && (textCharTypes[i] == R || textCharTypes[i] == AL || textCharTypes[i] == AN))\r\n\t\t\tret = true;\r\n\t}\r\n\treturn ret;\r\n};\r\n\r\n/**\r\n * Returns visual index corresponding to logical index basing on logicalFromvisual \r\n * map provided by Unicode Bidi algorithm.\r\n * @param {int} logical index of character in text buffer\r\n * @param {Object} object containing logicalFromVisual map\r\n *\r\n * @return {int} visual index (on display) corresponding to logical index\r\n **/\t\r\nexports.getVisualFromLogicalIdx = function(logIdx, rowMap) {\r\n\tfor (var i = 0; i < rowMap.logicalFromVisual.length; i++) {\r\n\t\tif (rowMap.logicalFromVisual[i] == logIdx)\r\n\t\t\treturn i;\r\n\t}\r\n\treturn 0;\r\n};\r\n\r\n});\r\n"]}