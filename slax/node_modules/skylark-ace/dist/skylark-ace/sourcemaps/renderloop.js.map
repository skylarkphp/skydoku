{"version":3,"sources":["renderloop.js"],"names":["define","require","exports","module","event","RenderLoop","onRender","win","this","pending","changes","$recursionLimit","window","_self","_flush","ts","blockIdle","schedule","change","nextFrame","clear","call","prototype"],"mappings":";;;;;;;AA8BAA,OAAO,SAASC,EAASC,EAASC,GAClC,aAEA,IAAIC,EAAQH,EAAQ,eAUhBI,EAAa,SAASC,EAAUC,GAChCC,KAAKF,SAAWA,EAChBE,KAAKC,SAAU,EACfD,KAAKE,QAAU,EACfF,KAAKG,gBAAkB,EACvBH,KAAKI,OAASL,GAAOK,OACrB,IAAIC,EAAQL,KACZA,KAAKM,OAAS,SAASC,GACnBF,EAAMJ,SAAU,EAChB,IAAIC,EAAUG,EAAMH,QAQpB,GANIA,IACAN,EAAMY,UAAU,KAChBH,EAAMH,QAAU,EAChBG,EAAMP,SAASI,IAGfG,EAAMH,QAAS,CACf,GAAIG,EAAMF,kBAAoB,EAAG,OACjCE,EAAMI,gBAENJ,EAAMF,gBAAkB,KAKpC,WAEIH,KAAKS,SAAW,SAASC,GACrBV,KAAKE,QAAUF,KAAKE,QAAUQ,EAC1BV,KAAKE,UAAYF,KAAKC,UACtBL,EAAMe,UAAUX,KAAKM,QACrBN,KAAKC,SAAU,IAIvBD,KAAKY,MAAQ,SAASF,GAClB,IAAIR,EAAUF,KAAKE,QAEnB,OADAF,KAAKE,QAAU,EACRA,KAGZW,KAAKhB,EAAWiB,WAEnBpB,EAAQG,WAAaA","file":"../renderloop.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2010, Ajax.org B.V.\r\n * All rights reserved.\r\n * \r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n * \r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\ndefine(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar event = require(\"./lib/event\");\r\n\r\n/** \r\n *\r\n *\r\n * Batches changes (that force something to be redrawn) in the background.\r\n * @class RenderLoop\r\n **/\r\n\r\n\r\nvar RenderLoop = function(onRender, win) {\r\n    this.onRender = onRender;\r\n    this.pending = false;\r\n    this.changes = 0;\r\n    this.$recursionLimit = 2;\r\n    this.window = win || window;\r\n    var _self = this;\r\n    this._flush = function(ts) {\r\n        _self.pending = false;\r\n        var changes = _self.changes;\r\n\r\n        if (changes) {\r\n            event.blockIdle(100);\r\n            _self.changes = 0;\r\n            _self.onRender(changes);\r\n        }\r\n        \r\n        if (_self.changes) {\r\n            if (_self.$recursionLimit-- < 0) return;\r\n            _self.schedule();\r\n        } else {\r\n            _self.$recursionLimit = 2;\r\n        }\r\n    };\r\n};\r\n\r\n(function() {\r\n\r\n    this.schedule = function(change) {\r\n        this.changes = this.changes | change;\r\n        if (this.changes && !this.pending) {\r\n            event.nextFrame(this._flush);\r\n            this.pending = true;\r\n        }\r\n    };\r\n\r\n    this.clear = function(change) {\r\n        var changes = this.changes;\r\n        this.changes = 0;\r\n        return changes;\r\n    };\r\n\r\n}).call(RenderLoop.prototype);\r\n\r\nexports.RenderLoop = RenderLoop;\r\n});\r\n"]}