{"version":3,"sources":["virtual_renderer.js"],"names":["define","require","exports","module","oop","dom","config","GutterLayer","Gutter","MarkerLayer","Marker","TextLayer","Text","CursorLayer","Cursor","HScrollBar","VScrollBar","RenderLoop","FontMetrics","EventEmitter","editorCss","useragent","HIDE_TEXTAREA","isIE","importCssString","VirtualRenderer","container","theme","_self","this","createElement","addCssClass","HI_DPI","setTheme","$gutter","className","appendChild","setAttribute","scroller","content","$gutterLayer","on","onGutterResize","bind","$markerBack","textLayer","$textLayer","canvas","element","$markerFront","$cursorLayer","$horizScroll","$vScroll","scrollBar","scrollBarV","scrollBarH","addEventListener","e","$scrollAnimation","session","setScrollTop","data","scrollMargin","top","setScrollLeft","left","scrollTop","scrollLeft","cursorPos","row","column","$fontMetrics","$setFontMetrics","updateCharacterSize","onResize","gutterWidth","$size","width","height","_signal","scrollerHeight","scrollerWidth","$dirty","layerConfig","padding","firstRow","firstRowScreen","lastRow","lineHeight","characterWidth","minHeight","maxHeight","offset","gutterOffset","right","bottom","v","h","margin","$keepTextAreaAtCursor","isIOS","$loop","$renderChanges","ownerDocument","defaultView","schedule","CHANGE_FULL","setPadding","resetOptions","_emit","CHANGE_CURSOR","CHANGE_MARKER","CHANGE_GUTTER","CHANGE_SCROLL","CHANGE_LINES","CHANGE_TEXT","CHANGE_SIZE","CHANGE_MARKER_BACK","CHANGE_MARKER_FRONT","CHANGE_H_SCROLL","implement","allowBoldFonts","$allowBoldFonts","setStyle","getCharacterWidth","getLineHeight","$updatePrintMargin","setSession","doc","off","onChangeNewLineMode","getScrollTop","updateLines","force","undefined","Infinity","$changedLines","$updateEolChar","$bidiHandler","setEolChar","EOL_CHAR","onChangeTabSize","updateText","updateFull","updateFontSize","checkForSizeChanges","$changes","$updateSizeAsync","pending","resizing","el","clientHeight","scrollHeight","clientWidth","scrollWidth","changes","$updateCachedSize","$padding","$extraHeight","size","oldSize","getHeight","style","$showGutter","offsetWidth","Math","max","getWidth","getUseWrapMode","adjustWrapLimit","$computeLayerConfig","availableWidth","limit","floor","$showPrintMargin","$printMarginColumn","setAnimatedScroll","shouldAnimate","setOption","getAnimatedScroll","$animatedScroll","setShowInvisibles","showInvisibles","getShowInvisibles","getOption","getDisplayIndentGuides","setDisplayIndentGuides","display","setShowPrintMargin","showPrintMargin","getShowPrintMargin","setPrintMarginColumn","getPrintMarginColumn","getShowGutter","setShowGutter","show","getFadeFoldWidgets","setFadeFoldWidgets","setHighlightGutterLine","shouldHighlight","getHighlightGutterLine","$printMarginEl","containerEl","insertBefore","firstChild","round","visibility","$wrap","getContainerElement","getMouseEventTarget","getTextAreaContainer","$moveTextAreaToCursor","textarea","pixelPos","$pixelPos","composition","$composition","markerRange","getPixelPosition","start","posTop","posLeft","useTextareaForIME","translate","w","val","value","$getStringScreenWidth","min","getFirstVisibleRow","getFirstFullyVisibleRow","getLastFullyVisibleRow","documentToScreenRow","getLastVisibleRow","setScrollMargin","sm","setMargin","getHScrollBarAlwaysVisible","$hScrollBarAlwaysVisible","setHScrollBarAlwaysVisible","alwaysVisible","getVScrollBarAlwaysVisible","$vScrollBarAlwaysVisible","setVScrollBarAlwaysVisible","$updateScrollBarV","$maxLines","$scrollPastEnd","setScrollHeight","$updateScrollBarH","setScrollWidth","$frozen","freeze","unfreeze","updateCharacterWidths","clear","st","update","scrollLines","$updateLines","$highlightGutterLine","updateLineHighlight","$autosize","getScreenLength","desiredHeight","$minLines","$maxPixelHeight","vScroll","setVisible","$gutterWidth","hideScrollbars","longestLine","$getLongestLine","horizScroll","hScrollChanged","vScrollBefore","scrollPastEnd","vScrollChanged","firstRowHeight","lineCount","ceil","screenToDocumentRow","foldLine","getFoldLine","getRowLength","getLength","setContentWidth","charCount","getScreenWidth","$useWrapMode","MAX_LINE_LENGTH","updateFrontMarkers","setMarkers","getMarkers","updateBackMarkers","addGutterDecoration","removeGutterDecoration","updateBreakpoints","rows","setAnnotations","annotations","updateCursor","hideCursor","showCursor","scrollSelectionIntoView","anchor","lead","scrollCursorIntoView","cursor","$viewMargin","pos","topMargin","bottomMargin","getScrollLeft","getScrollTopRow","getScrollBottomRow","scrollToRow","alignCursor","alignment","STEPS","$calcSteps","fromValue","toValue","t","x_min","i","l","steps","push","pow","scrollToLine","line","center","animate","callback","initialScroll","animateScrolling","oldSteps","length","from","to","clearInterval","$timer","shift","$scrollTop","setInterval","scrollToY","scrollToX","scrollTo","x","y","scrollBy","deltaX","deltaY","isScrollableBy","pixelToScreenCoordinates","canvasPos","$hasCssTransforms","p","transformCoordinates","getBoundingClientRect","offsetX","col","$blockCursor","side","screenToTextCoordinates","screenToDocumentPosition","textToScreenCoordinates","documentToScreenPosition","isBidiRow","getPosLeft","pageX","pageY","visualizeFocus","visualizeBlur","removeCssClass","showComposition","cssText","keepTextAreaAtCursor","$useTextareaForIME","markerId","addMarker","setCompositionText","text","selection","addToken","hideComposition","removeMarker","type","bgTokenizer","lines","newToken","tokens","getTokens","token","diff","before","slice","after","splice","cb","$themeId","_dispatchEvent","afterLoad","moduleName","$options","initialValue","loadModule","cssClass","Error","$id","$theme","setCssClass","isDark","getTheme","include","unsetStyle","setCursorStyle","setMouseCursor","cursorStyle","attachToShadowRoot","destroy","call","prototype","defineOptions","animatedScroll","set","printMarginColumn","printMargin","get","showGutter","fadeFoldWidgets","showFoldWidgets","setShowFoldWidgets","displayIndentGuides","highlightGutterLine","hScrollBarAlwaysVisible","vScrollBarAlwaysVisible","fontSize","fontFamily","name","maxLines","minLines","maxPixelHeight","handlesSet","fixedWidthGutter","$fixedWidth","hasCssTransforms","isMobile"],"mappings":";;;;;;;AA8BAA,OAAO,SAASC,QAASC,QAASC,QAClC,aAEA,IAAIC,EAAMH,QAAQ,aACdI,EAAMJ,QAAQ,aACdK,EAASL,QAAQ,YACjBM,EAAcN,QAAQ,kBAAkBO,OACxCC,EAAcR,QAAQ,kBAAkBS,OACxCC,EAAYV,QAAQ,gBAAgBW,KACpCC,EAAcZ,QAAQ,kBAAkBa,OACxCC,EAAad,QAAQ,eAAec,WACpCC,EAAaf,QAAQ,eAAee,WACpCC,EAAahB,QAAQ,gBAAgBgB,WACrCC,EAAcjB,QAAQ,wBAAwBiB,YAC9CC,EAAelB,QAAQ,uBAAuBkB,aAE9CC,EAAYnB,QAAQ,oBAEpBoB,EAAYpB,QAAQ,mBACpBqB,EAAgBD,EAAUE,KAE9BlB,EAAImB,gBAAgBJ,EAAW,kBAgB/B,IAAIK,EAAkB,SAASC,EAAWC,GACtC,IAAIC,EAAQC,KAEZA,KAAKH,UAAYA,GAAarB,EAAIyB,cAAc,OAEhDzB,EAAI0B,YAAYF,KAAKH,UAAW,cAC5BrB,EAAI2B,QAAQ3B,EAAI0B,YAAYF,KAAKH,UAAW,aAEhDG,KAAKI,SAASN,GAEdE,KAAKK,QAAU7B,EAAIyB,cAAc,OACjCD,KAAKK,QAAQC,UAAY,aACzBN,KAAKH,UAAUU,YAAYP,KAAKK,SAChCL,KAAKK,QAAQG,aAAa,eAAe,GAEzCR,KAAKS,SAAWjC,EAAIyB,cAAc,OAClCD,KAAKS,SAASH,UAAY,eAE1BN,KAAKH,UAAUU,YAAYP,KAAKS,UAEhCT,KAAKU,QAAUlC,EAAIyB,cAAc,OACjCD,KAAKU,QAAQJ,UAAY,cACzBN,KAAKS,SAASF,YAAYP,KAAKU,SAE/BV,KAAKW,aAAe,IAAIjC,EAAYsB,KAAKK,SACzCL,KAAKW,aAAaC,GAAG,oBAAqBZ,KAAKa,eAAeC,KAAKd,OAEnEA,KAAKe,YAAc,IAAInC,EAAYoB,KAAKU,SAExC,IAAIM,EAAYhB,KAAKiB,WAAa,IAAInC,EAAUkB,KAAKU,SACrDV,KAAKkB,OAASF,EAAUG,QAExBnB,KAAKoB,aAAe,IAAIxC,EAAYoB,KAAKU,SAEzCV,KAAKqB,aAAe,IAAIrC,EAAYgB,KAAKU,SAGzCV,KAAKsB,cAAe,EACpBtB,KAAKuB,UAAW,EAEhBvB,KAAKwB,UACLxB,KAAKyB,WAAa,IAAItC,EAAWa,KAAKH,UAAWG,MACjDA,KAAK0B,WAAa,IAAIxC,EAAWc,KAAKH,UAAWG,MACjDA,KAAKyB,WAAWE,iBAAiB,SAAU,SAASC,GAC3C7B,EAAM8B,kBACP9B,EAAM+B,QAAQC,aAAaH,EAAEI,KAAOjC,EAAMkC,aAAaC,OAE/DlC,KAAK0B,WAAWC,iBAAiB,SAAU,SAASC,GAC3C7B,EAAM8B,kBACP9B,EAAM+B,QAAQK,cAAcP,EAAEI,KAAOjC,EAAMkC,aAAaG,QAGhEpC,KAAKqC,UAAY,EACjBrC,KAAKsC,WAAa,EAElBtC,KAAKuC,WACDC,IAAM,EACNC,OAAS,GAGbzC,KAAK0C,aAAe,IAAIrD,EAAYW,KAAKH,WACzCG,KAAKiB,WAAW0B,gBAAgB3C,KAAK0C,cACrC1C,KAAKiB,WAAWU,iBAAiB,sBAAuB,SAASC,GAC7D7B,EAAM6C,sBACN7C,EAAM8C,UAAS,EAAM9C,EAAM+C,YAAa/C,EAAMgD,MAAMC,MAAOjD,EAAMgD,MAAME,QACvElD,EAAMmD,QAAQ,sBAAuBtB,KAGzC5B,KAAK+C,OACDC,MAAO,EACPC,OAAQ,EACRE,eAAgB,EAChBC,cAAe,EACfC,QAAQ,GAGZrD,KAAKsD,aACDN,MAAQ,EACRO,QAAU,EACVC,SAAW,EACXC,eAAgB,EAChBC,QAAU,EACVC,WAAa,EACbC,eAAiB,EACjBC,UAAY,EACZC,UAAY,EACZC,OAAS,EACTd,OAAS,EACTe,aAAc,GAGlBhE,KAAKiC,cACDG,KAAM,EACN6B,MAAO,EACP/B,IAAK,EACLgC,OAAQ,EACRC,EAAG,EACHC,EAAG,GAGPpE,KAAKqE,QACDjC,KAAM,EACN6B,MAAO,EACP/B,IAAK,EACLgC,OAAQ,EACRC,EAAG,EACHC,EAAG,GAGPpE,KAAKsE,uBAAyB9E,EAAU+E,MAExCvE,KAAKwE,MAAQ,IAAIpF,EACbY,KAAKyE,eAAe3D,KAAKd,MACzBA,KAAKH,UAAU6E,cAAcC,aAEjC3E,KAAKwE,MAAMI,SAAS5E,KAAK6E,aAEzB7E,KAAK4C,sBACL5C,KAAK8E,WAAW,GAChBrG,EAAOsG,aAAa/E,MACpBvB,EAAOuG,MAAM,WAAYhF,QAG7B,WAEIA,KAAKiF,cAAgB,EACrBjF,KAAKkF,cAAgB,EACrBlF,KAAKmF,cAAgB,EACrBnF,KAAKoF,cAAgB,EACrBpF,KAAKqF,aAAe,GACpBrF,KAAKsF,YAAc,GACnBtF,KAAKuF,YAAc,GACnBvF,KAAKwF,mBAAqB,IAC1BxF,KAAKyF,oBAAsB,IAC3BzF,KAAK6E,YAAc,IACnB7E,KAAK0F,gBAAkB,KAkBvBnH,EAAIoH,UAAU3F,KAAMV,GAEpBU,KAAK4C,oBAAsB,WACnB5C,KAAKiB,WAAW2E,gBAAkB5F,KAAK6F,kBACvC7F,KAAK6F,gBAAkB7F,KAAKiB,WAAW2E,eACvC5F,KAAK8F,SAAS,cAAe9F,KAAK6F,kBAGtC7F,KAAKsD,YAAYM,eACjB5D,KAAK4D,eAAiB5D,KAAKiB,WAAW8E,oBACtC/F,KAAKsD,YAAYK,WACjB3D,KAAK2D,WAAa3D,KAAKiB,WAAW+E,gBAClChG,KAAKiG,sBAOTjG,KAAKkG,WAAa,SAASpE,GACnB9B,KAAK8B,SACL9B,KAAK8B,QAAQqE,IAAIC,IAAI,oBAAqBpG,KAAKqG,qBAEnDrG,KAAK8B,QAAUA,EACXA,GAAW9B,KAAKiC,aAAaC,KAAOJ,EAAQwE,gBAAkB,GAC9DxE,EAAQC,cAAc/B,KAAKiC,aAAaC,KAE5ClC,KAAKqB,aAAa6E,WAAWpE,GAC7B9B,KAAKe,YAAYmF,WAAWpE,GAC5B9B,KAAKoB,aAAa8E,WAAWpE,GAC7B9B,KAAKW,aAAauF,WAAWpE,GAC7B9B,KAAKiB,WAAWiF,WAAWpE,GACtBA,IAGL9B,KAAKwE,MAAMI,SAAS5E,KAAK6E,aACzB7E,KAAK8B,QAAQa,gBAAgB3C,KAAK0C,cAClC1C,KAAK0B,WAAWY,WAAatC,KAAKyB,WAAWY,UAAY,KAEzDrC,KAAKqG,oBAAsBrG,KAAKqG,oBAAoBvF,KAAKd,MACzDA,KAAKqG,sBACLrG,KAAK8B,QAAQqE,IAAIvF,GAAG,oBAAqBZ,KAAKqG,uBASlDrG,KAAKuG,YAAc,SAAS/C,EAAUE,EAAS8C,GAsB3C,QArBgBC,IAAZ/C,IACAA,EAAUgD,EAAAA,GAET1G,KAAK2G,eAOF3G,KAAK2G,cAAcnD,SAAWA,IAC9BxD,KAAK2G,cAAcnD,SAAWA,GAE9BxD,KAAK2G,cAAcjD,QAAUA,IAC7B1D,KAAK2G,cAAcjD,QAAUA,IAVjC1D,KAAK2G,eACDnD,SAAUA,EACVE,QAASA,GAeb1D,KAAK2G,cAAcjD,QAAU1D,KAAKsD,YAAYE,SAAU,CACxD,IAAIgD,EAGA,OAFAxG,KAAK2G,cAAcjD,QAAU1D,KAAKsD,YAAYI,QAIlD1D,KAAK2G,cAAcnD,SAAWxD,KAAKsD,YAAYI,SAEnD1D,KAAKwE,MAAMI,SAAS5E,KAAKqF,eAG7BrF,KAAKqG,oBAAsB,WACvBrG,KAAKwE,MAAMI,SAAS5E,KAAKsF,aACzBtF,KAAKiB,WAAW2F,iBAChB5G,KAAK8B,QAAQ+E,aAAaC,WAAW9G,KAAKiB,WAAW8F,WAGzD/G,KAAKgH,gBAAkB,WACnBhH,KAAKwE,MAAMI,SAAS5E,KAAKsF,YAActF,KAAKkF,eAC5ClF,KAAKiB,WAAW+F,mBAMpBhH,KAAKiH,WAAa,WACdjH,KAAKwE,MAAMI,SAAS5E,KAAKsF,cAQ7BtF,KAAKkH,WAAa,SAASV,GACnBA,EACAxG,KAAKyE,eAAezE,KAAK6E,aAAa,GAEtC7E,KAAKwE,MAAMI,SAAS5E,KAAK6E,cAMjC7E,KAAKmH,eAAiB,WAClBnH,KAAKiB,WAAWmG,uBAGpBpH,KAAKqH,SAAW,EAChBrH,KAAKsH,iBAAmB,WAChBtH,KAAKwE,MAAM+C,QACXvH,KAAK+C,MAAMM,QAAS,EAEpBrD,KAAK6C,YAUb7C,KAAK6C,SAAW,SAAS2D,EAAO1D,EAAaE,EAAOC,GAChD,KAAIjD,KAAKwH,SAAW,GAApB,CAESxH,KAAKwH,SAAW,EACrBxH,KAAKwH,WAELxH,KAAKwH,SAAWhB,EAAQ,EAAI,EAGhC,IAAIiB,EAAKzH,KAAKH,UACToD,IACDA,EAASwE,EAAGC,cAAgBD,EAAGE,cAC9B3E,IACDA,EAAQyE,EAAGG,aAAeH,EAAGI,aACjC,IAAIC,EAAU9H,KAAK+H,kBAAkBvB,EAAO1D,EAAaE,EAAOC,GAGhE,IAAKjD,KAAK+C,MAAMI,iBAAoBH,IAAUC,EAC1C,OAAOjD,KAAKwH,SAAW,EAEvBhB,IACAxG,KAAKW,aAAaqH,SAAW,MAE7BxB,EACAxG,KAAKyE,eAAeqD,EAAU9H,KAAKqH,UAAU,GAE7CrH,KAAKwE,MAAMI,SAASkD,EAAU9H,KAAKqH,UAEnCrH,KAAKwH,WACLxH,KAAKwH,SAAW,GAGpBxH,KAAKyB,WAAWa,WAAatC,KAAKyB,WAAWY,UAAY,OAG7DrC,KAAK+H,kBAAoB,SAASvB,EAAO1D,EAAaE,EAAOC,GACzDA,GAAWjD,KAAKiI,cAAgB,EAChC,IAAIH,EAAU,EACVI,EAAOlI,KAAK+C,MACZoF,GACAnF,MAAOkF,EAAKlF,MACZC,OAAQiF,EAAKjF,OACbE,eAAgB+E,EAAK/E,eACrBC,cAAe8E,EAAK9E,eAgBxB,GAdIH,IAAWuD,GAAS0B,EAAKjF,QAAUA,KACnCiF,EAAKjF,OAASA,EACd6E,GAAW9H,KAAKuF,YAEhB2C,EAAK/E,eAAiB+E,EAAKjF,OACvBjD,KAAKsB,eACL4G,EAAK/E,gBAAkBnD,KAAK0B,WAAW0G,aAG3CpI,KAAKyB,WAAWN,QAAQkH,MAAMnE,OAASlE,KAAK0B,WAAW0G,YAAc,KAErEN,GAAoB9H,KAAKoF,eAGzBpC,IAAUwD,GAAS0B,EAAKlF,OAASA,GAAQ,CACzC8E,GAAW9H,KAAKuF,YAChB2C,EAAKlF,MAAQA,EAEM,MAAfF,IACAA,EAAc9C,KAAKsI,YAActI,KAAKK,QAAQkI,YAAc,GAEhEvI,KAAK8C,YAAcA,EAEnBtE,EAAIsH,SAAS9F,KAAK0B,WAAWP,QAAQkH,MAAO,OAAQvF,EAAc,MAClEtE,EAAIsH,SAAS9F,KAAKS,SAAS4H,MAAO,OAAQvF,EAAc9C,KAAKqE,OAAOjC,KAAO,MAC3E8F,EAAK9E,cAAgBoF,KAAKC,IAAI,EAAGzF,EAAQF,EAAc9C,KAAKyB,WAAWiH,WAAa1I,KAAKqE,OAAOD,GAChG5F,EAAIsH,SAAS9F,KAAKK,QAAQgI,MAAO,OAAQrI,KAAKqE,OAAOjC,KAAO,MAE5D,IAAI6B,EAAQjE,KAAKyB,WAAWiH,WAAa,KACzClK,EAAIsH,SAAS9F,KAAK0B,WAAWP,QAAQkH,MAAO,QAASpE,GACrDzF,EAAIsH,SAAS9F,KAAKS,SAAS4H,MAAO,QAASpE,GAC3CzF,EAAIsH,SAAS9F,KAAKS,SAAS4H,MAAO,SAAUrI,KAAK0B,WAAW0G,cAIxDpI,KAAK8B,SAAW9B,KAAK8B,QAAQ6G,kBAAoB3I,KAAK4I,mBAAqBpC,KAC3EsB,GAAW9H,KAAK6E,aASxB,OALAqD,EAAK7E,QAAUL,IAAUC,EAErB6E,GACA9H,KAAKkD,QAAQ,SAAUiF,GAEpBL,GAGX9H,KAAKa,eAAiB,SAASmC,GAC3B,IAAIF,EAAc9C,KAAKsI,YAActF,EAAQ,EACzCF,GAAe9C,KAAK8C,cACpB9C,KAAKqH,UAAYrH,KAAK+H,mBAAkB,EAAMjF,EAAa9C,KAAK+C,MAAMC,MAAOhD,KAAK+C,MAAME,SAExFjD,KAAK8B,QAAQ6G,kBAAoB3I,KAAK4I,kBACtC5I,KAAKwE,MAAMI,SAAS5E,KAAK6E,aAClB7E,KAAK+C,MAAMM,OAClBrD,KAAKwE,MAAMI,SAAS5E,KAAK6E,aAEzB7E,KAAK6I,uBAOb7I,KAAK4I,gBAAkB,WACnB,IAAIE,EAAiB9I,KAAK+C,MAAMK,cAAgC,EAAhBpD,KAAKgI,SACjDe,EAAQP,KAAKQ,MAAMF,EAAiB9I,KAAK4D,gBAC7C,OAAO5D,KAAK8B,QAAQ8G,gBAAgBG,EAAO/I,KAAKiJ,kBAAoBjJ,KAAKkJ,qBAQ7ElJ,KAAKmJ,kBAAoB,SAASC,GAC9BpJ,KAAKqJ,UAAU,iBAAkBD,IAOrCpJ,KAAKsJ,kBAAoB,WACrB,OAAOtJ,KAAKuJ,iBAQhBvJ,KAAKwJ,kBAAoB,SAASC,GAC9BzJ,KAAKqJ,UAAU,iBAAkBI,GACjCzJ,KAAK8B,QAAQ+E,aAAa2C,kBAAkBC,IAOhDzJ,KAAK0J,kBAAoB,WACrB,OAAO1J,KAAK2J,UAAU,mBAE1B3J,KAAK4J,uBAAyB,WAC1B,OAAO5J,KAAK2J,UAAU,wBAG1B3J,KAAK6J,uBAAyB,SAASC,GACnC9J,KAAKqJ,UAAU,sBAAuBS,IAQ1C9J,KAAK+J,mBAAqB,SAASC,GAC/BhK,KAAKqJ,UAAU,kBAAmBW,IAOtChK,KAAKiK,mBAAqB,WACtB,OAAOjK,KAAK2J,UAAU,oBAO1B3J,KAAKkK,qBAAuB,SAASF,GACjChK,KAAKqJ,UAAU,oBAAqBW,IAOxChK,KAAKmK,qBAAuB,WACxB,OAAOnK,KAAK2J,UAAU,sBAO1B3J,KAAKoK,cAAgB,WACjB,OAAOpK,KAAK2J,UAAU,eAQ1B3J,KAAKqK,cAAgB,SAASC,GAC1B,OAAOtK,KAAKqJ,UAAU,aAAciB,IAGxCtK,KAAKuK,mBAAqB,WACtB,OAAOvK,KAAK2J,UAAU,oBAG1B3J,KAAKwK,mBAAqB,SAASF,GAC/BtK,KAAKqJ,UAAU,kBAAmBiB,IAGtCtK,KAAKyK,uBAAyB,SAASC,GACnC1K,KAAKqJ,UAAU,sBAAuBqB,IAG1C1K,KAAK2K,uBAAyB,WAC1B,OAAO3K,KAAK2J,UAAU,wBAG1B3J,KAAKiG,mBAAqB,WACtB,GAAKjG,KAAKiJ,kBAAqBjJ,KAAK4K,eAApC,CAGA,IAAK5K,KAAK4K,eAAgB,CACtB,IAAIC,EAAcrM,EAAIyB,cAAc,OACpC4K,EAAYvK,UAAY,mCACxBN,KAAK4K,eAAiBpM,EAAIyB,cAAc,OACxCD,KAAK4K,eAAetK,UAAY,mBAChCuK,EAAYtK,YAAYP,KAAK4K,gBAC7B5K,KAAKU,QAAQoK,aAAaD,EAAa7K,KAAKU,QAAQqK,YAGxD,IAAI1C,EAAQrI,KAAK4K,eAAevC,MAChCA,EAAMjG,KAAOoG,KAAKwC,MAAMhL,KAAK4D,eAAiB5D,KAAKkJ,mBAAqBlJ,KAAKgI,UAAY,KACzFK,EAAM4C,WAAajL,KAAKiJ,iBAAmB,UAAY,SAEnDjJ,KAAK8B,UAAkC,GAAvB9B,KAAK8B,QAAQoJ,OAC7BlL,KAAK4I,oBAQb5I,KAAKmL,oBAAsB,WACvB,OAAOnL,KAAKH,WAQhBG,KAAKoL,oBAAsB,WACvB,OAAOpL,KAAKS,UAQhBT,KAAKqL,qBAAuB,WACxB,OAAOrL,KAAKH,WAKhBG,KAAKsL,sBAAwB,WACzB,IAAIjD,EAAQrI,KAAKuL,SAASlD,MAC1B,GAAKrI,KAAKsE,sBAAV,CAIA,IAAIkH,EAAWxL,KAAKqB,aAAaoK,UACjC,GAAKD,EAAL,CAEA,IAAIE,EAAc1L,KAAK2L,aACnBD,GAAeA,EAAYE,cAC3BJ,EAAWxL,KAAKqB,aAAawK,iBAAiBH,EAAYE,YAAYE,OAAO,IAEjF,IAAIrN,EAASuB,KAAKsD,YACdyI,EAASP,EAAStJ,IAClB8J,EAAUR,EAASpJ,KACvB2J,GAAUtN,EAAOsF,OAEjB,IAAIK,EAAIsH,GAAeA,EAAYO,kBAAoBjM,KAAK2D,WAAalE,EAAgB,EAAI,EAC7F,GAAIsM,EAAS,GAAKA,EAAStN,EAAOwE,OAASmB,EACvC5F,EAAI0N,UAAUlM,KAAKuL,SAAU,EAAG,OADpC,CAKA,IAAIY,EAAI,EACR,GAAKT,EAID,GAAIA,EAAYO,kBAAmB,CAC/B,IAAIG,EAAMpM,KAAKuL,SAASc,MACxBF,EAAInM,KAAK4D,eAAkB5D,KAAK8B,QAAQwK,sBAAsBF,GAAK,GACnEhI,GAAK,OAGL2H,GAAU/L,KAAK2D,WAAa,OAThCoI,GAAU/L,KAAK2D,YAanBqI,GAAWhM,KAAKsC,YACFtC,KAAK+C,MAAMK,cAAgB+I,IACrCH,EAAUhM,KAAK+C,MAAMK,cAAgB+I,GAEzCH,GAAWhM,KAAK8C,YAAc9C,KAAKqE,OAAOjC,KAE1C5D,EAAIsH,SAASuC,EAAO,SAAUjE,EAAI,MAClC5F,EAAIsH,SAASuC,EAAO,QAAS8D,EAAI,MACjC3N,EAAI0N,UAAUlM,KAAKuL,SAAU/C,KAAK+D,IAAIP,EAAShM,KAAK+C,MAAMK,cAAgB+I,GAAI3D,KAAK+D,IAAIR,EAAQ/L,KAAK+C,MAAME,OAASmB,WA5C/G5F,EAAI0N,UAAUlM,KAAKuL,UAAW,IAAK,IAmD3CvL,KAAKwM,mBAAqB,WACtB,OAAOxM,KAAKsD,YAAYE,UAQ5BxD,KAAKyM,wBAA0B,WAC3B,OAAOzM,KAAKsD,YAAYE,UAAwC,IAA5BxD,KAAKsD,YAAYS,OAAe,EAAI,IAQ5E/D,KAAK0M,uBAAyB,WAC1B,IAAIjO,EAASuB,KAAKsD,YACdI,EAAUjF,EAAOiF,QAErB,OADU1D,KAAK8B,QAAQ6K,oBAAoBjJ,EAAS,GAAKjF,EAAOkF,WACtD3D,KAAK8B,QAAQwE,eAAiB7H,EAAOwE,OAASxE,EAAOkF,WACpDD,EAAU,EACdA,GAQX1D,KAAK4M,kBAAoB,WACrB,OAAO5M,KAAKsD,YAAYI,SAG5B1D,KAAKgI,SAAW,KAOhBhI,KAAK8E,WAAa,SAASvB,GACvBvD,KAAKgI,SAAWzE,EAChBvD,KAAKiB,WAAW6D,WAAWvB,GAC3BvD,KAAKqB,aAAayD,WAAWvB,GAC7BvD,KAAKoB,aAAa0D,WAAWvB,GAC7BvD,KAAKe,YAAY+D,WAAWvB,GAC5BvD,KAAKwE,MAAMI,SAAS5E,KAAK6E,aACzB7E,KAAKiG,sBAGTjG,KAAK6M,gBAAkB,SAAS3K,EAAKgC,EAAQ9B,EAAM6B,GAC/C,IAAI6I,EAAK9M,KAAKiC,aACd6K,EAAG5K,IAAU,EAAJA,EACT4K,EAAG5I,OAAgB,EAAPA,EACZ4I,EAAG7I,MAAc,EAANA,EACX6I,EAAG1K,KAAY,EAALA,EACV0K,EAAG3I,EAAI2I,EAAG5K,IAAM4K,EAAG5I,OACnB4I,EAAG1I,EAAI0I,EAAG1K,KAAO0K,EAAG7I,MAChB6I,EAAG5K,KAAOlC,KAAKqC,WAAa,GAAKrC,KAAK8B,SACtC9B,KAAK8B,QAAQC,cAAc+K,EAAG5K,KAClClC,KAAKkH,cAGTlH,KAAK+M,UAAY,SAAS7K,EAAKgC,EAAQ9B,EAAM6B,GACzC,IAAI6I,EAAK9M,KAAKqE,OACdyI,EAAG5K,IAAU,EAAJA,EACT4K,EAAG5I,OAAgB,EAAPA,EACZ4I,EAAG7I,MAAc,EAANA,EACX6I,EAAG1K,KAAY,EAALA,EACV0K,EAAG3I,EAAI2I,EAAG5K,IAAM4K,EAAG5I,OACnB4I,EAAG1I,EAAI0I,EAAG1K,KAAO0K,EAAG7I,MACpBjE,KAAK+H,mBAAkB,EAAM/H,KAAK8C,YAAa9C,KAAK+C,MAAMC,MAAOhD,KAAK+C,MAAME,QAC5EjD,KAAKkH,cAOTlH,KAAKgN,2BAA6B,WAC9B,OAAOhN,KAAKiN,0BAOhBjN,KAAKkN,2BAA6B,SAASC,GACvCnN,KAAKqJ,UAAU,0BAA2B8D,IAM9CnN,KAAKoN,2BAA6B,WAC9B,OAAOpN,KAAKqN,0BAOhBrN,KAAKsN,2BAA6B,SAASH,GACvCnN,KAAKqJ,UAAU,0BAA2B8D,IAG9CnN,KAAKuN,kBAAoB,WACrB,IAAI5F,EAAe3H,KAAKsD,YAAYQ,UAChCX,EAAiBnD,KAAK+C,MAAMI,gBAC3BnD,KAAKwN,WAAaxN,KAAKyN,iBACxB9F,IAAiBxE,EAAiBnD,KAAK2D,YAAc3D,KAAKyN,eACtDzN,KAAKqC,UAAYsF,EAAexE,IAChCwE,EAAe3H,KAAKqC,UAAYc,EAChCnD,KAAKyB,WAAWY,UAAY,OAGpCrC,KAAKyB,WAAWiM,gBAAgB/F,EAAe3H,KAAKiC,aAAakC,GACjEnE,KAAKyB,WAAWM,aAAa/B,KAAKqC,UAAYrC,KAAKiC,aAAaC,MAEpElC,KAAK2N,kBAAoB,WACrB3N,KAAK0B,WAAWkM,eAAe5N,KAAKsD,YAAYN,MAAQ,EAAIhD,KAAKgI,SAAWhI,KAAKiC,aAAamC,GAC9FpE,KAAK0B,WAAWS,cAAcnC,KAAKsC,WAAatC,KAAKiC,aAAaG,OAGtEpC,KAAK6N,SAAU,EACf7N,KAAK8N,OAAS,WACV9N,KAAK6N,SAAU,GAGnB7N,KAAK+N,SAAW,WACZ/N,KAAK6N,SAAU,GAGnB7N,KAAKyE,eAAiB,SAASqD,EAAStB,GAKpC,GAJIxG,KAAKqH,WACLS,GAAW9H,KAAKqH,SAChBrH,KAAKqH,SAAW,GAEdrH,KAAK8B,SAAY9B,KAAKH,UAAU0I,cAAevI,KAAK6N,UAAc/F,GAAYtB,GAApF,CAIA,GAAIxG,KAAK+C,MAAMM,OAEX,OADArD,KAAKqH,UAAYS,EACV9H,KAAK6C,UAAS,GAEpB7C,KAAK2D,YACN3D,KAAKiB,WAAWmG,sBAIpBpH,KAAKkD,QAAQ,gBAETlD,KAAK8B,SAAW9B,KAAK8B,QAAQ+E,cAC7B7G,KAAK8B,QAAQ+E,aAAamH,sBAAsBhO,KAAK0C,cAEzD,IAAIjE,EAASuB,KAAKsD,YAElB,GAAIwE,EAAU9H,KAAK6E,aACfiD,EAAU9H,KAAKuF,aACfuC,EAAU9H,KAAKsF,aACfwC,EAAU9H,KAAKqF,cACfyC,EAAU9H,KAAKoF,eACf0C,EAAU9H,KAAK0F,gBACjB,CAOE,GANAoC,GAAW9H,KAAK6I,sBAAwB7I,KAAKwE,MAAMyJ,QAM/CxP,EAAO+E,UAAYxD,KAAKsD,YAAYE,UAAY/E,EAAOgF,gBAAkBzD,KAAKsD,YAAYG,eAAgB,CAC1G,IAAIyK,EAAKlO,KAAKqC,WAAa5D,EAAO+E,SAAWxD,KAAKsD,YAAYE,UAAYxD,KAAK2D,WAC3EuK,EAAK,IAELlO,KAAKqC,UAAY6L,EACjBpG,GAAoB9H,KAAKoF,cACzB0C,GAAW9H,KAAK6I,sBAAwB7I,KAAKwE,MAAMyJ,SAG3DxP,EAASuB,KAAKsD,YAEdtD,KAAKuN,oBACDzF,EAAU9H,KAAK0F,iBACf1F,KAAK2N,oBAETnP,EAAI0N,UAAUlM,KAAKU,SAAUV,KAAKsC,YAAa7D,EAAOsF,QAEtD,IAAIf,EAAQvE,EAAOuE,MAAQ,EAAIhD,KAAKgI,SAAW,KAC3C/E,EAASxE,EAAOoF,UAAY,KAEhCrF,EAAIsH,SAAS9F,KAAKU,QAAQ2H,MAAO,QAASrF,GAC1CxE,EAAIsH,SAAS9F,KAAKU,QAAQ2H,MAAO,SAAUpF,GAU/C,GANI6E,EAAU9H,KAAK0F,kBACflH,EAAI0N,UAAUlM,KAAKU,SAAUV,KAAKsC,YAAa7D,EAAOsF,QACtD/D,KAAKS,SAASH,UAAYN,KAAKsC,YAAc,EAAI,eAAiB,gCAIlEwF,EAAU9H,KAAK6E,YASf,OARA7E,KAAKiB,WAAWkN,OAAO1P,GACnBuB,KAAKsI,aACLtI,KAAKW,aAAawN,OAAO1P,GAC7BuB,KAAKe,YAAYoN,OAAO1P,GACxBuB,KAAKoB,aAAa+M,OAAO1P,GACzBuB,KAAKqB,aAAa8M,OAAO1P,GACzBuB,KAAKsL,6BACLtL,KAAKkD,QAAQ,eAKjB,GAAI4E,EAAU9H,KAAKoF,cAiBf,OAhBI0C,EAAU9H,KAAKsF,aAAewC,EAAU9H,KAAKqF,aAC7CrF,KAAKiB,WAAWkN,OAAO1P,GAEvBuB,KAAKiB,WAAWmN,YAAY3P,GAE5BuB,KAAKsI,cACDR,EAAU9H,KAAKmF,eAAiB2C,EAAU9H,KAAKqF,aAC/CrF,KAAKW,aAAawN,OAAO1P,GAEzBuB,KAAKW,aAAayN,YAAY3P,IAEtCuB,KAAKe,YAAYoN,OAAO1P,GACxBuB,KAAKoB,aAAa+M,OAAO1P,GACzBuB,KAAKqB,aAAa8M,OAAO1P,GACzBuB,KAAKsL,6BACLtL,KAAKkD,QAAQ,eAIb4E,EAAU9H,KAAKsF,aACftF,KAAKiB,WAAWkN,OAAO1P,GACnBuB,KAAKsI,aACLtI,KAAKW,aAAawN,OAAO1P,IAExBqJ,EAAU9H,KAAKqF,cAChBrF,KAAKqO,gBAAmBvG,EAAU9H,KAAKmF,eAAkBnF,KAAKsI,cAC9DtI,KAAKW,aAAawN,OAAO1P,GAExBqJ,EAAU9H,KAAKsF,aAAewC,EAAU9H,KAAKmF,cAC9CnF,KAAKsI,aACLtI,KAAKW,aAAawN,OAAO1P,GAExBqJ,EAAU9H,KAAKiF,eAChBjF,KAAKsO,sBACLtO,KAAKW,aAAa4N,oBAAoB9P,GAG1CqJ,EAAU9H,KAAKiF,gBACfjF,KAAKqB,aAAa8M,OAAO1P,GACzBuB,KAAKsL,yBAGLxD,GAAW9H,KAAKkF,cAAgBlF,KAAKyF,sBACrCzF,KAAKoB,aAAa+M,OAAO1P,GAGzBqJ,GAAW9H,KAAKkF,cAAgBlF,KAAKwF,qBACrCxF,KAAKe,YAAYoN,OAAO1P,GAG5BuB,KAAKkD,QAAQ,oBA/HTlD,KAAKqH,UAAYS,GAmIzB9H,KAAKwO,UAAY,WACb,IAAIvL,EAASjD,KAAK8B,QAAQ2M,kBAAoBzO,KAAK2D,WAC/CG,EAAY9D,KAAKwN,UAAYxN,KAAK2D,WAClC+K,EAAgBlG,KAAK+D,IAAIzI,EACzB0E,KAAKC,KAAKzI,KAAK2O,WAAa,GAAK3O,KAAK2D,WAAYV,IAClDjD,KAAKiC,aAAakC,GAAKnE,KAAKiI,cAAgB,GAC5CjI,KAAKsB,eACLoN,GAAiB1O,KAAK0B,WAAW0G,aACjCpI,KAAK4O,iBAAmBF,EAAgB1O,KAAK4O,kBAC7CF,EAAgB1O,KAAK4O,iBAEzB,IACIC,IADiBH,GAAiB,EAAI1O,KAAK2D,aACdV,EAASa,EAE1C,GAAI4K,GAAiB1O,KAAK0O,eACtB1O,KAAK+C,MAAME,QAAUjD,KAAK0O,eAAiBG,GAAW7O,KAAKuB,SAAU,CACjEsN,GAAW7O,KAAKuB,WAChBvB,KAAKuB,SAAWsN,EAChB7O,KAAKyB,WAAWqN,WAAWD,IAG/B,IAAI1C,EAAInM,KAAKH,UAAU+H,YACvB5H,KAAKH,UAAUwI,MAAMpF,OAASyL,EAAgB,KAC9C1O,KAAK+H,mBAAkB,EAAM/H,KAAK+O,aAAc5C,EAAGuC,GAEnD1O,KAAK0O,cAAgBA,EAErB1O,KAAKkD,QAAQ,cAIrBlD,KAAK6I,oBAAsB,WACvB,IAAI/G,EAAU9B,KAAK8B,QACfoG,EAAOlI,KAAK+C,MAEZiM,EAAiB9G,EAAKjF,QAAU,EAAIjD,KAAK2D,WAEzCG,EADc9D,KAAK8B,QAAQ2M,kBACDzO,KAAK2D,WAE/BsL,EAAcjP,KAAKkP,kBAEnBC,GAAeH,IAAmBhP,KAAKiN,0BACvC/E,EAAK9E,cAAgB6L,EAAc,EAAIjP,KAAKgI,SAAW,GAEvDoH,EAAiBpP,KAAKsB,eAAiB6N,EACvCC,IACApP,KAAKsB,aAAe6N,EACpBnP,KAAK0B,WAAWoN,WAAWK,IAE/B,IAAIE,EAAgBrP,KAAKuB,SAErBvB,KAAKwN,WAAaxN,KAAK2D,WAAa,GACpC3D,KAAKwO,YAET,IAAI3K,EAAYqE,EAAK/E,eAAiBnD,KAAK2D,WAEvC2L,GAAiBtP,KAAKwN,WAAaxN,KAAKyN,gBACrCvF,EAAK/E,eAAiBnD,KAAK2D,YAAc3D,KAAKyN,eAC/C,EACN3J,GAAawL,EAEb,IAAIxC,EAAK9M,KAAKiC,aACdjC,KAAK8B,QAAQC,aAAayG,KAAKC,KAAKqE,EAAG5K,IACnCsG,KAAK+D,IAAIvM,KAAKqC,UAAWyB,EAAYoE,EAAK/E,eAAiB2J,EAAG5I,UAElElE,KAAK8B,QAAQK,cAAcqG,KAAKC,KAAKqE,EAAG1K,KAAMoG,KAAK+D,IAAIvM,KAAKsC,WACxD2M,EAAc,EAAIjP,KAAKgI,SAAWE,EAAK9E,cAAgB0J,EAAG7I,SAE9D,IAAI4K,GAAWG,IAAmBhP,KAAKqN,0BACnCnF,EAAK/E,eAAiBW,EAAYwL,EAAgB,GAAKtP,KAAKqC,UAAYyK,EAAG5K,KAC3EqN,EAAiBF,IAAkBR,EACnCU,IACAvP,KAAKuB,SAAWsN,EAChB7O,KAAKyB,WAAWqN,WAAWD,IAG/B,IAMIpL,EAAgB+L,EANhBzL,EAAS/D,KAAKqC,UAAYrC,KAAK2D,WAC/B8L,EAAYjH,KAAKkH,KAAK7L,EAAY7D,KAAK2D,YAAc,EACrDH,EAAWgF,KAAKC,IAAI,EAAGD,KAAKwC,OAAOhL,KAAKqC,UAAY0B,GAAU/D,KAAK2D,aACnED,EAAUF,EAAWiM,EAIrB9L,EAAa3D,KAAK2D,WACtBH,EAAW1B,EAAQ6N,oBAAoBnM,EAAU,GAIjD,IAAIoM,EAAW9N,EAAQ+N,YAAYrM,GAC/BoM,IACApM,EAAWoM,EAAS9D,MAAMtJ,KAG9BiB,EAAiB3B,EAAQ6K,oBAAoBnJ,EAAU,GACvDgM,EAAiB1N,EAAQgO,aAAatM,GAAYG,EAElDD,EAAU8E,KAAK+D,IAAIzK,EAAQ6N,oBAAoBjM,EAAS,GAAI5B,EAAQiO,YAAc,GAClFlM,EAAYqE,EAAK/E,eAAiBrB,EAAQgO,aAAapM,GAAWC,EAC1B6L,EAExCzL,EAAS/D,KAAKqC,UAAYoB,EAAiBE,EAE3C,IAAImE,EAAU,EAgCd,OA/BI9H,KAAKsD,YAAYN,OAASiM,GAAeG,KACzCtH,EAAU9H,KAAK0F,kBAGf0J,GAAkBG,KAClBzH,EAAU9H,KAAK+H,mBAAkB,EAAM/H,KAAK8C,YAAaoF,EAAKlF,MAAOkF,EAAKjF,QAC1EjD,KAAKkD,QAAQ,8BACTqM,IACAN,EAAcjP,KAAKkP,oBAG3BlP,KAAKsD,aACDN,MAAQiM,EACR1L,QAAUvD,KAAKgI,SACfxE,SAAWA,EACXC,eAAgBA,EAChBC,QAAUA,EACVC,WAAaA,EACbC,eAAiB5D,KAAK4D,eACtBC,UAAYA,EACZC,UAAYA,EACZC,OAASA,EACTC,aAAeL,EAAa6E,KAAKC,IAAI,EAAGD,KAAKkH,MAAM3L,EAASmE,EAAKjF,OAASiF,EAAK/E,gBAAkBQ,IAAe,EAChHV,OAASjD,KAAK+C,MAAMI,gBAGpBnD,KAAK8B,QAAQ+E,cACb7G,KAAK8B,QAAQ+E,aAAamJ,gBAAgBf,EAAcjP,KAAKgI,UAI1DF,GAGX9H,KAAKqO,aAAe,WAChB,GAAKrO,KAAK2G,cAAV,CACA,IAAInD,EAAWxD,KAAK2G,cAAcnD,SAC9BE,EAAU1D,KAAK2G,cAAcjD,QACjC1D,KAAK2G,cAAgB,KAErB,IAAIrD,EAActD,KAAKsD,YAEvB,KAAIE,EAAWF,EAAYI,QAAU,GACjCA,EAAUJ,EAAYE,UAG1B,OAAIE,IAAYgD,EAAAA,GACR1G,KAAKsI,aACLtI,KAAKW,aAAawN,OAAO7K,QAC7BtD,KAAKiB,WAAWkN,OAAO7K,KAK3BtD,KAAKiB,WAAWsF,YAAYjD,EAAaE,EAAUE,IAC5C,KAGX1D,KAAKkP,gBAAkB,WACnB,IAAIe,EAAYjQ,KAAK8B,QAAQoO,iBAO7B,OANIlQ,KAAKyJ,iBAAmBzJ,KAAK8B,QAAQqO,eACrCF,GAAa,GAEbjQ,KAAKiB,YAAcgP,EAAYjQ,KAAKiB,WAAWmP,kBAC/CH,EAAYjQ,KAAKiB,WAAWmP,gBAAkB,IAE3C5H,KAAKC,IAAIzI,KAAK+C,MAAMK,cAAgB,EAAIpD,KAAKgI,SAAUQ,KAAKwC,MAAMiF,EAAYjQ,KAAK4D,kBAM9F5D,KAAKqQ,mBAAqB,WACtBrQ,KAAKoB,aAAakP,WAAWtQ,KAAK8B,QAAQyO,YAAW,IACrDvQ,KAAKwE,MAAMI,SAAS5E,KAAKyF,sBAO7BzF,KAAKwQ,kBAAoB,WACrBxQ,KAAKe,YAAYuP,WAAWtQ,KAAK8B,QAAQyO,cACzCvQ,KAAKwE,MAAMI,SAAS5E,KAAKwF,qBAQ7BxF,KAAKyQ,oBAAsB,SAASjO,EAAKlC,GACrCN,KAAKW,aAAa8P,oBAAoBjO,EAAKlC,IAO/CN,KAAK0Q,uBAAyB,SAASlO,EAAKlC,GACxCN,KAAKW,aAAa+P,uBAAuBlO,EAAKlC,IAOlDN,KAAK2Q,kBAAoB,SAASC,GAC9B5Q,KAAKwE,MAAMI,SAAS5E,KAAKmF,gBAQ7BnF,KAAK6Q,eAAiB,SAASC,GAC3B9Q,KAAKW,aAAakQ,eAAeC,GACjC9Q,KAAKwE,MAAMI,SAAS5E,KAAKmF,gBAO7BnF,KAAK+Q,aAAe,WAChB/Q,KAAKwE,MAAMI,SAAS5E,KAAKiF,gBAO7BjF,KAAKgR,WAAa,WACdhR,KAAKqB,aAAa2P,cAOtBhR,KAAKiR,WAAa,WACdjR,KAAKqB,aAAa4P,cAGtBjR,KAAKkR,wBAA0B,SAASC,EAAQC,EAAMrN,GAElD/D,KAAKqR,qBAAqBF,EAAQpN,GAClC/D,KAAKqR,qBAAqBD,EAAMrN,IAOpC/D,KAAKqR,qBAAuB,SAASC,EAAQvN,EAAQwN,GAEjD,GAAkC,IAA9BvR,KAAK+C,MAAMI,eAAf,CAGA,IAAIqO,EAAMxR,KAAKqB,aAAawK,iBAAiByF,GAEzClP,EAAOoP,EAAIpP,KACXF,EAAMsP,EAAItP,IAEVuP,EAAYF,GAAeA,EAAYrP,KAAO,EAC9CwP,EAAeH,GAAeA,EAAYrN,QAAU,EAEpD7B,EAAYrC,KAAK6B,iBAAmB7B,KAAK8B,QAAQwE,eAAiBtG,KAAKqC,UAEvEA,EAAYoP,EAAYvP,GACpB6B,GAAU1B,EAAYoP,EAAYvP,EAAMlC,KAAK2D,aAC7CzB,GAAO6B,EAAS/D,KAAK+C,MAAMI,gBACnB,IAARjB,IACAA,GAAOlC,KAAKiC,aAAaC,KAC7BlC,KAAK8B,QAAQC,aAAaG,IACnBG,EAAYrC,KAAK+C,MAAMI,eAAiBuO,EAAexP,EAAMlC,KAAK2D,aACrEI,GAAU1B,EAAYrC,KAAK+C,MAAMI,eAAiBuO,EAAexP,EAAOlC,KAAK2D,aAC7EzB,GAAO6B,EAAS/D,KAAK+C,MAAMI,gBAC/BnD,KAAK8B,QAAQC,aAAaG,EAAMlC,KAAK2D,WAAa+N,EAAe1R,KAAK+C,MAAMI,iBAGhF,IAAIb,EAAatC,KAAKsC,WAElBA,EAAaF,GACTA,EAAOpC,KAAKgI,SAAW,EAAIhI,KAAKsD,YAAYM,iBAC5CxB,GAAQpC,KAAKiC,aAAaG,MAC9BpC,KAAK8B,QAAQK,cAAcC,IACpBE,EAAatC,KAAK+C,MAAMK,cAAgBhB,EAAOpC,KAAK4D,eAC3D5D,KAAK8B,QAAQK,cAAcqG,KAAKwC,MAAM5I,EAAOpC,KAAK4D,eAAiB5D,KAAK+C,MAAMK,gBACvEd,GAActC,KAAKgI,UAAY5F,EAAOE,EAAatC,KAAK4D,gBAC/D5D,KAAK8B,QAAQK,cAAc,KASnCnC,KAAKsG,aAAe,WAChB,OAAOtG,KAAK8B,QAAQwE,gBAQxBtG,KAAK2R,cAAgB,WACjB,OAAO3R,KAAK8B,QAAQ6P,iBAOxB3R,KAAK4R,gBAAkB,WACnB,OAAO5R,KAAKqC,UAAYrC,KAAK2D,YAOjC3D,KAAK6R,mBAAqB,WACtB,OAAOrJ,KAAKC,IAAI,EAAGD,KAAKQ,OAAOhJ,KAAKqC,UAAYrC,KAAK+C,MAAMI,gBAAkBnD,KAAK2D,YAAc,IASpG3D,KAAK8R,YAAc,SAAStP,GACxBxC,KAAK8B,QAAQC,aAAaS,EAAMxC,KAAK2D,aAGzC3D,KAAK+R,YAAc,SAAST,EAAQU,GACX,iBAAVV,IACPA,GAAU9O,IAAK8O,EAAQ7O,OAAQ,IAEnC,IAAI+O,EAAMxR,KAAKqB,aAAawK,iBAAiByF,GACzClN,EAAIpE,KAAK+C,MAAMI,eAAiBnD,KAAK2D,WACrCI,EAASyN,EAAItP,IAAMkC,GAAK4N,GAAa,GAGzC,OADAhS,KAAK8B,QAAQC,aAAagC,GACnBA,GAGX/D,KAAKiS,MAAQ,EACbjS,KAAKkS,WAAa,SAASC,EAAWC,GAClC,IAIqBC,EAAGC,EAJpBC,EAAI,EACJC,EAAIxS,KAAKiS,MACTQ,KAMJ,IAAKF,EAAI,EAAGA,EAAIC,IAAKD,EACjBE,EAAMC,MALWL,EAKDE,EAAIvS,KAAKiS,MALLK,EAKYH,GAAWC,EAAUD,IAJxC3J,KAAKmK,IAAIN,EAAI,EAAG,GAAK,GAAKC,IAM3C,OAAOG,GAWXzS,KAAK4S,aAAe,SAASC,EAAMC,EAAQC,EAASC,GAChD,IACIjP,EADM/D,KAAKqB,aAAawK,kBAAkBrJ,IAAKqQ,EAAMpQ,OAAQ,IAChDP,IACb4Q,IACA/O,GAAU/D,KAAK+C,MAAMI,eAAiB,GAE1C,IAAI8P,EAAgBjT,KAAKqC,UACzBrC,KAAK8B,QAAQC,aAAagC,IACV,IAAZgP,GACA/S,KAAKkT,iBAAiBD,EAAeD,IAG7ChT,KAAKkT,iBAAmB,SAASf,EAAWa,GACxC,IAAIZ,EAAUpS,KAAKqC,UACnB,GAAKrC,KAAKuJ,gBAAV,CAEA,IAAIxJ,EAAQC,KAEZ,GAAImS,GAAaC,EAAjB,CAGA,GAAIpS,KAAK6B,iBAAkB,CACvB,IAAIsR,EAAWnT,KAAK6B,iBAAiB4Q,MACrC,GAAIU,EAASC,SACTjB,EAAYgB,EAAS,KACJf,EACb,OAIZ,IAAIK,EAAQ1S,EAAMmS,WAAWC,EAAWC,GACxCpS,KAAK6B,kBAAoBwR,KAAMlB,EAAWmB,GAAIlB,EAASK,MAAOA,GAE9Dc,cAAcvT,KAAKwT,QAEnBzT,EAAM+B,QAAQC,aAAa0Q,EAAMgB,SAEjC1T,EAAM+B,QAAQ4R,WAAatB,EAC3BpS,KAAKwT,OAASG,YAAY,WAClBlB,EAAMW,QACNrT,EAAM+B,QAAQC,aAAa0Q,EAAMgB,SACjC1T,EAAM+B,QAAQ4R,WAAatB,GACT,MAAXA,GACPrS,EAAM+B,QAAQ4R,YAAc,EAC5B3T,EAAM+B,QAAQC,aAAaqQ,GAC3BA,EAAU,OAGVrS,EAAMyT,OAASD,cAAcxT,EAAMyT,QACnCzT,EAAM8B,iBAAmB,KACzBmR,GAAYA,MAEjB,OASPhT,KAAK4T,UAAY,SAASvR,GAGlBrC,KAAKqC,YAAcA,IACnBrC,KAAKwE,MAAMI,SAAS5E,KAAKoF,eACzBpF,KAAKqC,UAAYA,IAUzBrC,KAAK6T,UAAY,SAASvR,GAClBtC,KAAKsC,aAAeA,IACpBtC,KAAKsC,WAAaA,GACtBtC,KAAKwE,MAAMI,SAAS5E,KAAK0F,kBAQ7B1F,KAAK8T,SAAW,SAASC,EAAGC,GACxBhU,KAAK8B,QAAQC,aAAaiS,GAC1BhU,KAAK8B,QAAQK,cAAc6R,IAQ/BhU,KAAKiU,SAAW,SAASC,EAAQC,GAC7BA,GAAUnU,KAAK8B,QAAQC,aAAa/B,KAAK8B,QAAQwE,eAAiB6N,GAClED,GAAUlU,KAAK8B,QAAQK,cAAcnC,KAAK8B,QAAQ6P,gBAAkBuC,IAUxElU,KAAKoU,eAAiB,SAASF,EAAQC,GACnC,OAAIA,EAAS,GAAKnU,KAAK8B,QAAQwE,gBAAkB,EAAItG,KAAKiC,aAAaC,MAEnEiS,EAAS,GAAKnU,KAAK8B,QAAQwE,eAAiBtG,KAAK+C,MAAMI,eACrDnD,KAAKsD,YAAYQ,WAAa,EAAI9D,KAAKiC,aAAaiC,SAEtDgQ,EAAS,GAAKlU,KAAK8B,QAAQ6P,iBAAmB,EAAI3R,KAAKiC,aAAaG,OAEpE8R,EAAS,GAAKlU,KAAK8B,QAAQ6P,gBAAkB3R,KAAK+C,MAAMK,cACtDpD,KAAKsD,YAAYN,OAAS,EAAIhD,KAAKiC,aAAagC,YADtD,MAKJjE,KAAKqU,yBAA2B,SAASN,EAAGC,GACxC,IAAIM,EACJ,GAAItU,KAAKuU,kBAAmB,CACxBD,GAAapS,IAAI,EAAGE,KAAM,GAC1B,IAAIoS,EAAIxU,KAAK0C,aAAa+R,sBAAsBV,EAAGC,IACnDD,EAAIS,EAAE,GAAKxU,KAAK8C,YAAc9C,KAAKqE,OAAOjC,KAC1C4R,EAAIQ,EAAE,QAENF,EAAYtU,KAAKS,SAASiU,wBAG9B,IAAIC,EAAUZ,EAAI/T,KAAKsC,WAAagS,EAAUlS,KAAOpC,KAAKgI,SACtDjE,EAAS4Q,EAAU3U,KAAK4D,eACxBpB,EAAMgG,KAAKQ,OAAOgL,EAAIhU,KAAKqC,UAAYiS,EAAUpS,KAAOlC,KAAK2D,YAC7DiR,EAAM5U,KAAK6U,aAAerM,KAAKQ,MAAMjF,GAAUyE,KAAKwC,MAAMjH,GAE9D,OAAQvB,IAAKA,EAAKC,OAAQmS,EAAKE,KAAM/Q,EAAS6Q,EAAM,EAAI,GAAK,EAAGD,QAAUA,IAG9E3U,KAAK+U,wBAA0B,SAAShB,EAAGC,GACvC,IAAIM,EACJ,GAAItU,KAAKuU,kBAAmB,CACxBD,GAAapS,IAAI,EAAGE,KAAM,GAC1B,IAAIoS,EAAIxU,KAAK0C,aAAa+R,sBAAsBV,EAAGC,IACnDD,EAAIS,EAAE,GAAKxU,KAAK8C,YAAc9C,KAAKqE,OAAOjC,KAC1C4R,EAAIQ,EAAE,QAENF,EAAYtU,KAAKS,SAASiU,wBAG9B,IAAIC,EAAUZ,EAAI/T,KAAKsC,WAAagS,EAAUlS,KAAOpC,KAAKgI,SACtDjE,EAAS4Q,EAAU3U,KAAK4D,eACxBgR,EAAM5U,KAAK6U,aAAerM,KAAKQ,MAAMjF,GAAUyE,KAAKwC,MAAMjH,GAE1DvB,EAAMgG,KAAKQ,OAAOgL,EAAIhU,KAAKqC,UAAYiS,EAAUpS,KAAOlC,KAAK2D,YAEjE,OAAO3D,KAAK8B,QAAQkT,yBAAyBxS,EAAKgG,KAAKC,IAAImM,EAAK,GAAID,IAUxE3U,KAAKiV,wBAA0B,SAASzS,EAAKC,GACzC,IAAI6R,EAAYtU,KAAKS,SAASiU,wBAC1BlD,EAAMxR,KAAK8B,QAAQoT,yBAAyB1S,EAAKC,GAEjDsR,EAAI/T,KAAKgI,UAAYhI,KAAK8B,QAAQ+E,aAAasO,UAAU3D,EAAIhP,IAAKA,GAC/DxC,KAAK8B,QAAQ+E,aAAauO,WAAW5D,EAAI/O,QACzC+F,KAAKwC,MAAMwG,EAAI/O,OAASzC,KAAK4D,iBAEhCoQ,EAAIxC,EAAIhP,IAAMxC,KAAK2D,WAEvB,OACI0R,MAAOf,EAAUlS,KAAO2R,EAAI/T,KAAKsC,WACjCgT,MAAOhB,EAAUpS,IAAM8R,EAAIhU,KAAKqC,YAQxCrC,KAAKuV,eAAiB,WAClB/W,EAAI0B,YAAYF,KAAKH,UAAW,cAOpCG,KAAKwV,cAAgB,WACjBhX,EAAIiX,eAAezV,KAAKH,UAAW,cAQvCG,KAAK0V,gBAAkB,SAAShK,GAC5B1L,KAAK2L,aAAeD,EACfA,EAAYiK,UACbjK,EAAYiK,QAAU3V,KAAKuL,SAASlD,MAAMsN,QAC1CjK,EAAYkK,qBAAuB5V,KAAKsE,uBAE5CoH,EAAYO,kBAAoBjM,KAAK6V,mBAEjC7V,KAAK6V,oBACL7V,KAAKsE,uBAAwB,EAC7B9F,EAAI0B,YAAYF,KAAKuL,SAAU,mBAC/BvL,KAAKuL,SAASlD,MAAMsN,QAAU,GAC9B3V,KAAKsL,wBACLtL,KAAKqB,aAAaF,QAAQkH,MAAMyB,QAAU,QAG1C4B,EAAYoK,SAAW9V,KAAK8B,QAAQiU,UAAUrK,EAAYE,YAAa,yBAA0B,SASzG5L,KAAKgW,mBAAqB,SAASC,GAC/B,IAAI3E,EAAStR,KAAK8B,QAAQoU,UAAU5E,OACpCtR,KAAKmW,SAASF,EAAM,0BAA2B3E,EAAO9O,IAAK8O,EAAO7O,QAClEzC,KAAKsL,yBAOTtL,KAAKoW,gBAAkB,WACdpW,KAAK2L,eAGN3L,KAAK2L,aAAamK,UAClB9V,KAAK8B,QAAQuU,aAAarW,KAAK2L,aAAamK,UAEhDtX,EAAIiX,eAAezV,KAAKuL,SAAU,mBAClCvL,KAAKsE,sBAAwBtE,KAAK2L,aAAaiK,qBAC/C5V,KAAKuL,SAASlD,MAAMsN,QAAU3V,KAAK2L,aAAagK,QAChD3V,KAAK2L,aAAe,KACpB3L,KAAKqB,aAAaF,QAAQkH,MAAMyB,QAAU,KAG9C9J,KAAKmW,SAAW,SAASF,EAAMK,EAAM9T,EAAKC,GACtC,IAAIX,EAAU9B,KAAK8B,QACnBA,EAAQyU,YAAYC,MAAMhU,GAAO,KACjC,IAAIiU,GAAYH,KAAMA,EAAMjK,MAAO4J,GAC/BS,EAAS5U,EAAQ6U,UAAUnU,GAC/B,GAAc,MAAVC,EACAiU,EAAOhE,KAAK+D,QAGZ,IADA,IAAIjE,EAAI,EACCD,EAAG,EAAGA,EAAImE,EAAOtD,OAAQb,IAAK,CACnC,IAAIqE,EAAQF,EAAOnE,GAEnB,GAAI9P,IADJ+P,GAAKoE,EAAMvK,MAAM+G,QACA,CACb,IAAIyD,EAAOD,EAAMvK,MAAM+G,QAAUZ,EAAI/P,GACjCqU,EAASF,EAAMvK,MAAM0K,MAAM,EAAGF,GAC9BG,EAAQJ,EAAMvK,MAAM0K,MAAMF,GAE9BH,EAAOO,OAAO1E,EAAG,GAAI+D,KAAMM,EAAMN,KAAMjK,MAAOyK,GAAUL,GAAYH,KAAMM,EAAMN,KAAMjK,MAAO2K,IAC7F,OAIZhX,KAAKuG,YAAY/D,EAAKA,IAU1BxC,KAAKI,SAAW,SAASN,EAAOoX,GAC5B,IAAInX,EAAQC,KAIZ,GAHAA,KAAKmX,SAAWrX,EAChBC,EAAMqX,eAAe,eAAetX,MAAMA,IAErCA,GAAyB,iBAATA,EAIjBuX,EAAUvX,OAJ0B,CACpC,IAAIwX,EAAaxX,GAASE,KAAKuX,SAASzX,MAAM0X,aAC9C/Y,EAAOgZ,YAAY,QAASH,GAAaD,GAK7C,SAASA,EAAU/Y,QACf,GAAIyB,EAAMoX,UAAYrX,EAClB,OAAOoX,GAAMA,IACjB,IAAK5Y,SAAWA,OAAOoZ,SACnB,MAAM,IAAIC,MAAM,wBAA0B7X,EAAQ,6BAClDxB,OAAOsZ,MACP7X,EAAMoX,SAAW7Y,OAAOsZ,KAC5BpZ,EAAImB,gBACArB,OAAOqX,QACPrX,OAAOoZ,SACP3X,EAAMF,WAGNE,EAAMD,OACNtB,EAAIiX,eAAe1V,EAAMF,UAAWE,EAAMD,MAAM4X,UAEpD,IAAInU,EAAU,YAAajF,OAASA,OAAOiF,QACrC,YAAcxD,EAAMD,WAAe,EAAIC,EAAMiI,SAC/CjI,EAAMiI,UAAYzE,GAAWxD,EAAMiI,UACnCjI,EAAM+E,WAAWvB,GAGrBxD,EAAM8X,OAASvZ,OAAOoZ,SAEtB3X,EAAMD,MAAQxB,OACdE,EAAI0B,YAAYH,EAAMF,UAAWvB,OAAOoZ,UACxClZ,EAAIsZ,YAAY/X,EAAMF,UAAW,WAAYvB,OAAOyZ,QAGhDhY,EAAMgD,QACNhD,EAAMgD,MAAMC,MAAQ,EACpBjD,EAAMuH,oBAGVvH,EAAMqX,eAAe,eAAgBtX,MAAMxB,SAC3C4Y,GAAMA,MAQdlX,KAAKgY,SAAW,WACZ,OAAOhY,KAAKmX,UAYhBnX,KAAK8F,SAAW,SAASuC,EAAO4P,GAC5BzZ,EAAIsZ,YAAY9X,KAAKH,UAAWwI,GAAmB,IAAZ4P,IAQ3CjY,KAAKkY,WAAa,SAAS7P,GACvB7J,EAAIiX,eAAezV,KAAKH,UAAWwI,IAGvCrI,KAAKmY,eAAiB,SAAS9P,GAC3B7J,EAAIsH,SAAS9F,KAAKS,SAAS4H,MAAO,SAAUA,IAOhDrI,KAAKoY,eAAiB,SAASC,GAC3B7Z,EAAIsH,SAAS9F,KAAKS,SAAS4H,MAAO,SAAUgQ,IAGhDrY,KAAKsY,mBAAqB,WACtB9Z,EAAImB,gBAAgBJ,EAAW,iBAAkBS,KAAKH,YAM1DG,KAAKuY,QAAU,WACXvY,KAAK0C,aAAa6V,UAClBvY,KAAKqB,aAAakX,aAGvBC,KAAK5Y,EAAgB6Y,WAGxBha,EAAOia,cAAc9Y,EAAgB6Y,UAAW,YAC5CE,gBAAiBnB,cAAc,GAC/B/N,gBACImP,IAAK,SAASvM,GACNrM,KAAKiB,WAAWuI,kBAAkB6C,IAClCrM,KAAKwE,MAAMI,SAAS5E,KAAKsF,cAEjCkS,cAAc,GAElBxN,iBACI4O,IAAK,WAAa5Y,KAAKiG,sBACvBuR,cAAc,GAElBqB,mBACID,IAAK,WAAa5Y,KAAKiG,sBACvBuR,aAAc,IAElBsB,aACIF,IAAK,SAASxM,GACQ,iBAAPA,IACPpM,KAAKkJ,mBAAqBkD,GAC9BpM,KAAKiJ,mBAAqBmD,EAC1BpM,KAAKiG,sBAET8S,IAAK,WACD,OAAO/Y,KAAKiJ,kBAAoBjJ,KAAKkJ,qBAG7C8P,YACIJ,IAAK,SAAStO,GACVtK,KAAKK,QAAQgI,MAAMyB,QAAUQ,EAAO,QAAU,OAC9CtK,KAAKwE,MAAMI,SAAS5E,KAAK6E,aACzB7E,KAAKa,kBAET2W,cAAc,GAElByB,iBACIL,IAAK,SAAStO,GACV9L,EAAIsZ,YAAY9X,KAAKK,QAAS,wBAAyBiK,IAE3DkN,cAAc,GAElB0B,iBACIN,IAAK,SAAStO,GACVtK,KAAKW,aAAawY,mBAAmB7O,GACrCtK,KAAKwE,MAAMI,SAAS5E,KAAKmF,gBAE7BqS,cAAc,GAElB4B,qBACIR,IAAK,SAAStO,GACNtK,KAAKiB,WAAW4I,uBAAuBS,IACvCtK,KAAKwE,MAAMI,SAAS5E,KAAKsF,cAEjCkS,cAAc,GAElB6B,qBACIT,IAAK,SAASlO,GACV1K,KAAKW,aAAa8J,uBAAuBC,GACzC1K,KAAKwE,MAAMI,SAAS5E,KAAKmF,gBAE7BqS,cAAc,GAElB8B,yBACIV,IAAK,SAASxM,GACLpM,KAAKiN,0BAA6BjN,KAAKsB,cACxCtB,KAAKwE,MAAMI,SAAS5E,KAAKoF,gBAEjCoS,cAAc,GAElB+B,yBACIX,IAAK,SAASxM,GACLpM,KAAKqN,0BAA6BrN,KAAKuB,UACxCvB,KAAKwE,MAAMI,SAAS5E,KAAKoF,gBAEjCoS,cAAc,GAElBgC,UACIZ,IAAK,SAAS1Q,GACS,iBAARA,IACPA,GAAc,MAClBlI,KAAKH,UAAUwI,MAAMmR,SAAWtR,EAChClI,KAAKmH,kBAETqQ,aAAc,IAElBiC,YACIb,IAAK,SAASc,GACV1Z,KAAKH,UAAUwI,MAAMoR,WAAaC,EAClC1Z,KAAKmH,mBAGbwS,UACIf,IAAK,SAASxM,GACVpM,KAAKkH,eAGb0S,UACIhB,IAAK,SAASxM,GACJpM,KAAK2O,UAAY,kBACnB3O,KAAK2O,UAAY,GACrB3O,KAAKkH,eAGb2S,gBACIjB,IAAK,SAASxM,GACVpM,KAAKkH,cAETsQ,aAAc,GAElBlI,eACIsJ,IAAK,SAASxM,GACVA,GAAOA,GAAO,EACVpM,KAAKyN,gBAAkBrB,IAE3BpM,KAAKyN,eAAiBrB,EACtBpM,KAAKwE,MAAMI,SAAS5E,KAAKoF,iBAE7BoS,aAAc,EACdsC,YAAY,GAEhBC,kBACInB,IAAK,SAASxM,GACVpM,KAAKW,aAAaqZ,cAAgB5N,EAClCpM,KAAKwE,MAAMI,SAAS5E,KAAKmF,iBAGjCrF,OACI8Y,IAAK,SAASxM,GAAOpM,KAAKI,SAASgM,IACnC2M,IAAK,WAAa,OAAO/Y,KAAKmX,UAAYnX,KAAKF,OAC/C0X,aAAc,mBACdsC,YAAY,GAEhBG,oBAEAhO,mBACIuL,cAAehY,EAAU0a,WAAa1a,EAAUE,QAIxDrB,QAAQuB,gBAAkBA","file":"../virtual_renderer.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2010, Ajax.org B.V.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\ndefine(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"./lib/oop\");\r\nvar dom = require(\"./lib/dom\");\r\nvar config = require(\"./config\");\r\nvar GutterLayer = require(\"./layer/gutter\").Gutter;\r\nvar MarkerLayer = require(\"./layer/marker\").Marker;\r\nvar TextLayer = require(\"./layer/text\").Text;\r\nvar CursorLayer = require(\"./layer/cursor\").Cursor;\r\nvar HScrollBar = require(\"./scrollbar\").HScrollBar;\r\nvar VScrollBar = require(\"./scrollbar\").VScrollBar;\r\nvar RenderLoop = require(\"./renderloop\").RenderLoop;\r\nvar FontMetrics = require(\"./layer/font_metrics\").FontMetrics;\r\nvar EventEmitter = require(\"./lib/event_emitter\").EventEmitter;\r\n//var editorCss = require(\"./requirejs/text!./css/editor.css\"); // \r\nvar editorCss = require(\"./css/editor.css\");   // modified by lwf\r\n\r\nvar useragent = require(\"./lib/useragent\");\r\nvar HIDE_TEXTAREA = useragent.isIE;\r\n\r\ndom.importCssString(editorCss, \"ace_editor.css\");\r\n\r\n/**\r\n * The class that is responsible for drawing everything you see on the screen!\r\n * @related editor.renderer \r\n * @class VirtualRenderer\r\n **/\r\n\r\n/**\r\n * Constructs a new `VirtualRenderer` within the `container` specified, applying the given `theme`.\r\n * @param {DOMElement} container The root element of the editor\r\n * @param {String} theme The starting theme\r\n *\r\n * @constructor\r\n **/\r\n\r\nvar VirtualRenderer = function(container, theme) {\r\n    var _self = this;\r\n\r\n    this.container = container || dom.createElement(\"div\");\r\n\r\n    dom.addCssClass(this.container, \"ace_editor\");\r\n    if (dom.HI_DPI) dom.addCssClass(this.container, \"ace_hidpi\");\r\n\r\n    this.setTheme(theme);\r\n\r\n    this.$gutter = dom.createElement(\"div\");\r\n    this.$gutter.className = \"ace_gutter\";\r\n    this.container.appendChild(this.$gutter);\r\n    this.$gutter.setAttribute(\"aria-hidden\", true);\r\n\r\n    this.scroller = dom.createElement(\"div\");\r\n    this.scroller.className = \"ace_scroller\";\r\n    \r\n    this.container.appendChild(this.scroller);\r\n\r\n    this.content = dom.createElement(\"div\");\r\n    this.content.className = \"ace_content\";\r\n    this.scroller.appendChild(this.content);\r\n\r\n    this.$gutterLayer = new GutterLayer(this.$gutter);\r\n    this.$gutterLayer.on(\"changeGutterWidth\", this.onGutterResize.bind(this));\r\n\r\n    this.$markerBack = new MarkerLayer(this.content);\r\n\r\n    var textLayer = this.$textLayer = new TextLayer(this.content);\r\n    this.canvas = textLayer.element;\r\n\r\n    this.$markerFront = new MarkerLayer(this.content);\r\n\r\n    this.$cursorLayer = new CursorLayer(this.content);\r\n\r\n    // Indicates whether the horizontal scrollbar is visible\r\n    this.$horizScroll = false;\r\n    this.$vScroll = false;\r\n\r\n    this.scrollBar = \r\n    this.scrollBarV = new VScrollBar(this.container, this);\r\n    this.scrollBarH = new HScrollBar(this.container, this);\r\n    this.scrollBarV.addEventListener(\"scroll\", function(e) {\r\n        if (!_self.$scrollAnimation)\r\n            _self.session.setScrollTop(e.data - _self.scrollMargin.top);\r\n    });\r\n    this.scrollBarH.addEventListener(\"scroll\", function(e) {\r\n        if (!_self.$scrollAnimation)\r\n            _self.session.setScrollLeft(e.data - _self.scrollMargin.left);\r\n    });\r\n\r\n    this.scrollTop = 0;\r\n    this.scrollLeft = 0;\r\n\r\n    this.cursorPos = {\r\n        row : 0,\r\n        column : 0\r\n    };\r\n\r\n    this.$fontMetrics = new FontMetrics(this.container);\r\n    this.$textLayer.$setFontMetrics(this.$fontMetrics);\r\n    this.$textLayer.addEventListener(\"changeCharacterSize\", function(e) {\r\n        _self.updateCharacterSize();\r\n        _self.onResize(true, _self.gutterWidth, _self.$size.width, _self.$size.height);\r\n        _self._signal(\"changeCharacterSize\", e);\r\n    });\r\n\r\n    this.$size = {\r\n        width: 0,\r\n        height: 0,\r\n        scrollerHeight: 0,\r\n        scrollerWidth: 0,\r\n        $dirty: true\r\n    };\r\n\r\n    this.layerConfig = {\r\n        width : 1,\r\n        padding : 0,\r\n        firstRow : 0,\r\n        firstRowScreen: 0,\r\n        lastRow : 0,\r\n        lineHeight : 0,\r\n        characterWidth : 0,\r\n        minHeight : 1,\r\n        maxHeight : 1,\r\n        offset : 0,\r\n        height : 1,\r\n        gutterOffset: 1\r\n    };\r\n    \r\n    this.scrollMargin = {\r\n        left: 0,\r\n        right: 0,\r\n        top: 0,\r\n        bottom: 0,\r\n        v: 0,\r\n        h: 0\r\n    };\r\n    \r\n    this.margin = {\r\n        left: 0,\r\n        right: 0,\r\n        top: 0,\r\n        bottom: 0,\r\n        v: 0,\r\n        h: 0\r\n    };\r\n    \r\n    this.$keepTextAreaAtCursor = !useragent.isIOS;\r\n\r\n    this.$loop = new RenderLoop(\r\n        this.$renderChanges.bind(this),\r\n        this.container.ownerDocument.defaultView\r\n    );\r\n    this.$loop.schedule(this.CHANGE_FULL);\r\n\r\n    this.updateCharacterSize();\r\n    this.setPadding(4);\r\n    config.resetOptions(this);\r\n    config._emit(\"renderer\", this);\r\n};\r\n\r\n(function() {\r\n\r\n    this.CHANGE_CURSOR = 1;\r\n    this.CHANGE_MARKER = 2;\r\n    this.CHANGE_GUTTER = 4;\r\n    this.CHANGE_SCROLL = 8;\r\n    this.CHANGE_LINES = 16;\r\n    this.CHANGE_TEXT = 32;\r\n    this.CHANGE_SIZE = 64;\r\n    this.CHANGE_MARKER_BACK = 128;\r\n    this.CHANGE_MARKER_FRONT = 256;\r\n    this.CHANGE_FULL = 512;\r\n    this.CHANGE_H_SCROLL = 1024;\r\n\r\n    // this.$logChanges = function(changes) {\r\n    //     var a = \"\"\r\n    //     if (changes & this.CHANGE_CURSOR) a += \" cursor\";\r\n    //     if (changes & this.CHANGE_MARKER) a += \" marker\";\r\n    //     if (changes & this.CHANGE_GUTTER) a += \" gutter\";\r\n    //     if (changes & this.CHANGE_SCROLL) a += \" scroll\";\r\n    //     if (changes & this.CHANGE_LINES) a += \" lines\";\r\n    //     if (changes & this.CHANGE_TEXT) a += \" text\";\r\n    //     if (changes & this.CHANGE_SIZE) a += \" size\";\r\n    //     if (changes & this.CHANGE_MARKER_BACK) a += \" marker_back\";\r\n    //     if (changes & this.CHANGE_MARKER_FRONT) a += \" marker_front\";\r\n    //     if (changes & this.CHANGE_FULL) a += \" full\";\r\n    //     if (changes & this.CHANGE_H_SCROLL) a += \" h_scroll\";\r\n    //     console.log(a.trim())\r\n    // };\r\n\r\n    oop.implement(this, EventEmitter);\r\n\r\n    this.updateCharacterSize = function() {\r\n        if (this.$textLayer.allowBoldFonts != this.$allowBoldFonts) {\r\n            this.$allowBoldFonts = this.$textLayer.allowBoldFonts;\r\n            this.setStyle(\"ace_nobold\", !this.$allowBoldFonts);\r\n        }\r\n\r\n        this.layerConfig.characterWidth =\r\n        this.characterWidth = this.$textLayer.getCharacterWidth();\r\n        this.layerConfig.lineHeight =\r\n        this.lineHeight = this.$textLayer.getLineHeight();\r\n        this.$updatePrintMargin();\r\n    };\r\n\r\n    /**\r\n     *\r\n     * Associates the renderer with an [[EditSession `EditSession`]].\r\n     **/\r\n    this.setSession = function(session) {\r\n        if (this.session)\r\n            this.session.doc.off(\"changeNewLineMode\", this.onChangeNewLineMode);\r\n            \r\n        this.session = session;\r\n        if (session && this.scrollMargin.top && session.getScrollTop() <= 0)\r\n            session.setScrollTop(-this.scrollMargin.top);\r\n\r\n        this.$cursorLayer.setSession(session);\r\n        this.$markerBack.setSession(session);\r\n        this.$markerFront.setSession(session);\r\n        this.$gutterLayer.setSession(session);\r\n        this.$textLayer.setSession(session);\r\n        if (!session)\r\n            return;\r\n        \r\n        this.$loop.schedule(this.CHANGE_FULL);\r\n        this.session.$setFontMetrics(this.$fontMetrics);\r\n        this.scrollBarH.scrollLeft = this.scrollBarV.scrollTop = null;\r\n        \r\n        this.onChangeNewLineMode = this.onChangeNewLineMode.bind(this);\r\n        this.onChangeNewLineMode();\r\n        this.session.doc.on(\"changeNewLineMode\", this.onChangeNewLineMode);\r\n    };\r\n\r\n    /**\r\n     * Triggers a partial update of the text, from the range given by the two parameters.\r\n     * @param {Number} firstRow The first row to update\r\n     * @param {Number} lastRow The last row to update\r\n     *\r\n     **/\r\n    this.updateLines = function(firstRow, lastRow, force) {\r\n        if (lastRow === undefined)\r\n            lastRow = Infinity;\r\n\r\n        if (!this.$changedLines) {\r\n            this.$changedLines = {\r\n                firstRow: firstRow,\r\n                lastRow: lastRow\r\n            };\r\n        }\r\n        else {\r\n            if (this.$changedLines.firstRow > firstRow)\r\n                this.$changedLines.firstRow = firstRow;\r\n\r\n            if (this.$changedLines.lastRow < lastRow)\r\n                this.$changedLines.lastRow = lastRow;\r\n        }\r\n\r\n        // If the change happened offscreen above us then it's possible\r\n        // that a new line wrap will affect the position of the lines on our\r\n        // screen so they need redrawn.\r\n        // TODO: better solution is to not change scroll position when text is changed outside of visible area\r\n        if (this.$changedLines.lastRow < this.layerConfig.firstRow) {\r\n            if (force)\r\n                this.$changedLines.lastRow = this.layerConfig.lastRow;\r\n            else\r\n                return;\r\n        }\r\n        if (this.$changedLines.firstRow > this.layerConfig.lastRow)\r\n            return;\r\n        this.$loop.schedule(this.CHANGE_LINES);\r\n    };\r\n\r\n    this.onChangeNewLineMode = function() {\r\n        this.$loop.schedule(this.CHANGE_TEXT);\r\n        this.$textLayer.$updateEolChar();\r\n        this.session.$bidiHandler.setEolChar(this.$textLayer.EOL_CHAR);\r\n    };\r\n    \r\n    this.onChangeTabSize = function() {\r\n        this.$loop.schedule(this.CHANGE_TEXT | this.CHANGE_MARKER);\r\n        this.$textLayer.onChangeTabSize();\r\n    };\r\n\r\n    /**\r\n     * Triggers a full update of the text, for all the rows.\r\n     **/\r\n    this.updateText = function() {\r\n        this.$loop.schedule(this.CHANGE_TEXT);\r\n    };\r\n\r\n    /**\r\n     * Triggers a full update of all the layers, for all the rows.\r\n     * @param {Boolean} force If `true`, forces the changes through\r\n     *\r\n     **/\r\n    this.updateFull = function(force) {\r\n        if (force)\r\n            this.$renderChanges(this.CHANGE_FULL, true);\r\n        else\r\n            this.$loop.schedule(this.CHANGE_FULL);\r\n    };\r\n\r\n    /**\r\n     * Updates the font size.\r\n     **/\r\n    this.updateFontSize = function() {\r\n        this.$textLayer.checkForSizeChanges();\r\n    };\r\n\r\n    this.$changes = 0;\r\n    this.$updateSizeAsync = function() {\r\n        if (this.$loop.pending)\r\n            this.$size.$dirty = true;\r\n        else\r\n            this.onResize();\r\n    };\r\n    /**\r\n     * [Triggers a resize of the editor.]{: #VirtualRenderer.onResize}\r\n     * @param {Boolean} force If `true`, recomputes the size, even if the height and width haven't changed\r\n     * @param {Number} gutterWidth The width of the gutter in pixels\r\n     * @param {Number} width The width of the editor in pixels\r\n     * @param {Number} height The hiehgt of the editor, in pixels\r\n     *\r\n     **/\r\n    this.onResize = function(force, gutterWidth, width, height) {\r\n        if (this.resizing > 2)\r\n            return;\r\n        else if (this.resizing > 0)\r\n            this.resizing++;\r\n        else\r\n            this.resizing = force ? 1 : 0;\r\n        // `|| el.scrollHeight` is required for outosizing editors on ie\r\n        // where elements with clientHeight = 0 alsoe have clientWidth = 0\r\n        var el = this.container;\r\n        if (!height)\r\n            height = el.clientHeight || el.scrollHeight;\r\n        if (!width)\r\n            width = el.clientWidth || el.scrollWidth;\r\n        var changes = this.$updateCachedSize(force, gutterWidth, width, height);\r\n\r\n        \r\n        if (!this.$size.scrollerHeight || (!width && !height))\r\n            return this.resizing = 0;\r\n\r\n        if (force)\r\n            this.$gutterLayer.$padding = null;\r\n\r\n        if (force)\r\n            this.$renderChanges(changes | this.$changes, true);\r\n        else\r\n            this.$loop.schedule(changes | this.$changes);\r\n\r\n        if (this.resizing)\r\n            this.resizing = 0;\r\n        // reset cached values on scrollbars, needs to be removed when switching to non-native scrollbars\r\n        // see https://github.com/ajaxorg/ace/issues/2195\r\n        this.scrollBarV.scrollLeft = this.scrollBarV.scrollTop = null;\r\n    };\r\n    \r\n    this.$updateCachedSize = function(force, gutterWidth, width, height) {\r\n        height -= (this.$extraHeight || 0);\r\n        var changes = 0;\r\n        var size = this.$size;\r\n        var oldSize = {\r\n            width: size.width,\r\n            height: size.height,\r\n            scrollerHeight: size.scrollerHeight,\r\n            scrollerWidth: size.scrollerWidth\r\n        };\r\n        if (height && (force || size.height != height)) {\r\n            size.height = height;\r\n            changes |= this.CHANGE_SIZE;\r\n\r\n            size.scrollerHeight = size.height;\r\n            if (this.$horizScroll)\r\n                size.scrollerHeight -= this.scrollBarH.getHeight();\r\n                \r\n            // this.scrollBarV.setHeight(size.scrollerHeight);\r\n            this.scrollBarV.element.style.bottom = this.scrollBarH.getHeight() + \"px\";\r\n\r\n            changes = changes | this.CHANGE_SCROLL;\r\n        }\r\n\r\n        if (width && (force || size.width != width)) {\r\n            changes |= this.CHANGE_SIZE;\r\n            size.width = width;\r\n            \r\n            if (gutterWidth == null)\r\n                gutterWidth = this.$showGutter ? this.$gutter.offsetWidth : 0;\r\n            \r\n            this.gutterWidth = gutterWidth;\r\n            \r\n            dom.setStyle(this.scrollBarH.element.style, \"left\", gutterWidth + \"px\");\r\n            dom.setStyle(this.scroller.style, \"left\", gutterWidth + this.margin.left + \"px\");\r\n            size.scrollerWidth = Math.max(0, width - gutterWidth - this.scrollBarV.getWidth() - this.margin.h);\r\n            dom.setStyle(this.$gutter.style, \"left\", this.margin.left + \"px\");\r\n            \r\n            var right = this.scrollBarV.getWidth() + \"px\";\r\n            dom.setStyle(this.scrollBarH.element.style, \"right\", right);\r\n            dom.setStyle(this.scroller.style, \"right\", right);\r\n            dom.setStyle(this.scroller.style, \"bottom\", this.scrollBarH.getHeight());\r\n                \r\n            // this.scrollBarH.element.style.setWidth(size.scrollerWidth);\r\n\r\n            if (this.session && this.session.getUseWrapMode() && this.adjustWrapLimit() || force) {\r\n                changes |= this.CHANGE_FULL;\r\n            }\r\n        }\r\n        \r\n        size.$dirty = !width || !height;\r\n\r\n        if (changes)\r\n            this._signal(\"resize\", oldSize);\r\n\r\n        return changes;\r\n    };\r\n\r\n    this.onGutterResize = function(width) {\r\n        var gutterWidth = this.$showGutter ? width : 0;\r\n        if (gutterWidth != this.gutterWidth)\r\n            this.$changes |= this.$updateCachedSize(true, gutterWidth, this.$size.width, this.$size.height);\r\n\r\n        if (this.session.getUseWrapMode() && this.adjustWrapLimit()) {\r\n            this.$loop.schedule(this.CHANGE_FULL);\r\n        } else if (this.$size.$dirty) {\r\n            this.$loop.schedule(this.CHANGE_FULL);\r\n        } else {\r\n            this.$computeLayerConfig();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Adjusts the wrap limit, which is the number of characters that can fit within the width of the edit area on screen.\r\n     **/\r\n    this.adjustWrapLimit = function() {\r\n        var availableWidth = this.$size.scrollerWidth - this.$padding * 2;\r\n        var limit = Math.floor(availableWidth / this.characterWidth);\r\n        return this.session.adjustWrapLimit(limit, this.$showPrintMargin && this.$printMarginColumn);\r\n    };\r\n\r\n    /**\r\n     * Identifies whether you want to have an animated scroll or not.\r\n     * @param {Boolean} shouldAnimate Set to `true` to show animated scrolls\r\n     *\r\n     **/\r\n    this.setAnimatedScroll = function(shouldAnimate){\r\n        this.setOption(\"animatedScroll\", shouldAnimate);\r\n    };\r\n\r\n    /**\r\n     * Returns whether an animated scroll happens or not.\r\n     * @returns {Boolean}\r\n     **/\r\n    this.getAnimatedScroll = function() {\r\n        return this.$animatedScroll;\r\n    };\r\n\r\n    /**\r\n     * Identifies whether you want to show invisible characters or not.\r\n     * @param {Boolean} showInvisibles Set to `true` to show invisibles\r\n     *\r\n     **/\r\n    this.setShowInvisibles = function(showInvisibles) {\r\n        this.setOption(\"showInvisibles\", showInvisibles);\r\n        this.session.$bidiHandler.setShowInvisibles(showInvisibles);\r\n    };\r\n\r\n    /**\r\n     * Returns whether invisible characters are being shown or not.\r\n     * @returns {Boolean}\r\n     **/\r\n    this.getShowInvisibles = function() {\r\n        return this.getOption(\"showInvisibles\");\r\n    };\r\n    this.getDisplayIndentGuides = function() {\r\n        return this.getOption(\"displayIndentGuides\");\r\n    };\r\n\r\n    this.setDisplayIndentGuides = function(display) {\r\n        this.setOption(\"displayIndentGuides\", display);\r\n    };\r\n\r\n    /**\r\n     * Identifies whether you want to show the print margin or not.\r\n     * @param {Boolean} showPrintMargin Set to `true` to show the print margin\r\n     *\r\n     **/\r\n    this.setShowPrintMargin = function(showPrintMargin) {\r\n        this.setOption(\"showPrintMargin\", showPrintMargin);\r\n    };\r\n\r\n    /**\r\n     * Returns whether the print margin is being shown or not.\r\n     * @returns {Boolean}\r\n     **/\r\n    this.getShowPrintMargin = function() {\r\n        return this.getOption(\"showPrintMargin\");\r\n    };\r\n    /**\r\n     * Identifies whether you want to show the print margin column or not.\r\n     * @param {Boolean} showPrintMargin Set to `true` to show the print margin column\r\n     *\r\n     **/\r\n    this.setPrintMarginColumn = function(showPrintMargin) {\r\n        this.setOption(\"printMarginColumn\", showPrintMargin);\r\n    };\r\n\r\n    /**\r\n     * Returns whether the print margin column is being shown or not.\r\n     * @returns {Boolean}\r\n     **/\r\n    this.getPrintMarginColumn = function() {\r\n        return this.getOption(\"printMarginColumn\");\r\n    };\r\n\r\n    /**\r\n     * Returns `true` if the gutter is being shown.\r\n     * @returns {Boolean}\r\n     **/\r\n    this.getShowGutter = function(){\r\n        return this.getOption(\"showGutter\");\r\n    };\r\n\r\n    /**\r\n     * Identifies whether you want to show the gutter or not.\r\n     * @param {Boolean} show Set to `true` to show the gutter\r\n     *\r\n     **/\r\n    this.setShowGutter = function(show){\r\n        return this.setOption(\"showGutter\", show);\r\n    };\r\n\r\n    this.getFadeFoldWidgets = function(){\r\n        return this.getOption(\"fadeFoldWidgets\");\r\n    };\r\n\r\n    this.setFadeFoldWidgets = function(show) {\r\n        this.setOption(\"fadeFoldWidgets\", show);\r\n    };\r\n\r\n    this.setHighlightGutterLine = function(shouldHighlight) {\r\n        this.setOption(\"highlightGutterLine\", shouldHighlight);\r\n    };\r\n\r\n    this.getHighlightGutterLine = function() {\r\n        return this.getOption(\"highlightGutterLine\");\r\n    };\r\n\r\n    this.$updatePrintMargin = function() {\r\n        if (!this.$showPrintMargin && !this.$printMarginEl)\r\n            return;\r\n\r\n        if (!this.$printMarginEl) {\r\n            var containerEl = dom.createElement(\"div\");\r\n            containerEl.className = \"ace_layer ace_print-margin-layer\";\r\n            this.$printMarginEl = dom.createElement(\"div\");\r\n            this.$printMarginEl.className = \"ace_print-margin\";\r\n            containerEl.appendChild(this.$printMarginEl);\r\n            this.content.insertBefore(containerEl, this.content.firstChild);\r\n        }\r\n\r\n        var style = this.$printMarginEl.style;\r\n        style.left = Math.round(this.characterWidth * this.$printMarginColumn + this.$padding) + \"px\";\r\n        style.visibility = this.$showPrintMargin ? \"visible\" : \"hidden\";\r\n        \r\n        if (this.session && this.session.$wrap == -1)\r\n            this.adjustWrapLimit();\r\n    };\r\n\r\n    /**\r\n     *\r\n     * Returns the root element containing this renderer.\r\n     * @returns {DOMElement}\r\n     **/\r\n    this.getContainerElement = function() {\r\n        return this.container;\r\n    };\r\n\r\n    /**\r\n     *\r\n     * Returns the element that the mouse events are attached to\r\n     * @returns {DOMElement}\r\n     **/\r\n    this.getMouseEventTarget = function() {\r\n        return this.scroller;\r\n    };\r\n\r\n    /**\r\n     *\r\n     * Returns the element to which the hidden text area is added.\r\n     * @returns {DOMElement}\r\n     **/\r\n    this.getTextAreaContainer = function() {\r\n        return this.container;\r\n    };\r\n\r\n    // move text input over the cursor\r\n    // this is required for IME\r\n    this.$moveTextAreaToCursor = function() {\r\n        var style = this.textarea.style;\r\n        if (!this.$keepTextAreaAtCursor) {\r\n            dom.translate(this.textarea, -100, 0);\r\n            return;\r\n        }\r\n        var pixelPos = this.$cursorLayer.$pixelPos;\r\n        if (!pixelPos)\r\n            return;\r\n        var composition = this.$composition;\r\n        if (composition && composition.markerRange)\r\n            pixelPos = this.$cursorLayer.getPixelPosition(composition.markerRange.start, true);\r\n        \r\n        var config = this.layerConfig;\r\n        var posTop = pixelPos.top;\r\n        var posLeft = pixelPos.left;\r\n        posTop -= config.offset;\r\n\r\n        var h = composition && composition.useTextareaForIME ? this.lineHeight : HIDE_TEXTAREA ? 0 : 1;\r\n        if (posTop < 0 || posTop > config.height - h) {\r\n            dom.translate(this.textarea, 0, 0);\r\n            return;\r\n        }\r\n\r\n        var w = 1;\r\n        if (!composition) {\r\n            posTop += this.lineHeight;\r\n        }\r\n        else {\r\n            if (composition.useTextareaForIME) {\r\n                var val = this.textarea.value;\r\n                w = this.characterWidth * (this.session.$getStringScreenWidth(val)[0]);\r\n                h += 2;\r\n            }\r\n            else {\r\n                posTop += this.lineHeight + 2;\r\n            }\r\n        }\r\n        \r\n        posLeft -= this.scrollLeft;\r\n        if (posLeft > this.$size.scrollerWidth - w)\r\n            posLeft = this.$size.scrollerWidth - w;\r\n\r\n        posLeft += this.gutterWidth + this.margin.left;\r\n\r\n        dom.setStyle(style, \"height\", h + \"px\");\r\n        dom.setStyle(style, \"width\", w + \"px\");\r\n        dom.translate(this.textarea, Math.min(posLeft, this.$size.scrollerWidth - w), Math.min(posTop, this.$size.height - h));\r\n    };\r\n\r\n    /**\r\n     * [Returns the index of the first visible row.]{: #VirtualRenderer.getFirstVisibleRow}\r\n     * @returns {Number}\r\n     **/\r\n    this.getFirstVisibleRow = function() {\r\n        return this.layerConfig.firstRow;\r\n    };\r\n\r\n    /**\r\n     *\r\n     * Returns the index of the first fully visible row. \"Fully\" here means that the characters in the row are not truncated; that the top and the bottom of the row are on the screen.\r\n     * @returns {Number}\r\n     **/\r\n    this.getFirstFullyVisibleRow = function() {\r\n        return this.layerConfig.firstRow + (this.layerConfig.offset === 0 ? 0 : 1);\r\n    };\r\n\r\n    /**\r\n     *\r\n     * Returns the index of the last fully visible row. \"Fully\" here means that the characters in the row are not truncated; that the top and the bottom of the row are on the screen.\r\n     * @returns {Number}\r\n     **/\r\n    this.getLastFullyVisibleRow = function() {\r\n        var config = this.layerConfig;\r\n        var lastRow = config.lastRow;\r\n        var top = this.session.documentToScreenRow(lastRow, 0) * config.lineHeight;\r\n        if (top - this.session.getScrollTop() > config.height - config.lineHeight)\r\n            return lastRow - 1;\r\n        return lastRow;\r\n    };\r\n\r\n    /**\r\n     *\r\n     * [Returns the index of the last visible row.]{: #VirtualRenderer.getLastVisibleRow}\r\n     * @returns {Number}\r\n     **/\r\n    this.getLastVisibleRow = function() {\r\n        return this.layerConfig.lastRow;\r\n    };\r\n\r\n    this.$padding = null;\r\n\r\n    /**\r\n     * Sets the padding for all the layers.\r\n     * @param {Number} padding A new padding value (in pixels)\r\n     *\r\n     **/\r\n    this.setPadding = function(padding) {\r\n        this.$padding = padding;\r\n        this.$textLayer.setPadding(padding);\r\n        this.$cursorLayer.setPadding(padding);\r\n        this.$markerFront.setPadding(padding);\r\n        this.$markerBack.setPadding(padding);\r\n        this.$loop.schedule(this.CHANGE_FULL);\r\n        this.$updatePrintMargin();\r\n    };\r\n    \r\n    this.setScrollMargin = function(top, bottom, left, right) {\r\n        var sm = this.scrollMargin;\r\n        sm.top = top|0;\r\n        sm.bottom = bottom|0;\r\n        sm.right = right|0;\r\n        sm.left = left|0;\r\n        sm.v = sm.top + sm.bottom;\r\n        sm.h = sm.left + sm.right;\r\n        if (sm.top && this.scrollTop <= 0 && this.session)\r\n            this.session.setScrollTop(-sm.top);\r\n        this.updateFull();\r\n    };\r\n    \r\n    this.setMargin = function(top, bottom, left, right) {\r\n        var sm = this.margin;\r\n        sm.top = top|0;\r\n        sm.bottom = bottom|0;\r\n        sm.right = right|0;\r\n        sm.left = left|0;\r\n        sm.v = sm.top + sm.bottom;\r\n        sm.h = sm.left + sm.right;\r\n        this.$updateCachedSize(true, this.gutterWidth, this.$size.width, this.$size.height);\r\n        this.updateFull();\r\n    };\r\n\r\n    /**\r\n     * Returns whether the horizontal scrollbar is set to be always visible.\r\n     * @returns {Boolean}\r\n     **/\r\n    this.getHScrollBarAlwaysVisible = function() {\r\n        return this.$hScrollBarAlwaysVisible;\r\n    };\r\n\r\n    /**\r\n     * Identifies whether you want to show the horizontal scrollbar or not.\r\n     * @param {Boolean} alwaysVisible Set to `true` to make the horizontal scroll bar visible\r\n     **/\r\n    this.setHScrollBarAlwaysVisible = function(alwaysVisible) {\r\n        this.setOption(\"hScrollBarAlwaysVisible\", alwaysVisible);\r\n    };\r\n    /**\r\n     * Returns whether the horizontal scrollbar is set to be always visible.\r\n     * @returns {Boolean}\r\n     **/\r\n    this.getVScrollBarAlwaysVisible = function() {\r\n        return this.$vScrollBarAlwaysVisible;\r\n    };\r\n\r\n    /**\r\n     * Identifies whether you want to show the horizontal scrollbar or not.\r\n     * @param {Boolean} alwaysVisible Set to `true` to make the horizontal scroll bar visible\r\n     **/\r\n    this.setVScrollBarAlwaysVisible = function(alwaysVisible) {\r\n        this.setOption(\"vScrollBarAlwaysVisible\", alwaysVisible);\r\n    };\r\n\r\n    this.$updateScrollBarV = function() {\r\n        var scrollHeight = this.layerConfig.maxHeight;\r\n        var scrollerHeight = this.$size.scrollerHeight;\r\n        if (!this.$maxLines && this.$scrollPastEnd) {\r\n            scrollHeight -= (scrollerHeight - this.lineHeight) * this.$scrollPastEnd;\r\n            if (this.scrollTop > scrollHeight - scrollerHeight) {\r\n                scrollHeight = this.scrollTop + scrollerHeight;\r\n                this.scrollBarV.scrollTop = null;\r\n            }\r\n        }\r\n        this.scrollBarV.setScrollHeight(scrollHeight + this.scrollMargin.v);\r\n        this.scrollBarV.setScrollTop(this.scrollTop + this.scrollMargin.top);\r\n    };\r\n    this.$updateScrollBarH = function() {\r\n        this.scrollBarH.setScrollWidth(this.layerConfig.width + 2 * this.$padding + this.scrollMargin.h);\r\n        this.scrollBarH.setScrollLeft(this.scrollLeft + this.scrollMargin.left);\r\n    };\r\n    \r\n    this.$frozen = false;\r\n    this.freeze = function() {\r\n        this.$frozen = true;\r\n    };\r\n    \r\n    this.unfreeze = function() {\r\n        this.$frozen = false;\r\n    };\r\n\r\n    this.$renderChanges = function(changes, force) {\r\n        if (this.$changes) {\r\n            changes |= this.$changes;\r\n            this.$changes = 0;\r\n        }\r\n        if ((!this.session || !this.container.offsetWidth || this.$frozen) || (!changes && !force)) {\r\n            this.$changes |= changes;\r\n            return; \r\n        } \r\n        if (this.$size.$dirty) {\r\n            this.$changes |= changes;\r\n            return this.onResize(true);\r\n        }\r\n        if (!this.lineHeight) {\r\n            this.$textLayer.checkForSizeChanges();\r\n        }\r\n        // this.$logChanges(changes);\r\n        \r\n        this._signal(\"beforeRender\");\r\n        \r\n        if (this.session && this.session.$bidiHandler)\r\n            this.session.$bidiHandler.updateCharacterWidths(this.$fontMetrics);\r\n\r\n        var config = this.layerConfig;\r\n        // text, scrolling and resize changes can cause the view port size to change\r\n        if (changes & this.CHANGE_FULL ||\r\n            changes & this.CHANGE_SIZE ||\r\n            changes & this.CHANGE_TEXT ||\r\n            changes & this.CHANGE_LINES ||\r\n            changes & this.CHANGE_SCROLL ||\r\n            changes & this.CHANGE_H_SCROLL\r\n        ) {\r\n            changes |= this.$computeLayerConfig() | this.$loop.clear();\r\n            // If a change is made offscreen and wrapMode is on, then the onscreen\r\n            // lines may have been pushed down. If so, the first screen row will not\r\n            // have changed, but the first actual row will. In that case, adjust \r\n            // scrollTop so that the cursor and onscreen content stays in the same place.\r\n            // TODO: find a better way to handle this, that works non wrapped case and doesn't compute layerConfig twice\r\n            if (config.firstRow != this.layerConfig.firstRow && config.firstRowScreen == this.layerConfig.firstRowScreen) {\r\n                var st = this.scrollTop + (config.firstRow - this.layerConfig.firstRow) * this.lineHeight;\r\n                if (st > 0) {\r\n                    // this check is needed as a workaround for the documentToScreenRow returning -1 if document.length == 0\r\n                    this.scrollTop = st;\r\n                    changes = changes | this.CHANGE_SCROLL;\r\n                    changes |= this.$computeLayerConfig() | this.$loop.clear();\r\n                }\r\n            }\r\n            config = this.layerConfig;\r\n            // update scrollbar first to not lose scroll position when gutter calls resize\r\n            this.$updateScrollBarV();\r\n            if (changes & this.CHANGE_H_SCROLL)\r\n                this.$updateScrollBarH();\r\n            \r\n            dom.translate(this.content, -this.scrollLeft, -config.offset);\r\n            \r\n            var width = config.width + 2 * this.$padding + \"px\";\r\n            var height = config.minHeight + \"px\";\r\n            \r\n            dom.setStyle(this.content.style, \"width\", width);\r\n            dom.setStyle(this.content.style, \"height\", height);\r\n        }\r\n        \r\n        // horizontal scrolling\r\n        if (changes & this.CHANGE_H_SCROLL) {\r\n            dom.translate(this.content, -this.scrollLeft, -config.offset);\r\n            this.scroller.className = this.scrollLeft <= 0 ? \"ace_scroller\" : \"ace_scroller ace_scroll-left\";\r\n        }\r\n\r\n        // full\r\n        if (changes & this.CHANGE_FULL) {\r\n            this.$textLayer.update(config);\r\n            if (this.$showGutter)\r\n                this.$gutterLayer.update(config);\r\n            this.$markerBack.update(config);\r\n            this.$markerFront.update(config);\r\n            this.$cursorLayer.update(config);\r\n            this.$moveTextAreaToCursor();\r\n            this._signal(\"afterRender\");\r\n            return;\r\n        }\r\n\r\n        // scrolling\r\n        if (changes & this.CHANGE_SCROLL) {\r\n            if (changes & this.CHANGE_TEXT || changes & this.CHANGE_LINES)\r\n                this.$textLayer.update(config);\r\n            else\r\n                this.$textLayer.scrollLines(config);\r\n\r\n            if (this.$showGutter) {\r\n                if (changes & this.CHANGE_GUTTER || changes & this.CHANGE_LINES)\r\n                    this.$gutterLayer.update(config);\r\n                else\r\n                    this.$gutterLayer.scrollLines(config);\r\n            }\r\n            this.$markerBack.update(config);\r\n            this.$markerFront.update(config);\r\n            this.$cursorLayer.update(config);\r\n            this.$moveTextAreaToCursor();\r\n            this._signal(\"afterRender\");\r\n            return;\r\n        }\r\n\r\n        if (changes & this.CHANGE_TEXT) {\r\n            this.$textLayer.update(config);\r\n            if (this.$showGutter)\r\n                this.$gutterLayer.update(config);\r\n        }\r\n        else if (changes & this.CHANGE_LINES) {\r\n            if (this.$updateLines() || (changes & this.CHANGE_GUTTER) && this.$showGutter)\r\n                this.$gutterLayer.update(config);\r\n        }\r\n        else if (changes & this.CHANGE_TEXT || changes & this.CHANGE_GUTTER) {\r\n            if (this.$showGutter)\r\n                this.$gutterLayer.update(config);\r\n        }\r\n        else if (changes & this.CHANGE_CURSOR) {\r\n            if (this.$highlightGutterLine)\r\n                this.$gutterLayer.updateLineHighlight(config);\r\n        }\r\n\r\n        if (changes & this.CHANGE_CURSOR) {\r\n            this.$cursorLayer.update(config);\r\n            this.$moveTextAreaToCursor();\r\n        }\r\n\r\n        if (changes & (this.CHANGE_MARKER | this.CHANGE_MARKER_FRONT)) {\r\n            this.$markerFront.update(config);\r\n        }\r\n\r\n        if (changes & (this.CHANGE_MARKER | this.CHANGE_MARKER_BACK)) {\r\n            this.$markerBack.update(config);\r\n        }\r\n\r\n        this._signal(\"afterRender\");\r\n    };\r\n\r\n    \r\n    this.$autosize = function() {\r\n        var height = this.session.getScreenLength() * this.lineHeight;\r\n        var maxHeight = this.$maxLines * this.lineHeight;\r\n        var desiredHeight = Math.min(maxHeight, \r\n            Math.max((this.$minLines || 1) * this.lineHeight, height)\r\n        ) + this.scrollMargin.v + (this.$extraHeight || 0);\r\n        if (this.$horizScroll)\r\n            desiredHeight += this.scrollBarH.getHeight();\r\n        if (this.$maxPixelHeight && desiredHeight > this.$maxPixelHeight)\r\n            desiredHeight = this.$maxPixelHeight;\r\n        \r\n        var hideScrollbars = desiredHeight <= 2 * this.lineHeight;\r\n        var vScroll = !hideScrollbars && height > maxHeight;\r\n        \r\n        if (desiredHeight != this.desiredHeight ||\r\n            this.$size.height != this.desiredHeight || vScroll != this.$vScroll) {\r\n            if (vScroll != this.$vScroll) {\r\n                this.$vScroll = vScroll;\r\n                this.scrollBarV.setVisible(vScroll);\r\n            }\r\n            \r\n            var w = this.container.clientWidth;\r\n            this.container.style.height = desiredHeight + \"px\";\r\n            this.$updateCachedSize(true, this.$gutterWidth, w, desiredHeight);\r\n            // this.$loop.changes = 0;\r\n            this.desiredHeight = desiredHeight;\r\n            \r\n            this._signal(\"autosize\");\r\n        }\r\n    };\r\n    \r\n    this.$computeLayerConfig = function() {\r\n        var session = this.session;\r\n        var size = this.$size;\r\n        \r\n        var hideScrollbars = size.height <= 2 * this.lineHeight;\r\n        var screenLines = this.session.getScreenLength();\r\n        var maxHeight = screenLines * this.lineHeight;\r\n\r\n        var longestLine = this.$getLongestLine();\r\n        \r\n        var horizScroll = !hideScrollbars && (this.$hScrollBarAlwaysVisible ||\r\n            size.scrollerWidth - longestLine - 2 * this.$padding < 0);\r\n\r\n        var hScrollChanged = this.$horizScroll !== horizScroll;\r\n        if (hScrollChanged) {\r\n            this.$horizScroll = horizScroll;\r\n            this.scrollBarH.setVisible(horizScroll);\r\n        }\r\n        var vScrollBefore = this.$vScroll; // autosize can change vscroll value in which case we need to update longestLine\r\n        // autoresize only after updating hscroll to include scrollbar height in desired height\r\n        if (this.$maxLines && this.lineHeight > 1)\r\n            this.$autosize();\r\n\r\n        var minHeight = size.scrollerHeight + this.lineHeight;\r\n        \r\n        var scrollPastEnd = !this.$maxLines && this.$scrollPastEnd\r\n            ? (size.scrollerHeight - this.lineHeight) * this.$scrollPastEnd\r\n            : 0;\r\n        maxHeight += scrollPastEnd;\r\n        \r\n        var sm = this.scrollMargin;\r\n        this.session.setScrollTop(Math.max(-sm.top,\r\n            Math.min(this.scrollTop, maxHeight - size.scrollerHeight + sm.bottom)));\r\n\r\n        this.session.setScrollLeft(Math.max(-sm.left, Math.min(this.scrollLeft, \r\n            longestLine + 2 * this.$padding - size.scrollerWidth + sm.right)));\r\n        \r\n        var vScroll = !hideScrollbars && (this.$vScrollBarAlwaysVisible ||\r\n            size.scrollerHeight - maxHeight + scrollPastEnd < 0 || this.scrollTop > sm.top);\r\n        var vScrollChanged = vScrollBefore !== vScroll;\r\n        if (vScrollChanged) {\r\n            this.$vScroll = vScroll;\r\n            this.scrollBarV.setVisible(vScroll);\r\n        }\r\n\r\n        var offset = this.scrollTop % this.lineHeight;\r\n        var lineCount = Math.ceil(minHeight / this.lineHeight) - 1;\r\n        var firstRow = Math.max(0, Math.round((this.scrollTop - offset) / this.lineHeight));\r\n        var lastRow = firstRow + lineCount;\r\n\r\n        // Map lines on the screen to lines in the document.\r\n        var firstRowScreen, firstRowHeight;\r\n        var lineHeight = this.lineHeight;\r\n        firstRow = session.screenToDocumentRow(firstRow, 0);\r\n\r\n        // Check if firstRow is inside of a foldLine. If true, then use the first\r\n        // row of the foldLine.\r\n        var foldLine = session.getFoldLine(firstRow);\r\n        if (foldLine) {\r\n            firstRow = foldLine.start.row;\r\n        }\r\n\r\n        firstRowScreen = session.documentToScreenRow(firstRow, 0);\r\n        firstRowHeight = session.getRowLength(firstRow) * lineHeight;\r\n\r\n        lastRow = Math.min(session.screenToDocumentRow(lastRow, 0), session.getLength() - 1);\r\n        minHeight = size.scrollerHeight + session.getRowLength(lastRow) * lineHeight +\r\n                                                firstRowHeight;\r\n\r\n        offset = this.scrollTop - firstRowScreen * lineHeight;\r\n\r\n        var changes = 0;\r\n        if (this.layerConfig.width != longestLine || hScrollChanged) \r\n            changes = this.CHANGE_H_SCROLL;\r\n        // Horizontal scrollbar visibility may have changed, which changes\r\n        // the client height of the scroller\r\n        if (hScrollChanged || vScrollChanged) {\r\n            changes = this.$updateCachedSize(true, this.gutterWidth, size.width, size.height);\r\n            this._signal(\"scrollbarVisibilityChanged\");\r\n            if (vScrollChanged)\r\n                longestLine = this.$getLongestLine();\r\n        }\r\n        \r\n        this.layerConfig = {\r\n            width : longestLine,\r\n            padding : this.$padding,\r\n            firstRow : firstRow,\r\n            firstRowScreen: firstRowScreen,\r\n            lastRow : lastRow,\r\n            lineHeight : lineHeight,\r\n            characterWidth : this.characterWidth,\r\n            minHeight : minHeight,\r\n            maxHeight : maxHeight,\r\n            offset : offset,\r\n            gutterOffset : lineHeight ? Math.max(0, Math.ceil((offset + size.height - size.scrollerHeight) / lineHeight)) : 0,\r\n            height : this.$size.scrollerHeight\r\n        };\r\n\r\n        if (this.session.$bidiHandler)\r\n            this.session.$bidiHandler.setContentWidth(longestLine - this.$padding);\r\n        // For debugging.\r\n        // console.log(JSON.stringify(this.layerConfig));\r\n\r\n        return changes;\r\n    };\r\n\r\n    this.$updateLines = function() {\r\n        if (!this.$changedLines) return;\r\n        var firstRow = this.$changedLines.firstRow;\r\n        var lastRow = this.$changedLines.lastRow;\r\n        this.$changedLines = null;\r\n\r\n        var layerConfig = this.layerConfig;\r\n\r\n        if (firstRow > layerConfig.lastRow + 1) { return; }\r\n        if (lastRow < layerConfig.firstRow) { return; }\r\n\r\n        // if the last row is unknown -> redraw everything\r\n        if (lastRow === Infinity) {\r\n            if (this.$showGutter)\r\n                this.$gutterLayer.update(layerConfig);\r\n            this.$textLayer.update(layerConfig);\r\n            return;\r\n        }\r\n\r\n        // else update only the changed rows\r\n        this.$textLayer.updateLines(layerConfig, firstRow, lastRow);\r\n        return true;\r\n    };\r\n\r\n    this.$getLongestLine = function() {\r\n        var charCount = this.session.getScreenWidth();\r\n        if (this.showInvisibles && !this.session.$useWrapMode)\r\n            charCount += 1;\r\n            \r\n        if (this.$textLayer && charCount > this.$textLayer.MAX_LINE_LENGTH)\r\n            charCount = this.$textLayer.MAX_LINE_LENGTH + 30;\r\n\r\n        return Math.max(this.$size.scrollerWidth - 2 * this.$padding, Math.round(charCount * this.characterWidth));\r\n    };\r\n\r\n    /**\r\n     * Schedules an update to all the front markers in the document.\r\n     **/\r\n    this.updateFrontMarkers = function() {\r\n        this.$markerFront.setMarkers(this.session.getMarkers(true));\r\n        this.$loop.schedule(this.CHANGE_MARKER_FRONT);\r\n    };\r\n\r\n    /**\r\n     *\r\n     * Schedules an update to all the back markers in the document.\r\n     **/\r\n    this.updateBackMarkers = function() {\r\n        this.$markerBack.setMarkers(this.session.getMarkers());\r\n        this.$loop.schedule(this.CHANGE_MARKER_BACK);\r\n    };\r\n\r\n    /**\r\n     *\r\n     * Deprecated; (moved to [[EditSession]])\r\n     * @deprecated\r\n     **/\r\n    this.addGutterDecoration = function(row, className){\r\n        this.$gutterLayer.addGutterDecoration(row, className);\r\n    };\r\n\r\n    /**\r\n     * Deprecated; (moved to [[EditSession]])\r\n     * @deprecated\r\n     **/\r\n    this.removeGutterDecoration = function(row, className){\r\n        this.$gutterLayer.removeGutterDecoration(row, className);\r\n    };\r\n\r\n    /**\r\n     *\r\n     * Redraw breakpoints.\r\n     **/\r\n    this.updateBreakpoints = function(rows) {\r\n        this.$loop.schedule(this.CHANGE_GUTTER);\r\n    };\r\n\r\n    /**\r\n     * Sets annotations for the gutter.\r\n     * @param {Array} annotations An array containing annotations\r\n     *\r\n     **/\r\n    this.setAnnotations = function(annotations) {\r\n        this.$gutterLayer.setAnnotations(annotations);\r\n        this.$loop.schedule(this.CHANGE_GUTTER);\r\n    };\r\n\r\n    /**\r\n     *\r\n     * Updates the cursor icon.\r\n     **/\r\n    this.updateCursor = function() {\r\n        this.$loop.schedule(this.CHANGE_CURSOR);\r\n    };\r\n\r\n    /**\r\n     *\r\n     * Hides the cursor icon.\r\n     **/\r\n    this.hideCursor = function() {\r\n        this.$cursorLayer.hideCursor();\r\n    };\r\n\r\n    /**\r\n     *\r\n     * Shows the cursor icon.\r\n     **/\r\n    this.showCursor = function() {\r\n        this.$cursorLayer.showCursor();\r\n    };\r\n\r\n    this.scrollSelectionIntoView = function(anchor, lead, offset) {\r\n        // first scroll anchor into view then scroll lead into view\r\n        this.scrollCursorIntoView(anchor, offset);\r\n        this.scrollCursorIntoView(lead, offset);\r\n    };\r\n\r\n    /**\r\n     *\r\n     * Scrolls the cursor into the first visibile area of the editor\r\n     **/\r\n    this.scrollCursorIntoView = function(cursor, offset, $viewMargin) {\r\n        // the editor is not visible\r\n        if (this.$size.scrollerHeight === 0)\r\n            return;\r\n\r\n        var pos = this.$cursorLayer.getPixelPosition(cursor);\r\n\r\n        var left = pos.left;\r\n        var top = pos.top;\r\n        \r\n        var topMargin = $viewMargin && $viewMargin.top || 0;\r\n        var bottomMargin = $viewMargin && $viewMargin.bottom || 0;\r\n        \r\n        var scrollTop = this.$scrollAnimation ? this.session.getScrollTop() : this.scrollTop;\r\n        \r\n        if (scrollTop + topMargin > top) {\r\n            if (offset && scrollTop + topMargin > top + this.lineHeight)\r\n                top -= offset * this.$size.scrollerHeight;\r\n            if (top === 0)\r\n                top = -this.scrollMargin.top;\r\n            this.session.setScrollTop(top);\r\n        } else if (scrollTop + this.$size.scrollerHeight - bottomMargin < top + this.lineHeight) {\r\n            if (offset && scrollTop + this.$size.scrollerHeight - bottomMargin < top -  this.lineHeight)\r\n                top += offset * this.$size.scrollerHeight;\r\n            this.session.setScrollTop(top + this.lineHeight + bottomMargin - this.$size.scrollerHeight);\r\n        }\r\n\r\n        var scrollLeft = this.scrollLeft;\r\n\r\n        if (scrollLeft > left) {\r\n            if (left < this.$padding + 2 * this.layerConfig.characterWidth)\r\n                left = -this.scrollMargin.left;\r\n            this.session.setScrollLeft(left);\r\n        } else if (scrollLeft + this.$size.scrollerWidth < left + this.characterWidth) {\r\n            this.session.setScrollLeft(Math.round(left + this.characterWidth - this.$size.scrollerWidth));\r\n        } else if (scrollLeft <= this.$padding && left - scrollLeft < this.characterWidth) {\r\n            this.session.setScrollLeft(0);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * {:EditSession.getScrollTop}\r\n     * @related EditSession.getScrollTop\r\n     * @returns {Number}\r\n     **/\r\n    this.getScrollTop = function() {\r\n        return this.session.getScrollTop();\r\n    };\r\n\r\n    /**\r\n     * {:EditSession.getScrollLeft}\r\n     * @related EditSession.getScrollLeft\r\n     * @returns {Number}\r\n     **/\r\n    this.getScrollLeft = function() {\r\n        return this.session.getScrollLeft();\r\n    };\r\n\r\n    /**\r\n     * Returns the first visible row, regardless of whether it's fully visible or not.\r\n     * @returns {Number}\r\n     **/\r\n    this.getScrollTopRow = function() {\r\n        return this.scrollTop / this.lineHeight;\r\n    };\r\n\r\n    /**\r\n     * Returns the last visible row, regardless of whether it's fully visible or not.\r\n     * @returns {Number}\r\n     **/\r\n    this.getScrollBottomRow = function() {\r\n        return Math.max(0, Math.floor((this.scrollTop + this.$size.scrollerHeight) / this.lineHeight) - 1);\r\n    };\r\n\r\n    /**\r\n     * Gracefully scrolls from the top of the editor to the row indicated.\r\n     * @param {Number} row A row id\r\n     *\r\n     * @related EditSession.setScrollTop\r\n     **/\r\n    this.scrollToRow = function(row) {\r\n        this.session.setScrollTop(row * this.lineHeight);\r\n    };\r\n\r\n    this.alignCursor = function(cursor, alignment) {\r\n        if (typeof cursor == \"number\")\r\n            cursor = {row: cursor, column: 0};\r\n\r\n        var pos = this.$cursorLayer.getPixelPosition(cursor);\r\n        var h = this.$size.scrollerHeight - this.lineHeight;\r\n        var offset = pos.top - h * (alignment || 0);\r\n\r\n        this.session.setScrollTop(offset);\r\n        return offset;\r\n    };\r\n\r\n    this.STEPS = 8;\r\n    this.$calcSteps = function(fromValue, toValue){\r\n        var i = 0;\r\n        var l = this.STEPS;\r\n        var steps = [];\r\n\r\n        var func  = function(t, x_min, dx) {\r\n            return dx * (Math.pow(t - 1, 3) + 1) + x_min;\r\n        };\r\n\r\n        for (i = 0; i < l; ++i)\r\n            steps.push(func(i / this.STEPS, fromValue, toValue - fromValue));\r\n\r\n        return steps;\r\n    };\r\n\r\n    /**\r\n     * Gracefully scrolls the editor to the row indicated.\r\n     * @param {Number} line A line number\r\n     * @param {Boolean} center If `true`, centers the editor the to indicated line\r\n     * @param {Boolean} animate If `true` animates scrolling\r\n     * @param {Function} callback Function to be called after the animation has finished\r\n     *\r\n     **/\r\n    this.scrollToLine = function(line, center, animate, callback) {\r\n        var pos = this.$cursorLayer.getPixelPosition({row: line, column: 0});\r\n        var offset = pos.top;\r\n        if (center)\r\n            offset -= this.$size.scrollerHeight / 2;\r\n\r\n        var initialScroll = this.scrollTop;\r\n        this.session.setScrollTop(offset);\r\n        if (animate !== false)\r\n            this.animateScrolling(initialScroll, callback);\r\n    };\r\n\r\n    this.animateScrolling = function(fromValue, callback) {\r\n        var toValue = this.scrollTop;\r\n        if (!this.$animatedScroll)\r\n            return;\r\n        var _self = this;\r\n        \r\n        if (fromValue == toValue)\r\n            return;\r\n        \r\n        if (this.$scrollAnimation) {\r\n            var oldSteps = this.$scrollAnimation.steps;\r\n            if (oldSteps.length) {\r\n                fromValue = oldSteps[0];\r\n                if (fromValue == toValue)\r\n                    return;\r\n            }\r\n        }\r\n        \r\n        var steps = _self.$calcSteps(fromValue, toValue);\r\n        this.$scrollAnimation = {from: fromValue, to: toValue, steps: steps};\r\n\r\n        clearInterval(this.$timer);\r\n\r\n        _self.session.setScrollTop(steps.shift());\r\n        // trick session to think it's already scrolled to not loose toValue\r\n        _self.session.$scrollTop = toValue;\r\n        this.$timer = setInterval(function() {\r\n            if (steps.length) {\r\n                _self.session.setScrollTop(steps.shift());\r\n                _self.session.$scrollTop = toValue;\r\n            } else if (toValue != null) {\r\n                _self.session.$scrollTop = -1;\r\n                _self.session.setScrollTop(toValue);\r\n                toValue = null;\r\n            } else {\r\n                // do this on separate step to not get spurious scroll event from scrollbar\r\n                _self.$timer = clearInterval(_self.$timer);\r\n                _self.$scrollAnimation = null;\r\n                callback && callback();\r\n            }\r\n        }, 10);\r\n    };\r\n\r\n    /**\r\n     * Scrolls the editor to the y pixel indicated.\r\n     * @param {Number} scrollTop The position to scroll to\r\n     *\r\n     * @returns {Number}\r\n     **/\r\n    this.scrollToY = function(scrollTop) {\r\n        // after calling scrollBar.setScrollTop\r\n        // scrollbar sends us event with same scrollTop. ignore it\r\n        if (this.scrollTop !== scrollTop) {\r\n            this.$loop.schedule(this.CHANGE_SCROLL);\r\n            this.scrollTop = scrollTop;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Scrolls the editor across the x-axis to the pixel indicated.\r\n     * @param {Number} scrollLeft The position to scroll to\r\n     *\r\n     * @returns {Number}\r\n     **/\r\n    this.scrollToX = function(scrollLeft) {\r\n        if (this.scrollLeft !== scrollLeft)\r\n            this.scrollLeft = scrollLeft;\r\n        this.$loop.schedule(this.CHANGE_H_SCROLL);\r\n    };\r\n\r\n    /**\r\n     * Scrolls the editor across both x- and y-axes.\r\n     * @param {Number} x The x value to scroll to\r\n     * @param {Number} y The y value to scroll to\r\n     **/\r\n    this.scrollTo = function(x, y) {\r\n        this.session.setScrollTop(y);\r\n        this.session.setScrollLeft(y);\r\n    };\r\n    \r\n    /**\r\n     * Scrolls the editor across both x- and y-axes.\r\n     * @param {Number} deltaX The x value to scroll by\r\n     * @param {Number} deltaY The y value to scroll by\r\n     **/\r\n    this.scrollBy = function(deltaX, deltaY) {\r\n        deltaY && this.session.setScrollTop(this.session.getScrollTop() + deltaY);\r\n        deltaX && this.session.setScrollLeft(this.session.getScrollLeft() + deltaX);\r\n    };\r\n\r\n    /**\r\n     * Returns `true` if you can still scroll by either parameter; in other words, you haven't reached the end of the file or line.\r\n     * @param {Number} deltaX The x value to scroll by\r\n     * @param {Number} deltaY The y value to scroll by\r\n     *\r\n     * @returns {Boolean}\r\n     **/\r\n    this.isScrollableBy = function(deltaX, deltaY) {\r\n        if (deltaY < 0 && this.session.getScrollTop() >= 1 - this.scrollMargin.top)\r\n           return true;\r\n        if (deltaY > 0 && this.session.getScrollTop() + this.$size.scrollerHeight\r\n            - this.layerConfig.maxHeight < -1 + this.scrollMargin.bottom)\r\n           return true;\r\n        if (deltaX < 0 && this.session.getScrollLeft() >= 1 - this.scrollMargin.left)\r\n            return true;\r\n        if (deltaX > 0 && this.session.getScrollLeft() + this.$size.scrollerWidth\r\n            - this.layerConfig.width < -1 + this.scrollMargin.right)\r\n           return true;\r\n    };\r\n\r\n    this.pixelToScreenCoordinates = function(x, y) {\r\n        var canvasPos;\r\n        if (this.$hasCssTransforms) {\r\n            canvasPos = {top:0, left: 0};\r\n            var p = this.$fontMetrics.transformCoordinates([x, y]);\r\n            x = p[1] - this.gutterWidth - this.margin.left;\r\n            y = p[0];\r\n        } else {\r\n            canvasPos = this.scroller.getBoundingClientRect();\r\n        }\r\n        \r\n        var offsetX = x + this.scrollLeft - canvasPos.left - this.$padding;\r\n        var offset = offsetX / this.characterWidth;\r\n        var row = Math.floor((y + this.scrollTop - canvasPos.top) / this.lineHeight);\r\n        var col = this.$blockCursor ? Math.floor(offset) : Math.round(offset);\r\n\r\n        return {row: row, column: col, side: offset - col > 0 ? 1 : -1, offsetX:  offsetX};\r\n    };\r\n\r\n    this.screenToTextCoordinates = function(x, y) {\r\n        var canvasPos;\r\n        if (this.$hasCssTransforms) {\r\n            canvasPos = {top:0, left: 0};\r\n            var p = this.$fontMetrics.transformCoordinates([x, y]);\r\n            x = p[1] - this.gutterWidth - this.margin.left;\r\n            y = p[0];\r\n        } else {\r\n            canvasPos = this.scroller.getBoundingClientRect();\r\n        }\r\n\r\n        var offsetX = x + this.scrollLeft - canvasPos.left - this.$padding;\r\n        var offset = offsetX / this.characterWidth;\r\n        var col = this.$blockCursor ? Math.floor(offset) : Math.round(offset);\r\n\r\n        var row = Math.floor((y + this.scrollTop - canvasPos.top) / this.lineHeight);\r\n\r\n        return this.session.screenToDocumentPosition(row, Math.max(col, 0), offsetX);\r\n    };\r\n\r\n    /**\r\n     * Returns an object containing the `pageX` and `pageY` coordinates of the document position.\r\n     * @param {Number} row The document row position\r\n     * @param {Number} column The document column position\r\n     *\r\n     * @returns {Object}\r\n     **/\r\n    this.textToScreenCoordinates = function(row, column) {\r\n        var canvasPos = this.scroller.getBoundingClientRect();\r\n        var pos = this.session.documentToScreenPosition(row, column);\r\n\r\n        var x = this.$padding + (this.session.$bidiHandler.isBidiRow(pos.row, row)\r\n             ? this.session.$bidiHandler.getPosLeft(pos.column)\r\n             : Math.round(pos.column * this.characterWidth));\r\n        \r\n        var y = pos.row * this.lineHeight;\r\n\r\n        return {\r\n            pageX: canvasPos.left + x - this.scrollLeft,\r\n            pageY: canvasPos.top + y - this.scrollTop\r\n        };\r\n    };\r\n\r\n    /**\r\n     *\r\n     * Focuses the current container.\r\n     **/\r\n    this.visualizeFocus = function() {\r\n        dom.addCssClass(this.container, \"ace_focus\");\r\n    };\r\n\r\n    /**\r\n     *\r\n     * Blurs the current container.\r\n     **/\r\n    this.visualizeBlur = function() {\r\n        dom.removeCssClass(this.container, \"ace_focus\");\r\n    };\r\n\r\n    /**\r\n     * @param {Number} position\r\n     *\r\n     * @private\r\n     **/\r\n    this.showComposition = function(composition) {\r\n        this.$composition = composition;\r\n        if (!composition.cssText) {\r\n            composition.cssText = this.textarea.style.cssText;\r\n            composition.keepTextAreaAtCursor = this.$keepTextAreaAtCursor;\r\n        }\r\n        composition.useTextareaForIME = this.$useTextareaForIME;\r\n        \r\n        if (this.$useTextareaForIME) {\r\n            this.$keepTextAreaAtCursor = true;\r\n            dom.addCssClass(this.textarea, \"ace_composition\");\r\n            this.textarea.style.cssText = \"\";\r\n            this.$moveTextAreaToCursor();\r\n            this.$cursorLayer.element.style.display = \"none\";\r\n        }\r\n        else {            \r\n            composition.markerId = this.session.addMarker(composition.markerRange, \"ace_composition_marker\", \"text\");\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @param {String} text A string of text to use\r\n     *\r\n     * Sets the inner text of the current composition to `text`.\r\n     **/\r\n    this.setCompositionText = function(text) {\r\n        var cursor = this.session.selection.cursor;\r\n        this.addToken(text, \"composition_placeholder\", cursor.row, cursor.column);\r\n        this.$moveTextAreaToCursor();\r\n    };\r\n\r\n    /**\r\n     *\r\n     * Hides the current composition.\r\n     **/\r\n    this.hideComposition = function() {\r\n        if (!this.$composition)\r\n            return;\r\n        \r\n        if (this.$composition.markerId)\r\n            this.session.removeMarker(this.$composition.markerId);\r\n\r\n        dom.removeCssClass(this.textarea, \"ace_composition\");\r\n        this.$keepTextAreaAtCursor = this.$composition.keepTextAreaAtCursor;\r\n        this.textarea.style.cssText = this.$composition.cssText;\r\n        this.$composition = null;\r\n        this.$cursorLayer.element.style.display = \"\";\r\n    };\r\n    \r\n    this.addToken = function(text, type, row, column) {\r\n        var session = this.session;\r\n        session.bgTokenizer.lines[row] = null;\r\n        var newToken = {type: type, value: text};\r\n        var tokens = session.getTokens(row);\r\n        if (column == null) {\r\n            tokens.push(newToken);\r\n        } else {\r\n            var l = 0;\r\n            for (var i =0; i < tokens.length; i++) {\r\n                var token = tokens[i];\r\n                l += token.value.length;\r\n                if (column <= l) {\r\n                    var diff = token.value.length - (l - column);\r\n                    var before = token.value.slice(0, diff);\r\n                    var after = token.value.slice(diff);\r\n    \r\n                    tokens.splice(i, 1, {type: token.type, value: before},  newToken,  {type: token.type, value: after});\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        this.updateLines(row, row);\r\n    };\r\n\r\n\r\n    /**\r\n     * [Sets a new theme for the editor. `theme` should exist, and be a directory path, like `ace/theme/textmate`.]{: #VirtualRenderer.setTheme}\r\n     * @param {String} theme The path to a theme\r\n     * @param {Function} cb optional callback\r\n     *\r\n     **/\r\n    this.setTheme = function(theme, cb) {\r\n        var _self = this;\r\n        this.$themeId = theme;\r\n        _self._dispatchEvent('themeChange',{theme:theme});\r\n\r\n        if (!theme || typeof theme == \"string\") {\r\n            var moduleName = theme || this.$options.theme.initialValue;\r\n            config.loadModule([\"theme\", moduleName], afterLoad);\r\n        } else {\r\n            afterLoad(theme);\r\n        }\r\n\r\n        function afterLoad(module) {\r\n            if (_self.$themeId != theme)\r\n                return cb && cb();\r\n            if (!module || !module.cssClass)\r\n                throw new Error(\"couldn't load module \" + theme + \" or it didn't call define\");\r\n            if (module.$id)\r\n                _self.$themeId = module.$id;\r\n            dom.importCssString(\r\n                module.cssText,\r\n                module.cssClass,\r\n                _self.container\r\n            );\r\n\r\n            if (_self.theme)\r\n                dom.removeCssClass(_self.container, _self.theme.cssClass);\r\n\r\n            var padding = \"padding\" in module ? module.padding \r\n                : \"padding\" in (_self.theme || {}) ? 4 : _self.$padding;\r\n            if (_self.$padding && padding != _self.$padding)\r\n                _self.setPadding(padding);\r\n                \r\n            // this is kept only for backwards compatibility\r\n            _self.$theme = module.cssClass;\r\n\r\n            _self.theme = module;\r\n            dom.addCssClass(_self.container, module.cssClass);\r\n            dom.setCssClass(_self.container, \"ace_dark\", module.isDark);\r\n\r\n            // force re-measure of the gutter width\r\n            if (_self.$size) {\r\n                _self.$size.width = 0;\r\n                _self.$updateSizeAsync();\r\n            }\r\n\r\n            _self._dispatchEvent('themeLoaded', {theme:module});\r\n            cb && cb();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * [Returns the path of the current theme.]{: #VirtualRenderer.getTheme}\r\n     * @returns {String}\r\n     **/\r\n    this.getTheme = function() {\r\n        return this.$themeId;\r\n    };\r\n\r\n    // Methods allows to add / remove CSS classnames to the editor element.\r\n    // This feature can be used by plug-ins to provide a visual indication of\r\n    // a certain mode that editor is in.\r\n\r\n    /**\r\n     * [Adds a new class, `style`, to the editor.]{: #VirtualRenderer.setStyle}\r\n     * @param {String} style A class name\r\n     *\r\n     **/\r\n    this.setStyle = function(style, include) {\r\n        dom.setCssClass(this.container, style, include !== false);\r\n    };\r\n\r\n    /**\r\n     * [Removes the class `style` from the editor.]{: #VirtualRenderer.unsetStyle}\r\n     * @param {String} style A class name\r\n     *\r\n     **/\r\n    this.unsetStyle = function(style) {\r\n        dom.removeCssClass(this.container, style);\r\n    };\r\n    \r\n    this.setCursorStyle = function(style) {\r\n        dom.setStyle(this.scroller.style, \"cursor\", style);\r\n    };\r\n\r\n    /**\r\n     * @param {String} cursorStyle A css cursor style\r\n     *\r\n     **/\r\n    this.setMouseCursor = function(cursorStyle) {\r\n        dom.setStyle(this.scroller.style, \"cursor\", cursorStyle);\r\n    };\r\n    \r\n    this.attachToShadowRoot = function() {\r\n        dom.importCssString(editorCss, \"ace_editor.css\", this.container);\r\n    };\r\n\r\n    /**\r\n     * Destroys the text and cursor layers for this renderer.\r\n     **/\r\n    this.destroy = function() {\r\n        this.$fontMetrics.destroy();\r\n        this.$cursorLayer.destroy();\r\n    };\r\n\r\n}).call(VirtualRenderer.prototype);\r\n\r\n\r\nconfig.defineOptions(VirtualRenderer.prototype, \"renderer\", {\r\n    animatedScroll: {initialValue: false},\r\n    showInvisibles: {\r\n        set: function(value) {\r\n            if (this.$textLayer.setShowInvisibles(value))\r\n                this.$loop.schedule(this.CHANGE_TEXT);\r\n        },\r\n        initialValue: false\r\n    },\r\n    showPrintMargin: {\r\n        set: function() { this.$updatePrintMargin(); },\r\n        initialValue: true\r\n    },\r\n    printMarginColumn: {\r\n        set: function() { this.$updatePrintMargin(); },\r\n        initialValue: 80\r\n    },\r\n    printMargin: {\r\n        set: function(val) {\r\n            if (typeof val == \"number\")\r\n                this.$printMarginColumn = val;\r\n            this.$showPrintMargin = !!val;\r\n            this.$updatePrintMargin();\r\n        },\r\n        get: function() {\r\n            return this.$showPrintMargin && this.$printMarginColumn; \r\n        }\r\n    },\r\n    showGutter: {\r\n        set: function(show){\r\n            this.$gutter.style.display = show ? \"block\" : \"none\";\r\n            this.$loop.schedule(this.CHANGE_FULL);\r\n            this.onGutterResize();\r\n        },\r\n        initialValue: true\r\n    },\r\n    fadeFoldWidgets: {\r\n        set: function(show) {\r\n            dom.setCssClass(this.$gutter, \"ace_fade-fold-widgets\", show);\r\n        },\r\n        initialValue: false\r\n    },\r\n    showFoldWidgets: {\r\n        set: function(show) {\r\n            this.$gutterLayer.setShowFoldWidgets(show);\r\n            this.$loop.schedule(this.CHANGE_GUTTER);\r\n        },\r\n        initialValue: true\r\n    },\r\n    displayIndentGuides: {\r\n        set: function(show) {\r\n            if (this.$textLayer.setDisplayIndentGuides(show))\r\n                this.$loop.schedule(this.CHANGE_TEXT);\r\n        },\r\n        initialValue: true\r\n    },\r\n    highlightGutterLine: {\r\n        set: function(shouldHighlight) {\r\n            this.$gutterLayer.setHighlightGutterLine(shouldHighlight);\r\n            this.$loop.schedule(this.CHANGE_GUTTER);\r\n        },\r\n        initialValue: true\r\n    },\r\n    hScrollBarAlwaysVisible: {\r\n        set: function(val) {\r\n            if (!this.$hScrollBarAlwaysVisible || !this.$horizScroll)\r\n                this.$loop.schedule(this.CHANGE_SCROLL);\r\n        },\r\n        initialValue: false\r\n    },\r\n    vScrollBarAlwaysVisible: {\r\n        set: function(val) {\r\n            if (!this.$vScrollBarAlwaysVisible || !this.$vScroll)\r\n                this.$loop.schedule(this.CHANGE_SCROLL);\r\n        },\r\n        initialValue: false\r\n    },\r\n    fontSize: {\r\n        set: function(size) {\r\n            if (typeof size == \"number\")\r\n                size = size + \"px\";\r\n            this.container.style.fontSize = size;\r\n            this.updateFontSize();\r\n        },\r\n        initialValue: 12\r\n    },\r\n    fontFamily: {\r\n        set: function(name) {\r\n            this.container.style.fontFamily = name;\r\n            this.updateFontSize();\r\n        }\r\n    },\r\n    maxLines: {\r\n        set: function(val) {\r\n            this.updateFull();\r\n        }\r\n    },\r\n    minLines: {\r\n        set: function(val) {\r\n            if (!(this.$minLines < 0x1ffffffffffff))\r\n                this.$minLines = 0;\r\n            this.updateFull();\r\n        }\r\n    },\r\n    maxPixelHeight: {\r\n        set: function(val) {\r\n            this.updateFull();\r\n        },\r\n        initialValue: 0\r\n    },\r\n    scrollPastEnd: {\r\n        set: function(val) {\r\n            val = +val || 0;\r\n            if (this.$scrollPastEnd == val)\r\n                return;\r\n            this.$scrollPastEnd = val;\r\n            this.$loop.schedule(this.CHANGE_SCROLL);\r\n        },\r\n        initialValue: 0,\r\n        handlesSet: true\r\n    },\r\n    fixedWidthGutter: {\r\n        set: function(val) {\r\n            this.$gutterLayer.$fixedWidth = !!val;\r\n            this.$loop.schedule(this.CHANGE_GUTTER);\r\n        }\r\n    },\r\n    theme: {\r\n        set: function(val) { this.setTheme(val); },\r\n        get: function() { return this.$themeId || this.theme; },\r\n        initialValue: \"./theme/textmate\",\r\n        handlesSet: true\r\n    },\r\n    hasCssTransforms: {\r\n    },\r\n    useTextareaForIME: {\r\n        initialValue: !useragent.isMobile && !useragent.isIE\r\n    }\r\n});\r\n\r\nexports.VirtualRenderer = VirtualRenderer;\r\n});\r\n"]}