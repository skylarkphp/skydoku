{"version":3,"sources":["split.js"],"names":["define","require","exports","module","oop","EventEmitter","Editor","Renderer","VirtualRenderer","EditSession","Split","container","theme","splits","this","BELOW","BESIDE","$container","$theme","$splits","$editorCSS","$editors","$orientation","setSplits","$cEditor","on","editor","bind","implement","$createEditor","el","document","createElement","className","style","cssText","appendChild","_emit","push","setFontSize","$fontSize","length","removeChild","resize","getSplits","getEditor","idx","getCurrentEditor","focus","blur","setTheme","forEach","setKeyboardHandler","keybinding","callback","scope","size","$cloneSession","session","s","getDocument","getMode","undoManager","getUndoManager","setUndoManager","setTabSize","getTabSize","setUseSoftTabs","getUseSoftTabs","setOverwrite","getOverwrite","setBreakpoints","getBreakpoints","setUseWrapMode","getUseWrapMode","setUseWorker","getUseWorker","setWrapLimitRange","$wrapLimitRange","min","max","$foldData","$cloneFoldData","setSession","some","getOrientation","setOrientation","orientation","width","clientWidth","height","clientHeight","editorWidth","i","top","left","editorHeight","call","prototype"],"mappings":"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","file":"../split.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2010, Ajax.org B.V.\r\n * All rights reserved.\r\n * \r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n * \r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\ndefine(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"./lib/oop\");\r\nvar lang = require(\"./lib/lang\");\r\nvar EventEmitter = require(\"./lib/event_emitter\").EventEmitter;\r\n\r\nvar Editor = require(\"./editor\").Editor;\r\nvar Renderer = require(\"./virtual_renderer\").VirtualRenderer;\r\nvar EditSession = require(\"./edit_session\").EditSession;\r\n\r\n/** \r\n * @class Split\r\n *\r\n **/\r\n\r\n\r\nvar Split = function(container, theme, splits) {\r\n    this.BELOW = 1;\r\n    this.BESIDE = 0;\r\n\r\n    this.$container = container;\r\n    this.$theme = theme;\r\n    this.$splits = 0;\r\n    this.$editorCSS = \"\";\r\n    this.$editors = [];\r\n    this.$orientation = this.BESIDE;\r\n\r\n    this.setSplits(splits || 1);\r\n    this.$cEditor = this.$editors[0];\r\n\r\n\r\n    this.on(\"focus\", function(editor) {\r\n        this.$cEditor = editor;\r\n    }.bind(this));\r\n};\r\n\r\n(function(){\r\n\r\n    oop.implement(this, EventEmitter);\r\n\r\n    this.$createEditor = function() {\r\n        var el = document.createElement(\"div\");\r\n        el.className = this.$editorCSS;\r\n        el.style.cssText = \"position: absolute; top:0px; bottom:0px\";\r\n        this.$container.appendChild(el);\r\n        var editor = new Editor(new Renderer(el, this.$theme));\r\n\r\n        editor.on(\"focus\", function() {\r\n            this._emit(\"focus\", editor);\r\n        }.bind(this));\r\n\r\n        this.$editors.push(editor);\r\n        editor.setFontSize(this.$fontSize);\r\n        return editor;\r\n    };\r\n\r\n    this.setSplits = function(splits) {\r\n        var editor;\r\n        if (splits < 1) {\r\n            throw \"The number of splits have to be > 0!\";\r\n        }\r\n\r\n        if (splits == this.$splits) {\r\n            return;\r\n        } else if (splits > this.$splits) {\r\n            while (this.$splits < this.$editors.length && this.$splits < splits) {\r\n                editor = this.$editors[this.$splits];\r\n                this.$container.appendChild(editor.container);\r\n                editor.setFontSize(this.$fontSize);\r\n                this.$splits ++;\r\n            }\r\n            while (this.$splits < splits) {\r\n                this.$createEditor();\r\n                this.$splits ++;\r\n            }\r\n        } else {\r\n            while (this.$splits > splits) {\r\n                editor = this.$editors[this.$splits - 1];\r\n                this.$container.removeChild(editor.container);\r\n                this.$splits --;\r\n            }\r\n        }\r\n        this.resize();\r\n    };\r\n\r\n    /**\r\n     * \r\n     * Returns the number of splits.\r\n     * @returns {Number}\r\n     **/\r\n    this.getSplits = function() {\r\n        return this.$splits;\r\n    };\r\n\r\n    /**\r\n     * @param {Number} idx The index of the editor you want\r\n     *\r\n     * Returns the editor identified by the index `idx`.\r\n     *\r\n     **/\r\n    this.getEditor = function(idx) {\r\n        return this.$editors[idx];\r\n    };\r\n\r\n    /**\r\n     * \r\n     * Returns the current editor.\r\n     * @returns {Editor}\r\n     **/\r\n    this.getCurrentEditor = function() {\r\n        return this.$cEditor;\r\n    };\r\n\r\n    /** \r\n     * Focuses the current editor.\r\n     * @related Editor.focus\r\n     **/\r\n    this.focus = function() {\r\n        this.$cEditor.focus();\r\n    };\r\n\r\n    /** \r\n     * Blurs the current editor.\r\n     * @related Editor.blur\r\n     **/\r\n    this.blur = function() {\r\n        this.$cEditor.blur();\r\n    };\r\n\r\n    /** \r\n     * \r\n     * @param {String} theme The name of the theme to set\r\n     * \r\n     * Sets a theme for each of the available editors.\r\n     * @related Editor.setTheme\r\n     **/\r\n    this.setTheme = function(theme) {\r\n        this.$editors.forEach(function(editor) {\r\n            editor.setTheme(theme);\r\n        });\r\n    };\r\n\r\n    /** \r\n     * \r\n     * @param {String} keybinding \r\n     * \r\n     * Sets the keyboard handler for the editor.\r\n     * @related editor.setKeyboardHandler\r\n     **/\r\n    this.setKeyboardHandler = function(keybinding) {\r\n        this.$editors.forEach(function(editor) {\r\n            editor.setKeyboardHandler(keybinding);\r\n        });\r\n    };\r\n\r\n    /** \r\n     * \r\n     * @param {Function} callback A callback function to execute\r\n     * @param {String} scope The default scope for the callback\r\n     * \r\n     * Executes `callback` on all of the available editors. \r\n     *\r\n     **/\r\n    this.forEach = function(callback, scope) {\r\n        this.$editors.forEach(callback, scope);\r\n    };\r\n\r\n\r\n    this.$fontSize = \"\";\r\n    /** \r\n     * @param {Number} size The new font size\r\n     * \r\n     * Sets the font size, in pixels, for all the available editors.\r\n     *\r\n     **/\r\n    this.setFontSize = function(size) {\r\n        this.$fontSize = size;\r\n        this.forEach(function(editor) {\r\n           editor.setFontSize(size);\r\n        });\r\n    };\r\n\r\n    this.$cloneSession = function(session) {\r\n        var s = new EditSession(session.getDocument(), session.getMode());\r\n\r\n        var undoManager = session.getUndoManager();\r\n        s.setUndoManager(undoManager);\r\n\r\n        // Copy over 'settings' from the session.\r\n        s.setTabSize(session.getTabSize());\r\n        s.setUseSoftTabs(session.getUseSoftTabs());\r\n        s.setOverwrite(session.getOverwrite());\r\n        s.setBreakpoints(session.getBreakpoints());\r\n        s.setUseWrapMode(session.getUseWrapMode());\r\n        s.setUseWorker(session.getUseWorker());\r\n        s.setWrapLimitRange(session.$wrapLimitRange.min,\r\n                            session.$wrapLimitRange.max);\r\n        s.$foldData = session.$cloneFoldData();\r\n\r\n        return s;\r\n    };\r\n\r\n   /** \r\n     * \r\n     * @param {EditSession} session The new edit session\r\n     * @param {Number} idx The editor's index you're interested in\r\n     * \r\n     * Sets a new [[EditSession `EditSession`]] for the indicated editor.\r\n     * @related Editor.setSession\r\n     **/\r\n    this.setSession = function(session, idx) {\r\n        var editor;\r\n        if (idx == null) {\r\n            editor = this.$cEditor;\r\n        } else {\r\n            editor = this.$editors[idx];\r\n        }\r\n\r\n        // Check if the session is used already by any of the editors in the\r\n        // split. If it is, we have to clone the session as two editors using\r\n        // the same session can cause terrible side effects (e.g. UndoQueue goes\r\n        // wrong). This also gives the user of Split the possibility to treat\r\n        // each session on each split editor different.\r\n        var isUsed = this.$editors.some(function(editor) {\r\n           return editor.session === session;\r\n        });\r\n\r\n        if (isUsed) {\r\n            session = this.$cloneSession(session);\r\n        }\r\n        editor.setSession(session);\r\n\r\n        // Return the session set on the editor. This might be a cloned one.\r\n        return session;\r\n    };\r\n\r\n   /** \r\n     * \r\n     * Returns the orientation.\r\n     * @returns {Number}\r\n     **/\r\n    this.getOrientation = function() {\r\n        return this.$orientation;\r\n    };\r\n\r\n   /** \r\n     * \r\n     * Sets the orientation.\r\n     * @param {Number} orientation The new orientation value\r\n     *\r\n     *\r\n     **/\r\n    this.setOrientation = function(orientation) {\r\n        if (this.$orientation == orientation) {\r\n            return;\r\n        }\r\n        this.$orientation = orientation;\r\n        this.resize();\r\n    };\r\n\r\n   /**  \r\n     * Resizes the editor.\r\n     **/\r\n    this.resize = function() {\r\n        var width = this.$container.clientWidth;\r\n        var height = this.$container.clientHeight;\r\n        var editor;\r\n\r\n        if (this.$orientation == this.BESIDE) {\r\n            var editorWidth = width / this.$splits;\r\n            for (var i = 0; i < this.$splits; i++) {\r\n                editor = this.$editors[i];\r\n                editor.container.style.width = editorWidth + \"px\";\r\n                editor.container.style.top = \"0px\";\r\n                editor.container.style.left = i * editorWidth + \"px\";\r\n                editor.container.style.height = height + \"px\";\r\n                editor.resize();\r\n            }\r\n        } else {\r\n            var editorHeight = height / this.$splits;\r\n            for (var i = 0; i < this.$splits; i++) {\r\n                editor = this.$editors[i];\r\n                editor.container.style.width = width + \"px\";\r\n                editor.container.style.top = i * editorHeight + \"px\";\r\n                editor.container.style.left = \"0px\";\r\n                editor.container.style.height = editorHeight + \"px\";\r\n                editor.resize();\r\n            }\r\n        }\r\n    };\r\n\r\n}).call(Split.prototype);\r\n\r\nexports.Split = Split;\r\n});\r\n"]}