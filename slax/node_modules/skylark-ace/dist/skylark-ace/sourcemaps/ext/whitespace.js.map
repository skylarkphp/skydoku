{"version":3,"sources":["ext/whitespace.js"],"names":["define","require","exports","module","lang","$detectIndentation","lines","fallback","stats","changes","tabIndents","prevSpaces","max","Math","min","length","i","line","test","Number","MAX_VALUE","spaces","match","diff","getScore","indent","score","changesTotal","reduce","a","b","first","spaceIndents","tabLength","undefined","ch","detectIndentation","session","getLines","setUseSoftTabs","setTabSize","trimTrailingSpace","options","doc","getDocument","getAllLines","trimEmpty","cursors","ci","keepCursorPosition","selection","rangeCount","rangeList","ranges","forEach","x","next","cursor","row","push","getCursor","cursorRow","l","index","search","column","removeInLine","convertIndentation","len","oldCh","getTabString","oldLen","getTabSize","tab","stringRepeat","cache","spaceCache","w","$getStringScreenWidth","tabCount","floor","reminder","toInsert","insertInLine","$parseStringArg","text","m","parseInt","$parseArg","arg","commands","name","exec","editor","args"],"mappings":"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","file":"../../ext/whitespace.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2010, Ajax.org B.V.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\ndefine(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar lang = require(\"../lib/lang\");\r\n\r\n// based on http://www.freehackers.org/Indent_Finder\r\nexports.$detectIndentation = function(lines, fallback) {\r\n    var stats = [];\r\n    var changes = [];\r\n    var tabIndents = 0;\r\n    var prevSpaces = 0;\r\n    var max = Math.min(lines.length, 1000);\r\n    for (var i = 0; i < max; i++) {\r\n        var line = lines[i];\r\n        // ignore empty and comment lines\r\n        if (!/^\\s*[^*+\\-\\s]/.test(line))\r\n            continue;\r\n\r\n        if (line[0] == \"\\t\") {\r\n            tabIndents++;\r\n            prevSpaces = -Number.MAX_VALUE;\r\n        } else {\r\n            var spaces = line.match(/^ */)[0].length;\r\n            if (spaces && line[spaces] != \"\\t\") {\r\n                var diff = spaces - prevSpaces;\r\n                if (diff > 0 && !(prevSpaces%diff) && !(spaces%diff))\r\n                    changes[diff] = (changes[diff] || 0) + 1;\r\n    \r\n                stats[spaces] = (stats[spaces] || 0) + 1;\r\n            }\r\n            prevSpaces = spaces;\r\n        }\r\n        // ignore lines ending with backslash\r\n        while (i < max && line[line.length - 1] == \"\\\\\")\r\n            line = lines[i++];\r\n    }\r\n    \r\n    function getScore(indent) {\r\n        var score = 0;\r\n        for (var i = indent; i < stats.length; i += indent)\r\n            score += stats[i] || 0;\r\n        return score;\r\n    }\r\n\r\n    var changesTotal = changes.reduce(function(a,b){return a+b;}, 0);\r\n\r\n    var first = {score: 0, length: 0};\r\n    var spaceIndents = 0;\r\n    for (var i = 1; i < 12; i++) {\r\n        var score = getScore(i);\r\n        if (i == 1) {\r\n            spaceIndents = score;\r\n            score = stats[1] ? 0.9 : 0.8;\r\n            if (!stats.length)\r\n                score = 0;\r\n        } else\r\n            score /= spaceIndents;\r\n\r\n        if (changes[i])\r\n            score += changes[i] / changesTotal;\r\n\r\n        if (score > first.score)\r\n            first = {score: score, length: i};\r\n    }\r\n\r\n    if (first.score && first.score > 1.4)\r\n        var tabLength = first.length;\r\n\r\n    if (tabIndents > spaceIndents + 1) {\r\n        if (tabLength == 1 || spaceIndents < tabIndents / 4 || first.score < 1.8)\r\n            tabLength = undefined;\r\n        return {ch: \"\\t\", length: tabLength};\r\n    }\r\n    if (spaceIndents > tabIndents + 1)\r\n        return {ch: \" \", length: tabLength};\r\n};\r\n\r\nexports.detectIndentation = function(session) {\r\n    var lines = session.getLines(0, 1000);\r\n    var indent = exports.$detectIndentation(lines) || {};\r\n\r\n    if (indent.ch)\r\n        session.setUseSoftTabs(indent.ch == \" \");\r\n\r\n    if (indent.length)\r\n        session.setTabSize(indent.length);\r\n    return indent;\r\n};\r\n\r\n/**\r\n * EditSession session\r\n * options.trimEmpty trim empty lines too\r\n * options.keepCursorPosition do not trim whitespace before the cursor\r\n */\r\nexports.trimTrailingSpace = function(session, options) {\r\n    var doc = session.getDocument();\r\n    var lines = doc.getAllLines();\r\n    \r\n    var min = options && options.trimEmpty ? -1 : 0;\r\n    var cursors = [], ci = -1;\r\n    if (options && options.keepCursorPosition) {\r\n        if (session.selection.rangeCount) {\r\n            session.selection.rangeList.ranges.forEach(function(x, i, ranges) {\r\n               var next = ranges[i + 1];\r\n               if (next && next.cursor.row == x.cursor.row)\r\n                  return;\r\n              cursors.push(x.cursor);\r\n            });\r\n        } else {\r\n            cursors.push(session.selection.getCursor());\r\n        }\r\n        ci = 0;\r\n    }\r\n    var cursorRow = cursors[ci] && cursors[ci].row;\r\n\r\n    for (var i = 0, l=lines.length; i < l; i++) {\r\n        var line = lines[i];\r\n        var index = line.search(/\\s+$/);\r\n\r\n        if (i == cursorRow) {\r\n            if (index < cursors[ci].column && index > min)\r\n               index = cursors[ci].column;\r\n            ci++;\r\n            cursorRow = cursors[ci] ? cursors[ci].row : -1;\r\n        }\r\n\r\n        if (index > min)\r\n            doc.removeInLine(i, index, line.length);\r\n    }\r\n};\r\n\r\nexports.convertIndentation = function(session, ch, len) {\r\n    var oldCh = session.getTabString()[0];\r\n    var oldLen = session.getTabSize();\r\n    if (!len) len = oldLen;\r\n    if (!ch) ch = oldCh;\r\n\r\n    var tab = ch == \"\\t\" ? ch: lang.stringRepeat(ch, len);\r\n\r\n    var doc = session.doc;\r\n    var lines = doc.getAllLines();\r\n\r\n    var cache = {};\r\n    var spaceCache = {};\r\n    for (var i = 0, l=lines.length; i < l; i++) {\r\n        var line = lines[i];\r\n        var match = line.match(/^\\s*/)[0];\r\n        if (match) {\r\n            var w = session.$getStringScreenWidth(match)[0];\r\n            var tabCount = Math.floor(w/oldLen);\r\n            var reminder = w%oldLen;\r\n            var toInsert = cache[tabCount] || (cache[tabCount] = lang.stringRepeat(tab, tabCount));\r\n            toInsert += spaceCache[reminder] || (spaceCache[reminder] = lang.stringRepeat(\" \", reminder));\r\n\r\n            if (toInsert != match) {\r\n                doc.removeInLine(i, 0, match.length);\r\n                doc.insertInLine({row: i, column: 0}, toInsert);\r\n            }\r\n        }\r\n    }\r\n    session.setTabSize(len);\r\n    session.setUseSoftTabs(ch == \" \");\r\n};\r\n\r\nexports.$parseStringArg = function(text) {\r\n    var indent = {};\r\n    if (/t/.test(text))\r\n        indent.ch = \"\\t\";\r\n    else if (/s/.test(text))\r\n        indent.ch = \" \";\r\n    var m = text.match(/\\d+/);\r\n    if (m)\r\n        indent.length = parseInt(m[0], 10);\r\n    return indent;\r\n};\r\n\r\nexports.$parseArg = function(arg) {\r\n    if (!arg)\r\n        return {};\r\n    if (typeof arg == \"string\")\r\n        return exports.$parseStringArg(arg);\r\n    if (typeof arg.text == \"string\")\r\n        return exports.$parseStringArg(arg.text);\r\n    return arg;\r\n};\r\n\r\nexports.commands = [{\r\n    name: \"detectIndentation\",\r\n    exec: function(editor) {\r\n        exports.detectIndentation(editor.session);\r\n        // todo show message?\r\n    }\r\n}, {\r\n    name: \"trimTrailingSpace\",\r\n    exec: function(editor, args) {\r\n        exports.trimTrailingSpace(editor.session, args);\r\n    }\r\n}, {\r\n    name: \"convertIndentation\",\r\n    exec: function(editor, arg) {\r\n        var indent = exports.$parseArg(arg);\r\n        exports.convertIndentation(editor.session, indent.ch, indent.length);\r\n    }\r\n}, {\r\n    name: \"setIndentation\",\r\n    exec: function(editor, arg) {\r\n        var indent = exports.$parseArg(arg);\r\n        indent.length && editor.session.setTabSize(indent.length);\r\n        indent.ch && editor.session.setUseSoftTabs(indent.ch == \" \");\r\n    }\r\n}];\r\n\r\n});\r\n"]}