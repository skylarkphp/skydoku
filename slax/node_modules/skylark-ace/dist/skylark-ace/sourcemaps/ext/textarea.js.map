{"version":3,"sources":["ext/textarea.js"],"names":["define","require","exports","module","event","UA","ace","getCSSProperty","element","container","property","ret","style","window","getComputedStyle","getPropertyValue","currentStyle","applyStyles","elm","styles","transformTextarea","options","session","isFocused","autofocus","document","activeElement","getValue","type","Error","parentNode","createElement","resizeEvent","forEach","item","width","clientWidth","height","clientHeight","setAttribute","addListener","insertBefore","nextSibling","tagName","toUpperCase","oldSumit","onsubmit","evt","value","call","this","setupContainer","display","background","editorDiv","top","left","right","bottom","border","position","appendChild","settingOpener","cursor","borderColor","zIndex","settingDiv","settingDivStyles","padding","color","overflow","fontSize","boxShadow","isOldIE","backgroundColor","defaultOptions","editor","edit","getSession","setValue","innerHTML","focus","renderer","setDisplaySettings","hideButton","on","onFocus","removeListener","$setOption","setOption","$getOption","getOption","key","setKeyboardHandler","toBool","substr","length","getKeyboardHandler","$id","setOptions","setupApi","desc","mode","wrap","theme","showGutter","keybindings","showPrintMargin","useSoftTabs","showInvisibles","optionValues","text","javascript","xml","html","css","scss","python","php","java","ruby","c_cpp","coffee","json","perl","clojure","ocaml","csharp","haxe","svg","textile","groovy","liquid","Scala","clouds","clouds_midnight","cobalt","crimson_editor","dawn","gob","eclipse","idle_fingers","kr_theme","merbivore","merbivore_soft","mono_industrial","monokai","pastel_on_dark","solarized_dark","solarized_light","textmate","twilight","vibrant_ink","10px","11px","12px","14px","16px","off","40","80","free","vim","emacs","table","renderOption","builder","option","obj","cValue","push","join","onChange","e","select","currentTarget","title","onClick","cb","checked","selects","getElementsByTagName","i","onchange","cbs","onclick","button","setupSettingPanel","state","rect","getBoundingClientRect","clientX","clientY","preventDefault","startX","startY","capture","resize"],"mappings":"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","file":"../../ext/textarea.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2010, Ajax.org B.V.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\ndefine(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar event = require(\"../lib/event\");\r\nvar UA = require(\"../lib/useragent\");\r\nvar net = require(\"../lib/net\");\r\nvar ace = require(\"../ace\");\r\n\r\nrequire(\"../theme/textmate\");\r\n\r\nmodule.exports = exports = ace;\r\n\r\n/*\r\n * Returns the CSS property of element.\r\n *   1) If the CSS property is on the style object of the element, use it, OR\r\n *   2) Compute the CSS property\r\n *\r\n * If the property can't get computed, is 'auto' or 'intrinsic', the former\r\n * calculated property is used (this can happen in cases where the textarea\r\n * is hidden and has no dimension styles).\r\n */\r\nvar getCSSProperty = function(element, container, property) {\r\n    var ret = element.style[property];\r\n\r\n    if (!ret) {\r\n        if (window.getComputedStyle) {\r\n            ret = window.getComputedStyle(element, '').getPropertyValue(property);\r\n        } else {\r\n            ret = element.currentStyle[property];\r\n        }\r\n    }\r\n\r\n    if (!ret || ret == 'auto' || ret == 'intrinsic') {\r\n        ret = container.style[property];\r\n    }\r\n    return ret;\r\n};\r\n\r\nfunction applyStyles(elm, styles) {\r\n    for (var style in styles) {\r\n        elm.style[style] = styles[style];\r\n    }\r\n}\r\n\r\nfunction setupContainer(element, getValue) {\r\n    if (element.type != 'textarea') {\r\n        throw new Error(\"Textarea required!\");\r\n    }\r\n\r\n    var parentNode = element.parentNode;\r\n\r\n    // This will hold the editor.\r\n    var container = document.createElement('div');\r\n\r\n    // To put Ace in the place of the textarea, we have to copy a few of the\r\n    // textarea's style attributes to the div container.\r\n    //\r\n    // The problem is that the properties have to get computed (they might be\r\n    // defined by a CSS file on the page - you can't access such rules that\r\n    // apply to an element via elm.style). Computed properties are converted to\r\n    // pixels although the dimension might be given as percentage. When the\r\n    // window resizes, the dimensions defined by percentages changes, so the\r\n    // properties have to get recomputed to get the new/true pixels.\r\n    var resizeEvent = function() {\r\n        var style = 'position:relative;';\r\n        [\r\n            'margin-top', 'margin-left', 'margin-right', 'margin-bottom'\r\n        ].forEach(function(item) {\r\n            style += item + ':' +\r\n                        getCSSProperty(element, container, item) + ';';\r\n        });\r\n\r\n        // Calculating the width/height of the textarea is somewhat tricky. To\r\n        // do it right, you have to include the paddings to the sides as well\r\n        // (eg. width = width + padding-left, -right).  This works well, as\r\n        // long as the width of the element is not set or given in pixels. In\r\n        // this case and after the textarea is hidden, getCSSProperty(element,\r\n        // container, 'width') will still return pixel value. If the element\r\n        // has realtiv dimensions (e.g. width='95<percent>')\r\n        // getCSSProperty(...) will return pixel values only as long as the\r\n        // textarea is visible. After it is hidden getCSSProperty will return\r\n        // the relative dimensions as they are set on the element (in the case\r\n        // of width, 95<percent>).\r\n        // Making the sum of pixel vaules (e.g. padding) and realtive values\r\n        // (e.g. <percent>) is not possible. As such the padding styles are\r\n        // ignored.\r\n\r\n        // The complete width is the width of the textarea + the padding\r\n        // to the left and right.\r\n        var width = getCSSProperty(element, container, 'width') || (element.clientWidth + \"px\");\r\n        var height = getCSSProperty(element, container, 'height')  || (element.clientHeight + \"px\");\r\n        style += 'height:' + height + ';width:' + width + ';';\r\n\r\n        // Set the display property to 'inline-block'.\r\n        style += 'display:inline-block;';\r\n        container.setAttribute('style', style);\r\n    };\r\n    event.addListener(window, 'resize', resizeEvent);\r\n\r\n    // Call the resizeEvent once, so that the size of the container is\r\n    // calculated.\r\n    resizeEvent();\r\n\r\n    // Insert the div container after the element.\r\n    parentNode.insertBefore(container, element.nextSibling);\r\n\r\n    // Override the forms onsubmit function. Set the innerHTML and value\r\n    // of the textarea before submitting.\r\n    while (parentNode !== document) {\r\n        if (parentNode.tagName.toUpperCase() === 'FORM') {\r\n            var oldSumit = parentNode.onsubmit;\r\n            // Override the onsubmit function of the form.\r\n            parentNode.onsubmit = function(evt) {\r\n                element.value = getValue();\r\n                // If there is a onsubmit function already, then call\r\n                // it with the current context and pass the event.\r\n                if (oldSumit) {\r\n                    oldSumit.call(this, evt);\r\n                }\r\n            };\r\n            break;\r\n        }\r\n        parentNode = parentNode.parentNode;\r\n    }\r\n    return container;\r\n}\r\n\r\nexports.transformTextarea = function(element, options) {\r\n    var isFocused = element.autofocus || document.activeElement == element;\r\n    var session;\r\n    var container = setupContainer(element, function() {\r\n        return session.getValue();\r\n    });\r\n\r\n    // Hide the element.\r\n    element.style.display = 'none';\r\n    container.style.background = 'white';\r\n\r\n    //\r\n    var editorDiv = document.createElement(\"div\");\r\n    applyStyles(editorDiv, {\r\n        top: \"0px\",\r\n        left: \"0px\",\r\n        right: \"0px\",\r\n        bottom: \"0px\",\r\n        border: \"1px solid gray\",\r\n        position: \"absolute\"\r\n    });\r\n    container.appendChild(editorDiv);\r\n\r\n    var settingOpener = document.createElement(\"div\");\r\n    applyStyles(settingOpener, {\r\n        position: \"absolute\",\r\n        right: \"0px\",\r\n        bottom: \"0px\",\r\n        cursor: \"nw-resize\",\r\n        border: \"solid 9px\",\r\n        borderColor: \"lightblue gray gray #ceade6\",\r\n        zIndex: 101\r\n    });\r\n\r\n    var settingDiv = document.createElement(\"div\");\r\n    var settingDivStyles = {\r\n        top: \"0px\",\r\n        left: \"20%\",\r\n        right: \"0px\",\r\n        bottom: \"0px\",\r\n        position: \"absolute\",\r\n        padding: \"5px\",\r\n        zIndex: 100,\r\n        color: \"white\",\r\n        display: \"none\",\r\n        overflow: \"auto\",\r\n        fontSize: \"14px\",\r\n        boxShadow: \"-5px 2px 3px gray\"\r\n    };\r\n    if (!UA.isOldIE) {\r\n        settingDivStyles.backgroundColor = \"rgba(0, 0, 0, 0.6)\";\r\n    } else {\r\n        settingDivStyles.backgroundColor = \"#333\";\r\n    }\r\n\r\n    applyStyles(settingDiv, settingDivStyles);\r\n    container.appendChild(settingDiv);\r\n\r\n    options = options || exports.defaultOptions;\r\n    // Power up ace on the textarea:\r\n    var editor = ace.edit(editorDiv);\r\n    session = editor.getSession();\r\n\r\n    session.setValue(element.value || element.innerHTML);\r\n    if (isFocused)\r\n        editor.focus();\r\n\r\n    // Add the settingPanel opener to the editor's div.\r\n    container.appendChild(settingOpener);\r\n\r\n    // Create the API.\r\n    setupApi(editor, editorDiv, settingDiv, ace, options);\r\n\r\n    // Create the setting's panel.\r\n    setupSettingPanel(settingDiv, settingOpener, editor);\r\n\r\n    var state = \"\";\r\n    event.addListener(settingOpener, \"mousemove\", function(e) {\r\n        var rect = this.getBoundingClientRect();\r\n        var x = e.clientX - rect.left, y = e.clientY - rect.top;\r\n        if (x + y < (rect.width + rect.height)/2) {\r\n            this.style.cursor = \"pointer\";\r\n            state = \"toggle\";\r\n        } else {\r\n            state = \"resize\";\r\n            this.style.cursor = \"nw-resize\";\r\n        }\r\n    });\r\n\r\n    event.addListener(settingOpener, \"mousedown\", function(e) {\r\n        e.preventDefault();\r\n        if (state == \"toggle\") {\r\n            editor.setDisplaySettings();\r\n            return;\r\n        }\r\n        container.style.zIndex = 100000;\r\n        var rect = container.getBoundingClientRect();\r\n        var startX = rect.width  + rect.left - e.clientX;\r\n        var startY = rect.height  + rect.top - e.clientY;\r\n        event.capture(settingOpener, function(e) {\r\n            container.style.width = e.clientX - rect.left + startX + \"px\";\r\n            container.style.height = e.clientY - rect.top + startY + \"px\";\r\n            editor.resize();\r\n        }, function() {});\r\n    });\r\n\r\n    return editor;\r\n};\r\n\r\nfunction load(url, module, callback) {\r\n    net.loadScript(url, function() {\r\n        require([module], callback);\r\n    });\r\n}\r\n\r\nfunction setupApi(editor, editorDiv, settingDiv, ace, options) {\r\n    var session = editor.getSession();\r\n    var renderer = editor.renderer;\r\n\r\n    function toBool(value) {\r\n        return value === \"true\" || value == true;\r\n    }\r\n\r\n    editor.setDisplaySettings = function(display) {\r\n        if (display == null)\r\n            display = settingDiv.style.display == \"none\";\r\n        if (display) {\r\n            settingDiv.style.display = \"block\";\r\n            settingDiv.hideButton.focus();\r\n            editor.on(\"focus\", function onFocus() {\r\n                editor.removeListener(\"focus\", onFocus);\r\n                settingDiv.style.display = \"none\";\r\n            });\r\n        } else {\r\n            editor.focus();\r\n        }\r\n    };\r\n\r\n    editor.$setOption = editor.setOption;\r\n    editor.$getOption = editor.getOption;\r\n    editor.setOption = function(key, value) {\r\n        switch (key) {\r\n            case \"mode\":\r\n                editor.$setOption(\"mode\", \"ace/mode/\" + value);\r\n            break;\r\n            case \"theme\":\r\n                editor.$setOption(\"theme\", \"ace/theme/\" + value);\r\n            break;\r\n            case \"keybindings\":\r\n                switch (value) {\r\n                    case \"vim\":\r\n                        editor.setKeyboardHandler(\"ace/keyboard/vim\");\r\n                        break;\r\n                    case \"emacs\":\r\n                        editor.setKeyboardHandler(\"ace/keyboard/emacs\");\r\n                        break;\r\n                    default:\r\n                        editor.setKeyboardHandler(null);\r\n                }\r\n            break;\r\n\r\n            case \"wrap\":\r\n            case \"fontSize\":\r\n                editor.$setOption(key, value);\r\n            break;\r\n            \r\n            default:\r\n                editor.$setOption(key, toBool(value));\r\n        }\r\n    };\r\n\r\n    editor.getOption = function(key) {\r\n        switch (key) {\r\n            case \"mode\":\r\n                return editor.$getOption(\"mode\").substr(\"ace/mode/\".length);\r\n            break;\r\n\r\n            case \"theme\":\r\n                return editor.$getOption(\"theme\").substr(\"ace/theme/\".length);\r\n            break;\r\n\r\n            case \"keybindings\":\r\n                var value = editor.getKeyboardHandler();\r\n                switch (value && value.$id) {\r\n                    case \"ace/keyboard/vim\":\r\n                        return \"vim\";\r\n                    case \"ace/keyboard/emacs\":\r\n                        return \"emacs\";\r\n                    default:\r\n                        return \"ace\";\r\n                }\r\n            break;\r\n\r\n            default:\r\n                return editor.$getOption(key);\r\n        }\r\n    };\r\n\r\n    editor.setOptions(options);\r\n    return editor;\r\n}\r\n\r\nfunction setupSettingPanel(settingDiv, settingOpener, editor) {\r\n    var BOOL = null;\r\n\r\n    var desc = {\r\n        mode:            \"Mode:\",\r\n        wrap:            \"Soft Wrap:\",\r\n        theme:           \"Theme:\",\r\n        fontSize:        \"Font Size:\",\r\n        showGutter:      \"Display Gutter:\",\r\n        keybindings:     \"Keyboard\",\r\n        showPrintMargin: \"Show Print Margin:\",\r\n        useSoftTabs:     \"Use Soft Tabs:\",\r\n        showInvisibles:  \"Show Invisibles\"\r\n    };\r\n\r\n    var optionValues = {\r\n        mode: {\r\n            text:       \"Plain\",\r\n            javascript: \"JavaScript\",\r\n            xml:        \"XML\",\r\n            html:       \"HTML\",\r\n            css:        \"CSS\",\r\n            scss:       \"SCSS\",\r\n            python:     \"Python\",\r\n            php:        \"PHP\",\r\n            java:       \"Java\",\r\n            ruby:       \"Ruby\",\r\n            c_cpp:      \"C/C++\",\r\n            coffee:     \"CoffeeScript\",\r\n            json:       \"json\",\r\n            perl:       \"Perl\",\r\n            clojure:    \"Clojure\",\r\n            ocaml:      \"OCaml\",\r\n            csharp:     \"C#\",\r\n            haxe:       \"haXe\",\r\n            svg:        \"SVG\",\r\n            textile:    \"Textile\",\r\n            groovy:     \"Groovy\",\r\n            liquid:     \"Liquid\",\r\n            Scala:      \"Scala\"\r\n        },\r\n        theme: {\r\n            clouds:           \"Clouds\",\r\n            clouds_midnight:  \"Clouds Midnight\",\r\n            cobalt:           \"Cobalt\",\r\n            crimson_editor:   \"Crimson Editor\",\r\n            dawn:             \"Dawn\",\r\n            gob:              \"Green on Black\",\r\n            eclipse:          \"Eclipse\",\r\n            idle_fingers:     \"Idle Fingers\",\r\n            kr_theme:         \"Kr Theme\",\r\n            merbivore:        \"Merbivore\",\r\n            merbivore_soft:   \"Merbivore Soft\",\r\n            mono_industrial:  \"Mono Industrial\",\r\n            monokai:          \"Monokai\",\r\n            pastel_on_dark:   \"Pastel On Dark\",\r\n            solarized_dark:   \"Solarized Dark\",\r\n            solarized_light:  \"Solarized Light\",\r\n            textmate:         \"Textmate\",\r\n            twilight:         \"Twilight\",\r\n            vibrant_ink:      \"Vibrant Ink\"\r\n        },\r\n        showGutter: BOOL,\r\n        fontSize: {\r\n            \"10px\": \"10px\",\r\n            \"11px\": \"11px\",\r\n            \"12px\": \"12px\",\r\n            \"14px\": \"14px\",\r\n            \"16px\": \"16px\"\r\n        },\r\n        wrap: {\r\n            off:    \"Off\",\r\n            40:     \"40\",\r\n            80:     \"80\",\r\n            free:   \"Free\"\r\n        },\r\n        keybindings: {\r\n            ace: \"ace\",\r\n            vim: \"vim\",\r\n            emacs: \"emacs\"\r\n        },\r\n        showPrintMargin:    BOOL,\r\n        useSoftTabs:        BOOL,\r\n        showInvisibles:     BOOL\r\n    };\r\n\r\n    var table = [];\r\n    table.push(\"<table><tr><th>Setting</th><th>Value</th></tr>\");\r\n\r\n    function renderOption(builder, option, obj, cValue) {\r\n        if (!obj) {\r\n            builder.push(\r\n                \"<input type='checkbox' title='\", option, \"' \",\r\n                    cValue + \"\" == \"true\" ? \"checked='true'\" : \"\",\r\n               \"'></input>\"\r\n            );\r\n            return;\r\n        }\r\n        builder.push(\"<select title='\" + option + \"'>\");\r\n        for (var value in obj) {\r\n            builder.push(\"<option value='\" + value + \"' \");\r\n\r\n            if (cValue == value) {\r\n                builder.push(\" selected \");\r\n            }\r\n\r\n            builder.push(\">\",\r\n                obj[value],\r\n                \"</option>\");\r\n        }\r\n        builder.push(\"</select>\");\r\n    }\r\n\r\n    for (var option in exports.defaultOptions) {\r\n        table.push(\"<tr><td>\", desc[option], \"</td>\");\r\n        table.push(\"<td>\");\r\n        renderOption(table, option, optionValues[option], editor.getOption(option));\r\n        table.push(\"</td></tr>\");\r\n    }\r\n    table.push(\"</table>\");\r\n    settingDiv.innerHTML = table.join(\"\");\r\n\r\n    var onChange = function(e) {\r\n        var select = e.currentTarget;\r\n        editor.setOption(select.title, select.value);\r\n    };\r\n    var onClick = function(e) {\r\n        var cb = e.currentTarget;\r\n        editor.setOption(cb.title, cb.checked);\r\n    };\r\n    var selects = settingDiv.getElementsByTagName(\"select\");\r\n    for (var i = 0; i < selects.length; i++)\r\n        selects[i].onchange = onChange;\r\n    var cbs = settingDiv.getElementsByTagName(\"input\");\r\n    for (var i = 0; i < cbs.length; i++)\r\n        cbs[i].onclick = onClick;\r\n\r\n\r\n    var button = document.createElement(\"input\");\r\n    button.type = \"button\";\r\n    button.value = \"Hide\";\r\n    event.addListener(button, \"click\", function() {\r\n        editor.setDisplaySettings(false);\r\n    });\r\n    settingDiv.appendChild(button);\r\n    settingDiv.hideButton = button;\r\n}\r\n\r\n// Default startup options.\r\nexports.defaultOptions = {\r\n    mode:               \"javascript\",\r\n    theme:              \"textmate\",\r\n    wrap:               \"off\",\r\n    fontSize:           \"12px\",\r\n    showGutter:         \"false\",\r\n    keybindings:        \"ace\",\r\n    showPrintMargin:    \"false\",\r\n    useSoftTabs:        \"true\",\r\n    showInvisibles:     \"false\"\r\n};\r\n\r\n});\r\n"]}