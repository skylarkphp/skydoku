{"version":3,"sources":["ext/modelist.js"],"names":["define","require","exports","module","modes","Mode","name","caption","extensions","re","this","mode","test","replace","a","b","extRe","RegExp","prototype","supportsFile","filename","match","supportedModes","ABAP","ABC","ActionScript","ADA","Apache_Conf","AsciiDoc","ASL","Assembly_x86","AutoHotKey","Apex","BatchFile","Bro","C_Cpp","C9Search","Crystal","Cirru","Clojure","Cobol","coffee","ColdFusion","CSharp","Csound_Document","Csound_Orchestra","Csound_Score","CSS","Curly","D","Dart","Diff","Dockerfile","Dot","Drools","Edifact","Eiffel","EJS","Elixir","Elm","Erlang","Forth","Fortran","FSharp","FSL","FTL","Gcode","Gherkin","Gitignore","Glsl","Gobstones","golang","GraphQLSchema","Groovy","HAML","Handlebars","Haskell","Haskell_Cabal","haXe","Hjson","HTML","HTML_Elixir","HTML_Ruby","INI","Io","Jack","Jade","Java","JavaScript","JSON","JSONiq","JSP","JSSM","JSX","Julia","Kotlin","LaTeX","LESS","Liquid","Lisp","LiveScript","LogiQL","LSL","Lua","LuaPage","Lucene","Makefile","Markdown","Mask","MATLAB","Maze","MEL","MIXAL","MUSHCode","MySQL","Nginx","Nix","Nim","NSIS","ObjectiveC","OCaml","Pascal","Perl","Perl6","pgSQL","PHP_Laravel_blade","PHP","Puppet","Pig","Powershell","Praat","Prolog","Properties","Protobuf","Python","R","Razor","RDoc","Red","RHTML","RST","Ruby","Rust","SASS","SCAD","Scala","Scheme","SCSS","SH","SJS","Slim","Smarty","snippets","Soy_Template","Space","SQL","SQLServer","Stylus","SVG","Swift","Tcl","Terraform","Tex","Text","Textile","Toml","TSX","Twig","Typescript","Vala","VBScript","Velocity","Verilog","VHDL","Visualforce","Wollok","XML","XQuery","YAML","Django","nameOverrides","modesByName","data","displayName","toLowerCase","push","getModeForPath","path","text","fileName","split","pop","i","length"],"mappings":"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","file":"../../ext/modelist.js","sourcesContent":["define(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar modes = [];\r\n/**\r\n * Suggests a mode based on the file extension present in the given path\r\n * @param {string} path The path to the file\r\n * @returns {object} Returns an object containing information about the\r\n *  suggested mode.\r\n */\r\nfunction getModeForPath(path) {\r\n    var mode = modesByName.text;\r\n    var fileName = path.split(/[\\/\\\\]/).pop();\r\n    for (var i = 0; i < modes.length; i++) {\r\n        if (modes[i].supportsFile(fileName)) {\r\n            mode = modes[i];\r\n            break;\r\n        }\r\n    }\r\n    return mode;\r\n}\r\n\r\nvar Mode = function(name, caption, extensions) {\r\n    this.name = name;\r\n    this.caption = caption;\r\n    this.mode = \"ace/mode/\" + name;\r\n    this.extensions = extensions;\r\n    var re;\r\n    if (/\\^/.test(extensions)) {\r\n        re = extensions.replace(/\\|(\\^)?/g, function(a, b){\r\n            return \"$|\" + (b ? \"^\" : \"^.*\\\\.\");\r\n        }) + \"$\";\r\n    } else {\r\n        re = \"^.*\\\\.(\" + extensions + \")$\";\r\n    }\r\n\r\n    this.extRe = new RegExp(re, \"gi\");\r\n};\r\n\r\nMode.prototype.supportsFile = function(filename) {\r\n    return filename.match(this.extRe);\r\n};\r\n\r\n// todo firstlinematch\r\nvar supportedModes = {\r\n    ABAP:        [\"abap\"],\r\n    ABC:         [\"abc\"],\r\n    ActionScript:[\"as\"],\r\n    ADA:         [\"ada|adb\"],\r\n    Apache_Conf: [\"^htaccess|^htgroups|^htpasswd|^conf|htaccess|htgroups|htpasswd\"],\r\n    AsciiDoc:    [\"asciidoc|adoc\"],\r\n    ASL:         [\"dsl|asl\"],\r\n    Assembly_x86:[\"asm|a\"],\r\n    AutoHotKey:  [\"ahk\"],\r\n    Apex:        [\"apex|cls|trigger|tgr\"],\r\n    BatchFile:   [\"bat|cmd\"],\r\n    Bro:         [\"bro\"],\r\n    C_Cpp:       [\"cpp|c|cc|cxx|h|hh|hpp|ino\"],\r\n    C9Search:    [\"c9search_results\"],\r\n    Crystal:     [\"cr\"],\r\n    Cirru:       [\"cirru|cr\"],\r\n    Clojure:     [\"clj|cljs\"],\r\n    Cobol:       [\"CBL|COB\"],\r\n    coffee:      [\"coffee|cf|cson|^Cakefile\"],\r\n    ColdFusion:  [\"cfm\"],\r\n    CSharp:      [\"cs\"],\r\n    Csound_Document: [\"csd\"],\r\n    Csound_Orchestra: [\"orc\"],\r\n    Csound_Score: [\"sco\"],\r\n    CSS:         [\"css\"],\r\n    Curly:       [\"curly\"],\r\n    D:           [\"d|di\"],\r\n    Dart:        [\"dart\"],\r\n    Diff:        [\"diff|patch\"],\r\n    Dockerfile:  [\"^Dockerfile\"],\r\n    Dot:         [\"dot\"],\r\n    Drools:      [\"drl\"],\r\n    Edifact:     [\"edi\"],\r\n    Eiffel:      [\"e|ge\"],\r\n    EJS:         [\"ejs\"],\r\n    Elixir:      [\"ex|exs\"],\r\n    Elm:         [\"elm\"],\r\n    Erlang:      [\"erl|hrl\"],\r\n    Forth:       [\"frt|fs|ldr|fth|4th\"],\r\n    Fortran:     [\"f|f90\"],\r\n    FSharp:      [\"fsi|fs|ml|mli|fsx|fsscript\"],\r\n    FSL:         [\"fsl\"],\r\n    FTL:         [\"ftl\"],\r\n    Gcode:       [\"gcode\"],\r\n    Gherkin:     [\"feature\"],\r\n    Gitignore:   [\"^.gitignore\"],\r\n    Glsl:        [\"glsl|frag|vert\"],\r\n    Gobstones:   [\"gbs\"],\r\n    golang:      [\"go\"],\r\n    GraphQLSchema: [\"gql\"],\r\n    Groovy:      [\"groovy\"],\r\n    HAML:        [\"haml\"],\r\n    Handlebars:  [\"hbs|handlebars|tpl|mustache\"],\r\n    Haskell:     [\"hs\"],\r\n    Haskell_Cabal: [\"cabal\"],\r\n    haXe:        [\"hx\"],\r\n    Hjson:       [\"hjson\"],\r\n    HTML:        [\"html|htm|xhtml|vue|we|wpy\"],\r\n    HTML_Elixir: [\"eex|html.eex\"],\r\n    HTML_Ruby:   [\"erb|rhtml|html.erb\"],\r\n    INI:         [\"ini|conf|cfg|prefs\"],\r\n    Io:          [\"io\"],\r\n    Jack:        [\"jack\"],\r\n    Jade:        [\"jade|pug\"],\r\n    Java:        [\"java\"],\r\n    JavaScript:  [\"js|jsm|jsx\"],\r\n    JSON:        [\"json\"],\r\n    JSONiq:      [\"jq\"],\r\n    JSP:         [\"jsp\"],\r\n    JSSM:        [\"jssm|jssm_state\"],\r\n    JSX:         [\"jsx\"],\r\n    Julia:       [\"jl\"],\r\n    Kotlin:      [\"kt|kts\"],\r\n    LaTeX:       [\"tex|latex|ltx|bib\"],\r\n    LESS:        [\"less\"],\r\n    Liquid:      [\"liquid\"],\r\n    Lisp:        [\"lisp\"],\r\n    LiveScript:  [\"ls\"],\r\n    LogiQL:      [\"logic|lql\"],\r\n    LSL:         [\"lsl\"],\r\n    Lua:         [\"lua\"],\r\n    LuaPage:     [\"lp\"],\r\n    Lucene:      [\"lucene\"],\r\n    Makefile:    [\"^Makefile|^GNUmakefile|^makefile|^OCamlMakefile|make\"],\r\n    Markdown:    [\"md|markdown\"],\r\n    Mask:        [\"mask\"],\r\n    MATLAB:      [\"matlab\"],\r\n    Maze:        [\"mz\"],\r\n    MEL:         [\"mel\"],\r\n    MIXAL:       [\"mixal\"],\r\n    MUSHCode:    [\"mc|mush\"],\r\n    MySQL:       [\"mysql\"],\r\n    Nginx:       [\"nginx|conf\"],\r\n    Nix:         [\"nix\"],\r\n    Nim:         [\"nim\"],\r\n    NSIS:        [\"nsi|nsh\"],\r\n    ObjectiveC:  [\"m|mm\"],\r\n    OCaml:       [\"ml|mli\"],\r\n    Pascal:      [\"pas|p\"],\r\n    Perl:        [\"pl|pm\"],\r\n    Perl6:       [\"p6|pl6|pm6\"],\r\n    pgSQL:       [\"pgsql\"],\r\n    PHP_Laravel_blade: [\"blade.php\"],\r\n    PHP:         [\"php|inc|phtml|shtml|php3|php4|php5|phps|phpt|aw|ctp|module\"],\r\n    Puppet:      [\"epp|pp\"],\r\n    Pig:         [\"pig\"],\r\n    Powershell:  [\"ps1\"],\r\n    Praat:       [\"praat|praatscript|psc|proc\"],\r\n    Prolog:      [\"plg|prolog\"],\r\n    Properties:  [\"properties\"],\r\n    Protobuf:    [\"proto\"],\r\n    Python:      [\"py\"],\r\n    R:           [\"r\"],\r\n    Razor:       [\"cshtml|asp\"],\r\n    RDoc:        [\"Rd\"],\r\n    Red:         [\"red|reds\"],\r\n    RHTML:       [\"Rhtml\"],\r\n    RST:         [\"rst\"],\r\n    Ruby:        [\"rb|ru|gemspec|rake|^Guardfile|^Rakefile|^Gemfile\"],\r\n    Rust:        [\"rs\"],\r\n    SASS:        [\"sass\"],\r\n    SCAD:        [\"scad\"],\r\n    Scala:       [\"scala\"],\r\n    Scheme:      [\"scm|sm|rkt|oak|scheme\"],\r\n    SCSS:        [\"scss\"],\r\n    SH:          [\"sh|bash|^.bashrc\"],\r\n    SJS:         [\"sjs\"],\r\n    Slim:        [\"slim|skim\"],\r\n    Smarty:      [\"smarty|tpl\"],\r\n    snippets:    [\"snippets\"],\r\n    Soy_Template:[\"soy\"],\r\n    Space:       [\"space\"],\r\n    SQL:         [\"sql\"],\r\n    SQLServer:   [\"sqlserver\"],\r\n    Stylus:      [\"styl|stylus\"],\r\n    SVG:         [\"svg\"],\r\n    Swift:       [\"swift\"],\r\n    Tcl:         [\"tcl\"],\r\n    Terraform:   [\"tf\", \"tfvars\", \"terragrunt\"],\r\n    Tex:         [\"tex\"],\r\n    Text:        [\"txt\"],\r\n    Textile:     [\"textile\"],\r\n    Toml:        [\"toml\"],\r\n    TSX:         [\"tsx\"],\r\n    Twig:        [\"latte|twig|swig\"],\r\n    Typescript:  [\"ts|typescript|str\"],\r\n    Vala:        [\"vala\"],\r\n    VBScript:    [\"vbs|vb\"],\r\n    Velocity:    [\"vm\"],\r\n    Verilog:     [\"v|vh|sv|svh\"],\r\n    VHDL:        [\"vhd|vhdl\"],\r\n    Visualforce: [\"vfp|component|page\"],\r\n    Wollok:      [\"wlk|wpgm|wtest\"],\r\n    XML:         [\"xml|rdf|rss|wsdl|xslt|atom|mathml|mml|xul|xbl|xaml\"],\r\n    XQuery:      [\"xq\"],\r\n    YAML:        [\"yaml|yml\"],\r\n    // Add the missing mode \"Django\" to ext-modelist\r\n    Django:      [\"html\"]\r\n};\r\n\r\nvar nameOverrides = {\r\n    ObjectiveC: \"Objective-C\",\r\n    CSharp: \"C#\",\r\n    golang: \"Go\",\r\n    C_Cpp: \"C and C++\",\r\n    Csound_Document: \"Csound Document\",\r\n    Csound_Orchestra: \"Csound\",\r\n    Csound_Score: \"Csound Score\",\r\n    coffee: \"CoffeeScript\",\r\n    HTML_Ruby: \"HTML (Ruby)\",\r\n    HTML_Elixir: \"HTML (Elixir)\",\r\n    FTL: \"FreeMarker\",\r\n    PHP_Laravel_blade: \"PHP (Blade Template)\",\r\n    Perl6: \"Perl 6\",\r\n    AutoHotKey: \"AutoHotkey / AutoIt\"\r\n};\r\nvar modesByName = {};\r\nfor (var name in supportedModes) {\r\n    var data = supportedModes[name];\r\n    var displayName = (nameOverrides[name] || name).replace(/_/g, \" \");\r\n    var filename = name.toLowerCase();\r\n    var mode = new Mode(filename, displayName, data[0]);\r\n    modesByName[filename] = mode;\r\n    modes.push(mode);\r\n}\r\n\r\nmodule.exports = {\r\n    getModeForPath: getModeForPath,\r\n    modes: modes,\r\n    modesByName: modesByName\r\n};\r\n\r\n});\r\n"]}