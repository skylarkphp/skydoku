{"version":3,"sources":["ext/spellcheck.js"],"names":["define","require","exports","module","event","contextMenuHandler","e","host","target","text","textInput","getElement","selection","isEmpty","c","getCursorPosition","r","session","getWordRange","row","column","w","getTextRange","tokenRe","lastIndex","test","value","setSelectionRange","length","afterKeydown","addListener","onKeydown","removeListener","setInputHandler","newVal","console","log","selectionStart","selectionEnd","lastIndexOf","slice","substr","val","substring","replace","Editor","defineOptions","prototype","spellcheck","set","this","on"],"mappings":";;;;;;;AAAAA,OAAO,SAASC,EAASC,EAASC,GAClC,aACA,IAAIC,EAAQH,EAAQ,gBAEpBC,EAAQG,mBAAqB,SAASC,GAClC,IAAIC,EAAOD,EAAEE,OACTC,EAAOF,EAAKG,UAAUC,aAC1B,GAAKJ,EAAKK,UAAUC,UAApB,CAEA,IAAIC,EAAIP,EAAKQ,oBACTC,EAAIT,EAAKU,QAAQC,aAAaJ,EAAEK,IAAKL,EAAEM,QACvCC,EAAId,EAAKU,QAAQK,aAAaN,GAGlC,GADAT,EAAKU,QAAQM,QAAQC,UAAY,EAC5BjB,EAAKU,QAAQM,QAAQE,KAAKJ,GAA/B,CAEA,IACIK,EAAQL,EAAI,MAChBZ,EAAKiB,MAAQA,EACbjB,EAAKkB,kBAAkBN,EAAEO,OAAQP,EAAEO,OAAS,GAC5CnB,EAAKkB,kBAAkB,EAAG,GAC1BlB,EAAKkB,kBAAkB,EAAGN,EAAEO,QAE5B,IAAIC,GAAe,EACnBzB,EAAM0B,YAAYrB,EAAM,UAAW,SAASsB,IACxC3B,EAAM4B,eAAevB,EAAM,UAAWsB,GACtCF,GAAe,IAGnBtB,EAAKG,UAAUuB,gBAAgB,SAASC,GAEpC,GADAC,QAAQC,IAAIF,EAASR,EAAOjB,EAAK4B,eAAgB5B,EAAK6B,cAClDJ,GAAUR,EACV,MAAO,GACX,GAAqC,IAAjCQ,EAAOK,YAAYb,EAAO,GAC1B,OAAOQ,EAAOM,MAAMd,EAAME,QAC9B,GAAIM,EAAOO,OAAOhC,EAAK6B,eAAiBZ,EACpC,OAAOQ,EAAOM,MAAM,GAAId,EAAME,QAClC,GArBc,MAqBVM,EAAOM,OAAO,GAAmB,CACjC,IAAIE,EAAMR,EAAOM,MAAM,GAAI,GAC3B,GAAqB,KAAjBE,EAAIF,OAAO,GACX,OAAIX,EACOa,EAAIC,UAAU,EAAGlC,EAAK6B,eACjCI,EAAMA,EAAIF,MAAM,GAAI,GACpBjC,EAAKU,QAAQ2B,QAAQ5B,EAAG0B,GACjB,IAIf,OAAOR,OAIf,IAAIW,EAAS5C,EAAQ,aAAa4C,OAClC5C,EAAQ,aAAa6C,cAAcD,EAAOE,UAAW,UACjDC,YACIC,IAAK,SAASP,GACCQ,KAAKxC,UAAUC,aACrBqC,aAAeN,EACfA,EAGDQ,KAAKC,GAAG,oBAAqBjD,EAAQG,oBAFrC6C,KAAKlB,eAAe,oBAAqB9B,EAAQG,qBAIzDqB,OAAO","file":"../../ext/spellcheck.js","sourcesContent":["define(function(require, exports, module) {\r\n\"use strict\";\r\nvar event = require(\"../lib/event\");\r\n\r\nexports.contextMenuHandler = function(e){\r\n    var host = e.target;\r\n    var text = host.textInput.getElement();\r\n    if (!host.selection.isEmpty())\r\n        return;\r\n    var c = host.getCursorPosition();\r\n    var r = host.session.getWordRange(c.row, c.column);\r\n    var w = host.session.getTextRange(r);\r\n\r\n    host.session.tokenRe.lastIndex = 0;\r\n    if (!host.session.tokenRe.test(w))\r\n        return;\r\n    var PLACEHOLDER = \"\\x01\\x01\";\r\n    var value = w + \" \" + PLACEHOLDER;\r\n    text.value = value;\r\n    text.setSelectionRange(w.length, w.length + 1);\r\n    text.setSelectionRange(0, 0);\r\n    text.setSelectionRange(0, w.length);\r\n\r\n    var afterKeydown = false;\r\n    event.addListener(text, \"keydown\", function onKeydown() {\r\n        event.removeListener(text, \"keydown\", onKeydown);\r\n        afterKeydown = true;\r\n    });\r\n\r\n    host.textInput.setInputHandler(function(newVal) {\r\n        console.log(newVal , value, text.selectionStart, text.selectionEnd);\r\n        if (newVal == value)\r\n            return '';\r\n        if (newVal.lastIndexOf(value, 0) === 0)\r\n            return newVal.slice(value.length);\r\n        if (newVal.substr(text.selectionEnd) == value)\r\n            return newVal.slice(0, -value.length);\r\n        if (newVal.slice(-2) == PLACEHOLDER) {\r\n            var val = newVal.slice(0, -2);\r\n            if (val.slice(-1) == \" \") {\r\n                if (afterKeydown)\r\n                    return val.substring(0, text.selectionEnd);\r\n                val = val.slice(0, -1);\r\n                host.session.replace(r, val);\r\n                return \"\";\r\n            }\r\n        }\r\n\r\n        return newVal;\r\n    });\r\n};\r\n// todo support highlighting with typo.js\r\nvar Editor = require(\"../editor\").Editor;\r\nrequire(\"../config\").defineOptions(Editor.prototype, \"editor\", {\r\n    spellcheck: {\r\n        set: function(val) {\r\n            var text = this.textInput.getElement();\r\n            text.spellcheck = !!val;\r\n            if (!val)\r\n                this.removeListener(\"nativecontextmenu\", exports.contextMenuHandler);\r\n            else\r\n                this.on(\"nativecontextmenu\", exports.contextMenuHandler);\r\n        },\r\n        value: true\r\n    }\r\n});\r\n\r\n});\r\n\r\n"]}