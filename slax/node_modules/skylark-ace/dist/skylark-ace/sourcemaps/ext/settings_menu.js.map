{"version":3,"sources":["ext/settings_menu.js"],"names":["define","require","exports","module","OptionPanel","overlayPage","init","editor","Editor","prototype","showSettingsMenu","document","getElementById","options","render","container","id","querySelector","focus","this"],"mappings":";;;;;;;AA6CAA,OAAO,SAASC,EAASC,EAASC,GAClC,aACA,IAAIC,EAAcH,EAAQ,mBAAmBG,YACzCC,EAAcJ,EAAQ,6BAA6BI,YAyBvDF,EAAOD,QAAQI,KAAO,SAASC,GACdN,EAAQ,cAAcO,OAC5BC,UAAUC,iBAAmB,YAnBxC,SAA0BH,GAEtB,IAAKI,SAASC,eAAe,oBAAqB,CAC9C,IAAIC,EAAU,IAAIT,EAAYG,GAC9BM,EAAQC,SACRD,EAAQE,UAAUC,GAAK,mBACvBX,EAAYE,EAAQM,EAAQE,UAAW,IAAK,IAAK,KACjDF,EAAQE,UAAUE,cAAc,gCAAgCC,SAahER,CAAiBS","file":"../../ext/settings_menu.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2013 Matthew Christopher Kastor-Inare III, Atropa Inc. Intl\r\n * All rights reserved.\r\n *\r\n * Contributed to Ajax.org under the BSD license.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\n/*jslint indent: 4, maxerr: 50, white: true, browser: true, vars: true*/\r\n/*global define, require */\r\n\r\n/**\r\n * Show Settings Menu\r\n * @fileOverview Show Settings Menu <br />\r\n * Displays an interactive settings menu mostly generated on the fly based on\r\n *  the current state of the editor.\r\n * @author <a href=\"mailto:matthewkastor@gmail.com\">\r\n *  Matthew Christopher Kastor-Inare III </a><br />\r\n *  ☭ Hial Atropa!! ☭\r\n */\r\n\r\ndefine(function(require, exports, module) {\r\n\"use strict\";\r\nvar OptionPanel = require(\"ace/ext/options\").OptionPanel;\r\nvar overlayPage = require('./menu_tools/overlay_page').overlayPage;\r\n/**\r\n * This displays the settings menu if it is not already being shown.\r\n * @author <a href=\"mailto:matthewkastor@gmail.com\">\r\n *  Matthew Christopher Kastor-Inare III </a><br />\r\n *  ☭ Hial Atropa!! ☭\r\n * @param {ace.Editor} editor An instance of the ace editor.\r\n */\r\nfunction showSettingsMenu(editor) {\r\n    // show if the menu isn't open already.\r\n    if (!document.getElementById('ace_settingsmenu')) {\r\n        var options = new OptionPanel(editor);\r\n        options.render();\r\n        options.container.id = \"ace_settingsmenu\";\r\n        overlayPage(editor, options.container, '0', '0', '0');\r\n        options.container.querySelector(\"select,input,button,checkbox\").focus();\r\n    }\r\n}\r\n\r\n/**\r\n * Initializes the settings menu extension. It adds the showSettingsMenu\r\n *  method to the given editor object and adds the showSettingsMenu command\r\n *  to the editor with appropriate keyboard shortcuts.\r\n * @param {ace.Editor} editor An instance of the Editor.\r\n */\r\nmodule.exports.init = function(editor) {\r\n    var Editor = require(\"ace/editor\").Editor;\r\n    Editor.prototype.showSettingsMenu = function() {\r\n        showSettingsMenu(this);\r\n    };\r\n};\r\n});"]}