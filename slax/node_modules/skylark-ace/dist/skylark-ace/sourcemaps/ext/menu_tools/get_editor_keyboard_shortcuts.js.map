{"version":3,"sources":["ext/menu_tools/get_editor_keyboard_shortcuts.js"],"names":["define","require","exports","module","keys","getEditorKeybordShortcuts","editor","KEY_MODS","keybindings","commandMap","keyBinding","$handlers","forEach","handler","ckb","commandKeyBinding","i","key","replace","x","toUpperCase","commands","Array","isArray","command","name","push"],"mappings":";;;;;;;AA4CAA,OAAO,SAASC,EAASC,EAASC,GAClC,aACA,IAAIC,EAAOH,EAAQ,kBAkBnBE,EAAOD,QAAQG,0BAA4B,SAASC,GACjCF,EAAKG,SAApB,IACIC,KACAC,KAoBJ,OAnBAH,EAAOI,WAAWC,UAAUC,QAAQ,SAASC,GACzC,IAAIC,EAAMD,EAAQE,kBAClB,IAAK,IAAIC,KAAKF,EAAK,CACf,IAAIG,EAAMD,EAAEE,QAAQ,WAAY,SAASC,GAAK,OAAOA,EAAEC,gBACnDC,EAAWP,EAAIE,GACdM,MAAMC,QAAQF,KACfA,GAAYA,IAChBA,EAAST,QAAQ,SAASY,GACA,iBAAXA,IACPA,EAAWA,EAAQC,MACnBhB,EAAWe,GACXf,EAAWe,GAASP,KAAO,IAAMA,GAEjCR,EAAWe,IAAYP,IAAKA,EAAKO,QAASA,GAC1ChB,EAAYkB,KAAKjB,EAAWe,UAKrChB","file":"../../../ext/menu_tools/get_editor_keyboard_shortcuts.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2013 Matthew Christopher Kastor-Inare III, Atropa Inc. Intl\r\n * All rights reserved.\r\n *\r\n * Contributed to Ajax.org under the BSD license.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\n/*jslint indent: 4, maxerr: 50, white: true, browser: true, vars: true*/\r\n/*global define, require */\r\n\r\n/**\r\n * Get Editor Keyboard Shortcuts\r\n * @fileOverview Get Editor Keyboard Shortcuts <br />\r\n * Gets a map of keyboard shortcuts to command names for the current platform.\r\n * @author <a href=\"mailto:matthewkastor@gmail.com\">\r\n *  Matthew Christopher Kastor-Inare III </a><br />\r\n *  ☭ Hial Atropa!! ☭\r\n */\r\n\r\ndefine(function(require, exports, module) {\r\n\"use strict\";\r\nvar keys = require(\"../../lib/keys\");\r\n\r\n/**\r\n * Gets a map of keyboard shortcuts to command names for the current platform.\r\n * @author <a href=\"mailto:matthewkastor@gmail.com\">\r\n *  Matthew Christopher Kastor-Inare III </a><br />\r\n *  ☭ Hial Atropa!! ☭\r\n * @param {ace.Editor} editor An editor instance.\r\n * @returns {Array} Returns an array of objects representing the keyboard\r\n *  shortcuts for the given editor.\r\n * @example\r\n * var getKbShortcuts = require('./get_keyboard_shortcuts');\r\n * console.log(getKbShortcuts(editor));\r\n * // [\r\n * //     {'command' : aCommand, 'key' : 'Control-d'},\r\n * //     {'command' : aCommand, 'key' : 'Control-d'}\r\n * // ]\r\n */\r\nmodule.exports.getEditorKeybordShortcuts = function(editor) {\r\n    var KEY_MODS = keys.KEY_MODS;\r\n    var keybindings = [];\r\n    var commandMap = {};\r\n    editor.keyBinding.$handlers.forEach(function(handler) {\r\n        var ckb = handler.commandKeyBinding;\r\n        for (var i in ckb) {\r\n            var key = i.replace(/(^|-)\\w/g, function(x) { return x.toUpperCase(); });\r\n            var commands = ckb[i];\r\n            if (!Array.isArray(commands))\r\n                commands = [commands];\r\n            commands.forEach(function(command) {\r\n                if (typeof command != \"string\")\r\n                    command  = command.name;\r\n                if (commandMap[command]) {\r\n                    commandMap[command].key += \"|\" + key;\r\n                } else {\r\n                    commandMap[command] = {key: key, command: command};\r\n                    keybindings.push(commandMap[command]);\r\n                }         \r\n            });\r\n        }\r\n    });\r\n    return keybindings;\r\n};\r\n\r\n});"]}