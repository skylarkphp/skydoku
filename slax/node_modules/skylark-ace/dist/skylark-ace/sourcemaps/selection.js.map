{"version":3,"sources":["selection.js"],"names":["define","require","exports","module","oop","lang","EventEmitter","Range","Selection","session","this","doc","getDocument","clearSelection","cursor","lead","createAnchor","anchor","$silent","self","on","e","$cursorChanged","_emit","$isEmpty","$keepDesiredColumnOnChange","old","column","value","$desiredColumn","$anchorChanged","implement","isEmpty","row","isMultiLine","getCursor","getPosition","setSelectionAnchor","setPosition","getAnchor","getSelectionAnchor","getSelectionLead","isBackwards","getRange","fromPoints","selectAll","$setSelection","Number","MAX_VALUE","setRange","setSelectionRange","range","reverse","start","end","anchorRow","anchorColumn","cursorRow","cursorColumn","wasEmpty","wasMultiselect","inMultiSelectMode","comparePoints","$moveSelection","mover","call","selectTo","moveCursorTo","selectToPosition","pos","moveCursorToPosition","moveTo","moveToPosition","selectUp","moveCursorUp","selectDown","moveCursorDown","selectRight","moveCursorRight","selectLeft","moveCursorLeft","selectLineStart","moveCursorLineStart","selectLineEnd","moveCursorLineEnd","selectFileEnd","moveCursorFileEnd","selectFileStart","moveCursorFileStart","selectWordRight","moveCursorWordRight","selectWordLeft","moveCursorWordLeft","getWordRange","selectWord","selectAWord","getAWordRange","getLineRange","excludeLastChar","rowEnd","rowStart","foldLine","getFoldLine","getLine","length","selectLine","moveCursorBy","wouldMoveIntoSoftTab","tabSize","direction","isTabStop","slice","split","fold","getFoldAt","getTabSize","getNavigateWithinSoftTabs","getLength","screenRow","documentToScreenRow","firstColumnPosition","screenToDocumentPosition","leadingSpace","getDisplayLine","match","$useEmacsStyleLineStart","lineEnd","getDocumentLastRowColumnPosition","line","textEnd","search","moveCursorLongWordRight","rightOfCursor","substring","nonTokenRe","lastIndex","tokenRe","exec","moveCursorLongWordLeft","str","getFoldStringAt","leftOfCursor","stringReverse","$shortWordEndIndex","ch","index","whitespaceRe","test","moveCursorShortWordRight","l","moveCursorShortWordLeft","$selectLongWords","rows","chars","offsetX","screenPos","documentToScreenPosition","$bidiHandler","isBidiRow","getPosLeft","Math","round","charWidths","docPos","lineWidgets","position","keepDesiredColumn","charAt","moveCursorToScreen","detach","fromOrientedRange","desiredColumn","toOrientedRange","r","getRangeOfMovements","func","toJSON","rangeCount","data","ranges","map","r1","clone","fromJSON","undefined","rangeList","toSingleRange","i","addRange","isEqual","prototype"],"mappings":"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","file":"../selection.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2010, Ajax.org B.V.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\ndefine(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"./lib/oop\");\r\nvar lang = require(\"./lib/lang\");\r\nvar EventEmitter = require(\"./lib/event_emitter\").EventEmitter;\r\nvar Range = require(\"./range\").Range;\r\n\r\n/**\r\n * Contains the cursor position and the text selection of an edit session.\r\n *\r\n * The row/columns used in the selection are in document coordinates representing the coordinates as they appear in the document before applying soft wrap and folding.\r\n * @class Selection\r\n **/\r\n\r\n\r\n/**\r\n * Emitted when the cursor position changes.\r\n * @event changeCursor\r\n *\r\n **/\r\n/**\r\n * Emitted when the cursor selection changes.\r\n * \r\n *  @event changeSelection\r\n **/\r\n/**\r\n * Creates a new `Selection` object.\r\n * @param {EditSession} session The session to use\r\n * \r\n * @constructor\r\n **/\r\nvar Selection = function(session) {\r\n    this.session = session;\r\n    this.doc = session.getDocument();\r\n\r\n    this.clearSelection();\r\n    this.cursor = this.lead = this.doc.createAnchor(0, 0);\r\n    this.anchor = this.doc.createAnchor(0, 0);\r\n    this.$silent = false;\r\n\r\n    var self = this;\r\n    this.cursor.on(\"change\", function(e) {\r\n        self.$cursorChanged = true;\r\n        if (!self.$silent)\r\n            self._emit(\"changeCursor\");\r\n        if (!self.$isEmpty && !self.$silent)\r\n            self._emit(\"changeSelection\");\r\n        if (!self.$keepDesiredColumnOnChange && e.old.column != e.value.column)\r\n            self.$desiredColumn = null;\r\n    });\r\n\r\n    this.anchor.on(\"change\", function() {\r\n        self.$anchorChanged = true;\r\n        if (!self.$isEmpty && !self.$silent)\r\n            self._emit(\"changeSelection\");\r\n    });\r\n};\r\n\r\n(function() {\r\n\r\n    oop.implement(this, EventEmitter);\r\n\r\n    /**\r\n     * Returns `true` if the selection is empty.\r\n     * @returns {Boolean}\r\n     **/\r\n    this.isEmpty = function() {\r\n        return this.$isEmpty || (\r\n            this.anchor.row == this.lead.row &&\r\n            this.anchor.column == this.lead.column\r\n        );\r\n    };\r\n\r\n    /**\r\n     * Returns `true` if the selection is a multi-line.\r\n     * @returns {Boolean}\r\n     **/\r\n    this.isMultiLine = function() {\r\n        return !this.$isEmpty && this.anchor.row != this.cursor.row;\r\n    };\r\n\r\n    /**\r\n     * Returns an object containing the `row` and `column` current position of the cursor.\r\n     * @returns {Object}\r\n     **/\r\n    this.getCursor = function() {\r\n        return this.lead.getPosition();\r\n    };\r\n\r\n    /**\r\n     * Sets the row and column position of the anchor. This function also emits the `'changeSelection'` event.\r\n     * @param {Number} row The new row\r\n     * @param {Number} column The new column\r\n     *\r\n     **/\r\n    this.setSelectionAnchor = function(row, column) {\r\n        this.$isEmpty = false;\r\n        this.anchor.setPosition(row, column);\r\n    };\r\n\r\n    /**\r\n     * Returns an object containing the `row` and `column` of the calling selection anchor.\r\n     *\r\n     * @returns {Object}\r\n     * @related Anchor.getPosition\r\n     **/\r\n    this.getAnchor = \r\n    this.getSelectionAnchor = function() {\r\n        if (this.$isEmpty)\r\n            return this.getSelectionLead();\r\n        \r\n        return this.anchor.getPosition();\r\n    };\r\n\r\n    /**\r\n     * Returns an object containing the `row` and `column` of the calling selection lead.\r\n     * @returns {Object}\r\n     **/\r\n    this.getSelectionLead = function() {\r\n        return this.lead.getPosition();\r\n    };\r\n\r\n    /**\r\n     * Returns `true` if the selection is going backwards in the document.\r\n     * @returns {Boolean}\r\n     **/\r\n    this.isBackwards = function() {\r\n        var anchor = this.anchor;\r\n        var lead = this.lead;\r\n        return (anchor.row > lead.row || (anchor.row == lead.row && anchor.column > lead.column));\r\n    };\r\n\r\n    /**\r\n     * [Returns the [[Range]] for the selected text.]{: #Selection.getRange}\r\n     * @returns {Range}\r\n     **/\r\n    this.getRange = function() {\r\n        var anchor = this.anchor;\r\n        var lead = this.lead;\r\n\r\n        if (this.$isEmpty)\r\n            return Range.fromPoints(lead, lead);\r\n\r\n        return this.isBackwards()\r\n            ? Range.fromPoints(lead, anchor)\r\n            : Range.fromPoints(anchor, lead);\r\n    };\r\n\r\n    /**\r\n     * [Empties the selection (by de-selecting it). This function also emits the `'changeSelection'` event.]{: #Selection.clearSelection}\r\n     **/\r\n    this.clearSelection = function() {\r\n        if (!this.$isEmpty) {\r\n            this.$isEmpty = true;\r\n            this._emit(\"changeSelection\");\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Selects all the text in the document.\r\n     **/\r\n    this.selectAll = function() {\r\n        this.$setSelection(0, 0, Number.MAX_VALUE, Number.MAX_VALUE);\r\n    };\r\n\r\n    /**\r\n     * Sets the selection to the provided range.\r\n     * @param {Range} range The range of text to select\r\n     * @param {Boolean} reverse Indicates if the range should go backwards (`true`) or not\r\n     *\r\n     * @method setSelectionRange\r\n     * @alias setRange\r\n     **/\r\n    this.setRange =\r\n    this.setSelectionRange = function(range, reverse) {\r\n        var start = reverse ? range.end : range.start;\r\n        var end = reverse ? range.start : range.end;\r\n        this.$setSelection(start.row, start.column, end.row, end.column);\r\n    };\r\n\r\n    this.$setSelection = function(anchorRow, anchorColumn, cursorRow, cursorColumn) {\r\n        var wasEmpty = this.$isEmpty;\r\n        var wasMultiselect = this.inMultiSelectMode;\r\n        this.$silent = true;\r\n        this.$cursorChanged = this.$anchorChanged = false;\r\n        this.anchor.setPosition(anchorRow, anchorColumn);\r\n        this.cursor.setPosition(cursorRow, cursorColumn);\r\n        this.$isEmpty = !Range.comparePoints(this.anchor, this.cursor);\r\n        this.$silent = false;\r\n        if (this.$cursorChanged)\r\n            this._emit(\"changeCursor\");\r\n        if (this.$cursorChanged || this.$anchorChanged || wasEmpty != this.$isEmpty || wasMultiselect)\r\n            this._emit(\"changeSelection\");\r\n    };\r\n\r\n    this.$moveSelection = function(mover) {\r\n        var lead = this.lead;\r\n        if (this.$isEmpty)\r\n            this.setSelectionAnchor(lead.row, lead.column);\r\n\r\n        mover.call(this);\r\n    };\r\n\r\n    /**\r\n     * Moves the selection cursor to the indicated row and column.\r\n     * @param {Number} row The row to select to\r\n     * @param {Number} column The column to select to\r\n     **/\r\n    this.selectTo = function(row, column) {\r\n        this.$moveSelection(function() {\r\n            this.moveCursorTo(row, column);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Moves the selection cursor to the row and column indicated by `pos`.\r\n     * @param {Object} pos An object containing the row and column\r\n     **/\r\n    this.selectToPosition = function(pos) {\r\n        this.$moveSelection(function() {\r\n            this.moveCursorToPosition(pos);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Moves the selection cursor to the indicated row and column.\r\n     * @param {Number} row The row to select to\r\n     * @param {Number} column The column to select to\r\n     *\r\n     **/\r\n    this.moveTo = function(row, column) {\r\n        this.clearSelection();\r\n        this.moveCursorTo(row, column);\r\n    };\r\n\r\n    /**\r\n     * Moves the selection cursor to the row and column indicated by `pos`.\r\n     * @param {Object} pos An object containing the row and column\r\n     **/\r\n    this.moveToPosition = function(pos) {\r\n        this.clearSelection();\r\n        this.moveCursorToPosition(pos);\r\n    };\r\n\r\n\r\n    /**\r\n     * Moves the selection up one row.\r\n     **/\r\n    this.selectUp = function() {\r\n        this.$moveSelection(this.moveCursorUp);\r\n    };\r\n\r\n    /**\r\n     * Moves the selection down one row.\r\n     **/\r\n    this.selectDown = function() {\r\n        this.$moveSelection(this.moveCursorDown);\r\n    };\r\n\r\n    /**\r\n     * Moves the selection right one column.\r\n     **/\r\n    this.selectRight = function() {\r\n        this.$moveSelection(this.moveCursorRight);\r\n    };\r\n\r\n    /**\r\n     * Moves the selection left one column.\r\n     **/\r\n    this.selectLeft = function() {\r\n        this.$moveSelection(this.moveCursorLeft);\r\n    };\r\n\r\n    /**\r\n     * Moves the selection to the beginning of the current line.\r\n     **/\r\n    this.selectLineStart = function() {\r\n        this.$moveSelection(this.moveCursorLineStart);\r\n    };\r\n\r\n    /**\r\n     * Moves the selection to the end of the current line.\r\n     **/\r\n    this.selectLineEnd = function() {\r\n        this.$moveSelection(this.moveCursorLineEnd);\r\n    };\r\n\r\n    /**\r\n     * Moves the selection to the end of the file.\r\n     **/\r\n    this.selectFileEnd = function() {\r\n        this.$moveSelection(this.moveCursorFileEnd);\r\n    };\r\n\r\n    /**\r\n     * Moves the selection to the start of the file.\r\n     **/\r\n    this.selectFileStart = function() {\r\n        this.$moveSelection(this.moveCursorFileStart);\r\n    };\r\n\r\n    /**\r\n     * Moves the selection to the first word on the right.\r\n     **/\r\n    this.selectWordRight = function() {\r\n        this.$moveSelection(this.moveCursorWordRight);\r\n    };\r\n\r\n    /**\r\n     * Moves the selection to the first word on the left.\r\n     **/\r\n    this.selectWordLeft = function() {\r\n        this.$moveSelection(this.moveCursorWordLeft);\r\n    };\r\n\r\n    /**\r\n     * Moves the selection to highlight the entire word.\r\n     * @related EditSession.getWordRange\r\n     **/\r\n    this.getWordRange = function(row, column) {\r\n        if (typeof column == \"undefined\") {\r\n            var cursor = row || this.lead;\r\n            row = cursor.row;\r\n            column = cursor.column;\r\n        }\r\n        return this.session.getWordRange(row, column);\r\n    };\r\n\r\n    /**\r\n     * Selects an entire word boundary.\r\n     **/\r\n    this.selectWord = function() {\r\n        this.setSelectionRange(this.getWordRange());\r\n    };\r\n\r\n    /**\r\n     * Selects a word, including its right whitespace.\r\n     * @related EditSession.getAWordRange\r\n     **/\r\n    this.selectAWord = function() {\r\n        var cursor = this.getCursor();\r\n        var range = this.session.getAWordRange(cursor.row, cursor.column);\r\n        this.setSelectionRange(range);\r\n    };\r\n\r\n    this.getLineRange = function(row, excludeLastChar) {\r\n        var rowStart = typeof row == \"number\" ? row : this.lead.row;\r\n        var rowEnd;\r\n\r\n        var foldLine = this.session.getFoldLine(rowStart);\r\n        if (foldLine) {\r\n            rowStart = foldLine.start.row;\r\n            rowEnd = foldLine.end.row;\r\n        } else {\r\n            rowEnd = rowStart;\r\n        }\r\n        if (excludeLastChar === true)\r\n            return new Range(rowStart, 0, rowEnd, this.session.getLine(rowEnd).length);\r\n        else\r\n            return new Range(rowStart, 0, rowEnd + 1, 0);\r\n    };\r\n\r\n    /**\r\n     * Selects the entire line.\r\n     **/\r\n    this.selectLine = function() {\r\n        this.setSelectionRange(this.getLineRange());\r\n    };\r\n\r\n    /**\r\n     * Moves the cursor up one row.\r\n     **/\r\n    this.moveCursorUp = function() {\r\n        this.moveCursorBy(-1, 0);\r\n    };\r\n\r\n    /**\r\n     * Moves the cursor down one row.\r\n     **/\r\n    this.moveCursorDown = function() {\r\n        this.moveCursorBy(1, 0);\r\n    };\r\n\r\n    /**\r\n     *\r\n     * Returns `true` if moving the character next to the cursor in the specified direction is a soft tab.\r\n     * @param {Object} cursor the current cursor position\r\n     * @param {Number} tabSize the tab size\r\n     * @param {Number} direction 1 for right, -1 for left\r\n     */\r\n    this.wouldMoveIntoSoftTab = function(cursor, tabSize, direction) {\r\n        var start = cursor.column;\r\n        var end = cursor.column + tabSize;\r\n\r\n        if (direction < 0) {\r\n            start = cursor.column - tabSize;\r\n            end = cursor.column;\r\n        }\r\n        return this.session.isTabStop(cursor) && this.doc.getLine(cursor.row).slice(start, end).split(\" \").length-1 == tabSize;\r\n    };\r\n\r\n    /**\r\n     * Moves the cursor left one column.\r\n     **/\r\n    this.moveCursorLeft = function() {\r\n        var cursor = this.lead.getPosition(),\r\n            fold;\r\n\r\n        if (fold = this.session.getFoldAt(cursor.row, cursor.column, -1)) {\r\n            this.moveCursorTo(fold.start.row, fold.start.column);\r\n        } else if (cursor.column === 0) {\r\n            // cursor is a line (start\r\n            if (cursor.row > 0) {\r\n                this.moveCursorTo(cursor.row - 1, this.doc.getLine(cursor.row - 1).length);\r\n            }\r\n        }\r\n        else {\r\n            var tabSize = this.session.getTabSize();\r\n            if (this.wouldMoveIntoSoftTab(cursor, tabSize, -1) && !this.session.getNavigateWithinSoftTabs()) {\r\n                this.moveCursorBy(0, -tabSize);\r\n            } else {\r\n                this.moveCursorBy(0, -1);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Moves the cursor right one column.\r\n     **/\r\n    this.moveCursorRight = function() {\r\n        var cursor = this.lead.getPosition(),\r\n            fold;\r\n        if (fold = this.session.getFoldAt(cursor.row, cursor.column, 1)) {\r\n            this.moveCursorTo(fold.end.row, fold.end.column);\r\n        }\r\n        else if (this.lead.column == this.doc.getLine(this.lead.row).length) {\r\n            if (this.lead.row < this.doc.getLength() - 1) {\r\n                this.moveCursorTo(this.lead.row + 1, 0);\r\n            }\r\n        }\r\n        else {\r\n            var tabSize = this.session.getTabSize();\r\n            var cursor = this.lead;\r\n            if (this.wouldMoveIntoSoftTab(cursor, tabSize, 1) && !this.session.getNavigateWithinSoftTabs()) {\r\n                this.moveCursorBy(0, tabSize);\r\n            } else {\r\n                this.moveCursorBy(0, 1);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Moves the cursor to the start of the line.\r\n     **/\r\n    this.moveCursorLineStart = function() {\r\n        var row = this.lead.row;\r\n        var column = this.lead.column;\r\n        var screenRow = this.session.documentToScreenRow(row, column);\r\n\r\n        // Determ the doc-position of the first character at the screen line.\r\n        var firstColumnPosition = this.session.screenToDocumentPosition(screenRow, 0);\r\n\r\n        // Determ the line\r\n        var beforeCursor = this.session.getDisplayLine(\r\n            row, null, firstColumnPosition.row,\r\n            firstColumnPosition.column\r\n        );\r\n\r\n        var leadingSpace = beforeCursor.match(/^\\s*/);\r\n        // TODO find better way for emacs mode to override selection behaviors\r\n        if (leadingSpace[0].length != column && !this.session.$useEmacsStyleLineStart)\r\n            firstColumnPosition.column += leadingSpace[0].length;\r\n        this.moveCursorToPosition(firstColumnPosition);\r\n    };\r\n\r\n    /**\r\n     * Moves the cursor to the end of the line.\r\n     **/\r\n    this.moveCursorLineEnd = function() {\r\n        var lead = this.lead;\r\n        var lineEnd = this.session.getDocumentLastRowColumnPosition(lead.row, lead.column);\r\n        if (this.lead.column == lineEnd.column) {\r\n            var line = this.session.getLine(lineEnd.row);\r\n            if (lineEnd.column == line.length) {\r\n                var textEnd = line.search(/\\s+$/);\r\n                if (textEnd > 0)\r\n                    lineEnd.column = textEnd;\r\n            }\r\n        }\r\n\r\n        this.moveCursorTo(lineEnd.row, lineEnd.column);\r\n    };\r\n\r\n    /**\r\n     * Moves the cursor to the end of the file.\r\n     **/\r\n    this.moveCursorFileEnd = function() {\r\n        var row = this.doc.getLength() - 1;\r\n        var column = this.doc.getLine(row).length;\r\n        this.moveCursorTo(row, column);\r\n    };\r\n\r\n    /**\r\n     * Moves the cursor to the start of the file.\r\n     **/\r\n    this.moveCursorFileStart = function() {\r\n        this.moveCursorTo(0, 0);\r\n    };\r\n\r\n    /**\r\n     * Moves the cursor to the word on the right.\r\n     **/\r\n    this.moveCursorLongWordRight = function() {\r\n        var row = this.lead.row;\r\n        var column = this.lead.column;\r\n        var line = this.doc.getLine(row);\r\n        var rightOfCursor = line.substring(column);\r\n\r\n        this.session.nonTokenRe.lastIndex = 0;\r\n        this.session.tokenRe.lastIndex = 0;\r\n\r\n        // skip folds\r\n        var fold = this.session.getFoldAt(row, column, 1);\r\n        if (fold) {\r\n            this.moveCursorTo(fold.end.row, fold.end.column);\r\n            return;\r\n        }\r\n\r\n        // first skip space\r\n        if (this.session.nonTokenRe.exec(rightOfCursor)) {\r\n            column += this.session.nonTokenRe.lastIndex;\r\n            this.session.nonTokenRe.lastIndex = 0;\r\n            rightOfCursor = line.substring(column);\r\n        }\r\n\r\n        // if at line end proceed with next line\r\n        if (column >= line.length) {\r\n            this.moveCursorTo(row, line.length);\r\n            this.moveCursorRight();\r\n            if (row < this.doc.getLength() - 1)\r\n                this.moveCursorWordRight();\r\n            return;\r\n        }\r\n\r\n        // advance to the end of the next token\r\n        if (this.session.tokenRe.exec(rightOfCursor)) {\r\n            column += this.session.tokenRe.lastIndex;\r\n            this.session.tokenRe.lastIndex = 0;\r\n        }\r\n\r\n        this.moveCursorTo(row, column);\r\n    };\r\n\r\n    /**\r\n    *\r\n    * Moves the cursor to the word on the left.\r\n    **/\r\n    this.moveCursorLongWordLeft = function() {\r\n        var row = this.lead.row;\r\n        var column = this.lead.column;\r\n\r\n        // skip folds\r\n        var fold;\r\n        if (fold = this.session.getFoldAt(row, column, -1)) {\r\n            this.moveCursorTo(fold.start.row, fold.start.column);\r\n            return;\r\n        }\r\n\r\n        var str = this.session.getFoldStringAt(row, column, -1);\r\n        if (str == null) {\r\n            str = this.doc.getLine(row).substring(0, column);\r\n        }\r\n\r\n        var leftOfCursor = lang.stringReverse(str);\r\n        this.session.nonTokenRe.lastIndex = 0;\r\n        this.session.tokenRe.lastIndex = 0;\r\n\r\n        // skip whitespace\r\n        if (this.session.nonTokenRe.exec(leftOfCursor)) {\r\n            column -= this.session.nonTokenRe.lastIndex;\r\n            leftOfCursor = leftOfCursor.slice(this.session.nonTokenRe.lastIndex);\r\n            this.session.nonTokenRe.lastIndex = 0;\r\n        }\r\n\r\n        // if at begin of the line proceed in line above\r\n        if (column <= 0) {\r\n            this.moveCursorTo(row, 0);\r\n            this.moveCursorLeft();\r\n            if (row > 0)\r\n                this.moveCursorWordLeft();\r\n            return;\r\n        }\r\n\r\n        // move to the begin of the word\r\n        if (this.session.tokenRe.exec(leftOfCursor)) {\r\n            column -= this.session.tokenRe.lastIndex;\r\n            this.session.tokenRe.lastIndex = 0;\r\n        }\r\n\r\n        this.moveCursorTo(row, column);\r\n    };\r\n\r\n    this.$shortWordEndIndex = function(rightOfCursor) {\r\n        var index = 0, ch;\r\n        var whitespaceRe = /\\s/;\r\n        var tokenRe = this.session.tokenRe;\r\n\r\n        tokenRe.lastIndex = 0;\r\n        if (this.session.tokenRe.exec(rightOfCursor)) {\r\n            index = this.session.tokenRe.lastIndex;\r\n        } else {\r\n            while ((ch = rightOfCursor[index]) && whitespaceRe.test(ch))\r\n                index ++;\r\n\r\n            if (index < 1) {\r\n                tokenRe.lastIndex = 0;\r\n                 while ((ch = rightOfCursor[index]) && !tokenRe.test(ch)) {\r\n                    tokenRe.lastIndex = 0;\r\n                    index ++;\r\n                    if (whitespaceRe.test(ch)) {\r\n                        if (index > 2) {\r\n                            index--;\r\n                            break;\r\n                        } else {\r\n                            while ((ch = rightOfCursor[index]) && whitespaceRe.test(ch))\r\n                                index ++;\r\n                            if (index > 2)\r\n                                break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        tokenRe.lastIndex = 0;\r\n\r\n        return index;\r\n    };\r\n\r\n    this.moveCursorShortWordRight = function() {\r\n        var row = this.lead.row;\r\n        var column = this.lead.column;\r\n        var line = this.doc.getLine(row);\r\n        var rightOfCursor = line.substring(column);\r\n\r\n        var fold = this.session.getFoldAt(row, column, 1);\r\n        if (fold)\r\n            return this.moveCursorTo(fold.end.row, fold.end.column);\r\n\r\n        if (column == line.length) {\r\n            var l = this.doc.getLength();\r\n            do {\r\n                row++;\r\n                rightOfCursor = this.doc.getLine(row);\r\n            } while (row < l && /^\\s*$/.test(rightOfCursor));\r\n\r\n            if (!/^\\s+/.test(rightOfCursor))\r\n                rightOfCursor = \"\";\r\n            column = 0;\r\n        }\r\n\r\n        var index = this.$shortWordEndIndex(rightOfCursor);\r\n\r\n        this.moveCursorTo(row, column + index);\r\n    };\r\n\r\n    this.moveCursorShortWordLeft = function() {\r\n        var row = this.lead.row;\r\n        var column = this.lead.column;\r\n\r\n        var fold;\r\n        if (fold = this.session.getFoldAt(row, column, -1))\r\n            return this.moveCursorTo(fold.start.row, fold.start.column);\r\n\r\n        var line = this.session.getLine(row).substring(0, column);\r\n        if (column === 0) {\r\n            do {\r\n                row--;\r\n                line = this.doc.getLine(row);\r\n            } while (row > 0 && /^\\s*$/.test(line));\r\n\r\n            column = line.length;\r\n            if (!/\\s+$/.test(line))\r\n                line = \"\";\r\n        }\r\n\r\n        var leftOfCursor = lang.stringReverse(line);\r\n        var index = this.$shortWordEndIndex(leftOfCursor);\r\n\r\n        return this.moveCursorTo(row, column - index);\r\n    };\r\n\r\n    this.moveCursorWordRight = function() {\r\n        if (this.session.$selectLongWords)\r\n            this.moveCursorLongWordRight();\r\n        else\r\n            this.moveCursorShortWordRight();\r\n    };\r\n\r\n    this.moveCursorWordLeft = function() {\r\n        if (this.session.$selectLongWords)\r\n            this.moveCursorLongWordLeft();\r\n        else\r\n            this.moveCursorShortWordLeft();\r\n    };\r\n\r\n    /**\r\n     * Moves the cursor to position indicated by the parameters. Negative numbers move the cursor backwards in the document.\r\n     * @param {Number} rows The number of rows to move by\r\n     * @param {Number} chars The number of characters to move by\r\n     *\r\n     * @related EditSession.documentToScreenPosition\r\n     **/\r\n    this.moveCursorBy = function(rows, chars) {\r\n        var screenPos = this.session.documentToScreenPosition(\r\n            this.lead.row,\r\n            this.lead.column\r\n        );\r\n\r\n        var offsetX;\r\n\r\n        if (chars === 0) {\r\n            if (rows !== 0) {\r\n                if (this.session.$bidiHandler.isBidiRow(screenPos.row, this.lead.row)) {\r\n                    offsetX = this.session.$bidiHandler.getPosLeft(screenPos.column);\r\n                    screenPos.column = Math.round(offsetX / this.session.$bidiHandler.charWidths[0]);\r\n                } else {\r\n                    offsetX = screenPos.column * this.session.$bidiHandler.charWidths[0];\r\n                }\r\n            }\r\n\r\n            if (this.$desiredColumn)\r\n                screenPos.column = this.$desiredColumn;\r\n            else\r\n                this.$desiredColumn = screenPos.column;\r\n        }\r\n\r\n        var docPos = this.session.screenToDocumentPosition(screenPos.row + rows, screenPos.column, offsetX);\r\n        \r\n        if (rows !== 0 && chars === 0 && docPos.row === this.lead.row && docPos.column === this.lead.column) {\r\n            if (this.session.lineWidgets && this.session.lineWidgets[docPos.row]) {\r\n                if (docPos.row > 0 || rows > 0)\r\n                    docPos.row++;\r\n            }\r\n        }\r\n\r\n        // move the cursor and update the desired column\r\n        this.moveCursorTo(docPos.row, docPos.column + chars, chars === 0);\r\n    };\r\n\r\n    /**\r\n     * Moves the selection to the position indicated by its `row` and `column`.\r\n     * @param {Object} position The position to move to\r\n     **/\r\n    this.moveCursorToPosition = function(position) {\r\n        this.moveCursorTo(position.row, position.column);\r\n    };\r\n\r\n    /**\r\n     * Moves the cursor to the row and column provided. [If `preventUpdateDesiredColumn` is `true`, then the cursor stays in the same column position as its original point.]{: #preventUpdateBoolDesc}\r\n     * @param {Number} row The row to move to\r\n     * @param {Number} column The column to move to\r\n     * @param {Boolean} keepDesiredColumn [If `true`, the cursor move does not respect the previous column]{: #preventUpdateBool}\r\n     *\r\n     **/\r\n    this.moveCursorTo = function(row, column, keepDesiredColumn) {\r\n        // Ensure the row/column is not inside of a fold.\r\n        var fold = this.session.getFoldAt(row, column, 1);\r\n        if (fold) {\r\n            row = fold.start.row;\r\n            column = fold.start.column;\r\n        }\r\n\r\n        this.$keepDesiredColumnOnChange = true;\r\n        var line = this.session.getLine(row);\r\n        // do not allow putting cursor in the middle of surrogate pairs\r\n        if (/[\\uDC00-\\uDFFF]/.test(line.charAt(column)) && line.charAt(column - 1)) {\r\n            if (this.lead.row == row && this.lead.column == column + 1)\r\n                column = column - 1;\r\n            else\r\n                column = column + 1;\r\n        }\r\n        this.lead.setPosition(row, column);\r\n        this.$keepDesiredColumnOnChange = false;\r\n\r\n        if (!keepDesiredColumn)\r\n            this.$desiredColumn = null;\r\n    };\r\n\r\n    /**\r\n     * Moves the cursor to the screen position indicated by row and column. {:preventUpdateBoolDesc}\r\n     * @param {Number} row The row to move to\r\n     * @param {Number} column The column to move to\r\n     * @param {Boolean} keepDesiredColumn {:preventUpdateBool}\r\n     *\r\n     **/\r\n    this.moveCursorToScreen = function(row, column, keepDesiredColumn) {\r\n        var pos = this.session.screenToDocumentPosition(row, column);\r\n        this.moveCursorTo(pos.row, pos.column, keepDesiredColumn);\r\n    };\r\n\r\n    // remove listeners from document\r\n    this.detach = function() {\r\n        this.lead.detach();\r\n        this.anchor.detach();\r\n        this.session = this.doc = null;\r\n    };\r\n\r\n    this.fromOrientedRange = function(range) {\r\n        this.setSelectionRange(range, range.cursor == range.start);\r\n        this.$desiredColumn = range.desiredColumn || this.$desiredColumn;\r\n    };\r\n\r\n    this.toOrientedRange = function(range) {\r\n        var r = this.getRange();\r\n        if (range) {\r\n            range.start.column = r.start.column;\r\n            range.start.row = r.start.row;\r\n            range.end.column = r.end.column;\r\n            range.end.row = r.end.row;\r\n        } else {\r\n            range = r;\r\n        }\r\n\r\n        range.cursor = this.isBackwards() ? range.start : range.end;\r\n        range.desiredColumn = this.$desiredColumn;\r\n        return range;\r\n    };\r\n\r\n    /**\r\n     * Saves the current cursor position and calls `func` that can change the cursor\r\n     * postion. The result is the range of the starting and eventual cursor position.\r\n     * Will reset the cursor position.\r\n     * @param {Function} The callback that should change the cursor position\r\n     * @returns {Range}\r\n     *\r\n     **/\r\n    this.getRangeOfMovements = function(func) {\r\n        var start = this.getCursor();\r\n        try {\r\n            func(this);\r\n            var end = this.getCursor();\r\n            return Range.fromPoints(start, end);\r\n        } catch(e) {\r\n            return Range.fromPoints(start, start);\r\n        } finally {\r\n            this.moveCursorToPosition(start);\r\n        }\r\n    };\r\n\r\n    this.toJSON = function() {\r\n        if (this.rangeCount) {\r\n            var data = this.ranges.map(function(r) {\r\n                var r1 = r.clone();\r\n                r1.isBackwards = r.cursor == r.start;\r\n                return r1;\r\n            });\r\n        } else {\r\n            var data = this.getRange();\r\n            data.isBackwards = this.isBackwards();\r\n        }\r\n        return data;\r\n    };\r\n\r\n    this.fromJSON = function(data) {\r\n        if (data.start == undefined) {\r\n            if (this.rangeList) {\r\n                this.toSingleRange(data[0]);\r\n                for (var i = data.length; i--; ) {\r\n                    var r = Range.fromPoints(data[i].start, data[i].end);\r\n                    if (data[i].isBackwards)\r\n                        r.cursor = r.start;\r\n                    this.addRange(r, true);\r\n                }\r\n                return;\r\n            } else {\r\n                data = data[0];\r\n            }\r\n        }\r\n        if (this.rangeList)\r\n            this.toSingleRange(data);\r\n        this.setSelectionRange(data, data.isBackwards);\r\n    };\r\n\r\n    this.isEqual = function(data) {\r\n        if ((data.length || this.rangeCount) && data.length != this.rangeCount)\r\n            return false;\r\n        if (!data.length || !this.ranges)\r\n            return this.getRange().isEqual(data);\r\n\r\n        for (var i = this.ranges.length; i--; ) {\r\n            if (!this.ranges[i].isEqual(data[i]))\r\n                return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n}).call(Selection.prototype);\r\n\r\nexports.Selection = Selection;\r\n});\r\n"]}