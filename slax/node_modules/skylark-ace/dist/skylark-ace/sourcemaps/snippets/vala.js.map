{"version":3,"sources":["snippets/vala.js"],"names":["define","require","exports","module","snippets","content","name","scope","tabTrigger"],"mappings":";;;;;;;AAAAA,OAAO,SAASC,EAASC,EAASC,GAClC,aAGAD,EAAQE,WAEAC,QAAW,yCACXC,KAAQ,OACRC,MAAS,OACTC,WAAc,SAGdH,QAAW,wJACXC,KAAQ,QACRC,MAAS,OACTC,WAAc,UAGdH,QAAW,2BACXC,KAAQ,UACRC,MAAS,OACTC,WAAc,OAGdH,QAAW,iBACXC,KAAQ,sBACRC,MAAS,OACTC,WAAc,OAGdH,QAAW,6BACXC,KAAQ,gCACRC,MAAS,OACTC,WAAc,cAGdH,QAAW,sBACXC,KAAQ,kBACRC,MAAS,OACTC,WAAc,UAGdH,QAAW,4CACXC,KAAQ,WACRC,MAAS,OACTC,WAAc,aAGdH,QAAW,8BACXC,KAAQ,WACRC,MAAS,OACTC,WAAc,YAGdH,QAAW,kBACXC,KAAQ,WACRC,MAAS,OACTC,WAAc,QAGdH,QAAW,4BACXC,KAAQ,mBACRC,MAAS,OACTC,WAAc,WAGdH,QAAW,kBACXC,KAAQ,OACRC,MAAS,OACTC,WAAc,SAGdH,QAAW,gCACXC,KAAQ,OACRC,MAAS,OACTC,WAAc,SAGdH,QAAW,2CACXC,KAAQ,eACRC,MAAS,OACTC,WAAc,gBAGdH,QAAW,4BACXC,KAAQ,MACRC,MAAS,OACTC,WAAc,QAGdH,QAAW,gCACXC,KAAQ,UACRC,MAAS,OACTC,WAAc,YAGdH,QAAW,6BACXC,KAAQ,gBACRC,MAAS,OACTC,WAAc,cAGdH,QAAW,kCACXC,KAAQ,cACRC,MAAS,OACTC,WAAc,YAGdH,QAAW,2BACXC,KAAQ,cACRC,MAAS,OACTC,WAAc,YAGdH,QAAW,qBACXC,KAAQ,KACRC,MAAS,OACTC,WAAc,OAGdH,QAAW,gEACXC,KAAQ,YACRC,MAAS,OACTC,WAAc,cAGdH,QAAW,mEACXC,KAAQ,gBACRC,MAAS,OACTC,WAAc,SAGdH,QAAW,4BACXC,KAAQ,iBACRC,MAAS,OACTC,WAAc,OAGdH,QAAW,qBACXC,KAAQ,SACRC,MAAS,OACTC,WAAc,WAGdH,QAAW,6EACXC,KAAQ,kBACRC,MAAS,OACTC,WAAc,SAGdH,QAAW,6DACXC,KAAQ,8BACRC,MAAS,OACTC,WAAc,WAGdH,QAAW,iBACXC,KAAQ,sBACRC,MAAS,OACTC,WAAc,MAGdH,QAAW,oCACXC,KAAQ,SACRC,MAAS,OACTC,WAAc,WAGdH,QAAW,yBACXC,KAAQ,SACRC,MAAS,OACTC,WAAc,WAGdH,QAAW,iDACXC,KAAQ,YACRC,MAAS,OACTC,WAAc,QAGdH,QAAW,YACXC,KAAQ,wBACRC,MAAS,OACTC,WAAc,aAGdH,QAAW,wBACXC,KAAQ,QACRC,MAAS,OACTC,WAAc,UAGtBN,EAAQK,MAAQ","file":"../../snippets/vala.js","sourcesContent":["define(function(require, exports, module) {\r\n\"use strict\";\r\n\r\n// exports.snippetText = require(\"../requirejs/text!./.snippets\");\r\nexports.snippets = [\r\n    {\r\n        \"content\": \"case ${1:condition}:\\n\\t$0\\n\\tbreak;\\n\",\r\n        \"name\": \"case\",\r\n        \"scope\": \"vala\",\r\n        \"tabTrigger\": \"case\"\r\n    },\r\n    {\r\n        \"content\": \"/**\\n * ${6}\\n */\\n${1:public} class ${2:MethodName}${3: : GLib.Object} {\\n\\n\\t/**\\n\\t * ${7}\\n\\t */\\n\\tpublic ${2}(${4}) {\\n\\t\\t${5}\\n\\t}\\n\\n\\t$0\\n}\",\r\n        \"name\": \"class\",\r\n        \"scope\": \"vala\",\r\n        \"tabTrigger\": \"class\"\r\n    },\r\n    {\r\n        \"content\": \"(${1}) => {\\n\\t${0}\\n}\\n\",\r\n        \"name\": \"closure\",\r\n        \"scope\": \"vala\",\r\n        \"tabTrigger\": \"=>\"\r\n    },\r\n    {\r\n        \"content\": \"/*\\n * $0\\n */\",\r\n        \"name\": \"Comment (multiline)\",\r\n        \"scope\": \"vala\",\r\n        \"tabTrigger\": \"/*\"\r\n    },\r\n    {\r\n        \"content\": \"Console.WriteLine($1);\\n$0\",\r\n        \"name\": \"Console.WriteLine (writeline)\",\r\n        \"scope\": \"vala\",\r\n        \"tabTrigger\": \"writeline\"\r\n    },\r\n    {\r\n        \"content\": \"[DBus(name = \\\"$0\\\")]\",\r\n        \"name\": \"DBus annotation\",\r\n        \"scope\": \"vala\",\r\n        \"tabTrigger\": \"[DBus\"\r\n    },\r\n    {\r\n        \"content\": \"delegate ${1:void} ${2:DelegateName}($0);\",\r\n        \"name\": \"delegate\",\r\n        \"scope\": \"vala\",\r\n        \"tabTrigger\": \"delegate\"\r\n    },\r\n    {\r\n        \"content\": \"do {\\n\\t$0\\n} while ($1);\\n\",\r\n        \"name\": \"do while\",\r\n        \"scope\": \"vala\",\r\n        \"tabTrigger\": \"dowhile\"\r\n    },\r\n    {\r\n        \"content\": \"/**\\n * $0\\n */\",\r\n        \"name\": \"DocBlock\",\r\n        \"scope\": \"vala\",\r\n        \"tabTrigger\": \"/**\"\r\n    },\r\n    {\r\n        \"content\": \"else if ($1) {\\n\\t$0\\n}\\n\",\r\n        \"name\": \"else if (elseif)\",\r\n        \"scope\": \"vala\",\r\n        \"tabTrigger\": \"elseif\"\r\n    },\r\n    {\r\n        \"content\": \"else {\\n\\t$0\\n}\",\r\n        \"name\": \"else\",\r\n        \"scope\": \"vala\",\r\n        \"tabTrigger\": \"else\"\r\n    },\r\n    {\r\n        \"content\": \"enum {$1:EnumName} {\\n\\t$0\\n}\",\r\n        \"name\": \"enum\",\r\n        \"scope\": \"vala\",\r\n        \"tabTrigger\": \"enum\"\r\n    },\r\n    {\r\n        \"content\": \"public errordomain ${1:Error} {\\n\\t$0\\n}\",\r\n        \"name\": \"error domain\",\r\n        \"scope\": \"vala\",\r\n        \"tabTrigger\": \"errordomain\"\r\n    },\r\n    {\r\n        \"content\": \"for ($1;$2;$3) {\\n\\t$0\\n}\",\r\n        \"name\": \"for\",\r\n        \"scope\": \"vala\",\r\n        \"tabTrigger\": \"for\"\r\n    },\r\n    {\r\n        \"content\": \"foreach ($1 in $2) {\\n\\t$0\\n}\",\r\n        \"name\": \"foreach\",\r\n        \"scope\": \"vala\",\r\n        \"tabTrigger\": \"foreach\"\r\n    },\r\n    {\r\n        \"content\": \"Gee.ArrayList<${1:G}>($0);\",\r\n        \"name\": \"Gee.ArrayList\",\r\n        \"scope\": \"vala\",\r\n        \"tabTrigger\": \"ArrayList\"\r\n    },\r\n    {\r\n        \"content\": \"Gee.HashMap<${1:K},${2:V}>($0);\",\r\n        \"name\": \"Gee.HashMap\",\r\n        \"scope\": \"vala\",\r\n        \"tabTrigger\": \"HashMap\"\r\n    },\r\n    {\r\n        \"content\": \"Gee.HashSet<${1:G}>($0);\",\r\n        \"name\": \"Gee.HashSet\",\r\n        \"scope\": \"vala\",\r\n        \"tabTrigger\": \"HashSet\"\r\n    },\r\n    {\r\n        \"content\": \"if ($1) {\\n\\t$0\\n}\",\r\n        \"name\": \"if\",\r\n        \"scope\": \"vala\",\r\n        \"tabTrigger\": \"if\"\r\n    },\r\n    {\r\n        \"content\": \"interface ${1:InterfaceName}{$2: : SuperInterface} {\\n\\t$0\\n}\",\r\n        \"name\": \"interface\",\r\n        \"scope\": \"vala\",\r\n        \"tabTrigger\": \"interface\"\r\n    },\r\n    {\r\n        \"content\": \"public static int main(string [] argv) {\\n\\t${0}\\n\\treturn 0;\\n}\",\r\n        \"name\": \"Main function\",\r\n        \"scope\": \"vala\",\r\n        \"tabTrigger\": \"main\"\r\n    },\r\n    {\r\n        \"content\": \"namespace $1 {\\n\\t$0\\n}\\n\",\r\n        \"name\": \"namespace (ns)\",\r\n        \"scope\": \"vala\",\r\n        \"tabTrigger\": \"ns\"\r\n    },\r\n    {\r\n        \"content\": \"stdout.printf($0);\",\r\n        \"name\": \"printf\",\r\n        \"scope\": \"vala\",\r\n        \"tabTrigger\": \"printf\"\r\n    },\r\n    {\r\n        \"content\": \"${1:public} ${2:Type} ${3:Name} {\\n\\tset {\\n\\t\\t$0\\n\\t}\\n\\tget {\\n\\n\\t}\\n}\",\r\n        \"name\": \"property (prop)\",\r\n        \"scope\": \"vala\",\r\n        \"tabTrigger\": \"prop\"\r\n    },\r\n    {\r\n        \"content\": \"${1:public} ${2:Type} ${3:Name} {\\n\\tget {\\n\\t\\t$0\\n\\t}\\n}\",\r\n        \"name\": \"read-only property (roprop)\",\r\n        \"scope\": \"vala\",\r\n        \"tabTrigger\": \"roprop\"\r\n    },\r\n    {\r\n        \"content\": \"@\\\"${1:\\\\$var}\\\"\",\r\n        \"name\": \"String template (@)\",\r\n        \"scope\": \"vala\",\r\n        \"tabTrigger\": \"@\"\r\n    },\r\n    {\r\n        \"content\": \"struct ${1:StructName} {\\n\\t$0\\n}\",\r\n        \"name\": \"struct\",\r\n        \"scope\": \"vala\",\r\n        \"tabTrigger\": \"struct\"\r\n    },\r\n    {\r\n        \"content\": \"switch ($1) {\\n\\t$0\\n}\",\r\n        \"name\": \"switch\",\r\n        \"scope\": \"vala\",\r\n        \"tabTrigger\": \"switch\"\r\n    },\r\n    {\r\n        \"content\": \"try {\\n\\t$2\\n} catch (${1:Error} e) {\\n\\t$0\\n}\",\r\n        \"name\": \"try/catch\",\r\n        \"scope\": \"vala\",\r\n        \"tabTrigger\": \"try\"\r\n    },\r\n    {\r\n        \"content\": \"\\\"\\\"\\\"$0\\\"\\\"\\\";\",\r\n        \"name\": \"Verbatim string (\\\"\\\"\\\")\",\r\n        \"scope\": \"vala\",\r\n        \"tabTrigger\": \"verbatim\"\r\n    },\r\n    {\r\n        \"content\": \"while ($1) {\\n\\t$0\\n}\",\r\n        \"name\": \"while\",\r\n        \"scope\": \"vala\",\r\n        \"tabTrigger\": \"while\"\r\n    }\r\n];\r\nexports.scope = \"\";\r\n\r\n});\r\n"]}