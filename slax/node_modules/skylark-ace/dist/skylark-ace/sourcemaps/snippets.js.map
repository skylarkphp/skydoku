{"version":3,"sources":["snippets.js"],"names":["define","require","exports","module","oop","EventEmitter","lang","Range","Anchor","HashHandler","Tokenizer","comparePoints","SnippetManager","this","snippetMap","snippetNameMap","implement","getTokenizer","TabstopToken","str","_","stack","substr","test","inFormatString","tabstopId","parseInt","text","escape","ch","$tokenizer","start","regex","onMatch","val","state","length","expectIf","elseBranch","indexOf","changeCase","local","shift","t","unshift","next","token","merge","snippetVar","choices","slice","split","ts","fmtString","splitRegex","exec","guard","fmt","flag","code","splice","formatString","prototype","tokenizeTmSnippet","startState","getLineTokens","tokens","map","x","value","$getDefaultValue","editor","name","i","variables","__","replace","s","session","r","getWordRange","getTextRange","getLine","getCursorPosition","row","column","getUseSoftTabs","getTabSize","getVariableValue","varName","hasOwnProperty","tmStrFormat","re","RegExp","fmtTokens","_self","formatted","arguments","fmtParts","resolveVariables","gChangeCase","toUpperCase","toLowerCase","join","snippet","result","push","skip","gotoNext","processed","i1","insertSnippetForSelection","snippetText","cursor","line","tabString","getTabString","indentString","match","tabstops","forEach","p","id","index","some","expanding","copyValue","copy","lastIndexOf","arg","Math","max","apply","lines","end","range","getSelectionRange","tabstopManager","TabstopManager","selectionId","inVirtualSelectionMode","selection","addTabstops","insertSnippet","self","forEachSelection","keepOrder","tabNext","$getScope","scope","$mode","$id","pop","inlinePhp","c","getState","substring","getActiveScopes","scopes","includeScopes","expandWithTab","options","expandSnippetForSelection","before","after","snippets","findMatchingSnippet","dryRun","doc","removeInLine","replaceBefore","replaceAfter","M__","matchBefore","T__","matchAfter","content","snippetList","startRe","endRe","triggerRe","endTriggerRe","register","wrapRegexp","src","guardedRegexp","opening","addSnippet","old","unregister","tabTrigger","trigger","escapeRegExp","endTrigger","endGuard","Array","isArray","_signal","removeSnippet","nameMap","parseSnippetFile","m","list","JSON","parse","e","key","guardRe","getSnippetByName","call","$onChange","onChange","bind","$onChangeSelection","delayedCall","onChangeSelection","schedule","$onChangeSession","onChangeSession","$onAfterExec","onAfterExec","attach","ranges","$openTabstops","selectedTabstop","on","commands","keyBinding","addKeyboardHandler","keyboardHandler","detach","removeTabstopMarkers","removeListener","removeKeyboardHandler","delta","isRemove","action","startRow","lineDif","colDiff","$inChange","removeRange","updateLinkedFields","hasLinkedRanges","firstNonLinked","linked","snippetManager","original","command","readOnly","lead","anchor","isEmpty","containsLead","contains","containsAnchor","dir","min","selectTabstop","addTabstopMarkers","setRange","sel","multiSelect","toSingleRange","clone","addRange","fromPoints","moveRelative","dest","movePoint","tabstop","markerId","addMarker","removeMarker","bindKeys","Tab","ed","Shift-Tab","Esc","Return","changeTracker","setPosition","pos","update","$insertRight","point","diff","importCssString","Editor","expandSnippet"],"mappings":"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","file":"../snippets.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2010, Ajax.org B.V.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\ndefine(function(require, exports, module) {\r\n\"use strict\";\r\nvar oop = require(\"./lib/oop\");\r\nvar EventEmitter = require(\"./lib/event_emitter\").EventEmitter;\r\nvar lang = require(\"./lib/lang\");\r\nvar Range = require(\"./range\").Range;\r\nvar Anchor = require(\"./anchor\").Anchor;\r\nvar HashHandler = require(\"./keyboard/hash_handler\").HashHandler;\r\nvar Tokenizer = require(\"./tokenizer\").Tokenizer;\r\nvar comparePoints = Range.comparePoints;\r\n\r\nvar SnippetManager = function() {\r\n    this.snippetMap = {};\r\n    this.snippetNameMap = {};\r\n};\r\n\r\n(function() {\r\n    oop.implement(this, EventEmitter);\r\n    \r\n    this.getTokenizer = function() {\r\n        function TabstopToken(str, _, stack) {\r\n            str = str.substr(1);\r\n            if (/^\\d+$/.test(str) && !stack.inFormatString)\r\n                return [{tabstopId: parseInt(str, 10)}];\r\n            return [{text: str}];\r\n        }\r\n        function escape(ch) {\r\n            return \"(?:[^\\\\\\\\\" + ch + \"]|\\\\\\\\.)\";\r\n        }\r\n        SnippetManager.$tokenizer = new Tokenizer({\r\n            start: [\r\n                {regex: /:/, onMatch: function(val, state, stack) {\r\n                    if (stack.length && stack[0].expectIf) {\r\n                        stack[0].expectIf = false;\r\n                        stack[0].elseBranch = stack[0];\r\n                        return [stack[0]];\r\n                    }\r\n                    return \":\";\r\n                }},\r\n                {regex: /\\\\./, onMatch: function(val, state, stack) {\r\n                    var ch = val[1];\r\n                    if (ch == \"}\" && stack.length) {\r\n                        val = ch;\r\n                    }else if (\"`$\\\\\".indexOf(ch) != -1) {\r\n                        val = ch;\r\n                    } else if (stack.inFormatString) {\r\n                        if (ch == \"n\")\r\n                            val = \"\\n\";\r\n                        else if (ch == \"t\")\r\n                            val = \"\\n\";\r\n                        else if (\"ulULE\".indexOf(ch) != -1) {\r\n                            val = {changeCase: ch, local: ch > \"a\"};\r\n                        }\r\n                    }\r\n\r\n                    return [val];\r\n                }},\r\n                {regex: /}/, onMatch: function(val, state, stack) {\r\n                    return [stack.length ? stack.shift() : val];\r\n                }},\r\n                {regex: /\\$(?:\\d+|\\w+)/, onMatch: TabstopToken},\r\n                {regex: /\\$\\{[\\dA-Z_a-z]+/, onMatch: function(str, state, stack) {\r\n                    var t = TabstopToken(str.substr(1), state, stack);\r\n                    stack.unshift(t[0]);\r\n                    return t;\r\n                }, next: \"snippetVar\"},\r\n                {regex: /\\n/, token: \"newline\", merge: false}\r\n            ],\r\n            snippetVar: [\r\n                {regex: \"\\\\|\" + escape(\"\\\\|\") + \"*\\\\|\", onMatch: function(val, state, stack) {\r\n                    stack[0].choices = val.slice(1, -1).split(\",\");\r\n                }, next: \"start\"},\r\n                {regex: \"/(\" + escape(\"/\") + \"+)/(?:(\" + escape(\"/\") + \"*)/)(\\\\w*):?\",\r\n                 onMatch: function(val, state, stack) {\r\n                    var ts = stack[0];\r\n                    ts.fmtString = val;\r\n\r\n                    val = this.splitRegex.exec(val);\r\n                    ts.guard = val[1];\r\n                    ts.fmt = val[2];\r\n                    ts.flag = val[3];\r\n                    return \"\";\r\n                }, next: \"start\"},\r\n                {regex: \"`\" + escape(\"`\") + \"*`\", onMatch: function(val, state, stack) {\r\n                    stack[0].code = val.splice(1, -1);\r\n                    return \"\";\r\n                }, next: \"start\"},\r\n                {regex: \"\\\\?\", onMatch: function(val, state, stack) {\r\n                    if (stack[0])\r\n                        stack[0].expectIf = true;\r\n                }, next: \"start\"},\r\n                {regex: \"([^:}\\\\\\\\]|\\\\\\\\.)*:?\", token: \"\", next: \"start\"}\r\n            ],\r\n            formatString: [\r\n                {regex: \"/(\" + escape(\"/\") + \"+)/\", token: \"regex\"},\r\n                {regex: \"\", onMatch: function(val, state, stack) {\r\n                    stack.inFormatString = true;\r\n                }, next: \"start\"}\r\n            ]\r\n        });\r\n        SnippetManager.prototype.getTokenizer = function() {\r\n            return SnippetManager.$tokenizer;\r\n        };\r\n        return SnippetManager.$tokenizer;\r\n    };\r\n\r\n    this.tokenizeTmSnippet = function(str, startState) {\r\n        return this.getTokenizer().getLineTokens(str, startState).tokens.map(function(x) {\r\n            return x.value || x;\r\n        });\r\n    };\r\n\r\n    this.$getDefaultValue = function(editor, name) {\r\n        if (/^[A-Z]\\d+$/.test(name)) {\r\n            var i = name.substr(1);\r\n            return (this.variables[name[0] + \"__\"] || {})[i];\r\n        }\r\n        if (/^\\d+$/.test(name)) {\r\n            return (this.variables.__ || {})[name];\r\n        }\r\n        name = name.replace(/^TM_/, \"\");\r\n\r\n        if (!editor)\r\n            return;\r\n        var s = editor.session;\r\n        switch(name) {\r\n            case \"CURRENT_WORD\":\r\n                var r = s.getWordRange(); \r\n                /* falls through */\r\n            case \"SELECTION\":\r\n            case \"SELECTED_TEXT\":\r\n                return s.getTextRange(r);\r\n            case \"CURRENT_LINE\":\r\n                return s.getLine(editor.getCursorPosition().row);\r\n            case \"PREV_LINE\": // not possible in textmate\r\n                return s.getLine(editor.getCursorPosition().row - 1);\r\n            case \"LINE_INDEX\":\r\n                return editor.getCursorPosition().column;\r\n            case \"LINE_NUMBER\":\r\n                return editor.getCursorPosition().row + 1;\r\n            case \"SOFT_TABS\":\r\n                return s.getUseSoftTabs() ? \"YES\" : \"NO\";\r\n            case \"TAB_SIZE\":\r\n                return s.getTabSize();\r\n            // default but can't fill :(\r\n            case \"FILENAME\":\r\n            case \"FILEPATH\":\r\n                return \"\";\r\n            case \"FULLNAME\":\r\n                return \"Ace\";\r\n        }\r\n    };\r\n    this.variables = {};\r\n    this.getVariableValue = function(editor, varName) {\r\n        if (this.variables.hasOwnProperty(varName))\r\n            return this.variables[varName](editor, varName) || \"\";\r\n        return this.$getDefaultValue(editor, varName) || \"\";\r\n    };\r\n\r\n    // returns string formatted according to http://manual.macromates.com/en/regular_expressions#replacement_string_syntax_format_strings\r\n    this.tmStrFormat = function(str, ch, editor) {\r\n        var flag = ch.flag || \"\";\r\n        var re = ch.guard;\r\n        re = new RegExp(re, flag.replace(/[^gi]/, \"\"));\r\n        var fmtTokens = this.tokenizeTmSnippet(ch.fmt, \"formatString\");\r\n        var _self = this;\r\n        var formatted = str.replace(re, function() {\r\n            _self.variables.__ = arguments;\r\n            var fmtParts = _self.resolveVariables(fmtTokens, editor);\r\n            var gChangeCase = \"E\";\r\n            for (var i  = 0; i < fmtParts.length; i++) {\r\n                var ch = fmtParts[i];\r\n                if (typeof ch == \"object\") {\r\n                    fmtParts[i] = \"\";\r\n                    if (ch.changeCase && ch.local) {\r\n                        var next = fmtParts[i + 1];\r\n                        if (next && typeof next == \"string\") {\r\n                            if (ch.changeCase == \"u\")\r\n                                fmtParts[i] = next[0].toUpperCase();\r\n                            else\r\n                                fmtParts[i] = next[0].toLowerCase();\r\n                            fmtParts[i + 1] = next.substr(1);\r\n                        }\r\n                    } else if (ch.changeCase) {\r\n                        gChangeCase = ch.changeCase;\r\n                    }\r\n                } else if (gChangeCase == \"U\") {\r\n                    fmtParts[i] = ch.toUpperCase();\r\n                } else if (gChangeCase == \"L\") {\r\n                    fmtParts[i] = ch.toLowerCase();\r\n                }\r\n            }\r\n            return fmtParts.join(\"\");\r\n        });\r\n        this.variables.__ = null;\r\n        return formatted;\r\n    };\r\n\r\n    this.resolveVariables = function(snippet, editor) {\r\n        var result = [];\r\n        for (var i = 0; i < snippet.length; i++) {\r\n            var ch = snippet[i];\r\n            if (typeof ch == \"string\") {\r\n                result.push(ch);\r\n            } else if (typeof ch != \"object\") {\r\n                continue;\r\n            } else if (ch.skip) {\r\n                gotoNext(ch);\r\n            } else if (ch.processed < i) {\r\n                continue;\r\n            } else if (ch.text) {\r\n                var value = this.getVariableValue(editor, ch.text);\r\n                if (value && ch.fmtString)\r\n                    value = this.tmStrFormat(value, ch);\r\n                ch.processed = i;\r\n                if (ch.expectIf == null) {\r\n                    if (value) {\r\n                        result.push(value);\r\n                        gotoNext(ch);\r\n                    }\r\n                } else {\r\n                    if (value) {\r\n                        ch.skip = ch.elseBranch;\r\n                    } else\r\n                        gotoNext(ch);\r\n                }\r\n            } else if (ch.tabstopId != null) {\r\n                result.push(ch);\r\n            } else if (ch.changeCase != null) {\r\n                result.push(ch);\r\n            }\r\n        }\r\n        function gotoNext(ch) {\r\n            var i1 = snippet.indexOf(ch, i + 1);\r\n            if (i1 != -1)\r\n                i = i1;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    this.insertSnippetForSelection = function(editor, snippetText) {\r\n        var cursor = editor.getCursorPosition();\r\n        var line = editor.session.getLine(cursor.row);\r\n        var tabString = editor.session.getTabString();\r\n        var indentString = line.match(/^\\s*/)[0];\r\n        \r\n        if (cursor.column < indentString.length)\r\n            indentString = indentString.slice(0, cursor.column);\r\n\r\n        snippetText = snippetText.replace(/\\r/g, \"\");\r\n        var tokens = this.tokenizeTmSnippet(snippetText);\r\n        tokens = this.resolveVariables(tokens, editor);\r\n        // indent\r\n        tokens = tokens.map(function(x) {\r\n            if (x == \"\\n\")\r\n                return x + indentString;\r\n            if (typeof x == \"string\")\r\n                return x.replace(/\\t/g, tabString);\r\n            return x;\r\n        });\r\n        // tabstop values\r\n        var tabstops = [];\r\n        tokens.forEach(function(p, i) {\r\n            if (typeof p != \"object\")\r\n                return;\r\n            var id = p.tabstopId;\r\n            var ts = tabstops[id];\r\n            if (!ts) {\r\n                ts = tabstops[id] = [];\r\n                ts.index = id;\r\n                ts.value = \"\";\r\n            }\r\n            if (ts.indexOf(p) !== -1)\r\n                return;\r\n            ts.push(p);\r\n            var i1 = tokens.indexOf(p, i + 1);\r\n            if (i1 === -1)\r\n                return;\r\n\r\n            var value = tokens.slice(i + 1, i1);\r\n            var isNested = value.some(function(t) {return typeof t === \"object\";});\r\n            if (isNested && !ts.value) {\r\n                ts.value = value;\r\n            } else if (value.length && (!ts.value || typeof ts.value !== \"string\")) {\r\n                ts.value = value.join(\"\");\r\n            }\r\n        });\r\n\r\n        // expand tabstop values\r\n        tabstops.forEach(function(ts) {ts.length = 0;});\r\n        var expanding = {};\r\n        function copyValue(val) {\r\n            var copy = [];\r\n            for (var i = 0; i < val.length; i++) {\r\n                var p = val[i];\r\n                if (typeof p == \"object\") {\r\n                    if (expanding[p.tabstopId])\r\n                        continue;\r\n                    var j = val.lastIndexOf(p, i - 1);\r\n                    p = copy[j] || {tabstopId: p.tabstopId};\r\n                }\r\n                copy[i] = p;\r\n            }\r\n            return copy;\r\n        }\r\n        for (var i = 0; i < tokens.length; i++) {\r\n            var p = tokens[i];\r\n            if (typeof p != \"object\")\r\n                continue;\r\n            var id = p.tabstopId;\r\n            var i1 = tokens.indexOf(p, i + 1);\r\n            if (expanding[id]) {\r\n                // if reached closing bracket clear expanding state\r\n                if (expanding[id] === p)\r\n                    expanding[id] = null;\r\n                // otherwise just ignore recursive tabstop\r\n                continue;\r\n            }\r\n            \r\n            var ts = tabstops[id];\r\n            var arg = typeof ts.value == \"string\" ? [ts.value] : copyValue(ts.value);\r\n            arg.unshift(i + 1, Math.max(0, i1 - i));\r\n            arg.push(p);\r\n            expanding[id] = p;\r\n            tokens.splice.apply(tokens, arg);\r\n\r\n            if (ts.indexOf(p) === -1)\r\n                ts.push(p);\r\n        }\r\n        \r\n        // convert to plain text\r\n        var row = 0, column = 0;\r\n        var text = \"\";\r\n        tokens.forEach(function(t) {\r\n            if (typeof t === \"string\") {\r\n                var lines = t.split(\"\\n\");\r\n                if (lines.length > 1){\r\n                    column = lines[lines.length - 1].length;\r\n                    row += lines.length - 1;\r\n                } else\r\n                    column += t.length;\r\n                text += t;\r\n            } else {\r\n                if (!t.start)\r\n                    t.start = {row: row, column: column};\r\n                else\r\n                    t.end = {row: row, column: column};\r\n            }\r\n        });\r\n        var range = editor.getSelectionRange();\r\n        var end = editor.session.replace(range, text);\r\n\r\n        var tabstopManager = new TabstopManager(editor);\r\n        var selectionId = editor.inVirtualSelectionMode && editor.selection.index;\r\n        tabstopManager.addTabstops(tabstops, range.start, end, selectionId);\r\n    };\r\n    \r\n    this.insertSnippet = function(editor, snippetText) {\r\n        var self = this;\r\n        if (editor.inVirtualSelectionMode)\r\n            return self.insertSnippetForSelection(editor, snippetText);\r\n        \r\n        editor.forEachSelection(function() {\r\n            self.insertSnippetForSelection(editor, snippetText);\r\n        }, null, {keepOrder: true});\r\n        \r\n        if (editor.tabstopManager)\r\n            editor.tabstopManager.tabNext();\r\n    };\r\n\r\n    this.$getScope = function(editor) {\r\n        var scope = editor.session.$mode.$id || \"\";\r\n        scope = scope.split(\"/\").pop();\r\n        if (scope === \"html\" || scope === \"php\") {\r\n            // PHP is actually HTML\r\n            if (scope === \"php\" && !editor.session.$mode.inlinePhp) \r\n                scope = \"html\";\r\n            var c = editor.getCursorPosition();\r\n            var state = editor.session.getState(c.row);\r\n            if (typeof state === \"object\") {\r\n                state = state[0];\r\n            }\r\n            if (state.substring) {\r\n                if (state.substring(0, 3) == \"js-\")\r\n                    scope = \"javascript\";\r\n                else if (state.substring(0, 4) == \"css-\")\r\n                    scope = \"css\";\r\n                else if (state.substring(0, 4) == \"php-\")\r\n                    scope = \"php\";\r\n            }\r\n        }\r\n        \r\n        return scope;\r\n    };\r\n\r\n    this.getActiveScopes = function(editor) {\r\n        var scope = this.$getScope(editor);\r\n        var scopes = [scope];\r\n        var snippetMap = this.snippetMap;\r\n        if (snippetMap[scope] && snippetMap[scope].includeScopes) {\r\n            scopes.push.apply(scopes, snippetMap[scope].includeScopes);\r\n        }\r\n        scopes.push(\"_\");\r\n        return scopes;\r\n    };\r\n\r\n    this.expandWithTab = function(editor, options) {\r\n        var self = this;\r\n        var result = editor.forEachSelection(function() {\r\n            return self.expandSnippetForSelection(editor, options);\r\n        }, null, {keepOrder: true});\r\n        if (result && editor.tabstopManager)\r\n            editor.tabstopManager.tabNext();\r\n        return result;\r\n    };\r\n    \r\n    this.expandSnippetForSelection = function(editor, options) {\r\n        var cursor = editor.getCursorPosition();\r\n        var line = editor.session.getLine(cursor.row);\r\n        var before = line.substring(0, cursor.column);\r\n        var after = line.substr(cursor.column);\r\n\r\n        var snippetMap = this.snippetMap;\r\n        var snippet;\r\n        this.getActiveScopes(editor).some(function(scope) {\r\n            var snippets = snippetMap[scope];\r\n            if (snippets)\r\n                snippet = this.findMatchingSnippet(snippets, before, after);\r\n            return !!snippet;\r\n        }, this);\r\n        if (!snippet)\r\n            return false;\r\n        if (options && options.dryRun)\r\n            return true;\r\n        editor.session.doc.removeInLine(cursor.row,\r\n            cursor.column - snippet.replaceBefore.length,\r\n            cursor.column + snippet.replaceAfter.length\r\n        );\r\n\r\n        this.variables.M__ = snippet.matchBefore;\r\n        this.variables.T__ = snippet.matchAfter;\r\n        this.insertSnippetForSelection(editor, snippet.content);\r\n\r\n        this.variables.M__ = this.variables.T__ = null;\r\n        return true;\r\n    };\r\n\r\n    this.findMatchingSnippet = function(snippetList, before, after) {\r\n        for (var i = snippetList.length; i--;) {\r\n            var s = snippetList[i];\r\n            if (s.startRe && !s.startRe.test(before))\r\n                continue;\r\n            if (s.endRe && !s.endRe.test(after))\r\n                continue;\r\n            if (!s.startRe && !s.endRe)\r\n                continue;\r\n\r\n            s.matchBefore = s.startRe ? s.startRe.exec(before) : [\"\"];\r\n            s.matchAfter = s.endRe ? s.endRe.exec(after) : [\"\"];\r\n            s.replaceBefore = s.triggerRe ? s.triggerRe.exec(before)[0] : \"\";\r\n            s.replaceAfter = s.endTriggerRe ? s.endTriggerRe.exec(after)[0] : \"\";\r\n            return s;\r\n        }\r\n    };\r\n\r\n    this.snippetMap = {};\r\n    this.snippetNameMap = {};\r\n    this.register = function(snippets, scope) {\r\n        var snippetMap = this.snippetMap;\r\n        var snippetNameMap = this.snippetNameMap;\r\n        var self = this;\r\n        \r\n        if (!snippets) \r\n            snippets = [];\r\n        \r\n        function wrapRegexp(src) {\r\n            if (src && !/^\\^?\\(.*\\)\\$?$|^\\\\b$/.test(src))\r\n                src = \"(?:\" + src + \")\";\r\n\r\n            return src || \"\";\r\n        }\r\n        function guardedRegexp(re, guard, opening) {\r\n            re = wrapRegexp(re);\r\n            guard = wrapRegexp(guard);\r\n            if (opening) {\r\n                re = guard + re;\r\n                if (re && re[re.length - 1] != \"$\")\r\n                    re = re + \"$\";\r\n            } else {\r\n                re = re + guard;\r\n                if (re && re[0] != \"^\")\r\n                    re = \"^\" + re;\r\n            }\r\n            return new RegExp(re);\r\n        }\r\n\r\n        function addSnippet(s) {\r\n            if (!s.scope)\r\n                s.scope = scope || \"_\";\r\n            scope = s.scope;\r\n            if (!snippetMap[scope]) {\r\n                snippetMap[scope] = [];\r\n                snippetNameMap[scope] = {};\r\n            }\r\n\r\n            var map = snippetNameMap[scope];\r\n            if (s.name) {\r\n                var old = map[s.name];\r\n                if (old)\r\n                    self.unregister(old);\r\n                map[s.name] = s;\r\n            }\r\n            snippetMap[scope].push(s);\r\n\r\n            if (s.tabTrigger && !s.trigger) {\r\n                if (!s.guard && /^\\w/.test(s.tabTrigger))\r\n                    s.guard = \"\\\\b\";\r\n                s.trigger = lang.escapeRegExp(s.tabTrigger);\r\n            }\r\n            \r\n            if (!s.trigger && !s.guard && !s.endTrigger && !s.endGuard)\r\n                return;\r\n            \r\n            s.startRe = guardedRegexp(s.trigger, s.guard, true);\r\n            s.triggerRe = new RegExp(s.trigger);\r\n\r\n            s.endRe = guardedRegexp(s.endTrigger, s.endGuard, true);\r\n            s.endTriggerRe = new RegExp(s.endTrigger);\r\n        }\r\n\r\n        if (snippets && snippets.content)\r\n            addSnippet(snippets);\r\n        else if (Array.isArray(snippets))\r\n            snippets.forEach(addSnippet);\r\n        \r\n        this._signal(\"registerSnippets\", {scope: scope});\r\n    };\r\n    this.unregister = function(snippets, scope) {\r\n        var snippetMap = this.snippetMap;\r\n        var snippetNameMap = this.snippetNameMap;\r\n\r\n        function removeSnippet(s) {\r\n            var nameMap = snippetNameMap[s.scope||scope];\r\n            if (nameMap && nameMap[s.name]) {\r\n                delete nameMap[s.name];\r\n                var map = snippetMap[s.scope||scope];\r\n                var i = map && map.indexOf(s);\r\n                if (i >= 0)\r\n                    map.splice(i, 1);\r\n            }\r\n        }\r\n        if (snippets.content)\r\n            removeSnippet(snippets);\r\n        else if (Array.isArray(snippets))\r\n            snippets.forEach(removeSnippet);\r\n    };\r\n    this.parseSnippetFile = function(str) {\r\n        str = str.replace(/\\r/g, \"\");\r\n        var list = [], snippet = {};\r\n        var re = /^#.*|^({[\\s\\S]*})\\s*$|^(\\S+) (.*)$|^((?:\\n*\\t.*)+)/gm;\r\n        var m;\r\n        while (m = re.exec(str)) {\r\n            if (m[1]) {\r\n                try {\r\n                    snippet = JSON.parse(m[1]);\r\n                    list.push(snippet);\r\n                } catch (e) {}\r\n            } if (m[4]) {\r\n                snippet.content = m[4].replace(/^\\t/gm, \"\");\r\n                list.push(snippet);\r\n                snippet = {};\r\n            } else {\r\n                var key = m[2], val = m[3];\r\n                if (key == \"regex\") {\r\n                    var guardRe = /\\/((?:[^\\/\\\\]|\\\\.)*)|$/g;\r\n                    snippet.guard = guardRe.exec(val)[1];\r\n                    snippet.trigger = guardRe.exec(val)[1];\r\n                    snippet.endTrigger = guardRe.exec(val)[1];\r\n                    snippet.endGuard = guardRe.exec(val)[1];\r\n                } else if (key == \"snippet\") {\r\n                    snippet.tabTrigger = val.match(/^\\S*/)[0];\r\n                    if (!snippet.name)\r\n                        snippet.name = val;\r\n                } else {\r\n                    snippet[key] = val;\r\n                }\r\n            }\r\n        }\r\n        return list;\r\n    };\r\n    this.getSnippetByName = function(name, editor) {\r\n        var snippetMap = this.snippetNameMap;\r\n        var snippet;\r\n        this.getActiveScopes(editor).some(function(scope) {\r\n            var snippets = snippetMap[scope];\r\n            if (snippets)\r\n                snippet = snippets[name];\r\n            return !!snippet;\r\n        }, this);\r\n        return snippet;\r\n    };\r\n\r\n}).call(SnippetManager.prototype);\r\n\r\n\r\nvar TabstopManager = function(editor) {\r\n    if (editor.tabstopManager)\r\n        return editor.tabstopManager;\r\n    editor.tabstopManager = this;\r\n    this.$onChange = this.onChange.bind(this);\r\n    this.$onChangeSelection = lang.delayedCall(this.onChangeSelection.bind(this)).schedule;\r\n    this.$onChangeSession = this.onChangeSession.bind(this);\r\n    this.$onAfterExec = this.onAfterExec.bind(this);\r\n    this.attach(editor);\r\n};\r\n(function() {\r\n    this.attach = function(editor) {\r\n        this.index = 0;\r\n        this.ranges = [];\r\n        this.tabstops = [];\r\n        this.$openTabstops = null;\r\n        this.selectedTabstop = null;\r\n\r\n        this.editor = editor;\r\n        this.editor.on(\"change\", this.$onChange);\r\n        this.editor.on(\"changeSelection\", this.$onChangeSelection);\r\n        this.editor.on(\"changeSession\", this.$onChangeSession);\r\n        this.editor.commands.on(\"afterExec\", this.$onAfterExec);\r\n        this.editor.keyBinding.addKeyboardHandler(this.keyboardHandler);\r\n    };\r\n    this.detach = function() {\r\n        this.tabstops.forEach(this.removeTabstopMarkers, this);\r\n        this.ranges = null;\r\n        this.tabstops = null;\r\n        this.selectedTabstop = null;\r\n        this.editor.removeListener(\"change\", this.$onChange);\r\n        this.editor.removeListener(\"changeSelection\", this.$onChangeSelection);\r\n        this.editor.removeListener(\"changeSession\", this.$onChangeSession);\r\n        this.editor.commands.removeListener(\"afterExec\", this.$onAfterExec);\r\n        this.editor.keyBinding.removeKeyboardHandler(this.keyboardHandler);\r\n        this.editor.tabstopManager = null;\r\n        this.editor = null;\r\n    };\r\n\r\n    this.onChange = function(delta) {\r\n        var changeRange = delta;\r\n        var isRemove = delta.action[0] == \"r\";\r\n        var start = delta.start;\r\n        var end = delta.end;\r\n        var startRow = start.row;\r\n        var endRow = end.row;\r\n        var lineDif = endRow - startRow;\r\n        var colDiff = end.column - start.column;\r\n\r\n        if (isRemove) {\r\n            lineDif = -lineDif;\r\n            colDiff = -colDiff;\r\n        }\r\n        if (!this.$inChange && isRemove) {\r\n            var ts = this.selectedTabstop;\r\n            var changedOutside = ts && !ts.some(function(r) {\r\n                return comparePoints(r.start, start) <= 0 && comparePoints(r.end, end) >= 0;\r\n            });\r\n            if (changedOutside)\r\n                return this.detach();\r\n        }\r\n        var ranges = this.ranges;\r\n        for (var i = 0; i < ranges.length; i++) {\r\n            var r = ranges[i];\r\n            if (r.end.row < start.row)\r\n                continue;\r\n\r\n            if (isRemove && comparePoints(start, r.start) < 0 && comparePoints(end, r.end) > 0) {\r\n                this.removeRange(r);\r\n                i--;\r\n                continue;\r\n            }\r\n\r\n            if (r.start.row == startRow && r.start.column > start.column)\r\n                r.start.column += colDiff;\r\n            if (r.end.row == startRow && r.end.column >= start.column)\r\n                r.end.column += colDiff;\r\n            if (r.start.row >= startRow)\r\n                r.start.row += lineDif;\r\n            if (r.end.row >= startRow)\r\n                r.end.row += lineDif;\r\n\r\n            if (comparePoints(r.start, r.end) > 0)\r\n                this.removeRange(r);\r\n        }\r\n        if (!ranges.length)\r\n            this.detach();\r\n    };\r\n    this.updateLinkedFields = function() {\r\n        var ts = this.selectedTabstop;\r\n        if (!ts || !ts.hasLinkedRanges)\r\n            return;\r\n        this.$inChange = true;\r\n        var session = this.editor.session;\r\n        var text = session.getTextRange(ts.firstNonLinked);\r\n        for (var i = ts.length; i--;) {\r\n            var range = ts[i];\r\n            if (!range.linked)\r\n                continue;\r\n            var fmt = exports.snippetManager.tmStrFormat(text, range.original);\r\n            session.replace(range, fmt);\r\n        }\r\n        this.$inChange = false;\r\n    };\r\n    this.onAfterExec = function(e) {\r\n        if (e.command && !e.command.readOnly)\r\n            this.updateLinkedFields();\r\n    };\r\n    this.onChangeSelection = function() {\r\n        if (!this.editor)\r\n            return;\r\n        var lead = this.editor.selection.lead;\r\n        var anchor = this.editor.selection.anchor;\r\n        var isEmpty = this.editor.selection.isEmpty();\r\n        for (var i = this.ranges.length; i--;) {\r\n            if (this.ranges[i].linked)\r\n                continue;\r\n            var containsLead = this.ranges[i].contains(lead.row, lead.column);\r\n            var containsAnchor = isEmpty || this.ranges[i].contains(anchor.row, anchor.column);\r\n            if (containsLead && containsAnchor)\r\n                return;\r\n        }\r\n        this.detach();\r\n    };\r\n    this.onChangeSession = function() {\r\n        this.detach();\r\n    };\r\n    this.tabNext = function(dir) {\r\n        var max = this.tabstops.length;\r\n        var index = this.index + (dir || 1);\r\n        index = Math.min(Math.max(index, 1), max);\r\n        if (index == max)\r\n            index = 0;\r\n        this.selectTabstop(index);\r\n        if (index === 0)\r\n            this.detach();\r\n    };\r\n    this.selectTabstop = function(index) {\r\n        this.$openTabstops = null;\r\n        var ts = this.tabstops[this.index];\r\n        if (ts)\r\n            this.addTabstopMarkers(ts);\r\n        this.index = index;\r\n        ts = this.tabstops[this.index];\r\n        if (!ts || !ts.length)\r\n            return;\r\n        \r\n        this.selectedTabstop = ts;\r\n        if (!this.editor.inVirtualSelectionMode) {        \r\n            var sel = this.editor.multiSelect;\r\n            sel.toSingleRange(ts.firstNonLinked.clone());\r\n            for (var i = ts.length; i--;) {\r\n                if (ts.hasLinkedRanges && ts[i].linked)\r\n                    continue;\r\n                sel.addRange(ts[i].clone(), true);\r\n            }\r\n            // todo investigate why is this needed\r\n            if (sel.ranges[0])\r\n                sel.addRange(sel.ranges[0].clone());\r\n        } else {\r\n            this.editor.selection.setRange(ts.firstNonLinked);\r\n        }\r\n        \r\n        this.editor.keyBinding.addKeyboardHandler(this.keyboardHandler);\r\n    };\r\n    this.addTabstops = function(tabstops, start, end) {\r\n        if (!this.$openTabstops)\r\n            this.$openTabstops = [];\r\n        // add final tabstop if missing\r\n        if (!tabstops[0]) {\r\n            var p = Range.fromPoints(end, end);\r\n            moveRelative(p.start, start);\r\n            moveRelative(p.end, start);\r\n            tabstops[0] = [p];\r\n            tabstops[0].index = 0;\r\n        }\r\n\r\n        var i = this.index;\r\n        var arg = [i + 1, 0];\r\n        var ranges = this.ranges;\r\n        tabstops.forEach(function(ts, index) {\r\n            var dest = this.$openTabstops[index] || ts;\r\n                \r\n            for (var i = ts.length; i--;) {\r\n                var p = ts[i];\r\n                var range = Range.fromPoints(p.start, p.end || p.start);\r\n                movePoint(range.start, start);\r\n                movePoint(range.end, start);\r\n                range.original = p;\r\n                range.tabstop = dest;\r\n                ranges.push(range);\r\n                if (dest != ts)\r\n                    dest.unshift(range);\r\n                else\r\n                    dest[i] = range;\r\n                if (p.fmtString) {\r\n                    range.linked = true;\r\n                    dest.hasLinkedRanges = true;\r\n                } else if (!dest.firstNonLinked)\r\n                    dest.firstNonLinked = range;\r\n            }\r\n            if (!dest.firstNonLinked)\r\n                dest.hasLinkedRanges = false;\r\n            if (dest === ts) {\r\n                arg.push(dest);\r\n                this.$openTabstops[index] = dest;\r\n            }\r\n            this.addTabstopMarkers(dest);\r\n        }, this);\r\n        \r\n        if (arg.length > 2) {\r\n            // when adding new snippet inside existing one, make sure 0 tabstop is at the end\r\n            if (this.tabstops.length)\r\n                arg.push(arg.splice(2, 1)[0]);\r\n            this.tabstops.splice.apply(this.tabstops, arg);\r\n        }\r\n    };\r\n\r\n    this.addTabstopMarkers = function(ts) {\r\n        var session = this.editor.session;\r\n        ts.forEach(function(range) {\r\n            if  (!range.markerId)\r\n                range.markerId = session.addMarker(range, \"ace_snippet-marker\", \"text\");\r\n        });\r\n    };\r\n    this.removeTabstopMarkers = function(ts) {\r\n        var session = this.editor.session;\r\n        ts.forEach(function(range) {\r\n            session.removeMarker(range.markerId);\r\n            range.markerId = null;\r\n        });\r\n    };\r\n    this.removeRange = function(range) {\r\n        var i = range.tabstop.indexOf(range);\r\n        range.tabstop.splice(i, 1);\r\n        i = this.ranges.indexOf(range);\r\n        this.ranges.splice(i, 1);\r\n        this.editor.session.removeMarker(range.markerId);\r\n        if (!range.tabstop.length) {\r\n            i = this.tabstops.indexOf(range.tabstop);\r\n            if (i != -1)\r\n                this.tabstops.splice(i, 1);\r\n            if (!this.tabstops.length)\r\n                this.detach();\r\n        }\r\n    };\r\n\r\n    this.keyboardHandler = new HashHandler();\r\n    this.keyboardHandler.bindKeys({\r\n        \"Tab\": function(ed) {\r\n            if (exports.snippetManager && exports.snippetManager.expandWithTab(ed)) {\r\n                return;\r\n            }\r\n\r\n            ed.tabstopManager.tabNext(1);\r\n        },\r\n        \"Shift-Tab\": function(ed) {\r\n            ed.tabstopManager.tabNext(-1);\r\n        },\r\n        \"Esc\": function(ed) {\r\n            ed.tabstopManager.detach();\r\n        },\r\n        \"Return\": function(ed) {\r\n            //ed.tabstopManager.tabNext(1);\r\n            return false;\r\n        }\r\n    });\r\n}).call(TabstopManager.prototype);\r\n\r\n\r\n\r\nvar changeTracker = {};\r\nchangeTracker.onChange = Anchor.prototype.onChange;\r\nchangeTracker.setPosition = function(row, column) {\r\n    this.pos.row = row;\r\n    this.pos.column = column;\r\n};\r\nchangeTracker.update = function(pos, delta, $insertRight) {\r\n    this.$insertRight = $insertRight;\r\n    this.pos = pos; \r\n    this.onChange(delta);\r\n};\r\n\r\nvar movePoint = function(point, diff) {\r\n    if (point.row == 0)\r\n        point.column += diff.column;\r\n    point.row += diff.row;\r\n};\r\n\r\nvar moveRelative = function(point, start) {\r\n    if (point.row == start.row)\r\n        point.column -= start.column;\r\n    point.row -= start.row;\r\n};\r\n\r\n\r\nrequire(\"./lib/dom\").importCssString(\"\\\r\n.ace_snippet-marker {\\\r\n    -moz-box-sizing: border-box;\\\r\n    box-sizing: border-box;\\\r\n    background: rgba(194, 193, 208, 0.09);\\\r\n    border: 1px dotted rgba(211, 208, 235, 0.62);\\\r\n    position: absolute;\\\r\n}\");\r\n\r\nexports.snippetManager = new SnippetManager();\r\n\r\n\r\nvar Editor = require(\"./editor\").Editor;\r\n(function() {\r\n    this.insertSnippet = function(content, options) {\r\n        return exports.snippetManager.insertSnippet(this, content, options);\r\n    };\r\n    this.expandSnippet = function(options) {\r\n        return exports.snippetManager.expandWithTab(this, options);\r\n    };\r\n}).call(Editor.prototype);\r\n\r\n});\r\n"]}