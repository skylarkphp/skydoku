{"version":3,"sources":["test/asyncjs/test.js"],"names":["define","require","exports","module","oop","async","TestGenerator","source","Generator","call","this","inherits","exec","run","report","summary","err","passed","console","log","setupTest","each","test","next","setUpSuite","tearDownSuite","color","name","suiteName","count","index","stack","callback","failed","end","empty","context","setUp","makeAsync","tearDownCalled","tearDown","tearDownInner","testFn","fn","called","list","delay","timeout","toArray","errors","values","prototype","testcase","methods","method","push","single","forEach","charAt","testNames","filter","match","length","i","tests","map","undefined"],"mappings":"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","file":"../../../test/asyncjs/test.js","sourcesContent":["/*!\r\n * async.js\r\n * Copyright(c) 2010 Fabian Jakobs <fabian.jakobs@web.de>\r\n * MIT Licensed\r\n */\r\n\r\ndefine(function(require, exports, module) {\r\n\r\nvar oop = require(\"ace/lib/oop\")\r\nvar async = require(\"asyncjs/async\")\r\nrequire(\"asyncjs/utils\")\r\n\r\nexports.TestGenerator = function(source) {\r\n    async.Generator.call(this, source)\r\n}\r\n\r\noop.inherits(exports.TestGenerator, async.Generator)\r\n\r\n;(function() {\r\n    \r\n    this.exec = function() {\r\n        this.run().report().summary(function(err, passed) {\r\n            console.log(\"DONE\")\r\n        })\r\n    }\r\n    \r\n    this.run = function() {\r\n        return this.setupTest()\r\n            .each(function(test, next) {\r\n                if (test.setUpSuite)\r\n                    test.setUpSuite(next)\r\n                else\r\n                    next()\r\n            })\r\n            .each(function(test, next) {\r\n                test.test(function(err, passed) {\r\n                    test.err = err\r\n                    test.passed = passed\r\n                    next()\r\n                })\r\n            })\r\n            .each(function(test, next) {\r\n                if (test.tearDownSuite)\r\n                    test.tearDownSuite(next)\r\n                else\r\n                    next()\r\n            })\r\n    }\r\n    \r\n    this.report = function() {\r\n        return this.each(function(test, next) {\r\n            var color = test.passed ? \"\\x1b[32m\" : \"\\x1b[31m\"\r\n            var name = test.name\r\n            if (test.suiteName)\r\n                name = test.suiteName + \": \" + test.name\r\n            console.log(color + \"[\" + test.count + \"/\" + test.index + \"] \" + name + \" \" + (test.passed ? \"OK\" : \"FAIL\") + \"\\x1b[0m\")\r\n            if (!test.passed)                \r\n                if (test.err.stack)\r\n                    console.log(test.err.stack)\r\n                else\r\n                    console.log(test.err)\r\n                    \r\n            next()\r\n        })\r\n    }\r\n    \r\n    this.summary = function(callback) {\r\n        var passed = 0\r\n        var failed = 0\r\n        \r\n        this.each(function(test) {\r\n            if (test.passed)\r\n                passed += 1\r\n            else\r\n                failed += 1\r\n        }).end(function() {\r\n            console.log(\"\")\r\n            console.log(\"Summary:\")\r\n            console.log(\"\")\r\n            console.log(                  \"Total number of tests: \" + (passed + failed))\r\n            passed && console.log(\"\\x1b[32mPassed tests:          \" + passed + \"\\x1b[0m\")\r\n            failed && console.log(\"\\x1b[31mFailed tests:          \" + failed + \"\\x1b[0m\")\r\n            console.log(\"\")            \r\n            callback(null, failed == 0)\r\n        })\r\n    }\r\n    \r\n    this.setupTest = function() {\r\n        return this.each(function(test, next) {\r\n            var empty = function(next) { next() }\r\n            var context = test.context || this\r\n            \r\n            if (test.setUp)\r\n                var setUp = async.makeAsync(0, test.setUp, context)\r\n            else \r\n                setUp = empty\r\n\r\n            tearDownCalled = false\r\n            if (test.tearDown)\r\n                var tearDownInner = async.makeAsync(0, test.tearDown, context)\r\n            else\r\n                tearDownInner = empty\r\n                \r\n            function tearDown(next) {\r\n                tearDownCalled = true\r\n                tearDownInner.call(test.context, next)\r\n            }\r\n\r\n            var testFn = async.makeAsync(0, test.fn, context)\r\n                \r\n            test.test = function(callback) {    \r\n                var called            \r\n                function errorListener(e) {\r\n                    if (called)\r\n                        return\r\n                    called = true\r\n                    //process.removeListener('uncaughtException', errorListener)\r\n                    if (!tearDownCalled) {\r\n                        async.list([tearDown])\r\n                            .call()\r\n                            .timeout(test.timeout)\r\n                            .end(function() {\r\n                                callback(e, false)\r\n                            })                    }\r\n                    else\r\n                        callback(e, false)\r\n                }\r\n                //process.addListener('uncaughtException', errorListener)\r\n                \r\n                async.list([setUp, testFn, tearDown])\r\n                    .delay(0)\r\n                    .call(context)\r\n                    .timeout(test.timeout)\r\n                    .toArray(false, function(errors, values) {\r\n                        if (called)\r\n                            return\r\n                        called = true\r\n                        var err = errors[1]\r\n                        //process.removeListener('uncaughtException', errorListener)                            \r\n                        callback(err, !err)                        \r\n                    })\r\n            }\r\n            \r\n            next()\r\n        })\r\n    }\r\n    \r\n}).call(exports.TestGenerator.prototype)\r\n\r\nexports.testcase = function(testcase, suiteName, timeout) {\r\n    var methods = []\r\n    for (var method in testcase)\r\n        methods.push(method)\r\n        \r\n    var setUp = testcase.setUp || null\r\n    var tearDown = testcase.tearDown || null\r\n    \r\n    var single\r\n    methods.forEach(function(name) {\r\n        if (name.charAt(0) == '>')\r\n           single = name\r\n    })\r\n    if (single)\r\n        methods = [single]\r\n    \r\n    var testNames = methods.filter(function(method) { \r\n        return method.match(/^>?test/) && typeof(testcase[method]) == \"function\"\r\n    })\r\n    var count = testNames.length\r\n    var i=1\r\n    tests = testNames.map(function(name) {\r\n        return {\r\n            suiteName: suiteName || testcase.name || \"\",\r\n            name: name,\r\n            setUp: setUp,\r\n            tearDown: tearDown,\r\n            context: testcase,\r\n            timeout: timeout === undefined ? 3000 : timeout,\r\n            fn: testcase[name],\r\n            count: count,\r\n            index: i++\r\n        }\r\n    })\r\n\r\n    if (testcase.setUpSuite) {\r\n        tests[0].setUpSuite = async.makeAsync(0, testcase.setUpSuite, testcase)\r\n    }\r\n    if (testcase.tearDownSuite) {\r\n        tests[tests.length-1].tearDownSuite = async.makeAsync(0, testcase.tearDownSuite, testcase)\r\n    }\r\n\r\n    return async.list(tests, exports.TestGenerator)\r\n}\r\n\r\n})\r\n"]}