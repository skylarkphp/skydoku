{"version":3,"sources":["test/assertions.js"],"names":["define","require","exports","module","assert","position","cursor","row","column","equal","range","startRow","startColumn","endRow","endColumn","start","end","notOk","value","jsonEquals","foundJson","expectedJson","JSON","stringify","domNode","foundDom","expectedDom","Array","isArray","serializeDom","node","attributes","attributeArray","data","length","i","name","result","localName","childNodes","child","push","deepEqual"],"mappings":";;;;;;;AA8BAA,OAAO,SAASC,EAASC,EAASC,GAClC,aAEA,IAAIC,EAASH,EAAQ,UAErBG,EAAOC,SAAW,SAASC,EAAQC,EAAKC,GACpCJ,EAAOK,MAAMH,EAAOC,IAAKA,GACzBH,EAAOK,MAAMH,EAAOE,OAAQA,IAGhCJ,EAAOM,MAAQ,SAASA,EAAOC,EAAUC,EAAaC,EAAQC,GAC1DV,EAAOC,SAASK,EAAMK,MAAOJ,EAAUC,GACvCR,EAAOC,SAASK,EAAMM,IAAKH,EAAQC,IAGvCV,EAAOa,MAAQ,SAASC,GACpBd,EAAOK,MAAMS,GAAO,IAGxBd,EAAOe,WAAa,SAASC,EAAWC,GACpCjB,EAAOK,MAAMa,KAAKC,UAAUH,GAAYE,KAAKC,UAAUF,KAG3DjB,EAAOoB,QAAU,SAASC,EAAUC,GAC3BC,MAAMC,QAAQH,KACfA,EAIR,SAASI,EAAaC,GAClB,IAAIC,KACJ,IAAIC,EAAiBF,EAAKC,WAC1B,IAAKC,EACD,OAAOF,EAAKG,KAChB,GAAoC,iBAAzBD,EAAeE,OACtB,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAeE,OAAQC,IACvCJ,EAAWC,EAAeG,GAAGC,MAAQJ,EAAeG,GAAGjB,MAE/D,IAAImB,GAAUP,EAAKQ,UAAWP,GAC9B,IAAK,IAAII,EAAI,EAAGA,EAAIL,EAAKS,WAAWL,OAAQC,IAAK,CAC7C,IAAIK,EAAQX,EAAaC,EAAKS,WAAWJ,IACrCK,GACAH,EAAOI,KAAKD,GAEpB,OAAOH,EAnBQR,CAAaJ,IAC5BrB,EAAOsC,UAAUjB,EAAUC,IAqB/BvB,EAAOD,QAAUE","file":"../../test/assertions.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2010, Ajax.org B.V.\r\n * All rights reserved.\r\n * \r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n * \r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\ndefine(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar assert = require(\"assert\");\r\n    \r\nassert.position = function(cursor, row, column) {\r\n    assert.equal(cursor.row, row);\r\n    assert.equal(cursor.column, column);\r\n};\r\n\r\nassert.range = function(range, startRow, startColumn, endRow, endColumn) {\r\n    assert.position(range.start, startRow, startColumn);\r\n    assert.position(range.end, endRow, endColumn);\r\n};\r\n\r\nassert.notOk = function(value) {\r\n    assert.equal(value, false);   \r\n};\r\n\r\nassert.jsonEquals = function(foundJson, expectedJson) {\r\n    assert.equal(JSON.stringify(foundJson), JSON.stringify(expectedJson));\r\n};\r\n\r\nassert.domNode = function(foundDom, expectedDom) {\r\n    if (!Array.isArray(foundDom))\r\n        foundDom = serializeDom(foundDom);\r\n    assert.deepEqual(foundDom, expectedDom);\r\n};\r\n\r\nfunction serializeDom(node) {\r\n    var attributes = {};\r\n    var attributeArray = node.attributes;\r\n    if (!attributeArray)\r\n        return node.data;\r\n    if (typeof attributeArray.length == \"number\") {\r\n        for (var i = 0; i < attributeArray.length; i++)\r\n            attributes[attributeArray[i].name] = attributeArray[i].value;\r\n    }\r\n    var result = [node.localName, attributes];\r\n    for (var i = 0; i < node.childNodes.length; i++) {\r\n        var child = serializeDom(node.childNodes[i]);\r\n        if (child)\r\n            result.push(child);\r\n    }\r\n    return result;\r\n}\r\n\r\nmodule.exports = assert;\r\n\r\n});\r\n"]}