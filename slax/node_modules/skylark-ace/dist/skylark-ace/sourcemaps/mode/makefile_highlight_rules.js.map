{"version":3,"sources":["mode/makefile_highlight_rules.js"],"names":["define","require","exports","module","oop","TextHighlightRules","ShHighlightFile","MakefileHighlightRules","keywordMapper","this","createKeywordMapper","keyword","reservedKeywords","support.function.builtin","languageConstructs","invalid.deprecated","$rules","start","token","regex","next","comment","shell-start","inherits"],"mappings":";;;;;;;AAAAA,OAAO,SAASC,QAASC,QAASC,QAClC,aAEA,IAAIC,EAAMH,QAAQ,cACdI,EAAqBJ,QAAQ,0BAA0BI,mBAEvDC,EAAkBL,QAAQ,wBAE1BM,EAAyB,WAKzB,IAAIC,EAAgBC,KAAKC,qBACrBC,QAAWL,EAAgBM,iBAC3BC,2BAA4BP,EAAgBQ,mBAC5CC,qBAAsB,YACvB,UAEHN,KAAKO,QAELC,QAEQC,MAAO,wCACPC,MAAO,IACPC,KAAM,gBAGNF,MAAO,0CACPC,MAAO,SACPC,KAAM,YAGNF,OAAS,4BACTC,MAAO,qHAGPD,OAAQ,gCAAiC,QACzCC,MAAO,yCAGfE,UAEQH,MAAQ,0CACRC,MAAQ,SAGRD,MAAQ,0CACRC,MAAQ,KACRC,KAAQ,UAGhBE,gBAEQJ,MAAOV,EACPW,MAAQ,gCAGRD,MAAO,SACPC,MAAQ,SAGRD,MAAQ,wCACRC,MAAQ,IACRC,KAAQ,YAOpBhB,EAAImB,SAAShB,EAAwBF,GAErCH,QAAQK,uBAAyBA","file":"../../mode/makefile_highlight_rules.js","sourcesContent":["define(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\r\n\r\nvar ShHighlightFile = require(\"./sh_highlight_rules\");\r\n\r\nvar MakefileHighlightRules = function() {\r\n\r\n    // regexp must not have capturing parentheses. Use (?:) instead.\r\n    // regexps are ordered -> the first match is used\r\n\r\n    var keywordMapper = this.createKeywordMapper({\r\n        \"keyword\": ShHighlightFile.reservedKeywords,\r\n        \"support.function.builtin\": ShHighlightFile.languageConstructs,\r\n        \"invalid.deprecated\": \"debugger\"\r\n    }, \"string\");\r\n\r\n    this.$rules = \r\n        {\r\n    \"start\": [\r\n        {\r\n            token: \"string.interpolated.backtick.makefile\",\r\n            regex: \"`\",\r\n            next: \"shell-start\"\r\n        },\r\n        {\r\n            token: \"punctuation.definition.comment.makefile\",\r\n            regex: /#(?=.)/,\r\n            next: \"comment\"\r\n        },\r\n        {\r\n            token: [ \"keyword.control.makefile\"],\r\n            regex: \"^(?:\\\\s*\\\\b)(\\\\-??include|ifeq|ifneq|ifdef|ifndef|else|endif|vpath|export|unexport|define|endef|override)(?:\\\\b)\"\r\n        },\r\n        {// ^([^\\t ]+(\\s[^\\t ]+)*:(?!\\=))\\s*.*\r\n            token: [\"entity.name.function.makefile\", \"text\"],\r\n            regex: \"^([^\\\\t ]+(?:\\\\s[^\\\\t ]+)*:)(\\\\s*.*)\"\r\n        }\r\n    ],\r\n    \"comment\": [\r\n        {\r\n            token : \"punctuation.definition.comment.makefile\",\r\n            regex : /.+\\\\/\r\n        },\r\n        {\r\n            token : \"punctuation.definition.comment.makefile\",\r\n            regex : \".+\",\r\n            next  : \"start\"\r\n        }\r\n    ],\r\n    \"shell-start\": [\r\n        {\r\n            token: keywordMapper,\r\n            regex : \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\r\n        }, \r\n        {\r\n            token: \"string\",\r\n            regex : \"\\\\w+\"\r\n        }, \r\n        {\r\n            token : \"string.interpolated.backtick.makefile\",\r\n            regex : \"`\",\r\n            next  : \"start\"\r\n        }\r\n    ]\r\n};\r\n\r\n};\r\n\r\noop.inherits(MakefileHighlightRules, TextHighlightRules);\r\n\r\nexports.MakefileHighlightRules = MakefileHighlightRules;\r\n});\r\n"]}