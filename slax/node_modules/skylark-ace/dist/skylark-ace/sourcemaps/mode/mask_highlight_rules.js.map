{"version":3,"sources":["mode/mask_highlight_rules.js"],"names":["define","require","exports","module","MaskHighlightRules","const_FUNCTIONS","const_KEYWORDS","const_CONST","const_TAGS","oop","lang","TextRules","TextHighlightRules","JSRules","JavaScriptHighlightRules","CssRules","CssHighlightRules","MDRules","MarkdownHighlightRules","HTMLRules","HtmlHighlightRules","token_ATTR","token_ITALIC","token_LPARE","token_RPARE","this","$rules","start","Token","Blocks","string","syntax","tag","caseInsensitive","rules","addJavaScript","name","escape","closeType","add","Rules","strPrfx","rgxEnd","rootTokens","next","tokens","length","test","embedRules","normalizeRules","arrayToMap","split","inherits","str","token","interpolation","defaultToken","escaped","push","unshift","tagHead","rgx","goUp","onMatch","value","toLowerCase","regex","expression","attribute","type","attr","multiline","block","word","goStart","mix","arguments"],"mappings":"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","file":"../../mode/mask_highlight_rules.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2014, Ajax.org B.V.\r\n * All rights reserved.\r\n * \r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n * \r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\ndefine(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nexports.MaskHighlightRules = MaskHighlightRules;\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar lang = require(\"../lib/lang\");\r\nvar TextRules   = require(\"./text_highlight_rules\").TextHighlightRules;\r\nvar JSRules     = require(\"./javascript_highlight_rules\").JavaScriptHighlightRules;\r\nvar CssRules    = require(\"./css_highlight_rules\").CssHighlightRules;\r\nvar MDRules     = require(\"./markdown_highlight_rules\").MarkdownHighlightRules;\r\nvar HTMLRules   = require(\"./html_highlight_rules\").HtmlHighlightRules;\r\n\r\nvar token_TAG       = \"keyword.support.constant.language\",\r\n    token_COMPO     = \"support.function.markup.bold\",\r\n    token_KEYWORD   = \"keyword\",\r\n    token_LANG      = \"constant.language\",\r\n    token_UTIL      = \"keyword.control.markup.italic\",\r\n    token_ATTR      = \"support.variable.class\",\r\n    token_PUNKT     = \"keyword.operator\",\r\n    token_ITALIC    = \"markup.italic\",\r\n    token_BOLD      = \"markup.bold\",\r\n    token_LPARE     = \"paren.lparen\",\r\n    token_RPARE     = \"paren.rparen\";\r\n\r\nvar const_FUNCTIONS,\r\n    const_KEYWORDS,\r\n    const_CONST,\r\n    const_TAGS;\r\n(function(){\r\n    const_FUNCTIONS = lang.arrayToMap(\r\n        (\"log\").split(\"|\")\r\n    );\r\n    const_CONST = lang.arrayToMap(\r\n        (\":dualbind|:bind|:import|slot|event|style|html|markdown|md\").split(\"|\")\r\n    );\r\n    const_KEYWORDS = lang.arrayToMap(\r\n        (\"debugger|define|var|if|each|for|of|else|switch|case|with|visible|+if|+each|+for|+switch|+with|+visible|include|import\").split(\"|\")\r\n    );\r\n    const_TAGS = lang.arrayToMap(\r\n        (\"a|abbr|acronym|address|applet|area|article|aside|audio|b|base|basefont|bdo|\" + \r\n         \"big|blockquote|body|br|button|canvas|caption|center|cite|code|col|colgroup|\" + \r\n         \"command|datalist|dd|del|details|dfn|dir|div|dl|dt|em|embed|fieldset|\" + \r\n         \"figcaption|figure|font|footer|form|frame|frameset|h1|h2|h3|h4|h5|h6|head|\" + \r\n         \"header|hgroup|hr|html|i|iframe|img|input|ins|keygen|kbd|label|legend|li|\" + \r\n         \"link|map|mark|menu|meta|meter|nav|noframes|noscript|object|ol|optgroup|\" + \r\n         \"option|output|p|param|pre|progress|q|rp|rt|ruby|s|samp|script|section|select|\" + \r\n         \"small|source|span|strike|strong|style|sub|summary|sup|table|tbody|td|\" + \r\n         \"textarea|tfoot|th|thead|time|title|tr|tt|u|ul|var|video|wbr|xmp\").split(\"|\")\r\n    );\r\n}());\r\n\r\nfunction MaskHighlightRules () {\r\n\r\n    this.$rules = {\r\n        \"start\" : [\r\n            Token(\"comment\", \"\\\\/\\\\/.*$\"),\r\n            Token(\"comment\", \"\\\\/\\\\*\", [\r\n                Token(\"comment\", \".*?\\\\*\\\\/\", \"start\"),\r\n                Token(\"comment\", \".+\")\r\n            ]),\r\n            \r\n            Blocks.string(\"'''\"),\r\n            Blocks.string('\"\"\"'),\r\n            Blocks.string('\"'),\r\n            Blocks.string(\"'\"),\r\n            \r\n            Blocks.syntax(/(markdown|md)\\b/, \"md-multiline\", \"multiline\"),\r\n            Blocks.syntax(/html\\b/, \"html-multiline\", \"multiline\"),\r\n            Blocks.syntax(/(slot|event)\\b/, \"js-block\", \"block\"),\r\n            Blocks.syntax(/style\\b/, \"css-block\", \"block\"),\r\n            Blocks.syntax(/var\\b/, \"js-statement\", \"attr\"),\r\n            \r\n            Blocks.tag(),\r\n            \r\n            Token(token_LPARE, \"[[({>]\"),\r\n            Token(token_RPARE, \"[\\\\])};]\", \"start\"),\r\n            {\r\n                caseInsensitive: true\r\n            }\r\n        ]\r\n    };\r\n    var rules = this;\r\n    \r\n    addJavaScript(\"interpolation\", /\\]/, token_RPARE + \".\" + token_ITALIC);\r\n    addJavaScript(\"statement\", /\\)|}|;/);\r\n    addJavaScript(\"block\", /\\}/);\r\n    addCss();\r\n    addMarkdown();\r\n    addHtml();\r\n    \r\n    function addJavaScript(name, escape, closeType) {\r\n        var prfx  =  \"js-\" + name + \"-\",\r\n            rootTokens = name === \"block\" ? [\"start\"] : [\"start\", \"no_regex\"];\r\n        add(\r\n            JSRules\r\n            , prfx\r\n            , escape\r\n            , rootTokens\r\n            , closeType\r\n        );\r\n    }\r\n    function addCss() {\r\n        add(CssRules, \"css-block-\", /\\}/);\r\n    }\r\n    function addMarkdown() {\r\n        add(MDRules, \"md-multiline-\", /(\"\"\"|''')/, []);\r\n    }\r\n    function addHtml() {\r\n        add(HTMLRules, \"html-multiline-\", /(\"\"\"|''')/);\r\n    }\r\n    function add(Rules, strPrfx, rgxEnd, rootTokens, closeType) {\r\n        var next = \"pop\";\r\n        var tokens = rootTokens || [ \"start\" ];\r\n        if (tokens.length === 0) {\r\n            tokens = null;\r\n        }\r\n        if (/block|multiline/.test(strPrfx)) {\r\n            next = strPrfx + \"end\";\r\n            rules.$rules[next] = [\r\n                Token(\"empty\", \"\", \"start\")\r\n            ];\r\n        }\r\n        rules.embedRules(\r\n            Rules\r\n            , strPrfx\r\n            , [ Token(closeType || token_RPARE, rgxEnd, next) ]\r\n            , tokens\r\n            , tokens == null ? true : false\r\n        );\r\n    }\r\n\r\n    this.normalizeRules();\r\n}\r\noop.inherits(MaskHighlightRules, TextRules);\r\n\r\nvar Blocks = {\r\n    string: function(str, next){\r\n        var token = Token(\r\n            \"string.start\"\r\n            , str\r\n            , [\r\n                Token(token_LPARE + \".\" + token_ITALIC, /~\\[/, Blocks.interpolation()),\r\n                Token(\"string.end\", str, \"pop\"),\r\n                {\r\n                    defaultToken: \"string\"\r\n                }\r\n            ]\r\n            , next\r\n        );\r\n        if (str.length === 1){\r\n            var escaped = Token(\"string.escape\", \"\\\\\\\\\" + str);\r\n            token.push.unshift(escaped);\r\n        }\r\n        return token;\r\n    },\r\n    interpolation: function(){\r\n        return [\r\n            Token(token_UTIL, /\\s*\\w*\\s*:/),\r\n            \"js-interpolation-start\"\r\n        ];\r\n    },\r\n    tagHead: function (rgx) {\r\n      return Token(token_ATTR, rgx, [\r\n            Token(token_ATTR, /[\\w\\-_]+/),\r\n            Token(token_LPARE + \".\" + token_ITALIC, /~\\[/, Blocks.interpolation()),\r\n            Blocks.goUp()\r\n        ]);\r\n    },\r\n    tag: function () {\r\n        return {\r\n            token: 'tag',\r\n            onMatch :  function(value) {\r\n                if (void 0 !== const_KEYWORDS[value])\r\n                    return token_KEYWORD;\r\n                if (void 0 !== const_CONST[value])\r\n                    return token_LANG;\r\n                if (void 0 !== const_FUNCTIONS[value])\r\n                    return \"support.function\";\r\n                if (void 0 !== const_TAGS[value.toLowerCase()])\r\n                    return token_TAG;\r\n                \r\n                return token_COMPO;\r\n            },\r\n            regex : /([@\\w\\-_:+]+)|((^|\\s)(?=\\s*(\\.|#)))/,\r\n            push: [\r\n                Blocks.tagHead(/\\./) ,\r\n                Blocks.tagHead(/#/) ,\r\n                Blocks.expression(),\r\n                Blocks.attribute(),\r\n                \r\n                Token(token_LPARE, /[;>{]/, \"pop\")\r\n            ]\r\n        };\r\n    },\r\n    syntax: function(rgx, next, type){\r\n        return {\r\n            token: token_LANG,\r\n            regex : rgx,\r\n            push: ({\r\n                \"attr\": [\r\n                    next + \"-start\",\r\n                    Token(token_PUNKT, /;/, \"start\")\r\n                ],\r\n                \"multiline\": [\r\n                    Blocks.tagHead(/\\./) ,\r\n                    Blocks.tagHead(/#/) ,\r\n                    Blocks.attribute(),\r\n                    Blocks.expression(),\r\n                    Token(token_LPARE, /[>\\{]/),\r\n                    Token(token_PUNKT, /;/, \"start\"),\r\n                    Token(token_LPARE, /'''|\"\"\"/, [ next + \"-start\" ])\r\n                ],\r\n                \"block\": [\r\n                    Blocks.tagHead(/\\./) ,\r\n                    Blocks.tagHead(/#/) ,\r\n                    Blocks.attribute(),\r\n                    Blocks.expression(),\r\n                    Token(token_LPARE, /\\{/, [ next + \"-start\" ])\r\n                ]\r\n            })[type]\r\n        };\r\n    },\r\n    attribute: function(){\r\n        return Token(function(value){\r\n            return  /^x\\-/.test(value)\r\n                ? token_ATTR + \".\" + token_BOLD\r\n                : token_ATTR;\r\n        }, /[\\w_-]+/, [\r\n            Token(token_PUNKT, /\\s*=\\s*/, [\r\n                Blocks.string('\"'),\r\n                Blocks.string(\"'\"),\r\n                Blocks.word(),\r\n                Blocks.goUp()\r\n            ]),\r\n            Blocks.goUp()\r\n        ]);\r\n    },\r\n    expression: function(){\r\n        return Token(token_LPARE, /\\(/, [ \"js-statement-start\" ]);\r\n    },\r\n    word: function(){\r\n        return Token(\"string\", /[\\w-_]+/);\r\n    },\r\n    goUp: function(){\r\n        return Token(\"text\", \"\", \"pop\");\r\n    },\r\n    goStart: function(){\r\n        return Token(\"text\", \"\", \"start\");\r\n    }\r\n};\r\n\r\n\r\nfunction Token(token, rgx, mix) {\r\n    var push, next, onMatch;\r\n    if (arguments.length === 4) {\r\n        push = mix;\r\n        next = arguments[3];\r\n    }\r\n    else if (typeof mix === \"string\") {\r\n        next = mix;\r\n    }\r\n    else {\r\n        push = mix;\r\n    }\r\n    if (typeof token === \"function\") {\r\n        onMatch = token;\r\n        token   = \"empty\";\r\n    }\r\n    return {\r\n        token: token,\r\n        regex: rgx,\r\n        push: push,\r\n        next: next,\r\n        onMatch: onMatch\r\n    };\r\n}\r\n\r\n});\r\n"]}