{"version":3,"sources":["mode/vala_highlight_rules.js"],"names":["define","require","exports","module","oop","TextHighlightRules","ValaHighlightRules","this","$rules","start","token","regex","include","#all-types","#annotations","push","next","defaultToken","#anonymous-classes-and-new","push_disabled","TODO","originalRegex","#assertions","#class","comment","#class-body","#code","#comments","#comments-inline","#constants-and-special-vars","#enums","#keywords","#methods","#namespace","#object-types","#object-types-inherited","#parameters","#parens","#primitive-arrays","#primitive-types","#storage-modifiers","#strings","#throws","#values","normalizeRules","metaData","fileTypes","foldingStartMarker","foldingStopMarker","name","scopeName","inherits"],"mappings":"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","file":"../../mode/vala_highlight_rules.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2012, Ajax.org B.V.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\n/* This file was autogenerated from https://raw.githubusercontent.com/technosophos/Vala-TMBundle/master/Syntaxes/Vala.tmLanguage (uuid: ) */\r\n/****************************************************************************************\r\n * IT MIGHT NOT BE PERFECT ...But it's a good start from an existing *.tmlanguage file. *\r\n * fileTypes                                                                            *\r\n ****************************************************************************************/\r\n\r\ndefine(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\r\n\r\nvar ValaHighlightRules = function() {\r\n    // regexp must not have capturing parentheses. Use (?:) instead.\r\n    // regexps are ordered -> the first match is used\r\n\r\n    this.$rules = { start: \r\n       [ { token: \r\n            [ 'meta.using.vala',\r\n              'keyword.other.using.vala',\r\n              'meta.using.vala',\r\n              'storage.modifier.using.vala',\r\n              'meta.using.vala',\r\n              'punctuation.terminator.vala' ],\r\n           regex: '^(\\\\s*)(using)\\\\b(?:(\\\\s*)([^ ;$]+)(\\\\s*)((?:;)?))?' },\r\n         { include: '#code' } ],\r\n      '#all-types': \r\n       [ { include: '#primitive-arrays' },\r\n         { include: '#primitive-types' },\r\n         { include: '#object-types' } ],\r\n      '#annotations': \r\n       [ { token: \r\n            [ 'storage.type.annotation.vala',\r\n              'punctuation.definition.annotation-arguments.begin.vala' ],\r\n           regex: '(@[^ (]+)(\\\\()',\r\n           push: \r\n            [ { token: 'punctuation.definition.annotation-arguments.end.vala',\r\n                regex: '\\\\)',\r\n                next: 'pop' },\r\n              { token: \r\n                 [ 'constant.other.key.vala',\r\n                   'text',\r\n                   'keyword.operator.assignment.vala' ],\r\n                regex: '(\\\\w*)(\\\\s*)(=)' },\r\n              { include: '#code' },\r\n              { token: 'punctuation.seperator.property.vala', regex: ',' },\r\n              { defaultToken: 'meta.declaration.annotation.vala' } ] },\r\n         { token: 'storage.type.annotation.vala', regex: '@\\\\w*' } ],\r\n      '#anonymous-classes-and-new': \r\n       [ { token: 'keyword.control.new.vala',\r\n           regex: '\\\\bnew\\\\b',\r\n           push_disabled: \r\n            [ { token: 'text',\r\n                regex: '(?<=\\\\)|\\\\])(?!\\\\s*{)|(?<=})|(?=;)',\r\n                TODO: 'FIXME: regexp doesn\\'t have js equivalent',\r\n                originalRegex: '(?<=\\\\)|\\\\])(?!\\\\s*{)|(?<=})|(?=;)',\r\n                next: 'pop' },\r\n              { token: [ 'storage.type.vala', 'text' ],\r\n                regex: '(\\\\w+)(\\\\s*)(?=\\\\[)',\r\n                push: \r\n                 [ { token: 'text', regex: '}|(?=;|\\\\))', next: 'pop' },\r\n                   { token: 'text',\r\n                     regex: '\\\\[',\r\n                     push: \r\n                      [ { token: 'text', regex: '\\\\]', next: 'pop' },\r\n                        { include: '#code' } ] },\r\n                   { token: 'text',\r\n                     regex: '{',\r\n                     push: \r\n                      [ { token: 'text', regex: '(?=})', next: 'pop' },\r\n                        { include: '#code' } ] } ] },\r\n              { token: 'text',\r\n                regex: '(?=\\\\w.*\\\\()',\r\n                push: \r\n                 [ { token: 'text',\r\n                     regex: '(?<=\\\\))',\r\n                     TODO: 'FIXME: regexp doesn\\'t have js equivalent',\r\n                     originalRegex: '(?<=\\\\))',\r\n                     next: 'pop' },\r\n                   { include: '#object-types' },\r\n                   { token: 'text',\r\n                     regex: '\\\\(',\r\n                     push: \r\n                      [ { token: 'text', regex: '\\\\)', next: 'pop' },\r\n                        { include: '#code' } ] } ] },\r\n              { token: 'meta.inner-class.vala',\r\n                regex: '{',\r\n                push: \r\n                 [ { token: 'meta.inner-class.vala', regex: '}', next: 'pop' },\r\n                   { include: '#class-body' },\r\n                   { defaultToken: 'meta.inner-class.vala' } ] } ] } ],\r\n      '#assertions': \r\n       [ { token: \r\n            [ 'keyword.control.assert.vala',\r\n              'meta.declaration.assertion.vala' ],\r\n           regex: '\\\\b(assert|requires|ensures)(\\\\s)',\r\n           push: \r\n            [ { token: 'meta.declaration.assertion.vala',\r\n                regex: '$',\r\n                next: 'pop' },\r\n              { token: 'keyword.operator.assert.expression-seperator.vala',\r\n                regex: ':' },\r\n              { include: '#code' },\r\n              { defaultToken: 'meta.declaration.assertion.vala' } ] } ],\r\n      '#class': \r\n       [ { token: 'meta.class.vala',\r\n           regex: '(?=\\\\w?[\\\\w\\\\s]*(?:class|(?:@)?interface|enum|struct|namespace)\\\\s+\\\\w+)',\r\n           push: \r\n            [ { token: 'paren.vala',\r\n                regex: '}',\r\n                next: 'pop' },\r\n              { include: '#storage-modifiers' },\r\n              { include: '#comments' },\r\n              { token: \r\n                 [ 'storage.modifier.vala',\r\n                   'meta.class.identifier.vala',\r\n                   'entity.name.type.class.vala' ],\r\n                regex: '(class|(?:@)?interface|enum|struct|namespace)(\\\\s+)([\\\\w\\\\.]+)' },\r\n              { token: 'storage.modifier.extends.vala',\r\n                regex: ':',\r\n                push: \r\n                 [ { token: 'meta.definition.class.inherited.classes.vala',\r\n                     regex: '(?={|,)',\r\n                     next: 'pop' },\r\n                   { include: '#object-types-inherited' },\r\n                   { include: '#comments' },\r\n                   { defaultToken: 'meta.definition.class.inherited.classes.vala' } ] },\r\n              { token: \r\n                 [ 'storage.modifier.implements.vala',\r\n                   'meta.definition.class.implemented.interfaces.vala' ],\r\n                regex: '(,)(\\\\s)',\r\n                push: \r\n                 [ { token: 'meta.definition.class.implemented.interfaces.vala',\r\n                     regex: '(?=\\\\{)',\r\n                     next: 'pop' },\r\n                   { include: '#object-types-inherited' },\r\n                   { include: '#comments' },\r\n                   { defaultToken: 'meta.definition.class.implemented.interfaces.vala' } ] },\r\n              { token: 'paren.vala',\r\n                regex: '{',\r\n                push: \r\n                 [ { token: 'paren.vala', regex: '(?=})', next: 'pop' },\r\n                   { include: '#class-body' },\r\n                   { defaultToken: 'meta.class.body.vala' } ] },\r\n              { defaultToken: 'meta.class.vala' } ],\r\n           comment: 'attempting to put namespace in here.' } ],\r\n      '#class-body': \r\n       [ { include: '#comments' },\r\n         { include: '#class' },\r\n         { include: '#enums' },\r\n         { include: '#methods' },\r\n         { include: '#annotations' },\r\n         { include: '#storage-modifiers' },\r\n         { include: '#code' } ],\r\n      '#code': \r\n       [ { include: '#comments' },\r\n         { include: '#class' },\r\n         { token: 'text',\r\n           regex: '{',\r\n           push: \r\n            [ { token: 'text', regex: '}', next: 'pop' },\r\n              { include: '#code' } ] },\r\n         { include: '#assertions' },\r\n         { include: '#parens' },\r\n         { include: '#constants-and-special-vars' },\r\n         { include: '#anonymous-classes-and-new' },\r\n         { include: '#keywords' },\r\n         { include: '#storage-modifiers' },\r\n         { include: '#strings' },\r\n         { include: '#all-types' } ],\r\n      '#comments': \r\n       [ { token: 'punctuation.definition.comment.vala',\r\n           regex: '/\\\\*\\\\*/' },\r\n         { include: 'text.html.javadoc' },\r\n         { include: '#comments-inline' } ],\r\n      '#comments-inline': \r\n       [ { token: 'punctuation.definition.comment.vala',\r\n           regex: '/\\\\*',\r\n           push: \r\n            [ { token: 'punctuation.definition.comment.vala',\r\n                regex: '\\\\*/',\r\n                next: 'pop' },\r\n              { defaultToken: 'comment.block.vala' } ] },\r\n         { token: \r\n            [ 'text',\r\n              'punctuation.definition.comment.vala',\r\n              'comment.line.double-slash.vala' ],\r\n           regex: '(\\\\s*)(//)(.*$)' } ],\r\n      '#constants-and-special-vars': \r\n       [ { token: 'constant.language.vala',\r\n           regex: '\\\\b(?:true|false|null)\\\\b' },\r\n         { token: 'variable.language.vala',\r\n           regex: '\\\\b(?:this|base)\\\\b' },\r\n         { token: 'constant.numeric.vala',\r\n           regex: '\\\\b(?:0(?:x|X)[0-9a-fA-F]*|(?:[0-9]+\\\\.?[0-9]*|\\\\.[0-9]+)(?:(?:e|E)(?:\\\\+|-)?[0-9]+)?)(?:[LlFfUuDd]|UL|ul)?\\\\b' },\r\n         { token: [ 'keyword.operator.dereference.vala', 'constant.other.vala' ],\r\n           regex: '((?:\\\\.)?)\\\\b([A-Z][A-Z0-9_]+)(?!<|\\\\.class|\\\\s*\\\\w+\\\\s*=)\\\\b' } ],\r\n      '#enums': \r\n       [ { token: 'text',\r\n           regex: '^(?=\\\\s*[A-Z0-9_]+\\\\s*(?:{|\\\\(|,))',\r\n           push: \r\n            [ { token: 'text', regex: '(?=;|})', next: 'pop' },\r\n              { token: 'constant.other.enum.vala',\r\n                regex: '\\\\w+',\r\n                push: \r\n                 [ { token: 'meta.enum.vala', regex: '(?=,|;|})', next: 'pop' },\r\n                   { include: '#parens' },\r\n                   { token: 'text',\r\n                     regex: '{',\r\n                     push: \r\n                      [ { token: 'text', regex: '}', next: 'pop' },\r\n                        { include: '#class-body' } ] },\r\n                   { defaultToken: 'meta.enum.vala' } ] } ] } ],\r\n      '#keywords': \r\n       [ { token: 'keyword.control.catch-exception.vala',\r\n           regex: '\\\\b(?:try|catch|finally|throw)\\\\b' },\r\n         { token: 'keyword.control.vala', regex: '\\\\?|:|\\\\?\\\\?' },\r\n         { token: 'keyword.control.vala',\r\n           regex: '\\\\b(?:return|break|case|continue|default|do|while|for|foreach|switch|if|else|in|yield|get|set|value)\\\\b' },\r\n         { token: 'keyword.operator.vala',\r\n           regex: '\\\\b(?:typeof|is|as)\\\\b' },\r\n         { token: 'keyword.operator.comparison.vala',\r\n           regex: '==|!=|<=|>=|<>|<|>' },\r\n         { token: 'keyword.operator.assignment.vala', regex: '=' },\r\n         { token: 'keyword.operator.increment-decrement.vala',\r\n           regex: '\\\\-\\\\-|\\\\+\\\\+' },\r\n         { token: 'keyword.operator.arithmetic.vala',\r\n           regex: '\\\\-|\\\\+|\\\\*|\\\\/|%' },\r\n         { token: 'keyword.operator.logical.vala', regex: '!|&&|\\\\|\\\\|' },\r\n         { token: 'keyword.operator.dereference.vala',\r\n           regex: '\\\\.(?=\\\\S)',\r\n           originalRegex: '(?<=\\\\S)\\\\.(?=\\\\S)' },\r\n         { token: 'punctuation.terminator.vala', regex: ';' },\r\n         { token: 'keyword.operator.ownership', regex: 'owned|unowned' } ],\r\n      '#methods': \r\n       [ { token: 'meta.method.vala',\r\n           regex: '(?!new)(?=\\\\w.*\\\\s+)(?=[^=]+\\\\()',\r\n           push: \r\n            [ { token: 'paren.vala', regex: '}|(?=;)', next: 'pop' },\r\n              { include: '#storage-modifiers' },\r\n              { token: [ 'entity.name.function.vala', 'meta.method.identifier.vala' ],\r\n                regex: '([\\\\~\\\\w\\\\.]+)(\\\\s*\\\\()',\r\n                push: \r\n                 [ { token: 'meta.method.identifier.vala',\r\n                     regex: '\\\\)',\r\n                     next: 'pop' },\r\n                   { include: '#parameters' },\r\n                   { defaultToken: 'meta.method.identifier.vala' } ] },\r\n              { token: 'meta.method.return-type.vala',\r\n                regex: '(?=\\\\w.*\\\\s+\\\\w+\\\\s*\\\\()',\r\n                push: \r\n                 [ { token: 'meta.method.return-type.vala',\r\n                     regex: '(?=\\\\w+\\\\s*\\\\()',\r\n                     next: 'pop' },\r\n                   { include: '#all-types' },\r\n                   { defaultToken: 'meta.method.return-type.vala' } ] },\r\n              { include: '#throws' },\r\n              { token: 'paren.vala',\r\n                regex: '{',\r\n                push: \r\n                 [ { token: 'paren.vala', regex: '(?=})', next: 'pop' },\r\n                   { include: '#code' },\r\n                   { defaultToken: 'meta.method.body.vala' } ] },\r\n              { defaultToken: 'meta.method.vala' } ] } ],\r\n      '#namespace': \r\n       [ { token: 'text',\r\n           regex: '^(?=\\\\s*[A-Z0-9_]+\\\\s*(?:{|\\\\(|,))',\r\n           push: \r\n            [ { token: 'text', regex: '(?=;|})', next: 'pop' },\r\n              { token: 'constant.other.namespace.vala',\r\n                regex: '\\\\w+',\r\n                push: \r\n                 [ { token: 'meta.namespace.vala', regex: '(?=,|;|})', next: 'pop' },\r\n                   { include: '#parens' },\r\n                   { token: 'text',\r\n                     regex: '{',\r\n                     push: \r\n                      [ { token: 'text', regex: '}', next: 'pop' },\r\n                        { include: '#code' } ] },\r\n                   { defaultToken: 'meta.namespace.vala' } ] } ],\r\n           comment: 'This is not quite right. See the class grammar right now' } ],\r\n      '#object-types': \r\n       [ { token: 'storage.type.generic.vala',\r\n           regex: '\\\\b(?:[a-z]\\\\w*\\\\.)*[A-Z]+\\\\w*<',\r\n           push: \r\n            [ { token: 'storage.type.generic.vala',\r\n                regex: '>|[^\\\\w\\\\s,\\\\?<\\\\[()\\\\]]',\r\n                TODO: 'FIXME: regexp doesn\\'t have js equivalent',\r\n                originalRegex: '>|[^\\\\w\\\\s,\\\\?<\\\\[(?:[,]+)\\\\]]',\r\n                next: 'pop' },\r\n              { include: '#object-types' },\r\n              { token: 'storage.type.generic.vala',\r\n                regex: '<',\r\n                push: \r\n                 [ { token: 'storage.type.generic.vala',\r\n                     regex: '>|[^\\\\w\\\\s,\\\\[\\\\]<]',\r\n                     next: 'pop' },\r\n                   { defaultToken: 'storage.type.generic.vala' } ],\r\n                comment: 'This is just to support <>\\'s with no actual type prefix' },\r\n              { defaultToken: 'storage.type.generic.vala' } ] },\r\n         { token: 'storage.type.object.array.vala',\r\n           regex: '\\\\b(?:[a-z]\\\\w*\\\\.)*[A-Z]+\\\\w*(?=\\\\[)',\r\n           push: \r\n            [ { token: 'storage.type.object.array.vala',\r\n                regex: '(?=[^\\\\]\\\\s])',\r\n                next: 'pop' },\r\n              { token: 'text',\r\n                regex: '\\\\[',\r\n                push: \r\n                 [ { token: 'text', regex: '\\\\]', next: 'pop' },\r\n                   { include: '#code' } ] },\r\n              { defaultToken: 'storage.type.object.array.vala' } ] },\r\n         { token: \r\n            [ 'storage.type.vala',\r\n              'keyword.operator.dereference.vala',\r\n              'storage.type.vala' ],\r\n           regex: '\\\\b(?:([a-z]\\\\w*)(\\\\.))*([A-Z]+\\\\w*\\\\b)' } ],\r\n      '#object-types-inherited': \r\n       [ { token: 'entity.other.inherited-class.vala',\r\n           regex: '\\\\b(?:[a-z]\\\\w*\\\\.)*[A-Z]+\\\\w*<',\r\n           push: \r\n            [ { token: 'entity.other.inherited-class.vala',\r\n                regex: '>|[^\\\\w\\\\s,<]',\r\n                next: 'pop' },\r\n              { include: '#object-types' },\r\n              { token: 'storage.type.generic.vala',\r\n                regex: '<',\r\n                push: \r\n                 [ { token: 'storage.type.generic.vala',\r\n                     regex: '>|[^\\\\w\\\\s,<]',\r\n                     next: 'pop' },\r\n                   { defaultToken: 'storage.type.generic.vala' } ],\r\n                comment: 'This is just to support <>\\'s with no actual type prefix' },\r\n              { defaultToken: 'entity.other.inherited-class.vala' } ] },\r\n         { token: \r\n            [ 'entity.other.inherited-class.vala',\r\n              'keyword.operator.dereference.vala',\r\n              'entity.other.inherited-class.vala' ],\r\n           regex: '\\\\b(?:([a-z]\\\\w*)(\\\\.))*([A-Z]+\\\\w*)' } ],\r\n      '#parameters': \r\n       [ { token: 'storage.modifier.vala', regex: 'final' },\r\n         { include: '#primitive-arrays' },\r\n         { include: '#primitive-types' },\r\n         { include: '#object-types' },\r\n         { token: 'variable.parameter.vala', regex: '\\\\w+' } ],\r\n      '#parens': \r\n       [ { token: 'text',\r\n           regex: '\\\\(',\r\n           push: \r\n            [ { token: 'text', regex: '\\\\)', next: 'pop' },\r\n              { include: '#code' } ] } ],\r\n      '#primitive-arrays': \r\n       [ { token: 'storage.type.primitive.array.vala',\r\n           regex: '\\\\b(?:bool|byte|sbyte|char|decimal|double|float|int|uint|long|ulong|object|short|ushort|string|void|int8|int16|int32|int64|uint8|uint16|uint32|uint64)(?:\\\\[\\\\])*\\\\b' } ],\r\n      '#primitive-types': \r\n       [ { token: 'storage.type.primitive.vala',\r\n           regex: '\\\\b(?:var|bool|byte|sbyte|char|decimal|double|float|int|uint|long|ulong|object|short|ushort|string|void|signal|int8|int16|int32|int64|uint8|uint16|uint32|uint64)\\\\b',\r\n           comment: 'var is not really a primitive, but acts like one in most cases' } ],\r\n      '#storage-modifiers': \r\n       [ { token: 'storage.modifier.vala',\r\n           regex: '\\\\b(?:public|private|protected|internal|static|final|sealed|virtual|override|abstract|readonly|volatile|dynamic|async|unsafe|out|ref|weak|owned|unowned|const)\\\\b',\r\n           comment: 'Not sure about unsafe and readonly' } ],\r\n      '#strings': \r\n       [ { token: 'punctuation.definition.string.begin.vala',\r\n           regex: '@\"',\r\n           push: \r\n            [ { token: 'punctuation.definition.string.end.vala',\r\n                regex: '\"',\r\n                next: 'pop' },\r\n              { token: 'constant.character.escape.vala',\r\n                regex: '\\\\\\\\.|%[\\\\w\\\\.\\\\-]+|\\\\$(?:\\\\w+|\\\\([\\\\w\\\\s\\\\+\\\\-\\\\*\\\\/]+\\\\))' },\r\n              { defaultToken: 'string.quoted.interpolated.vala' } ] },\r\n         { token: 'punctuation.definition.string.begin.vala',\r\n           regex: '\"',\r\n           push: \r\n            [ { token: 'punctuation.definition.string.end.vala',\r\n                regex: '\"',\r\n                next: 'pop' },\r\n              { token: 'constant.character.escape.vala', regex: '\\\\\\\\.' },\r\n              { token: 'constant.character.escape.vala',\r\n                regex: '%[\\\\w\\\\.\\\\-]+' },\r\n              { defaultToken: 'string.quoted.double.vala' } ] },\r\n         { token: 'punctuation.definition.string.begin.vala',\r\n           regex: '\\'',\r\n           push: \r\n            [ { token: 'punctuation.definition.string.end.vala',\r\n                regex: '\\'',\r\n                next: 'pop' },\r\n              { token: 'constant.character.escape.vala', regex: '\\\\\\\\.' },\r\n              { defaultToken: 'string.quoted.single.vala' } ] },\r\n         { token: 'punctuation.definition.string.begin.vala',\r\n           regex: '\"\"\"',\r\n           push: \r\n            [ { token: 'punctuation.definition.string.end.vala',\r\n                regex: '\"\"\"',\r\n                next: 'pop' },\r\n              { token: 'constant.character.escape.vala',\r\n                regex: '%[\\\\w\\\\.\\\\-]+' },\r\n              { defaultToken: 'string.quoted.triple.vala' } ] } ],\r\n      '#throws': \r\n       [ { token: 'storage.modifier.vala',\r\n           regex: 'throws',\r\n           push: \r\n            [ { token: 'meta.throwables.vala', regex: '(?={|;)', next: 'pop' },\r\n              { include: '#object-types' },\r\n              { defaultToken: 'meta.throwables.vala' } ] } ],\r\n      '#values': \r\n       [ { include: '#strings' },\r\n         { include: '#object-types' },\r\n         { include: '#constants-and-special-vars' } ] };\r\n    \r\n    this.normalizeRules();\r\n};\r\n\r\nValaHighlightRules.metaData = { \r\n    comment: 'Based heavily on the Java bundle\\'s language syntax. TODO:\\n* Closures\\n* Delegates\\n* Properties: Better support for properties.\\n* Annotations\\n* Error domains\\n* Named arguments\\n* Array slicing, negative indexes, multidimensional\\n* construct blocks\\n* lock blocks?\\n* regex literals\\n* DocBlock syntax highlighting. (Currently importing javadoc)\\n* Folding rule for comments.\\n',\r\n      fileTypes: [ 'vala' ],\r\n      foldingStartMarker: '(\\\\{\\\\s*(//.*)?$|^\\\\s*// \\\\{\\\\{\\\\{)',\r\n      foldingStopMarker: '^\\\\s*(\\\\}|// \\\\}\\\\}\\\\}$)',\r\n      name: 'Vala',\r\n      scopeName: 'source.vala' };\r\n\r\n\r\noop.inherits(ValaHighlightRules, TextHighlightRules);\r\n\r\nexports.ValaHighlightRules = ValaHighlightRules;\r\n});"]}