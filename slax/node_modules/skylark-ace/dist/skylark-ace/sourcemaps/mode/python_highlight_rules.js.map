{"version":3,"sources":["mode/python_highlight_rules.js"],"names":["define","require","exports","module","oop","TextHighlightRules","PythonHighlightRules","keywordMapper","this","createKeywordMapper","invalid.deprecated","support.function","variable.language","constant.language","keyword","integer","pointFloat","floatNumber","stringEscape","$rules","start","token","regex","strPre","next","strRawPre","strFormatPre","strRawFormatPre","include","qqstring3","defaultToken","qstring3","qqstring","qstring","rawqqstring3","rawqstring3","rawqqstring","rawqstring","fqqstring3","push","fqstring3","fqqstring","fqstring","rfqqstring3","rfqstring3","rfqqstring","rfqstring","fqstringParRules","constants","normalizeRules","inherits"],"mappings":"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","file":"../../mode/python_highlight_rules.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2010, Ajax.org B.V.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n/*\r\n * TODO: python delimiters\r\n */\r\n\r\ndefine(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\r\n\r\nvar PythonHighlightRules = function() {\r\n\r\n    var keywords = (\r\n        \"and|as|assert|break|class|continue|def|del|elif|else|except|exec|\" +\r\n        \"finally|for|from|global|if|import|in|is|lambda|not|or|pass|print|\" +\r\n        \"raise|return|try|while|with|yield|async|await|nonlocal\"\r\n    );\r\n\r\n    var builtinConstants = (\r\n        \"True|False|None|NotImplemented|Ellipsis|__debug__\"\r\n    );\r\n\r\n    var builtinFunctions = (\r\n        \"abs|divmod|input|open|staticmethod|all|enumerate|int|ord|str|any|\" +\r\n        \"eval|isinstance|pow|sum|basestring|execfile|issubclass|print|super|\" +\r\n        \"binfile|bin|iter|property|tuple|bool|filter|len|range|type|bytearray|\" +\r\n        \"float|list|raw_input|unichr|callable|format|locals|reduce|unicode|\" +\r\n        \"chr|frozenset|long|reload|vars|classmethod|getattr|map|repr|xrange|\" +\r\n        \"cmp|globals|max|reversed|zip|compile|hasattr|memoryview|round|\" +\r\n        \"__import__|complex|hash|min|apply|delattr|help|next|setattr|set|\" +\r\n        \"buffer|dict|hex|object|slice|coerce|dir|id|oct|sorted|intern|\" +\r\n        \"ascii|breakpoint|bytes\"\r\n    );\r\n\r\n    //var futureReserved = \"\";\r\n    var keywordMapper = this.createKeywordMapper({\r\n        \"invalid.deprecated\": \"debugger\",\r\n        \"support.function\": builtinFunctions,\r\n        \"variable.language\": \"self|cls\",\r\n        \"constant.language\": builtinConstants,\r\n        \"keyword\": keywords\r\n    }, \"identifier\");\r\n\r\n    var strPre = \"[uU]?\";\r\n    var strRawPre = \"[rR]\";\r\n    var strFormatPre = \"[fF]\";\r\n    var strRawFormatPre = \"(?:[rR][fF]|[fF][rR])\";\r\n    var decimalInteger = \"(?:(?:[1-9]\\\\d*)|(?:0))\";\r\n    var octInteger = \"(?:0[oO]?[0-7]+)\";\r\n    var hexInteger = \"(?:0[xX][\\\\dA-Fa-f]+)\";\r\n    var binInteger = \"(?:0[bB][01]+)\";\r\n    var integer = \"(?:\" + decimalInteger + \"|\" + octInteger + \"|\" + hexInteger + \"|\" + binInteger + \")\";\r\n\r\n    var exponent = \"(?:[eE][+-]?\\\\d+)\";\r\n    var fraction = \"(?:\\\\.\\\\d+)\";\r\n    var intPart = \"(?:\\\\d+)\";\r\n    var pointFloat = \"(?:(?:\" + intPart + \"?\" + fraction + \")|(?:\" + intPart + \"\\\\.))\";\r\n    var exponentFloat = \"(?:(?:\" + pointFloat + \"|\" + intPart + \")\" + exponent + \")\";\r\n    var floatNumber = \"(?:\" + exponentFloat + \"|\" + pointFloat + \")\";\r\n\r\n    var stringEscape = \"\\\\\\\\(x[0-9A-Fa-f]{2}|[0-7]{3}|[\\\\\\\\abfnrtv'\\\"]|U[0-9A-Fa-f]{8}|u[0-9A-Fa-f]{4})\";\r\n\r\n    this.$rules = {\r\n        \"start\" : [ {\r\n            token : \"comment\",\r\n            regex : \"#.*$\"\r\n        }, {\r\n            token : \"string\",           // multi line \"\"\" string start\r\n            regex : strPre + '\"{3}',\r\n            next : \"qqstring3\"\r\n        }, {\r\n            token : \"string\",           // \" string\r\n            regex : strPre + '\"(?=.)',\r\n            next : \"qqstring\"\r\n        }, {\r\n            token : \"string\",           // multi line ''' string start\r\n            regex : strPre + \"'{3}\",\r\n            next : \"qstring3\"\r\n        }, {\r\n            token : \"string\",           // ' string\r\n            regex : strPre + \"'(?=.)\",\r\n            next : \"qstring\"\r\n        }, {\r\n            token: \"string\",\r\n            regex: strRawPre + '\"{3}',\r\n            next: \"rawqqstring3\"\r\n        }, {\r\n            token: \"string\", \r\n            regex: strRawPre + '\"(?=.)',\r\n            next: \"rawqqstring\"\r\n        }, {\r\n            token: \"string\",\r\n            regex: strRawPre + \"'{3}\",\r\n            next: \"rawqstring3\"\r\n        }, {\r\n            token: \"string\",\r\n            regex: strRawPre + \"'(?=.)\",\r\n            next: \"rawqstring\"\r\n        }, {\r\n            token: \"string\",\r\n            regex: strFormatPre + '\"{3}',\r\n            next: \"fqqstring3\"\r\n        }, {\r\n            token: \"string\",\r\n            regex: strFormatPre + '\"(?=.)',\r\n            next: \"fqqstring\"\r\n        }, {\r\n            token: \"string\",\r\n            regex: strFormatPre + \"'{3}\",\r\n            next: \"fqstring3\"\r\n        }, {\r\n            token: \"string\",\r\n            regex: strFormatPre + \"'(?=.)\",\r\n            next: \"fqstring\"\r\n        },{\r\n            token: \"string\",\r\n            regex: strRawFormatPre + '\"{3}',\r\n            next: \"rfqqstring3\"\r\n        }, {\r\n            token: \"string\",\r\n            regex: strRawFormatPre + '\"(?=.)',\r\n            next: \"rfqqstring\"\r\n        }, {\r\n            token: \"string\",\r\n            regex: strRawFormatPre + \"'{3}\",\r\n            next: \"rfqstring3\"\r\n        }, {\r\n            token: \"string\",\r\n            regex: strRawFormatPre + \"'(?=.)\",\r\n            next: \"rfqstring\"\r\n        }, {\r\n            token: \"keyword.operator\",\r\n            regex: \"\\\\+|\\\\-|\\\\*|\\\\*\\\\*|\\\\/|\\\\/\\\\/|%|@|<<|>>|&|\\\\||\\\\^|~|<|>|<=|=>|==|!=|<>|=\"\r\n        }, {\r\n            token: \"punctuation\",\r\n            regex: \",|:|;|\\\\->|\\\\+=|\\\\-=|\\\\*=|\\\\/=|\\\\/\\\\/=|%=|@=|&=|\\\\|=|^=|>>=|<<=|\\\\*\\\\*=\"\r\n        }, {\r\n            token: \"paren.lparen\",\r\n            regex: \"[\\\\[\\\\(\\\\{]\"\r\n        }, {\r\n            token: \"paren.rparen\",\r\n            regex: \"[\\\\]\\\\)\\\\}]\"\r\n        }, {\r\n            token: \"text\",\r\n            regex: \"\\\\s+\"\r\n        }, {\r\n            include: \"constants\"\r\n        }],\r\n        \"qqstring3\": [{\r\n            token: \"constant.language.escape\",\r\n            regex: stringEscape\r\n        }, {\r\n            token: \"string\", // multi line \"\"\" string end\r\n            regex: '\"{3}',\r\n            next: \"start\"\r\n        }, {\r\n            defaultToken: \"string\"\r\n        }],\r\n        \"qstring3\": [{\r\n            token: \"constant.language.escape\",\r\n            regex: stringEscape\r\n        }, {\r\n            token: \"string\",  // multi line ''' string end\r\n            regex: \"'{3}\",\r\n            next: \"start\"\r\n        }, {\r\n            defaultToken: \"string\"\r\n        }],\r\n        \"qqstring\": [{\r\n            token: \"constant.language.escape\",\r\n            regex: stringEscape\r\n        }, {\r\n            token: \"string\",\r\n            regex: \"\\\\\\\\$\",\r\n            next: \"qqstring\"\r\n        }, {\r\n            token: \"string\",\r\n            regex: '\"|$',\r\n            next: \"start\"\r\n        }, {\r\n            defaultToken: \"string\"\r\n        }],\r\n        \"qstring\": [{\r\n            token: \"constant.language.escape\",\r\n            regex: stringEscape\r\n        }, {\r\n            token: \"string\",\r\n            regex: \"\\\\\\\\$\",\r\n            next: \"qstring\"\r\n        }, {\r\n            token: \"string\",\r\n            regex: \"'|$\",\r\n            next: \"start\"\r\n        }, {\r\n            defaultToken: \"string\"\r\n        }],\r\n        \"rawqqstring3\": [{\r\n            token: \"string\", // multi line \"\"\" string end\r\n            regex: '\"{3}',\r\n            next: \"start\"\r\n        }, {\r\n            defaultToken: \"string\"\r\n        }],\r\n        \"rawqstring3\": [{\r\n            token: \"string\",  // multi line ''' string end\r\n            regex: \"'{3}\",\r\n            next: \"start\"\r\n        }, {\r\n            defaultToken: \"string\"\r\n        }],\r\n        \"rawqqstring\": [{\r\n            token: \"string\",\r\n            regex: \"\\\\\\\\$\",\r\n            next: \"rawqqstring\"\r\n        }, {\r\n            token: \"string\",\r\n            regex: '\"|$',\r\n            next: \"start\"\r\n        }, {\r\n            defaultToken: \"string\"\r\n        }],\r\n        \"rawqstring\": [{\r\n            token: \"string\",\r\n            regex: \"\\\\\\\\$\",\r\n            next: \"rawqstring\"\r\n        }, {\r\n            token: \"string\",\r\n            regex: \"'|$\",\r\n            next: \"start\"\r\n        }, {\r\n            defaultToken: \"string\"\r\n        }],\r\n        \"fqqstring3\": [{\r\n            token: \"constant.language.escape\",\r\n            regex: stringEscape\r\n        }, {\r\n            token: \"string\", // multi line \"\"\" string end\r\n            regex: '\"{3}',\r\n            next: \"start\"\r\n        }, {\r\n            token: \"paren.lparen\",\r\n            regex: \"{\",\r\n            push: \"fqstringParRules\"\r\n        }, {\r\n            defaultToken: \"string\"\r\n        }],\r\n        \"fqstring3\": [{\r\n            token: \"constant.language.escape\",\r\n            regex: stringEscape\r\n        }, {\r\n            token: \"string\",  // multi line ''' string end\r\n            regex: \"'{3}\",\r\n            next: \"start\"\r\n        }, {\r\n            token: \"paren.lparen\",\r\n            regex: \"{\",\r\n            push: \"fqstringParRules\"\r\n        }, {\r\n            defaultToken: \"string\"\r\n        }],\r\n        \"fqqstring\": [{\r\n            token: \"constant.language.escape\",\r\n            regex: stringEscape\r\n        }, {\r\n            token: \"string\",\r\n            regex: \"\\\\\\\\$\",\r\n            next: \"fqqstring\"\r\n        }, {\r\n            token: \"string\",\r\n            regex: '\"|$',\r\n            next: \"start\"\r\n        }, {\r\n            token: \"paren.lparen\",\r\n            regex: \"{\",\r\n            push: \"fqstringParRules\"\r\n        }, {\r\n            defaultToken: \"string\"\r\n        }],\r\n        \"fqstring\": [{\r\n            token: \"constant.language.escape\",\r\n            regex: stringEscape\r\n        }, {\r\n            token: \"string\",\r\n            regex: \"'|$\",\r\n            next: \"start\"\r\n        }, {\r\n            token: \"paren.lparen\",\r\n            regex: \"{\",\r\n            push: \"fqstringParRules\"\r\n        }, {\r\n            defaultToken: \"string\"\r\n        }],\r\n        \"rfqqstring3\": [{\r\n            token: \"string\", // multi line \"\"\" string end\r\n            regex: '\"{3}',\r\n            next: \"start\"\r\n        }, {\r\n            token: \"paren.lparen\",\r\n            regex: \"{\",\r\n            push: \"fqstringParRules\"\r\n        }, {\r\n            defaultToken: \"string\"\r\n        }],\r\n        \"rfqstring3\": [{\r\n            token: \"string\",  // multi line ''' string end\r\n            regex: \"'{3}\",\r\n            next: \"start\"\r\n        }, {\r\n            token: \"paren.lparen\",\r\n            regex: \"{\",\r\n            push: \"fqstringParRules\"\r\n        }, {\r\n            defaultToken: \"string\"\r\n        }],\r\n        \"rfqqstring\": [{\r\n            token: \"string\",\r\n            regex: \"\\\\\\\\$\",\r\n            next: \"rfqqstring\"\r\n        }, {\r\n            token: \"string\",\r\n            regex: '\"|$',\r\n            next: \"start\"\r\n        }, {\r\n            token: \"paren.lparen\",\r\n            regex: \"{\",\r\n            push: \"fqstringParRules\"\r\n        }, {\r\n            defaultToken: \"string\"\r\n        }],\r\n        \"rfqstring\": [{\r\n            token: \"string\",\r\n            regex: \"'|$\",\r\n            next: \"start\"\r\n        }, {\r\n            token: \"paren.lparen\",\r\n            regex: \"{\",\r\n            push: \"fqstringParRules\"\r\n        }, {\r\n            defaultToken: \"string\"\r\n        }],\r\n        \"fqstringParRules\": [{//TODO: nested {}\r\n            token: \"paren.lparen\",\r\n            regex: \"[\\\\[\\\\(]\"\r\n        }, {\r\n            token: \"paren.rparen\",\r\n            regex: \"[\\\\]\\\\)]\"\r\n        }, {\r\n            token: \"string\",\r\n            regex: \"\\\\s+\"\r\n        }, {\r\n            token: \"string\",\r\n            regex: \"'(.)*'\"\r\n        }, {\r\n            token: \"string\",\r\n            regex: '\"(.)*\"'\r\n        }, {\r\n            token: \"function.support\",\r\n            regex: \"(!s|!r|!a)\"\r\n        }, {\r\n            include: \"constants\"\r\n        },{\r\n            token: 'paren.rparen',\r\n            regex: \"}\",\r\n            next: 'pop'\r\n        },{\r\n            token: 'paren.lparen',\r\n            regex: \"{\",\r\n            push: \"fqstringParRules\"\r\n        }],\r\n        \"constants\": [{\r\n            token: \"constant.numeric\", // imaginary\r\n            regex: \"(?:\" + floatNumber + \"|\\\\d+)[jJ]\\\\b\"\r\n        }, {\r\n            token: \"constant.numeric\", // float\r\n            regex: floatNumber\r\n        }, {\r\n            token: \"constant.numeric\", // long integer\r\n            regex: integer + \"[lL]\\\\b\"\r\n        }, {\r\n            token: \"constant.numeric\", // integer\r\n            regex: integer + \"\\\\b\"\r\n        }, {\r\n            token: [\"punctuation\", \"function.support\"],// method\r\n            regex: \"(\\\\.)([a-zA-Z_]+)\\\\b\"\r\n        }, {\r\n            token: keywordMapper,\r\n            regex: \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\r\n        }]\r\n    };\r\n    this.normalizeRules();\r\n};\r\n\r\noop.inherits(PythonHighlightRules, TextHighlightRules);\r\n\r\nexports.PythonHighlightRules = PythonHighlightRules;\r\n});\r\n"]}