{"version":3,"sources":["mode/javascript_worker.js"],"names":["define","require","exports","module","oop","Mirror","lint","JSHINT","startRegex","arr","RegExp","join","disabledWarningsRe","errorsRe","infoRe","JavaScriptWorker","sender","call","this","setTimeout","setOptions","inherits","options","esnext","moz","devel","browser","node","laxcomma","laxbreak","lastsemic","onevar","passfail","maxerr","expr","multistr","globalstrict","doc","getValue","deferredUpdate","schedule","changeOptions","newOptions","mixin","isValidJS","str","eval","e","onUpdate","value","replace","emit","errors","maxErrorLevel","globals","results","i","length","error","raw","type","evidence","substr","character","charAt","search","test","reason","push","row","line","column","text","prototype"],"mappings":";;;;;;;AA8BAA,OAAO,SAASC,QAASC,QAASC,QAClC,aAEA,IAAIC,IAAMH,QAAQ,cACdI,OAASJ,QAAQ,oBAAoBI,OACrCC,KAAOL,QAAQ,uBAAuBM,OAE1C,SAASC,WAAWC,GAChB,OAAOC,OAAO,KAAOD,EAAIE,KAAK,KAAO,KAGzC,IAAIC,mBAAqBJ,YACrB,8BACA,yBAEAK,SAAWL,YACX,aACA,YACA,yBACA,0CACA,YACA,aACA,kBACA,iBACA,sBACA,wBAEAM,OAASN,YACT,yBACA,wBACA,mBACA,mBACA,2BACA,8BACA,iDACA,4BAGAO,iBAAmBb,QAAQa,iBAAmB,SAASC,GACvDX,OAAOY,KAAKC,KAAMF,GAClBE,KAAKC,WAAW,KAChBD,KAAKE,cAGThB,IAAIiB,SAASN,iBAAkBV,QAE/B,WACIa,KAAKE,WAAa,SAASE,GACvBJ,KAAKI,QAAUA,IAGXC,QAAQ,EACRC,KAAK,EACLC,OAAO,EACPC,SAAS,EACTC,MAAM,EACNC,UAAU,EACVC,UAAU,EACVC,WAAW,EACXC,QAAQ,EACRC,UAAU,EACVC,OAAQ,IACRC,MAAM,EACNC,UAAU,EACVC,cAAc,GAElBlB,KAAKmB,IAAIC,YAAcpB,KAAKqB,eAAeC,SAAS,MAGxDtB,KAAKuB,cAAgB,SAASC,GAC1BtC,IAAIuC,MAAMzB,KAAKI,QAASoB,GACxBxB,KAAKmB,IAAIC,YAAcpB,KAAKqB,eAAeC,SAAS,MAGxDtB,KAAK0B,UAAY,SAASC,KACtB,IAEIC,KAAK,WAAaD,KACpB,MAAME,GACJ,GAAU,IAANA,EACA,OAAO,EAEf,OAAO,GAGX7B,KAAK8B,SAAW,WACZ,IAAIC,EAAQ/B,KAAKmB,IAAIC,WAErB,KADAW,EAAQA,EAAMC,QAAQ,UAAW,OAE7B,OAAOhC,KAAKF,OAAOmC,KAAK,eAE5B,IAAIC,KAGAC,EAAgBnC,KAAK0B,UAAUK,GAAS,UAAY,QAGxD3C,KAAK2C,EAAO/B,KAAKI,QAASJ,KAAKI,QAAQgC,SAIvC,IAHA,IAAIC,EAAUjD,KAAK8C,OAGVI,EAAI,EAAGA,EAAID,EAAQE,OAAQD,IAAK,CACrC,IAAIE,EAAQH,EAAQC,GACpB,GAAKE,EAAL,CAEA,IAAIC,EAAMD,EAAMC,IACZC,EAAO,UAEX,GAAW,sBAAPD,EAA6B,CAC7B,IAAId,EAAMa,EAAMG,SAASC,OAAOJ,EAAMK,WACtClB,EAAMA,EAAImB,OAAOnB,EAAIoB,OAAO,OACP,SAAjBZ,GAA4BR,GAAO,cAAcqB,KAAKrB,IACtDa,EAAMS,OAAS,+BACfP,EAAO,SAEPA,EAAO,WAGV,CAAA,GAAIhD,mBAAmBsD,KAAKP,GAC7B,SAEK7C,OAAOoD,KAAKP,GACjBC,EAAO,OAEF/C,SAASqD,KAAKP,KACL,EACdC,EAAOP,GAEK,yBAAPM,EACLC,EAAO,UAEK,oCAAPD,IACLC,EAAO,QAGXR,EAAOgB,MACHC,IAAKX,EAAMY,KAAK,EAChBC,OAAQb,EAAMK,UAAU,EACxBS,KAAMd,EAAMS,OACZP,KAAMA,EACND,IAAKA,KASbzC,KAAKF,OAAOmC,KAAK,WAAYC,KAGlCnC,KAAKF,iBAAiB0D","file":"../../mode/javascript_worker.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2010, Ajax.org B.V.\r\n * All rights reserved.\r\n * \r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n * \r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\ndefine(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar Mirror = require(\"../worker/mirror\").Mirror;\r\nvar lint = require(\"./javascript/jshint\").JSHINT;\r\n\r\nfunction startRegex(arr) {\r\n    return RegExp(\"^(\" + arr.join(\"|\") + \")\");\r\n}\r\n\r\nvar disabledWarningsRe = startRegex([\r\n    \"Bad for in variable '(.+)'.\",\r\n    'Missing \"use strict\"'\r\n]);\r\nvar errorsRe = startRegex([\r\n    \"Unexpected\",\r\n    \"Expected \",\r\n    \"Confusing (plus|minus)\",\r\n    \"\\\\{a\\\\} unterminated regular expression\",\r\n    \"Unclosed \",\r\n    \"Unmatched \",\r\n    \"Unbegun comment\",\r\n    \"Bad invocation\",\r\n    \"Missing space after\",\r\n    \"Missing operator at\"\r\n]);\r\nvar infoRe = startRegex([\r\n    \"Expected an assignment\",\r\n    \"Bad escapement of EOL\",\r\n    \"Unexpected comma\",\r\n    \"Unexpected space\",\r\n    \"Missing radix parameter.\",\r\n    \"A leading decimal point can\",\r\n    \"\\\\['{a}'\\\\] is better written in dot notation.\",\r\n    \"'{a}' used out of scope\"\r\n]);\r\n\r\nvar JavaScriptWorker = exports.JavaScriptWorker = function(sender) {\r\n    Mirror.call(this, sender);\r\n    this.setTimeout(500);\r\n    this.setOptions();\r\n};\r\n\r\noop.inherits(JavaScriptWorker, Mirror);\r\n\r\n(function() {\r\n    this.setOptions = function(options) {\r\n        this.options = options || {\r\n            // undef: true,\r\n            // unused: true,\r\n            esnext: true,\r\n            moz: true,\r\n            devel: true,\r\n            browser: true,\r\n            node: true,\r\n            laxcomma: true,\r\n            laxbreak: true,\r\n            lastsemic: true,\r\n            onevar: false,\r\n            passfail: false,\r\n            maxerr: 100,\r\n            expr: true,\r\n            multistr: true,\r\n            globalstrict: true\r\n        };\r\n        this.doc.getValue() && this.deferredUpdate.schedule(100);\r\n    };\r\n\r\n    this.changeOptions = function(newOptions) {\r\n        oop.mixin(this.options, newOptions);\r\n        this.doc.getValue() && this.deferredUpdate.schedule(100);\r\n    };\r\n\r\n    this.isValidJS = function(str) {\r\n        try {\r\n            // evaluated code can only create variables in this function\r\n            eval(\"throw 0;\" + str);\r\n        } catch(e) {\r\n            if (e === 0)\r\n                return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    this.onUpdate = function() {\r\n        var value = this.doc.getValue();\r\n        value = value.replace(/^#!.*\\n/, \"\\n\");\r\n        if (!value)\r\n            return this.sender.emit(\"annotate\", []);\r\n\r\n        var errors = [];\r\n        // jshint reports many false errors\r\n        // report them as error only if code is actually invalid\r\n        var maxErrorLevel = this.isValidJS(value) ? \"warning\" : \"error\";\r\n\r\n        // var start = new Date();\r\n        lint(value, this.options, this.options.globals);\r\n        var results = lint.errors;\r\n\r\n        var errorAdded = false;\r\n        for (var i = 0; i < results.length; i++) {\r\n            var error = results[i];\r\n            if (!error)\r\n                continue;\r\n            var raw = error.raw;\r\n            var type = \"warning\";\r\n\r\n            if (raw == \"Missing semicolon.\") {\r\n                var str = error.evidence.substr(error.character);\r\n                str = str.charAt(str.search(/\\S/));\r\n                if (maxErrorLevel == \"error\" && str && /[\\w\\d{(['\"]/.test(str)) {\r\n                    error.reason = 'Missing \";\" before statement';\r\n                    type = \"error\";\r\n                } else {\r\n                    type = \"info\";\r\n                }\r\n            }\r\n            else if (disabledWarningsRe.test(raw)) {\r\n                continue;\r\n            }\r\n            else if (infoRe.test(raw)) {\r\n                type = \"info\";\r\n            }\r\n            else if (errorsRe.test(raw)) {\r\n                errorAdded  = true;\r\n                type = maxErrorLevel;\r\n            }\r\n            else if (raw == \"'{a}' is not defined.\") {\r\n                type = \"warning\";\r\n            }\r\n            else if (raw == \"'{a}' is defined but never used.\") {\r\n                type = \"info\";\r\n            }\r\n\r\n            errors.push({\r\n                row: error.line-1,\r\n                column: error.character-1,\r\n                text: error.reason,\r\n                type: type,\r\n                raw: raw\r\n            });\r\n\r\n            if (errorAdded) {\r\n               // break;\r\n            }\r\n        }\r\n        // console.log(\"lint time: \" + (new Date() - start));\r\n\r\n        this.sender.emit(\"annotate\", errors);\r\n    };\r\n\r\n}).call(JavaScriptWorker.prototype);\r\n\r\n});\r\n"]}