{"version":3,"sources":["mode/crystal.js"],"names":["define","require","exports","module","oop","TextMode","Mode","CrystalHighlightRules","MatchingBraceOutdent","Range","CstyleBehaviour","FoldMode","this","HighlightRules","$outdent","$behaviour","foldingRules","inherits","lineCommentStart","getNextLineIndent","state","line","tab","indent","$getIndent","tokens","getTokenizer","getLineTokens","length","type","match","startingClassOrMethod","startingDoBlock","startingConditional","checkOutdent","input","test","autoOutdent","session","row","getLine","prevLine","prevIndent","getTabString","slice","remove","$id","call","prototype"],"mappings":";;;;;;;AA8BAA,OAAO,SAASC,EAASC,EAASC,GAClC,aAEA,IAAIC,EAAMH,EAAQ,cACdI,EAAWJ,EAAQ,UAAUK,KAC7BC,EAAwBN,EAAQ,6BAA6BM,sBAC7DC,EAAuBP,EAAQ,4BAA4BO,qBAC3DC,EAAQR,EAAQ,YAAYQ,MAC5BC,EAAkBT,EAAQ,sBAAsBS,gBAChDC,EAAWV,EAAQ,oBAAoBU,SAEvCL,EAAO,WACPM,KAAKC,eAAiBN,EACtBK,KAAKE,SAAW,IAAIN,EACpBI,KAAKG,WAAa,IAAIL,EACtBE,KAAKI,aAAe,IAAIL,GAE5BP,EAAIa,SAASX,EAAMD,GAEnB,WAGIO,KAAKM,iBAAmB,IAExBN,KAAKO,kBAAoB,SAASC,EAAOC,EAAMC,GAC3C,IAAIC,EAASX,KAAKY,WAAWH,GAGzBI,EADgBb,KAAKc,eAAeC,cAAcN,EAAMD,GACjCK,OAE3B,GAAIA,EAAOG,QAA0C,WAAhCH,EAAOA,EAAOG,OAAO,GAAGC,KACzC,OAAON,EAGX,GAAa,SAATH,EAAkB,CAClB,IAAIU,EAAQT,EAAKS,MAAM,mBACnBC,EAAwBV,EAAKS,MAAM,+BACnCE,EAAkBX,EAAKS,MAAM,2BAC7BG,EAAsBZ,EAAKS,MAAM,0BACjCA,GAASC,GAAyBC,GAAmBC,KACrDV,GAAUD,GAIlB,OAAOC,GAGXX,KAAKsB,aAAe,SAASd,EAAOC,EAAMc,GACtC,MAAO,kBAAkBC,KAAKf,EAAOc,IAAUvB,KAAKE,SAASoB,aAAab,EAAMc,IAGpFvB,KAAKyB,YAAc,SAASjB,EAAOkB,EAASC,GACxC,IAAIlB,EAAOiB,EAAQE,QAAQD,GAC3B,GAAI,IAAIH,KAAKf,GACT,OAAOT,KAAKE,SAASuB,YAAYC,EAASC,GAC9C,IAAIhB,EAASX,KAAKY,WAAWH,GACzBoB,EAAWH,EAAQE,QAAQD,EAAM,GACjCG,EAAa9B,KAAKY,WAAWiB,GAC7BnB,EAAMgB,EAAQK,eACdD,EAAWd,QAAUL,EAAOK,QACxBL,EAAOqB,OAAOtB,EAAIM,SAAWN,GAC7BgB,EAAQO,OAAO,IAAIpC,EAAM8B,EAAKhB,EAAOK,OAAON,EAAIM,OAAQW,EAAKhB,EAAOK,UAIhFhB,KAAKkC,IAAM,oBACZC,KAAKzC,EAAK0C,WAEb9C,EAAQI,KAAOA","file":"../../mode/crystal.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2010, Ajax.org B.V.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\ndefine(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar TextMode = require(\"./text\").Mode;\r\nvar CrystalHighlightRules = require(\"./crystal_highlight_rules\").CrystalHighlightRules;\r\nvar MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\r\nvar Range = require(\"../range\").Range;\r\nvar CstyleBehaviour = require(\"./behaviour/cstyle\").CstyleBehaviour;\r\nvar FoldMode = require(\"./folding/coffee\").FoldMode;\r\n\r\nvar Mode = function() {\r\n    this.HighlightRules = CrystalHighlightRules;\r\n    this.$outdent = new MatchingBraceOutdent();\r\n    this.$behaviour = new CstyleBehaviour();\r\n    this.foldingRules = new FoldMode();\r\n};\r\noop.inherits(Mode, TextMode);\r\n\r\n(function() {\r\n\r\n\r\n    this.lineCommentStart = \"#\";\r\n\r\n    this.getNextLineIndent = function(state, line, tab) {\r\n        var indent = this.$getIndent(line);\r\n\r\n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\r\n        var tokens = tokenizedLine.tokens;\r\n\r\n        if (tokens.length && tokens[tokens.length-1].type == \"comment\") {\r\n            return indent;\r\n        }\r\n\r\n        if (state == \"start\") {\r\n            var match = line.match(/^.*[\\{\\(\\[]\\s*$/);\r\n            var startingClassOrMethod = line.match(/^\\s*(class|def|module)\\s.*$/);\r\n            var startingDoBlock = line.match(/.*do(\\s*|\\s+\\|.*\\|\\s*)$/);\r\n            var startingConditional = line.match(/^\\s*(if|else|when)\\s*/);\r\n            if (match || startingClassOrMethod || startingDoBlock || startingConditional) {\r\n                indent += tab;\r\n            }\r\n        }\r\n\r\n        return indent;\r\n    };\r\n\r\n    this.checkOutdent = function(state, line, input) {\r\n        return /^\\s+(end|else)$/.test(line + input) || this.$outdent.checkOutdent(line, input);\r\n    };\r\n\r\n    this.autoOutdent = function(state, session, row) {\r\n        var line = session.getLine(row);\r\n        if (/}/.test(line))\r\n            return this.$outdent.autoOutdent(session, row);\r\n        var indent = this.$getIndent(line);\r\n        var prevLine = session.getLine(row - 1);\r\n        var prevIndent = this.$getIndent(prevLine);\r\n        var tab = session.getTabString();\r\n        if (prevIndent.length <= indent.length) {\r\n            if (indent.slice(-tab.length) == tab)\r\n                session.remove(new Range(row, indent.length-tab.length, row, indent.length));\r\n        }\r\n    };\r\n\r\n    this.$id = \"ace/mode/crystal\";\r\n}).call(Mode.prototype);\r\n\r\nexports.Mode = Mode;\r\n});\r\n"]}