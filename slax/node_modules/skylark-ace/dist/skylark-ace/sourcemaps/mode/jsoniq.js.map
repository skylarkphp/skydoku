{"version":3,"sources":["mode/jsoniq.js"],"names":["define","require","exports","module","WorkerClient","oop","TextMode","Mode","TextHighlightRules","JSONiqLexer","Range","XQueryBehaviour","CStyleFoldMode","FoldMode","Anchor","this","$tokenizer","$behaviour","foldingRules","$highlightRules","inherits","completer","getCompletions","editor","session","pos","prefix","callback","$worker","emit","data","on","e","getNextLineIndent","state","line","tab","indent","$getIndent","match","checkOutdent","input","test","autoOutdent","doc","row","getLine","column","length","openBracePos","findMatchingBracket","replace","toggleCommentLines","startRow","endRow","i","outdent","re","range","start","end","createWorker","worker","that","attachToDocument","getDocument","clearAnnotations","addMarkers","removeMarkers","markers","getMarkers","id","clazz","indexOf","removeMarker","markerAnchors","detach","annos","mySession","languageAnnos","forEach","anno","markerId","anchor","sl","sc","push","ec","el","gutterAnno","guttertext","message","type","level","text","updateFloat","single","undefined","addMarker","setAnnotations","$id","call","prototype"],"mappings":"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","file":"../../mode/jsoniq.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2010, Ajax.org B.V.\r\n * All rights reserved.\r\n * \r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n * \r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\ndefine(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar WorkerClient = require(\"../worker/worker_client\").WorkerClient;\r\nvar oop = require(\"../lib/oop\");\r\nvar TextMode = require(\"./text\").Mode;\r\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\r\nvar JSONiqLexer = require(\"./xquery/jsoniq_lexer\").JSONiqLexer;\r\nvar Range = require(\"../range\").Range;\r\nvar XQueryBehaviour = require(\"./behaviour/xquery\").XQueryBehaviour;\r\nvar CStyleFoldMode = require(\"./folding/cstyle\").FoldMode;\r\nvar Anchor = require(\"../anchor\").Anchor;\r\n\r\nvar Mode = function() {\r\n    this.$tokenizer   = new JSONiqLexer();\r\n    this.$behaviour   = new XQueryBehaviour();\r\n    this.foldingRules = new CStyleFoldMode();\r\n    this.$highlightRules = new TextHighlightRules();\r\n};\r\n\r\noop.inherits(Mode, TextMode);\r\n\r\n(function() {\r\n\r\n    this.completer = {\r\n        getCompletions: function(editor, session, pos, prefix, callback) {\r\n            if (!session.$worker)\r\n                return callback();\r\n            session.$worker.emit(\"complete\", { data: { pos: pos, prefix: prefix } });\r\n            session.$worker.on(\"complete\", function(e){\r\n                callback(null, e.data);\r\n            });\r\n        }\r\n    };\r\n\r\n    this.getNextLineIndent = function(state, line, tab) {\r\n        var indent = this.$getIndent(line);\r\n        var match = line.match(/\\s*(?:then|else|return|[{\\(]|<\\w+>)\\s*$/);\r\n        if (match)\r\n            indent += tab;\r\n        return indent;\r\n    };\r\n    \r\n    this.checkOutdent = function(state, line, input) {\r\n        if (! /^\\s+$/.test(line))\r\n            return false;\r\n\r\n        return /^\\s*[\\}\\)]/.test(input);\r\n    };\r\n    \r\n    this.autoOutdent = function(state, doc, row) {\r\n        var line = doc.getLine(row);\r\n        var match = line.match(/^(\\s*[\\}\\)])/);\r\n\r\n        if (!match) return 0;\r\n\r\n        var column = match[1].length;\r\n        var openBracePos = doc.findMatchingBracket({row: row, column: column});\r\n\r\n        if (!openBracePos || openBracePos.row == row) return 0;\r\n\r\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\r\n        doc.replace(new Range(row, 0, row, column-1), indent);\r\n    };\r\n\r\n    this.toggleCommentLines = function(state, doc, startRow, endRow) {\r\n        var i, line;\r\n        var outdent = true;\r\n        var re = /^\\s*\\(:(.*):\\)/;\r\n\r\n        for (i=startRow; i<= endRow; i++) {\r\n            if (!re.test(doc.getLine(i))) {\r\n                outdent = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        var range = new Range(0, 0, 0, 0);\r\n        for (i=startRow; i<= endRow; i++) {\r\n            line = doc.getLine(i);\r\n            range.start.row  = i;\r\n            range.end.row    = i;\r\n            range.end.column = line.length;\r\n\r\n            doc.replace(range, outdent ? line.match(re)[1] : \"(:\" + line + \":)\");\r\n        }\r\n    };\r\n    this.createWorker = function(session) {\r\n        \r\n      var worker = new WorkerClient([\"ace\"], \"ace/mode/xquery_worker\", \"XQueryWorker\");\r\n        var that = this;\r\n\r\n        worker.attachToDocument(session.getDocument());\r\n        \r\n        worker.on(\"ok\", function(e) {\r\n          session.clearAnnotations();\r\n        });\r\n        \r\n        worker.on(\"markers\", function(e) {\r\n          session.clearAnnotations();\r\n          that.addMarkers(e.data, session);\r\n        });\r\n \r\n        return worker;\r\n    };\r\n \r\n    this.removeMarkers = function(session) {\r\n        var markers = session.getMarkers(false);\r\n        for (var id in markers) {\r\n            // All language analysis' markers are prefixed with language_highlight\r\n            if (markers[id].clazz.indexOf('language_highlight_') === 0) {\r\n                session.removeMarker(id);\r\n            }\r\n        }\r\n        for (var i = 0; i < session.markerAnchors.length; i++) {\r\n            session.markerAnchors[i].detach();\r\n        }\r\n        session.markerAnchors = [];\r\n    };\r\n\r\n    this.addMarkers = function(annos, mySession) {\r\n        var _self = this;\r\n        \r\n        if (!mySession.markerAnchors) mySession.markerAnchors = [];\r\n        this.removeMarkers(mySession);\r\n        mySession.languageAnnos = [];\r\n        annos.forEach(function(anno) {\r\n            // Certain annotations can temporarily be disabled\r\n            //if (_self.disabledMarkerTypes[anno.type])\r\n            //    return;\r\n            // Multi-line markers are not supported, and typically are a result from a bad error recover, ignore\r\n            //if(anno.pos.el && anno.pos.sl !== anno.pos.el)\r\n            //    return;\r\n            // Using anchors here, to automaticaly move markers as text around the marker is updated\r\n            var anchor = new Anchor(mySession.getDocument(), anno.pos.sl, anno.pos.sc || 0);\r\n            mySession.markerAnchors.push(anchor);\r\n            var markerId;\r\n            var colDiff = anno.pos.ec - anno.pos.sc;\r\n            var rowDiff = anno.pos.el - anno.pos.sl;\r\n            var gutterAnno = {\r\n                guttertext: anno.message,\r\n                type: anno.level || \"warning\",\r\n                text: anno.message\r\n                // row will be filled in updateFloat()\r\n            };\r\n\r\n            function updateFloat(single) {\r\n                if (markerId)\r\n                    mySession.removeMarker(markerId);\r\n                gutterAnno.row = anchor.row;\r\n                if (anno.pos.sc !== undefined && anno.pos.ec !== undefined) {\r\n                    var range = new Range(anno.pos.sl, anno.pos.sc, anno.pos.el, anno.pos.ec);\r\n                    //var range = Range.fromPoints(anchor.getPosition(), {\r\n                    //    row: anchor.row + rowDiff,\r\n                    //    column: anchor.column + colDiff\r\n                    //});\r\n                    markerId = mySession.addMarker(range, \"language_highlight_\" + (anno.type ? anno.type : \"default\"));\r\n                }\r\n                if (single) mySession.setAnnotations(mySession.languageAnnos);\r\n            }\r\n            updateFloat();\r\n            anchor.on(\"change\", function() {\r\n                updateFloat(true);\r\n            });\r\n            if (anno.message) mySession.languageAnnos.push(gutterAnno);\r\n        });\r\n        mySession.setAnnotations(mySession.languageAnnos);\r\n    }; \r\n\r\n    this.$id = \"ace/mode/jsoniq\";\r\n}).call(Mode.prototype);\r\n\r\nexports.Mode = Mode;\r\n});\r\n"]}