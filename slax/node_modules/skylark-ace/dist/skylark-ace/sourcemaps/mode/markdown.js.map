{"version":3,"sources":["mode/markdown.js"],"names":["define","require","exports","module","oop","TextMode","Mode","MarkdownHighlightRules","MarkdownFoldMode","FoldMode","this","HighlightRules","createModeDelegates","javascript","html","bash","sh","xml","css","foldingRules","$behaviour","$defaultBehaviour","inherits","type","blockComment","start","end","getNextLineIndent","state","line","tab","match","exec","marker","parseInt","$getIndent","$id","call","prototype"],"mappings":";;;;;;;AA8BAA,OAAO,SAASC,QAASC,QAASC,QAClC,aAEA,IAAIC,EAAMH,QAAQ,cACdI,EAAWJ,QAAQ,UAAUK,KAI7BC,GAHiBN,QAAQ,gBAAgBK,KAC/BL,QAAQ,SAASK,KAChBL,QAAQ,UAAUK,KACJL,QAAQ,8BAA8BM,wBAC/DC,EAAmBP,QAAQ,sBAAsBQ,SAEjDH,EAAO,WACPI,KAAKC,eAAiBJ,EAEtBG,KAAKE,qBACDC,WAAYZ,QAAQ,gBAAgBK,KACpCQ,KAAMb,QAAQ,UAAUK,KACxBS,KAAMd,QAAQ,QAAQK,KACtBU,GAAIf,QAAQ,QAAQK,KACpBW,IAAKhB,QAAQ,SAASK,KACtBY,IAAKjB,QAAQ,SAASK,OAG1BI,KAAKS,aAAe,IAAIX,EACxBE,KAAKU,WAAaV,KAAKW,mBAE3BjB,EAAIkB,SAAShB,EAAMD,GAEnB,WACIK,KAAKa,KAAO,OACZb,KAAKc,cAAgBC,MAAO,UAAQC,IAAK,UAEzChB,KAAKiB,kBAAoB,SAASC,EAAOC,EAAMC,GAC3C,GAAa,aAATF,EAAsB,CACtB,IAAIG,EAAQ,iCAAiCC,KAAKH,GAClD,IAAKE,EACD,MAAO,GACX,IAAIE,EAASF,EAAM,GAGnB,OAFKE,IACDA,EAASC,SAASH,EAAM,GAAI,IAAM,EAAI,KACnCA,EAAM,GAAKE,EAASF,EAAM,GAEjC,OAAOrB,KAAKyB,WAAWN,IAG/BnB,KAAK0B,IAAM,qBACZC,KAAK/B,EAAKgC,WAEbpC,QAAQI,KAAOA","file":"../../mode/markdown.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2010, Ajax.org B.V.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\ndefine(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar TextMode = require(\"./text\").Mode;\r\nvar JavaScriptMode = require(\"./javascript\").Mode;\r\nvar XmlMode = require(\"./xml\").Mode;\r\nvar HtmlMode = require(\"./html\").Mode;\r\nvar MarkdownHighlightRules = require(\"./markdown_highlight_rules\").MarkdownHighlightRules;\r\nvar MarkdownFoldMode = require(\"./folding/markdown\").FoldMode;\r\n\r\nvar Mode = function() {\r\n    this.HighlightRules = MarkdownHighlightRules;\r\n\r\n    this.createModeDelegates({\r\n        javascript: require(\"./javascript\").Mode,\r\n        html: require(\"./html\").Mode,\r\n        bash: require(\"./sh\").Mode,\r\n        sh: require(\"./sh\").Mode,\r\n        xml: require(\"./xml\").Mode,\r\n        css: require(\"./css\").Mode\r\n    });\r\n\r\n    this.foldingRules = new MarkdownFoldMode();\r\n    this.$behaviour = this.$defaultBehaviour;\r\n};\r\noop.inherits(Mode, TextMode);\r\n\r\n(function() {\r\n    this.type = \"text\";\r\n    this.blockComment = {start: \"<!--\", end: \"-->\"};\r\n\r\n    this.getNextLineIndent = function(state, line, tab) {\r\n        if (state == \"listblock\") {\r\n            var match = /^(\\s*)(?:([-+*])|(\\d+)\\.)(\\s+)/.exec(line);\r\n            if (!match)\r\n                return \"\";\r\n            var marker = match[2];\r\n            if (!marker)\r\n                marker = parseInt(match[3], 10) + 1 + \".\";\r\n            return match[1] + marker + match[4];\r\n        } else {\r\n            return this.$getIndent(line);\r\n        }\r\n    };\r\n    this.$id = \"ace/mode/markdown\";\r\n}).call(Mode.prototype);\r\n\r\nexports.Mode = Mode;\r\n});\r\n"]}