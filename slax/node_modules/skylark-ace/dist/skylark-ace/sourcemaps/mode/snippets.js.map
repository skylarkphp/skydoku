{"version":3,"sources":["mode/snippets.js"],"names":["define","require","exports","module","oop","TextMode","Mode","TextHighlightRules","SnippetHighlightRules","builtins","this","$rules","start","token","regex","onMatch","value","state","stack","unshift","tokenName","next","splice","varDecl","regexp","charClass","format","inherits","SnippetGroupHighlightRules","embedRules","length","FoldMode","HighlightRules","foldingRules","$behaviour","$defaultBehaviour","$indentWithTabs","lineCommentStart","$id","call","prototype"],"mappings":";;;;;;;AAAAA,OAAO,SAASC,QAASC,QAASC,QAClC,aAEA,IAAIC,EAAMH,QAAQ,cACdI,EAAWJ,QAAQ,UAAUK,KAC7BC,EAAqBN,QAAQ,0BAA0BM,mBAEvDC,EAAwB,WAExB,IAAIC,EAAW,yHAGfC,KAAKC,QACDC,QACKC,MAAM,2BAA4BC,MAAO,eACzCD,MAAM,UAAWC,MAAO,iBAAmBL,EAAW,SACtDI,MAAM,WAAYC,MAAO,YACzBC,QAAS,SAASC,EAAOC,EAAOC,GAK7B,OAJIA,EAAM,GACNA,EAAM,KAENA,EAAMC,QAAQF,EAAO,GAClBP,KAAKU,WACbA,UAAW,cAAeN,MAAO,OAAQO,KAAM,YACjDN,QAAS,SAASC,EAAOC,EAAOC,GAC7B,OAAKA,EAAM,IAEXA,EAAM,KACDA,EAAM,IACPA,EAAMI,OAAO,EAAE,GACZZ,KAAKU,WAJD,QAKZA,UAAW,cAAeN,MAAO,MACnCD,MAAO,cAAeC,MAAM,iBAEjCS,UACKT,MAAO,QAASD,MAAO,qBACvBA,MAAM,UAAWC,MAAO,cAAgBL,EAAW,SACnDI,MAAM,WAAYC,MAAO,SACzBA,MAAO,IAAKD,MAAO,uBAAwBQ,KAAM,UACjDP,MAAO,KAAMD,MAAO,eAAgBQ,KAAM,WAC1CP,MAAO,GAAIO,KAAM,UAEtBG,SACKV,MAAO,MAAOD,MAAO,WACrBC,MAAO,KAAMD,MAAO,cAAeQ,KAAM,cACzCP,MAAO,IAAKD,MAAO,eAAgBQ,KAAM,WAEzCR,MAAS,eAAgBC,MAAM,MAEpCW,YACKX,MAAO,MAAOD,MAAO,WACrBC,MAAO,MAAOD,MAAO,YAAaQ,KAAM,WACxCR,MAAS,eAAgBC,MAAM,MAEpCY,SACKZ,MAAO,YAAaD,MAAO,YAC3BC,MAAO,QAASD,MAAO,aACvBC,MAAO,YAAaD,MAAO,eAAgBQ,KAAM,UAEjDR,MAAS,SAAUC,MAAM,QAItCV,EAAIuB,SAASnB,EAAuBD,GAEpCL,QAAQM,sBAAwBA,EAEhC,IAAIoB,EAA6B,WAC7BlB,KAAKC,QACDC,QACKC,MAAO,OAAQC,MAAO,OAAQO,KAAM,aACpCR,MAAM,UAAWC,MAAO,UACxBD,MAAM,UAAWC,MAAO,SACxBD,MAAM,2BAA4BC,MAAO,UAAWO,KAAM,UAC1DR,MAAM,2BAA4BC,MAAO,wEAE9CA,QACKD,MAAM,OAAQC,MAAO,QACrBD,MAAM,UAAWC,MAAO,MACxBD,MAAM,QAASC,MAAO,IAAKO,KAAM,WAG1CX,KAAKmB,WAAWrB,EAAuB,QAClCK,MAAO,OAAQC,MAAO,OAAQO,KAAM,aACpCN,QAAS,SAASC,EAAOC,EAAOC,GAE7B,OADAA,EAAMI,OAAOJ,EAAMY,QACZpB,KAAKU,WACbA,UAAW,OAAQN,MAAO,UAAWO,KAAM,YAKtDjB,EAAIuB,SAASC,EAA4BrB,GAEzCL,QAAQ0B,2BAA6BA,EAErC,IAAIG,EAAW9B,QAAQ,oBAAoB8B,SAEvCzB,EAAO,WACPI,KAAKsB,eAAiBJ,EACtBlB,KAAKuB,aAAe,IAAIF,EACxBrB,KAAKwB,WAAaxB,KAAKyB,mBAE3B/B,EAAIuB,SAASrB,EAAMD,GAEnB,WACIK,KAAK0B,iBAAkB,EACvB1B,KAAK2B,iBAAmB,IACxB3B,KAAK4B,IAAM,qBACZC,KAAKjC,EAAKkC,WACbtC,QAAQI,KAAOA","file":"../../mode/snippets.js","sourcesContent":["define(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar TextMode = require(\"./text\").Mode;\r\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\r\n\r\nvar SnippetHighlightRules = function() {\r\n\r\n    var builtins = \"SELECTION|CURRENT_WORD|SELECTED_TEXT|CURRENT_LINE|LINE_INDEX|\" +\r\n        \"LINE_NUMBER|SOFT_TABS|TAB_SIZE|FILENAME|FILEPATH|FULLNAME\";\r\n\r\n    this.$rules = {\r\n        \"start\" : [\r\n            {token:\"constant.language.escape\", regex: /\\\\[\\$}`\\\\]/},\r\n            {token:\"keyword\", regex: \"\\\\$(?:TM_)?(?:\" + builtins + \")\\\\b\"},\r\n            {token:\"variable\", regex: \"\\\\$\\\\w+\"},\r\n            {onMatch: function(value, state, stack) {\r\n                if (stack[1])\r\n                    stack[1]++;\r\n                else\r\n                    stack.unshift(state, 1);\r\n                return this.tokenName;\r\n            }, tokenName: \"markup.list\", regex: \"\\\\${\", next: \"varDecl\"},\r\n            {onMatch: function(value, state, stack) {\r\n                if (!stack[1])\r\n                    return \"text\";\r\n                stack[1]--;\r\n                if (!stack[1])\r\n                    stack.splice(0,2);\r\n                return this.tokenName;\r\n            }, tokenName: \"markup.list\", regex: \"}\"},\r\n            {token: \"doc.comment\", regex:/^\\${2}-{5,}$/}\r\n        ],\r\n        \"varDecl\" : [\r\n            {regex: /\\d+\\b/, token: \"constant.numeric\"},\r\n            {token:\"keyword\", regex: \"(?:TM_)?(?:\" + builtins + \")\\\\b\"},\r\n            {token:\"variable\", regex: \"\\\\w+\"},\r\n            {regex: /:/, token: \"punctuation.operator\", next: \"start\"},\r\n            {regex: /\\//, token: \"string.regex\", next: \"regexp\"},\r\n            {regex: \"\", next: \"start\"}\r\n        ],\r\n        \"regexp\" : [\r\n            {regex: /\\\\./, token: \"escape\"},\r\n            {regex: /\\[/, token: \"regex.start\", next: \"charClass\"},\r\n            {regex: \"/\", token: \"string.regex\", next: \"format\"},\r\n            //{\"default\": \"string.regex\"},\r\n            {\"token\": \"string.regex\", regex:\".\"}\r\n        ],\r\n        charClass : [\r\n            {regex: \"\\\\.\", token: \"escape\"},\r\n            {regex: \"\\\\]\", token: \"regex.end\", next: \"regexp\"},\r\n            {\"token\": \"string.regex\", regex:\".\"}\r\n        ],\r\n        \"format\" : [\r\n            {regex: /\\\\[ulULE]/, token: \"keyword\"},\r\n            {regex: /\\$\\d+/, token: \"variable\"},\r\n            {regex: \"/[gim]*:?\", token: \"string.regex\", next: \"start\"},\r\n            // {\"default\": \"string\"},\r\n            {\"token\": \"string\", regex:\".\"}\r\n        ]\r\n    };\r\n};\r\noop.inherits(SnippetHighlightRules, TextHighlightRules);\r\n\r\nexports.SnippetHighlightRules = SnippetHighlightRules;\r\n\r\nvar SnippetGroupHighlightRules = function() {\r\n    this.$rules = {\r\n        \"start\" : [\r\n            {token: \"text\", regex: \"^\\\\t\", next: \"sn-start\"},\r\n            {token:\"invalid\", regex: /^ \\s*/},\r\n            {token:\"comment\", regex: /^#.*/},\r\n            {token:\"constant.language.escape\", regex: \"^regex \", next: \"regex\"},\r\n            {token:\"constant.language.escape\", regex: \"^(trigger|endTrigger|name|snippet|guard|endGuard|tabTrigger|key)\\\\b\"}\r\n        ],\r\n        \"regex\" : [\r\n            {token:\"text\", regex: \"\\\\.\"},\r\n            {token:\"keyword\", regex: \"/\"},\r\n            {token:\"empty\", regex: \"$\", next: \"start\"}\r\n        ]\r\n    };\r\n    this.embedRules(SnippetHighlightRules, \"sn-\", [\r\n        {token: \"text\", regex: \"^\\\\t\", next: \"sn-start\"},\r\n        {onMatch: function(value, state, stack) {\r\n            stack.splice(stack.length);\r\n            return this.tokenName;\r\n        }, tokenName: \"text\", regex: \"^(?!\\t)\", next: \"start\"}\r\n    ]);\r\n    \r\n};\r\n\r\noop.inherits(SnippetGroupHighlightRules, TextHighlightRules);\r\n\r\nexports.SnippetGroupHighlightRules = SnippetGroupHighlightRules;\r\n\r\nvar FoldMode = require(\"./folding/coffee\").FoldMode;\r\n\r\nvar Mode = function() {\r\n    this.HighlightRules = SnippetGroupHighlightRules;\r\n    this.foldingRules = new FoldMode();\r\n    this.$behaviour = this.$defaultBehaviour;\r\n};\r\noop.inherits(Mode, TextMode);\r\n\r\n(function() {\r\n    this.$indentWithTabs = true;\r\n    this.lineCommentStart = \"#\";\r\n    this.$id = \"ace/mode/snippets\";\r\n}).call(Mode.prototype);\r\nexports.Mode = Mode;\r\n\r\n\r\n});\r\n"]}