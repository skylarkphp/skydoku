{"version":3,"sources":["mode/fortran.js"],"names":["define","require","exports","module","oop","TextMode","Mode","FortranHighlightRules","CStyleFoldMode","FoldMode","Range","this","HighlightRules","foldingRules","$behaviour","$defaultBehaviour","inherits","lineCommentStart","getNextLineIndent","state","line","tab","indent","$getIndent","tokens","getTokenizer","getLineTokens","length","type","match","outdents","return","break","continue","RETURN","BREAK","CONTINUE","checkOutdent","input","trim","last","pop","value","autoOutdent","doc","row","getLine","getTabString","slice","remove","$id","call","prototype"],"mappings":";;;;;;;AA+BAA,OAAO,SAASC,EAASC,EAASC,GAClC,aAEA,IAAIC,EAAMH,EAAQ,cACdI,EAAWJ,EAAQ,UAAUK,KAC7BC,EAAwBN,EAAQ,6BAA6BM,sBAC7DC,EAAiBP,EAAQ,oBAAoBQ,SAC7CC,EAAQT,EAAQ,YAAYS,MAE5BJ,EAAO,WACPK,KAAKC,eAAiBL,EACtBI,KAAKE,aAAe,IAAIL,EACxBG,KAAKG,WAAaH,KAAKI,mBAE3BX,EAAIY,SAASV,EAAMD,GAEnB,WAEIM,KAAKM,iBAAmB,IAExBN,KAAKO,kBAAoB,SAASC,EAAOC,EAAMC,GAC3C,IAAIC,EAASX,KAAKY,WAAWH,GAGzBI,EADgBb,KAAKc,eAAeC,cAAcN,EAAMD,GACjCK,OAE3B,GAAIA,EAAOG,QAA0C,WAAhCH,EAAOA,EAAOG,OAAO,GAAGC,KACzC,OAAON,EAGE,SAATH,IACYC,EAAKS,MAAM,sBAEnBP,GAAUD,IAIlB,OAAOC,GAGX,IAAIQ,GACAC,OAAU,EACVC,MAAS,EACTC,SAAY,EACZC,OAAU,EACVC,MAAS,EACTC,SAAY,GAGhBzB,KAAK0B,aAAe,SAASlB,EAAOC,EAAMkB,GACtC,GAAc,SAAVA,GAA8B,OAAVA,GAA4B,OAAVA,EACtC,OAAO,EAEX,IAAId,EAASb,KAAKc,eAAeC,cAAcN,EAAKmB,OAAQpB,GAAOK,OAEnE,IAAKA,EACD,OAAO,EACX,GACI,IAAIgB,EAAOhB,EAAOiB,YACbD,IAAsB,WAAbA,EAAKZ,MAAmC,QAAbY,EAAKZ,MAAkBY,EAAKE,MAAMb,MAAM,WAErF,QAAKW,IAGgB,WAAbA,EAAKZ,MAAqBE,EAASU,EAAKE,SAGpD/B,KAAKgC,YAAc,SAASxB,EAAOyB,EAAKC,GAEpCA,GAAO,EACP,IAAIvB,EAASX,KAAKY,WAAWqB,EAAIE,QAAQD,IACrCxB,EAAMuB,EAAIG,eACVzB,EAAO0B,OAAO3B,EAAIM,SAAWN,GAC7BuB,EAAIK,OAAO,IAAIvC,EAAMmC,EAAKvB,EAAOK,OAAON,EAAIM,OAAQkB,EAAKvB,EAAOK,UAGxEhB,KAAKuC,IAAM,oBACZC,KAAK7C,EAAK8C,WAEblD,EAAQI,KAAOA","file":"../../mode/fortran.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2010, Ajax.org B.V.\r\n * All rights reserved.\r\n * \r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n * \r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\n/* Derived from Python rules */\r\ndefine(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar TextMode = require(\"./text\").Mode;\r\nvar FortranHighlightRules = require(\"./fortran_highlight_rules\").FortranHighlightRules;\r\nvar CStyleFoldMode = require(\"./folding/cstyle\").FoldMode;\r\nvar Range = require(\"../range\").Range;\r\n\r\nvar Mode = function() {\r\n    this.HighlightRules = FortranHighlightRules;\r\n    this.foldingRules = new CStyleFoldMode();\r\n    this.$behaviour = this.$defaultBehaviour;\r\n};\r\noop.inherits(Mode, TextMode);\r\n\r\n(function() {\r\n\r\n    this.lineCommentStart = \"!\";\r\n\r\n    this.getNextLineIndent = function(state, line, tab) {\r\n        var indent = this.$getIndent(line);\r\n\r\n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\r\n        var tokens = tokenizedLine.tokens;\r\n\r\n        if (tokens.length && tokens[tokens.length-1].type == \"comment\") {\r\n            return indent;\r\n        }\r\n\r\n        if (state == \"start\") {\r\n            var match = line.match(/^.*[\\{\\(\\[:]\\s*$/);\r\n            if (match) {\r\n                indent += tab;\r\n            }\r\n        }\r\n\r\n        return indent;\r\n    };\r\n\r\n    var outdents = {\r\n        \"return\": 1,\r\n        \"break\": 1,\r\n        \"continue\": 1,\r\n        \"RETURN\": 1,\r\n        \"BREAK\": 1,\r\n        \"CONTINUE\": 1\r\n    };\r\n\r\n    this.checkOutdent = function(state, line, input) {\r\n        if (input !== \"\\r\\n\" && input !== \"\\r\" && input !== \"\\n\")\r\n            return false;\r\n\r\n        var tokens = this.getTokenizer().getLineTokens(line.trim(), state).tokens;\r\n\r\n        if (!tokens)\r\n            return false;\r\n        do {\r\n            var last = tokens.pop();\r\n        } while (last && (last.type == \"comment\" || (last.type == \"text\" && last.value.match(/^\\s+$/))));\r\n\r\n        if (!last)\r\n            return false;\r\n\r\n        return (last.type == \"keyword\" && outdents[last.value]);\r\n    };\r\n\r\n    this.autoOutdent = function(state, doc, row) {\r\n\r\n        row += 1;\r\n        var indent = this.$getIndent(doc.getLine(row));\r\n        var tab = doc.getTabString();\r\n        if (indent.slice(-tab.length) == tab)\r\n            doc.remove(new Range(row, indent.length-tab.length, row, indent.length));\r\n    };\r\n\r\n    this.$id = \"ace/mode/fortran\";\r\n}).call(Mode.prototype);\r\n\r\nexports.Mode = Mode;\r\n});\r\n\r\n"]}