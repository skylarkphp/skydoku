{"version":3,"sources":["mode/behaviour.js"],"names":["define","require","exports","module","Behaviour","this","$behaviours","add","name","action","callback","undefined","addBehaviours","behaviours","key","remove","inherit","mode","filter","getBehaviours","ret","i","length","call","prototype"],"mappings":";;;;;;;AA8BAA,OAAO,SAASC,QAASC,QAASC,QAClC,aAEA,IAAIC,EAAY,WACbC,KAAKC,iBAGR,WAEID,KAAKE,IAAM,SAAUC,EAAMC,EAAQC,GAC/B,YAAQC,GACN,KAAKN,KAAKC,YACND,KAAKC,eACT,KAAKD,KAAKC,YAAYE,GAClBH,KAAKC,YAAYE,MAEvBH,KAAKC,YAAYE,GAAMC,GAAUC,GAGrCL,KAAKO,cAAgB,SAAUC,GAC3B,IAAK,IAAIC,KAAOD,EACZ,IAAK,IAAIJ,KAAUI,EAAWC,GAC1BT,KAAKE,IAAIO,EAAKL,EAAQI,EAAWC,GAAKL,KAKlDJ,KAAKU,OAAS,SAAUP,GAChBH,KAAKC,aAAeD,KAAKC,YAAYE,WAC9BH,KAAKC,YAAYE,IAIhCH,KAAKW,QAAU,SAAUC,EAAMC,GAC3B,GAAoB,mBAATD,EACP,IAAIJ,GAAa,IAAII,GAAOE,cAAcD,QAEtCL,EAAaI,EAAKE,cAAcD,GAExCb,KAAKO,cAAcC,IAGvBR,KAAKc,cAAgB,SAAUD,GAC3B,GAAKA,EAEE,CAEH,IADA,IAAIE,KACKC,EAAI,EAAGA,EAAIH,EAAOI,OAAQD,IAC3BhB,KAAKC,YAAYY,EAAOG,MACxBD,EAAIF,EAAOG,IAAMhB,KAAKC,YAAYY,EAAOG,KAGjD,OAAOD,EARP,OAAOf,KAAKC,eAYrBiB,KAAKnB,EAAUoB,WAElBtB,QAAQE,UAAYA","file":"../../mode/behaviour.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2010, Ajax.org B.V.\r\n * All rights reserved.\r\n * \r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n * \r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\ndefine(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar Behaviour = function() {\r\n   this.$behaviours = {};\r\n};\r\n\r\n(function () {\r\n\r\n    this.add = function (name, action, callback) {\r\n        switch (undefined) {\r\n          case this.$behaviours:\r\n              this.$behaviours = {};\r\n          case this.$behaviours[name]:\r\n              this.$behaviours[name] = {};\r\n        }\r\n        this.$behaviours[name][action] = callback;\r\n    };\r\n    \r\n    this.addBehaviours = function (behaviours) {\r\n        for (var key in behaviours) {\r\n            for (var action in behaviours[key]) {\r\n                this.add(key, action, behaviours[key][action]);\r\n            }\r\n        }\r\n    };\r\n    \r\n    this.remove = function (name) {\r\n        if (this.$behaviours && this.$behaviours[name]) {\r\n            delete this.$behaviours[name];\r\n        }\r\n    };\r\n    \r\n    this.inherit = function (mode, filter) {\r\n        if (typeof mode === \"function\") {\r\n            var behaviours = new mode().getBehaviours(filter);\r\n        } else {\r\n            var behaviours = mode.getBehaviours(filter);\r\n        }\r\n        this.addBehaviours(behaviours);\r\n    };\r\n    \r\n    this.getBehaviours = function (filter) {\r\n        if (!filter) {\r\n            return this.$behaviours;\r\n        } else {\r\n            var ret = {};\r\n            for (var i = 0; i < filter.length; i++) {\r\n                if (this.$behaviours[filter[i]]) {\r\n                    ret[filter[i]] = this.$behaviours[filter[i]];\r\n                }\r\n            }\r\n            return ret;\r\n        }\r\n    };\r\n\r\n}).call(Behaviour.prototype);\r\n\r\nexports.Behaviour = Behaviour;\r\n});\r\n"]}