{"version":3,"sources":["mode/soy_template_highlight_rules.js"],"names":["define","require","exports","module","oop","HtmlHighlightRules","SoyTemplateHighlightRules","call","this","soyRules","start","include","#call","token","regex","push","next","defaultToken","#comment-line","#comment-block","#comment-doc","#css","#for","#foreach","#function","#if","#namespace","#number","#operator","#param","#primitive","#msg","#print","#print-parameter","#special-character","#string-quoted-double","#string-quoted-single","#switch","#attribute-lookup","#tag","#tag-simple","#template","originalRegex","#variable","i","$rules","unshift","apply","normalizeRules","metaData","comment","fileTypes","firstLineMatch","foldingStartMarker","foldingStopMarker","name","scopeName","inherits"],"mappings":";;;;;;;AAoCAA,OAAO,SAASC,EAASC,EAASC,GAClC,aAEA,IAAIC,EAAMH,EAAQ,cACdI,EAAqBJ,EAAQ,0BAA0BI,mBAEvDC,EAA4B,WAC5BD,EAAmBE,KAAKC,MAKxB,IAAIC,GAAaC,QACVC,QAAS,cACTA,QAAS,QACTA,QAAS,kBACTA,QAAS,mBACTA,QAAS,iBACTA,QAAS,UACTA,QAAS,SACTA,QAAS,WACTA,QAAS,WACTA,QAAS,SACTA,QAAS,SACTA,QAAS,aACTA,QAAS,YACTA,QAAS,SACTA,QAAS,oBACdC,UACKC,OACG,uCACA,qBACHC,MAAO,gCACPC,OACKF,MAAO,qCACPC,MAAO,MACPE,KAAM,QACNL,QAAS,0BACTA,QAAS,0BACTE,OAAQ,sBAAuB,0BAC/BC,MAAO,kCACPD,OACG,kCACA,OACA,wBACHC,MAAO,uBACPG,aAAc,wBACxBC,kBACKL,OACG,gCACA,iCACHC,MAAO,cACZK,mBACKN,MAAO,2CACPC,MAAO,cACPC,OACKF,MAAO,yCACPC,MAAO,OACPE,KAAM,QACNC,aAAc,wBACxBG,iBACKP,MAAO,2CACPC,MAAO,eACPC,OACKF,MAAO,yCACPC,MAAO,OACPE,KAAM,QACNH,OAAS,mBAAoB,OAAQ,0BACrCC,MAAO,mCACPG,aAAc,sCACxBI,SACKR,OACG,uCACA,mBACA,uBACHC,MAAO,wBACPC,OACKF,MAAO,qCACPC,MAAO,MACPE,KAAM,QACNH,MAAO,uBACPC,MAAO,sDACPG,aAAc,uBACxBK,SACKT,OACG,uCACA,mBACA,uBACHC,MAAO,wBACPC,OACKF,MAAO,qCACPC,MAAO,MACPE,KAAM,QACNH,MAAO,uBAAwBC,MAAO,aACtCD,MAAO,uBAAwBC,MAAO,gBACtCH,QAAS,cACTA,QAAS,YACTA,QAAS,eACTM,aAAc,uBACxBM,aACKV,OACG,uCACA,uBACA,uBACHC,MAAO,4BACPC,OACKF,MAAO,qCACPC,MAAO,MACPE,KAAM,QACNH,MAAO,uBAAwBC,MAAO,aACtCH,QAAS,cACTM,aAAc,2BACxBO,cACKX,MAAO,uBACPC,MAAO,6FACZW,QACKZ,OACG,uCACA,kBACA,uBACHC,MAAO,8BACPC,OACKF,MAAO,qCACPC,MAAO,MACPE,KAAM,QACNL,QAAS,cACTA,QAAS,cACTA,QAAS,cACTA,QAAS,0BACTA,QAAS,0BACTM,aAAc,sBACxBS,eACKb,OAAS,sBAAuB,OAAQ,0BACxCC,MAAO,4CACZa,YAAed,MAAO,mBAAoBC,MAAO,WACjDc,cACKf,MAAO,uBACPC,MAAO,oDACZe,WACKhB,OACG,uCACA,qBACA,uBACHC,MAAO,uBACPC,OACKF,MAAO,qCACPC,MAAO,MACPE,KAAM,QACNL,QAAS,cACTE,OACG,kCACA,OACA,wBACHC,MAAO,8BACPG,aAAc,yBACxBa,eACKjB,MAAO,wBACPC,MAAO,8BACZiB,SACKlB,OACG,uCACA,mBACA,uBACHC,MAAO,wBACPC,OACKF,MAAO,qCACPC,MAAO,MACPE,KAAM,QACNL,QAAS,0BACTA,QAAS,0BACTE,OACG,kCACA,OACA,wBACHC,MAAO,+BACPG,aAAc,uBACxBe,WACKnB,OACG,uCACA,qBACA,uBACHC,MAAO,0BACPC,OACKF,MAAO,qCACPC,MAAO,MACPE,KAAM,QACNL,QAAS,cACTA,QAAS,qBACTA,QAAS,YACTA,QAAS,eACTA,QAAS,sBACTM,aAAc,yBACxBgB,qBACKpB,MAAO,uBAAwBC,MAAO,QACtCD,MAAO,yBACPC,MAAO,kEACZoB,uBACKrB,MAAO,uBACPC,MAAO,2DACZqB,0BAA6BtB,MAAO,uBAAwBC,MAAO,YACnEsB,0BAA6BvB,MAAO,uBAAwBC,MAAO,YACnEuB,YACKxB,OACG,uCACA,sBACA,uBACHC,MAAO,gCACPC,OACKF,MAAO,qCACPC,MAAO,MACPE,KAAM,QACNL,QAAS,cACTA,QAAS,cACTA,QAAS,YACTA,QAAS,0BACTA,QAAS,0BACTM,aAAc,0BACxBqB,sBACKzB,MAAO,oDACPC,MAAO,MACPC,OACKF,MAAO,kDACPC,MAAO,MACPE,KAAM,QACNL,QAAS,cACTA,QAAS,cACTA,QAAS,cACTA,QAAS,YACTA,QAAS,eACTA,QAAS,0BACTA,QAAS,4BACnB4B,SACK1B,MAAO,uCACPC,MAAO,MACPC,OACKF,MAAO,qCACPC,MAAO,MACPE,KAAM,QACNL,QAAS,eACTA,QAAS,cACTA,QAAS,uBACTA,QAAS,gBACTA,QAAS,cACTA,QAAS,cACTA,QAAS,sBACTA,QAAS,YACTA,QAAS,eACTA,QAAS,uBACnB6B,gBACK3B,MAAO,sBACPC,MAAO,sDACZ2B,cACK5B,OACG,uCACA,yBACHC,MAAO,wCACPC,OACKF,MAAO,qCACPC,MAAO,MACPE,KAAM,QACNH,OAAQ,sBAAuB,OAAQ,4BACvCC,MAAO,0CACP4B,cAAe,6CACf7B,OACG,kCACA,OACA,uBACA,OACA,4BACHC,MAAO,gDACPD,OACG,kCACA,OACA,uBACA,OACA,4BACHC,MAAO,gDACPD,OACG,kCACA,OACA,uBACA,OACA,4BACHC,MAAO,gEACPD,OACG,kCACA,OACA,uBACA,OACA,4BACHC,MAAO,gEACPG,aAAc,4BACxB0B,cAAiB9B,MAAO,qBAAsBC,MAAO,kBAGvD,IAAK,IAAI8B,KAAKnC,EACND,KAAKqC,OAAOD,GACZpC,KAAKqC,OAAOD,GAAGE,QAAQC,MAAMvC,KAAKqC,OAAOD,GAAInC,EAASmC,IAEtDpC,KAAKqC,OAAOD,GAAKnC,EAASmC,GAIlCpC,KAAKwC,kBAGT1C,EAA0B2C,UAAaC,QAAS,cAC1CC,WAAa,OACbC,eAAgB,sBAChBC,mBAAoB,gCACpBC,kBAAmB,8BACnBC,KAAM,cACNC,UAAW,cAGjBpD,EAAIqD,SAASnD,EAA2BD,GAExCH,EAAQI,0BAA4BA","file":"../../mode/soy_template_highlight_rules.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2012, Ajax.org B.V.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\n/* This file was autogenerated from tm bundles\\SoyTemplate\\Syntaxes\\SoyTemplate.tmLanguage (uuid: ) */\r\n/****************************************************************************************\r\n * IT MIGHT NOT BE PERFECT ...But it's a good start from an existing *.tmlanguage file. *\r\n * fileTypes                                                                            *\r\n ****************************************************************************************/\r\n\r\ndefine(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar HtmlHighlightRules = require(\"./html_highlight_rules\").HtmlHighlightRules;\r\n\r\nvar SoyTemplateHighlightRules = function() {\r\n    HtmlHighlightRules.call(this);\r\n\r\n    // regexp must not have capturing parentheses. Use (?:) instead.\r\n    // regexps are ordered -> the first match is used\r\n\r\n    var soyRules = { start: \r\n       [ { include: '#template' },\r\n         { include: '#if' },\r\n         { include: '#comment-line' },\r\n         { include: '#comment-block' },\r\n         { include: '#comment-doc' },\r\n         { include: '#call' },\r\n         { include: '#css' },\r\n         { include: '#param' },\r\n         { include: '#print' },\r\n         { include: '#msg' },\r\n         { include: '#for' },\r\n         { include: '#foreach' },\r\n         { include: '#switch' },\r\n         { include: '#tag' },\r\n         { include: 'text.html.basic' } ],\r\n      '#call': \r\n       [ { token: \r\n            [ 'punctuation.definition.tag.begin.soy',\r\n              'meta.tag.call.soy' ],\r\n           regex: '(\\\\{/?)(\\\\s*)(?=call|delcall)',\r\n           push: \r\n            [ { token: 'punctuation.definition.tag.end.soy',\r\n                regex: '\\\\}',\r\n                next: 'pop' },\r\n              { include: '#string-quoted-single' },\r\n              { include: '#string-quoted-double' },\r\n              { token: ['entity.name.tag.soy', 'variable.parameter.soy'],\r\n                regex: '(call|delcall)(\\\\s+[\\\\.\\\\w]+)'},\r\n              { token: \r\n                 [ 'entity.other.attribute-name.soy',\r\n                   'text',\r\n                   'keyword.operator.soy' ],\r\n                regex: '\\\\b(data)(\\\\s*)(=)' },\r\n              { defaultToken: 'meta.tag.call.soy' } ] } ],\r\n      '#comment-line': \r\n       [ { token: \r\n            [ 'comment.line.double-slash.soy',\r\n              'comment.line.double-slash.soy' ],\r\n           regex: '(//)(.*$)' } ],\r\n      '#comment-block': \r\n       [ { token: 'punctuation.definition.comment.begin.soy',\r\n           regex: '/\\\\*(?!\\\\*)',\r\n           push: \r\n            [ { token: 'punctuation.definition.comment.end.soy',\r\n                regex: '\\\\*/',\r\n                next: 'pop' },\r\n              { defaultToken: 'comment.block.soy' } ] } ],\r\n      '#comment-doc': \r\n       [ { token: 'punctuation.definition.comment.begin.soy',\r\n           regex: '/\\\\*\\\\*(?!/)',\r\n           push: \r\n            [ { token: 'punctuation.definition.comment.end.soy',\r\n                regex: '\\\\*/',\r\n                next: 'pop' },\r\n              { token: [ 'support.type.soy', 'text', 'variable.parameter.soy' ],\r\n                regex: '(@param|@param\\\\?)(\\\\s+)(\\\\w+)' },\r\n              { defaultToken: 'comment.block.documentation.soy' } ] } ],\r\n      '#css': \r\n       [ { token: \r\n            [ 'punctuation.definition.tag.begin.soy',\r\n              'meta.tag.css.soy',\r\n              'entity.name.tag.soy' ],\r\n           regex: '(\\\\{/?)(\\\\s*)(css)\\\\b',\r\n           push: \r\n            [ { token: 'punctuation.definition.tag.end.soy',\r\n                regex: '\\\\}',\r\n                next: 'pop' },\r\n              { token: 'support.constant.soy',\r\n                regex: '\\\\b(?:LITERAL|REFERENCE|BACKEND_SPECIFIC|GOOG)\\\\b' },\r\n              { defaultToken: 'meta.tag.css.soy' } ] } ],\r\n      '#for': \r\n       [ { token: \r\n            [ 'punctuation.definition.tag.begin.soy',\r\n              'meta.tag.for.soy',\r\n              'entity.name.tag.soy' ],\r\n           regex: '(\\\\{/?)(\\\\s*)(for)\\\\b',\r\n           push: \r\n            [ { token: 'punctuation.definition.tag.end.soy',\r\n                regex: '\\\\}',\r\n                next: 'pop' },\r\n              { token: 'keyword.operator.soy', regex: '\\\\bin\\\\b' },\r\n              { token: 'support.function.soy', regex: '\\\\brange\\\\b' },\r\n              { include: '#variable' },\r\n              { include: '#number' },\r\n              { include: '#primitive' },\r\n              { defaultToken: 'meta.tag.for.soy' } ] } ],\r\n      '#foreach': \r\n       [ { token: \r\n            [ 'punctuation.definition.tag.begin.soy',\r\n              'meta.tag.foreach.soy',\r\n              'entity.name.tag.soy' ],\r\n           regex: '(\\\\{/?)(\\\\s*)(foreach)\\\\b',\r\n           push: \r\n            [ { token: 'punctuation.definition.tag.end.soy',\r\n                regex: '\\\\}',\r\n                next: 'pop' },\r\n              { token: 'keyword.operator.soy', regex: '\\\\bin\\\\b' },\r\n              { include: '#variable' },\r\n              { defaultToken: 'meta.tag.foreach.soy' } ] } ],\r\n      '#function': \r\n       [ { token: 'support.function.soy',\r\n           regex: '\\\\b(?:isFirst|isLast|index|hasData|length|keys|round|floor|ceiling|min|max|randomInt)\\\\b' } ],\r\n      '#if': \r\n       [ { token: \r\n            [ 'punctuation.definition.tag.begin.soy',\r\n              'meta.tag.if.soy',\r\n              'entity.name.tag.soy' ],\r\n           regex: '(\\\\{/?)(\\\\s*)(if|elseif)\\\\b',\r\n           push: \r\n            [ { token: 'punctuation.definition.tag.end.soy',\r\n                regex: '\\\\}',\r\n                next: 'pop' },\r\n              { include: '#variable' },\r\n              { include: '#operator' },\r\n              { include: '#function' },\r\n              { include: '#string-quoted-single' },\r\n              { include: '#string-quoted-double' },\r\n              { defaultToken: 'meta.tag.if.soy' } ] } ],\r\n      '#namespace': \r\n       [ { token: [ 'entity.name.tag.soy', 'text', 'variable.parameter.soy' ],\r\n           regex: '(namespace|delpackage)(\\\\s+)([\\\\w\\\\.]+)' } ],\r\n      '#number': [ { token: 'constant.numeric', regex: '[\\\\d]+' } ],\r\n      '#operator': \r\n       [ { token: 'keyword.operator.soy',\r\n           regex: '==|!=|\\\\band\\\\b|\\\\bor\\\\b|\\\\bnot\\\\b|-|\\\\+|/|\\\\?:' } ],\r\n      '#param': \r\n       [ { token: \r\n            [ 'punctuation.definition.tag.begin.soy',\r\n              'meta.tag.param.soy',\r\n              'entity.name.tag.soy' ],\r\n           regex: '(\\\\{/?)(\\\\s*)(param)',\r\n           push: \r\n            [ { token: 'punctuation.definition.tag.end.soy',\r\n                regex: '\\\\}',\r\n                next: 'pop' },\r\n              { include: '#variable' },\r\n              { token: \r\n                 [ 'entity.other.attribute-name.soy',\r\n                   'text',\r\n                   'keyword.operator.soy' ],\r\n                regex: '\\\\b([\\\\w]+)(\\\\s*)((?::)?)' },\r\n              { defaultToken: 'meta.tag.param.soy' } ] } ],\r\n      '#primitive': \r\n       [ { token: 'constant.language.soy',\r\n           regex: '\\\\b(?:null|false|true)\\\\b' } ],\r\n      '#msg': \r\n       [ { token: \r\n            [ 'punctuation.definition.tag.begin.soy',\r\n              'meta.tag.msg.soy',\r\n              'entity.name.tag.soy' ],\r\n           regex: '(\\\\{/?)(\\\\s*)(msg)\\\\b',\r\n           push: \r\n            [ { token: 'punctuation.definition.tag.end.soy',\r\n                regex: '\\\\}',\r\n                next: 'pop' },\r\n              { include: '#string-quoted-single' },\r\n              { include: '#string-quoted-double' },\r\n              { token: \r\n                 [ 'entity.other.attribute-name.soy',\r\n                   'text',\r\n                   'keyword.operator.soy' ],\r\n                regex: '\\\\b(meaning|desc)(\\\\s*)(=)' },\r\n              { defaultToken: 'meta.tag.msg.soy' } ] } ],\r\n      '#print': \r\n       [ { token: \r\n            [ 'punctuation.definition.tag.begin.soy',\r\n              'meta.tag.print.soy',\r\n              'entity.name.tag.soy' ],\r\n           regex: '(\\\\{/?)(\\\\s*)(print)\\\\b',\r\n           push: \r\n            [ { token: 'punctuation.definition.tag.end.soy',\r\n                regex: '\\\\}',\r\n                next: 'pop' },\r\n              { include: '#variable' },\r\n              { include: '#print-parameter' },\r\n              { include: '#number' },\r\n              { include: '#primitive' },\r\n              { include: '#attribute-lookup' },\r\n              { defaultToken: 'meta.tag.print.soy' } ] } ],\r\n      '#print-parameter': \r\n       [ { token: 'keyword.operator.soy', regex: '\\\\|' },\r\n         { token: 'variable.parameter.soy',\r\n           regex: 'noAutoescape|id|escapeHtml|escapeJs|insertWorkBreaks|truncate' } ],\r\n      '#special-character': \r\n       [ { token: 'support.constant.soy',\r\n           regex: '\\\\bsp\\\\b|\\\\bnil\\\\b|\\\\\\\\r|\\\\\\\\n|\\\\\\\\t|\\\\blb\\\\b|\\\\brb\\\\b' } ],\r\n      '#string-quoted-double': [ { token: 'string.quoted.double', regex: '\"[^\"]*\"' } ],\r\n      '#string-quoted-single': [ { token: 'string.quoted.single', regex: '\\'[^\\']*\\'' } ],\r\n      '#switch': \r\n       [ { token: \r\n            [ 'punctuation.definition.tag.begin.soy',\r\n              'meta.tag.switch.soy',\r\n              'entity.name.tag.soy' ],\r\n           regex: '(\\\\{/?)(\\\\s*)(switch|case)\\\\b',\r\n           push: \r\n            [ { token: 'punctuation.definition.tag.end.soy',\r\n                regex: '\\\\}',\r\n                next: 'pop' },\r\n              { include: '#variable' },\r\n              { include: '#function' },\r\n              { include: '#number' },\r\n              { include: '#string-quoted-single' },\r\n              { include: '#string-quoted-double' },\r\n              { defaultToken: 'meta.tag.switch.soy' } ] } ],\r\n      '#attribute-lookup': \r\n       [ { token: 'punctuation.definition.attribute-lookup.begin.soy',\r\n           regex: '\\\\[',\r\n           push: \r\n            [ { token: 'punctuation.definition.attribute-lookup.end.soy',\r\n                regex: '\\\\]',\r\n                next: 'pop' },\r\n              { include: '#variable' },\r\n              { include: '#function' },\r\n              { include: '#operator' },\r\n              { include: '#number' },\r\n              { include: '#primitive' },\r\n              { include: '#string-quoted-single' },\r\n              { include: '#string-quoted-double' } ] } ],\r\n      '#tag': \r\n       [ { token: 'punctuation.definition.tag.begin.soy',\r\n           regex: '\\\\{',\r\n           push: \r\n            [ { token: 'punctuation.definition.tag.end.soy',\r\n                regex: '\\\\}',\r\n                next: 'pop' },\r\n              { include: '#namespace' },\r\n              { include: '#variable' },\r\n              { include: '#special-character' },\r\n              { include: '#tag-simple' },\r\n              { include: '#function' },\r\n              { include: '#operator' },\r\n              { include: '#attribute-lookup' },\r\n              { include: '#number' },\r\n              { include: '#primitive' },\r\n              { include: '#print-parameter' } ] } ],\r\n      '#tag-simple': \r\n       [ { token: 'entity.name.tag.soy',\r\n           regex: '{{\\\\s*(?:literal|else|ifempty|default)\\\\s*(?=\\\\})'} ],\r\n      '#template': \r\n       [ { token: \r\n            [ 'punctuation.definition.tag.begin.soy',\r\n              'meta.tag.template.soy' ],\r\n           regex: '(\\\\{/?)(\\\\s*)(?=template|deltemplate)',\r\n           push: \r\n            [ { token: 'punctuation.definition.tag.end.soy',\r\n                regex: '\\\\}',\r\n                next: 'pop' },\r\n              { token: ['entity.name.tag.soy', 'text', 'entity.name.function.soy' ],\r\n                regex: '(template|deltemplate)(\\\\s+)([\\\\.\\\\w]+)',\r\n                originalRegex: '(?<=template|deltemplate)\\\\s+([\\\\.\\\\w]+)' },\r\n              { token: \r\n                 [ 'entity.other.attribute-name.soy',\r\n                   'text',\r\n                   'keyword.operator.soy',\r\n                   'text',\r\n                   'string.quoted.double.soy' ],\r\n                regex: '\\\\b(private)(\\\\s*)(=)(\\\\s*)(\"true\"|\"false\")' },\r\n              { token: \r\n                 [ 'entity.other.attribute-name.soy',\r\n                   'text',\r\n                   'keyword.operator.soy',\r\n                   'text',\r\n                   'string.quoted.single.soy' ],\r\n                regex: '\\\\b(private)(\\\\s*)(=)(\\\\s*)(\\'true\\'|\\'false\\')' },\r\n              { token: \r\n                 [ 'entity.other.attribute-name.soy',\r\n                   'text',\r\n                   'keyword.operator.soy',\r\n                   'text',\r\n                   'string.quoted.double.soy' ],\r\n                regex: '\\\\b(autoescape)(\\\\s*)(=)(\\\\s*)(\"true\"|\"false\"|\"contextual\")' },\r\n              { token: \r\n                 [ 'entity.other.attribute-name.soy',\r\n                   'text',\r\n                   'keyword.operator.soy',\r\n                   'text',\r\n                   'string.quoted.single.soy' ],\r\n                regex: '\\\\b(autoescape)(\\\\s*)(=)(\\\\s*)(\\'true\\'|\\'false\\'|\\'contextual\\')' },\r\n              { defaultToken: 'meta.tag.template.soy' } ] } ],\r\n      '#variable': [ { token: 'variable.other.soy', regex: '\\\\$[\\\\w\\\\.]+' } ] };\r\n    \r\n    \r\n    for (var i in soyRules) {\r\n        if (this.$rules[i]) {\r\n            this.$rules[i].unshift.apply(this.$rules[i], soyRules[i]);\r\n        } else {\r\n            this.$rules[i] = soyRules[i];\r\n        }\r\n    }\r\n    \r\n    this.normalizeRules();\r\n};\r\n\r\nSoyTemplateHighlightRules.metaData = { comment: 'SoyTemplate',\r\n      fileTypes: [ 'soy' ],\r\n      firstLineMatch: '\\\\{\\\\s*namespace\\\\b',\r\n      foldingStartMarker: '\\\\{\\\\s*template\\\\s+[^\\\\}]*\\\\}',\r\n      foldingStopMarker: '\\\\{\\\\s*/\\\\s*template\\\\s*\\\\}',\r\n      name: 'SoyTemplate',\r\n      scopeName: 'source.soy' };\r\n\r\n\r\noop.inherits(SoyTemplateHighlightRules, HtmlHighlightRules);\r\n\r\nexports.SoyTemplateHighlightRules = SoyTemplateHighlightRules;\r\n});"]}