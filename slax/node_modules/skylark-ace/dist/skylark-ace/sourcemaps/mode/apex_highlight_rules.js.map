{"version":3,"sources":["mode/apex_highlight_rules.js"],"names":["define","require","exports","module","oop","TextHighlightRules","DocCommentHighlightRules","ApexHighlightRules","mainKeywordMapper","this","createKeywordMapper","variable.language","keyword","storage.type","constant.language","support.function","string","start","options","regex","multiline","token","next","escape","error","defaultToken","$rules","getTagRule","caseInsensitive","getStartRule","type","value","slice","merge","maybe_soql","soql","log-start","log-comment","log-header","embedRules","getEndRule","normalizeRules","inherits"],"mappings":";;;;;;;AA+BAA,OAAO,SAASC,EAASC,EAASC,GAClC,aAEA,IAAIC,EAAMH,EAAQ,cACdI,EAAqBJ,EAAQ,gCAAgCI,mBAC7DC,EAA2BL,EAAQ,uCAAuCK,yBAE1EC,EAAqB,WACrB,IAAIC,EAAoBC,KAAKC,qBACzBC,oBAAqB,gRAIrBC,QAAW,gpBASXC,eACI,wHACJC,oBACI,qFACJC,mBACI,+CACL,cAAc,GAMjB,SAASC,EAAOC,EAAOC,GACnB,OACIC,MAAOF,GAASC,EAAQE,UAAY,GAAK,SACzCC,MAAO,eACPC,OACIH,MAAOD,EAAQK,OACfF,MAAO,qBAEPF,MAAOD,EAAQM,MACfH,MAAO,kBAEPF,MAAOF,GAASC,EAAQE,UAAY,GAAK,MACzCC,MAAO,aACPC,KAAMJ,EAAQI,MAAQ,UAEtBG,aAAc,YA4B1BhB,KAAKiB,QACDT,OACID,EAAO,KACHO,OAAQ,aACRC,MAAO,MACPJ,WAAW,MA1BXC,MAAQ,UACRF,MAAQ,cACRG,MACIhB,EAAyBqB,cACxBN,MAAQ,UAAWF,MAAQ,MAAOG,KAAO,UACzCG,aAAe,UAAWG,iBAAiB,KAGpDtB,EAAyBuB,aAAa,cAElCR,MAAQ,UACRF,MAAQ,OACRG,MACIhB,EAAyBqB,cACxBN,MAAQ,UAAWF,MAAQ,SAAUG,KAAO,UAC5CG,aAAe,UAAWG,iBAAiB,OAehDE,KAAM,aACNT,OACI,oBACA,6BACA,oBACA,gCACA,oBACA,+BAEJF,MAAO,sDAENA,MAAO,wCACPE,MAAO,sBAGRF,MAAO,uCACPE,MAzEZ,SAAuBU,GACnB,MAAuB,OAAnBA,EAAMC,OAAO,GAAoB,mBAC9BxB,EAAkBuB,MA0EjBZ,MAAO,MACPE,MAAO,kBAEPA,MAAQ,mBACRF,MAAQ,gEAERE,MAAQ,mBACRF,MAAQ,oFACRG,KAAQ,UAERD,MAAQ,uBACRF,MAAQ,UACRG,KAAQ,UAERD,MAAQ,eACRF,MAAQ,OACRG,KAAQ,aACRW,OAAQ,IAERZ,MAAQ,eACRF,MAAQ,SACRG,KAAQ,QACRW,OAAQ,IAERZ,MAAQ,eACRF,MAAQ,SACRc,OAAQ,IAGhBC,aACIf,MAAO,MACPE,MAAO,SAEPF,MAAO,kBACPE,MAAO,UACPO,iBAAiB,EACjBN,KAAM,SAENH,MAAO,GACPE,MAAO,OACPC,KAAM,UAEVa,OACIhB,MAAO,mOAGPE,MAAO,UACPO,iBAAiB,IAEjBT,MAAO,iFACPE,MAAO,mBACPO,iBAAiB,IAEjBP,MAAQ,eACRF,MAAQ,OACRG,KAAQ,QACRW,OAAQ,GAEZjB,EAAO,KACHO,OAAQ,aACRC,MAAO,MACPJ,WAAW,EACXE,KAAM,SAEVN,EAAO,KACHO,OAAQ,aACRC,MAAO,MACPJ,WAAW,EACXE,KAAM,UAGNH,MAAO,MACPE,MAAO,qBAGPF,MAAQ,kDACRE,MAAQ,qBAGZe,cACIf,MAAQ,sBACRF,MAAQ,gBACRG,KAAM,eAEND,MAAQ,sBACRF,MAAQ,+BACRG,KAAM,gBAEND,MAAQ,YACRF,MAAQ,sBACRG,KAAM,gBAENG,aAAc,SAElBY,gBACIhB,MAAQ,cACRF,MAAQ,MACRG,KAAM,cAEVgB,eACIjB,MAAQ,sBACRF,MAAQ,oCAGRE,MAAQ,UACRF,MAAO,uJAIPA,MAAO,GACPG,KAAM,eAGdb,KAAK8B,WAAWjC,EAA0B,QACpCA,EAAyBkC,WAAW,WAG1C/B,KAAKgC,kBAITrC,EAAIsC,SAASnC,EAAoBF,GAEjCH,EAAQK,mBAAqBA","file":"../../mode/apex_highlight_rules.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2012, Ajax.org B.V.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\n\r\ndefine(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar TextHighlightRules = require(\"../mode/text_highlight_rules\").TextHighlightRules;\r\nvar DocCommentHighlightRules = require(\"../mode/doc_comment_highlight_rules\").DocCommentHighlightRules;\r\n\r\nvar ApexHighlightRules = function() {\r\n    var mainKeywordMapper = this.createKeywordMapper({\r\n        \"variable.language\": \"activate|any|autonomous|begin|bigdecimal|byte|cast|char|collect|const\"\r\n             + \"|end|exit|export|float|goto|group|having|hint|import|inner|into|join|loop|number|object|of|outer\"\r\n             + \"|parallel|pragma|retrieve|returning|search|short|stat|synchronized|then|this_month\"\r\n             + \"|transaction|type|when\",\r\n        \"keyword\": \"private|protected|public|native|synchronized|abstract|threadsafe|transient|static|final\"\r\n             + \"|and|array|as|asc|break|bulk|by|catch|class|commit|continue|convertcurrency\"\r\n             + \"|delete|desc|do|else|enum|extends|false|final|finally|for|from|future|global\"\r\n             + \"|if|implements|in|insert|instanceof|interface|last_90_days|last_month\"\r\n             + \"|last_n_days|last_week|like|limit|list|map|merge|new|next_90_days|next_month|next_n_days\"\r\n             + \"|next_week|not|null|nulls|on|or|override|package|return\"\r\n             + \"|rollback|savepoint|select|set|sort|super|testmethod|this|this_week|throw|today\"\r\n             + \"|tolabel|tomorrow|trigger|true|try|undelete|update|upsert|using|virtual|webservice\"\r\n             + \"|where|while|yesterday|switch|case|default\",\r\n        \"storage.type\":\r\n            \"def|boolean|byte|char|short|int|float|pblob|date|datetime|decimal|double|id|integer|long|string|time|void|blob|Object\",\r\n        \"constant.language\":\r\n            \"true|false|null|after|before|count|excludes|first|includes|last|order|sharing|with\",\r\n        \"support.function\":\r\n            \"system|apex|label|apexpages|userinfo|schema\"\r\n    }, \"identifier\", true);\r\n    function keywordMapper(value) {\r\n        if (value.slice(-3) == \"__c\") return \"support.function\";\r\n        return mainKeywordMapper(value);\r\n    }\r\n    \r\n    function string(start, options) {\r\n        return {\r\n            regex: start + (options.multiline ? \"\" : \"(?=.)\"),\r\n            token: \"string.start\",\r\n            next: [{\r\n                regex: options.escape,\r\n                token: \"character.escape\"\r\n            }, {\r\n                regex: options.error,\r\n                token: \"error.invalid\"\r\n            }, {\r\n                regex: start + (options.multiline ? \"\" : \"|$\"),\r\n                token: \"string.end\",\r\n                next: options.next || \"start\"\r\n            }, {\r\n                defaultToken: \"string\"\r\n            }]\r\n        };\r\n    }\r\n    \r\n    function comments() {\r\n        return [{\r\n                token : \"comment\",\r\n                regex : \"\\\\/\\\\/(?=.)\",\r\n                next : [\r\n                    DocCommentHighlightRules.getTagRule(),\r\n                    {token : \"comment\", regex : \"$|^\", next : \"start\"},\r\n                    {defaultToken : \"comment\", caseInsensitive: true}\r\n                ]\r\n            },\r\n            DocCommentHighlightRules.getStartRule(\"doc-start\"),\r\n            {\r\n                token : \"comment\", // multi line comment\r\n                regex : /\\/\\*/,\r\n                next : [\r\n                    DocCommentHighlightRules.getTagRule(),\r\n                    {token : \"comment\", regex : \"\\\\*\\\\/\", next : \"start\"},\r\n                    {defaultToken : \"comment\", caseInsensitive: true}\r\n                ]\r\n            }\r\n        ];\r\n    }\r\n    \r\n    this.$rules = {\r\n        start: [\r\n            string(\"'\", {\r\n                escape: /\\\\[nb'\"\\\\]/,\r\n                error: /\\\\./,\r\n                multiline: false\r\n            }),\r\n            comments(\"c\"),\r\n            {\r\n                type: \"decoration\",\r\n                token: [\r\n                    \"meta.package.apex\",\r\n                    \"keyword.other.package.apex\",\r\n                    \"meta.package.apex\",\r\n                    \"storage.modifier.package.apex\",\r\n                    \"meta.package.apex\",\r\n                    \"punctuation.terminator.apex\"\r\n                ],\r\n                regex: /^(\\s*)(package)\\b(?:(\\s*)([^ ;$]+)(\\s*)((?:;)?))?/\r\n            }, {\r\n                 regex: /@[a-zA-Z_$][a-zA-Z_$\\d\\u0080-\\ufffe]*/,\r\n                 token: \"constant.language\"\r\n            },\r\n            {\r\n                regex: /[a-zA-Z_$][a-zA-Z_$\\d\\u0080-\\ufffe]*/,\r\n                token: keywordMapper\r\n            },  \r\n            {\r\n                regex: \"`#%\",\r\n                token: \"error.invalid\"\r\n            }, {\r\n                token : \"constant.numeric\", // float\r\n                regex : /[+-]?\\d+(?:(?:\\.\\d*)?(?:[LlDdEe][+-]?\\d+)?)\\b|\\.\\d+[LlDdEe]/\r\n            }, {\r\n                token : \"keyword.operator\",\r\n                regex : /--|\\+\\+|===|==|=|!=|!==|<=|>=|<<=|>>=|>>>=|<>|<|>|!|&&|\\|\\||\\?\\:|[!$%&*+\\-~\\/^]=?/,\r\n                next  : \"start\"\r\n            }, {\r\n                token : \"punctuation.operator\",\r\n                regex : /[?:,;.]/,\r\n                next  : \"start\"\r\n            }, {\r\n                token : \"paren.lparen\",\r\n                regex : /[\\[]/,\r\n                next  : \"maybe_soql\",\r\n                merge : false\r\n            }, {\r\n                token : \"paren.lparen\",\r\n                regex : /[\\[({]/,\r\n                next  : \"start\",\r\n                merge : false\r\n            }, {\r\n                token : \"paren.rparen\",\r\n                regex : /[\\])}]/,\r\n                merge : false\r\n            } \r\n        ], \r\n        maybe_soql: [{\r\n            regex: /\\s+/,\r\n            token: \"text\"\r\n        }, {\r\n            regex: /(SELECT|FIND)\\b/,\r\n            token: \"keyword\",\r\n            caseInsensitive: true,\r\n            next: \"soql\"\r\n        }, {\r\n            regex: \"\",\r\n            token: \"none\",\r\n            next: \"start\"\r\n        }],\r\n        soql: [{\r\n            regex: \"(:?ASC|BY|CATEGORY|CUBE|DATA|DESC|END|FIND|FIRST|FOR|FROM|GROUP|HAVING|IN|LAST\"\r\n                + \"|LIMIT|NETWORK|NULLS|OFFSET|ORDER|REFERENCE|RETURNING|ROLLUP|SCOPE|SELECT\"\r\n                + \"|SNIPPET|TRACKING|TYPEOF|UPDATE|USING|VIEW|VIEWSTAT|WHERE|WITH|AND|OR)\\\\b\",\r\n            token: \"keyword\",\r\n            caseInsensitive: true\r\n        }, {\r\n            regex: \"(:?target_length|toLabel|convertCurrency|count|Contact|Account|User|FIELDS)\\\\b\",\r\n            token: \"support.function\",\r\n            caseInsensitive: true\r\n        }, {\r\n            token : \"paren.rparen\",\r\n            regex : /[\\]]/,\r\n            next  : \"start\",\r\n            merge : false\r\n        }, \r\n        string(\"'\", {\r\n            escape: /\\\\[nb'\"\\\\]/,\r\n            error: /\\\\./,\r\n            multiline: false,\r\n            next: \"soql\"\r\n        }),\r\n        string('\"', {\r\n            escape: /\\\\[nb'\"\\\\]/,\r\n            error: /\\\\./,\r\n            multiline: false,\r\n            next: \"soql\"\r\n        }),\r\n        {\r\n            regex: /\\\\./,\r\n            token: \"character.escape\"\r\n        },\r\n        {\r\n            regex : /[\\?\\&\\|\\!\\{\\}\\[\\]\\(\\)\\^\\~\\*\\:\\\"\\'\\+\\-\\,\\.=\\\\\\/]/,\r\n            token : \"keyword.operator\"\r\n        }],\r\n        \r\n        \"log-start\" : [ {\r\n            token : \"timestamp.invisible\",\r\n            regex : /^[\\d:.() ]+\\|/, \r\n            next: \"log-header\"\r\n        },  {\r\n            token : \"timestamp.invisible\",\r\n            regex : /^  (Number of|Maximum)[^:]*:/,\r\n            next: \"log-comment\"\r\n        }, {\r\n            token : \"invisible\",\r\n            regex : /^Execute Anonymous:/,\r\n            next: \"log-comment\"\r\n        },  {\r\n            defaultToken: \"text\"\r\n        }],\r\n        \"log-comment\": [{\r\n            token : \"log-comment\",\r\n            regex : /.*$/,\r\n            next: \"log-start\"\r\n        }],\r\n        \"log-header\": [{\r\n            token : \"timestamp.invisible\",\r\n            regex : /((USER_DEBUG|\\[\\d+\\]|DEBUG)\\|)+/\r\n        },\r\n        {\r\n            token : \"keyword\",\r\n            regex: \"(?:EXECUTION_FINISHED|EXECUTION_STARTED|CODE_UNIT_STARTED\"\r\n                + \"|CUMULATIVE_LIMIT_USAGE|LIMIT_USAGE_FOR_NS\"\r\n                + \"|CUMULATIVE_LIMIT_USAGE_END|CODE_UNIT_FINISHED)\"\r\n        }, {\r\n            regex: \"\",\r\n            next: \"log-start\"\r\n        }]\r\n    };\r\n    this.embedRules(DocCommentHighlightRules, \"doc-\",\r\n        [ DocCommentHighlightRules.getEndRule(\"start\") ]);\r\n        \r\n\r\n    this.normalizeRules();\r\n};\r\n\r\n\r\noop.inherits(ApexHighlightRules, TextHighlightRules);\r\n\r\nexports.ApexHighlightRules = ApexHighlightRules;\r\n});\r\n"]}