{"version":3,"sources":["mode/php.js"],"names":["define","require","exports","module","oop","TextMode","Mode","PhpHighlightRules","PhpLangHighlightRules","MatchingBraceOutdent","WorkerClient","Range","PhpCompletions","CstyleBehaviour","CStyleFoldMode","FoldMode","unicode","HtmlMode","JavaScriptMode","CssMode","PhpMode","opts","this","HighlightRules","$outdent","$behaviour","$completer","foldingRules","inherits","tokenRe","RegExp","wordChars","nonTokenRe","lineCommentStart","blockComment","start","end","getNextLineIndent","state","line","tab","indent","$getIndent","tokenizedLine","getTokenizer","getLineTokens","tokens","endState","length","type","match","checkOutdent","input","autoOutdent","doc","row","getCompletions","session","pos","prefix","$id","call","prototype","inline","mode","createWorker","inlinePhp","createModeDelegates","js-","css-","php-","subModes","worker","attachToDocument","getDocument","on","e","setAnnotations","data","clearAnnotations"],"mappings":"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","file":"../../mode/php.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2010, Ajax.org B.V.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\ndefine(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar TextMode = require(\"./text\").Mode;\r\nvar PhpHighlightRules = require(\"./php_highlight_rules\").PhpHighlightRules;\r\nvar PhpLangHighlightRules = require(\"./php_highlight_rules\").PhpLangHighlightRules;\r\nvar MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\r\nvar Range = require(\"../range\").Range;\r\nvar WorkerClient = require(\"../worker/worker_client\").WorkerClient;\r\nvar PhpCompletions = require(\"./php_completions\").PhpCompletions;\r\nvar CstyleBehaviour = require(\"./behaviour/cstyle\").CstyleBehaviour;\r\nvar CStyleFoldMode = require(\"./folding/cstyle\").FoldMode;\r\nvar unicode = require(\"../unicode\");\r\nvar HtmlMode = require(\"./html\").Mode;\r\nvar JavaScriptMode = require(\"./javascript\").Mode;\r\nvar CssMode = require(\"./css\").Mode;\r\n\r\nvar PhpMode = function(opts) {\r\n    this.HighlightRules = PhpLangHighlightRules;\r\n    this.$outdent = new MatchingBraceOutdent();\r\n    this.$behaviour = new CstyleBehaviour();\r\n    this.$completer = new PhpCompletions();\r\n    this.foldingRules = new CStyleFoldMode();\r\n};\r\noop.inherits(PhpMode, TextMode);\r\n\r\n(function() {\r\n\r\n    this.tokenRe = new RegExp(\"^[\" + unicode.wordChars + \"_]+\", \"g\");\r\n    this.nonTokenRe = new RegExp(\"^(?:[^\" + unicode.wordChars + \"_]|\\\\s])+\", \"g\");\r\n\r\n    this.lineCommentStart = [\"//\", \"#\"];\r\n    this.blockComment = {start: \"/*\", end: \"*/\"};\r\n\r\n    this.getNextLineIndent = function(state, line, tab) {\r\n        var indent = this.$getIndent(line);\r\n\r\n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\r\n        var tokens = tokenizedLine.tokens;\r\n        var endState = tokenizedLine.state;\r\n\r\n        if (tokens.length && tokens[tokens.length-1].type == \"comment\") {\r\n            return indent;\r\n        }\r\n\r\n        if (state == \"start\") {\r\n            var match = line.match(/^.*[\\{\\(\\[:]\\s*$/);\r\n            if (match) {\r\n                indent += tab;\r\n            }\r\n        } else if (state == \"doc-start\") {\r\n            if (endState != \"doc-start\") {\r\n                return \"\";\r\n            }\r\n            var match = line.match(/^\\s*(\\/?)\\*/);\r\n            if (match) {\r\n                if (match[1]) {\r\n                    indent += \" \";\r\n                }\r\n                indent += \"* \";\r\n            }\r\n        }\r\n\r\n        return indent;\r\n    };\r\n\r\n    this.checkOutdent = function(state, line, input) {\r\n        return this.$outdent.checkOutdent(line, input);\r\n    };\r\n\r\n    this.autoOutdent = function(state, doc, row) {\r\n        this.$outdent.autoOutdent(doc, row);\r\n    };\r\n\r\n    this.getCompletions = function(state, session, pos, prefix) {\r\n        return this.$completer.getCompletions(state, session, pos, prefix);\r\n    };\r\n\r\n    this.$id = \"ace/mode/php-inline\";\r\n}).call(PhpMode.prototype);\r\n\r\nvar Mode = function(opts) {\r\n    if (opts && opts.inline) {\r\n        var mode = new PhpMode();\r\n        mode.createWorker = this.createWorker;\r\n        mode.inlinePhp = true;\r\n        return mode;\r\n    }\r\n    HtmlMode.call(this);\r\n    this.HighlightRules = PhpHighlightRules;\r\n    this.createModeDelegates({\r\n        \"js-\": JavaScriptMode,\r\n        \"css-\": CssMode,\r\n        \"php-\": PhpMode\r\n    });\r\n    this.foldingRules.subModes[\"php-\"] = new CStyleFoldMode();\r\n};\r\noop.inherits(Mode, HtmlMode);\r\n\r\n(function() {\r\n\r\n    this.createWorker = function(session) {\r\n        var worker = new WorkerClient([\"ace\"], \"ace/mode/php_worker\", \"PhpWorker\");\r\n        worker.attachToDocument(session.getDocument());\r\n\r\n        if (this.inlinePhp)\r\n            worker.call(\"setOptions\", [{inline: true}]);\r\n\r\n        worker.on(\"annotate\", function(e) {\r\n            session.setAnnotations(e.data);\r\n        });\r\n\r\n        worker.on(\"terminate\", function() {\r\n            session.clearAnnotations();\r\n        });\r\n\r\n        return worker;\r\n    };\r\n\r\n    this.$id = \"ace/mode/php\";\r\n}).call(Mode.prototype);\r\n\r\nexports.Mode = Mode;\r\n});\r\n"]}