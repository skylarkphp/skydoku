{"version":3,"sources":["mode/ruby_highlight_rules.js"],"names":["define","require","exports","module","oop","TextHighlightRules","constantOtherSymbol","token","regex","constantNumericHex","qString","qqString","tString","constantNumericFloat","RubyHighlightRules","instanceVariable","keywordMapper","this","$keywords","createKeywordMapper","keyword","constant.language","variable.language","support.function","invalid.deprecated","$rules","start","next","onMatch","val","state","stack","nextState","length","unshift","shift","indexOf","push","defaultToken","stateName","value","currentState","tokens","split","splitRegex","type","rules","heredoc","indentedHeredoc","comment","normalizeRules","inherits"],"mappings":"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","file":"../../mode/ruby_highlight_rules.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2010, Ajax.org B.V.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\ndefine(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\r\n\r\n// exports is for Haml\r\nvar constantOtherSymbol = exports.constantOtherSymbol = {\r\n    token : \"constant.other.symbol.ruby\", // symbol\r\n    regex : \"[:](?:[A-Za-z_]|[@$](?=[a-zA-Z0-9_]))[a-zA-Z0-9_]*[!=?]?\"\r\n};\r\n\r\nvar qString = exports.qString = {\r\n    token : \"string\", // single line\r\n    regex : \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\r\n};\r\n\r\nvar qqString = exports.qqString = {\r\n    token : \"string\", // single line\r\n    regex : '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'\r\n};\r\n\r\nvar tString = exports.tString = {\r\n    token : \"string\", // backtick string\r\n    regex : \"[`](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[`]\"\r\n};\r\n\r\nvar constantNumericHex = exports.constantNumericHex = {\r\n    token : \"constant.numeric\", // hex\r\n    regex : \"0[xX][0-9a-fA-F](?:[0-9a-fA-F]|_(?=[0-9a-fA-F]))*\\\\b\"\r\n};\r\n\r\nvar constantNumericFloat = exports.constantNumericFloat = {\r\n    token : \"constant.numeric\", // float\r\n    regex : \"[+-]?\\\\d(?:\\\\d|_(?=\\\\d))*(?:(?:\\\\.\\\\d(?:\\\\d|_(?=\\\\d))*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"\r\n};\r\n\r\nvar instanceVariable = exports.instanceVariable = {\r\n    token : \"variable.instance\", // instance variable\r\n    regex : \"@{1,2}[a-zA-Z_\\\\d]+\"\r\n};\r\n\r\nvar RubyHighlightRules = function() {\r\n\r\n    var builtinFunctions = (\r\n        \"abort|Array|assert|assert_equal|assert_not_equal|assert_same|assert_not_same|\" +\r\n        \"assert_nil|assert_not_nil|assert_match|assert_no_match|assert_in_delta|assert_throws|\" +\r\n        \"assert_raise|assert_nothing_raised|assert_instance_of|assert_kind_of|assert_respond_to|\" +\r\n        \"assert_operator|assert_send|assert_difference|assert_no_difference|assert_recognizes|\" +\r\n        \"assert_generates|assert_response|assert_redirected_to|assert_template|assert_select|\" +\r\n        \"assert_select_email|assert_select_rjs|assert_select_encoded|css_select|at_exit|\" +\r\n        \"attr|attr_writer|attr_reader|attr_accessor|attr_accessible|autoload|binding|block_given?|callcc|\" +\r\n        \"caller|catch|chomp|chomp!|chop|chop!|defined?|delete_via_redirect|eval|exec|exit|\" +\r\n        \"exit!|fail|Float|flunk|follow_redirect!|fork|form_for|form_tag|format|gets|global_variables|gsub|\" +\r\n        \"gsub!|get_via_redirect|host!|https?|https!|include|Integer|lambda|link_to|\" +\r\n        \"link_to_unless_current|link_to_function|link_to_remote|load|local_variables|loop|open|open_session|\" +\r\n        \"p|print|printf|proc|putc|puts|post_via_redirect|put_via_redirect|raise|rand|\" +\r\n        \"raw|readline|readlines|redirect?|request_via_redirect|require|scan|select|\" +\r\n        \"set_trace_func|sleep|split|sprintf|srand|String|stylesheet_link_tag|syscall|system|sub|sub!|test|\" +\r\n        \"throw|trace_var|trap|untrace_var|atan2|cos|exp|frexp|ldexp|log|log10|sin|sqrt|tan|\" +\r\n        \"render|javascript_include_tag|csrf_meta_tag|label_tag|text_field_tag|submit_tag|check_box_tag|\" +\r\n        \"content_tag|radio_button_tag|text_area_tag|password_field_tag|hidden_field_tag|\" +\r\n        \"fields_for|select_tag|options_for_select|options_from_collection_for_select|collection_select|\" +\r\n        \"time_zone_select|select_date|select_time|select_datetime|date_select|time_select|datetime_select|\" +\r\n        \"select_year|select_month|select_day|select_hour|select_minute|select_second|file_field_tag|\" +\r\n        \"file_field|respond_to|skip_before_filter|around_filter|after_filter|verify|\" +\r\n        \"protect_from_forgery|rescue_from|helper_method|redirect_to|before_filter|\" +\r\n        \"send_data|send_file|validates_presence_of|validates_uniqueness_of|validates_length_of|\" +\r\n        \"validates_format_of|validates_acceptance_of|validates_associated|validates_exclusion_of|\" +\r\n        \"validates_inclusion_of|validates_numericality_of|validates_with|validates_each|\" +\r\n        \"authenticate_or_request_with_http_basic|authenticate_or_request_with_http_digest|\" +\r\n        \"filter_parameter_logging|match|get|post|resources|redirect|scope|assert_routing|\" +\r\n        \"translate|localize|extract_locale_from_tld|caches_page|expire_page|caches_action|expire_action|\" +\r\n        \"cache|expire_fragment|expire_cache_for|observe|cache_sweeper|\" +\r\n        \"has_many|has_one|belongs_to|has_and_belongs_to_many\"\r\n    );\r\n\r\n    var keywords = (\r\n        \"alias|and|BEGIN|begin|break|case|class|def|defined|do|else|elsif|END|end|ensure|\" +\r\n        \"__FILE__|finally|for|gem|if|in|__LINE__|module|next|not|or|private|protected|public|\" +\r\n        \"redo|rescue|retry|return|super|then|undef|unless|until|when|while|yield\"\r\n    );\r\n\r\n    var buildinConstants = (\r\n        \"true|TRUE|false|FALSE|nil|NIL|ARGF|ARGV|DATA|ENV|RUBY_PLATFORM|RUBY_RELEASE_DATE|\" +\r\n        \"RUBY_VERSION|STDERR|STDIN|STDOUT|TOPLEVEL_BINDING\"\r\n    );\r\n\r\n    var builtinVariables = (\r\n        \"$DEBUG|$defout|$FILENAME|$LOAD_PATH|$SAFE|$stdin|$stdout|$stderr|$VERBOSE|\" +\r\n        \"$!|root_url|flash|session|cookies|params|request|response|logger|self\"\r\n    );\r\n\r\n    var keywordMapper = this.$keywords = this.createKeywordMapper({\r\n        \"keyword\": keywords,\r\n        \"constant.language\": buildinConstants,\r\n        \"variable.language\": builtinVariables,\r\n        \"support.function\": builtinFunctions,\r\n        \"invalid.deprecated\": \"debugger\" // TODO is this a remnant from js mode?\r\n    }, \"identifier\");\r\n\r\n    // regexp must not have capturing parentheses. Use (?:) instead.\r\n    // regexps are ordered -> the first match is used\r\n\r\n    this.$rules = {\r\n        \"start\" : [\r\n            {\r\n                token : \"comment\",\r\n                regex : \"#.*$\"\r\n            }, {\r\n                token : \"comment\", // multi line comment\r\n                regex : \"^=begin(?:$|\\\\s.*$)\",\r\n                next : \"comment\"\r\n            }, {\r\n                token : \"string.regexp\",\r\n                regex : \"[/](?:(?:\\\\[(?:\\\\\\\\]|[^\\\\]])+\\\\])|(?:\\\\\\\\/|[^\\\\]/]))*[/]\\\\w*\\\\s*(?=[).,;]|$)\"\r\n            },\r\n\r\n            [{\r\n                regex: \"[{}]\", onMatch: function(val, state, stack) {\r\n                    this.next = val == \"{\" ? this.nextState : \"\";\r\n                    if (val == \"{\" && stack.length) {\r\n                        stack.unshift(\"start\", state);\r\n                        return \"paren.lparen\";\r\n                    }\r\n                    if (val == \"}\" && stack.length) {\r\n                        stack.shift();\r\n                        this.next = stack.shift();\r\n                        if (this.next.indexOf(\"string\") != -1)\r\n                            return \"paren.end\";\r\n                    }\r\n                    return val == \"{\" ? \"paren.lparen\" : \"paren.rparen\";\r\n                },\r\n                nextState: \"start\"\r\n            }, {\r\n                token : \"string.start\",\r\n                regex : /\"/,\r\n                push  : [{\r\n                    token : \"constant.language.escape\",\r\n                    regex : /\\\\(?:[nsrtvfbae'\"\\\\]|c.|C-.|M-.(?:\\\\C-.)?|[0-7]{3}|x[\\da-fA-F]{2}|u[\\da-fA-F]{4})/\r\n                }, {\r\n                    token : \"paren.start\",\r\n                    regex : /#{/,\r\n                    push  : \"start\"\r\n                }, {\r\n                    token : \"string.end\",\r\n                    regex : /\"/,\r\n                    next  : \"pop\"\r\n                }, {\r\n                    defaultToken: \"string\"\r\n                }]\r\n            }, {\r\n                token : \"string.start\",\r\n                regex : /`/,\r\n                push  : [{\r\n                    token : \"constant.language.escape\",\r\n                    regex : /\\\\(?:[nsrtvfbae'\"\\\\]|c.|C-.|M-.(?:\\\\C-.)?|[0-7]{3}|x[\\da-fA-F]{2}|u[\\da-fA-F]{4})/\r\n                }, {\r\n                    token : \"paren.start\",\r\n                    regex : /#{/,\r\n                    push  : \"start\"\r\n                }, {\r\n                    token : \"string.end\",\r\n                    regex : /`/,\r\n                    next  : \"pop\"\r\n                }, {\r\n                    defaultToken: \"string\"\r\n                }]\r\n            }, {\r\n                token : \"string.start\",\r\n                regex : /'/,\r\n                push  : [{\r\n                    token : \"constant.language.escape\",\r\n                    regex : /\\\\['\\\\]/\r\n                },  {\r\n                    token : \"string.end\",\r\n                    regex : /'/,\r\n                    next  : \"pop\"\r\n                }, {\r\n                    defaultToken: \"string\"\r\n                }]\r\n            }],\r\n            // TODO: add support for %[QqxWwrs][{[(]\r\n\r\n            {\r\n                token : \"text\", // namespaces aren't symbols\r\n                regex : \"::\"\r\n            }, {\r\n                token : \"variable.instance\", // instance variable\r\n                regex : \"@{1,2}[a-zA-Z_\\\\d]+\"\r\n            }, {\r\n                token : \"support.class\", // class name\r\n                regex : \"[A-Z][a-zA-Z_\\\\d]+\"\r\n            },\r\n\r\n            constantOtherSymbol,\r\n            constantNumericHex,\r\n            constantNumericFloat,\r\n\r\n            {\r\n                token : \"constant.language.boolean\",\r\n                regex : \"(?:true|false)\\\\b\"\r\n            }, {\r\n                token : keywordMapper,\r\n                // TODO: Unicode escape sequences\r\n                // TODO: Unicode identifiers\r\n                regex : \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\r\n            }, {\r\n                token : \"punctuation.separator.key-value\",\r\n                regex : \"=>\"\r\n            }, {\r\n                stateName: \"heredoc\",\r\n                onMatch : function(value, currentState, stack) {\r\n                    var next = value[2] == '-' ? \"indentedHeredoc\" : \"heredoc\";\r\n                    var tokens = value.split(this.splitRegex);\r\n                    stack.push(next, tokens[3]);\r\n                    return [\r\n                        {type:\"constant\", value: tokens[1]},\r\n                        {type:\"string\", value: tokens[2]},\r\n                        {type:\"support.class\", value: tokens[3]},\r\n                        {type:\"string\", value: tokens[4]}\r\n                    ];\r\n                },\r\n                regex : \"(<<-?)(['\\\"`]?)([\\\\w]+)(['\\\"`]?)\",\r\n                rules: {\r\n                    heredoc: [{\r\n                        onMatch:  function(value, currentState, stack) {\r\n                            if (value === stack[1]) {\r\n                                stack.shift();\r\n                                stack.shift();\r\n                                this.next = stack[0] || \"start\";\r\n                                return \"support.class\";\r\n                            }\r\n                            this.next = \"\";\r\n                            return \"string\";\r\n                        },\r\n                        regex: \".*$\",\r\n                        next: \"start\"\r\n                    }],\r\n                    indentedHeredoc: [{\r\n                        token: \"string\",\r\n                        regex: \"^ +\"\r\n                    }, {\r\n                        onMatch:  function(value, currentState, stack) {\r\n                            if (value === stack[1]) {\r\n                                stack.shift();\r\n                                stack.shift();\r\n                                this.next = stack[0] || \"start\";\r\n                                return \"support.class\";\r\n                            }\r\n                            this.next = \"\";\r\n                            return \"string\";\r\n                        },\r\n                        regex: \".*$\",\r\n                        next: \"start\"\r\n                    }]\r\n                }\r\n            }, {\r\n                regex : \"$\",\r\n                token : \"empty\",\r\n                next : function(currentState, stack) {\r\n                    if (stack[0] === \"heredoc\" || stack[0] === \"indentedHeredoc\")\r\n                        return stack[0];\r\n                    return currentState;\r\n                }\r\n            }, {\r\n               token : \"string.character\",\r\n               regex : \"\\\\B\\\\?.\"\r\n            }, {\r\n                token : \"keyword.operator\",\r\n                regex : \"!|\\\\$|%|&|\\\\*|\\\\-\\\\-|\\\\-|\\\\+\\\\+|\\\\+|~|===|==|=|!=|!==|<=|>=|<<=|>>=|>>>=|<>|<|>|!|&&|\\\\|\\\\||\\\\?\\\\:|\\\\*=|%=|\\\\+=|\\\\-=|&=|\\\\^=|\\\\b(?:in|instanceof|new|delete|typeof|void)\"\r\n            }, {\r\n                token : \"paren.lparen\",\r\n                regex : \"[[({]\"\r\n            }, {\r\n                token : \"paren.rparen\",\r\n                regex : \"[\\\\])}]\"\r\n            }, {\r\n                token : \"text\",\r\n                regex : \"\\\\s+\"\r\n            }\r\n        ],\r\n        \"comment\" : [\r\n            {\r\n                token : \"comment\", // closing comment\r\n                regex : \"^=end(?:$|\\\\s.*$)\",\r\n                next : \"start\"\r\n            }, {\r\n                token : \"comment\", // comment spanning whole line\r\n                regex : \".+\"\r\n            }\r\n        ]\r\n    };\r\n\r\n    this.normalizeRules();\r\n};\r\n\r\noop.inherits(RubyHighlightRules, TextHighlightRules);\r\n\r\nexports.RubyHighlightRules = RubyHighlightRules;\r\n});\r\n"]}