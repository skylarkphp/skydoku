{"version":3,"sources":["mode/dot_highlight_rules.js"],"names":["define","require","exports","module","oop","lang","TextHighlightRules","DotHighlightRules","DocCommentHighlightRules","keywords","arrayToMap","split","attributes","this","$rules","start","token","regex","merge","next","value","hasOwnProperty","toLowerCase","comment","defaultToken","qqstring","qstring","inherits"],"mappings":";;;;;;;AAAAA,OAAO,SAASC,EAASC,EAASC,GAClC,aAEA,IAAIC,EAAMH,EAAQ,cACdI,EAAOJ,EAAQ,eACfK,EAAqBL,EAAQ,0BAA0BK,mBAGvDC,GAF2BN,EAAQ,iCAAiCO,yBAEhD,WAErB,IAAIC,EAAWJ,EAAKK,WACf,0CAA4CC,MAAM,MAGnDC,EAAaP,EAAKK,WACjB,i4CAAm4CC,MAAM,MAG94CE,KAAKC,QACAC,QAEQC,MAAQ,UACRC,MAAQ,YAERD,MAAQ,UACRC,MAAQ,SAERD,MAAQ,UACRE,OAAQ,EACRD,MAAQ,OACRE,KAAO,YAEPH,MAAQ,SACRC,MAAQ,SACRE,KAAQ,YAERH,MAAQ,SACRC,MAAQ,SACRE,KAAQ,aAERH,MAAQ,mBACRC,MAAQ,iDAERD,MAAQ,mBACRC,MAAQ,aAERD,MAAQ,uBACRC,MAAQ,QAERD,MAAQ,eACRC,MAAQ,UAERD,MAAQ,eACRC,MAAQ,UAERD,MAAO,UACPC,MAAO,WAEPD,MAAO,SAASI,GACZ,OAAIX,EAASY,eAAeD,EAAME,eACvB,UAEFV,EAAWS,eAAeD,EAAME,eAC9B,WAGA,QAGfL,MAAO,kCAGfM,UAEQP,MAAQ,UACRC,MAAQ,SACRE,KAAO,UAEPK,aAAe,YAGvBC,WAEQT,MAAQ,SACRC,MAAQ,YACRC,OAAQ,IAERF,MAAQ,SACRC,MAAQ,QACRE,KAAQ,WACRD,OAAQ,IAERF,MAAQ,SACRC,MAAQ,MACRE,KAAQ,QACRD,OAAQ,IAGhBQ,UAEQV,MAAQ,SACRC,MAAQ,YACRC,OAAQ,IAERF,MAAQ,SACRC,MAAQ,QACRE,KAAQ,UACRD,OAAQ,IAERF,MAAQ,SACRC,MAAQ,MACRE,KAAQ,QACRD,OAAQ,OAMxBd,EAAIuB,SAASpB,EAAmBD,GAEhCJ,EAAQK,kBAAoBA","file":"../../mode/dot_highlight_rules.js","sourcesContent":["define(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar lang = require(\"../lib/lang\");\r\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\r\nvar DocCommentHighlightRules = require(\"./doc_comment_highlight_rules\").DocCommentHighlightRules;\r\n\r\nvar DotHighlightRules = function() {\r\n\r\n   var keywords = lang.arrayToMap(\r\n        (\"strict|node|edge|graph|digraph|subgraph\").split(\"|\")\r\n   );\r\n\r\n   var attributes = lang.arrayToMap(\r\n        (\"damping|k|url|area|arrowhead|arrowsize|arrowtail|aspect|bb|bgcolor|center|charset|clusterrank|color|colorscheme|comment|compound|concentrate|constraint|decorate|defaultdist|dim|dimen|dir|diredgeconstraints|distortion|dpi|edgeurl|edgehref|edgetarget|edgetooltip|epsilon|esep|fillcolor|fixedsize|fontcolor|fontname|fontnames|fontpath|fontsize|forcelabels|gradientangle|group|headurl|head_lp|headclip|headhref|headlabel|headport|headtarget|headtooltip|height|href|id|image|imagepath|imagescale|label|labelurl|label_scheme|labelangle|labeldistance|labelfloat|labelfontcolor|labelfontname|labelfontsize|labelhref|labeljust|labelloc|labeltarget|labeltooltip|landscape|layer|layerlistsep|layers|layerselect|layersep|layout|len|levels|levelsgap|lhead|lheight|lp|ltail|lwidth|margin|maxiter|mclimit|mindist|minlen|mode|model|mosek|nodesep|nojustify|normalize|nslimit|nslimit1|ordering|orientation|outputorder|overlap|overlap_scaling|pack|packmode|pad|page|pagedir|pencolor|penwidth|peripheries|pin|pos|quadtree|quantum|rank|rankdir|ranksep|ratio|rects|regular|remincross|repulsiveforce|resolution|root|rotate|rotation|samehead|sametail|samplepoints|scale|searchsize|sep|shape|shapefile|showboxes|sides|size|skew|smoothing|sortv|splines|start|style|stylesheet|tailurl|tail_lp|tailclip|tailhref|taillabel|tailport|tailtarget|tailtooltip|target|tooltip|truecolor|vertices|viewport|voro_margin|weight|width|xlabel|xlp|z\").split(\"|\")\r\n   );\r\n\r\n   this.$rules = {\r\n        \"start\" : [\r\n            {\r\n                token : \"comment\",\r\n                regex : /\\/\\/.*$/\r\n            }, {\r\n                token : \"comment\",\r\n                regex : /#.*$/\r\n            }, {\r\n                token : \"comment\", // multi line comment\r\n                merge : true,\r\n                regex : /\\/\\*/,\r\n                next : \"comment\"\r\n            }, {\r\n                token : \"string\",\r\n                regex : \"'(?=.)\",\r\n                next  : \"qstring\"\r\n            }, {\r\n                token : \"string\",\r\n                regex : '\"(?=.)',\r\n                next  : \"qqstring\"\r\n            }, {\r\n                token : \"constant.numeric\",\r\n                regex : /[+\\-]?\\d+(?:(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)?\\b/\r\n            }, {\r\n                token : \"keyword.operator\",\r\n                regex : /\\+|=|\\->/\r\n            }, {\r\n                token : \"punctuation.operator\",\r\n                regex : /,|;/\r\n            }, {\r\n                token : \"paren.lparen\",\r\n                regex : /[\\[{]/\r\n            }, {\r\n                token : \"paren.rparen\",\r\n                regex : /[\\]}]/\r\n            }, {\r\n                token: \"comment\",\r\n                regex: /^#!.*$/\r\n            }, {\r\n                token: function(value) {\r\n                    if (keywords.hasOwnProperty(value.toLowerCase())) {\r\n                        return \"keyword\";\r\n                    }\r\n                    else if (attributes.hasOwnProperty(value.toLowerCase())) {\r\n                        return \"variable\";\r\n                    }\r\n                    else {\r\n                        return \"text\";\r\n                    }\r\n                },\r\n                regex: \"\\\\-?[a-zA-Z_][a-zA-Z0-9_\\\\-]*\"\r\n           }\r\n        ],\r\n        \"comment\" : [\r\n            {\r\n                token : \"comment\", // closing comment\r\n                regex : \"\\\\*\\\\/\",\r\n                next : \"start\"\r\n            }, {\r\n                defaultToken : \"comment\"\r\n            }\r\n        ],\r\n        \"qqstring\" : [\r\n            {\r\n                token : \"string\",\r\n                regex : '[^\"\\\\\\\\]+',\r\n                merge : true\r\n            }, {\r\n                token : \"string\",\r\n                regex : \"\\\\\\\\$\",\r\n                next  : \"qqstring\",\r\n                merge : true\r\n            }, {\r\n                token : \"string\",\r\n                regex : '\"|$',\r\n                next  : \"start\",\r\n                merge : true\r\n            }\r\n        ],\r\n        \"qstring\" : [\r\n            {\r\n                token : \"string\",\r\n                regex : \"[^'\\\\\\\\]+\",\r\n                merge : true\r\n            }, {\r\n                token : \"string\",\r\n                regex : \"\\\\\\\\$\",\r\n                next  : \"qstring\",\r\n                merge : true\r\n            }, {\r\n                token : \"string\",\r\n                regex : \"'|$\",\r\n                next  : \"start\",\r\n                merge : true\r\n            }\r\n        ]\r\n   };\r\n};\r\n\r\noop.inherits(DotHighlightRules, TextHighlightRules);\r\n\r\nexports.DotHighlightRules = DotHighlightRules;\r\n\r\n});\r\n"]}