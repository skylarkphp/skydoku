{"version":3,"sources":["mode/asl_highlight_rules.js"],"names":["define","require","exports","module","oop","DocCommentHighlightRules","TextHighlightRules","ASLHighlightRules","keywordMapper","this","createKeywordMapper","keyword","keyword.operator","function.buildin","constant.language","storage.type","constant.character","invalid.deprecated","$rules","start","token","regex","getStartRule","next","comment","defaultToken","ignoredfield","directive","embedRules","getEndRule","inherits"],"mappings":";;;;;;;AA8BAA,OAAO,SAASC,EAASC,EAASC,GAC9B,aAEA,IAAIC,EAAMH,EAAQ,cACdI,EAA2BJ,EAAQ,iCAAiCI,yBACpEC,EAAqBL,EAAQ,0BAA0BK,mBAEvDC,EAAoB,WACpB,IAyEIC,EAAgBC,KAAKC,qBACrBC,QA1EW,sJA2EXC,mBAtEmB,wMAuEnBC,mBAjEmB,07BAkEnBC,oBAZmB,+CAanBC,eAnBe,2KAoBfC,qBApDQ,inDAqDRC,qBAXa,sBAYd,cAEHR,KAAKS,QACDC,QAEQC,MAAQ,UACRC,MAAQ,aAEZhB,EAAyBiB,aAAa,cAElCF,MAAQ,UACRC,MAAQ,SACRE,KAAO,WAEXlB,EAAyBiB,aAAa,cAElCF,MAAQ,UACRC,MAAQ,MACRE,KAAO,iBAEPH,MAAQ,WACRC,MAAQ,4BAERD,MAAQ,UACRC,MAAQ,2GACRE,KAAQ,cAERH,MAAQ,SACRC,MAAQ,uCAERD,MAAQ,qBACRC,MAAQ,uCAERD,MAAQ,mBACRC,MAAQ,wBAERD,MAAQ,mBACRC,MAAQ,uCAERD,MAAQZ,EACRa,MAAQ,gCAERD,MAAQ,mBACRC,MAAQ,wIAERD,MAAQ,SACRC,MAAQ,UAERD,MAAQ,SACRC,MAAQ,YAERD,MAAQ,OACRC,MAAQ,SAGhBG,UAEQJ,MAAQ,UACRC,MAAQ,SACRE,KAAO,UAEPE,aAAe,YAGvBC,eAEQN,MAAQ,UACRC,MAAQ,MACRE,KAAO,UAEPE,aAAe,YAGvBE,YAEQP,MAAQ,2BACRC,MAAQ,OAGRD,MAAQ,2BACRC,MAAQ,SAGRD,MAAQ,iBACRC,MAAQ,cACRE,KAAO,UAGPH,MAAQ,iBACRC,MAAQ,2CACRE,KAAO,UAGPH,MAAQ,iBACRC,MAAQ,yCACRE,KAAO,UAIPH,MAAQ,iBACRC,MAAQ,WACRE,KAAO,WAKnBd,KAAKmB,WAAWvB,EAA0B,QACpCA,EAAyBwB,WAAW,YAG9CzB,EAAI0B,SAASvB,EAAmBD,GAEhCJ,EAAQK,kBAAoBA","file":"../../mode/asl_highlight_rules.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2012, Ajax.org B.V.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\ndefine(function(require, exports, module) {\r\n    \"use strict\";\r\n\r\n    var oop = require(\"../lib/oop\");\r\n    var DocCommentHighlightRules = require(\"./doc_comment_highlight_rules\").DocCommentHighlightRules;\r\n    var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\r\n\r\n    var ASLHighlightRules = function() {\r\n        var keywords = (\r\n            \"Default|DefinitionBlock|Device|Method|Else|ElseIf|For|Function|If|Include|Method|Return|\" +\r\n            \"Scope|Switch|Case|While|Break|BreakPoint|Continue|NoOp|Wait\"\r\n        );\r\n\r\n        var keywordOperators = (\r\n            \"Add|And|Decrement|Divide|Increment|Index|LAnd|LEqual|LGreater|LGreaterEqual|\" +\r\n            \"LLess|LLessEqual|LNot|LNotEqual|LOr|Mod|Multiply|NAnd|NOr|Not|Or|RefOf|Revision|\" +\r\n            \"ShiftLeft|ShiftRight|Subtract|XOr|DerefOf\"\r\n        );\r\n\r\n        var buildinFunctions = (\r\n            \"AccessAs|Acquire|Alias|BankField|Buffer|Concatenate|ConcatenateResTemplate|\" +\r\n            \"CondRefOf|Connection|CopyObject|CreateBitField|CreateByteField|CreateDWordField|\" +\r\n            \"CreateField|CreateQWordField|CreateWordField|DataTableRegion|Debug|\" +\r\n            \"DMA|DWordIO|DWordMemory|DWordSpace|EisaId|EISAID|EndDependentFn|Event|ExtendedIO|\" +\r\n            \"ExtendedMemory|ExtendedSpace|External|Fatal|Field|FindSetLeftBit|FindSetRightBit|\" +\r\n            \"FixedDMA|FixedIO|Fprintf|FromBCD|GpioInt|GpioIo|I2CSerialBusV2|IndexField|\" +\r\n            \"Interrupt|IO|IRQ|IRQNoFlags|Load|LoadTable|Match|Memory32|Memory32Fixed|\" +\r\n            \"Mid|Mutex|Name|Notify|Offset|ObjectType|OperationRegion|Package|PowerResource|Printf|\" +\r\n            \"QWordIO|QWordMemory|QWordSpace|RawDataBuffer|Register|Release|Reset|ResourceTemplate|\" +\r\n            \"Signal|SizeOf|Sleep|SPISerialBusV2|Stall|StartDependentFn|StartDependentFnNoPri|\" +\r\n            \"Store|ThermalZone|Timer|ToBCD|ToBuffer|ToDecimalString|ToInteger|ToPLD|ToString|\" +\r\n            \"ToUUID|UARTSerialBusV2|Unicode|Unload|VendorLong|VendorShort|WordBusNumber|WordIO|\" +\r\n            \"WordSpace\"\r\n        );\r\n\r\n        var flags = (\r\n            \"AttribQuick|AttribSendReceive|AttribByte|AttribBytes|AttribRawBytes|\" +\r\n            \"AttribRawProcessBytes|AttribWord|AttribBlock|AttribProcessCall|AttribBlockProcessCall|\" +\r\n            \"AnyAcc|ByteAcc|WordAcc|DWordAcc|QWordAcc|BufferAcc|\" +\r\n            \"AddressRangeMemory|AddressRangeReserved|AddressRangeNVS|AddressRangeACPI|\" +\r\n            \"RegionSpaceKeyword|FFixedHW|PCC|\" +\r\n            \"AddressingMode7Bit|AddressingMode10Bit|\" +\r\n            \"DataBitsFive|DataBitsSix|DataBitsSeven|DataBitsEight|DataBitsNine|\" +\r\n            \"BusMaster|NotBusMaster|\" +\r\n            \"ClockPhaseFirst|ClockPhaseSecond|ClockPolarityLow|ClockPolarityHigh|\" +\r\n            \"SubDecode|PosDecode|\" +\r\n            \"BigEndianing|LittleEndian|\" +\r\n            \"FlowControlNone|FlowControlXon|FlowControlHardware|\" +\r\n            \"Edge|Level|ActiveHigh|ActiveLow|ActiveBoth|Decode16|Decode10|\" +\r\n            \"IoRestrictionNone|IoRestrictionInputOnly|IoRestrictionOutputOnly|\" +\r\n            \"IoRestrictionNoneAndPreserve|Lock|NoLock|MTR|MEQ|MLE|MLT|MGE|MGT|\" +\r\n            \"MaxFixed|MaxNotFixed|Cacheable|WriteCombining|Prefetchable|NonCacheable|\" +\r\n            \"MinFixed|MinNotFixed|\" +\r\n            \"ParityTypeNone|ParityTypeSpace|ParityTypeMark|ParityTypeOdd|ParityTypeEven|\" +\r\n            \"PullDefault|PullUp|PullDown|PullNone|PolarityHigh|PolarityLow|\" +\r\n            \"ISAOnlyRanges|NonISAOnlyRanges|EntireRange|ReadWrite|ReadOnly|\" +\r\n            \"UserDefRegionSpace|SystemIO|SystemMemory|PCI_Config|EmbeddedControl|\" +\r\n            \"SMBus|SystemCMOS|PciBarTarget|IPMI|GeneralPurposeIO|GenericSerialBus|\" +\r\n            \"ResourceConsumer|ResourceProducer|Serialized|NotSerialized|\" +\r\n            \"Shared|Exclusive|SharedAndWake|ExclusiveAndWake|ControllerInitiated|DeviceInitiated|\" +\r\n            \"StopBitsZero|StopBitsOne|StopBitsOnePlusHalf|StopBitsTwo|\" +\r\n            \"Width8Bit|Width16Bit|Width32Bit|Width64Bit|Width128Bit|Width256Bit|\" +\r\n            \"SparseTranslation|DenseTranslation|TypeTranslation|TypeStatic|\" +\r\n            \"Preserve|WriteAsOnes|WriteAsZeros|Transfer8|Transfer16|Transfer8_16|\" +\r\n            \"ThreeWireMode|FourWireMode\"\r\n        );\r\n\r\n        var storageTypes = (\r\n            \"UnknownObj|IntObj|StrObj|BuffObj|PkgObj|FieldUnitObj|DeviceObj|\" +\r\n            \"EventObj|MethodObj|MutexObj|OpRegionObj|PowerResObj|ProcessorObj|\" +\r\n            \"ThermalZoneObj|BuffFieldObj|DDBHandleObj\"\r\n        );\r\n\r\n        var buildinConstants = (\r\n            \"__FILE__|__PATH__|__LINE__|__DATE__|__IASL__\"\r\n        );\r\n\r\n        var deprecated = (\r\n            \"Memory24|Processor\"\r\n        );\r\n\r\n        var keywordMapper = this.createKeywordMapper({\r\n            \"keyword\": keywords,\r\n            \"keyword.operator\": keywordOperators,\r\n            \"function.buildin\": buildinFunctions,\r\n            \"constant.language\": buildinConstants,\r\n            \"storage.type\": storageTypes,\r\n            \"constant.character\": flags,\r\n            \"invalid.deprecated\": deprecated\r\n        }, \"identifier\");\r\n\r\n        this.$rules = {\r\n            \"start\" : [\r\n                {\r\n                    token : \"comment\",\r\n                    regex : \"\\\\/\\\\/.*$\"\r\n                },\r\n                DocCommentHighlightRules.getStartRule(\"doc-start\"),\r\n                {\r\n                    token : \"comment\", // multi line comment\r\n                    regex : \"\\\\/\\\\*\",\r\n                    next : \"comment\"\r\n                },\r\n                DocCommentHighlightRules.getStartRule(\"doc-start\"),\r\n                {\r\n                    token : \"comment\", // ignored fields / comments\r\n                    regex : \"\\\\\\[\",\r\n                    next : \"ignoredfield\"\r\n                }, {\r\n                    token : \"variable\",\r\n                    regex : \"\\\\Local[0-7]|\\\\Arg[0-6]\"\r\n                }, {\r\n                    token : \"keyword\", // pre-compiler directives\r\n                    regex : \"#\\\\s*(?:define|elif|else|endif|error|if|ifdef|ifndef|include|includebuffer|line|pragma|undef|warning)\\\\b\",\r\n                    next  : \"directive\"\r\n                }, {\r\n                    token : \"string\", // single line\r\n                    regex : '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'\r\n                }, {\r\n                    token : \"constant.character\", // single line\r\n                    regex : \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\r\n                }, {\r\n                    token : \"constant.numeric\", // hex\r\n                    regex : /0[xX][0-9a-fA-F]+\\b/\r\n                }, {\r\n                    token : \"constant.numeric\",\r\n                    regex : /(One(s)?|Zero|True|False|[0-9]+)\\b/\r\n                }, {\r\n                    token : keywordMapper,\r\n                    regex : \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\r\n                }, {\r\n                    token : \"keyword.operator\",\r\n                    regex : \"/|!|\\\\$|%|&|\\\\||\\\\*|\\\\-\\\\-|\\\\-|\\\\+\\\\+|\\\\+|~|==|=|!=|\\\\^|<=|>=|<<=|>>=|>>>=|<>|<|>|!|&&|\\\\|\\\\||\\\\?\\\\:|\\\\*=|%=|\\\\+=|\\\\-=|&=|\\\\^=|\\\\|=\"\r\n                }, {\r\n                    token : \"lparen\",\r\n                    regex : \"[[({]\"\r\n                }, {\r\n                    token : \"rparen\",\r\n                    regex : \"[\\\\])}]\"\r\n                }, {\r\n                    token : \"text\",\r\n                    regex : \"\\\\s+\"\r\n                }\r\n            ],\r\n            \"comment\" : [\r\n                {\r\n                    token : \"comment\", // closing comment\r\n                    regex : \"\\\\*\\\\/\",\r\n                    next : \"start\"\r\n                }, {\r\n                    defaultToken : \"comment\"\r\n                }\r\n            ],\r\n            \"ignoredfield\" : [\r\n                {\r\n                    token : \"comment\", // closing ignored fields / comments\r\n                    regex : \"\\\\\\]\",\r\n                    next : \"start\"\r\n                }, {\r\n                    defaultToken : \"comment\"\r\n                }\r\n            ],\r\n            \"directive\" : [\r\n                {\r\n                    token : \"constant.other.multiline\",\r\n                    regex : /\\\\/\r\n                },\r\n                {\r\n                    token : \"constant.other.multiline\",\r\n                    regex : /.*\\\\/\r\n                },\r\n                {\r\n                    token : \"constant.other\",\r\n                    regex : \"\\\\s*<.+?>*s\",\r\n                    next : \"start\"\r\n                },\r\n                {\r\n                    token : \"constant.other\", // single line\r\n                    regex : '\\\\s*[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]*s',\r\n                    next : \"start\"\r\n                },\r\n                {\r\n                    token : \"constant.other\", // single line\r\n                    regex : \"\\\\s*['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\",\r\n                    next : \"start\"\r\n                },\r\n                // \"\\\" implies multiline, while \"/\" implies comment\r\n                {\r\n                    token : \"constant.other\",\r\n                    regex : /[^\\\\\\/]+/,\r\n                    next : \"start\"\r\n                }\r\n            ]\r\n        };\r\n\r\n        this.embedRules(DocCommentHighlightRules, \"doc-\",\r\n            [ DocCommentHighlightRules.getEndRule(\"start\") ]);\r\n    };\r\n\r\n    oop.inherits(ASLHighlightRules, TextHighlightRules);\r\n\r\n    exports.ASLHighlightRules = ASLHighlightRules;\r\n});\r\n"]}