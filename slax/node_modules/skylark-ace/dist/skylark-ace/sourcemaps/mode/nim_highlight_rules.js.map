{"version":3,"sources":["mode/nim_highlight_rules.js"],"names":["define","require","exports","module","oop","TextHighlightRules","NimHighlightRules","keywordMapper","this","createKeywordMapper","variable","keyword","storage.type","support.function","constant.language","exponent","floatNumber","identifier","$rules","start","token","regex","next","include","defaultToken","push","blockComment","docBlockComment","math","methods","strings","normalizeRules","inherits"],"mappings":";;;;;;;AA8BAA,OAAO,SAAUC,QAASC,QAASC,QACnC,aAEA,IAAIC,EAAMH,QAAQ,cACdI,EAAqBJ,QAAQ,0BAA0BI,mBACvDC,EAAoB,WAEpB,IAAIC,EAAgBC,KAAKC,qBACrBC,SAAY,gBACZC,QAAW,sbACXC,eAAgB,mOAChBC,mBAAoB,wFACpBC,oBAAqB,kBACtB,cAOCC,EAAW,4BACXC,EAAc,wCAA0CD,EAAW,MAAQA,EAAW,IAGtFE,EAAa,wBACjBT,KAAKU,QACDC,QACIC,OAAQ,aAAc,mBAAoB,oBAC1CC,MAAO,IAAMJ,EAAa,aAAeA,EAAa,aAEtDG,MAAO,aACPC,MAAO,WACPC,OACIF,MAAO,aACPC,MAAO,eACPC,KAAM,UAENC,QAAS,YAETH,MAAO,aACPC,MAAOJ,IAEPG,MAAO,cACPC,MAAO,QAEPD,MAAO,mBACPC,MAAO,UAEPD,MAAO,aACPC,MAAO,SAEPD,MAAO,aACPC,MAAO,UAEPE,QAAS,SAETA,QAAS,YAETC,aAAc,WAGlBJ,MAAO,oBACPC,MAAO,YACPI,KAAM,oBAENL,MAAO,gBACPC,MAAO,WACPI,KAAM,iBAENL,MAAO,cACPC,MAAO,UAEPD,MAAO,UACPC,MAAO,SAEPE,QAAS,YAETH,MAAO,SACPC,MAAO,mGAEPE,QAAS,YAETH,MAAOb,EACPc,MAAO,6BAEPD,OAAQ,mBAAoB,OAAQ,gBACpCC,MAAO,eAAiBJ,EAAa,qCAErCG,MAAO,aACPC,MAAO,6BAEPD,MAAO,aACPC,MAAO,wBAEPD,MAAO,mBACPC,MAAO,6BAEPD,MAAO,cACPC,MAAO,SAEPE,QAAS,SAEbG,eACIL,MAAO,OACPD,MAAO,YAEPC,MAAO,WACPD,MAAO,gBACPK,KAAM,iBAENJ,MAAO,KACPD,MAAO,cACPE,KAAM,QAENE,aAAc,YAElBG,kBACIN,MAAO,QACPD,MAAO,gBAEPC,MAAO,YACPD,MAAO,oBACPK,KAAM,oBAENJ,MAAO,MACPD,MAAO,kBACPE,KAAM,QAENE,aAAc,gBAElBI,OACIR,MAAO,iBACPC,MA9Ga,kQAgHbD,MAAO,iBACPC,MAAOL,IAEPI,MAAO,mBACPC,MAvHQ,kIAyHZQ,UACIT,MAAO,mBACPC,MAAO,kBAEXS,UACIV,MAAO,SACPC,MAAO,OAASJ,EAAa,QAC7BQ,OACIL,MAAO,SACPC,MAAO,MACPC,KAAM,QAENE,aAAc,aAGlBJ,MAAO,SACPC,MAAO,MAAQJ,EAAa,SAC5BQ,OACIL,MAAO,SACPC,MAAO,MACPC,KAAM,QAENE,aAAc,aAGlBJ,MAAO,SACPC,MAAO,IACPI,OACIL,MAAO,SACPC,MAAO,MACPC,KAAM,QAENF,MAAO,2BACPC,MAtJO,2FAwJPG,aAAc,cAI1BhB,KAAKuB,kBAIT3B,EAAI4B,SAAS1B,EAAmBD,GAEhCH,QAAQI,kBAAoBA","file":"../../mode/nim_highlight_rules.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2012, Ajax.org B.V.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\ndefine(function (require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\r\nvar NimHighlightRules = function () {\r\n\r\n    var keywordMapper = this.createKeywordMapper({\r\n        \"variable\": \"var|let|const\",\r\n        \"keyword\": \"assert|parallel|spawn|export|include|from|template|mixin|bind|import|concept|raise|defer|try|finally|except|converter|proc|func|macro|method|and|or|not|xor|shl|shr|div|mod|in|notin|is|isnot|of|static|if|elif|else|case|of|discard|when|return|yield|block|break|while|echo|continue|asm|using|cast|addr|unsafeAddr|type|ref|ptr|do|declared|defined|definedInScope|compiles|sizeOf|is|shallowCopy|getAst|astToStr|spawn|procCall|for|iterator|as\",\r\n        \"storage.type\": \"newSeq|int|int8|int16|int32|int64|uint|uint8|uint16|uint32|uint64|float|char|bool|string|set|pointer|float32|float64|enum|object|cstring|array|seq|openArray|varargs|UncheckedArray|tuple|set|distinct|void|auto|openarray|range\",\r\n        \"support.function\": \"lock|ze|toU8|toU16|toU32|ord|low|len|high|add|pop|contains|card|incl|excl|dealloc|inc\",\r\n        \"constant.language\": \"nil|true|false\"\r\n    }, \"identifier\");\r\n\r\n    var hexNumber = \"(?:0[xX][\\\\dA-Fa-f][\\\\dA-Fa-f_]*)\";\r\n    var decNumber = \"(?:[0-9][\\\\d_]*)\";\r\n    var octNumber = \"(?:0o[0-7][0-7_]*)\";\r\n    var binNumber = \"(?:0[bB][01][01_]*)\";\r\n    var intNumber = \"(?:\" + hexNumber + \"|\" + decNumber + \"|\" + octNumber + \"|\" + binNumber + \")(?:'?[iIuU](?:8|16|32|64)|u)?\\\\b\";\r\n    var exponent = \"(?:[eE][+-]?[\\\\d][\\\\d_]*)\";\r\n    var floatNumber = \"(?:[\\\\d][\\\\d_]*(?:[.][\\\\d](?:[\\\\d_]*)\" + exponent + \"?)|\" + exponent + \")\";\r\n    var floatNumberExt = \"(?:\" + hexNumber + \"(?:'(?:(?:[fF](?:32|64)?)|[dD])))|(?:\" + floatNumber + \"|\" + decNumber + \"|\" + octNumber + \"|\" + binNumber + \")(?:'(?:(?:[fF](?:32|64)?)|[dD]))\";\r\n    var stringEscape = \"\\\\\\\\([abeprcnlftv\\\\\\\"']|x[0-9A-Fa-f]{2}|[0-2][0-9]{2}|u[0-9A-Fa-f]{8}|u[0-9A-Fa-f]{4})\";\r\n    var identifier = '[a-zA-Z][a-zA-Z0-9_]*';\r\n    this.$rules = {\r\n        \"start\": [{\r\n            token: [\"identifier\", \"keyword.operator\", \"support.function\"],\r\n            regex: \"(\" + identifier + \")([.]{1})(\" + identifier + \")(?=\\\\()\"\r\n        }, {//pragmas\r\n            token: \"paren.lpar\",\r\n            regex: \"(\\\\{\\\\.)\",\r\n            next: [{\r\n                token: \"paren.rpar\",\r\n                regex: '(\\\\.\\\\}|\\\\})',\r\n                next: \"start\"\r\n            }, {\r\n                include: \"methods\"\r\n            }, {\r\n                token: \"identifier\",\r\n                regex: identifier\r\n            }, {\r\n                token: \"punctuation\",\r\n                regex: /[,]/\r\n            }, {\r\n                token: \"keyword.operator\",\r\n                regex: /[=:.]/\r\n            }, {\r\n                token: \"paren.lpar\",\r\n                regex: /[[(]/\r\n            }, {\r\n                token: \"paren.rpar\",\r\n                regex: /[\\])]/\r\n            }, {\r\n                include: \"math\"\r\n            }, {\r\n                include: \"strings\"\r\n            }, {\r\n                defaultToken: \"text\"\r\n            }]\r\n        }, {\r\n            token: \"comment.doc.start\",\r\n            regex: /##\\[(?!])/,\r\n            push: \"docBlockComment\"\r\n        }, {\r\n            token: \"comment.start\",\r\n            regex: /#\\[(?!])/,\r\n            push: \"blockComment\"\r\n        }, {\r\n            token: \"comment.doc\",\r\n            regex: '##.*$'\r\n        }, {\r\n            token: \"comment\",\r\n            regex: '#.*$'\r\n        }, {\r\n            include: \"strings\"\r\n        }, {// character\r\n            token: \"string\",\r\n            regex: \"'(?:\\\\\\\\(?:[abercnlftv]|x[0-9A-Fa-f]{2}|[0-2][0-9]{2}|u[0-9A-Fa-f]{8}|u[0-9A-Fa-f]{4})|.{1})?'\"\r\n        }, {\r\n            include: \"methods\"\r\n        }, {\r\n            token: keywordMapper,\r\n            regex: \"[a-zA-Z][a-zA-Z0-9_]*\\\\b\"\r\n        }, {\r\n            token: [\"keyword.operator\", \"text\", \"storage.type\"],\r\n            regex: \"([:])(\\\\s+)(\" + identifier + \")(?=$|\\\\)|\\\\[|,|\\\\s+=|;|\\\\s+\\\\{)\"\r\n        }, {\r\n            token: \"paren.lpar\",\r\n            regex: /\\[\\.|{\\||\\(\\.|\\[:|[[({`]/\r\n        }, {\r\n            token: \"paren.rpar\",\r\n            regex: /\\.\\)|\\|}|\\.]|[\\])}]/\r\n        }, {\r\n            token: \"keyword.operator\",\r\n            regex: /[=+\\-*\\/<>@$~&%|!?^.:\\\\]/\r\n        }, {\r\n            token: \"punctuation\",\r\n            regex: /[,;]/\r\n        }, {\r\n            include: \"math\"\r\n        }],\r\n        blockComment: [{\r\n            regex: /#\\[]/,\r\n            token: \"comment\"\r\n        }, {\r\n            regex: /#\\[(?!])/,\r\n            token: \"comment.start\",\r\n            push: \"blockComment\"\r\n        }, {\r\n            regex: /]#/,\r\n            token: \"comment.end\",\r\n            next: \"pop\"\r\n        }, {\r\n            defaultToken: \"comment\"\r\n        }],\r\n        docBlockComment: [{\r\n            regex: /##\\[]/,\r\n            token: \"comment.doc\"\r\n        }, {\r\n            regex: /##\\[(?!])/,\r\n            token: \"comment.doc.start\",\r\n            push: \"docBlockComment\"\r\n        }, {\r\n            regex: /]##/,\r\n            token: \"comment.doc.end\",\r\n            next: \"pop\"\r\n        }, {\r\n            defaultToken: \"comment.doc\"\r\n        }],\r\n        math: [{\r\n            token: \"constant.float\",\r\n            regex: floatNumberExt\r\n        }, {\r\n            token: \"constant.float\",\r\n            regex: floatNumber\r\n        }, {\r\n            token: \"constant.integer\",\r\n            regex: intNumber\r\n        }],\r\n        methods: [{\r\n            token: \"support.function\",\r\n            regex: \"(\\\\w+)(?=\\\\()\"\r\n        }],\r\n        strings: [{\r\n            token: \"string\",\r\n            regex: '(\\\\b' + identifier + ')?\"\"\"',\r\n            push: [{\r\n                token: \"string\",\r\n                regex: '\"\"\"',\r\n                next: \"pop\"\r\n            }, {\r\n                defaultToken: \"string\"\r\n            }]\r\n        }, {\r\n            token: \"string\",\r\n            regex: \"\\\\b\" + identifier + '\"(?=.)',\r\n            push: [{\r\n                token: \"string\",\r\n                regex: '\"|$',\r\n                next: \"pop\"\r\n            }, {\r\n                defaultToken: \"string\"\r\n            }]\r\n        }, {\r\n            token: \"string\",\r\n            regex: '\"',\r\n            push: [{\r\n                token: \"string\",\r\n                regex: '\"|$',\r\n                next: \"pop\"\r\n            }, {\r\n                token: \"constant.language.escape\",\r\n                regex: stringEscape\r\n            }, {\r\n                defaultToken: \"string\"\r\n            }]\r\n        }]\r\n    };\r\n    this.normalizeRules();\r\n};\r\n\r\n\r\noop.inherits(NimHighlightRules, TextHighlightRules);\r\n\r\nexports.NimHighlightRules = NimHighlightRules;\r\n});\r\n"]}