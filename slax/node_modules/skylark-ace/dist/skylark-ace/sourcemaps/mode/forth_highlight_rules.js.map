{"version":3,"sources":["mode/forth_highlight_rules.js"],"names":["define","require","exports","module","oop","TextHighlightRules","ForthHighlightRules","this","$rules","start","include","#comment","token","regex","comment","push","next","defaultToken","caseInsensitive","#constant","#forth","#storage","#string","#variable","#word","#word-def","normalizeRules","metaData","fileTypes","foldingStartMarker","foldingStopMarker","keyEquivalent","name","scopeName","inherits"],"mappings":";;;;;;;AAoCAA,OAAO,SAASC,QAASC,QAASC,QAClC,aAEA,IAAIC,EAAMH,QAAQ,cACdI,EAAqBJ,QAAQ,0BAA0BI,mBAEvDC,EAAsB,WAItBC,KAAKC,QAAWC,QAAWC,QAAS,WAClCC,aACKC,MAAO,iCACPC,MAAO,oBACPC,QAAS,6BACTF,MAAO,+BACPC,MAAO,0BACPC,QAAS,sBACTF,MAAO,iCACPC,MAAO,wBACPC,QAAS,wBACTF,MAAO,sBACPC,MAAO,2BACPE,OACKH,MAAO,sBACPC,MAAO,2BACPG,KAAM,QACNC,aAAc,wBACnBH,QAAS,kCACTF,MAAO,oCACPC,MAAO,YACPK,iBAAiB,EACjBH,OACKH,MAAO,oCACPC,MAAO,eACPK,iBAAiB,EACjBF,KAAM,QACNC,aAAc,sCACnBH,QAAS,sCACTF,MAAO,iCACPC,MAAO,4BACPC,QAAS,sBACdK,cACKP,MAAO,0BACPC,MAAO,8DACPK,iBAAiB,IACjBN,MAAO,yBACPC,MAAO,+EACPD,MAAO,2BACPC,MAAO,sDACZO,WACKV,QAAS,cACTA,QAAS,aACTA,QAAS,YACTA,QAAS,UACTA,QAAS,cACTA,QAAS,aACTA,QAAS,cACdW,aACKT,MAAO,qBACPC,MAAO,8JACPK,iBAAiB,IACtBI,YACKV,MAAO,6BACPC,MAAO,kDACPK,iBAAiB,IACjBN,MAAO,wBACPC,MAAO,gDACPK,iBAAiB,IACtBK,cACKX,MAAO,0BACPC,MAAO,gBACPK,iBAAiB,IACtBM,UACKZ,MAAO,kCACPC,MAAO,qIACPK,iBAAiB,IACjBN,MAAO,gCACPC,MAAO,uEACPK,iBAAiB,IACjBN,MAAO,qCACPC,MAAO,8OACPK,iBAAiB,IACjBN,MAAO,mCACPC,MAAO,mPACPK,iBAAiB,IACjBN,MAAO,oCACPC,MAAO,oHACPK,iBAAiB,IACjBN,MAAO,8BACPC,MAAO,6CACPK,iBAAiB,IACtBO,cACKb,OACG,mCACA,mCACA,mBACA,8BACHC,MAAO,0CACPK,iBAAiB,EACjBH,OACKH,MAAO,mCACPC,MAAO,aACPK,iBAAiB,EACjBF,KAAM,QACNN,QAAS,cACTA,QAAS,aACTA,QAAS,YACTA,QAAS,UACTA,QAAS,cACTA,QAAS,aACTO,aAAc,wBAE1BV,KAAKmB,kBAGTpB,EAAoBqB,UAAaC,WAAa,MAAO,KAAM,MAAO,MAAO,OACnEC,mBAAoB,mBACpBC,kBAAmB,mBACnBC,cAAe,MACfC,KAAM,QACNC,UAAW,gBAGjB7B,EAAI8B,SAAS5B,EAAqBD,GAElCH,QAAQI,oBAAsBA","file":"../../mode/forth_highlight_rules.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2012, Ajax.org B.V.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\n/* This file was autogenerated from https://raw.github.com/vze26m98/Forth.tmbundle/master/Syntaxes/Forth.tmLanguage (uuid: ) */\r\n/****************************************************************************************\r\n * IT MIGHT NOT BE PERFECT ...But it's a good start from an existing *.tmlanguage file. *\r\n * fileTypes                                                                            *\r\n ****************************************************************************************/\r\n\r\ndefine(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\r\n\r\nvar ForthHighlightRules = function() {\r\n    // regexp must not have capturing parentheses. Use (?:) instead.\r\n    // regexps are ordered -> the first match is used\r\n\r\n    this.$rules = { start: [ { include: '#forth' } ],\r\n      '#comment':\r\n       [ { token: 'comment.line.double-dash.forth',\r\n           regex: '(?:^|\\\\s)--\\\\s.*$',\r\n           comment: 'line comments for iForth' },\r\n         { token: 'comment.line.backslash.forth',\r\n           regex: '(?:^|\\\\s)\\\\\\\\[\\\\s\\\\S]*$',\r\n           comment: 'ANSI line comment' },\r\n         { token: 'comment.line.backslash-g.forth',\r\n           regex: '(?:^|\\\\s)\\\\\\\\[Gg] .*$',\r\n           comment: 'gForth line comment' },\r\n         { token: 'comment.block.forth',\r\n           regex: '(?:^|\\\\s)\\\\(\\\\*(?=\\\\s|$)',\r\n           push:\r\n            [ { token: 'comment.block.forth',\r\n                regex: '(?:^|\\\\s)\\\\*\\\\)(?=\\\\s|$)',\r\n                next: 'pop' },\r\n              { defaultToken: 'comment.block.forth' } ],\r\n           comment: 'multiline comments for iForth' },\r\n         { token: 'comment.block.documentation.forth',\r\n           regex: '\\\\bDOC\\\\b',\r\n           caseInsensitive: true,\r\n           push:\r\n            [ { token: 'comment.block.documentation.forth',\r\n                regex: '\\\\bENDDOC\\\\b',\r\n                caseInsensitive: true,\r\n                next: 'pop' },\r\n              { defaultToken: 'comment.block.documentation.forth' } ],\r\n           comment: 'documentation comments for iForth' },\r\n         { token: 'comment.line.parentheses.forth',\r\n           regex: '(?:^|\\\\s)\\\\.?\\\\( [^)]*\\\\)',\r\n           comment: 'ANSI line comment' } ],\r\n      '#constant':\r\n       [ { token: 'constant.language.forth',\r\n           regex: '(?:^|\\\\s)(?:TRUE|FALSE|BL|PI|CELL|C/L|R/O|W/O|R/W)(?=\\\\s|$)',\r\n           caseInsensitive: true},\r\n         { token: 'constant.numeric.forth',\r\n           regex: '(?:^|\\\\s)[$#%]?[-+]?[0-9]+(?:\\\\.[0-9]*e-?[0-9]+|\\\\.?[0-9a-fA-F]*)(?=\\\\s|$)'},\r\n         { token: 'constant.character.forth',\r\n           regex: '(?:^|\\\\s)(?:[&^]\\\\S|(?:\"|\\')\\\\S(?:\"|\\'))(?=\\\\s|$)'}],\r\n      '#forth':\r\n       [ { include: '#constant' },\r\n         { include: '#comment' },\r\n         { include: '#string' },\r\n         { include: '#word' },\r\n         { include: '#variable' },\r\n         { include: '#storage' },\r\n         { include: '#word-def' } ],\r\n      '#storage':\r\n       [ { token: 'storage.type.forth',\r\n           regex: '(?:^|\\\\s)(?:2CONSTANT|2VARIABLE|ALIAS|CONSTANT|CREATE-INTERPRET/COMPILE[:]?|CREATE|DEFER|FCONSTANT|FIELD|FVARIABLE|USER|VALUE|VARIABLE|VOCABULARY)(?=\\\\s|$)',\r\n           caseInsensitive: true}],\r\n      '#string':\r\n       [ { token: 'string.quoted.double.forth',\r\n           regex: '(ABORT\" |BREAK\" |\\\\.\" |C\" |0\"|S\\\\\\\\?\" )([^\"]+\")',\r\n           caseInsensitive: true},\r\n         { token: 'string.unquoted.forth',\r\n           regex: '(?:INCLUDE|NEEDS|REQUIRE|USE)[ ]\\\\S+(?=\\\\s|$)',\r\n           caseInsensitive: true}],\r\n      '#variable':\r\n       [ { token: 'variable.language.forth',\r\n           regex: '\\\\b(?:I|J)\\\\b',\r\n           caseInsensitive: true } ],\r\n      '#word':\r\n       [ { token: 'keyword.control.immediate.forth',\r\n           regex: '(?:^|\\\\s)\\\\[(?:\\\\?DO|\\\\+LOOP|AGAIN|BEGIN|DEFINED|DO|ELSE|ENDIF|FOR|IF|IFDEF|IFUNDEF|LOOP|NEXT|REPEAT|THEN|UNTIL|WHILE)\\\\](?=\\\\s|$)',\r\n           caseInsensitive: true},\r\n         { token: 'keyword.other.immediate.forth',\r\n           regex: '(?:^|\\\\s)(?:COMPILE-ONLY|IMMEDIATE|IS|RESTRICT|TO|WHAT\\'S|])(?=\\\\s|$)',\r\n           caseInsensitive: true},\r\n         { token: 'keyword.control.compile-only.forth',\r\n           regex: '(?:^|\\\\s)(?:-DO|\\\\-LOOP|\\\\?DO|\\\\?LEAVE|\\\\+DO|\\\\+LOOP|ABORT\\\\\"|AGAIN|AHEAD|BEGIN|CASE|DO|ELSE|ENDCASE|ENDIF|ENDOF|ENDTRY\\\\-IFERROR|ENDTRY|FOR|IF|IFERROR|LEAVE|LOOP|NEXT|RECOVER|REPEAT|RESTORE|THEN|TRY|U\\\\-DO|U\\\\+DO|UNTIL|WHILE)(?=\\\\s|$)',\r\n           caseInsensitive: true},\r\n         { token: 'keyword.other.compile-only.forth',\r\n           regex: '(?:^|\\\\s)(?:\\\\?DUP-0=-IF|\\\\?DUP-IF|\\\\)|\\\\[|\\\\[\\'\\\\]|\\\\[CHAR\\\\]|\\\\[COMPILE\\\\]|\\\\[IS\\\\]|\\\\[TO\\\\]|<COMPILATION|<INTERPRETATION|ASSERT\\\\(|ASSERT0\\\\(|ASSERT1\\\\(|ASSERT2\\\\(|ASSERT3\\\\(|COMPILATION>|DEFERS|DOES>|INTERPRETATION>|OF|POSTPONE)(?=\\\\s|$)',\r\n           caseInsensitive: true},\r\n         { token: 'keyword.other.non-immediate.forth',\r\n           regex: '(?:^|\\\\s)(?:\\'|<IS>|<TO>|CHAR|END-STRUCT|INCLUDE[D]?|LOAD|NEEDS|REQUIRE[D]?|REVISION|SEE|STRUCT|THRU|USE)(?=\\\\s|$)',\r\n           caseInsensitive: true},\r\n         { token: 'keyword.other.warning.forth',\r\n           regex: '(?:^|\\\\s)(?:~~|BREAK:|BREAK\"|DBG)(?=\\\\s|$)',\r\n           caseInsensitive: true}],\r\n      '#word-def':\r\n       [ { token:\r\n            [ 'keyword.other.compile-only.forth',\r\n              'keyword.other.compile-only.forth',\r\n              'meta.block.forth',\r\n              'entity.name.function.forth' ],\r\n           regex: '(:NONAME)|(^:|\\\\s:)(\\\\s)(\\\\S+)(?=\\\\s|$)',\r\n           caseInsensitive: true,\r\n           push:\r\n            [ { token: 'keyword.other.compile-only.forth',\r\n                regex: ';(?:CODE)?',\r\n                caseInsensitive: true,\r\n                next: 'pop' },\r\n              { include: '#constant' },\r\n              { include: '#comment' },\r\n              { include: '#string' },\r\n              { include: '#word' },\r\n              { include: '#variable' },\r\n              { include: '#storage' },\r\n              { defaultToken: 'meta.block.forth' } ] } ] };\r\n    \r\n    this.normalizeRules();\r\n};\r\n\r\nForthHighlightRules.metaData = { fileTypes: [ 'frt', 'fs', 'ldr', 'fth', '4th' ],\r\n      foldingStartMarker: '/\\\\*\\\\*|\\\\{\\\\s*$',\r\n      foldingStopMarker: '\\\\*\\\\*/|^\\\\s*\\\\}',\r\n      keyEquivalent: '^~F',\r\n      name: 'Forth',\r\n      scopeName: 'source.forth' };\r\n\r\n\r\noop.inherits(ForthHighlightRules, TextHighlightRules);\r\n\r\nexports.ForthHighlightRules = ForthHighlightRules;\r\n});"]}