{"version":3,"sources":["mode/maze_highlight_rules.js"],"names":["define","require","exports","module","oop","TextHighlightRules","MazeHighlightRules","this","$rules","start","token","regex","comment","normalizeRules","metaData","fileTypes","name","scopeName","inherits"],"mappings":";;;;;;;AA+BAA,OAAO,SAASC,QAASC,QAASC,QAClC,aAEA,IAAIC,EAAMH,QAAQ,cACdI,EAAqBJ,QAAQ,0BAA0BI,mBAEvDC,EAAqB,WAIrBC,KAAKC,QACDC,QACIC,MAAO,kBACPC,MAAO,QACPC,QAAS,SAETF,MAAO,kBACPC,MAAO,OACPC,QAAS,SAETF,MAAO,kBACPC,MAAO,KACPC,QAAS,aAETF,MAAO,kBACPC,MAAO,kBACPC,QAAS,WAETF,MAAO,mBACPC,MAAO,WACPC,QAAS,UAETF,MAAO,kBACPC,MAAO,OACPC,QAAS,UAETF,MAAO,kBACPC,MAAO,OACPC,QAAS,SAETF,MAAO,mBACPC,MAAO,KACPC,QAAS,QAETF,MAAO,mBACPC,MAAO,MACPC,QAAS,WAETF,MAAO,mBACPC,MAAO,KACPC,QAAS,OAETF,MAAO,kBACPC,MAAO,KACPC,QAAS,YAETF,MAAO,oBACPC,MAAO,gBACPC,QAAS,cAETF,OACI,uBACA,gBACA,mBACA,gBACA,mBACA,mBACA,mBACA,gBACA,mBACA,mBACA,uBACA,wBAEJC,MAAO,kHACPC,QAAS,wBAETF,OACI,uBACA,gBACA,kBACA,gBACA,mBACA,gBACA,mBACA,mBACA,kBACA,gBACA,kBACA,gBACA,oBACA,gBACA,kBACA,gBACA,qBAEJC,MAAO,yKACPC,QAAS,sBAETF,MAAO,uBACPC,MAAO,sBACPC,QAAS,kBAETF,MAAO,4BACPC,MAAO,WACPC,QAAS,aAIjBL,KAAKM,kBAGTP,EAAmBQ,UACfC,WAAY,MACZC,KAAM,OACNC,UAAW,eAIfb,EAAIc,SAASZ,EAAoBD,GAEjCH,QAAQI,mBAAqBA","file":"../../mode/maze_highlight_rules.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2012, Ajax.org B.V.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\n\r\ndefine(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\r\n\r\nvar MazeHighlightRules = function() {\r\n    // regexp must not have capturing parentheses. Use (?:) instead.\r\n    // regexps are ordered -> the first match is used\r\n\r\n    this.$rules = {\r\n        start: [{\r\n            token: \"keyword.control\",\r\n            regex: /##|``/,\r\n            comment: \"Wall\"\r\n        }, {\r\n            token: \"entity.name.tag\",\r\n            regex: /\\.\\./,\r\n            comment: \"Path\"\r\n        }, {\r\n            token: \"keyword.control\",\r\n            regex: /<>/,\r\n            comment: \"Splitter\"\r\n        }, {\r\n            token: \"entity.name.tag\",\r\n            regex: /\\*[\\*A-Za-z0-9]/,\r\n            comment: \"Signal\"\r\n        }, {\r\n            token: \"constant.numeric\",\r\n            regex: /[0-9]{2}/,\r\n            comment: \"Pause\"\r\n        }, {\r\n            token: \"keyword.control\",\r\n            regex: /\\^\\^/,\r\n            comment: \"Start\"\r\n        }, {\r\n            token: \"keyword.control\",\r\n            regex: /\\(\\)/,\r\n            comment: \"Hole\"\r\n        }, {\r\n            token: \"support.function\",\r\n            regex: />>/,\r\n            comment: \"Out\"\r\n        }, {\r\n            token: \"support.function\",\r\n            regex: />\\//,\r\n            comment: \"Ln Out\"\r\n        }, {\r\n            token: \"support.function\",\r\n            regex: /<</,\r\n            comment: \"In\"\r\n        }, {\r\n            token: \"keyword.control\",\r\n            regex: /--/,\r\n            comment: \"One use\"\r\n        }, {\r\n            token: \"constant.language\",\r\n            regex: /%[LRUDNlrudn]/,\r\n            comment: \"Direction\"\r\n        }, {\r\n            token: [\r\n                \"entity.name.function\",\r\n                \"keyword.other\",\r\n                \"keyword.operator\",\r\n                \"keyword.other\",\r\n                \"keyword.operator\",\r\n                \"constant.numeric\",\r\n                \"keyword.operator\",\r\n                \"keyword.other\",\r\n                \"keyword.operator\",\r\n                \"constant.numeric\",\r\n                \"string.quoted.double\",\r\n                \"string.quoted.single\"\r\n            ],\r\n            regex: /([A-Za-z][A-Za-z0-9])( *-> *)(?:([-+*\\/]=)( *)((?:-)?)([0-9]+)|(=)( *)(?:((?:-)?)([0-9]+)|(\"[^\"]*\")|('[^']*')))/,\r\n            comment: \"Assignment function\"\r\n        }, {\r\n            token: [\r\n                \"entity.name.function\",\r\n                \"keyword.other\",\r\n                \"keyword.control\",\r\n                \"keyword.other\",\r\n                \"keyword.operator\",\r\n                \"keyword.other\",\r\n                \"keyword.operator\",\r\n                \"constant.numeric\",\r\n                \"entity.name.tag\",\r\n                \"keyword.other\",\r\n                \"keyword.control\",\r\n                \"keyword.other\",\r\n                \"constant.language\",\r\n                \"keyword.other\",\r\n                \"keyword.control\",\r\n                \"keyword.other\",\r\n                \"constant.language\"\r\n            ],\r\n            regex: /([A-Za-z][A-Za-z0-9])( *-> *)(IF|if)( *)(?:([<>]=?|==)( *)((?:-)?)([0-9]+)|(\\*[\\*A-Za-z0-9]))( *)(THEN|then)( *)(%[LRUDNlrudn])(?:( *)(ELSE|else)( *)(%[LRUDNlrudn]))?/,\r\n            comment: \"Equality Function\"\r\n        }, {\r\n            token: \"entity.name.function\",\r\n            regex: /[A-Za-z][A-Za-z0-9]/,\r\n            comment: \"Function cell\"\r\n        }, {\r\n            token: \"comment.line.double-slash\",\r\n            regex: / *\\/\\/.*/,\r\n            comment: \"Comment\"\r\n        }]\r\n    };\r\n\r\n    this.normalizeRules();\r\n};\r\n\r\nMazeHighlightRules.metaData = {\r\n    fileTypes: [\"mz\"],\r\n    name: \"Maze\",\r\n    scopeName: \"source.maze\"\r\n};\r\n\r\n\r\noop.inherits(MazeHighlightRules, TextHighlightRules);\r\n\r\nexports.MazeHighlightRules = MazeHighlightRules;\r\n});\r\n"]}