{"version":3,"sources":["mode/xml_worker.js"],"names":["define","require","exports","module","oop","Mirror","DOMParser","Worker","sender","call","this","setTimeout","context","inherits","setOptions","options","onUpdate","value","doc","getValue","parser","errors","errorHandler","fatalError","fullMsg","errorMsg","locator","push","row","lineNumber","column","columnNumber","text","type","error","warning","parseFromString","emit","prototype"],"mappings":";;;;;;;AA8BAA,OAAO,SAASC,QAASC,QAASC,QAClC,aAEA,IAAIC,EAAMH,QAAQ,cAEdI,GADOJ,QAAQ,eACNA,QAAQ,oBAAoBI,QACrCC,EAAYL,QAAQ,oBAAoBK,UAExCC,EAASL,QAAQK,OAAS,SAASC,GACnCH,EAAOI,KAAKC,KAAMF,GAClBE,KAAKC,WAAW,KAChBD,KAAKE,QAAU,MAGnBR,EAAIS,SAASN,EAAQF,GAErB,WAEIK,KAAKI,WAAa,SAASC,GACvBL,KAAKE,QAAUG,EAAQH,SAG3BF,KAAKM,SAAW,WACZ,IAAIC,EAAQP,KAAKQ,IAAIC,WACrB,GAAKF,EAAL,CAEA,IAAIG,EAAS,IAAId,EACbe,KACJD,EAAOL,QAAQO,cACXC,WAAY,SAASC,EAASC,EAAUC,GACpCL,EAAOM,MACHC,IAAKF,EAAQG,WACbC,OAAQJ,EAAQK,aAChBC,KAAMP,EACNQ,KAAM,WAGdC,MAAO,SAASV,EAASC,EAAUC,GAC/BL,EAAOM,MACHC,IAAKF,EAAQG,WACbC,OAAQJ,EAAQK,aAChBC,KAAMP,EACNQ,KAAM,WAGdE,QAAS,SAASX,EAASC,EAAUC,GACjCL,EAAOM,MACHC,IAAKF,EAAQG,WACbC,OAAQJ,EAAQK,aAChBC,KAAMP,EACNQ,KAAM,cAKlBb,EAAOgB,gBAAgBnB,GACvBP,KAAKF,OAAO6B,KAAK,QAAShB,MAG/BZ,KAAKF,EAAO+B","file":"../../mode/xml_worker.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2010, Ajax.org B.V.\r\n * All rights reserved.\r\n * \r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n * \r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\ndefine(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar lang = require(\"../lib/lang\");\r\nvar Mirror = require(\"../worker/mirror\").Mirror;\r\nvar DOMParser = require(\"./xml/dom-parser\").DOMParser;\r\n\r\nvar Worker = exports.Worker = function(sender) {\r\n    Mirror.call(this, sender);\r\n    this.setTimeout(400);\r\n    this.context = null;\r\n};\r\n\r\noop.inherits(Worker, Mirror);\r\n\r\n(function() {\r\n\r\n    this.setOptions = function(options) {\r\n        this.context = options.context;\r\n    };\r\n\r\n    this.onUpdate = function() {\r\n        var value = this.doc.getValue();\r\n        if (!value)\r\n            return;\r\n        var parser = new DOMParser();\r\n        var errors = [];\r\n        parser.options.errorHandler = {\r\n            fatalError: function(fullMsg, errorMsg, locator) {\r\n                errors.push({\r\n                    row: locator.lineNumber,\r\n                    column: locator.columnNumber,\r\n                    text: errorMsg,\r\n                    type: \"error\"\r\n                });\r\n            },\r\n            error: function(fullMsg, errorMsg, locator) {\r\n                errors.push({\r\n                    row: locator.lineNumber,\r\n                    column: locator.columnNumber,\r\n                    text: errorMsg,\r\n                    type: \"error\"\r\n                });\r\n            },\r\n            warning: function(fullMsg, errorMsg, locator) {\r\n                errors.push({\r\n                    row: locator.lineNumber,\r\n                    column: locator.columnNumber,\r\n                    text: errorMsg,\r\n                    type: \"warning\"\r\n                });\r\n            }\r\n        };\r\n        \r\n        parser.parseFromString(value);\r\n        this.sender.emit(\"error\", errors);\r\n    };\r\n\r\n}).call(Worker.prototype);\r\n\r\n});\r\n"]}