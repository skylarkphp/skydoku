{"version":3,"sources":["mode/haskell_highlight_rules.js"],"names":["define","require","exports","module","oop","TextHighlightRules","HaskellHighlightRules","this","$rules","start","token","regex","comment","push","next","include","defaultToken","#block_comment","#comments","push_","#infix_op","#module_exports","#module_name","#pragma","#type_signature","normalizeRules","metaData","fileTypes","keyEquivalent","name","scopeName","inherits"],"mappings":"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","file":"../../mode/haskell_highlight_rules.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2012, Ajax.org B.V.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\n/* This file was autogenerated from tm bundles\\haskell.tmbundle\\Syntaxes\\Haskell.plist (uuid: ) */\r\n/****************************************************************************************\r\n * IT MIGHT NOT BE PERFECT ...But it's a good start from an existing *.tmlanguage file. *\r\n * fileTypes                                                                            *\r\n ****************************************************************************************/\r\n\r\ndefine(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\r\n\r\nvar HaskellHighlightRules = function() {\r\n    // regexp must not have capturing parentheses. Use (?:) instead.\r\n    // regexps are ordered -> the first match is used\r\n\r\n    this.$rules = { start:\r\n       [ { token:\r\n            [ 'punctuation.definition.entity.haskell',\r\n              'keyword.operator.function.infix.haskell',\r\n              'punctuation.definition.entity.haskell' ],\r\n           regex: '(`)([a-zA-Z_\\']*?)(`)',\r\n           comment: 'In case this regex seems unusual for an infix operator, note that Haskell allows any ordinary function application (elem 4 [1..10]) to be rewritten as an infix expression (4 `elem` [1..10]).' },\r\n         { token: 'constant.language.unit.haskell', regex: '\\\\(\\\\)' },\r\n         { token: 'constant.language.empty-list.haskell',\r\n           regex: '\\\\[\\\\]' },\r\n         { token: 'keyword.other.haskell',\r\n           regex: '\\\\b(module|signature)\\\\b',\r\n           push:\r\n            [ { token: 'keyword.other.haskell', regex: '\\\\bwhere\\\\b', next: 'pop' },\r\n              { include: '#module_name' },\r\n              { include: '#module_exports' },\r\n              { token: 'invalid', regex: '[a-z]+' },\r\n              { defaultToken: 'meta.declaration.module.haskell' } ] },\r\n         { token: 'keyword.other.haskell',\r\n           regex: '\\\\bclass\\\\b',\r\n           push:\r\n            [ { token: 'keyword.other.haskell',\r\n                regex: '\\\\bwhere\\\\b',\r\n                next: 'pop' },\r\n              { token: 'support.class.prelude.haskell',\r\n                regex: '\\\\b(?:Monad|Functor|Eq|Ord|Read|Show|Num|(?:Frac|Ra)tional|Enum|Bounded|Real(?:Frac|Float)?|Integral|Floating)\\\\b' },\r\n              { token: 'entity.other.inherited-class.haskell',\r\n                regex: '[A-Z][A-Za-z_\\']*' },\r\n              { token: 'variable.other.generic-type.haskell',\r\n                regex: '\\\\b[a-z][a-zA-Z0-9_\\']*\\\\b' },\r\n              { defaultToken: 'meta.declaration.class.haskell' } ] },\r\n         { token: 'keyword.other.haskell',\r\n           regex: '\\\\binstance\\\\b',\r\n           push:\r\n            [ { token: 'keyword.other.haskell',\r\n                regex: '\\\\bwhere\\\\b|$',\r\n                next: 'pop' },\r\n              { include: '#type_signature' },\r\n              { defaultToken: 'meta.declaration.instance.haskell' } ] },\r\n         { token: 'keyword.other.haskell',\r\n           regex: 'import',\r\n           push:\r\n            [ { token: 'meta.import.haskell', regex: '$|;|^', next: 'pop' },\r\n              { token: 'keyword.other.haskell', regex: 'qualified|as|hiding' },\r\n              { include: '#module_name' },\r\n              { include: '#module_exports' },\r\n              { defaultToken: 'meta.import.haskell' } ] },\r\n         { token: [ 'keyword.other.haskell', 'meta.deriving.haskell' ],\r\n           regex: '(deriving)(\\\\s*\\\\()',\r\n           push:\r\n            [ { token: 'meta.deriving.haskell', regex: '\\\\)', next: 'pop' },\r\n              { token: 'entity.other.inherited-class.haskell',\r\n                regex: '\\\\b[A-Z][a-zA-Z_\\']*' },\r\n              { defaultToken: 'meta.deriving.haskell' } ] },\r\n         { token: 'keyword.other.haskell',\r\n           regex: '\\\\b(?:deriving|where|data|type|case|of|let|in|newtype|default)\\\\b' },\r\n         { token: 'keyword.operator.haskell', regex: '\\\\binfix[lr]?\\\\b' },\r\n         { token: 'keyword.control.haskell',\r\n           regex: '\\\\b(?:do|if|then|else)\\\\b' },\r\n         { token: 'constant.numeric.float.haskell',\r\n           regex: '\\\\b(?:[0-9]+\\\\.[0-9]+(?:[eE][+-]?[0-9]+)?|[0-9]+[eE][+-]?[0-9]+)\\\\b',\r\n           comment: 'Floats are always decimal' },\r\n         { token: 'constant.numeric.haskell',\r\n           regex: '\\\\b(?:[0-9]+|0(?:[xX][0-9a-fA-F]+|[oO][0-7]+))\\\\b' },\r\n         { token:\r\n            [ 'meta.preprocessor.c',\r\n              'punctuation.definition.preprocessor.c',\r\n              'meta.preprocessor.c' ],\r\n           regex: '^(\\\\s*)(#)(\\\\s*\\\\w+)',\r\n           comment: 'In addition to Haskell\\'s \"native\" syntax, GHC permits the C preprocessor to be run on a source file.' },\r\n         { include: '#pragma' },\r\n         { token: 'punctuation.definition.string.begin.haskell',\r\n           regex: '\"',\r\n           push:\r\n            [ { token: 'punctuation.definition.string.end.haskell',\r\n                regex: '\"',\r\n                next: 'pop' },\r\n              { token: 'constant.character.escape.haskell',\r\n                regex: '\\\\\\\\(?:NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS|US|SP|DEL|[abfnrtv\\\\\\\\\\\\\"\\'\\\\&])' },\r\n              { token: 'constant.character.escape.octal.haskell',\r\n                regex: '\\\\\\\\o[0-7]+|\\\\\\\\x[0-9A-Fa-f]+|\\\\\\\\[0-9]+' },\r\n              { token: 'constant.character.escape.control.haskell',\r\n                regex: '\\\\^[A-Z@\\\\[\\\\]\\\\\\\\\\\\^_]' },\r\n              { defaultToken: 'string.quoted.double.haskell' } ] },\r\n         { token:\r\n            [ 'punctuation.definition.string.begin.haskell',\r\n              'string.quoted.single.haskell',\r\n              'constant.character.escape.haskell',\r\n              'constant.character.escape.octal.haskell',\r\n              'constant.character.escape.hexadecimal.haskell',\r\n              'constant.character.escape.control.haskell',\r\n              'punctuation.definition.string.end.haskell' ],\r\n           regex: '(\\')(?:([\\\\ -\\\\[\\\\]-~])|(\\\\\\\\(?:NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS|US|SP|DEL|[abfnrtv\\\\\\\\\\\\\"\\'\\\\&]))|(\\\\\\\\o[0-7]+)|(\\\\\\\\x[0-9A-Fa-f]+)|(\\\\^[A-Z@\\\\[\\\\]\\\\\\\\\\\\^_]))(\\')' },\r\n         { token:\r\n            [ 'meta.function.type-declaration.haskell',\r\n              'entity.name.function.haskell',\r\n              'meta.function.type-declaration.haskell',\r\n              'keyword.other.double-colon.haskell' ],\r\n           regex: '^(\\\\s*)([a-z_][a-zA-Z0-9_\\']*|\\\\([|!%$+\\\\-.,=</>]+\\\\))(\\\\s*)(::)',\r\n           push:\r\n            [ { token: 'meta.function.type-declaration.haskell',\r\n                regex: '$',\r\n                next: 'pop' },\r\n              { include: '#type_signature' },\r\n              { defaultToken: 'meta.function.type-declaration.haskell' } ] },\r\n         { token: 'support.constant.haskell',\r\n           regex: '\\\\b(?:Just|Nothing|Left|Right|True|False|LT|EQ|GT|\\\\(\\\\)|\\\\[\\\\])\\\\b' },\r\n         { token: 'constant.other.haskell', regex: '\\\\b[A-Z]\\\\w*\\\\b' },\r\n         { include: '#comments' },\r\n         { token: 'support.function.prelude.haskell',\r\n           regex: '\\\\b(?:abs|acos|acosh|all|and|any|appendFile|applyM|asTypeOf|asin|asinh|atan|atan2|atanh|break|catch|ceiling|compare|concat|concatMap|const|cos|cosh|curry|cycle|decodeFloat|div|divMod|drop|dropWhile|elem|encodeFloat|enumFrom|enumFromThen|enumFromThenTo|enumFromTo|error|even|exp|exponent|fail|filter|flip|floatDigits|floatRadix|floatRange|floor|fmap|foldl|foldl1|foldr|foldr1|fromEnum|fromInteger|fromIntegral|fromRational|fst|gcd|getChar|getContents|getLine|head|id|init|interact|ioError|isDenormalized|isIEEE|isInfinite|isNaN|isNegativeZero|iterate|last|lcm|length|lex|lines|log|logBase|lookup|map|mapM|mapM_|max|maxBound|maximum|maybe|min|minBound|minimum|mod|negate|not|notElem|null|odd|or|otherwise|pi|pred|print|product|properFraction|putChar|putStr|putStrLn|quot|quotRem|read|readFile|readIO|readList|readLn|readParen|reads|readsPrec|realToFrac|recip|rem|repeat|replicate|return|reverse|round|scaleFloat|scanl|scanl1|scanr|scanr1|seq|sequence|sequence_|show|showChar|showList|showParen|showString|shows|showsPrec|significand|signum|sin|sinh|snd|span|splitAt|sqrt|subtract|succ|sum|tail|take|takeWhile|tan|tanh|toEnum|toInteger|toRational|truncate|uncurry|undefined|unlines|until|unwords|unzip|unzip3|userError|words|writeFile|zip|zip3|zipWith|zipWith3)\\\\b' },\r\n         { include: '#infix_op' },\r\n         { token: 'keyword.operator.haskell',\r\n           regex: '[|!%$?~+:\\\\-.=</>\\\\\\\\]+',\r\n           comment: 'In case this regex seems overly general, note that Haskell permits the definition of new operators which can be nearly any string of punctuation characters, such as $%^&*.' },\r\n         { token: 'punctuation.separator.comma.haskell', regex: ',' } ],\r\n      '#block_comment':\r\n       [ { token: 'punctuation.definition.comment.haskell',\r\n           regex: '\\\\{-(?!#)',\r\n           push:\r\n            [ { include: '#block_comment' },\r\n              { token: 'punctuation.definition.comment.haskell',\r\n                regex: '-\\\\}',\r\n                next: 'pop' },\r\n              { defaultToken: 'comment.block.haskell' } ] } ],\r\n      '#comments':\r\n       [ { token: 'punctuation.definition.comment.haskell',\r\n           regex: '--.*',\r\n           push_:\r\n            [ { token: 'comment.line.double-dash.haskell',\r\n                regex: '$',\r\n                next: 'pop' },\r\n              { defaultToken: 'comment.line.double-dash.haskell' } ] },\r\n         { include: '#block_comment' } ],\r\n      '#infix_op':\r\n       [ { token: 'entity.name.function.infix.haskell',\r\n           regex: '\\\\([|!%$+:\\\\-.=</>]+\\\\)|\\\\(,+\\\\)' } ],\r\n      '#module_exports':\r\n       [ { token: 'meta.declaration.exports.haskell',\r\n           regex: '\\\\(',\r\n           push:\r\n            [ { token: 'meta.declaration.exports.haskell.end',\r\n                regex: '\\\\)',\r\n                next: 'pop' },\r\n              { token: 'entity.name.function.haskell',\r\n                regex: '\\\\b[a-z][a-zA-Z_\\']*' },\r\n              { token: 'storage.type.haskell', regex: '\\\\b[A-Z][A-Za-z_\\']*' },\r\n              { token: 'punctuation.separator.comma.haskell', regex: ',' },\r\n              { include: '#infix_op' },\r\n              { token: 'meta.other.unknown.haskell',\r\n                regex: '\\\\(.*?\\\\)',\r\n                comment: 'So named because I don\\'t know what to call this.' },\r\n              { defaultToken: 'meta.declaration.exports.haskell.end' } ] } ],\r\n      '#module_name':\r\n       [ { token: 'support.other.module.haskell',\r\n           regex: '[A-Z][A-Za-z._\\']*' } ],\r\n      '#pragma':\r\n       [ { token: 'meta.preprocessor.haskell',\r\n           regex: '\\\\{-#',\r\n           push:\r\n            [ { token: 'meta.preprocessor.haskell',\r\n                regex: '#-\\\\}',\r\n                next: 'pop' },\r\n              { token: 'keyword.other.preprocessor.haskell',\r\n                regex: '\\\\b(?:LANGUAGE|UNPACK|INLINE)\\\\b' },\r\n              { defaultToken: 'meta.preprocessor.haskell' } ] } ],\r\n      '#type_signature':\r\n       [ { token:\r\n            [ 'meta.class-constraint.haskell',\r\n              'entity.other.inherited-class.haskell',\r\n              'meta.class-constraint.haskell',\r\n              'variable.other.generic-type.haskell',\r\n              'meta.class-constraint.haskell',\r\n              'keyword.other.big-arrow.haskell' ],\r\n           regex: '(\\\\(\\\\s*)([A-Z][A-Za-z]*)(\\\\s+)([a-z][A-Za-z_\\']*)(\\\\)\\\\s*)(=>)' },\r\n         { include: '#pragma' },\r\n         { token: 'keyword.other.arrow.haskell', regex: '->' },\r\n         { token: 'keyword.other.big-arrow.haskell', regex: '=>' },\r\n         { token: 'support.type.prelude.haskell',\r\n           regex: '\\\\b(?:Int(?:eger)?|Maybe|Either|Bool|Float|Double|Char|String|Ordering|ShowS|ReadS|FilePath|IO(?:Error)?)\\\\b' },\r\n         { token: 'variable.other.generic-type.haskell',\r\n           regex: '\\\\b[a-z][a-zA-Z0-9_\\']*\\\\b' },\r\n         { token: 'storage.type.haskell',\r\n           regex: '\\\\b[A-Z][a-zA-Z0-9_\\']*\\\\b' },\r\n         { token: 'support.constant.unit.haskell', regex: '\\\\(\\\\)' },\r\n         { include: '#comments' } ] };\r\n\r\n    this.normalizeRules();\r\n};\r\n\r\nHaskellHighlightRules.metaData = { fileTypes: [ 'hs' ],\r\n      keyEquivalent: '^~H',\r\n      name: 'Haskell',\r\n      scopeName: 'source.haskell' };\r\n\r\n\r\noop.inherits(HaskellHighlightRules, TextHighlightRules);\r\n\r\nexports.HaskellHighlightRules = HaskellHighlightRules;\r\n});\r\n"]}