{"version":3,"sources":["mode/lua_worker.js"],"names":["define","require","exports","module","oop","Mirror","luaparse","Worker","sender","call","this","setTimeout","inherits","onUpdate","value","doc","getValue","errors","parse","e","SyntaxError","push","row","line","column","text","message","type","emit","prototype"],"mappings":";;;;;;;AA8BAA,OAAO,SAASC,EAASC,EAASC,GAClC,aAEA,IAAIC,EAAMH,EAAQ,cACdI,EAASJ,EAAQ,oBAAoBI,OACrCC,EAAWL,EAAQ,wBAEnBM,EAASL,EAAQK,OAAS,SAASC,GACnCH,EAAOI,KAAKC,KAAMF,GAClBE,KAAKC,WAAW,MAGpBP,EAAIQ,SAASL,EAAQF,GAErB,WAEIK,KAAKG,SAAW,WACZ,IAAIC,EAAQJ,KAAKK,IAAIC,WACjBC,KAGJ,IACIX,EAASY,MAAMJ,GACjB,MAAMK,GACAA,aAAaC,aACbH,EAAOI,MACHC,IAAKH,EAAEI,KAAO,EACdC,OAAQL,EAAEK,OACVC,KAAMN,EAAEO,QACRC,KAAM,UAKlBjB,KAAKF,OAAOoB,KAAK,WAAYX,KAGlCR,KAAKF,EAAOsB","file":"../../mode/lua_worker.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2010, Ajax.org B.V.\r\n * All rights reserved.\r\n * \r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n * \r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\ndefine(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar Mirror = require(\"../worker/mirror\").Mirror;\r\nvar luaparse = require(\"../mode/lua/luaparse\");\r\n\r\nvar Worker = exports.Worker = function(sender) {\r\n    Mirror.call(this, sender);\r\n    this.setTimeout(500);\r\n};\r\n\r\noop.inherits(Worker, Mirror);\r\n\r\n(function() {\r\n\r\n    this.onUpdate = function() {\r\n        var value = this.doc.getValue();\r\n        var errors = [];\r\n        \r\n        // var t=Date.now()\r\n        try {\r\n            luaparse.parse(value);\r\n        } catch(e) {\r\n            if (e instanceof SyntaxError) {\r\n                errors.push({\r\n                    row: e.line - 1,\r\n                    column: e.column,\r\n                    text: e.message,\r\n                    type: \"error\"\r\n                });\r\n            }\r\n        }\r\n        // console.log( t-Date.now())\r\n        this.sender.emit(\"annotate\", errors);\r\n    };\r\n\r\n}).call(Worker.prototype);\r\n\r\n});\r\n"]}