{"version":3,"sources":["mode/latex.js"],"names":["define","require","exports","module","oop","TextMode","Mode","LatexHighlightRules","CstyleBehaviour","LatexFoldMode","FoldMode","this","HighlightRules","foldingRules","$behaviour","braces","inherits","type","lineCommentStart","$id","getMatching","session","row","column","undefined","selection","lead","startToken","getTokenAt","value","latexBlock","call","prototype"],"mappings":";;;;;;;AAAAA,OAAO,SAASC,EAASC,EAASC,GAClC,aAEA,IAAIC,EAAMH,EAAQ,cACdI,EAAWJ,EAAQ,UAAUK,KAC7BC,EAAsBN,EAAQ,2BAA2BM,oBACzDC,EAAkBP,EAAQ,sBAAsBO,gBAChDC,EAAgBR,EAAQ,mBAAmBS,SAE3CJ,EAAO,WACPK,KAAKC,eAAiBL,EACtBI,KAAKE,aAAe,IAAIJ,EACxBE,KAAKG,WAAa,IAAIN,GAAkBO,QAAQ,KAEpDX,EAAIY,SAASV,EAAMD,GAEnB,WACIM,KAAKM,KAAO,OAEZN,KAAKO,iBAAmB,IAExBP,KAAKQ,IAAM,iBAEXR,KAAKS,YAAc,SAASC,EAASC,EAAKC,QAC3BC,GAAPF,IACAA,EAAMD,EAAQI,UAAUC,MACV,iBAAPJ,IACPC,EAASD,EAAIC,OACbD,EAAMA,EAAIA,KAGd,IAAIK,EAAaN,EAAQO,WAAWN,EAAKC,GACzC,GAAKI,EAEL,MAAwB,WAApBA,EAAWE,OAA0C,SAApBF,EAAWE,MACrClB,KAAKE,aAAaiB,WAAWT,EAASC,EAAKC,GAAQ,QAD9D,IAILQ,KAAKzB,EAAK0B,WAEb9B,EAAQI,KAAOA","file":"../../mode/latex.js","sourcesContent":["define(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar TextMode = require(\"./text\").Mode;\r\nvar LatexHighlightRules = require(\"./latex_highlight_rules\").LatexHighlightRules;\r\nvar CstyleBehaviour = require(\"./behaviour/cstyle\").CstyleBehaviour;\r\nvar LatexFoldMode = require(\"./folding/latex\").FoldMode;\r\n\r\nvar Mode = function() {\r\n    this.HighlightRules = LatexHighlightRules;\r\n    this.foldingRules = new LatexFoldMode();\r\n    this.$behaviour = new CstyleBehaviour({ braces: true });\r\n};\r\noop.inherits(Mode, TextMode);\r\n\r\n(function() {\r\n    this.type = \"text\";\r\n    \r\n    this.lineCommentStart = \"%\";\r\n\r\n    this.$id = \"ace/mode/latex\";\r\n    \r\n    this.getMatching = function(session, row, column) {\r\n        if (row == undefined)\r\n            row = session.selection.lead;\r\n        if (typeof row == \"object\") {\r\n            column = row.column;\r\n            row = row.row;\r\n        }\r\n\r\n        var startToken = session.getTokenAt(row, column);\r\n        if (!startToken)\r\n            return;\r\n        if (startToken.value == \"\\\\begin\" || startToken.value == \"\\\\end\") {\r\n            return this.foldingRules.latexBlock(session, row, column, true);\r\n        }\r\n    };\r\n}).call(Mode.prototype);\r\n\r\nexports.Mode = Mode;\r\n\r\n});\r\n"]}