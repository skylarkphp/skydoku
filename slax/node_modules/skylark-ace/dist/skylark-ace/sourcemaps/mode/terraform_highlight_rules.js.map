{"version":3,"sources":["mode/terraform_highlight_rules.js"],"names":["define","require","exports","module","oop","TextHighlightRules","TerraformHighlightRules","this","$rules","start","token","regex","push","next","include","defaultToken","blockComment","constants","variables","interpolated_variables","strings","escaped_chars","operators","interpolation","functions","parenthesis","normalizeRules","inherits"],"mappings":";;;;;;;AA8BAA,OAAO,SAAUC,EAASC,EAASC,GACnC,aAEA,IAAIC,EAAMH,EAAQ,cACdI,EAAqBJ,EAAQ,0BAA0BI,mBACvDC,EAA0B,WAG1BC,KAAKC,QACDC,QAEQC,OAAQ,8BACRC,MAAO,wDAGPD,MAAO,qBACPC,MAAO,SACPC,OAEQF,MAAO,oBACPC,MAAO,qBAGPD,MAAO,qBACPC,MAAO,QACPE,KAAM,QAGTC,QAAS,YACTA,QAAS,cACTA,QAAS,cAETC,aAAc,WAInBL,MAAO,yBACPC,MAAO,6EAIPD,MAAO,+BACPC,MAAO,WAGPD,MAAO,oCACPC,MAAO,cACPC,KAAM,iBAGNF,MAAO,6BACPC,MAAO,iCAGPD,MAAO,aACPC,MAAO,UAIPD,MAAO,aACPC,MAAO,YAEVG,QAAS,cACTA,QAAS,YACTA,QAAS,cACTA,QAAS,cAEdE,eACIL,MAAO,cACPD,MAAO,oCACPE,KAAM,iBAEND,MAAO,cACPD,MAAO,kCACPG,KAAM,QAENE,aAAc,YAElBE,YAEQP,MAAO,8BACPC,MAAO,yCAGPD,MAAO,6BACPC,MAAO,wEAGfO,YAEQR,OAAQ,gCAAiC,oBACzCC,MAAO,2BAGfQ,yBAEQT,MAAO,qBACPC,MAAO,0DAGfS,UAEQV,MAAO,8BACPC,MAAO,IACPC,OAEQF,MAAO,8BACPC,MAAO,IACPE,KAAM,QAELC,QAAS,kBACTC,aAAc,aAGvBL,MAAO,8BACPC,MAAO,IACPC,OAEQF,MAAO,8BACPC,MAAO,IACPE,KAAM,QAELC,QAAS,kBACTA,QAAS,kBACTC,aAAc,aAG/BM,gBAEQX,MAAO,kCACPC,MAAO,UAGfW,YAEQZ,MAAO,mBACPC,MAAO,0DAGfY,gBAEQb,MAAO,2CACPC,MAAO,aACPC,OACIF,MAAO,yCACPC,MAAO,MACPE,KAAM,QAELC,QAAS,2BACTA,QAAS,cACTA,QAAS,cACTA,QAAS,YACTA,QAAS,cACTA,QAAS,gBACTC,aAAc,kBAI3BS,YAEQd,MAAO,6BACPC,MAAO,kgBAGfc,cAEQf,MAAO,aACPC,MAAO,QAGPD,MAAO,aACPC,MAAO,SAInBJ,KAAKmB,kBAGTtB,EAAIuB,SAASrB,EAAyBD,GAEtCH,EAAQI,wBAA0BA","file":"../../mode/terraform_highlight_rules.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2012, Ajax.org B.V.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\ndefine(function (require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\r\nvar TerraformHighlightRules = function () {\r\n\r\n\r\n    this.$rules = {\r\n        \"start\": [\r\n            {\r\n                token: ['storage.function.terraform'],\r\n                regex: '\\\\b(output|resource|data|variable|module|export)\\\\b'\r\n            },\r\n            {\r\n                token: \"variable.terraform\",\r\n                regex: \"\\\\$\\\\s\",\r\n                push: [\r\n                    {\r\n                        token: \"keyword.terraform\",\r\n                        regex: \"(-var-file|-var)\"\r\n                    },\r\n                    {\r\n                        token: \"variable.terraform\",\r\n                        regex: \"\\\\n|$\",\r\n                        next: \"pop\"\r\n                    },\r\n\r\n                    {include: \"strings\"},\r\n                    {include: \"variables\"},\r\n                    {include: \"operators\"},\r\n\r\n                    {defaultToken: \"text\"}\r\n                ]\r\n            },\r\n            {\r\n                token: \"language.support.class\",\r\n                regex: \"\\\\b(timeouts|provider|connection|provisioner|lifecycleprovider|atlas)\\\\b\"\r\n            },\r\n\r\n            {\r\n                token: \"singleline.comment.terraform\",\r\n                regex: '#(.)*$'\r\n            },\r\n            {\r\n                token: \"multiline.comment.begin.terraform\",\r\n                regex: '^\\\\s*\\\\/\\\\*',\r\n                push: \"blockComment\"\r\n            },\r\n            {\r\n                token: \"storage.function.terraform\",\r\n                regex: \"^\\\\s*(locals|terraform)\\\\s*{\"\r\n            },\r\n            {\r\n                token: \"paren.lpar\",\r\n                regex: \"[[({]\"\r\n            },\r\n\r\n            {\r\n                token: \"paren.rpar\",\r\n                regex: \"[\\\\])}]\"\r\n            },\r\n            {include: \"constants\"},\r\n            {include: \"strings\"},\r\n            {include: \"operators\"},\r\n            {include: \"variables\"}\r\n        ],\r\n        blockComment: [{\r\n            regex: \"^\\\\s*\\\\/\\\\*\",\r\n            token: \"multiline.comment.begin.terraform\",\r\n            push: \"blockComment\"\r\n        }, {\r\n            regex: \"\\\\*\\\\/\\\\s*$\",\r\n            token: \"multiline.comment.end.terraform\",\r\n            next: \"pop\"\r\n        }, {\r\n            defaultToken: \"comment\"\r\n        }],\r\n        \"constants\": [\r\n            {\r\n                token: \"constant.language.terraform\",\r\n                regex: \"\\\\b(true|false|yes|no|on|off|EOF)\\\\b\"\r\n            },\r\n            {\r\n                token: \"constant.numeric.terraform\",\r\n                regex: \"(\\\\b([0-9]+)([kKmMgG]b?)?\\\\b)|(\\\\b(0x[0-9A-Fa-f]+)([kKmMgG]b?)?\\\\b)\"\r\n            }\r\n        ],\r\n        \"variables\": [\r\n            {\r\n                token: [\"variable.assignment.terraform\", \"keyword.operator\"],\r\n                regex: \"\\\\b([a-zA-Z_]+)(\\\\s*=)\"\r\n            }\r\n        ],\r\n        \"interpolated_variables\": [\r\n            {\r\n                token: \"variable.terraform\",\r\n                regex: \"\\\\b(var|self|count|path|local)\\\\b(?:\\\\.*[a-zA-Z_-]*)?\"\r\n            }\r\n        ],\r\n        \"strings\": [\r\n            {\r\n                token: \"punctuation.quote.terraform\",\r\n                regex: \"'\",\r\n                push:\r\n                    [{\r\n                        token: 'punctuation.quote.terraform',\r\n                        regex: \"'\",\r\n                        next: 'pop'\r\n                    },\r\n                        {include: \"escaped_chars\"},\r\n                        {defaultToken: 'string'}]\r\n            },\r\n            {\r\n                token: \"punctuation.quote.terraform\",\r\n                regex: '\"',\r\n                push:\r\n                    [{\r\n                        token: 'punctuation.quote.terraform',\r\n                        regex: '\"',\r\n                        next: 'pop'\r\n                    },\r\n                        {include: \"interpolation\"},\r\n                        {include: \"escaped_chars\"},\r\n                        {defaultToken: 'string'}]\r\n            }\r\n        ],\r\n        \"escaped_chars\": [\r\n            {\r\n                token: \"constant.escaped_char.terraform\",\r\n                regex: \"\\\\\\\\.\"\r\n            }\r\n        ],\r\n        \"operators\": [\r\n            {\r\n                token: \"keyword.operator\",\r\n                regex: \"\\\\?|:|==|!=|>|<|>=|<=|&&|\\\\|\\\\\\||!|%|&|\\\\*|\\\\+|\\\\-|/|=\"\r\n            }\r\n        ],\r\n        \"interpolation\": [\r\n            {// TODO: double $\r\n                token: \"punctuation.interpolated.begin.terraform\",\r\n                regex: \"\\\\$?\\\\$\\\\{\",\r\n                push: [{\r\n                    token: \"punctuation.interpolated.end.terraform\",\r\n                    regex: \"\\\\}\",\r\n                    next: \"pop\"\r\n                },\r\n                    {include: \"interpolated_variables\"},\r\n                    {include: \"operators\"},\r\n                    {include: \"constants\"},\r\n                    {include: \"strings\"},\r\n                    {include: \"functions\"},\r\n                    {include: \"parenthesis\"},\r\n                    {defaultToken: \"punctuation\"}\r\n                ]\r\n            }\r\n        ],\r\n        \"functions\": [\r\n            {\r\n                token: \"keyword.function.terraform\",\r\n                regex: \"\\\\b(abs|basename|base64decode|base64encode|base64gzip|base64sha256|base64sha512|bcrypt|ceil|chomp|chunklist|cidrhost|cidrnetmask|cidrsubnet|coalesce|coalescelist|compact|concat|contains|dirname|distinct|element|file|floor|flatten|format|formatlist|indent|index|join|jsonencode|keys|length|list|log|lookup|lower|map|matchkeys|max|merge|min|md5|pathexpand|pow|replace|rsadecrypt|sha1|sha256|sha512|signum|slice|sort|split|substr|timestamp|timeadd|title|transpose|trimspace|upper|urlencode|uuid|values|zipmap)\\\\b\"\r\n            }\r\n        ],\r\n        \"parenthesis\": [\r\n            {\r\n                token: \"paren.lpar\",\r\n                regex: \"\\\\[\"\r\n            },\r\n            {\r\n                token: \"paren.rpar\",\r\n                regex: \"\\\\]\"\r\n            }\r\n        ]\r\n    };\r\n    this.normalizeRules();\r\n};\r\n\r\noop.inherits(TerraformHighlightRules, TextHighlightRules);\r\n\r\nexports.TerraformHighlightRules = TerraformHighlightRules;\r\n});\r\n"]}