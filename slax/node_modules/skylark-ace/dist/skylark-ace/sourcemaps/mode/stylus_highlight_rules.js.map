{"version":3,"sources":["mode/stylus_highlight_rules.js"],"names":["define","require","exports","module","oop","TextHighlightRules","CssHighlightRules","StylusHighlightRules","keywordMapper","this","createKeywordMapper","support.type","supportType","support.function","supportFunction","support.constant","supportConstant","support.constant.color","supportConstantColor","support.constant.fonts","supportConstantFonts","$rules","start","token","regex","next","pseudoElements","pseudoClasses","numRe","comment","defaultToken","qqstring","qstring","inherits"],"mappings":";;;;;;;AAGAA,OAAO,SAASC,EAASC,EAASC,GAClC,aAEA,IAAIC,EAAMH,EAAQ,cACdI,EAAqBJ,EAAQ,0BAA0BI,mBACvDC,EAAoBL,EAAQ,yBAE5BM,EAAuB,WAKvB,IAAIC,EAAgBC,KAAKC,qBACrBC,eAAgBL,EAAkBM,YAClCC,mBAAoBP,EAAkBQ,gBACtCC,mBAAoBT,EAAkBU,gBACtCC,yBAA0BX,EAAkBY,qBAC5CC,yBAA0Bb,EAAkBc,sBAC7C,QAAQ,GAEXX,KAAKY,QACLC,QAEQC,MAAQ,UACRC,MAAQ,YAGRD,MAAQ,UACRC,MAAQ,OACRC,KAAO,YAGPF,OAAQ,8BAA+B,QACvCC,MAAO,+BAGPD,OAAQ,4CACRC,MAAO,kCAGPD,OAAQ,0BACRC,MAAO,SAGPD,OAAQ,4BACRC,MAAO,gBAGPD,OAAQ,kBACRC,MAAO,aAGPD,OAAS,cAAe,kDACxBC,MAAQlB,EAAkBoB,iBAE1BH,OAAS,cAAe,gDACxBC,MAAQlB,EAAkBqB,gBAG1BJ,OAAQ,0BACRC,MAAO,6kBAGPD,MAAQ,mBACRC,MAAQ,iBAGRD,MAAQ,mBACRC,MAAQ,iBAGRD,OAAQ,uCAAwC,yCAChDC,MAAO,gCAGPD,MAAO,4BACPC,MAAO,8BAGPD,MAAO,yBACPC,MAAO,0EAGPD,MAAO,0BACPC,MAAO,uFAGPD,MAAO,0BACPC,MAAO,4BAGPD,MAAQ,SACRC,MAAQ,SACRC,KAAQ,YAERF,MAAQ,SACRC,MAAQ,SACRC,KAAQ,aAGRF,MAAQ,mBACRC,MAAQlB,EAAkBsB,QAG1BL,MAAQ,UACRC,MAAQ,yFAGRD,MAAQf,EACRgB,MAAQ,kCAGhBK,UAEQN,MAAQ,UACRC,MAAQ,SACRC,KAAO,UAEPK,aAAe,YAGvBC,WAEQR,MAAQ,SACRC,MAAQ,cAGRD,MAAQ,SACRC,MAAQ,QACRC,KAAQ,aAGRF,MAAQ,SACRC,MAAQ,MACRC,KAAQ,UAGhBO,UAEQT,MAAQ,SACRC,MAAQ,cAGRD,MAAQ,SACRC,MAAQ,QACRC,KAAQ,YAGRF,MAAQ,SACRC,MAAQ,MACRC,KAAQ,YAOpBrB,EAAI6B,SAAS1B,EAAsBF,GAEnCH,EAAQK,qBAAuBA","file":"../../mode/stylus_highlight_rules.js","sourcesContent":["/*\r\n  THIS FILE WAS AUTOGENERATED BY Stylus.tmlanguage (UUID: 60519324-6A3A-4382-9E0B-546993A3869A) */\r\n\r\ndefine(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\r\nvar CssHighlightRules = require(\"./css_highlight_rules\");\r\n\r\nvar StylusHighlightRules = function() {\r\n\r\n    // regexp must not have capturing parentheses. Use (?:) instead.\r\n    // regexps are ordered -> the first match is used\r\n\r\n    var keywordMapper = this.createKeywordMapper({\r\n        \"support.type\": CssHighlightRules.supportType,\r\n        \"support.function\": CssHighlightRules.supportFunction,\r\n        \"support.constant\": CssHighlightRules.supportConstant,\r\n        \"support.constant.color\": CssHighlightRules.supportConstantColor,\r\n        \"support.constant.fonts\": CssHighlightRules.supportConstantFonts\r\n    }, \"text\", true);\r\n\r\n    this.$rules = {\r\n    start: [\r\n        {\r\n            token : \"comment\",\r\n            regex : /\\/\\/.*$/\r\n        },\r\n        {\r\n            token : \"comment\", // multi line comment\r\n            regex : /\\/\\*/,\r\n            next : \"comment\"\r\n        },\r\n        {\r\n            token: [\"entity.name.function.stylus\", \"text\"],\r\n            regex: \"^([-a-zA-Z_][-\\\\w]*)?(\\\\()\"\r\n        },\r\n        {\r\n            token: [\"entity.other.attribute-name.class.stylus\"],\r\n            regex: \"\\\\.-?[_a-zA-Z]+[_a-zA-Z0-9-]*\"\r\n        },\r\n        {\r\n            token: [\"entity.language.stylus\"],\r\n            regex: \"^ *&\"\r\n        },\r\n        {\r\n            token: [\"variable.language.stylus\"],\r\n            regex: \"(arguments)\"\r\n        },\r\n        {\r\n            token: [\"keyword.stylus\"],\r\n            regex: \"@[-\\\\w]+\"\r\n        },\r\n        {\r\n            token : [\"punctuation\", \"entity.other.attribute-name.pseudo-element.css\"],\r\n            regex : CssHighlightRules.pseudoElements\r\n        }, {\r\n            token : [\"punctuation\", \"entity.other.attribute-name.pseudo-class.css\"],\r\n            regex : CssHighlightRules.pseudoClasses\r\n        }, \r\n        {\r\n            token: [\"entity.name.tag.stylus\"],\r\n            regex: \"(?:\\\\b)(a|abbr|acronym|address|area|article|aside|audio|b|base|big|blockquote|body|br|button|canvas|caption|cite|code|col|colgroup|datalist|dd|del|details|dfn|dialog|div|dl|dt|em|eventsource|fieldset|figure|figcaption|footer|form|frame|frameset|(?:h[1-6])|head|header|hgroup|hr|html|i|iframe|img|input|ins|kbd|label|legend|li|link|map|mark|menu|meta|meter|nav|noframes|noscript|object|ol|optgroup|option|output|p|param|pre|progress|q|samp|script|section|select|small|span|strike|strong|style|sub|summary|sup|table|tbody|td|textarea|tfoot|th|thead|time|title|tr|tt|ul|var|video)(?:\\\\b)\"\r\n        },\r\n        {\r\n            token : \"constant.numeric\",  // hex6 color\r\n            regex : \"#[a-f0-9]{6}\"\r\n        }, \r\n        {\r\n            token : \"constant.numeric\", // hex3 color\r\n            regex : \"#[a-f0-9]{3}\"\r\n        }, \r\n        {\r\n            token: [\"punctuation.definition.entity.stylus\", \"entity.other.attribute-name.id.stylus\"],\r\n            regex: \"(#)([a-zA-Z][a-zA-Z0-9_-]*)\"\r\n        },\r\n        {\r\n            token: \"meta.vendor-prefix.stylus\",\r\n            regex: \"-webkit-|-moz\\\\-|-ms-|-o-\"\r\n        },\r\n        {\r\n            token: \"keyword.control.stylus\",\r\n            regex: \"(?:!important|for|in|return|true|false|null|if|else|unless|return)\\\\b\"\r\n        },\r\n        {\r\n            token: \"keyword.operator.stylus\",\r\n            regex: \"!|~|\\\\+|-|(?:\\\\*)?\\\\*|\\\\/|%|(?:\\\\.)\\\\.\\\\.|<|>|(?:=|:|\\\\?|\\\\+|-|\\\\*|\\\\/|%|<|>)?=|!=\"\r\n        },\r\n        {\r\n            token: \"keyword.operator.stylus\",\r\n            regex: \"(?:in|is(?:nt)?|not)\\\\b\"\r\n        },\r\n        {\r\n            token : \"string\",\r\n            regex : \"'(?=.)\",\r\n            next  : \"qstring\"\r\n        }, {\r\n            token : \"string\",\r\n            regex : '\"(?=.)',\r\n            next  : \"qqstring\"\r\n        }, \r\n        {\r\n            token : \"constant.numeric\",\r\n            regex : CssHighlightRules.numRe\r\n        }, \r\n        {\r\n            token : \"keyword\",\r\n            regex : \"(?:ch|cm|deg|em|ex|fr|gd|grad|Hz|in|kHz|mm|ms|pc|pt|px|rad|rem|s|turn|vh|vm|vw|%)\\\\b\"\r\n        }, \r\n        {\r\n            token : keywordMapper,\r\n            regex : \"\\\\-?[a-zA-Z_][a-zA-Z0-9_\\\\-]*\"\r\n        }\r\n    ],\r\n    \"comment\" : [\r\n        {\r\n            token : \"comment\", // closing comment\r\n            regex : \"\\\\*\\\\/\",\r\n            next : \"start\"\r\n        }, {\r\n            defaultToken : \"comment\"\r\n        }\r\n    ],\r\n    \"qqstring\" : [\r\n        {\r\n            token : \"string\",\r\n            regex : '[^\"\\\\\\\\]+'\r\n        }, \r\n        {\r\n            token : \"string\",\r\n            regex : \"\\\\\\\\$\",\r\n            next  : \"qqstring\"\r\n        }, \r\n        {\r\n            token : \"string\",\r\n            regex : '\"|$',\r\n            next  : \"start\"\r\n        }\r\n    ],\r\n    \"qstring\" : [\r\n        {\r\n            token : \"string\",\r\n            regex : \"[^'\\\\\\\\]+\"\r\n        }, \r\n        {\r\n            token : \"string\",\r\n            regex : \"\\\\\\\\$\",\r\n            next  : \"qstring\"\r\n        }, \r\n        {\r\n            token : \"string\",\r\n            regex : \"'|$\",\r\n            next  : \"start\"\r\n        }\r\n    ]\r\n};\r\n\r\n};\r\n\r\noop.inherits(StylusHighlightRules, TextHighlightRules);\r\n\r\nexports.StylusHighlightRules = StylusHighlightRules;\r\n});\r\n"]}