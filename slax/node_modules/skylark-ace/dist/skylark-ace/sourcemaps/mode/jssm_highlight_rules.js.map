{"version":3,"sources":["mode/jssm_highlight_rules.js"],"names":["define","require","exports","module","oop","TextHighlightRules","JSSMHighlightRules","this","$rules","start","token","regex","push","next","defaultToken","comment","normalizeRules","metaData","fileTypes","name","scopeName","inherits"],"mappings":";;;;;;;AAoCAA,OAAO,SAASC,QAASC,QAASC,QAClC,aAEA,IAAIC,EAAMH,QAAQ,cACdI,EAAqBJ,QAAQ,0BAA0BI,mBAEvDC,EAAqB,WAIrBC,KAAKC,QACDC,QACIC,MAAO,oCACPC,MAAO,OACPC,OACIF,MAAO,oCACPC,MAAO,OACPE,KAAM,QAENC,aAAc,uBAElBC,QAAS,kBAETL,MAAO,oBACPC,MAAO,OACPC,OACIF,MAAO,oBACPC,MAAO,IACPE,KAAM,QAENC,aAAc,sBAElBC,QAAS,kBAETL,MAAO,uBACPC,MAAO,MACPC,OACIF,MAAO,uBACPC,MAAO,IACPE,KAAM,QAENC,aAAc,kBAElBC,QAAS,gBAETL,MAAO,mBACPC,MAAO,yBACPI,QAAS,WAETL,MAAO,iCACPC,MAAO,mBACPI,QAAS,yBAETL,MAAO,iCACPC,MAAO,mBACPI,QAAS,yBAETL,MAAO,iCACPC,MAAO,sBACPI,QAAS,yBAETL,MAAO,iCACPC,MAAO,mBACPI,QAAS,yBAETL,MAAO,mDACPC,MAAO,MACPI,QAAS,gBAETL,MAAO,kDACPC,MAAO,KACPI,QAAS,gBAETL,MAAO,kDACPC,MAAO,KACPI,QAAS,gBAETL,MAAO,iDACPC,MAAO,MACPI,QAAS,gBAETL,MAAO,iDACPC,MAAO,KACPI,QAAS,gBAETL,MAAO,iDACPC,MAAO,KACPI,QAAS,gBAETL,MAAO,qDACPC,MAAO,MACPI,QAAS,gBAETL,MAAO,mDACPC,MAAO,KACPI,QAAS,gBAETL,MAAO,mDACPC,MAAO,KACPI,QAAS,gBAETL,MAAO,kDACPC,MAAO,OACPI,QAAS,gBAETL,MAAO,kDACPC,MAAO,OACPI,QAAS,gBAETL,MAAO,oDACPC,MAAO,OACPI,QAAS,gBAETL,MAAO,oDACPC,MAAO,OACPI,QAAS,gBAETL,MAAO,mDACPC,MAAO,OACPI,QAAS,gBAETL,MAAO,mDACPC,MAAO,OACPI,QAAS,gBAETL,MAAO,mCACPC,MAAO,UACPI,QAAS,gCAETL,MAAO,gCACPC,MAAO,YACPI,QAAS,sBAETL,MAAO,yCACPC,MAAO,YACPI,QAAS,0BAETL,MAAO,iCACPC,MAAO,yBACPI,QAAS,2BAIjBR,KAAKS,kBAGTV,EAAmBW,UACfC,WAAY,OAAQ,cACpBC,KAAM,OACNC,UAAW,eAIfhB,EAAIiB,SAASf,EAAoBD,GAEjCH,QAAQI,mBAAqBA","file":"../../mode/jssm_highlight_rules.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2012, Ajax.org B.V.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\n/* This file was autogenerated from ./jssm.tmLanguage (uuid: ) */\r\n/****************************************************************************************\r\n * IT MIGHT NOT BE PERFECT ...But it's a good start from an existing *.tmlanguage file. *\r\n * fileTypes                                                                            *\r\n ****************************************************************************************/\r\n\r\ndefine(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\r\n\r\nvar JSSMHighlightRules = function() {\r\n    // regexp must not have capturing parentheses. Use (?:) instead.\r\n    // regexps are ordered -> the first match is used\r\n\r\n    this.$rules = {\r\n        start: [{\r\n            token: \"punctuation.definition.comment.mn\",\r\n            regex: /\\/\\*/,\r\n            push: [{\r\n                token: \"punctuation.definition.comment.mn\",\r\n                regex: /\\*\\//,\r\n                next: \"pop\"\r\n            }, {\r\n                defaultToken: \"comment.block.jssm\"\r\n            }],\r\n            comment: \"block comment\"\r\n        }, {\r\n            token: \"comment.line.jssm\",\r\n            regex: /\\/\\//,\r\n            push: [{\r\n                token: \"comment.line.jssm\",\r\n                regex: /$/,\r\n                next: \"pop\"\r\n            }, {\r\n                defaultToken: \"comment.line.jssm\"\r\n            }],\r\n            comment: \"block comment\"\r\n        }, {\r\n            token: \"entity.name.function\",\r\n            regex: /\\${/,\r\n            push: [{\r\n                token: \"entity.name.function\",\r\n                regex: /}/,\r\n                next: \"pop\"\r\n            }, {\r\n                defaultToken: \"keyword.other\"\r\n            }],\r\n            comment: \"js outcalls\"\r\n        }, {\r\n            token: \"constant.numeric\",\r\n            regex: /[0-9]*\\.[0-9]*\\.[0-9]*/,\r\n            comment: \"semver\"\r\n        }, {\r\n            token: \"constant.language.jssmLanguage\",\r\n            regex: /graph_layout\\s*:/,\r\n            comment: \"jssm language tokens\"\r\n        }, {\r\n            token: \"constant.language.jssmLanguage\",\r\n            regex: /machine_name\\s*:/,\r\n            comment: \"jssm language tokens\"\r\n        }, {\r\n            token: \"constant.language.jssmLanguage\",\r\n            regex: /machine_version\\s*:/,\r\n            comment: \"jssm language tokens\"\r\n        }, {\r\n            token: \"constant.language.jssmLanguage\",\r\n            regex: /jssm_version\\s*:/,\r\n            comment: \"jssm language tokens\"\r\n        }, {\r\n            token: \"keyword.control.transition.jssmArrow.legal_legal\",\r\n            regex: /<->/,\r\n            comment: \"transitions\"\r\n        }, {\r\n            token: \"keyword.control.transition.jssmArrow.legal_none\",\r\n            regex: /<-/,\r\n            comment: \"transitions\"\r\n        }, {\r\n            token: \"keyword.control.transition.jssmArrow.none_legal\",\r\n            regex: /->/,\r\n            comment: \"transitions\"\r\n        }, {\r\n            token: \"keyword.control.transition.jssmArrow.main_main\",\r\n            regex: /<=>/,\r\n            comment: \"transitions\"\r\n        }, {\r\n            token: \"keyword.control.transition.jssmArrow.none_main\",\r\n            regex: /=>/,\r\n            comment: \"transitions\"\r\n        }, {\r\n            token: \"keyword.control.transition.jssmArrow.main_none\",\r\n            regex: /<=/,\r\n            comment: \"transitions\"\r\n        }, {\r\n            token: \"keyword.control.transition.jssmArrow.forced_forced\",\r\n            regex: /<~>/,\r\n            comment: \"transitions\"\r\n        }, {\r\n            token: \"keyword.control.transition.jssmArrow.none_forced\",\r\n            regex: /~>/,\r\n            comment: \"transitions\"\r\n        }, {\r\n            token: \"keyword.control.transition.jssmArrow.forced_none\",\r\n            regex: /<~/,\r\n            comment: \"transitions\"\r\n        }, {\r\n            token: \"keyword.control.transition.jssmArrow.legal_main\",\r\n            regex: /<-=>/,\r\n            comment: \"transitions\"\r\n        }, {\r\n            token: \"keyword.control.transition.jssmArrow.main_legal\",\r\n            regex: /<=->/,\r\n            comment: \"transitions\"\r\n        }, {\r\n            token: \"keyword.control.transition.jssmArrow.legal_forced\",\r\n            regex: /<-~>/,\r\n            comment: \"transitions\"\r\n        }, {\r\n            token: \"keyword.control.transition.jssmArrow.forced_legal\",\r\n            regex: /<~->/,\r\n            comment: \"transitions\"\r\n        }, {\r\n            token: \"keyword.control.transition.jssmArrow.main_forced\",\r\n            regex: /<=~>/,\r\n            comment: \"transitions\"\r\n        }, {\r\n            token: \"keyword.control.transition.jssmArrow.forced_main\",\r\n            regex: /<~=>/,\r\n            comment: \"transitions\"\r\n        }, {\r\n            token: \"constant.numeric.jssmProbability\",\r\n            regex: /[0-9]+%/,\r\n            comment: \"edge probability annotation\"\r\n        }, {\r\n            token: \"constant.character.jssmAction\",\r\n            regex: /\\'[^']*\\'/,\r\n            comment: \"action annotation\"\r\n        }, {\r\n            token: \"entity.name.tag.jssmLabel.doublequoted\",\r\n            regex: /\\\"[^\"]*\\\"/,\r\n            comment: \"jssm label annotation\"\r\n        }, {\r\n            token: \"entity.name.tag.jssmLabel.atom\",\r\n            regex: /[a-zA-Z0-9_.+&()#@!?,]/,\r\n            comment: \"jssm label annotation\"\r\n        }]\r\n    };\r\n    \r\n    this.normalizeRules();\r\n};\r\n\r\nJSSMHighlightRules.metaData = {\r\n    fileTypes: [\"jssm\", \"jssm_state\"],\r\n    name: \"JSSM\",\r\n    scopeName: \"source.jssm\"\r\n};\r\n\r\n\r\noop.inherits(JSSMHighlightRules, TextHighlightRules);\r\n\r\nexports.JSSMHighlightRules = JSSMHighlightRules;\r\n});"]}