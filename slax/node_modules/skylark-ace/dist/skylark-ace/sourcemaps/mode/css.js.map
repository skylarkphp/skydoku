{"version":3,"sources":["mode/css.js"],"names":["define","require","exports","module","oop","TextMode","Mode","CssHighlightRules","MatchingBraceOutdent","WorkerClient","CssCompletions","CssBehaviour","CStyleFoldMode","FoldMode","this","HighlightRules","$outdent","$behaviour","$completer","foldingRules","inherits","blockComment","start","end","getNextLineIndent","state","line","tab","indent","$getIndent","tokens","getTokenizer","getLineTokens","length","type","match","checkOutdent","input","autoOutdent","doc","row","getCompletions","session","pos","prefix","createWorker","worker","attachToDocument","getDocument","on","e","setAnnotations","data","clearAnnotations","$id","call","prototype"],"mappings":";;;;;;;AA8BAA,OAAO,SAASC,EAASC,EAASC,GAClC,aAEA,IAAIC,EAAMH,EAAQ,cACdI,EAAWJ,EAAQ,UAAUK,KAC7BC,EAAoBN,EAAQ,yBAAyBM,kBACrDC,EAAuBP,EAAQ,4BAA4BO,qBAC3DC,EAAeR,EAAQ,2BAA2BQ,aAClDC,EAAiBT,EAAQ,qBAAqBS,eAC9CC,EAAeV,EAAQ,mBAAmBU,aAC1CC,EAAiBX,EAAQ,oBAAoBY,SAE7CP,EAAO,WACPQ,KAAKC,eAAiBR,EACtBO,KAAKE,SAAW,IAAIR,EACpBM,KAAKG,WAAa,IAAIN,EACtBG,KAAKI,WAAa,IAAIR,EACtBI,KAAKK,aAAe,IAAIP,GAE5BR,EAAIgB,SAASd,EAAMD,GAEnB,WAEIS,KAAKK,aAAe,SACpBL,KAAKO,cAAgBC,MAAO,KAAMC,IAAK,MAEvCT,KAAKU,kBAAoB,SAASC,EAAOC,EAAMC,GAC3C,IAAIC,EAASd,KAAKe,WAAWH,GAGzBI,EAAShB,KAAKiB,eAAeC,cAAcN,EAAMD,GAAOK,OAC5D,OAAIA,EAAOG,QAA0C,WAAhCH,EAAOA,EAAOG,OAAO,GAAGC,KAClCN,GAGCF,EAAKS,MAAM,eAEnBP,GAAUD,GAGPC,IAGXd,KAAKsB,aAAe,SAASX,EAAOC,EAAMW,GACtC,OAAOvB,KAAKE,SAASoB,aAAaV,EAAMW,IAG5CvB,KAAKwB,YAAc,SAASb,EAAOc,EAAKC,GACpC1B,KAAKE,SAASsB,YAAYC,EAAKC,IAGnC1B,KAAK2B,eAAiB,SAAShB,EAAOiB,EAASC,EAAKC,GAChD,OAAO9B,KAAKI,WAAWuB,eAAehB,EAAOiB,EAASC,EAAKC,IAG/D9B,KAAK+B,aAAe,SAASH,GACzB,IAAII,EAAS,IAAIrC,GAAc,OAAQ,sBAAuB,UAW9D,OAVAqC,EAAOC,iBAAiBL,EAAQM,eAEhCF,EAAOG,GAAG,WAAY,SAASC,GAC3BR,EAAQS,eAAeD,EAAEE,QAG7BN,EAAOG,GAAG,YAAa,WACnBP,EAAQW,qBAGLP,GAGXhC,KAAKwC,IAAM,gBACZC,KAAKjD,EAAKkD,WAEbtD,EAAQI,KAAOA","file":"../../mode/css.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2010, Ajax.org B.V.\r\n * All rights reserved.\r\n * \r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n * \r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\ndefine(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar TextMode = require(\"./text\").Mode;\r\nvar CssHighlightRules = require(\"./css_highlight_rules\").CssHighlightRules;\r\nvar MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\r\nvar WorkerClient = require(\"../worker/worker_client\").WorkerClient;\r\nvar CssCompletions = require(\"./css_completions\").CssCompletions;\r\nvar CssBehaviour = require(\"./behaviour/css\").CssBehaviour;\r\nvar CStyleFoldMode = require(\"./folding/cstyle\").FoldMode;\r\n\r\nvar Mode = function() {\r\n    this.HighlightRules = CssHighlightRules;\r\n    this.$outdent = new MatchingBraceOutdent();\r\n    this.$behaviour = new CssBehaviour();\r\n    this.$completer = new CssCompletions();\r\n    this.foldingRules = new CStyleFoldMode();\r\n};\r\noop.inherits(Mode, TextMode);\r\n\r\n(function() {\r\n\r\n    this.foldingRules = \"cStyle\";\r\n    this.blockComment = {start: \"/*\", end: \"*/\"};\r\n\r\n    this.getNextLineIndent = function(state, line, tab) {\r\n        var indent = this.$getIndent(line);\r\n\r\n        // ignore braces in comments\r\n        var tokens = this.getTokenizer().getLineTokens(line, state).tokens;\r\n        if (tokens.length && tokens[tokens.length-1].type == \"comment\") {\r\n            return indent;\r\n        }\r\n\r\n        var match = line.match(/^.*\\{\\s*$/);\r\n        if (match) {\r\n            indent += tab;\r\n        }\r\n\r\n        return indent;\r\n    };\r\n\r\n    this.checkOutdent = function(state, line, input) {\r\n        return this.$outdent.checkOutdent(line, input);\r\n    };\r\n\r\n    this.autoOutdent = function(state, doc, row) {\r\n        this.$outdent.autoOutdent(doc, row);\r\n    };\r\n\r\n    this.getCompletions = function(state, session, pos, prefix) {\r\n        return this.$completer.getCompletions(state, session, pos, prefix);\r\n    };\r\n\r\n    this.createWorker = function(session) {\r\n        var worker = new WorkerClient([\"ace\"], \"ace/mode/css_worker\", \"Worker\");\r\n        worker.attachToDocument(session.getDocument());\r\n\r\n        worker.on(\"annotate\", function(e) {\r\n            session.setAnnotations(e.data);\r\n        });\r\n\r\n        worker.on(\"terminate\", function() {\r\n            session.clearAnnotations();\r\n        });\r\n\r\n        return worker;\r\n    };\r\n\r\n    this.$id = \"ace/mode/css\";\r\n}).call(Mode.prototype);\r\n\r\nexports.Mode = Mode;\r\n\r\n});\r\n"]}