{"version":3,"sources":["mode/puppet_highlight_rules.js"],"names":["define","require","exports","module","oop","TextHighlightRules","PuppetHighlightRules","this","$rules","start","token","regex","push","next","include","defaultToken","blockComment","constants","variable","strings","escaped_chars","operators","normalizeRules","inherits"],"mappings":";;;;;;;AA8BAA,OAAO,SAAUC,QAASC,QAASC,QACnC,aAEA,IAAIC,EAAMH,QAAQ,cACdI,EAAqBJ,QAAQ,0BAA0BI,mBACvDC,EAAuB,WACvBC,KAAKC,QACDC,QAEQC,OAAQ,sBAAuB,wBAAyB,0BAA2B,yBACnFC,MAAO,sIAGPD,OAAQ,0BAA2B,uBAAwB,oBAC3DC,MAAO,6CACPC,OAEQF,MAAO,0BACPC,MAAO,MACPE,KAAM,QAELC,QAAS,cACTA,QAAS,aACTA,QAAS,YACTA,QAAS,cACTC,aAAc,aAGvBL,OAAQ,yBAA0B,oBAClCC,MAAO,4BAGPD,OAAQ,2BAA4B,+BAAgC,cACpEC,MAAO,uCAGPD,MAAO,4BACPC,MAAO,wEAIPD,MAAO,4BACPC,MAAO,WAGPD,MAAO,iCACPC,MAAO,mBACPC,KAAM,iBAGNF,MAAO,yBACPC,MAAO,gEAGPD,MAAO,yBACPC,MAAO,yHAGPD,MAAO,0BACPC,MAAO,ydAGPD,MAAO,wBACPC,MAAO,8PAIPD,MAAO,aACPC,MAAO,UAGPD,MAAO,aACPC,MAAO,YAEVG,QAAS,aACTA,QAAS,cACTA,QAAS,YACTA,QAAS,cAENJ,MAAO,6BACPC,MAAO,uBAGfK,eACIL,MAAO,mBACPD,MAAO,iCACPE,KAAM,iBAEND,MAAO,mBACPD,MAAO,+BACPG,KAAM,QAENE,aAAc,YAElBE,YAEQP,MAAO,2BACPC,MAAO,+HAGfO,WAEQR,MAAO,kBACPC,MAAO,iCAGfQ,UAEQT,MAAO,2BACPC,MAAO,IACPC,OAEQF,MAAO,2BACPC,MAAO,IACPE,KAAM,QAELC,QAAS,kBACTC,aAAc,aAGvBL,MAAO,2BACPC,MAAO,IACPC,OAEQF,MAAO,2BACPC,MAAO,IACPE,KAAM,QAELC,QAAS,kBACTA,QAAS,aACTC,aAAc,aAG/BK,gBAEQV,MAAO,+BACPC,MAAO,UAGfU,YAEQX,MAAO,mBACPC,MAAO,oHAInBJ,KAAKe,kBAITlB,EAAImB,SAASjB,EAAsBD,GAEnCH,QAAQI,qBAAuBA","file":"../../mode/puppet_highlight_rules.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2012, Ajax.org B.V.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\ndefine(function (require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\r\nvar PuppetHighlightRules = function () {\r\n    this.$rules = {\r\n        \"start\": [\r\n            {\r\n                token: ['keyword.type.puppet', 'constant.class.puppet', 'keyword.inherits.puppet', 'constant.class.puppet'],\r\n                regex: \"^\\\\s*(class)(\\\\s+(?:[-_A-Za-z0-9\\\".]+::)*[-_A-Za-z0-9\\\".]+\\\\s*)(?:(inherits\\\\s*)(\\\\s+(?:[-_A-Za-z0-9\\\".]+::)*[-_A-Za-z0-9\\\".]+\\\\s*))?\"\r\n            },\r\n            {\r\n                token: ['storage.function.puppet', 'name.function.puppet', 'punctuation.lpar'],\r\n                regex: \"(^\\\\s*define)(\\\\s+[a-zA-Z0-9_:]+\\\\s*)(\\\\()\",\r\n                push:\r\n                    [{\r\n                        token: 'punctuation.rpar.puppet',\r\n                        regex: \"\\\\)\",\r\n                        next: 'pop'\r\n                    },\r\n                        {include: \"constants\"},\r\n                        {include: \"variable\"},\r\n                        {include: \"strings\"},\r\n                        {include: \"operators\"},\r\n                        {defaultToken: 'string'}]\r\n            },\r\n            {\r\n                token: [\"language.support.class\", \"keyword.operator\"],\r\n                regex: \"\\\\b([a-zA-Z_]+)(\\\\s+=>)\"\r\n            },\r\n            {\r\n                token: [\"exported.resource.puppet\", \"keyword.name.resource.puppet\", \"paren.lpar\"],\r\n                regex: \"(\\\\@\\\\@)?(\\\\s*[a-zA-Z_]*)(\\\\s*\\\\{)\"\r\n            },\r\n            {\r\n                token: \"qualified.variable.puppet\",\r\n                regex: \"(\\\\$([a-z][a-z0-9_]*)?(::[a-z][a-z0-9_]*)*::[a-z0-9_][a-zA-Z0-9_]*)\"\r\n            },\r\n\r\n            {\r\n                token: \"singleline.comment.puppet\",\r\n                regex: '#(.)*$'\r\n            },\r\n            {\r\n                token: \"multiline.comment.begin.puppet\",\r\n                regex: '^\\\\s*\\\\/\\\\*\\\\s*$',\r\n                push: \"blockComment\"\r\n            },\r\n            {\r\n                token: \"keyword.control.puppet\",\r\n                regex: \"\\\\b(case|if|unless|else|elsif|in|default:|and|or)\\\\s+(?!::)\"\r\n            },\r\n            {\r\n                token: \"keyword.control.puppet\",\r\n                regex: \"\\\\b(import|default|inherits|include|require|contain|node|application|consumes|environment|site|function|produces)\\\\b\"\r\n            },\r\n            {\r\n                token: \"support.function.puppet\",\r\n                regex: \"\\\\b(lest|str2bool|escape|gsub|Timestamp|Timespan|with|alert|crit|debug|notice|sprintf|split|step|strftime|slice|shellquote|type|sha1|defined|scanf|reverse_each|regsubst|return|emerg|reduce|err|failed|fail|versioncmp|file|generate|then|info|realize|search|tag|tagged|template|epp|warning|hiera_include|each|assert_type|binary_file|create_resources|dig|digest|filter|lookup|find_file|fqdn_rand|hiera_array|hiera_hash|inline_epp|inline_template|map|match|md5|new|next)\\\\b\"\r\n            },\r\n            {\r\n                token: \"constant.types.puppet\",\r\n                regex: \"\\\\b(String|File|Package|Service|Class|Integer|Array|Catalogentry|Variant|Boolean|Undef|Number|Hash|Float|Numeric|NotUndef|Callable|Optional|Any|Regexp|Sensitive|Sensitive.new|Type|Resource|Default|Enum|Scalar|Collection|Data|Pattern|Tuple|Struct)\\\\b\"\r\n            },\r\n\r\n            {\r\n                token: \"paren.lpar\",\r\n                regex: \"[[({]\"\r\n            },\r\n            {\r\n                token: \"paren.rpar\",\r\n                regex: \"[\\\\])}]\"\r\n            },\r\n            {include: \"variable\"},\r\n            {include: \"constants\"},\r\n            {include: \"strings\"},\r\n            {include: \"operators\"},\r\n            {\r\n                token: \"regexp.begin.string.puppet\",\r\n                regex: \"\\\\s*(\\\\/(\\\\S)+)\\\\/\"\r\n            }\r\n        ],\r\n        blockComment: [{\r\n            regex: \"^\\\\s*\\\\/\\\\*\\\\s*$\",\r\n            token: \"multiline.comment.begin.puppet\",\r\n            push: \"blockComment\"\r\n        }, {\r\n            regex: \"^\\\\s*\\\\*\\\\/\\\\s*$\",\r\n            token: \"multiline.comment.end.puppet\",\r\n            next: \"pop\"\r\n        }, {\r\n            defaultToken: \"comment\"\r\n        }],\r\n        \"constants\": [\r\n            {\r\n                token: \"constant.language.puppet\",\r\n                regex: \"\\\\b(false|true|running|stopped|installed|purged|latest|file|directory|held|undef|present|absent|link|mounted|unmounted)\\\\b\"\r\n            }\r\n        ],\r\n        \"variable\": [\r\n            {\r\n                token: \"variable.puppet\",\r\n                regex: \"(\\\\$[a-z0-9_\\{][a-zA-Z0-9_]*)\"\r\n            }\r\n        ],\r\n        \"strings\": [\r\n            {\r\n                token: \"punctuation.quote.puppet\",\r\n                regex: \"'\",\r\n                push:\r\n                    [{\r\n                        token: 'punctuation.quote.puppet',\r\n                        regex: \"'\",\r\n                        next: 'pop'\r\n                    },\r\n                        {include: \"escaped_chars\"},\r\n                        {defaultToken: 'string'}]\r\n            },\r\n            {\r\n                token: \"punctuation.quote.puppet\",\r\n                regex: '\"',\r\n                push:\r\n                    [{\r\n                        token: 'punctuation.quote.puppet',\r\n                        regex: '\"',\r\n                        next: 'pop'\r\n                    },\r\n                        {include: \"escaped_chars\"},\r\n                        {include: \"variable\"},\r\n                        {defaultToken: 'string'}]\r\n            }\r\n        ],\r\n        \"escaped_chars\": [\r\n            {\r\n                token: \"constant.escaped_char.puppet\",\r\n                regex: \"\\\\\\\\.\"\r\n            }\r\n        ],\r\n        \"operators\": [\r\n            {\r\n                token: \"keyword.operator\",\r\n                regex: \"\\\\+\\\\.|\\\\-\\\\.|\\\\*\\\\.|\\\\/\\\\.|#|;;|\\\\+|\\\\-|\\\\*|\\\\*\\\\*\\\\/|\\\\/\\\\/|%|<<|>>|&|\\\\||\\\\^|~|<|>|<=|=>|==|!=|<>|<-|=|::|,\"\r\n            }\r\n        ]\r\n    };\r\n    this.normalizeRules();\r\n};\r\n\r\n\r\noop.inherits(PuppetHighlightRules, TextHighlightRules);\r\n\r\nexports.PuppetHighlightRules = PuppetHighlightRules;\r\n});\r\n"]}