{"version":3,"sources":["mode/d_highlight_rules.js"],"names":["define","require","exports","module","oop","DocCommentHighlightRules","TextHighlightRules","DHighlightRules","storages","stringEscapesSeq","token","regex","operators","keywordMapper","this","$keywords","createKeywordMapper","keyword.modifier","keyword.control","keyword.type","keyword","keyword.storage","punctation","keyword.operator","constant.language","identifierRe","$rules","start","getStartRule","next","onMatch","value","currentState","state","unshift","substr","star-comment","defaultToken","plus-comment","quote-string","backtick-string","operator-heredoc-string","substring","length","map",">","]",")","}","Object","keys","indexOf","shift","identifier-heredoc-string","d-asm","d-asm-instruction","embedRules","getEndRule","metaData","comment","fileTypes","firstLineMatch","foldingStartMarker","foldingStopMarker","keyEquivalent","name","scopeName","inherits"],"mappings":"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","file":"../../mode/d_highlight_rules.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2012, Ajax.org B.V.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\ndefine(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar DocCommentHighlightRules = require(\"./doc_comment_highlight_rules\").DocCommentHighlightRules;\r\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\r\n\r\nvar DHighlightRules = function() {\r\n\r\n    var keywords = (\r\n        \"this|super|import|module|body|mixin|__traits|invariant|alias|asm|delete|\"+\r\n        \"typeof|typeid|sizeof|cast|new|in|is|typedef|__vector|__parameters\"\r\n    );\r\n\r\n    var keywordControls = (\r\n        \"break|case|continue|default|do|else|for|foreach|foreach_reverse|goto|if|\" +\r\n        \"return|switch|while|catch|try|throw|finally|version|assert|unittest|with\"\r\n    );\r\n    \r\n    var types = (\r\n        \"auto|bool|char|dchar|wchar|byte|ubyte|float|double|real|\" +\r\n        \"cfloat|creal|cdouble|cent|ifloat|ireal|idouble|\" +\r\n        \"int|long|short|void|uint|ulong|ushort|ucent|\" +\r\n        \"function|delegate|string|wstring|dstring|size_t|ptrdiff_t|hash_t|Object\"\r\n    );\r\n\r\n    var modifiers = (\r\n        \"abstract|align|debug|deprecated|export|extern|const|final|in|inout|out|\" +\r\n        \"ref|immutable|lazy|nothrow|override|package|pragma|private|protected|\" +\r\n        \"public|pure|scope|shared|__gshared|synchronized|static|volatile\"\r\n    );\r\n    \r\n    var storages = (\r\n        \"class|struct|union|template|interface|enum|macro\"\r\n    );\r\n    \r\n    var stringEscapesSeq =  {\r\n        token: \"constant.language.escape\",\r\n        regex: \"\\\\\\\\(?:(?:x[0-9A-F]{2})|(?:[0-7]{1,3})|(?:['\\\"\\\\?0abfnrtv\\\\\\\\])|\" +\r\n            \"(?:u[0-9a-fA-F]{4})|(?:U[0-9a-fA-F]{8}))\"\r\n    };\r\n\r\n    var builtinConstants = (\r\n        \"null|true|false|\"+\r\n        \"__DATE__|__EOF__|__TIME__|__TIMESTAMP__|__VENDOR__|__VERSION__|\"+\r\n        \"__FILE__|__MODULE__|__LINE__|__FUNCTION__|__PRETTY_FUNCTION__\"\r\n    );\r\n    \r\n    var operators = (\r\n        \"/|/\\\\=|&|&\\\\=|&&|\\\\|\\\\|\\\\=|\\\\|\\\\||\\\\-|\\\\-\\\\=|\\\\-\\\\-|\\\\+|\" +\r\n        \"\\\\+\\\\=|\\\\+\\\\+|\\\\<|\\\\<\\\\=|\\\\<\\\\<|\\\\<\\\\<\\\\=|\\\\<\\\\>|\\\\<\\\\>\\\\=|\\\\>|\\\\>\\\\=|\\\\>\\\\>\\\\=|\" +\r\n        \"\\\\>\\\\>\\\\>\\\\=|\\\\>\\\\>|\\\\>\\\\>\\\\>|\\\\!|\\\\!\\\\=|\\\\!\\\\<\\\\>|\\\\!\\\\<\\\\>\\\\=|\\\\!\\\\<|\\\\!\\\\<\\\\=|\" +\r\n        \"\\\\!\\\\>|\\\\!\\\\>\\\\=|\\\\?|\\\\$|\\\\=|\\\\=\\\\=|\\\\*|\\\\*\\\\=|%|%\\\\=|\" +\r\n        \"\\\\^|\\\\^\\\\=|\\\\^\\\\^|\\\\^\\\\^\\\\=|~|~\\\\=|\\\\=\\\\>|#\"\r\n    );\r\n\r\n    var keywordMapper = this.$keywords = this.createKeywordMapper({\r\n        \"keyword.modifier\" : modifiers,\r\n        \"keyword.control\" :  keywordControls,\r\n        \"keyword.type\" :     types,\r\n        \"keyword\":           keywords,\r\n        \"keyword.storage\":   storages,\r\n        \"punctation\": \"\\\\.|\\\\,|;|\\\\.\\\\.|\\\\.\\\\.\\\\.\",\r\n        \"keyword.operator\" : operators,\r\n        \"constant.language\": builtinConstants\r\n    }, \"identifier\");\r\n    \r\n    var identifierRe = \"[a-zA-Z_\\u00a1-\\uffff][a-zA-Z\\\\d_\\u00a1-\\uffff]*\\\\b\";\r\n\r\n    // regexp must not have capturing parentheses. Use (?:) instead.\r\n    // regexps are ordered -> the first match is used\r\n\r\n    this.$rules = {\r\n        \"start\" : [\r\n            {     //-------------------------------------------------------- COMMENTS\r\n                token : \"comment\",\r\n                regex : \"\\\\/\\\\/.*$\"\r\n            },\r\n            DocCommentHighlightRules.getStartRule(\"doc-start\"),\r\n            {\r\n                token : \"comment\", // multi line comment\r\n                regex : \"\\\\/\\\\*\",\r\n                next : \"star-comment\"\r\n            }, {\r\n                token: \"comment.shebang\",\r\n                regex: \"^\\\\s*#!.*\"\r\n            }, {\r\n                token : \"comment\",\r\n                regex : \"\\\\/\\\\+\",\r\n                next: \"plus-comment\"\r\n            }, {  //-------------------------------------------------------- STRINGS\r\n                onMatch: function(value, currentState, state) {\r\n                    state.unshift(this.next, value.substr(2));\r\n                    return \"string\";\r\n                },\r\n                regex: 'q\"(?:[\\\\[\\\\(\\\\{\\\\<]+)',\r\n                next: 'operator-heredoc-string'\r\n            }, {\r\n                onMatch: function(value, currentState, state) {\r\n                    state.unshift(this.next, value.substr(2));\r\n                    return \"string\";\r\n                },\r\n                regex: 'q\"(?:[a-zA-Z_]+)$',\r\n                next: 'identifier-heredoc-string'\r\n            }, {\r\n                token : \"string\", // multi line string start\r\n                regex : '[xr]?\"',\r\n                next : \"quote-string\"\r\n            }, {\r\n                token : \"string\", // multi line string start\r\n                regex : '[xr]?`',\r\n                next : \"backtick-string\"\r\n            }, {\r\n                token : \"string\", // single line\r\n                regex : \"[xr]?['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?['][cdw]?\"\r\n            }, {  //-------------------------------------------------------- RULES\r\n                token: [\"keyword\", \"text\", \"paren.lparen\"],\r\n                regex: /(asm)(\\s*)({)/,\r\n                next: \"d-asm\"\r\n            }, {\r\n                token: [\"keyword\", \"text\", \"paren.lparen\", \"constant.language\"],\r\n                regex: \"(__traits)(\\\\s*)(\\\\()(\"+identifierRe+\")\"\r\n            }, { // import|module abc\r\n                token: [\"keyword\", \"text\", \"variable.module\"],\r\n                regex: \"(import|module)(\\\\s+)((?:\"+identifierRe+\"\\\\.?)*)\"\r\n            }, { // storage Name\r\n                token: [\"keyword.storage\", \"text\", \"entity.name.type\"],\r\n                regex: \"(\"+storages+\")(\\\\s*)(\"+identifierRe+\")\"\r\n            }, { // alias|typedef foo bar;\r\n                token: [\"keyword\", \"text\", \"variable.storage\", \"text\"],\r\n                regex: \"(alias|typedef)(\\\\s*)(\"+identifierRe+\")(\\\\s*)\"\r\n            }, {  //-------------------------------------------------------- OTHERS\r\n                token : \"constant.numeric\", // hex\r\n                regex : \"0[xX][0-9a-fA-F_]+(l|ul|u|f|F|L|U|UL)?\\\\b\"\r\n            }, {\r\n                token : \"constant.numeric\", // float\r\n                regex : \"[+-]?\\\\d[\\\\d_]*(?:(?:\\\\.[\\\\d_]*)?(?:[eE][+-]?[\\\\d_]+)?)?(l|ul|u|f|F|L|U|UL)?\\\\b\"\r\n            }, {\r\n                token: \"entity.other.attribute-name\",\r\n                regex: \"@\"+identifierRe\r\n            }, {\r\n                token : keywordMapper,\r\n                regex : \"[a-zA-Z_][a-zA-Z0-9_]*\\\\b\"\r\n            }, {\r\n                token : \"keyword.operator\",\r\n                regex : operators\r\n            }, {\r\n                token : \"punctuation.operator\",\r\n                regex : \"\\\\?|\\\\:|\\\\,|\\\\;|\\\\.|\\\\:\"\r\n            }, {\r\n                token : \"paren.lparen\",\r\n                regex : \"[[({]\"\r\n            }, {\r\n                token : \"paren.rparen\",\r\n                regex : \"[\\\\])}]\"\r\n            }, {\r\n                token : \"text\",\r\n                regex : \"\\\\s+\"\r\n            }\r\n        ],\r\n        \"star-comment\" : [\r\n            {\r\n                token : \"comment\", // closing comment\r\n                regex : \"\\\\*\\\\/\",\r\n                next : \"start\"\r\n            }, {\r\n                defaultToken: 'comment'\r\n            }\r\n        ],\r\n        \"plus-comment\" : [\r\n            {\r\n                token : \"comment\", // closing comment\r\n                regex : \"\\\\+\\\\/\",\r\n                next : \"start\"\r\n            }, {\r\n                defaultToken: 'comment'\r\n            }\r\n        ],\r\n        \r\n        \"quote-string\" : [\r\n           stringEscapesSeq,\r\n           {\r\n                token : \"string\",\r\n                regex : '\"[cdw]?',\r\n                next : \"start\"\r\n            }, {\r\n                defaultToken: 'string'\r\n            }\r\n        ],\r\n        \r\n        \"backtick-string\" : [\r\n           stringEscapesSeq,\r\n           {\r\n                token : \"string\",\r\n                regex : '`[cdw]?',\r\n                next : \"start\"\r\n            }, {\r\n                defaultToken: 'string'\r\n            }\r\n        ],\r\n        \r\n        \"operator-heredoc-string\": [\r\n            {\r\n                onMatch: function(value, currentState, state) {\r\n                    value = value.substring(value.length-2, value.length-1);\r\n                    var map = {'>':'<',']':'[',')':'(','}':'{'};\r\n                    if(Object.keys(map).indexOf(value) != -1)\r\n                        value = map[value];\r\n                    if(value != state[1]) return \"string\";\r\n                    state.shift();\r\n                    state.shift();\r\n                    \r\n                    return \"string\";\r\n                },\r\n                regex: '(?:[\\\\]\\\\)}>]+)\"',\r\n                next: 'start'\r\n            }, {\r\n                token: 'string',\r\n                regex: '[^\\\\]\\\\)}>]+'\r\n            }\r\n        ],\r\n        \r\n        \"identifier-heredoc-string\": [\r\n            {\r\n                onMatch: function(value, currentState, state) {\r\n                    value = value.substring(0, value.length-1);\r\n                    if(value != state[1]) return \"string\";\r\n                    state.shift();\r\n                    state.shift();\r\n                    \r\n                    return \"string\";\r\n                },\r\n                regex: '^(?:[A-Za-z_][a-zA-Z0-9]+)\"',\r\n                next: 'start'\r\n            }, {\r\n                token: 'string',\r\n                regex: '[^\\\\]\\\\)}>]+'\r\n            }\r\n        ],\r\n        \r\n        \"d-asm\": [\r\n            {\r\n                token: \"paren.rparen\",\r\n                regex: \"\\\\}\",\r\n                next: \"start\"\r\n            }, {\r\n                token: 'keyword.instruction',\r\n                regex: '[a-zA-Z]+',\r\n                next: 'd-asm-instruction' \r\n            }, {\r\n                token: \"text\",\r\n                regex: \"\\\\s+\"\r\n            }\r\n        ],\r\n        \r\n        // minimal asm support\r\n        'd-asm-instruction': [\r\n            {\r\n                token: 'constant.language',\r\n                regex: /AL|AH|AX|EAX|BL|BH|BX|EBX|CL|CH|CX|ECX|DL|DH|DX|EDX|BP|EBP|SP|ESP|DI|EDI|SI|ESI/i\r\n            }, {\r\n                token: 'identifier',\r\n                regex: '[a-zA-Z]+'\r\n            }, {\r\n                token: 'string',\r\n                regex: '\".*\"'\r\n            }, {\r\n                token: 'comment',\r\n                regex: '//.*$'\r\n            }, {\r\n                token: 'constant.numeric',\r\n                regex: '[0-9.xA-F]+'\r\n            }, {\r\n                token: 'punctuation.operator',\r\n                regex: '\\\\,'\r\n            }, {\r\n                token: 'punctuation.operator',\r\n                regex: ';',\r\n                next: 'd-asm'\r\n            }, {\r\n                token: 'text',\r\n                regex: '\\\\s+'\r\n            }\r\n        ]\r\n    };\r\n\r\n    this.embedRules(DocCommentHighlightRules, \"doc-\",\r\n        [ DocCommentHighlightRules.getEndRule(\"start\") ]);\r\n};\r\n\r\nDHighlightRules.metaData = {\r\n      comment: 'D language',\r\n      fileTypes: [ 'd', 'di' ],\r\n      firstLineMatch: '^#!.*\\\\b[glr]?dmd\\\\b.',\r\n      foldingStartMarker: '(?x)/\\\\*\\\\*(?!\\\\*)|^(?![^{]*?//|[^{]*?/\\\\*(?!.*?\\\\*/.*?\\\\{)).*?\\\\{\\\\s*($|//|/\\\\*(?!.*?\\\\*/.*\\\\S))',\r\n      foldingStopMarker: '(?<!\\\\*)\\\\*\\\\*/|^\\\\s*\\\\}',\r\n      keyEquivalent: '^~D',\r\n      name: 'D',\r\n      scopeName: 'source.d'\r\n};\r\noop.inherits(DHighlightRules, TextHighlightRules);\r\n\r\nexports.DHighlightRules = DHighlightRules;\r\n});\r\n"]}