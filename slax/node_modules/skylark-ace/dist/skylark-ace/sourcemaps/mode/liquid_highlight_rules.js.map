{"version":3,"sources":["mode/liquid_highlight_rules.js"],"names":["define","require","exports","module","oop","TextHighlightRules","HtmlHighlightRules","LiquidHighlightRules","call","this","keywordMapper","createKeywordMapper","variable.language","keyword","keyword.block","support.function","keyword.definition","rule","$rules","unshift","token","regex","push","addRules","liquid-start","next","normalizeRules","inherits"],"mappings":";;;;;;;AA8BAA,OAAO,SAASC,QAASC,QAASC,QAClC,aAEA,IAAIC,EAAMH,QAAQ,cACdI,EAAqBJ,QAAQ,0BAA0BI,mBACvDC,EAAqBL,QAAQ,0BAA0BK,mBAEvDC,EAAuB,WACvBD,EAAmBE,KAAKC,MAGxB,IAyBIC,EAAgBD,KAAKE,qBACrBC,oBARmB,uBASnBC,QApBW,oNAqBXC,gBAZS,qDAaTC,mBA7BY,yNA8BZC,qBAPc,UAQf,cAGH,IAAK,IAAIC,KAAQR,KAAKS,OAClBT,KAAKS,OAAOD,GAAME,SACdC,MAAQ,WACRC,MAAQ,KACRC,KAAO,iBAEPF,MAAQ,WACRC,MAAQ,KACRC,KAAO,iBAIfb,KAAKc,UACDC,iBACIJ,MAAO,WACPC,MAAO,KACPI,KAAM,QAENL,MAAO,WACPC,MAAO,KACPI,KAAM,QAENL,MAAQ,SACRC,MAAQ,uCAERD,MAAQ,SACRC,MAAQ,uCAERD,MAAQ,mBACRC,MAAQ,yBAERD,MAAQ,mBACRC,MAAQ,oDAERD,MAAQ,4BACRC,MAAQ,sBAERD,MAAQV,EACRW,MAAQ,gCAERD,MAAQ,mBACRC,MAAQ,8BAERD,MAAQ,eACRC,MAAQ,YAERD,MAAQ,eACRC,MAAQ,WAERD,MAAQ,OACRC,MAAQ,WAIhBZ,KAAKiB,kBAETtB,EAAIuB,SAASpB,EAAsBF,GAEnCH,QAAQK,qBAAuBA","file":"../../mode/liquid_highlight_rules.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2010, Ajax.org B.V.\r\n * All rights reserved.\r\n * \r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n * \r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\ndefine(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\r\nvar HtmlHighlightRules = require(\"./html_highlight_rules\").HtmlHighlightRules;\r\n\r\nvar LiquidHighlightRules = function() {\r\n    HtmlHighlightRules.call(this);\r\n\r\n    // see: https://developer.mozilla.org/en/Liquid/Reference/Global_Objects\r\n    var functions = (\r\n      // Standard Filters\r\n        \"date|capitalize|downcase|upcase|first|last|join|sort|map|size|escape|\" +\r\n         \"escape_once|strip_html|strip_newlines|newline_to_br|replace|replace_first|\" +\r\n         \"truncate|truncatewords|prepend|append|minus|plus|times|divided_by|split\"\r\n    );\r\n\r\n    var keywords = (\r\n      // Standard Tags\r\n        \"capture|endcapture|case|endcase|when|comment|endcomment|\" +\r\n        \"cycle|for|endfor|in|reversed|if|endif|else|elsif|include|endinclude|unless|endunless|\" +\r\n      // Commonly used tags\r\n        \"style|text|image|widget|plugin|marker|endmarker|tablerow|endtablerow\"\r\n    );\r\n    \r\n    // common standard block tags that require to be closed with an end[block] token\r\n    var blocks = 'for|if|case|capture|unless|tablerow|marker|comment';\r\n\r\n    var builtinVariables = 'forloop|tablerowloop';\r\n        // \"forloop\\\\.(length|index|index0|rindex|rindex0|first|last)|limit|offset|range\" +\r\n        // \"tablerowloop\\\\.(length|index|index0|rindex|rindex0|first|last|col|col0|\"+\r\n        // \"col_first|col_last)\"\r\n\r\n    var definitions = (\"assign\");\r\n\r\n    var keywordMapper = this.createKeywordMapper({\r\n        \"variable.language\": builtinVariables,\r\n        \"keyword\": keywords,\r\n        \"keyword.block\": blocks,\r\n        \"support.function\": functions,\r\n        \"keyword.definition\": definitions\r\n    }, \"identifier\");\r\n\r\n    // add liquid start tags to the HTML start tags\r\n    for (var rule in this.$rules) {\r\n        this.$rules[rule].unshift({\r\n            token : \"variable\",\r\n            regex : \"{%\",\r\n            push : \"liquid-start\"\r\n        }, {\r\n            token : \"variable\",\r\n            regex : \"{{\",\r\n            push : \"liquid-start\"\r\n        });\r\n    }\r\n\r\n    this.addRules({\r\n        \"liquid-start\" : [{\r\n            token: \"variable\",\r\n            regex: \"}}\",\r\n            next: \"pop\"\r\n        }, {\r\n            token: \"variable\",\r\n            regex: \"%}\",\r\n            next: \"pop\"\r\n        }, {\r\n            token : \"string\", // single line\r\n            regex : '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'\r\n        }, {\r\n            token : \"string\", // single line\r\n            regex : \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\r\n        }, {\r\n            token : \"constant.numeric\", // hex\r\n            regex : \"0[xX][0-9a-fA-F]+\\\\b\"\r\n        }, {\r\n            token : \"constant.numeric\", // float\r\n            regex : \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"\r\n        }, {\r\n            token : \"constant.language.boolean\",\r\n            regex : \"(?:true|false)\\\\b\"\r\n        }, {\r\n            token : keywordMapper,\r\n            regex : \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\r\n        }, {\r\n            token : \"keyword.operator\",\r\n            regex : \"/|\\\\*|\\\\-|\\\\+|=|!=|\\\\?\\\\:\"\r\n        }, {\r\n            token : \"paren.lparen\",\r\n            regex : /[\\[\\({]/\r\n        }, {\r\n            token : \"paren.rparen\",\r\n            regex : /[\\])}]/\r\n        }, {\r\n            token : \"text\",\r\n            regex : \"\\\\s+\"\r\n        }]\r\n    });\r\n\r\n    this.normalizeRules();\r\n};\r\noop.inherits(LiquidHighlightRules, TextHighlightRules);\r\n\r\nexports.LiquidHighlightRules = LiquidHighlightRules;\r\n});\r\n"]}