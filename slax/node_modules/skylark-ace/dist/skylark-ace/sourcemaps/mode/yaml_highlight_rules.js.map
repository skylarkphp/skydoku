{"version":3,"sources":["mode/yaml_highlight_rules.js"],"names":["define","require","exports","module","oop","TextHighlightRules","YamlHighlightRules","this","$rules","start","token","regex","onMatch","val","state","stack","line","indent","exec","length","push","next","mlString","splice","normalizeRules","inherits"],"mappings":";;;;;;;AA8BAA,OAAO,SAASC,EAASC,EAASC,GAClC,aAEA,IAAIC,EAAMH,EAAQ,cACdI,EAAqBJ,EAAQ,0BAA0BI,mBAEvDC,EAAqB,WAIrBC,KAAKC,QACDC,QAEQC,MAAQ,UACRC,MAAQ,SAERD,MAAQ,cACRC,MAAQ,8BAERD,MAAQ,cACRC,MAAQ,sBAERD,MAAO,WACPC,MAAO,eAEPD,MAAO,oBACPC,MAAO,yBAEPD,OAAQ,WAAY,WACpBC,MAAO,2BAEPD,OAAQ,WAAY,WACpBC,MAAO,yBAEPD,MAAQ,mBACRC,MAAQ,gBAERD,MAAQ,mBACRC,MAAQ,iBAERD,MAAQ,SACRC,MAAQ,uCAERD,MAAQ,SACRC,MAAQ,iBACRC,QAAS,SAASC,EAAKC,EAAOC,EAAOC,GACjC,IAAIC,EAAS,OAAOC,KAAKF,GAAM,GAa/B,OAZID,EAAMI,OAAS,EACfJ,EAAMK,KAAKb,KAAKc,MAEhBN,EAAM,GAAK,WAGXA,EAAMI,OAAS,EACfJ,EAAMK,KAAKH,EAAOE,QAGlBJ,EAAM,GAAKE,EAAOE,OAEfZ,KAAKG,OAEhBW,KAAO,aAEPX,MAAQ,SACRC,MAAQ,uCAERD,MAAQ,mBACRC,MAAQ,2EAERD,MAAQ,mBACRC,MAAQ,gDAERD,MAAQ,4BACRC,MAAQ,sDAERD,MAAQ,eACRC,MAAQ,UAERD,MAAQ,eACRC,MAAQ,YAERD,MAAQ,OACRC,MAAQ,qBAGhBW,WAEQZ,MAAQ,SACRC,MAAQ,UAERD,MAAQ,SACRC,MAAQ,OACRC,QAAS,SAASC,EAAKC,EAAOC,GAU1B,OATgBA,EAAM,IAELF,EAAIM,QACjBZ,KAAKc,KAAO,QACZN,EAAMQ,OAAO,IAGbhB,KAAKc,KAAO,WAETd,KAAKG,OAEhBW,KAAO,aAEPX,MAAQ,SACRC,MAAQ,QAGpBJ,KAAKiB,kBAITpB,EAAIqB,SAASnB,EAAoBD,GAEjCH,EAAQI,mBAAqBA","file":"../../mode/yaml_highlight_rules.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2010, Ajax.org B.V.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\ndefine(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\r\n\r\nvar YamlHighlightRules = function() {\r\n\r\n    // regexp must not have capturing parentheses. Use (?:) instead.\r\n    // regexps are ordered -> the first match is used\r\n    this.$rules = {\r\n        \"start\" : [\r\n            {\r\n                token : \"comment\",\r\n                regex : \"#.*$\"\r\n            }, {\r\n                token : \"list.markup\",\r\n                regex : /^(?:-{3}|\\.{3})\\s*(?=#|$)/\r\n            },  {\r\n                token : \"list.markup\",\r\n                regex : /^\\s*[\\-?](?:$|\\s)/\r\n            }, {\r\n                token: \"constant\",\r\n                regex: \"!![\\\\w//]+\"\r\n            }, {\r\n                token: \"constant.language\",\r\n                regex: \"[&\\\\*][a-zA-Z0-9-_]+\"\r\n            }, {\r\n                token: [\"meta.tag\", \"keyword\"],\r\n                regex: /^(\\s*\\w.*?)(:(?=\\s|$))/\r\n            },{\r\n                token: [\"meta.tag\", \"keyword\"],\r\n                regex: /(\\w+?)(\\s*:(?=\\s|$))/\r\n            }, {\r\n                token : \"keyword.operator\",\r\n                regex : \"<<\\\\w*:\\\\w*\"\r\n            }, {\r\n                token : \"keyword.operator\",\r\n                regex : \"-\\\\s*(?=[{])\"\r\n            }, {\r\n                token : \"string\", // single line\r\n                regex : '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'\r\n            }, {\r\n                token : \"string\", // multi line string start\r\n                regex : /[|>][-+\\d\\s]*$/,\r\n                onMatch: function(val, state, stack, line) {\r\n                    var indent = /^\\s*/.exec(line)[0];\r\n                    if (stack.length < 1) {\r\n                        stack.push(this.next);\r\n                    } else {\r\n                        stack[0] = \"mlString\";\r\n                    }\r\n\r\n                    if (stack.length < 2) {\r\n                        stack.push(indent.length);\r\n                    }\r\n                    else {\r\n                        stack[1] = indent.length;\r\n                    }\r\n                    return this.token;\r\n                },\r\n                next : \"mlString\"\r\n            }, {\r\n                token : \"string\", // single quoted string\r\n                regex : \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\r\n            }, {\r\n                token : \"constant.numeric\", // float\r\n                regex : /(\\b|[+\\-\\.])[\\d_]+(?:(?:\\.[\\d_]*)?(?:[eE][+\\-]?[\\d_]+)?)(?=[^\\d-\\w]|$)/\r\n            }, {\r\n                token : \"constant.numeric\", // other number\r\n                regex : /[+\\-]?\\.inf\\b|NaN\\b|0x[\\dA-Fa-f_]+|0b[10_]+/\r\n            }, {\r\n                token : \"constant.language.boolean\",\r\n                regex : \"\\\\b(?:true|false|TRUE|FALSE|True|False|yes|no)\\\\b\"\r\n            }, {\r\n                token : \"paren.lparen\",\r\n                regex : \"[[({]\"\r\n            }, {\r\n                token : \"paren.rparen\",\r\n                regex : \"[\\\\])}]\"\r\n            }, {\r\n                token : \"text\",\r\n                regex : /[^\\s,:\\[\\]\\{\\}]+/\r\n            }\r\n        ],\r\n        \"mlString\" : [\r\n            {\r\n                token : \"indent\",\r\n                regex : /^\\s*$/\r\n            }, {\r\n                token : \"indent\",\r\n                regex : /^\\s*/,\r\n                onMatch: function(val, state, stack) {\r\n                    var curIndent = stack[1];\r\n\r\n                    if (curIndent >= val.length) {\r\n                        this.next = \"start\";\r\n                        stack.splice(0);\r\n                    }\r\n                    else {\r\n                        this.next = \"mlString\";\r\n                    }\r\n                    return this.token;\r\n                },\r\n                next : \"mlString\"\r\n            }, {\r\n                token : \"string\",\r\n                regex : '.+'\r\n            }\r\n        ]};\r\n    this.normalizeRules();\r\n\r\n};\r\n\r\noop.inherits(YamlHighlightRules, TextHighlightRules);\r\n\r\nexports.YamlHighlightRules = YamlHighlightRules;\r\n});\r\n"]}