{"version":3,"sources":["mode/drools_highlight_rules.js"],"names":["define","require","exports","module","oop","TextHighlightRules","JavaHighlightRules","DocCommentHighlightRules","identifierRe","packageIdentifierRe","DroolsHighlightRules","returnRule","keywordMapper","this","createKeywordMapper","variable.language","keyword","constant.language","support.class","support.function","$rules","start","concat","blockCommentRules","token","regex","getStartRule","next","basicPreRules","block.comment","defaultToken","asset.name","embedRules","getEndRule","inherits"],"mappings":";;;;;;;AA8BAA,OAAO,SAASC,EAASC,EAASC,GAClC,aAEA,IAAIC,EAAMH,EAAQ,cACdI,EAAqBJ,EAAQ,0BAA0BI,mBACvDC,EAAqBL,EAAQ,0BAA0BK,mBACvDC,EAA2BN,EAAQ,iCAAiCM,yBAEpEC,EAAe,qCACfC,EAAsB,wCAEtBC,EAAuB,WAEvB,IAmFmCC,EA5C/BC,EAAgBC,KAAKC,qBACrBC,oBAAqB,OACrBC,QAzCW,2rBA0CXC,oBAAqB,OACrBC,gBA/BgB,m6CAgChBC,mBAAqB,gCACtB,cAwEHN,KAAKO,QACDC,SAAaC,OAzDK,SAASC,GAC3B,QACIC,MAAQ,UACRC,MAAQ,aAEZlB,EAAyBmB,aAAa,cAElCF,MAAQ,UACRC,MAAQ,SACRE,KAAOJ,IAEPC,MAAQ,mBACRC,MAAQ,yBAERD,MAAQ,mBACRC,MAAQ,oDAERD,MAAQ,4BACRC,MAAQ,sBAuCQG,CAAc,mBAE1BJ,MAAQ,mBACRC,MAAQ,iCAGRD,OAAS,UAAU,OAAO,oBAC1BC,MAAQ,mBAAqBhB,EAAqB,MAGlDe,OAAS,UAAU,OAAO,UAAU,OAAO,oBAC3CC,MAAQ,kCAAoChB,EAAqB,MAGjEe,OAAS,UAAU,OAAO,oBAC1BC,MAAQ,kBAAoBhB,EAAqB,MAGjDe,OAAS,UAAU,OAAO,mBAAmB,OAAO,YACpDC,MAAQ,kBAAoBhB,EAAqB,WAAaD,EAAc,MAG5EgB,OAAS,UAAU,OAAO,UAAU,OAAO,oBAC3CC,MAAQ,gCAAkCjB,EAAc,MAGxDgB,OAAS,UAAU,OAAO,oBAC1BC,MAAQ,mBAAqBjB,EAAc,MAG3CgB,OAAS,UAAU,OAAO,oBAC1BC,MAAQ,mBAAqBhB,EAAqB,MAGlDe,OAAS,UAAU,QACnBC,MAAQ,eACRE,KAAQ,iBAtGhBH,MAAQ,SACRC,MAAQ,uCAERD,MAAQ,SACRC,MAAQ,yCAuGAD,OAAS,iBAAiB,OAAO,QACjCC,MAAQ,IAAMjB,EAAe,eAG7BgB,OAAS,UAAU,QACnBC,MAAQ,gBACRE,KAAQ,eAGRH,OAAS,UAAU,QACnBC,MAAQ,iBAGRD,OAAS,UAAU,QACnBC,MAAQ,eACRE,KAAQ,eAENH,MAAQ,eACRC,MAAQ,WAERD,MAAQ,eACRC,MAAQ,aAnFdD,MAAQZ,EAGRa,MAAQ,gCAERD,MAAQ,mBACRC,MAAQ,6KAERD,MAAQ,SACRC,MAAQ,UAERD,MAAQ,SACRC,MAAQ,YAERD,MAAQ,OACRC,MAAQ,UAsEZI,iBAnG+BlB,EAmGK,UAhG5Ba,MAAQ,gBACRC,MAAQ,SACRE,KAAOhB,IAEPmB,aAAe,mBA6FvBC,eAEQP,MAAQ,cACRC,MAAQ,uCAERD,MAAQ,cACRC,MAAQ,uCAERD,MAAQ,cACRC,MAAQjB,IAERiB,MAAO,GACPD,MAAO,QACPG,KAAM,WAGlBd,KAAKmB,WAAWzB,EAA0B,QACpCA,EAAyB0B,WAAW,WAE1CpB,KAAKmB,WAAW1B,EAAoB,UAEjCkB,MAAQ,mBACRC,MAAO,yCAEPD,MAAQ,UACRC,MAAO,YACPE,KAAQ,YAKfvB,EAAI8B,SAASxB,EAAsBL,GAEnCH,EAAQQ,qBAAuBA","file":"../../mode/drools_highlight_rules.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2012, Ajax.org B.V.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\ndefine(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\r\nvar JavaHighlightRules = require(\"./java_highlight_rules\").JavaHighlightRules;\r\nvar DocCommentHighlightRules = require(\"./doc_comment_highlight_rules\").DocCommentHighlightRules;\r\n\r\nvar identifierRe = \"[a-zA-Z\\\\$_\\u00a1-\\uffff][a-zA-Z\\\\d\\\\$_\\u00a1-\\uffff]*\";\r\nvar packageIdentifierRe = \"[a-zA-Z\\\\$_\\u00a1-\\uffff][\\\\.a-zA-Z\\\\d\\\\$_\\u00a1-\\uffff]*\";\r\n\r\nvar DroolsHighlightRules = function() {\r\n\r\n    var keywords = (\"date|effective|expires|lock|on|active|no|loop|auto|focus\" +\r\n        \"|activation|group|agenda|ruleflow|duration|timer|calendars|refract|direct\" +\r\n        \"|dialect|salience|enabled|attributes|extends|template\" +\r\n        \"|function|contains|matches|eval|excludes|soundslike\" +\r\n        \"|memberof|not|in|or|and|exists|forall|over|from|entry|point|accumulate|acc|collect\" +\r\n        \"|action|reverse|result|end|init|instanceof|extends|super|boolean|char|byte|short\" +\r\n        \"|int|long|float|double|this|void|class|new|case|final|if|else|for|while|do\" +\r\n        \"|default|try|catch|finally|switch|synchronized|return|throw|break|continue|assert\" +\r\n        \"|modify|static|public|protected|private|abstract|native|transient|volatile\" +\r\n        \"|strictfp|throws|interface|enum|implements|type|window|trait|no-loop|str\"\r\n      );\r\n\r\n      var langClasses = (\r\n          \"AbstractMethodError|AssertionError|ClassCircularityError|\"+\r\n          \"ClassFormatError|Deprecated|EnumConstantNotPresentException|\"+\r\n          \"ExceptionInInitializerError|IllegalAccessError|\"+\r\n          \"IllegalThreadStateException|InstantiationError|InternalError|\"+\r\n          \"NegativeArraySizeException|NoSuchFieldError|Override|Process|\"+\r\n          \"ProcessBuilder|SecurityManager|StringIndexOutOfBoundsException|\"+\r\n          \"SuppressWarnings|TypeNotPresentException|UnknownError|\"+\r\n          \"UnsatisfiedLinkError|UnsupportedClassVersionError|VerifyError|\"+\r\n          \"InstantiationException|IndexOutOfBoundsException|\"+\r\n          \"ArrayIndexOutOfBoundsException|CloneNotSupportedException|\"+\r\n          \"NoSuchFieldException|IllegalArgumentException|NumberFormatException|\"+\r\n          \"SecurityException|Void|InheritableThreadLocal|IllegalStateException|\"+\r\n          \"InterruptedException|NoSuchMethodException|IllegalAccessException|\"+\r\n          \"UnsupportedOperationException|Enum|StrictMath|Package|Compiler|\"+\r\n          \"Readable|Runtime|StringBuilder|Math|IncompatibleClassChangeError|\"+\r\n          \"NoSuchMethodError|ThreadLocal|RuntimePermission|ArithmeticException|\"+\r\n          \"NullPointerException|Long|Integer|Short|Byte|Double|Number|Float|\"+\r\n          \"Character|Boolean|StackTraceElement|Appendable|StringBuffer|\"+\r\n          \"Iterable|ThreadGroup|Runnable|Thread|IllegalMonitorStateException|\"+\r\n          \"StackOverflowError|OutOfMemoryError|VirtualMachineError|\"+\r\n          \"ArrayStoreException|ClassCastException|LinkageError|\"+\r\n          \"NoClassDefFoundError|ClassNotFoundException|RuntimeException|\"+\r\n          \"Exception|ThreadDeath|Error|Throwable|System|ClassLoader|\"+\r\n          \"Cloneable|Class|CharSequence|Comparable|String|Object\"\r\n      );\r\n\r\n    var keywordMapper = this.createKeywordMapper({\r\n        \"variable.language\": \"this\",\r\n        \"keyword\": keywords,\r\n        \"constant.language\": \"null\",\r\n        \"support.class\" : langClasses,\r\n        \"support.function\" : \"retract|update|modify|insert\"\r\n    }, \"identifier\");\r\n\r\n    // regexp must not have capturing parentheses. Use (?:) instead.\r\n    // regexps are ordered -> the first match is used\r\n\r\n    var stringRules = function() {\r\n      return [{\r\n        token : \"string\", // single line\r\n        regex : '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'\r\n      }, {\r\n        token : \"string\", // single line\r\n        regex : \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\r\n      }];\r\n    };\r\n\r\n\r\n      var basicPreRules = function(blockCommentRules) {\r\n        return [{\r\n            token : \"comment\",\r\n            regex : \"\\\\/\\\\/.*$\"\r\n        },\r\n        DocCommentHighlightRules.getStartRule(\"doc-start\"),\r\n        {\r\n            token : \"comment\", // multi line comment\r\n            regex : \"\\\\/\\\\*\",\r\n            next : blockCommentRules\r\n        }, {\r\n            token : \"constant.numeric\", // hex\r\n            regex : \"0[xX][0-9a-fA-F]+\\\\b\"\r\n        }, {\r\n            token : \"constant.numeric\", // float\r\n            regex : \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"\r\n        }, {\r\n            token : \"constant.language.boolean\",\r\n            regex : \"(?:true|false)\\\\b\"\r\n          }];\r\n      };\r\n\r\n      var blockCommentRules = function(returnRule) {\r\n        return [\r\n            {\r\n                token : \"comment.block\", // closing comment\r\n                regex : \"\\\\*\\\\/\",\r\n                next : returnRule\r\n            }, {\r\n                defaultToken : \"comment.block\"\r\n            }\r\n        ];\r\n      };\r\n\r\n      var basicPostRules = function() {\r\n        return [{\r\n            token : keywordMapper,\r\n            // TODO: Unicode escape sequences\r\n            // TODO: Unicode identifiers\r\n            regex : \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\r\n        }, {\r\n            token : \"keyword.operator\",\r\n            regex : \"!|\\\\$|%|&|\\\\*|\\\\-\\\\-|\\\\-|\\\\+\\\\+|\\\\+|~|===|==|=|!=|!==|<=|>=|<<=|>>=|>>>=|<>|<|>|!|&&|\\\\|\\\\||\\\\?\\\\:|\\\\*=|%=|\\\\+=|\\\\-=|&=|\\\\^=|\\\\b(?:in|instanceof|new|delete|typeof|void)\"\r\n        }, {\r\n            token : \"lparen\",\r\n            regex : \"[[({]\"\r\n        }, {\r\n            token : \"rparen\",\r\n            regex : \"[\\\\])}]\"\r\n        }, {\r\n            token : \"text\",\r\n            regex : \"\\\\s+\"\r\n        }];\r\n      };\r\n\r\n\r\n    this.$rules = {\r\n        \"start\" : [].concat(basicPreRules(\"block.comment\"), [\r\n              {\r\n                token : \"entity.name.type\",\r\n                regex : \"@[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\r\n              }, {\r\n                // package com.example\r\n                token : [\"keyword\",\"text\",\"entity.name.type\"],\r\n                regex : \"(package)(\\\\s+)(\" + packageIdentifierRe +\")\"\r\n              }, {\r\n                // import function com.Util.staticMethod\r\n                token : [\"keyword\",\"text\",\"keyword\",\"text\",\"entity.name.type\"],\r\n                regex : \"(import)(\\\\s+)(function)(\\\\s+)(\" + packageIdentifierRe +\")\"\r\n              }, {\r\n                // import function com.Util.staticMethod\r\n                token : [\"keyword\",\"text\",\"entity.name.type\"],\r\n                regex : \"(import)(\\\\s+)(\" + packageIdentifierRe +\")\"\r\n              }, {\r\n                // global com.example.Type identifier\r\n                token : [\"keyword\",\"text\",\"entity.name.type\",\"text\",\"variable\"],\r\n                regex : \"(global)(\\\\s+)(\" + packageIdentifierRe +\")(\\\\s+)(\" + identifierRe +\")\"\r\n              }, {\r\n                // declare trait DeclaredType\r\n                token : [\"keyword\",\"text\",\"keyword\",\"text\",\"entity.name.type\"],\r\n                regex : \"(declare)(\\\\s+)(trait)(\\\\s+)(\" + identifierRe +\")\"\r\n              }, {\r\n                // declare trait DeclaredType\r\n                token : [\"keyword\",\"text\",\"entity.name.type\"],\r\n                regex : \"(declare)(\\\\s+)(\" + identifierRe +\")\"\r\n              }, {\r\n                // declare trait DeclaredType\r\n                token : [\"keyword\",\"text\",\"entity.name.type\"],\r\n                regex : \"(extends)(\\\\s+)(\" + packageIdentifierRe +\")\"\r\n              }, {\r\n                // rule ...\r\n                token : [\"keyword\",\"text\"],\r\n                regex : \"(rule)(\\\\s+)\",\r\n                next :  \"asset.name\"\r\n              }],\r\n              stringRules(),\r\n              [{\r\n                // variable :\r\n                token : [\"variable.other\",\"text\",\"text\"],\r\n                regex : \"(\" + identifierRe + \")(\\\\s*)(:)\"\r\n              }, {\r\n                // query ...\r\n                token : [\"keyword\",\"text\"],\r\n                regex : \"(query)(\\\\s+)\",\r\n                next :  \"asset.name\"\r\n              }, {\r\n                // when ...\r\n                token : [\"keyword\",\"text\"],\r\n                regex : \"(when)(\\\\s*)\"\r\n              }, {\r\n                // then <java/mvel code> end\r\n                token : [\"keyword\",\"text\"],\r\n                regex : \"(then)(\\\\s*)\",\r\n                next :  \"java-start\"\r\n              }, {\r\n                  token : \"paren.lparen\",\r\n                  regex : /[\\[({]/\r\n              }, {\r\n                  token : \"paren.rparen\",\r\n                  regex : /[\\])}]/\r\n              }], basicPostRules()),\r\n        \"block.comment\" : blockCommentRules(\"start\"),\r\n        \"asset.name\" : [\r\n            {\r\n                token : \"entity.name\",\r\n                regex : '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'\r\n            }, {\r\n                token : \"entity.name\",\r\n                regex : \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\r\n            }, {\r\n                token : \"entity.name\",\r\n                regex : identifierRe\r\n            }, {\r\n                regex: \"\",\r\n                token: \"empty\",\r\n                next: \"start\"\r\n            }]\r\n    };\r\n    this.embedRules(DocCommentHighlightRules, \"doc-\",\r\n        [ DocCommentHighlightRules.getEndRule(\"start\") ]);\r\n\r\n    this.embedRules(JavaHighlightRules, \"java-\", [\r\n      {\r\n       token : \"support.function\",\r\n       regex: \"\\\\b(insert|modify|retract|update)\\\\b\"\r\n     }, {\r\n       token : \"keyword\",\r\n       regex: \"\\\\bend\\\\b\",\r\n       next  : \"start\"\r\n    }]);\r\n\r\n};\r\n\r\noop.inherits(DroolsHighlightRules, TextHighlightRules);\r\n\r\nexports.DroolsHighlightRules = DroolsHighlightRules;\r\n});\r\n"]}