{"version":3,"sources":["mode/golang.js"],"names":["define","require","exports","module","oop","TextMode","Mode","GolangHighlightRules","MatchingBraceOutdent","CstyleBehaviour","CStyleFoldMode","FoldMode","this","HighlightRules","$outdent","foldingRules","$behaviour","inherits","lineCommentStart","blockComment","start","end","getNextLineIndent","state","line","tab","indent","$getIndent","tokenizedLine","getTokenizer","getLineTokens","tokens","length","type","match","checkOutdent","input","autoOutdent","doc","row","$id","call","prototype"],"mappings":";;;;;;;AAAAA,OAAO,SAASC,QAASC,QAASC,QAElC,IAAIC,EAAMH,QAAQ,cACdI,EAAWJ,QAAQ,UAAUK,KAC7BC,EAAuBN,QAAQ,4BAA4BM,qBAC3DC,EAAuBP,QAAQ,4BAA4BO,qBAC3DC,EAAkBR,QAAQ,sBAAsBQ,gBAChDC,EAAiBT,QAAQ,oBAAoBU,SAE7CL,EAAO,WACPM,KAAKC,eAAiBN,EACtBK,KAAKE,SAAW,IAAIN,EACpBI,KAAKG,aAAe,IAAIL,EACxBE,KAAKI,WAAa,IAAIP,GAE1BL,EAAIa,SAASX,EAAMD,GAEnB,WAEIO,KAAKM,iBAAmB,KACxBN,KAAKO,cAAgBC,MAAO,KAAMC,IAAK,MAEvCT,KAAKU,kBAAoB,SAASC,EAAOC,EAAMC,GAC3C,IAAIC,EAASd,KAAKe,WAAWH,GAEzBI,EAAgBhB,KAAKiB,eAAeC,cAAcN,EAAMD,GACxDQ,EAASH,EAAcG,OACZH,EAAcL,MAE7B,GAAIQ,EAAOC,QAA0C,WAAhCD,EAAOA,EAAOC,OAAO,GAAGC,KACzC,OAAOP,EAGE,SAATH,IACYC,EAAKU,MAAM,qBAEnBR,GAAUD,IAIlB,OAAOC,GAGXd,KAAKuB,aAAe,SAASZ,EAAOC,EAAMY,GACtC,OAAOxB,KAAKE,SAASqB,aAAaX,EAAMY,IAG5CxB,KAAKyB,YAAc,SAASd,EAAOe,EAAKC,GACpC3B,KAAKE,SAASuB,YAAYC,EAAKC,IAGnC3B,KAAK4B,IAAM,mBACZC,KAAKnC,EAAKoC,WAEbxC,QAAQI,KAAOA","file":"../../mode/golang.js","sourcesContent":["define(function(require, exports, module) {\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar TextMode = require(\"./text\").Mode;\r\nvar GolangHighlightRules = require(\"./golang_highlight_rules\").GolangHighlightRules;\r\nvar MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\r\nvar CstyleBehaviour = require(\"./behaviour/cstyle\").CstyleBehaviour;\r\nvar CStyleFoldMode = require(\"./folding/cstyle\").FoldMode;\r\n\r\nvar Mode = function() {\r\n    this.HighlightRules = GolangHighlightRules;\r\n    this.$outdent = new MatchingBraceOutdent();\r\n    this.foldingRules = new CStyleFoldMode();\r\n    this.$behaviour = new CstyleBehaviour();\r\n};\r\noop.inherits(Mode, TextMode);\r\n\r\n(function() {\r\n    \r\n    this.lineCommentStart = \"//\";\r\n    this.blockComment = {start: \"/*\", end: \"*/\"};\r\n\r\n    this.getNextLineIndent = function(state, line, tab) {\r\n        var indent = this.$getIndent(line);\r\n\r\n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\r\n        var tokens = tokenizedLine.tokens;\r\n        var endState = tokenizedLine.state;\r\n\r\n        if (tokens.length && tokens[tokens.length-1].type == \"comment\") {\r\n            return indent;\r\n        }\r\n        \r\n        if (state == \"start\") {\r\n            var match = line.match(/^.*[\\{\\(\\[]\\s*$/);\r\n            if (match) {\r\n                indent += tab;\r\n            }\r\n        }\r\n\r\n        return indent;\r\n    };//end getNextLineIndent\r\n\r\n    this.checkOutdent = function(state, line, input) {\r\n        return this.$outdent.checkOutdent(line, input);\r\n    };\r\n\r\n    this.autoOutdent = function(state, doc, row) {\r\n        this.$outdent.autoOutdent(doc, row);\r\n    };\r\n\r\n    this.$id = \"ace/mode/golang\";\r\n}).call(Mode.prototype);\r\n\r\nexports.Mode = Mode;\r\n});\r\n"]}