{"version":3,"sources":["mode/java_highlight_rules.js"],"names":["define","require","exports","module","oop","DocCommentHighlightRules","TextHighlightRules","JavaHighlightRules","keywordMapper","this","createKeywordMapper","variable.language","keyword","constant.language","support.function","$rules","start","token","regex","getStartRule","next","comment","defaultToken","embedRules","getEndRule","normalizeRules","inherits"],"mappings":";;;;;;;AAAAA,OAAO,SAASC,EAASC,EAASC,GAClC,aAEA,IAAIC,EAAMH,EAAQ,cACdI,EAA2BJ,EAAQ,iCAAiCI,yBACpEC,EAAqBL,EAAQ,0BAA0BK,mBAEvDC,EAAqB,WAGrB,IA4CIC,EAAgBC,KAAKC,qBACrBC,oBAAqB,OACrBC,QA9CW,yVA+CXC,oBAjCmB,8BAkCnBC,mBA/Bc,o6CAgCf,cAKHL,KAAKM,QACDC,QAEQC,MAAQ,UACRC,MAAQ,aAEZb,EAAyBc,aAAa,cAElCF,MAAQ,UACRC,MAAQ,SACRE,KAAO,YAEPH,MAAQ,SACRC,MAAQ,uCAERD,MAAQ,SACRC,MAAQ,uCAERD,MAAQ,mBACRC,MAAQ,oEAERD,MAAQ,mBACRC,MAAQ,uEAERD,MAAQ,4BACRC,MAAQ,sBAERA,MAAO,mCACPD,MAAO,UACPG,OACIF,MAAO,IACPD,MAAO,eACPG,OACIF,MAAO,IACPD,MAAO,eACPG,KAAM,UAGNF,MAAO,kEACPD,MAAO,cAGXA,MAAQ,OACRC,MAAQ,SAERD,MAAQ,aACRC,MAAQ,SAERD,MAAQ,uBACRC,MAAQ,MAERD,MAAQ,OACRC,MAAQ,SAERA,MAAO,GACPE,KAAM,YAGVH,MAAQT,EAGRU,MAAQ,gCAERD,MAAQ,mBACRC,MAAQ,6KAERD,MAAQ,SACRC,MAAQ,UAERD,MAAQ,SACRC,MAAQ,YAERD,MAAQ,OACRC,MAAQ,SAGhBG,UAEQJ,MAAQ,UACRC,MAAQ,SACRE,KAAO,UAEPE,aAAe,aAM3Bb,KAAKc,WAAWlB,EAA0B,QACpCA,EAAyBmB,WAAW,WAC1Cf,KAAKgB,kBAGTrB,EAAIsB,SAASnB,EAAoBD,GAEjCJ,EAAQK,mBAAqBA","file":"../../mode/java_highlight_rules.js","sourcesContent":["define(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar DocCommentHighlightRules = require(\"./doc_comment_highlight_rules\").DocCommentHighlightRules;\r\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\r\n\r\nvar JavaHighlightRules = function() {\r\n\r\n    // taken from http://download.oracle.com/javase/tutorial/java/nutsandbolts/_keywords.html\r\n    var keywords = (\r\n    \"abstract|continue|for|new|switch|\" +\r\n    \"assert|default|goto|package|synchronized|\" +\r\n    \"boolean|do|if|private|this|\" +\r\n    \"break|double|implements|protected|throw|\" +\r\n    \"byte|else|import|public|throws|\" +\r\n    \"case|enum|instanceof|return|transient|\" +\r\n    \"catch|extends|int|short|try|\" +\r\n    \"char|final|interface|static|void|\" +\r\n    \"class|finally|long|strictfp|volatile|\" +\r\n    \"const|float|native|super|while|\" +\r\n    \"var\"\r\n    );\r\n\r\n    var buildinConstants = (\"null|Infinity|NaN|undefined\");\r\n\r\n\r\n    var langClasses = (\r\n        \"AbstractMethodError|AssertionError|ClassCircularityError|\"+\r\n        \"ClassFormatError|Deprecated|EnumConstantNotPresentException|\"+\r\n        \"ExceptionInInitializerError|IllegalAccessError|\"+\r\n        \"IllegalThreadStateException|InstantiationError|InternalError|\"+\r\n        \"NegativeArraySizeException|NoSuchFieldError|Override|Process|\"+\r\n        \"ProcessBuilder|SecurityManager|StringIndexOutOfBoundsException|\"+\r\n        \"SuppressWarnings|TypeNotPresentException|UnknownError|\"+\r\n        \"UnsatisfiedLinkError|UnsupportedClassVersionError|VerifyError|\"+\r\n        \"InstantiationException|IndexOutOfBoundsException|\"+\r\n        \"ArrayIndexOutOfBoundsException|CloneNotSupportedException|\"+\r\n        \"NoSuchFieldException|IllegalArgumentException|NumberFormatException|\"+\r\n        \"SecurityException|Void|InheritableThreadLocal|IllegalStateException|\"+\r\n        \"InterruptedException|NoSuchMethodException|IllegalAccessException|\"+\r\n        \"UnsupportedOperationException|Enum|StrictMath|Package|Compiler|\"+\r\n        \"Readable|Runtime|StringBuilder|Math|IncompatibleClassChangeError|\"+\r\n        \"NoSuchMethodError|ThreadLocal|RuntimePermission|ArithmeticException|\"+\r\n        \"NullPointerException|Long|Integer|Short|Byte|Double|Number|Float|\"+\r\n        \"Character|Boolean|StackTraceElement|Appendable|StringBuffer|\"+\r\n        \"Iterable|ThreadGroup|Runnable|Thread|IllegalMonitorStateException|\"+\r\n        \"StackOverflowError|OutOfMemoryError|VirtualMachineError|\"+\r\n        \"ArrayStoreException|ClassCastException|LinkageError|\"+\r\n        \"NoClassDefFoundError|ClassNotFoundException|RuntimeException|\"+\r\n        \"Exception|ThreadDeath|Error|Throwable|System|ClassLoader|\"+\r\n        \"Cloneable|Class|CharSequence|Comparable|String|Object\"\r\n    );\r\n\r\n    var keywordMapper = this.createKeywordMapper({\r\n        \"variable.language\": \"this\",\r\n        \"keyword\": keywords,\r\n        \"constant.language\": buildinConstants,\r\n        \"support.function\": langClasses\r\n    }, \"identifier\");\r\n\r\n    // regexp must not have capturing parentheses. Use (?:) instead.\r\n    // regexps are ordered -> the first match is used\r\n\r\n    this.$rules = {\r\n        \"start\" : [\r\n            {\r\n                token : \"comment\",\r\n                regex : \"\\\\/\\\\/.*$\"\r\n            },\r\n            DocCommentHighlightRules.getStartRule(\"doc-start\"),\r\n            {\r\n                token : \"comment\", // multi line comment\r\n                regex : \"\\\\/\\\\*\",\r\n                next : \"comment\"\r\n            }, {\r\n                token : \"string\", // single line\r\n                regex : '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'\r\n            }, {\r\n                token : \"string\", // single line\r\n                regex : \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\r\n            }, {\r\n                token : \"constant.numeric\", // hex\r\n                regex : /0(?:[xX][0-9a-fA-F][0-9a-fA-F_]*|[bB][01][01_]*)[LlSsDdFfYy]?\\b/\r\n            }, {\r\n                token : \"constant.numeric\", // float\r\n                regex : /[+-]?\\d[\\d_]*(?:(?:\\.[\\d_]*)?(?:[eE][+-]?[\\d_]+)?)?[LlSsDdFfYy]?\\b/\r\n            }, {\r\n                token : \"constant.language.boolean\",\r\n                regex : \"(?:true|false)\\\\b\"\r\n            }, {\r\n                regex: \"(open(?:\\\\s+))?module(?=\\\\s*\\\\w)\",\r\n                token: \"keyword\",\r\n                next: [{\r\n                    regex: \"{\",\r\n                    token: \"paren.lparen\",\r\n                    next: [{\r\n                        regex: \"}\",\r\n                        token: \"paren.rparen\",\r\n                        next: \"start\"\r\n                    }, {\r\n                        // From Section 3.9 of http://cr.openjdk.java.net/~mr/jigsaw/spec/java-se-9-jls-diffs.pdf\r\n                        regex: \"\\\\b(requires|transitive|exports|opens|to|uses|provides|with)\\\\b\",\r\n                        token: \"keyword\" \r\n                    }]\r\n                }, {\r\n                    token : \"text\",\r\n                    regex : \"\\\\s+\"\r\n                }, {\r\n                    token : \"identifier\",\r\n                    regex : \"\\\\w+\"\r\n                }, {\r\n                    token : \"punctuation.operator\",\r\n                    regex : \".\"\r\n                }, {\r\n                    token : \"text\",\r\n                    regex : \"\\\\s+\"\r\n                }, {\r\n                    regex: \"\", // exit if there is anything else\r\n                    next: \"start\"\r\n                }]\r\n            }, {\r\n                token : keywordMapper,\r\n                // TODO: Unicode escape sequences\r\n                // TODO: Unicode identifiers\r\n                regex : \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\r\n            }, {\r\n                token : \"keyword.operator\",\r\n                regex : \"!|\\\\$|%|&|\\\\*|\\\\-\\\\-|\\\\-|\\\\+\\\\+|\\\\+|~|===|==|=|!=|!==|<=|>=|<<=|>>=|>>>=|<>|<|>|!|&&|\\\\|\\\\||\\\\?\\\\:|\\\\*=|%=|\\\\+=|\\\\-=|&=|\\\\^=|\\\\b(?:in|instanceof|new|delete|typeof|void)\"\r\n            }, {\r\n                token : \"lparen\",\r\n                regex : \"[[({]\"\r\n            }, {\r\n                token : \"rparen\",\r\n                regex : \"[\\\\])}]\"\r\n            }, {\r\n                token : \"text\",\r\n                regex : \"\\\\s+\"\r\n            }\r\n        ],\r\n        \"comment\" : [\r\n            {\r\n                token : \"comment\", // closing comment\r\n                regex : \"\\\\*\\\\/\",\r\n                next : \"start\"\r\n            }, {\r\n                defaultToken : \"comment\"\r\n            }\r\n        ]\r\n    };\r\n\r\n    \r\n    this.embedRules(DocCommentHighlightRules, \"doc-\",\r\n        [ DocCommentHighlightRules.getEndRule(\"start\") ]);\r\n    this.normalizeRules();\r\n};\r\n\r\noop.inherits(JavaHighlightRules, TextHighlightRules);\r\n\r\nexports.JavaHighlightRules = JavaHighlightRules;\r\n});\r\n"]}