{"version":3,"sources":["mode/fortran_highlight_rules.js"],"names":["define","require","exports","module","oop","TextHighlightRules","FortranHighlightRules","keywordMapper","this","createKeywordMapper","invalid.deprecated","support.function","constant.language","keyword","keyword.operator","storage.type","storage.modifier","strPre","integer","pointFloat","floatNumber","stringEscape","$rules","start","token","regex","next","qqstring3","defaultToken","qstring3","qqstring","qstring","inherits"],"mappings":";;;;;;;AAgCAA,OAAO,SAASC,EAASC,EAASC,GAClC,aAEA,IAAIC,EAAMH,EAAQ,cACdI,EAAqBJ,EAAQ,0BAA0BI,mBAEvDC,EAAwB,WAExB,IAyDIC,EAAgBC,KAAKC,qBACrBC,qBAAsB,WACtBC,mBAvCmB,4yDAwCnBC,oBA5CmB,wBA6CnBC,QA7DW,saA8DXC,mBAnDmB,4DAoDnBC,eAhBc,0EAiBdC,mBAZmB,6IAapB,cAECC,EAAS,2BAMTC,EAAU,oFAKVC,EAAa,+CAEbC,EAAc,qFAA8BD,EAAa,IAEzDE,EAAgB,kFAEpBb,KAAKc,QACDC,QACIC,MAAQ,UACRC,MAAQ,SAERD,MAAQ,SACRC,MAAQR,EAAS,OACjBS,KAAO,cAEPF,MAAQ,SACRC,MAAQR,EAAS,SACjBS,KAAO,aAEPF,MAAQ,SACRC,MAAQR,EAAS,OACjBS,KAAO,aAEPF,MAAQ,SACRC,MAAQR,EAAS,SACjBS,KAAO,YAEPF,MAAQ,mBACRC,MAAQ,MAAQL,EAAc,kBAE9BI,MAAQ,mBACRC,MAAQL,IAERI,MAAQ,mBACRC,MAAQP,EAAU,YAElBM,MAAQ,mBACRC,MAAQP,EAAU,QAElBM,MAAQ,UACRC,MAAQ,wEAERD,MAAQ,UACRC,MAAQ,8EAERD,MAAQjB,EACRkB,MAAQ,gCAERD,MAAQ,mBACRC,MAAQ,2EAERD,MAAQ,eACRC,MAAQ,gBAERD,MAAQ,eACRC,MAAQ,gBAERD,MAAQ,OACRC,MAAQ,SAEZE,YACIH,MAAQ,2BACRC,MAAQJ,IAERG,MAAQ,SACRC,MAAQ,OACRC,KAAO,UAEPE,aAAe,WAEnBC,WACIL,MAAQ,2BACRC,MAAQJ,IAERG,MAAQ,SACRC,MAAQ,OACRC,KAAO,UAEPE,aAAe,WAEnBE,WACIN,MAAQ,2BACRC,MAAQJ,IAERG,MAAQ,SACRC,MAAQ,QACRC,KAAQ,aAERF,MAAQ,SACRC,MAAQ,MACRC,KAAQ,UAERE,aAAc,WAElBG,UACIP,MAAQ,2BACRC,MAAQJ,IAERG,MAAQ,SACRC,MAAQ,QACRC,KAAQ,YAERF,MAAQ,SACRC,MAAQ,MACRC,KAAQ,UAERE,aAAc,aAK1BxB,EAAI4B,SAAS1B,EAAuBD,GAEpCH,EAAQI,sBAAwBA","file":"../../mode/fortran_highlight_rules.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2010, Ajax.org B.V.\r\n * All rights reserved.\r\n * \r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n * \r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\n/* Derived from Python highlighing rules */\r\n\r\ndefine(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\r\n\r\nvar FortranHighlightRules = function() {\r\n\r\n    var keywords = (\r\n        \"call|case|contains|continue|cycle|do|else|elseif|end|enddo|endif|function|\"+ \r\n        \"if|implicit|in|include|inout|intent|module|none|only|out|print|program|return|\"+ \r\n        \"select|status|stop|subroutine|\" +\r\n        \"return|then|use|while|write|\"+\r\n        \"CALL|CASE|CONTAINS|CONTINUE|CYCLE|DO|ELSE|ELSEIF|END|ENDDO|ENDIF|FUNCTION|\"+\r\n        \"IF|IMPLICIT|IN|INCLUDE|INOUT|INTENT|MODULE|NONE|ONLY|OUT|PRINT|PROGRAM|RETURN|\"+\r\n        \"SELECT|STATUS|STOP|SUBROUTINE|\" +\r\n        \"RETURN|THEN|USE|WHILE|WRITE\"\r\n    );\r\n\r\n    var keywordOperators = (\r\n        \"and|or|not|eq|ne|gt|ge|lt|le|\" +\r\n        \"AND|OR|NOT|EQ|NE|GT|GE|LT|LE\" \r\n    );\r\n\r\n    var builtinConstants = (\r\n        \"true|false|TRUE|FALSE\"\r\n    );\r\n\r\n    var builtinFunctions = (\r\n        \"abs|achar|acos|acosh|adjustl|adjustr|aimag|aint|all|allocate|\"+\r\n        \"anint|any|asin|asinh|associated|atan|atan2|atanh|\"+\r\n        \"bessel_j0|bessel_j1|bessel_jn|bessel_y0|bessel_y1|bessel_yn|\"+\r\n        \"bge|bgt|bit_size|ble|blt|btest|ceiling|char|cmplx|conjg|cos|cosh|\"+\r\n        \"count|cpu_time|cshift|date_and_time|dble|deallocate|digits|dim|dot_product|dprod|\"+\r\n        \"dshiftl|dshiftr|dsqrt|eoshift|epsilon|erf|erfc|erfc_scaled|exp|float|floor|\"+\r\n        \"format|fraction|gamma|input|len|lge|lgt|lle|llt|log|log10|maskl|maskr|matmul|max|maxloc|maxval|\"+\r\n        \"merge|min|minloc|minval|mod|modulo|nint|not|norm2|null|nullify|pack|parity|popcnt|poppar|\"+\r\n        \"precision|present|product|radix|random_number|random_seed|range|repeat|reshape|round|\"+\r\n        \"rrspacing|same_type_as|scale|scan|selected_char_kind|selected_int_kind|selected_real_kind|\"+\r\n        \"set_exponent|shape|shifta|shiftl|shiftr|sign|sin|sinh|size|sngl|spacing|spread|\"+\r\n        \"sqrt|sum|system_clock|tan|tanh|tiny|trailz|transfer|transpose|trim|ubound|unpack|verify|\" +\r\n        \"ABS|ACHAR|ACOS|ACOSH|ADJUSTL|ADJUSTR|AIMAG|AINT|ALL|ALLOCATE|\"+\r\n        \"ANINT|ANY|ASIN|ASINH|ASSOCIATED|ATAN|ATAN2|ATANH|\"+\r\n        \"BESSEL_J0|BESSEL_J1|BESSEL_JN|BESSEL_Y0|BESSEL_Y1|BESSEL_YN|\"+\r\n        \"BGE|BGT|BIT_SIZE|BLE|BLT|BTEST|CEILING|CHAR|CMPLX|CONJG|COS|COSH|\"+\r\n        \"COUNT|CPU_TIME|CSHIFT|DATE_AND_TIME|DBLE|DEALLOCATE|DIGITS|DIM|DOT_PRODUCT|DPROD|\"+\r\n        \"DSHIFTL|DSHIFTR|DSQRT|EOSHIFT|EPSILON|ERF|ERFC|ERFC_SCALED|EXP|FLOAT|FLOOR|\"+\r\n        \"FORMAT|FRACTION|GAMMA|INPUT|LEN|LGE|LGT|LLE|LLT|LOG|LOG10|MASKL|MASKR|MATMUL|MAX|MAXLOC|MAXVAL|\"+\r\n        \"MERGE|MIN|MINLOC|MINVAL|MOD|MODULO|NINT|NOT|NORM2|NULL|NULLIFY|PACK|PARITY|POPCNT|POPPAR|\"+\r\n        \"PRECISION|PRESENT|PRODUCT|RADIX|RANDOM_NUMBER|RANDOM_SEED|RANGE|REPEAT|RESHAPE|ROUND|\"+\r\n        \"RRSPACING|SAME_TYPE_AS|SCALE|SCAN|SELECTED_CHAR_KIND|SELECTED_INT_KIND|SELECTED_REAL_KIND|\"+\r\n        \"SET_EXPONENT|SHAPE|SHIFTA|SHIFTL|SHIFTR|SIGN|SIN|SINH|SIZE|SNGL|SPACING|SPREAD|\"+\r\n        \"SQRT|SUM|SYSTEM_CLOCK|TAN|TANH|TINY|TRAILZ|TRANSFER|TRANSPOSE|TRIM|UBOUND|UNPACK|VERIFY\"\r\n    );\r\n\r\n    var storageType = (\r\n        \"logical|character|integer|real|type|\" +\r\n        \"LOGICAL|CHARACTER|INTEGER|REAL|TYPE\"    \r\n    );\r\n\r\n    var storageModifiers = ( \r\n        \"allocatable|dimension|intent|parameter|pointer|target|private|public|\" +\r\n        \"ALLOCATABLE|DIMENSION|INTENT|PARAMETER|POINTER|TARGET|PRIVATE|PUBLIC\"\r\n    );\r\n\r\n    var keywordMapper = this.createKeywordMapper({\r\n        \"invalid.deprecated\": \"debugger\",\r\n        \"support.function\": builtinFunctions,\r\n        \"constant.language\": builtinConstants,\r\n        \"keyword\": keywords,\r\n        \"keyword.operator\": keywordOperators,\r\n        \"storage.type\": storageType,\r\n        \"storage.modifier\" : storageModifiers\r\n    }, \"identifier\");\r\n\r\n    var strPre = \"(?:r|u|ur|R|U|UR|Ur|uR)?\";\r\n\r\n    var decimalInteger = \"(?:(?:[1-9]\\\\d*)|(?:0))\";\r\n    var octInteger = \"(?:0[oO]?[0-7]+)\";\r\n    var hexInteger = \"(?:0[xX][\\\\dA-Fa-f]+)\";\r\n    var binInteger = \"(?:0[bB][01]+)\";\r\n    var integer = \"(?:\" + decimalInteger + \"|\" + octInteger + \"|\" + hexInteger + \"|\" + binInteger + \")\";\r\n\r\n    var exponent = \"(?:[eE][+-]?\\\\d+)\";\r\n    var fraction = \"(?:\\\\.\\\\d+)\";\r\n    var intPart = \"(?:\\\\d+)\";\r\n    var pointFloat = \"(?:(?:\" + intPart + \"?\" + fraction + \")|(?:\" + intPart + \"\\\\.))\";\r\n    var exponentFloat = \"(?:(?:\" + pointFloat + \"|\" +  intPart + \")\" + exponent + \")\";\r\n    var floatNumber = \"(?:\" + exponentFloat + \"|\" + pointFloat + \")\";\r\n\r\n    var stringEscape =  \"\\\\\\\\(x[0-9A-Fa-f]{2}|[0-7]{3}|[\\\\\\\\abfnrtv'\\\"]|U[0-9A-Fa-f]{8}|u[0-9A-Fa-f]{4})\";\r\n\r\n    this.$rules = {\r\n        \"start\" : [ {\r\n            token : \"comment\",\r\n            regex : \"!.*$\"\r\n        }, {\r\n            token : \"string\",           // multi line \"\"\" string start\r\n            regex : strPre + '\"{3}',\r\n            next : \"qqstring3\"\r\n        }, {\r\n            token : \"string\",           // \" string\r\n            regex : strPre + '\"(?=.)',\r\n            next : \"qqstring\"\r\n        }, {\r\n            token : \"string\",           // multi line ''' string start\r\n            regex : strPre + \"'{3}\",\r\n            next : \"qstring3\"\r\n        }, {\r\n            token : \"string\",           // ' string\r\n            regex : strPre + \"'(?=.)\",\r\n            next : \"qstring\"\r\n        }, {\r\n            token : \"constant.numeric\", // imaginary\r\n            regex : \"(?:\" + floatNumber + \"|\\\\d+)[jJ]\\\\b\"\r\n        }, {\r\n            token : \"constant.numeric\", // float\r\n            regex : floatNumber\r\n        }, {\r\n            token : \"constant.numeric\", // long integer\r\n            regex : integer + \"[lL]\\\\b\"\r\n        }, {\r\n            token : \"constant.numeric\", // integer\r\n            regex : integer + \"\\\\b\"\r\n        }, {\r\n            token : \"keyword\", // pre-compiler directives\r\n            regex : \"#\\\\s*(?:include|import|define|undef|INCLUDE|IMPORT|DEFINE|UNDEF)\\\\b\"\r\n        }, {\r\n            token : \"keyword\", // special case pre-compiler directive\r\n            regex : \"#\\\\s*(?:endif|ifdef|else|elseif|ifndef|ENDIF|IFDEF|ELSE|ELSEIF|IFNDEF)\\\\b\"\r\n        }, {\r\n            token : keywordMapper,\r\n            regex : \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\r\n        }, {\r\n            token : \"keyword.operator\",\r\n            regex : \"\\\\+|\\\\-|\\\\*|\\\\*\\\\*|\\\\/|\\\\/\\\\/|%|<<|>>|&|\\\\||\\\\^|~|<|>|<=|=>|==|!=|<>|=\"\r\n        }, {\r\n            token : \"paren.lparen\",\r\n            regex : \"[\\\\[\\\\(\\\\{]\"\r\n        }, {\r\n            token : \"paren.rparen\",\r\n            regex : \"[\\\\]\\\\)\\\\}]\"\r\n        }, {\r\n            token : \"text\",\r\n            regex : \"\\\\s+\"\r\n        } ],\r\n        \"qqstring3\" : [ {\r\n            token : \"constant.language.escape\",\r\n            regex : stringEscape\r\n        }, {\r\n            token : \"string\", // multi line \"\"\" string end\r\n            regex : '\"{3}',\r\n            next : \"start\"\r\n        }, {\r\n            defaultToken : \"string\"\r\n        } ],\r\n        \"qstring3\" : [ {\r\n            token : \"constant.language.escape\",\r\n            regex : stringEscape\r\n        }, {\r\n            token : \"string\", // multi line \"\"\" string end\r\n            regex : '\"{3}',\r\n            next : \"start\"\r\n        }, {\r\n            defaultToken : \"string\"\r\n        } ],\r\n        \"qqstring\" : [{\r\n            token : \"constant.language.escape\",\r\n            regex : stringEscape\r\n        }, {\r\n            token : \"string\",\r\n            regex : \"\\\\\\\\$\",\r\n            next  : \"qqstring\"\r\n        }, {\r\n            token : \"string\",\r\n            regex : '\"|$',\r\n            next  : \"start\"\r\n        }, {\r\n            defaultToken: \"string\"\r\n        }],\r\n        \"qstring\" : [{\r\n            token : \"constant.language.escape\",\r\n            regex : stringEscape\r\n        }, {\r\n            token : \"string\",\r\n            regex : \"\\\\\\\\$\",\r\n            next  : \"qstring\"\r\n        }, {\r\n            token : \"string\",\r\n            regex : \"'|$\",\r\n            next  : \"start\"\r\n        }, {\r\n            defaultToken: \"string\"\r\n        }]\r\n    };\r\n};\r\n\r\noop.inherits(FortranHighlightRules, TextHighlightRules);\r\n\r\nexports.FortranHighlightRules = FortranHighlightRules;\r\n});\r\n"]}