{"version":3,"sources":["mode/luapage_highlight_rules.js"],"names":["define","require","exports","module","oop","HtmlHighlightRules","LuaHighlightRules","LuaPageHighlightRules","call","this","startRules","token","regex","push","key","embedRules","next","$rules","unshift","apply","normalizeRules","inherits"],"mappings":";;;;;;;AAEAA,OAAO,SAASC,EAASC,EAASC,GAClC,aAEA,IAAIC,EAAMH,EAAQ,cACdI,EAAqBJ,EAAQ,0BAA0BI,mBACvDC,EAAoBL,EAAQ,yBAAyBK,kBAErDC,EAAwB,WACxBF,EAAmBG,KAAKC,MAExB,IAAIC,IAEIC,MAAO,UACPC,MAAO,WACPC,KAAM,cAENF,MAAO,UACPC,MAAO,cACPC,KAAM,cAkBd,IAAK,IAAIC,KAFTL,KAAKM,WAAWT,EAAmB,SAV3BK,MAAO,UACPC,MAAO,OACPI,KAAM,QAENL,MAAO,UACPC,MAAO,OACPI,KAAM,SAIwC,UAEtCP,KAAKQ,OACjBR,KAAKQ,OAAOH,GAAKI,QAAQC,MAAMV,KAAKQ,OAAOH,GAAMJ,GAErDD,KAAKW,kBAGThB,EAAIiB,SAASd,EAAuBF,GAEpCH,EAAQK,sBAAwBA","file":"../../mode/luapage_highlight_rules.js","sourcesContent":["// LuaPage implements the LuaPage markup as described by the Kepler Project's CGILua\r\n// documentation: http://keplerproject.github.com/cgilua/manual.html#templates\r\ndefine(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar HtmlHighlightRules = require(\"./html_highlight_rules\").HtmlHighlightRules;\r\nvar LuaHighlightRules = require(\"./lua_highlight_rules\").LuaHighlightRules;\r\n\r\nvar LuaPageHighlightRules = function() {\r\n    HtmlHighlightRules.call(this);\r\n\r\n    var startRules = [\r\n        {\r\n            token: \"keyword\",\r\n            regex: \"<\\\\%\\\\=?\",\r\n            push: \"lua-start\"\r\n        }, {\r\n            token: \"keyword\",\r\n            regex: \"<\\\\?lua\\\\=?\",\r\n            push: \"lua-start\"\r\n        }\r\n    ];\r\n\r\n    var endRules = [\r\n        {\r\n            token: \"keyword\",\r\n            regex: \"\\\\%>\",\r\n            next: \"pop\"\r\n        }, {\r\n            token: \"keyword\",\r\n            regex: \"\\\\?>\",\r\n            next: \"pop\"\r\n        }\r\n    ];\r\n\r\n    this.embedRules(LuaHighlightRules, \"lua-\", endRules, [\"start\"]);\r\n\r\n    for (var key in this.$rules)\r\n        this.$rules[key].unshift.apply(this.$rules[key], startRules);\r\n\r\n    this.normalizeRules();\r\n};\r\n\r\noop.inherits(LuaPageHighlightRules, HtmlHighlightRules);\r\n\r\nexports.LuaPageHighlightRules = LuaPageHighlightRules;\r\n\r\n});"]}