{"version":3,"sources":["mode/ada.js"],"names":["define","require","exports","module","oop","TextMode","Mode","AdaHighlightRules","Range","this","HighlightRules","$behaviour","$defaultBehaviour","inherits","lineCommentStart","getNextLineIndent","state","line","tab","indent","$getIndent","tokens","getTokenizer","getLineTokens","length","type","match","checkOutdent","input","autoOutdent","session","row","getLine","prevLine","prevIndent","outdentRows","$id","call","prototype"],"mappings":";;;;;;;AA8BAA,OAAO,SAASC,QAASC,QAASC,QAClC,aAEA,IAAIC,EAAMH,QAAQ,cACdI,EAAWJ,QAAQ,UAAUK,KAC7BC,EAAoBN,QAAQ,yBAAyBM,kBACrDC,EAAQP,QAAQ,YAAYO,MAE5BF,EAAO,WACPG,KAAKC,eAAiBH,EACtBE,KAAKE,WAAaF,KAAKG,mBAE3BR,EAAIS,SAASP,EAAMD,GAEnB,WAEII,KAAKK,iBAAmB,KAExBL,KAAKM,kBAAoB,SAASC,EAAOC,EAAMC,GAC3C,IAAIC,EAASV,KAAKW,WAAWH,GAGzBI,EADgBZ,KAAKa,eAAeC,cAAcN,EAAMD,GACjCK,OAE3B,GAAIA,EAAOG,QAA0C,WAAhCH,EAAOA,EAAOG,OAAO,GAAGC,KACzC,OAAON,EAIE,SAATH,IACYC,EAAKS,MAAM,oCAEnBP,GAAUD,IAIlB,OAAOC,GAGXV,KAAKkB,aAAe,SAASX,EAAOC,EAAMW,GAKtC,SAJoBX,EAAOW,GAITF,MAAM,qBAO5BjB,KAAKoB,YAAc,SAASb,EAAOc,EAASC,GAExC,IAAId,EAAOa,EAAQE,QAAQD,GACvBE,EAAWH,EAAQE,QAAQD,EAAM,GACjCG,EAAazB,KAAKW,WAAWa,GAAUT,OAC9Bf,KAAKW,WAAWH,GAAMO,QAIrBU,GAIdJ,EAAQK,YAAY,IAAI3B,EAAMuB,EAAK,EAAGA,EAAM,EAAG,KAInDtB,KAAK2B,IAAM,gBACZC,KAAK/B,EAAKgC,WAEbpC,QAAQI,KAAOA","file":"../../mode/ada.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2010, Ajax.org B.V.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\ndefine(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar TextMode = require(\"./text\").Mode;\r\nvar AdaHighlightRules = require(\"./ada_highlight_rules\").AdaHighlightRules;\r\nvar Range = require(\"../range\").Range;\r\n\r\nvar Mode = function() {\r\n    this.HighlightRules = AdaHighlightRules;\r\n    this.$behaviour = this.$defaultBehaviour;\r\n};\r\noop.inherits(Mode, TextMode);\r\n\r\n(function() {\r\n\r\n    this.lineCommentStart = \"--\";\r\n\r\n    this.getNextLineIndent = function(state, line, tab) {\r\n        var indent = this.$getIndent(line);\r\n\r\n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\r\n        var tokens = tokenizedLine.tokens;\r\n\r\n        if (tokens.length && tokens[tokens.length-1].type == \"comment\") {\r\n            return indent;\r\n        }\r\n\r\n        //  Indent when line ends with one of the following keywords\r\n        if (state == \"start\") {\r\n            var match = line.match(/^.*(begin|loop|then|is|do)\\s*$/);\r\n            if (match) {\r\n                indent += tab;\r\n            }\r\n        }\r\n\r\n        return indent;\r\n    };\r\n\r\n    this.checkOutdent = function(state, line, input) {\r\n        var complete_line = line + input;\r\n\r\n        // Outdent when the current line contains begin or end, and nothing\r\n        // else. This ensures that we'll send the signal only once.\r\n        if (complete_line.match(/^\\s*(begin|end)$/)) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    this.autoOutdent = function(state, session, row) {\r\n\r\n        var line = session.getLine(row);\r\n        var prevLine = session.getLine(row - 1);\r\n        var prevIndent = this.$getIndent(prevLine).length;\r\n        var indent = this.$getIndent(line).length;\r\n\r\n        // Don't outdent if current line is at the same level as the last one,\r\n        // it means that the user outdented himself\r\n        if (indent <= prevIndent) {\r\n            return;\r\n        }\r\n\r\n        session.outdentRows(new Range(row, 0, row + 2, 0));\r\n    };\r\n\r\n\r\n    this.$id = \"ace/mode/ada\";\r\n}).call(Mode.prototype);\r\n\r\nexports.Mode = Mode;\r\n\r\n});\r\n\r\n"]}