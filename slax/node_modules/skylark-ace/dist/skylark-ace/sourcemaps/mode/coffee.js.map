{"version":3,"sources":["mode/coffee.js"],"names":["define","require","exports","module","Rules","CoffeeHighlightRules","Outdent","MatchingBraceOutdent","FoldMode","TextMode","Range","Mode","WorkerClient","this","HighlightRules","$outdent","foldingRules","inherits","indenter","lineCommentStart","blockComment","start","end","getNextLineIndent","state","line","tab","indent","$getIndent","tokens","getTokenizer","getLineTokens","length","type","test","checkOutdent","input","autoOutdent","doc","row","createWorker","session","worker","attachToDocument","getDocument","on","e","setAnnotations","data","clearAnnotations","$id","call","prototype"],"mappings":";;;;;;;AA8BAA,OAAO,SAASC,QAASC,QAASC,QAClC,aAEA,IAAIC,EAAQH,QAAQ,4BAA4BI,qBAC5CC,EAAUL,QAAQ,4BAA4BM,qBAC9CC,EAAWP,QAAQ,oBAAoBO,SAEvCC,GADQR,QAAQ,YAAYS,MACjBT,QAAQ,UAAUU,MAC7BC,EAAeX,QAAQ,2BAA2BW,aAGtD,SAASD,IACLE,KAAKC,eAAiBV,EACtBS,KAAKE,SAAW,IAAIT,EACpBO,KAAKG,aAAe,IAAIR,EALlBP,QAAQ,cAQdgB,SAASN,EAAMF,GAEnB,WAuBI,IAAIS,EAAW,iKAEfL,KAAKM,iBAAmB,IACxBN,KAAKO,cAAgBC,MAAO,MAAOC,IAAK,OAExCT,KAAKU,kBAAoB,SAASC,EAAOC,EAAMC,GAC3C,IAAIC,EAASd,KAAKe,WAAWH,GACzBI,EAAShB,KAAKiB,eAAeC,cAAcN,EAAMD,GAAOK,OAK5D,OAHMA,EAAOG,QAA6C,YAAnCH,EAAOA,EAAOG,OAAS,GAAGC,MACnC,UAAVT,IAAqBN,EAASgB,KAAKT,KACnCE,GAAUD,GACPC,GAGXd,KAAKsB,aAAe,SAASX,EAAOC,EAAMW,GACtC,OAAOvB,KAAKE,SAASoB,aAAaV,EAAMW,IAG5CvB,KAAKwB,YAAc,SAASb,EAAOc,EAAKC,GACpC1B,KAAKE,SAASsB,YAAYC,EAAKC,IAGnC1B,KAAK2B,aAAe,SAASC,GACzB,IAAIC,EAAS,IAAI9B,GAAc,OAAQ,yBAA0B,UAWjE,OAVA8B,EAAOC,iBAAiBF,EAAQG,eAEhCF,EAAOG,GAAG,WAAY,SAASC,GAC3BL,EAAQM,eAAeD,EAAEE,QAG7BN,EAAOG,GAAG,YAAa,WACnBJ,EAAQQ,qBAGLP,GAGX7B,KAAKqC,IAAM,mBACZC,KAAKxC,EAAKyC,WAEblD,QAAQS,KAAOA","file":"../../mode/coffee.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2010, Ajax.org B.V.\r\n * All rights reserved.\r\n * \r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n * \r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\ndefine(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar Rules = require(\"./coffee_highlight_rules\").CoffeeHighlightRules;\r\nvar Outdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\r\nvar FoldMode = require(\"./folding/coffee\").FoldMode;\r\nvar Range = require(\"../range\").Range;\r\nvar TextMode = require(\"./text\").Mode;\r\nvar WorkerClient = require(\"../worker/worker_client\").WorkerClient;\r\nvar oop = require(\"../lib/oop\");\r\n\r\nfunction Mode() {\r\n    this.HighlightRules = Rules;\r\n    this.$outdent = new Outdent();\r\n    this.foldingRules = new FoldMode();\r\n}\r\n\r\noop.inherits(Mode, TextMode);\r\n\r\n(function() {\r\n    \r\n    /*:\r\n      [({[=:]        # Opening parentheses or brackets\r\n     |[-=]>          # OR single or double arrow\r\n     |\\b(?:          # OR one of these words:\r\n       else          #    else\r\n      |try           # OR try\r\n      |(?:swi|ca)tch # OR catch, optionally followed by:\r\n        (?:\\s*[$A-Za-z_\\x7f-\\uffff][$\\w\\x7f-\\uffff]*)?  # a variable\r\n      |finally       # OR finally\r\n     ))\\s*$          # all as the last thing on a line (allowing trailing space)\r\n    |                # ---- OR ---- :\r\n    ^\\s*             # a line starting with optional space\r\n    (else\\b\\s*)?     # followed by an optional \"else\"\r\n    (?:              # followed by one of the following:\r\n       if            #    if\r\n      |for           # OR for\r\n      |while         # OR while\r\n      |loop          # OR loop\r\n    )\\b              #    (as a word)\r\n    (?!.*\\bthen\\b)   # ... but NOT followed by \"then\" on the line\r\n    */\r\n    var indenter = /(?:[({[=:]|[-=]>|\\b(?:else|try|(?:swi|ca)tch(?:\\s+[$A-Za-z_\\x7f-\\uffff][$\\w\\x7f-\\uffff]*)?|finally))\\s*$|^\\s*(else\\b\\s*)?(?:if|for|while|loop)\\b(?!.*\\bthen\\b)/;\r\n    \r\n    this.lineCommentStart = \"#\";\r\n    this.blockComment = {start: \"###\", end: \"###\"};\r\n    \r\n    this.getNextLineIndent = function(state, line, tab) {\r\n        var indent = this.$getIndent(line);\r\n        var tokens = this.getTokenizer().getLineTokens(line, state).tokens;\r\n    \r\n        if (!(tokens.length && tokens[tokens.length - 1].type === 'comment') &&\r\n            state === 'start' && indenter.test(line))\r\n            indent += tab;\r\n        return indent;\r\n    };\r\n    \r\n    this.checkOutdent = function(state, line, input) {\r\n        return this.$outdent.checkOutdent(line, input);\r\n    };\r\n    \r\n    this.autoOutdent = function(state, doc, row) {\r\n        this.$outdent.autoOutdent(doc, row);\r\n    };\r\n    \r\n    this.createWorker = function(session) {\r\n        var worker = new WorkerClient([\"ace\"], \"ace/mode/coffee_worker\", \"Worker\");\r\n        worker.attachToDocument(session.getDocument());\r\n        \r\n        worker.on(\"annotate\", function(e) {\r\n            session.setAnnotations(e.data);\r\n        });\r\n        \r\n        worker.on(\"terminate\", function() {\r\n            session.clearAnnotations();\r\n        });\r\n        \r\n        return worker;\r\n    };\r\n\r\n    this.$id = \"ace/mode/coffee\";\r\n}).call(Mode.prototype);\r\n\r\nexports.Mode = Mode;\r\n\r\n});\r\n"]}