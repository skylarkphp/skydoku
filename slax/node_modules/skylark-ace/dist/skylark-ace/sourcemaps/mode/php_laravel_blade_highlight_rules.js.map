{"version":3,"sources":["mode/php_laravel_blade_highlight_rules.js"],"names":["define","require","exports","module","oop","PhpHighlightRules","PHPLaravelBladeHighlightRules","call","this","bladeRules","start","include","comments","token","regex","next","push","defaultToken","parenthesis","directives","lang","strings","variables","bladeStart","rule","$rules","unshift","apply","Object","keys","forEach","x","normalizeRules","inherits"],"mappings":";;;;;;;AA8BAA,OAAO,SAASC,QAASC,QAASC,QAClC,aAEA,IAAIC,EAAMH,QAAQ,cACdI,EAAoBJ,QAAQ,yBAAyBI,kBAErDC,EAAgC,WAChCD,EAAkBE,KAAKC,MAEvB,IAAIC,GACAC,QACIC,QAAS,aAETA,QAAS,eAETA,QAAS,gBAEbC,WACIC,MAAO,uCACPC,MAAO,yBACPC,KAAM,QAENF,MAAO,2CACPC,MAAO,aACPE,OACIH,MAAO,yCACPC,MAAO,aACPC,KAAM,QAENE,aAAc,0BAGlBJ,MAAO,6CACPC,MAAO,mBACPE,OACIH,MAAO,2CACPC,MAAO,mBACPC,KAAM,QAENE,aAAc,0BAGtBC,cACIL,MAAO,0BACPC,MAAO,MACPE,OACIH,MAAO,wBACPC,MAAO,MACPC,KAAM,QAENJ,QAAS,YAETA,QAAS,cAETA,QAAS,SAETA,QAAS,gBAETM,aAAc,mBAGtBE,aACQN,OAAQ,8BAA+B,4BACvCC,MAAO,ktBAGPD,OAAQ,8BAA+B,yBACvCC,MAAO,wHAEPD,OAAQ,yBAA0B,0BAClCC,MAAO,eACPE,OACIH,MAAO,uBACPC,MAAO,SACPC,KAAM,QAENJ,QAAS,YAETA,QAAS,cAETM,aAAc,mBAGlBJ,MAAO,mCACPC,MAAO,YACPE,OACIH,MAAO,iCACPC,MAAO,YACPC,KAAM,QAENJ,QAAS,YAETA,QAAS,cAETM,aAAc,mBAM1BG,OACIP,MAAO,yBACPC,MAAO,qHAEPD,MAAO,0BACPC,MAAO,oCAEXO,UACIR,MAAO,4CACPC,MAAO,IACPE,OACIH,MAAO,0CACPC,MAAO,IACPC,KAAM,QAENF,MAAO,gCACPC,MAAO,UAEPG,aAAc,iCAGlBJ,MAAO,4CACPC,MAAO,IACPE,OACIH,MAAO,0CACPC,MAAO,IACPC,KAAM,QAENF,MAAO,gCACPC,MAAO,UAEPG,aAAc,iCAGtBK,YACIT,MAAO,iBACPC,MAAO,mCAEPD,OAAQ,yBAA0B,iCAClCC,MAAO,oCAEPD,OAAQ,yBACJ,kCACA,wCACA,iBACA,yCAEJC,MAAO,iDAIXS,EAAad,EAAWC,MAE5B,IAAK,IAAIc,KAAQhB,KAAKiB,OAClBjB,KAAKiB,OAAOD,GAAME,QAAQC,MAAMnB,KAAKiB,OAAOD,GAAOD,GAGvDK,OAAOC,KAAKpB,GAAYqB,QAAQ,SAASC,GAChCvB,KAAKiB,OAAOM,KACbvB,KAAKiB,OAAOM,GAAKtB,EAAWsB,KACjCvB,MAEHA,KAAKwB,kBAIT5B,EAAI6B,SAAS3B,EAA+BD,GAE5CH,QAAQI,8BAAgCA","file":"../../mode/php_laravel_blade_highlight_rules.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2012, Ajax.org B.V.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\ndefine(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar PhpHighlightRules = require(\"./php_highlight_rules\").PhpHighlightRules;\r\n\r\nvar PHPLaravelBladeHighlightRules = function() {\r\n    PhpHighlightRules.call(this);\r\n\r\n    var bladeRules = {\r\n        start: [{\r\n            include: \"comments\"\r\n        }, {\r\n            include: \"directives\"\r\n        }, {\r\n            include: \"parenthesis\"\r\n        }],\r\n        comments: [{\r\n            token: \"punctuation.definition.comment.blade\",\r\n            regex: \"(\\\\/\\\\/(.)*)|(\\\\#(.)*)\",\r\n            next: \"pop\"\r\n        }, {\r\n            token: \"punctuation.definition.comment.begin.php\",\r\n            regex: \"(?:\\\\/\\\\*)\",\r\n            push: [{\r\n                token: \"punctuation.definition.comment.end.php\",\r\n                regex: \"(?:\\\\*\\\\/)\",\r\n                next: \"pop\"\r\n            }, {\r\n                defaultToken: \"comment.block.blade\"\r\n            }]\r\n        }, {\r\n            token: \"punctuation.definition.comment.begin.blade\",\r\n            regex: \"(?:\\\\{\\\\{\\\\-\\\\-)\",\r\n            push: [{\r\n                token: \"punctuation.definition.comment.end.blade\",\r\n                regex: \"(?:\\\\-\\\\-\\\\}\\\\})\",\r\n                next: \"pop\"\r\n            }, {\r\n                defaultToken: \"comment.block.blade\"\r\n            }]\r\n        }],\r\n        parenthesis: [{\r\n            token: \"parenthesis.begin.blade\",\r\n            regex: \"\\\\(\",\r\n            push: [{\r\n                token: \"parenthesis.end.blade\",\r\n                regex: \"\\\\)\",\r\n                next: \"pop\"\r\n            }, {\r\n                include: \"strings\"\r\n            }, {\r\n                include: \"variables\"\r\n            }, {\r\n                include: \"lang\"\r\n            }, {\r\n                include: \"parenthesis\"\r\n            }, {\r\n                defaultToken: \"source.blade\"\r\n            }]\r\n        }],\r\n        directives: [{\r\n                token: [\"directive.declaration.blade\", \"keyword.directives.blade\"],\r\n                regex: \"(@)(endunless|endisset|endempty|endauth|endguest|endcomponent|endslot|endalert|endverbatim|endsection|show|php|endphp|endpush|endprepend|endenv|endforelse|isset|empty|component|slot|alert|json|verbatim|section|auth|guest|hasSection|forelse|includeIf|includeWhen|includeFirst|each|push|stack|prepend|inject|env|elseenv|unless|yield|extends|parent|include|acfrepeater|block|can|cannot|choice|debug|elsecan|elsecannot|embed|hipchat|lang|layout|macro|macrodef|minify|partial|render|servers|set|slack|story|task|unset|wpposts|acfend|after|append|breakpoint|endafter|endcan|endcannot|endembed|endmacro|endmarkdown|endminify|endpartial|endsetup|endstory|endtask|endunless|markdown|overwrite|setup|stop|wpempty|wpend|wpquery)\"\r\n\r\n            }, {\r\n                token: [\"directive.declaration.blade\", \"keyword.control.blade\"],\r\n                regex: \"(@)(if|else|elseif|endif|foreach|endforeach|switch|case|break|default|endswitch|for|endfor|while|endwhile|continue)\"\r\n            }, {\r\n                token: [\"directive.ignore.blade\", \"injections.begin.blade\"],\r\n                regex: \"(@?)(\\\\{\\\\{)\",\r\n                push: [{\r\n                    token: \"injections.end.blade\",\r\n                    regex: \"\\\\}\\\\}\",\r\n                    next: \"pop\"\r\n                }, {\r\n                    include: \"strings\"\r\n                }, {\r\n                    include: \"variables\"\r\n                }, {\r\n                    defaultToken: \"source.blade\"\r\n                }]\r\n            }, {\r\n                token: \"injections.unescaped.begin.blade\",\r\n                regex: \"\\\\{\\\\!\\\\!\",\r\n                push: [{\r\n                    token: \"injections.unescaped.end.blade\",\r\n                    regex: \"\\\\!\\\\!\\\\}\",\r\n                    next: \"pop\"\r\n                }, {\r\n                    include: \"strings\"\r\n                }, {\r\n                    include: \"variables\"\r\n                }, {\r\n                    defaultToken: \"source.blade\"\r\n                }]\r\n            }\r\n\r\n        ],\r\n\r\n        lang: [{\r\n            token: \"keyword.operator.blade\",\r\n            regex: \"(?:!=|!|<=|>=|<|>|===|==|=|\\\\+\\\\+|\\\\;|\\\\,|%|&&|\\\\|\\\\|)|\\\\b(?:and|or|eq|neq|ne|gte|gt|ge|lte|lt|le|not|mod|as)\\\\b\"\r\n        }, {\r\n            token: \"constant.language.blade\",\r\n            regex: \"\\\\b(?:TRUE|FALSE|true|false)\\\\b\"\r\n        }],\r\n        strings: [{\r\n            token: \"punctuation.definition.string.begin.blade\",\r\n            regex: \"\\\"\",\r\n            push: [{\r\n                token: \"punctuation.definition.string.end.blade\",\r\n                regex: \"\\\"\",\r\n                next: \"pop\"\r\n            }, {\r\n                token: \"string.character.escape.blade\",\r\n                regex: \"\\\\\\\\.\"\r\n            }, {\r\n                defaultToken: \"string.quoted.single.blade\"\r\n            }]\r\n        }, {\r\n            token: \"punctuation.definition.string.begin.blade\",\r\n            regex: \"'\",\r\n            push: [{\r\n                token: \"punctuation.definition.string.end.blade\",\r\n                regex: \"'\",\r\n                next: \"pop\"\r\n            }, {\r\n                token: \"string.character.escape.blade\",\r\n                regex: \"\\\\\\\\.\"\r\n            }, {\r\n                defaultToken: \"string.quoted.double.blade\"\r\n            }]\r\n        }],\r\n        variables: [{\r\n            token: \"variable.blade\",\r\n            regex: \"\\\\$([a-zA-Z_][a-zA-Z0-9_]*)\\\\b\"\r\n        }, {\r\n            token: [\"keyword.operator.blade\", \"constant.other.property.blade\"],\r\n            regex: \"(->)([a-zA-Z_][a-zA-Z0-9_]*)\\\\b\"\r\n        }, {\r\n            token: [\"keyword.operator.blade\",\r\n                \"meta.function-call.object.blade\",\r\n                \"punctuation.definition.variable.blade\",\r\n                \"variable.blade\",\r\n                \"punctuation.definition.variable.blade\"\r\n            ],\r\n            regex: \"(->)([a-zA-Z_][a-zA-Z0-9_]*)(\\\\()(.*?)(\\\\))\"\r\n        }]\r\n    };\r\n\r\n    var bladeStart = bladeRules.start;\r\n\r\n    for (var rule in this.$rules) {\r\n        this.$rules[rule].unshift.apply(this.$rules[rule], bladeStart);\r\n    }\r\n\r\n    Object.keys(bladeRules).forEach(function(x) {\r\n        if (!this.$rules[x])\r\n            this.$rules[x] = bladeRules[x];\r\n    }, this);\r\n\r\n    this.normalizeRules();\r\n};\r\n\r\n\r\noop.inherits(PHPLaravelBladeHighlightRules, PhpHighlightRules);\r\n\r\nexports.PHPLaravelBladeHighlightRules = PHPLaravelBladeHighlightRules;\r\n});\r\n"]}