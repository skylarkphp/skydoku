{"version":3,"sources":["mode/csound_score_highlight_rules.js"],"names":["define","require","exports","module","oop","CsoundPreprocessorHighlightRules","CsoundScoreHighlightRules","call","this","quotedStringContents","push","token","regex","start","$rules","next","comments","numbers","pushRule","addRules","repeat section","repeat section before label","quoted string","popRule","defaultToken","loop after left brace","loop after repeat count","loop after macro name","normalizeRules","inherits"],"mappings":";;;;;;;AAAAA,OAAO,SAASC,QAASC,QAASC,QAClC,aAEA,IAAIC,EAAMH,QAAQ,cAEdI,EAAmCJ,QAAQ,yCAAyCI,iCAEpFC,EAA4B,WAE5BD,EAAiCE,KAAKC,MAEtCA,KAAKC,qBAAqBC,MACtBC,MAAQ,+BACRC,MAAQ,WAGZ,IAAIC,EAAQL,KAAKM,OAAOD,MACxBA,EAAMH,MAEEC,MAAQ,+BACRC,MAAQ,oBAIRD,MAAQ,+BACRC,MAAQ,MAMRD,MAAQ,yCACRC,MAAQ,MAERD,OAAS,+BAAgC,iDACzCC,MAAQ,sBAERD,MAAQ,6BACRC,MAAQ,OACRF,OAEQC,MAAQ,QACRC,MAAQ,IACRG,KAAQ,OAEZP,KAAKQ,UAEDL,MAAQ,iCACRC,MAAQ,mBAIhBD,MAAQ,oCACRC,MAAQ,MACRG,KAAQ,kBAGZP,KAAKS,SAGDN,MAAQ,gCACRC,MAAQ,sBAGZJ,KAAKU,UACDP,MAAQ,mDACRC,MAAQ,IACRG,KAAQ,kBAGZP,KAAKU,UACDP,MAAQ,6CACRC,MAAQ,IACRG,KAAQ,2BAIhBP,KAAKW,UACDC,mBAEQT,MAAQ,QACRC,MAAQ,IACRG,KAAQ,SAEZP,KAAKQ,UAEDL,MAAQ,gDACRC,MAAQ,MACRG,KAAQ,gCAGhBM,gCAEQV,MAAQ,QACRC,MAAQ,IACRG,KAAQ,SAEZP,KAAKQ,UAEDL,MAAQ,iCACRC,MAAQ,eACRG,KAAQ,UAIhBO,iBACId,KAAKe,SACDZ,MAAQ,iDACRC,MAAQ,MAEZJ,KAAKC,sBAEDe,aAAc,+BAItBC,yBACIjB,KAAKe,SACDZ,MAAQ,gDACRC,MAAQ,MACRG,KAAQ,4BAEZP,KAAKQ,UAEDL,MAAQ,yBACRC,MAAQ,SAGhBc,2BACIlB,KAAKe,SACDZ,MAAQ,iDACRC,MAAQ,iBACRG,KAAQ,0BAEZP,KAAKQ,UAEDL,MAAQ,yBACRC,MAAQ,SAGhBe,yBACId,EACAL,KAAKe,SACDZ,MAAQ,2CACRC,MAAQ,SAKpBJ,KAAKoB,kBAGTxB,EAAIyB,SAASvB,EAA2BD,GAExCH,QAAQI,0BAA4BA","file":"../../mode/csound_score_highlight_rules.js","sourcesContent":["define(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\n\r\nvar CsoundPreprocessorHighlightRules = require(\"./csound_preprocessor_highlight_rules\").CsoundPreprocessorHighlightRules;\r\n\r\nvar CsoundScoreHighlightRules = function() {\r\n\r\n    CsoundPreprocessorHighlightRules.call(this);\r\n\r\n    this.quotedStringContents.push({\r\n        token : \"invalid.illegal.csound-score\",\r\n        regex : /[^\"]*$/\r\n    });\r\n\r\n    var start = this.$rules.start;\r\n    start.push(\r\n        {\r\n            token : \"keyword.control.csound-score\",\r\n            regex : /[abCdefiqstvxy]/\r\n        }, {\r\n            // w statements are generated internally and should not be used; see\r\n            // https://github.com/csound/csound/issues/750.\r\n            token : \"invalid.illegal.csound-score\",\r\n            regex : /w/\r\n        }, {\r\n            // z is not a statement, but rather a constant equal to\r\n            // 800,000,000,000. 800 billion seconds is about 25,367.8 years. See\r\n            // also https://csound.github.io/docs/manual/ScoreTop.html and\r\n            // https://github.com/csound/csound/search?q=stof+path%3AEngine+filename%3Asread.c.\r\n            token : \"constant.numeric.language.csound-score\",\r\n            regex : /z/\r\n        }, {\r\n            token : [\"keyword.control.csound-score\", \"constant.numeric.integer.decimal.csound-score\"],\r\n            regex : /([nNpP][pP])(\\d+)/\r\n        }, {\r\n            token : \"keyword.other.csound-score\",\r\n            regex : /[mn]/,\r\n            push  : [\r\n                {\r\n                    token : \"empty\",\r\n                    regex : /$/,\r\n                    next  : \"pop\"\r\n                },\r\n                this.comments,\r\n                {\r\n                    token : \"entity.name.label.csound-score\",\r\n                    regex : /[A-Z_a-z]\\w*/\r\n                }\r\n            ]\r\n        }, {\r\n            token : \"keyword.preprocessor.csound-score\",\r\n            regex : /r\\b/,\r\n            next  : \"repeat section\"\r\n        },\r\n\r\n        this.numbers,\r\n\r\n        {\r\n            token : \"keyword.operator.csound-score\",\r\n            regex : \"[!+\\\\-*/^%&|<>#~.]\"\r\n        },\r\n\r\n        this.pushRule({\r\n            token : \"punctuation.definition.string.begin.csound-score\",\r\n            regex : /\"/,\r\n            next  : \"quoted string\"\r\n        }),\r\n\r\n        this.pushRule({\r\n            token : \"punctuation.braced-loop.begin.csound-score\",\r\n            regex : /{/,\r\n            next  : \"loop after left brace\"\r\n        })\r\n    );\r\n\r\n    this.addRules({\r\n        \"repeat section\": [\r\n            {\r\n                token : \"empty\",\r\n                regex : /$/,\r\n                next  : \"start\"\r\n            },\r\n            this.comments,\r\n            {\r\n                token : \"constant.numeric.integer.decimal.csound-score\",\r\n                regex : /\\d+/,\r\n                next  : \"repeat section before label\"\r\n            }\r\n        ],\r\n        \"repeat section before label\": [\r\n            {\r\n                token : \"empty\",\r\n                regex : /$/,\r\n                next  : \"start\"\r\n            },\r\n            this.comments,\r\n            {\r\n                token : \"entity.name.label.csound-score\",\r\n                regex : /[A-Z_a-z]\\w*/,\r\n                next  : \"start\"\r\n            }\r\n        ],\r\n\r\n        \"quoted string\": [\r\n            this.popRule({\r\n                token : \"punctuation.definition.string.end.csound-score\",\r\n                regex : /\"/\r\n            }),\r\n            this.quotedStringContents,\r\n            {\r\n                defaultToken: \"string.quoted.csound-score\"\r\n            }\r\n        ],\r\n\r\n        \"loop after left brace\": [\r\n            this.popRule({\r\n                token : \"constant.numeric.integer.decimal.csound-score\",\r\n                regex : /\\d+/,\r\n                next  : \"loop after repeat count\"\r\n            }),\r\n            this.comments,\r\n            {\r\n                token : \"invalid.illegal.csound\",\r\n                regex : /\\S.*/\r\n            }\r\n        ],\r\n        \"loop after repeat count\": [\r\n            this.popRule({\r\n                token : \"entity.name.function.preprocessor.csound-score\",\r\n                regex : /[A-Z_a-z]\\w*\\b/,\r\n                next  : \"loop after macro name\"\r\n            }),\r\n            this.comments,\r\n            {\r\n                token : \"invalid.illegal.csound\",\r\n                regex : /\\S.*/\r\n            }\r\n        ],\r\n        \"loop after macro name\": [\r\n            start,\r\n            this.popRule({\r\n                token : \"punctuation.braced-loop.end.csound-score\",\r\n                regex : /}/\r\n            })\r\n        ]\r\n    });\r\n\r\n    this.normalizeRules();\r\n};\r\n\r\noop.inherits(CsoundScoreHighlightRules, CsoundPreprocessorHighlightRules);\r\n\r\nexports.CsoundScoreHighlightRules = CsoundScoreHighlightRules;\r\n});\r\n"]}