{"version":3,"sources":["mode/html_worker.js"],"names":["define","require","exports","module","oop","Mirror","SAXParser","errorTypes","expected-doctype-but-got-start-tag","expected-doctype-but-got-chars","non-html-root","Worker","sender","call","this","setTimeout","context","inherits","setOptions","options","onUpdate","value","doc","getValue","parser","errors","noop","contentHandler","startDocument","endDocument","startElement","endElement","characters","errorHandler","error","message","location","code","push","row","line","column","text","type","parseFragment","parse","emit","prototype"],"mappings":";;;;;;;AA8BAA,OAAO,SAASC,EAASC,EAASC,GAClC,aAEA,IAAIC,EAAMH,EAAQ,cAEdI,GADOJ,EAAQ,eACNA,EAAQ,oBAAoBI,QACrCC,EAAYL,EAAQ,oBAAoBK,UAExCC,GACAC,qCAAsC,OACtCC,iCAAkC,OAClCC,gBAAiB,QAGjBC,EAAST,EAAQS,OAAS,SAASC,GACnCP,EAAOQ,KAAKC,KAAMF,GAClBE,KAAKC,WAAW,KAChBD,KAAKE,QAAU,MAGnBZ,EAAIa,SAASN,EAAQN,GAErB,WAEIS,KAAKI,WAAa,SAASC,GACvBL,KAAKE,QAAUG,EAAQH,SAG3BF,KAAKM,SAAW,WACZ,IAAIC,EAAQP,KAAKQ,IAAIC,WACrB,GAAKF,EAAL,CAEA,IAAIG,EAAS,IAAIlB,EACbmB,KACAC,EAAO,aACXF,EAAOG,gBACJC,cAAeF,EACfG,YAAaH,EACbI,aAAcJ,EACdK,WAAYL,EACZM,WAAYN,GAEfF,EAAOS,cACHC,MAAO,SAASC,EAASC,EAAUC,GAC/BZ,EAAOa,MACHC,IAAKH,EAASI,KACdC,OAAQL,EAASK,OACjBC,KAAMP,EACNQ,KAAMpC,EAAW8B,IAAS,YAIlCvB,KAAKE,QACLQ,EAAOoB,cAAcvB,EAAOP,KAAKE,SAEjCQ,EAAOqB,MAAMxB,GACjBP,KAAKF,OAAOkC,KAAK,QAASrB,MAG/BZ,KAAKF,EAAOoC","file":"../../mode/html_worker.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2010, Ajax.org B.V.\r\n * All rights reserved.\r\n * \r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n * \r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\ndefine(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar lang = require(\"../lib/lang\");\r\nvar Mirror = require(\"../worker/mirror\").Mirror;\r\nvar SAXParser = require(\"./html/saxparser\").SAXParser;\r\n\r\nvar errorTypes = {\r\n    \"expected-doctype-but-got-start-tag\": \"info\",\r\n    \"expected-doctype-but-got-chars\": \"info\",\r\n    \"non-html-root\": \"info\"\r\n};\r\n\r\nvar Worker = exports.Worker = function(sender) {\r\n    Mirror.call(this, sender);\r\n    this.setTimeout(400);\r\n    this.context = null;\r\n};\r\n\r\noop.inherits(Worker, Mirror);\r\n\r\n(function() {\r\n\r\n    this.setOptions = function(options) {\r\n        this.context = options.context;\r\n    };\r\n\r\n    this.onUpdate = function() {\r\n        var value = this.doc.getValue();\r\n        if (!value)\r\n            return;\r\n        var parser = new SAXParser();\r\n        var errors = [];\r\n        var noop = function(){};\r\n        parser.contentHandler = {\r\n           startDocument: noop,\r\n           endDocument: noop,\r\n           startElement: noop,\r\n           endElement: noop,\r\n           characters: noop\r\n        };\r\n        parser.errorHandler = {\r\n            error: function(message, location, code) {\r\n                errors.push({\r\n                    row: location.line,\r\n                    column: location.column,\r\n                    text: message,\r\n                    type: errorTypes[code] || \"error\"\r\n                });\r\n            }\r\n        };\r\n        if (this.context)\r\n            parser.parseFragment(value, this.context);\r\n        else\r\n            parser.parse(value);\r\n        this.sender.emit(\"error\", errors);\r\n    };\r\n\r\n}).call(Worker.prototype);\r\n\r\n});\r\n"]}