{"version":3,"sources":["mode/lsl.js"],"names":["define","require","exports","module","Rules","LSLHighlightRules","Outdent","MatchingBraceOutdent","TextMode","Range","Mode","CstyleBehaviour","CStyleFoldMode","FoldMode","this","HighlightRules","$outdent","$behaviour","foldingRules","inherits","lineCommentStart","blockComment","start","end","getNextLineIndent","state","line","tab","indent","$getIndent","tokenizedLine","getTokenizer","getLineTokens","tokens","length","type","match","checkOutdent","input","autoOutdent","doc","row","$id","call","prototype"],"mappings":";;;;;;;AA8BAA,OAAO,SAASC,EAASC,EAASC,GAClC,aAEA,IAAIC,EAAQH,EAAQ,yBAAyBI,kBACzCC,EAAUL,EAAQ,4BAA4BM,qBAE9CC,GADQP,EAAQ,YAAYQ,MACjBR,EAAQ,UAAUS,MAC7BC,EAAkBV,EAAQ,sBAAsBU,gBAChDC,EAAiBX,EAAQ,oBAAoBY,SAG7CH,EAAO,WACPI,KAAKC,eAAiBX,EACtBU,KAAKE,SAAW,IAAIV,EACpBQ,KAAKG,WAAa,IAAIN,EACtBG,KAAKI,aAAe,IAAIN,GANlBX,EAAQ,cAQdkB,SAAST,EAAMF,GAEnB,WAEIM,KAAKM,kBAAoB,MAEzBN,KAAKO,cACDC,MAAO,KACPC,IAAK,MAGTT,KAAKU,kBAAoB,SAASC,EAAOC,EAAMC,GAC3C,IAAIC,EAASd,KAAKe,WAAWH,GAEzBI,EAAgBhB,KAAKiB,eAAeC,cAAcN,EAAMD,GACxDQ,EAASH,EAAcG,OACZH,EAAcL,MAE7B,GAAIQ,EAAOC,QAA2C,sBAAjCD,EAAOA,EAAOC,OAAO,GAAGC,KACzC,OAAOP,EAGG,UAAVH,IACYC,EAAKU,MAAM,qBAEnBR,GAAUD,IAIlB,OAAOC,GAGXd,KAAKuB,aAAe,SAASZ,EAAOC,EAAMY,GACtC,OAAOxB,KAAKE,SAASqB,aAAaX,EAAMY,IAG5CxB,KAAKyB,YAAc,SAASd,EAAOe,EAAKC,GACpC3B,KAAKE,SAASuB,YAAYC,EAAKC,IAGnC3B,KAAK4B,IAAM,gBACZC,KAAKjC,EAAKkC,WAEb1C,EAAQQ,KAAOA","file":"../../mode/lsl.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2013, Ajax.org B.V.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\ndefine(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar Rules = require(\"./lsl_highlight_rules\").LSLHighlightRules;\r\nvar Outdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\r\nvar Range = require(\"../range\").Range;\r\nvar TextMode = require(\"./text\").Mode;\r\nvar CstyleBehaviour = require(\"./behaviour/cstyle\").CstyleBehaviour;\r\nvar CStyleFoldMode = require(\"./folding/cstyle\").FoldMode;\r\nvar oop = require(\"../lib/oop\");\r\n\r\nvar Mode = function() {\r\n    this.HighlightRules = Rules;\r\n    this.$outdent = new Outdent();\r\n    this.$behaviour = new CstyleBehaviour();\r\n    this.foldingRules = new CStyleFoldMode();\r\n};\r\noop.inherits(Mode, TextMode);\r\n\r\n(function() {\r\n\r\n    this.lineCommentStart = [\"//\"];\r\n\r\n    this.blockComment = {\r\n        start: \"/*\",\r\n        end: \"*/\"\r\n    };\r\n\r\n    this.getNextLineIndent = function(state, line, tab) {\r\n        var indent = this.$getIndent(line);\r\n\r\n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\r\n        var tokens = tokenizedLine.tokens;\r\n        var endState = tokenizedLine.state;\r\n\r\n        if (tokens.length && tokens[tokens.length-1].type === \"comment.block.lsl\") {\r\n            return indent;\r\n        }\r\n\r\n        if (state === \"start\") {\r\n            var match = line.match(/^.*[\\{\\(\\[]\\s*$/);\r\n            if (match) {\r\n                indent += tab;\r\n            }\r\n        }\r\n\r\n        return indent;\r\n    };\r\n\r\n    this.checkOutdent = function(state, line, input) {\r\n        return this.$outdent.checkOutdent(line, input);\r\n    };\r\n\r\n    this.autoOutdent = function(state, doc, row) {\r\n        this.$outdent.autoOutdent(doc, row);\r\n    };\r\n\r\n    this.$id = \"ace/mode/lsl\";\r\n}).call(Mode.prototype);\r\n\r\nexports.Mode = Mode;\r\n});\r\n"]}