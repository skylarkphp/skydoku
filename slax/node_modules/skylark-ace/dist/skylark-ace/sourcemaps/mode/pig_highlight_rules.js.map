{"version":3,"sources":["mode/pig_highlight_rules.js"],"names":["define","require","exports","module","oop","TextHighlightRules","PigHighlightRules","this","$rules","start","token","regex","push","next","defaultToken","caseInsensitive","todo","include","normalizeRules","metaData","fileTypes","name","scopeName","inherits"],"mappings":";;;;;;;AAoCAA,OAAO,SAASC,EAASC,EAASC,GAClC,aAEA,IAAIC,EAAMH,EAAQ,cACdI,EAAqBJ,EAAQ,0BAA0BI,mBAEvDC,EAAoB,WAIpBC,KAAKC,QACDC,QACIC,MAAO,oBACPC,MAAO,OACPC,OACIF,MAAO,oBACPC,MAAO,OACPE,KAAM,QAENC,aAAc,wBAGlBJ,MAAO,oCACPC,MAAO,UAEPD,MAAO,sBACPC,MAAO,iWACPI,iBAAiB,IAEjBL,MAAO,wBACPC,MAAO,yGACPI,iBAAiB,IAEjBL,MAAO,+BACPC,MAAO,8JAEPD,MAAO,2BACPC,MAAO,0HAEPD,MAAO,gCACPC,MAAO,qJAEPD,MAAO,kCACPC,MAAO,wLAEPD,MAAO,oCACPC,MAAO,ySAEPD,MAAO,+BACPC,MAAO,mEAEPD,MAAO,eACPC,MAAO,oBAEPD,MAAO,wBACPC,MAAO,8CACPI,iBAAiB,IAEjBL,MAAO,uBACPC,MAAO,sBAEPD,MAAO,kCACPC,MAAO,gDACPI,iBAAiB,IAEjBL,MAAO,kCACPC,MAAO,kCAEPD,MAAO,2BACPC,MAAO,IACPC,OACIF,MAAO,2BACPC,MAAO,IACPE,KAAM,QAENH,MAAO,gCACPC,MAAO,QAEPG,aAAc,+BAGlBJ,MAAO,2BACPC,MAAO,IACPC,OACIF,MAAO,2BACPC,MAAO,IACPE,KAAM,QAENH,MAAO,gCACPC,MAAO,QAEPG,aAAc,+BAGlBE,MACIN,OACI,OACA,wBACA,OACA,8BAEJC,MAAO,wBACPI,iBAAiB,EACjBH,OACIF,MAAO,OACPC,MAAO,IACPE,KAAM,QAENI,QAAS,aAIjBP,OACI,OACA,oBACA,OACA,0BAEJC,MAAO,2CACPI,iBAAiB,EACjBH,OACIF,MAAO,OACPC,MAAO,MACPE,KAAM,WAKlBN,KAAKW,kBAGTZ,EAAkBa,UACdC,WAAY,OACZC,KAAM,MACNC,UAAW,cAIflB,EAAImB,SAASjB,EAAmBD,GAEhCH,EAAQI,kBAAoBA","file":"../../mode/pig_highlight_rules.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2012, Ajax.org B.V.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\n/* This file was autogenerated from Pig.tmLanguage (uuid: ) */\r\n/****************************************************************************************\r\n * IT MIGHT NOT BE PERFECT ...But it's a good start from an existing *.tmlanguage file. *\r\n * fileTypes                                                                            *\r\n ****************************************************************************************/\r\n\r\ndefine(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\r\n\r\nvar PigHighlightRules = function() {\r\n    // regexp must not have capturing parentheses. Use (?:) instead.\r\n    // regexps are ordered -> the first match is used\r\n\r\n    this.$rules = {\r\n        start: [{\r\n            token: \"comment.block.pig\",\r\n            regex: /\\/\\*/,\r\n            push: [{\r\n                token: \"comment.block.pig\",\r\n                regex: /\\*\\//,\r\n                next: \"pop\"\r\n            }, {\r\n                defaultToken: \"comment.block.pig\"\r\n            }]\r\n        }, {\r\n            token: \"comment.line.double-dash.asciidoc\",\r\n            regex: /--.*$/\r\n        }, {\r\n            token: \"keyword.control.pig\",\r\n            regex: /\\b(?:ASSERT|LOAD|STORE|DUMP|FILTER|DISTINCT|FOREACH|GENERATE|STREAM|JOIN|COGROUP|GROUP|CROSS|ORDER|LIMIT|UNION|SPLIT|DESCRIBE|EXPLAIN|ILLUSTRATE|AS|BY|INTO|USING|LIMIT|PARALLEL|OUTER|INNER|DEFAULT|LEFT|SAMPLE|RANK|CUBE|ALL|KILL|QUIT|MAPREDUCE|ASC|DESC|THROUGH|SHIP|CACHE|DECLARE|CASE|WHEN|THEN|END|IN|PARTITION|FULL|IMPORT|IF|ONSCHEMA|INPUT|OUTPUT)\\b/,\r\n            caseInsensitive: true\r\n        }, {\r\n            token: \"storage.datatypes.pig\",\r\n            regex: /\\b(?:int|long|float|double|chararray|bytearray|boolean|datetime|biginteger|bigdecimal|tuple|bag|map)\\b/,\r\n            caseInsensitive: true\r\n        }, {\r\n            token: \"support.function.storage.pig\",\r\n            regex: /\\b(?:PigStorage|BinStorage|BinaryStorage|PigDump|HBaseStorage|JsonLoader|JsonStorage|AvroStorage|TextLoader|PigStreaming|TrevniStorage|AccumuloStorage)\\b/\r\n        }, {\r\n            token: \"support.function.udf.pig\",\r\n            regex: /\\b(?:DIFF|TOBAG|TOMAP|TOP|TOTUPLE|RANDOM|FLATTEN|flatten|CUBE|ROLLUP|IsEmpty|ARITY|PluckTuple|SUBTRACT|BagToString)\\b/\r\n        }, {\r\n            token: \"support.function.udf.math.pig\",\r\n            regex: /\\b(?:ABS|ACOS|ASIN|ATAN|CBRT|CEIL|COS|COSH|EXP|FLOOR|LOG|LOG10|ROUND|ROUND_TO|SIN|SINH|SQRT|TAN|TANH|AVG|COUNT|COUNT_STAR|MAX|MIN|SUM|COR|COV)\\b/\r\n        }, {\r\n            token: \"support.function.udf.string.pig\",\r\n            regex: /\\b(?:CONCAT|INDEXOF|LAST_INDEX_OF|LCFIRST|LOWER|REGEX_EXTRACT|REGEX_EXTRACT_ALL|REPLACE|SIZE|STRSPLIT|SUBSTRING|TOKENIZE|TRIM|UCFIRST|UPPER|LTRIM|RTRIM|ENDSWITH|STARTSWITH|TRIM)\\b/\r\n        }, {\r\n            token: \"support.function.udf.datetime.pig\",\r\n            regex: /\\b(?:AddDuration|CurrentTime|DaysBetween|GetDay|GetHour|GetMilliSecond|GetMinute|GetMonth|GetSecond|GetWeek|GetWeekYear|GetYear|HoursBetween|MilliSecondsBetween|MinutesBetween|MonthsBetween|SecondsBetween|SubtractDuration|ToDate|WeeksBetween|YearsBetween|ToMilliSeconds|ToString|ToUnixTime)\\b/\r\n        }, {\r\n            token: \"support.function.command.pig\",\r\n            regex: /\\b(?:cat|cd|copyFromLocal|copyToLocal|cp|ls|mkdir|mv|pwd|rm)\\b/\r\n        }, {\r\n            token: \"variable.pig\",\r\n            regex: /\\$[a_zA-Z0-9_]+/\r\n        }, {\r\n            token: \"constant.language.pig\",\r\n            regex: /\\b(?:NULL|true|false|stdin|stdout|stderr)\\b/,\r\n            caseInsensitive: true\r\n        }, {\r\n            token: \"constant.numeric.pig\",\r\n            regex: /\\b\\d+(?:\\.\\d+)?\\b/\r\n        }, {\r\n            token: \"keyword.operator.comparison.pig\",\r\n            regex: /!=|==|<|>|<=|>=|\\b(?:MATCHES|IS|OR|AND|NOT)\\b/,\r\n            caseInsensitive: true\r\n        }, {\r\n            token: \"keyword.operator.arithmetic.pig\",\r\n            regex: /\\+|\\-|\\*|\\/|\\%|\\?|:|::|\\.\\.|#/\r\n        }, {\r\n            token: \"string.quoted.double.pig\",\r\n            regex: /\"/,\r\n            push: [{\r\n                token: \"string.quoted.double.pig\",\r\n                regex: /\"/,\r\n                next: \"pop\"\r\n            }, {\r\n                token: \"constant.character.escape.pig\",\r\n                regex: /\\\\./\r\n            }, {\r\n                defaultToken: \"string.quoted.double.pig\"\r\n            }]\r\n        }, {\r\n            token: \"string.quoted.single.pig\",\r\n            regex: /'/,\r\n            push: [{\r\n                token: \"string.quoted.single.pig\",\r\n                regex: /'/,\r\n                next: \"pop\"\r\n            }, {\r\n                token: \"constant.character.escape.pig\",\r\n                regex: /\\\\./\r\n            }, {\r\n                defaultToken: \"string.quoted.single.pig\"\r\n            }]\r\n        }, {\r\n            todo: {\r\n                token: [\r\n                    \"text\",\r\n                    \"keyword.parameter.pig\",\r\n                    \"text\",\r\n                    \"storage.type.parameter.pig\"\r\n                ],\r\n                regex: /^(\\s*)(set)(\\s+)(\\S+)/,\r\n                caseInsensitive: true,\r\n                push: [{\r\n                    token: \"text\",\r\n                    regex: /$/,\r\n                    next: \"pop\"\r\n                }, {\r\n                    include: \"$self\"\r\n                }]\r\n            }\r\n        }, {\r\n            token: [\r\n                \"text\",\r\n                \"keyword.alias.pig\",\r\n                \"text\",\r\n                \"storage.type.alias.pig\"\r\n            ],\r\n            regex: /(\\s*)(DEFINE|DECLARE|REGISTER)(\\s+)(\\S+)/,\r\n            caseInsensitive: true,\r\n            push: [{\r\n                token: \"text\",\r\n                regex: /;?$/,\r\n                next: \"pop\"\r\n            }]\r\n        }]\r\n    };\r\n    \r\n    this.normalizeRules();\r\n};\r\n\r\nPigHighlightRules.metaData = {\r\n    fileTypes: [\"pig\"],\r\n    name: \"Pig\",\r\n    scopeName: \"source.pig\"\r\n};\r\n\r\n\r\noop.inherits(PigHighlightRules, TextHighlightRules);\r\n\r\nexports.PigHighlightRules = PigHighlightRules;\r\n});\r\n"]}