{"version":3,"sources":["mode/gherkin.js"],"names":["define","require","exports","module","oop","TextMode","Mode","GherkinHighlightRules","this","HighlightRules","$behaviour","$defaultBehaviour","inherits","lineCommentStart","$id","getNextLineIndent","state","line","tab","indent","$getIndent","tokens","getTokenizer","getLineTokens","console","log","match","length","type","call","prototype"],"mappings":";;;;;;;AA8BAA,OAAO,SAASC,EAASC,EAASC,GAElC,IAAIC,EAAMH,EAAQ,cACdI,EAAWJ,EAAQ,UAAUK,KAC7BC,EAAwBN,EAAQ,6BAA6BM,sBAE7DD,EAAO,WACPE,KAAKC,eAAiBF,EACtBC,KAAKE,WAAaF,KAAKG,mBAE3BP,EAAIQ,SAASN,EAAMD,GAEnB,WACIG,KAAKK,iBAAmB,IACxBL,KAAKM,IAAM,mBAEXN,KAAKO,kBAAoB,SAASC,EAAOC,EAAMC,GAC3C,IAAIC,EAASX,KAAKY,WAAWH,GAIzBI,EADgBb,KAAKc,eAAeC,cAAcN,EAAMD,GACjCK,OAQ3B,OANAG,QAAQC,IAAIT,GAETC,EAAKS,MAAM,aACVP,GAAU,MAGVE,EAAOM,QAA0C,WAAhCN,EAAOA,EAAOM,OAAO,GAAGC,KAClCT,GAIE,SAATH,IACIC,EAAKS,MAAM,oDACXP,GAlBK,KAmBCF,EAAKS,MAAM,gCACjBP,GApBK,KAqBCF,EAAKS,MAAM,WACjBP,GAAU,OAKXA,KAEZU,KAAKvB,EAAKwB,WAEb5B,EAAQI,KAAOA","file":"../../mode/gherkin.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2014, Ajax.org B.V.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\ndefine(function(require, exports, module) {\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar TextMode = require(\"./text\").Mode;\r\nvar GherkinHighlightRules = require(\"./gherkin_highlight_rules\").GherkinHighlightRules;\r\n\r\nvar Mode = function() {\r\n    this.HighlightRules = GherkinHighlightRules;\r\n    this.$behaviour = this.$defaultBehaviour;\r\n};\r\noop.inherits(Mode, TextMode);\r\n\r\n(function() {\r\n    this.lineCommentStart = \"#\";\r\n    this.$id = \"ace/mode/gherkin\";\r\n\r\n    this.getNextLineIndent = function(state, line, tab) {\r\n        var indent = this.$getIndent(line);\r\n        var space2 = \"  \";\r\n\r\n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\r\n        var tokens = tokenizedLine.tokens;\r\n        \r\n        console.log(state);\r\n        \r\n        if(line.match(\"[ ]*\\\\|\")) {\r\n            indent += \"| \";\r\n        }\r\n\r\n        if (tokens.length && tokens[tokens.length-1].type == \"comment\") {\r\n            return indent;\r\n        }\r\n        \r\n\r\n        if (state == \"start\") {\r\n            if (line.match(\"Scenario:|Feature:|Scenario Outline:|Background:\")) {\r\n                indent += space2;\r\n            } else if(line.match(\"(Given|Then).+(:)$|Examples:\")) {\r\n                indent += space2;\r\n            } else if(line.match(\"\\\\*.+\")) {\r\n                indent += \"* \";\r\n            } \r\n        }\r\n        \r\n\r\n        return indent;\r\n    };\r\n}).call(Mode.prototype);\r\n\r\nexports.Mode = Mode;\r\n});"]}