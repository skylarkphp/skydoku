{"version":3,"sources":["mode/css_worker.js"],"names":["define","require","exports","module","oop","lang","Mirror","CSSLint","Worker","sender","call","this","setTimeout","ruleset","setDisabledRules","setInfoRules","inherits","ruleNames","split","infoRules","arrayToMap","doc","getValue","deferredUpdate","schedule","all","getRules","forEach","x","id","onUpdate","value","emit","result","verify","messages","map","msg","row","line","column","col","text","message","type","rule","name","prototype"],"mappings":";;;;;;;AA8BAA,OAAO,SAASC,QAASC,QAASC,QAClC,aAEA,IAAIC,EAAMH,QAAQ,cACdI,EAAOJ,QAAQ,eACfK,EAASL,QAAQ,oBAAoBK,OACrCC,EAAUN,QAAQ,iBAAiBM,QAEnCC,EAASN,QAAQM,OAAS,SAASC,GACnCH,EAAOI,KAAKC,KAAMF,GAClBE,KAAKC,WAAW,KAChBD,KAAKE,QAAU,KACfF,KAAKG,iBAAiB,0BACtBH,KAAKI,aACH,gGAKNX,EAAIY,SAASR,EAAQF,GAErB,WACIK,KAAKI,aAAe,SAASE,GACD,iBAAbA,IACPA,EAAYA,EAAUC,MAAM,MAChCP,KAAKQ,UAAYd,EAAKe,WAAWH,GACjCN,KAAKU,IAAIC,YAAcX,KAAKY,eAAeC,SAAS,MAGxDb,KAAKG,iBAAmB,SAASG,GAC7B,GAAKA,EAEE,CACqB,iBAAbA,IACPA,EAAYA,EAAUC,MAAM,MAChC,IAAIO,KAEJlB,EAAQmB,WAAWC,QAAQ,SAASC,GAChCH,EAAIG,EAAEC,KAAM,IAEhBZ,EAAUU,QAAQ,SAASC,UAChBH,EAAIG,KAGfjB,KAAKE,QAAUY,OAbfd,KAAKE,QAAU,KAenBF,KAAKU,IAAIC,YAAcX,KAAKY,eAAeC,SAAS,MAGxDb,KAAKmB,SAAW,WACZ,IAAIC,EAAQpB,KAAKU,IAAIC,WACrB,IAAKS,EACD,OAAOpB,KAAKF,OAAOuB,KAAK,eAC5B,IAAIb,EAAYR,KAAKQ,UAEjBc,EAAS1B,EAAQ2B,OAAOH,EAAOpB,KAAKE,SACxCF,KAAKF,OAAOuB,KAAK,WAAYC,EAAOE,SAASC,IAAI,SAASC,GACtD,OACIC,IAAKD,EAAIE,KAAO,EAChBC,OAAQH,EAAII,IAAM,EAClBC,KAAML,EAAIM,QACVC,KAAMzB,EAAUkB,EAAIQ,KAAKhB,IAAM,OAASQ,EAAIO,KAC5CC,KAAMR,EAAIQ,KAAKC,WAK5BpC,KAAKF,EAAOuC","file":"../../mode/css_worker.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2010, Ajax.org B.V.\r\n * All rights reserved.\r\n * \r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n * \r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\ndefine(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar lang = require(\"../lib/lang\");\r\nvar Mirror = require(\"../worker/mirror\").Mirror;\r\nvar CSSLint = require(\"./css/csslint\").CSSLint;\r\n\r\nvar Worker = exports.Worker = function(sender) {\r\n    Mirror.call(this, sender);\r\n    this.setTimeout(400);\r\n    this.ruleset = null;\r\n    this.setDisabledRules(\"ids|order-alphabetical\");\r\n    this.setInfoRules(\r\n      \"adjoining-classes|qualified-headings|zero-units|gradients|\" +\r\n      \"import|outline-none|vendor-prefix\"\r\n    );\r\n};\r\n\r\noop.inherits(Worker, Mirror);\r\n\r\n(function() {\r\n    this.setInfoRules = function(ruleNames) {\r\n        if (typeof ruleNames == \"string\")\r\n            ruleNames = ruleNames.split(\"|\");\r\n        this.infoRules = lang.arrayToMap(ruleNames);\r\n        this.doc.getValue() && this.deferredUpdate.schedule(100);\r\n    };\r\n\r\n    this.setDisabledRules = function(ruleNames) {\r\n        if (!ruleNames) {\r\n            this.ruleset = null;\r\n        } else {\r\n            if (typeof ruleNames == \"string\")\r\n                ruleNames = ruleNames.split(\"|\");\r\n            var all = {};\r\n\r\n            CSSLint.getRules().forEach(function(x){\r\n                all[x.id] = true;\r\n            });\r\n            ruleNames.forEach(function(x) {\r\n                delete all[x];\r\n            });\r\n            \r\n            this.ruleset = all;\r\n        }\r\n        this.doc.getValue() && this.deferredUpdate.schedule(100);\r\n    };\r\n\r\n    this.onUpdate = function() {\r\n        var value = this.doc.getValue();\r\n        if (!value)\r\n            return this.sender.emit(\"annotate\", []);\r\n        var infoRules = this.infoRules;\r\n\r\n        var result = CSSLint.verify(value, this.ruleset);\r\n        this.sender.emit(\"annotate\", result.messages.map(function(msg) {\r\n            return {\r\n                row: msg.line - 1,\r\n                column: msg.col - 1,\r\n                text: msg.message,\r\n                type: infoRules[msg.rule.id] ? \"info\" : msg.type,\r\n                rule: msg.rule.name\r\n            };\r\n        }));\r\n    };\r\n\r\n}).call(Worker.prototype);\r\n\r\n});\r\n"]}