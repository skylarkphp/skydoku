{"version":3,"sources":["mode/mixal_highlight_rules.js"],"names":["define","require","exports","module","oop","TextHighlightRules","MixalHighlightRules","isValidSymbol","string","search","isValidOp","op","indexOf","containsOnlySupportedCharacters","this","$rules","start","token","regex","label","space0","keyword","space1","literal","comment","address","defaultToken","inherits"],"mappings":";;;;;;;AA8BAA,OAAO,SAASC,EAASC,EAASC,GAClC,aAEA,IAAIC,EAAMH,EAAQ,cACdI,EAAqBJ,EAAQ,0BAA0BI,mBAEvDC,EAAsB,WACtB,IAAIC,EAAgB,SAASC,GACzB,OAAOA,GAAUA,EAAOC,OAAO,uCAAyC,GAAKD,EAAOC,OAAO,4BAA8B,GAGzHC,EAAY,SAASC,GACrB,OAAOA,IACH,MAAO,MAAO,OAAQ,MAAO,OAAQ,MAAO,OAAQ,MAAO,OAAQ,MAAO,OAAQ,MAClF,MAAO,MAAO,OAAQ,OAAQ,MAAO,MAAO,OAAQ,MAAO,MAAO,MAAO,MAAO,MAChF,MAAO,MAAO,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAC7E,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAAQ,MAC9E,KAAM,MAAO,OAAQ,MAAO,MAAO,MAAO,OAAQ,KAAM,KAAM,KAAM,MAAO,MAAO,MAClF,MAAO,MAAO,MAAO,OAAQ,OAAQ,OAAQ,MAAO,MAAO,MAAO,OAAQ,OAC1E,OAAQ,MAAO,MAAO,MAAO,OAAQ,OAAQ,OAAO,MAAO,MAAO,MAAO,OAAQ,OACjF,OAAQ,MAAO,MAAO,MAAO,OAAQ,OAAQ,OAAQ,MAAO,MAAO,MAAO,OAC1E,OAAQ,OAAO,MAAO,MAAO,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,MAAO,MAC3E,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAChF,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAChF,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAChF,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAChF,MAAO,OAAQ,MAAO,MAAO,OAC/BC,QAAQD,IAAO,GAGjBE,EAAkC,SAASL,GAC3C,OAAOA,IAA4E,GAAlEA,EAAOC,OAAO,iDAGnCK,KAAKC,QACDC,QACIC,MAAO,yBACPC,MAAO,aAEPD,MAAO,SAASE,EAAOC,EAAQC,EAASC,EAAQC,EAASC,GACrD,OACIjB,EAAcY,GAAS,iBAAmB,kBAC1C,OACA,kBACA,OACAN,EAAgCU,GAAW,OAAS,kBACpD,2BAGRL,MAAO,wCAEPD,MAAO,SAASE,EAAOC,EAAQC,EAASC,EAAQC,EAASC,GACrD,OACIjB,EAAcY,GAAS,iBAAmB,kBAC1C,OACA,kBACA,OACAN,EAAgCU,GAAW,OAAS,kBACpD,2BAGRL,MAAO,yCAEPD,MAAO,SAASE,EAAOC,EAAQT,EAAIa,GAC/B,OACIjB,EAAcY,GAAS,iBAAmB,kBAC1C,OACAT,EAAUC,GAAM,kBAAoB,kBACpC,2BAGRO,MAAO,6BAEPD,MAAO,SAASE,EAAOC,EAAQT,EAAIW,EAAQG,EAASD,GAChD,OACIjB,EAAcY,GAAS,iBAAmB,kBAC1C,OACAT,EAAUC,GAAM,kBAAoB,kBACpC,OACAE,EAAgCY,GAAW,OAAS,kBACpD,2BAGRP,MAAO,uCAEPQ,aAAc,WAK1BtB,EAAIuB,SAASrB,EAAqBD,GAElCH,EAAQI,oBAAsBA","file":"../../mode/mixal_highlight_rules.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2017, Ruslan Batdalov\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\ndefine(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\r\n\r\nvar MixalHighlightRules = function() {\r\n    var isValidSymbol = function(string) {\r\n        return string && string.search(/^[A-Z\\u0394\\u03a0\\u03a30-9]{1,10}$/) > -1 && string.search(/[A-Z\\u0394\\u03a0\\u03a3]/) > -1;\r\n    };\r\n\r\n    var isValidOp = function(op) {\r\n        return op && [\r\n            'NOP', 'ADD', 'FADD', 'SUB', 'FSUB', 'MUL', 'FMUL', 'DIV', 'FDIV', 'NUM', 'CHAR', 'HLT',\r\n            'SLA', 'SRA', 'SLAX', 'SRAX', 'SLC', 'SRC', 'MOVE', 'LDA', 'LD1', 'LD2', 'LD3', 'LD4',\r\n            'LD5', 'LD6', 'LDX', 'LDAN', 'LD1N', 'LD2N', 'LD3N', 'LD4N', 'LD5N', 'LD6N', 'LDXN',\r\n            'STA', 'ST1', 'ST2', 'ST3', 'ST4', 'ST5', 'ST6', 'STX', 'STJ', 'STZ', 'JBUS', 'IOC',\r\n            'IN', 'OUT', 'JRED', 'JMP', 'JSJ', 'JOV', 'JNOV', 'JL', 'JE', 'JG', 'JGE', 'JNE', 'JLE',\r\n            'JAN', 'JAZ', 'JAP', 'JANN', 'JANZ', 'JANP', 'J1N', 'J1Z', 'J1P', 'J1NN', 'J1NZ',\r\n            'J1NP', 'J2N', 'J2Z', 'J2P', 'J2NN', 'J2NZ', 'J2NP','J3N', 'J3Z', 'J3P', 'J3NN', 'J3NZ',\r\n            'J3NP', 'J4N', 'J4Z', 'J4P', 'J4NN', 'J4NZ', 'J4NP', 'J5N', 'J5Z', 'J5P', 'J5NN',\r\n            'J5NZ', 'J5NP','J6N', 'J6Z', 'J6P', 'J6NN', 'J6NZ', 'J6NP', 'JXAN', 'JXZ', 'JXP',\r\n            'JXNN', 'JXNZ', 'JXNP', 'INCA', 'DECA', 'ENTA', 'ENNA', 'INC1', 'DEC1', 'ENT1', 'ENN1',\r\n            'INC2', 'DEC2', 'ENT2', 'ENN2', 'INC3', 'DEC3', 'ENT3', 'ENN3', 'INC4', 'DEC4', 'ENT4',\r\n            'ENN4', 'INC5', 'DEC5', 'ENT5', 'ENN5', 'INC6', 'DEC6', 'ENT6', 'ENN6', 'INCX', 'DECX',\r\n            'ENTX', 'ENNX', 'CMPA', 'FCMP', 'CMP1', 'CMP2', 'CMP3', 'CMP4', 'CMP5', 'CMP6', 'CMPX',\r\n            'EQU', 'ORIG', 'CON', 'ALF', 'END'\r\n        ].indexOf(op) > -1;\r\n    };\r\n\r\n    var containsOnlySupportedCharacters = function(string) {\r\n        return string && string.search(/[^ A-Z\\u0394\\u03a0\\u03a30-9.,()+*/=$<>@;:'-]/) == -1;\r\n    };\r\n\r\n    this.$rules = {\r\n        \"start\" : [{\r\n            token: \"comment.line.character\",\r\n            regex: /^ *\\*.*$/\r\n        }, {\r\n            token: function(label, space0, keyword, space1, literal, comment) {\r\n                return [\r\n                    isValidSymbol(label) ? \"variable.other\" : \"invalid.illegal\",\r\n                    \"text\",\r\n                    \"keyword.control\",\r\n                    \"text\",\r\n                    containsOnlySupportedCharacters(literal) ? \"text\" : \"invalid.illegal\",\r\n                    \"comment.line.character\"\r\n                ];\r\n            },\r\n            regex: /^(\\S+)?( +)(ALF)(  )(.{5})(\\s+.*)?$/\r\n        }, {\r\n            token: function(label, space0, keyword, space1, literal, comment) {\r\n                return [\r\n                    isValidSymbol(label) ? \"variable.other\" : \"invalid.illegal\",\r\n                    \"text\",\r\n                    \"keyword.control\",\r\n                    \"text\",\r\n                    containsOnlySupportedCharacters(literal) ? \"text\" : \"invalid.illegal\",\r\n                    \"comment.line.character\"\r\n                ];\r\n            },\r\n            regex: /^(\\S+)?( +)(ALF)( )(\\S.{4})(\\s+.*)?$/\r\n        }, {\r\n            token: function(label, space0, op, comment) {\r\n                return [\r\n                    isValidSymbol(label) ? \"variable.other\" : \"invalid.illegal\",\r\n                    \"text\",\r\n                    isValidOp(op) ? \"keyword.control\" : \"invalid.illegal\",\r\n                    \"comment.line.character\"\r\n                ];\r\n            },\r\n            regex: /^(\\S+)?( +)(\\S+)(?:\\s*)$/\r\n        }, {\r\n            token: function(label, space0, op, space1, address, comment) {\r\n                return [\r\n                    isValidSymbol(label) ? \"variable.other\" : \"invalid.illegal\",\r\n                    \"text\",\r\n                    isValidOp(op) ? \"keyword.control\" : \"invalid.illegal\",\r\n                    \"text\",\r\n                    containsOnlySupportedCharacters(address) ? \"text\" : \"invalid.illegal\",\r\n                    \"comment.line.character\"\r\n                ];\r\n            },\r\n            regex: /^(\\S+)?( +)(\\S+)( +)(\\S+)(\\s+.*)?$/\r\n        }, {\r\n            defaultToken: \"text\"\r\n        }]\r\n    };\r\n};\r\n\r\noop.inherits(MixalHighlightRules, TextHighlightRules);\r\n\r\nexports.MixalHighlightRules = MixalHighlightRules;\r\n\r\n});\r\n"]}