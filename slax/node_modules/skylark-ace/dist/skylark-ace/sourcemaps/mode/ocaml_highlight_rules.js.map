{"version":3,"sources":["mode/ocaml_highlight_rules.js"],"names":["define","require","exports","module","oop","TextHighlightRules","OcamlHighlightRules","keywordMapper","this","createKeywordMapper","variable.language","keyword","constant.language","support.function","pointFloat","floatNumber","$rules","start","token","regex","next","integer","comment","defaultToken","qstring","inherits"],"mappings":";;;;;;;AA8BAA,OAAO,SAASC,EAASC,EAASC,GAClC,aAEA,IAAIC,EAAMH,EAAQ,cACdI,EAAqBJ,EAAQ,0BAA0BI,mBAEvDC,EAAsB,WAEtB,IAiMIC,EAAgBC,KAAKC,qBACrBC,oBAAqB,OACrBC,QAnMW,4QAoMXC,oBA5LmB,aA6LnBC,mBA3LmB,8uXA4LpB,cAWCC,EAAa,+CAEbC,EAAc,qFAA8BD,EAAa,IAE7DN,KAAKQ,QACDC,QAEQC,MAAQ,UACRC,MAAQ,0BAGRD,MAAQ,UACRC,MAAQ,WACRC,KAAO,YAGPF,MAAQ,SACRC,MAAQ,uCAGRD,MAAQ,SACRC,MAAQ,QAGRD,MAAQ,SACRC,MAAQ,IACRC,KAAQ,YAGRF,MAAQ,mBACRC,MAAQ,MAAQJ,EAAc,kBAG9BG,MAAQ,mBACRC,MAAQJ,IAGRG,MAAQ,mBACRC,MAAQE,yFAGRH,MAAQX,EACRY,MAAQ,gCAGRD,MAAQ,mBACRC,MAAQ,8GAGRD,MAAQ,eACRC,MAAQ,UAGRD,MAAQ,eACRC,MAAQ,YAGRD,MAAQ,OACRC,MAAQ,SAGhBG,UAEQJ,MAAQ,UACRC,MAAQ,SACRC,KAAO,UAGPG,aAAe,YAIvBC,UAEQN,MAAQ,SACRC,MAAQ,IACRC,KAAO,UAEPF,MAAQ,SACRC,MAAQ,SAMxBf,EAAIqB,SAASnB,EAAqBD,GAElCH,EAAQI,oBAAsBA","file":"../../mode/ocaml_highlight_rules.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2010, Ajax.org B.V.\r\n * All rights reserved.\r\n * \r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n * \r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\ndefine(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\r\n\r\nvar OcamlHighlightRules = function() {\r\n\r\n    var keywords = (\r\n        \"and|as|assert|begin|class|constraint|do|done|downto|else|end|\"  +\r\n        \"exception|external|for|fun|function|functor|if|in|include|\"     +\r\n        \"inherit|initializer|lazy|let|match|method|module|mutable|new|\"  +\r\n        \"object|of|open|or|private|rec|sig|struct|then|to|try|type|val|\" +\r\n        \"virtual|when|while|with\"\r\n    );\r\n\r\n    var builtinConstants = (\"true|false\");\r\n\r\n    var builtinFunctions = (\r\n        \"abs|abs_big_int|abs_float|abs_num|abstract_tag|accept|access|acos|add|\" +\r\n        \"add_available_units|add_big_int|add_buffer|add_channel|add_char|\" +\r\n        \"add_initializer|add_int_big_int|add_interfaces|add_num|add_string|\" +\r\n        \"add_substitute|add_substring|alarm|allocated_bytes|allow_only|\" +\r\n        \"allow_unsafe_modules|always|append|appname_get|appname_set|\" +\r\n        \"approx_num_exp|approx_num_fix|arg|argv|arith_status|array|\" +\r\n        \"array1_of_genarray|array2_of_genarray|array3_of_genarray|asin|asr|\" +\r\n        \"assoc|assq|at_exit|atan|atan2|auto_synchronize|background|basename|\" +\r\n        \"beginning_of_input|big_int_of_int|big_int_of_num|big_int_of_string|bind|\" +\r\n        \"bind_class|bind_tag|bits|bits_of_float|black|blit|blit_image|blue|bool|\" +\r\n        \"bool_of_string|bounded_full_split|bounded_split|bounded_split_delim|\" +\r\n        \"bprintf|break|broadcast|bscanf|button_down|c_layout|capitalize|cardinal|\" +\r\n        \"cardinal|catch|catch_break|ceil|ceiling_num|channel|char|char_of_int|\" +\r\n        \"chdir|check|check_suffix|chmod|choose|chop_extension|chop_suffix|chown|\" +\r\n        \"chown|chr|chroot|classify_float|clear|clear_available_units|\" +\r\n        \"clear_close_on_exec|clear_graph|clear_nonblock|clear_parser|\" +\r\n        \"close|close|closeTk|close_box|close_graph|close_in|close_in_noerr|\" +\r\n        \"close_out|close_out_noerr|close_process|close_process|\" +\r\n        \"close_process_full|close_process_in|close_process_out|close_subwindow|\" +\r\n        \"close_tag|close_tbox|closedir|closedir|closure_tag|code|combine|\" +\r\n        \"combine|combine|command|compact|compare|compare_big_int|compare_num|\" +\r\n        \"complex32|complex64|concat|conj|connect|contains|contains_from|contents|\" +\r\n        \"copy|cos|cosh|count|count|counters|create|create_alarm|create_image|\" +\r\n        \"create_matrix|create_matrix|create_matrix|create_object|\" +\r\n        \"create_object_and_run_initializers|create_object_opt|create_process|\" +\r\n        \"create_process|create_process_env|create_process_env|create_table|\" +\r\n        \"current|current_dir_name|current_point|current_x|current_y|curveto|\" +\r\n        \"custom_tag|cyan|data_size|decr|decr_num|default_available_units|delay|\" +\r\n        \"delete_alarm|descr_of_in_channel|descr_of_out_channel|destroy|diff|dim|\" +\r\n        \"dim1|dim2|dim3|dims|dirname|display_mode|div|div_big_int|div_num|\" +\r\n        \"double_array_tag|double_tag|draw_arc|draw_char|draw_circle|draw_ellipse|\" +\r\n        \"draw_image|draw_poly|draw_poly_line|draw_rect|draw_segments|draw_string|\" +\r\n        \"dummy_pos|dummy_table|dump_image|dup|dup2|elements|empty|end_of_input|\" +\r\n        \"environment|eprintf|epsilon_float|eq_big_int|eq_num|equal|err_formatter|\" +\r\n        \"error_message|escaped|establish_server|executable_name|execv|execve|execvp|\" +\r\n        \"execvpe|exists|exists2|exit|exp|failwith|fast_sort|fchmod|fchown|field|\" +\r\n        \"file|file_exists|fill|fill_arc|fill_circle|fill_ellipse|fill_poly|fill_rect|\" +\r\n        \"filter|final_tag|finalise|find|find_all|first_chars|firstkey|flatten|\" +\r\n        \"float|float32|float64|float_of_big_int|float_of_bits|float_of_int|\" +\r\n        \"float_of_num|float_of_string|floor|floor_num|flush|flush_all|flush_input|\" +\r\n        \"flush_str_formatter|fold|fold_left|fold_left2|fold_right|fold_right2|\" +\r\n        \"for_all|for_all2|force|force_newline|force_val|foreground|fork|\" +\r\n        \"format_of_string|formatter_of_buffer|formatter_of_out_channel|\" +\r\n        \"fortran_layout|forward_tag|fprintf|frexp|from|from_channel|from_file|\" +\r\n        \"from_file_bin|from_function|from_string|fscanf|fst|fstat|ftruncate|\" +\r\n        \"full_init|full_major|full_split|gcd_big_int|ge_big_int|ge_num|\" +\r\n        \"genarray_of_array1|genarray_of_array2|genarray_of_array3|get|\" +\r\n        \"get_all_formatter_output_functions|get_approx_printing|get_copy|\" +\r\n        \"get_ellipsis_text|get_error_when_null_denominator|get_floating_precision|\" +\r\n        \"get_formatter_output_functions|get_formatter_tag_functions|get_image|\" +\r\n        \"get_margin|get_mark_tags|get_max_boxes|get_max_indent|get_method|\" +\r\n        \"get_method_label|get_normalize_ratio|get_normalize_ratio_when_printing|\" +\r\n        \"get_print_tags|get_state|get_variable|getcwd|getegid|getegid|getenv|\" +\r\n        \"getenv|getenv|geteuid|geteuid|getgid|getgid|getgrgid|getgrgid|getgrnam|\" +\r\n        \"getgrnam|getgroups|gethostbyaddr|gethostbyname|gethostname|getitimer|\" +\r\n        \"getlogin|getpeername|getpid|getppid|getprotobyname|getprotobynumber|\" +\r\n        \"getpwnam|getpwuid|getservbyname|getservbyport|getsockname|getsockopt|\" +\r\n        \"getsockopt_float|getsockopt_int|getsockopt_optint|gettimeofday|getuid|\" +\r\n        \"global_replace|global_substitute|gmtime|green|grid|group_beginning|\" +\r\n        \"group_end|gt_big_int|gt_num|guard|handle_unix_error|hash|hash_param|\" +\r\n        \"hd|header_size|i|id|ignore|in_channel_length|in_channel_of_descr|incr|\" +\r\n        \"incr_num|index|index_from|inet_addr_any|inet_addr_of_string|infinity|\" +\r\n        \"infix_tag|init|init_class|input|input_binary_int|input_byte|input_char|\" +\r\n        \"input_line|input_value|int|int16_signed|int16_unsigned|int32|int64|\" +\r\n        \"int8_signed|int8_unsigned|int_of_big_int|int_of_char|int_of_float|\" +\r\n        \"int_of_num|int_of_string|integer_num|inter|interactive|inv|invalid_arg|\" +\r\n        \"is_block|is_empty|is_implicit|is_int|is_int_big_int|is_integer_num|\" +\r\n        \"is_relative|iter|iter2|iteri|join|junk|key_pressed|kill|kind|kprintf|\" +\r\n        \"kscanf|land|last_chars|layout|lazy_from_fun|lazy_from_val|lazy_is_val|\" +\r\n        \"lazy_tag|ldexp|le_big_int|le_num|length|lexeme|lexeme_char|lexeme_end|\" +\r\n        \"lexeme_end_p|lexeme_start|lexeme_start_p|lineto|link|list|listen|lnot|\" +\r\n        \"loadfile|loadfile_private|localtime|lock|lockf|log|log10|logand|lognot|\" +\r\n        \"logor|logxor|lor|lower_window|lowercase|lseek|lsl|lsr|lstat|lt_big_int|\" +\r\n        \"lt_num|lxor|magenta|magic|mainLoop|major|major_slice|make|make_formatter|\" +\r\n        \"make_image|make_lexer|make_matrix|make_self_init|map|map2|map_file|mapi|\" +\r\n        \"marshal|match_beginning|match_end|matched_group|matched_string|max|\" +\r\n        \"max_array_length|max_big_int|max_elt|max_float|max_int|max_num|\" +\r\n        \"max_string_length|mem|mem_assoc|mem_assq|memq|merge|min|min_big_int|\" +\r\n        \"min_elt|min_float|min_int|min_num|minor|minus_big_int|minus_num|\" +\r\n        \"minus_one|mkdir|mkfifo|mktime|mod|mod_big_int|mod_float|mod_num|modf|\" +\r\n        \"mouse_pos|moveto|mul|mult_big_int|mult_int_big_int|mult_num|nan|narrow|\" +\r\n        \"nat_of_num|nativeint|neg|neg_infinity|new_block|new_channel|new_method|\" +\r\n        \"new_variable|next|nextkey|nice|nice|no_scan_tag|norm|norm2|not|npeek|\" +\r\n        \"nth|nth_dim|num_digits_big_int|num_dims|num_of_big_int|num_of_int|\" +\r\n        \"num_of_nat|num_of_ratio|num_of_string|O|obj|object_tag|ocaml_version|\" +\r\n        \"of_array|of_channel|of_float|of_int|of_int32|of_list|of_nativeint|\" +\r\n        \"of_string|one|openTk|open_box|open_connection|open_graph|open_hbox|\" +\r\n        \"open_hovbox|open_hvbox|open_in|open_in_bin|open_in_gen|open_out|\" +\r\n        \"open_out_bin|open_out_gen|open_process|open_process_full|open_process_in|\" +\r\n        \"open_process_out|open_subwindow|open_tag|open_tbox|open_temp_file|\" +\r\n        \"open_vbox|opendbm|opendir|openfile|or|os_type|out_channel_length|\" +\r\n        \"out_channel_of_descr|output|output_binary_int|output_buffer|output_byte|\" +\r\n        \"output_char|output_string|output_value|over_max_boxes|pack|params|\" +\r\n        \"parent_dir_name|parse|parse_argv|partition|pause|peek|pipe|pixels|\" +\r\n        \"place|plot|plots|point_color|polar|poll|pop|pos_in|pos_out|pow|\" +\r\n        \"power_big_int_positive_big_int|power_big_int_positive_int|\" +\r\n        \"power_int_positive_big_int|power_int_positive_int|power_num|\" +\r\n        \"pp_close_box|pp_close_tag|pp_close_tbox|pp_force_newline|\" +\r\n        \"pp_get_all_formatter_output_functions|pp_get_ellipsis_text|\" +\r\n        \"pp_get_formatter_output_functions|pp_get_formatter_tag_functions|\" +\r\n        \"pp_get_margin|pp_get_mark_tags|pp_get_max_boxes|pp_get_max_indent|\" +\r\n        \"pp_get_print_tags|pp_open_box|pp_open_hbox|pp_open_hovbox|pp_open_hvbox|\" +\r\n        \"pp_open_tag|pp_open_tbox|pp_open_vbox|pp_over_max_boxes|pp_print_as|\" +\r\n        \"pp_print_bool|pp_print_break|pp_print_char|pp_print_cut|pp_print_float|\" +\r\n        \"pp_print_flush|pp_print_if_newline|pp_print_int|pp_print_newline|\" +\r\n        \"pp_print_space|pp_print_string|pp_print_tab|pp_print_tbreak|\" +\r\n        \"pp_set_all_formatter_output_functions|pp_set_ellipsis_text|\" +\r\n        \"pp_set_formatter_out_channel|pp_set_formatter_output_functions|\" +\r\n        \"pp_set_formatter_tag_functions|pp_set_margin|pp_set_mark_tags|\" +\r\n        \"pp_set_max_boxes|pp_set_max_indent|pp_set_print_tags|pp_set_tab|\" +\r\n        \"pp_set_tags|pred|pred_big_int|pred_num|prerr_char|prerr_endline|\" +\r\n        \"prerr_float|prerr_int|prerr_newline|prerr_string|print|print_as|\" +\r\n        \"print_bool|print_break|print_char|print_cut|print_endline|print_float|\" +\r\n        \"print_flush|print_if_newline|print_int|print_newline|print_space|\" +\r\n        \"print_stat|print_string|print_tab|print_tbreak|printf|prohibit|\" +\r\n        \"public_method_label|push|putenv|quo_num|quomod_big_int|quote|raise|\" +\r\n        \"raise_window|ratio_of_num|rcontains_from|read|read_float|read_int|\" +\r\n        \"read_key|read_line|readdir|readdir|readlink|really_input|receive|recv|\" +\r\n        \"recvfrom|red|ref|regexp|regexp_case_fold|regexp_string|\" +\r\n        \"regexp_string_case_fold|register|register_exception|rem|remember_mode|\" +\r\n        \"remove|remove_assoc|remove_assq|rename|replace|replace_first|\" +\r\n        \"replace_matched|repr|reset|reshape|reshape_1|reshape_2|reshape_3|rev|\" +\r\n        \"rev_append|rev_map|rev_map2|rewinddir|rgb|rhs_end|rhs_end_pos|rhs_start|\" +\r\n        \"rhs_start_pos|rindex|rindex_from|rlineto|rmdir|rmoveto|round_num|\" +\r\n        \"run_initializers|run_initializers_opt|scanf|search_backward|\" +\r\n        \"search_forward|seek_in|seek_out|select|self|self_init|send|sendto|set|\" +\r\n        \"set_all_formatter_output_functions|set_approx_printing|\" +\r\n        \"set_binary_mode_in|set_binary_mode_out|set_close_on_exec|\" +\r\n        \"set_close_on_exec|set_color|set_ellipsis_text|\" +\r\n        \"set_error_when_null_denominator|set_field|set_floating_precision|\" +\r\n        \"set_font|set_formatter_out_channel|set_formatter_output_functions|\" +\r\n        \"set_formatter_tag_functions|set_line_width|set_margin|set_mark_tags|\" +\r\n        \"set_max_boxes|set_max_indent|set_method|set_nonblock|set_nonblock|\" +\r\n        \"set_normalize_ratio|set_normalize_ratio_when_printing|set_print_tags|\" +\r\n        \"set_signal|set_state|set_tab|set_tag|set_tags|set_text_size|\" +\r\n        \"set_window_title|setgid|setgid|setitimer|setitimer|setsid|setsid|\" +\r\n        \"setsockopt|setsockopt|setsockopt_float|setsockopt_float|setsockopt_int|\" +\r\n        \"setsockopt_int|setsockopt_optint|setsockopt_optint|setuid|setuid|\" +\r\n        \"shift_left|shift_left|shift_left|shift_right|shift_right|shift_right|\" +\r\n        \"shift_right_logical|shift_right_logical|shift_right_logical|show_buckets|\" +\r\n        \"shutdown|shutdown|shutdown_connection|shutdown_connection|sigabrt|\" +\r\n        \"sigalrm|sigchld|sigcont|sigfpe|sighup|sigill|sigint|sigkill|sign_big_int|\" +\r\n        \"sign_num|signal|signal|sigpending|sigpending|sigpipe|sigprocmask|\" +\r\n        \"sigprocmask|sigprof|sigquit|sigsegv|sigstop|sigsuspend|sigsuspend|\" +\r\n        \"sigterm|sigtstp|sigttin|sigttou|sigusr1|sigusr2|sigvtalrm|sin|singleton|\" +\r\n        \"sinh|size|size|size_x|size_y|sleep|sleep|sleep|slice_left|slice_left|\" +\r\n        \"slice_left_1|slice_left_2|slice_right|slice_right|slice_right_1|\" +\r\n        \"slice_right_2|snd|socket|socket|socket|socketpair|socketpair|sort|sound|\" +\r\n        \"split|split_delim|sprintf|sprintf|sqrt|sqrt|sqrt_big_int|square_big_int|\" +\r\n        \"square_num|sscanf|stable_sort|stable_sort|stable_sort|stable_sort|stable_sort|\" +\r\n        \"stable_sort|stat|stat|stat|stat|stat|stats|stats|std_formatter|stdbuf|\" +\r\n        \"stderr|stderr|stderr|stdib|stdin|stdin|stdin|stdout|stdout|stdout|\" +\r\n        \"str_formatter|string|string_after|string_before|string_match|\" +\r\n        \"string_of_big_int|string_of_bool|string_of_float|string_of_format|\" +\r\n        \"string_of_inet_addr|string_of_inet_addr|string_of_int|string_of_num|\" +\r\n        \"string_partial_match|string_tag|sub|sub|sub_big_int|sub_left|sub_num|\" +\r\n        \"sub_right|subset|subset|substitute_first|substring|succ|succ|\" +\r\n        \"succ|succ|succ_big_int|succ_num|symbol_end|symbol_end_pos|symbol_start|\" +\r\n        \"symbol_start_pos|symlink|symlink|sync|synchronize|system|system|system|\" +\r\n        \"tag|take|tan|tanh|tcdrain|tcdrain|tcflow|tcflow|tcflush|tcflush|\" +\r\n        \"tcgetattr|tcgetattr|tcsendbreak|tcsendbreak|tcsetattr|tcsetattr|\" +\r\n        \"temp_file|text_size|time|time|time|timed_read|timed_write|times|times|\" +\r\n        \"tl|tl|tl|to_buffer|to_channel|to_float|to_hex|to_int|to_int32|to_list|\" +\r\n        \"to_list|to_list|to_nativeint|to_string|to_string|to_string|to_string|\" +\r\n        \"to_string|top|top|total_size|transfer|transp|truncate|truncate|truncate|\" +\r\n        \"truncate|truncate|truncate|try_lock|umask|umask|uncapitalize|uncapitalize|\" +\r\n        \"uncapitalize|union|union|unit_big_int|unlink|unlink|unlock|unmarshal|\" +\r\n        \"unsafe_blit|unsafe_fill|unsafe_get|unsafe_get|unsafe_set|unsafe_set|\" +\r\n        \"update|uppercase|uppercase|uppercase|uppercase|usage|utimes|utimes|wait|\" +\r\n        \"wait|wait|wait|wait_next_event|wait_pid|wait_read|wait_signal|\" +\r\n        \"wait_timed_read|wait_timed_write|wait_write|waitpid|white|\" +\r\n        \"widen|window_id|word_size|wrap|wrap_abort|write|yellow|yield|zero|zero_big_int|\" +\r\n\r\n        \"Arg|Arith_status|Array|Array1|Array2|Array3|ArrayLabels|Big_int|Bigarray|\" +\r\n        \"Buffer|Callback|CamlinternalOO|Char|Complex|Condition|Dbm|Digest|Dynlink|\" +\r\n        \"Event|Filename|Format|Gc|Genarray|Genlex|Graphics|GraphicsX11|Hashtbl|\" +\r\n        \"Int32|Int64|LargeFile|Lazy|Lexing|List|ListLabels|Make|Map|Marshal|\" +\r\n        \"MoreLabels|Mutex|Nativeint|Num|Obj|Oo|Parsing|Pervasives|Printexc|\" +\r\n        \"Printf|Queue|Random|Scanf|Scanning|Set|Sort|Stack|State|StdLabels|Str|\" +\r\n        \"Stream|String|StringLabels|Sys|Thread|ThreadUnix|Tk|Unix|UnixLabels|Weak\"\r\n    );\r\n\r\n    var keywordMapper = this.createKeywordMapper({\r\n        \"variable.language\": \"this\",\r\n        \"keyword\": keywords,\r\n        \"constant.language\": builtinConstants,\r\n        \"support.function\": builtinFunctions\r\n    }, \"identifier\");\r\n\r\n    var decimalInteger = \"(?:(?:[1-9]\\\\d*)|(?:0))\";\r\n    var octInteger = \"(?:0[oO]?[0-7]+)\";\r\n    var hexInteger = \"(?:0[xX][\\\\dA-Fa-f]+)\";\r\n    var binInteger = \"(?:0[bB][01]+)\";\r\n    var integer = \"(?:\" + decimalInteger + \"|\" + octInteger + \"|\" + hexInteger + \"|\" + binInteger + \")\";\r\n\r\n    var exponent = \"(?:[eE][+-]?\\\\d+)\";\r\n    var fraction = \"(?:\\\\.\\\\d+)\";\r\n    var intPart = \"(?:\\\\d+)\";\r\n    var pointFloat = \"(?:(?:\" + intPart + \"?\" + fraction + \")|(?:\" + intPart + \"\\\\.))\";\r\n    var exponentFloat = \"(?:(?:\" + pointFloat + \"|\" +  intPart + \")\" + exponent + \")\";\r\n    var floatNumber = \"(?:\" + exponentFloat + \"|\" + pointFloat + \")\";\r\n\r\n    this.$rules = {\r\n        \"start\" : [\r\n            {\r\n                token : \"comment\",\r\n                regex : '\\\\(\\\\*.*?\\\\*\\\\)\\\\s*?$'\r\n            },\r\n            {\r\n                token : \"comment\",\r\n                regex : '\\\\(\\\\*.*',\r\n                next : \"comment\"\r\n            },\r\n            {\r\n                token : \"string\", // single line\r\n                regex : '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'\r\n            },\r\n            {\r\n                token : \"string\", // single char\r\n                regex : \"'.'\"\r\n            },\r\n            {\r\n                token : \"string\", // \" string\r\n                regex : '\"',\r\n                next  : \"qstring\"\r\n            },\r\n            {\r\n                token : \"constant.numeric\", // imaginary\r\n                regex : \"(?:\" + floatNumber + \"|\\\\d+)[jJ]\\\\b\"\r\n            },\r\n            {\r\n                token : \"constant.numeric\", // float\r\n                regex : floatNumber\r\n            },\r\n            {\r\n                token : \"constant.numeric\", // integer\r\n                regex : integer + \"\\\\b\"\r\n            },\r\n            {\r\n                token : keywordMapper,\r\n                regex : \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\r\n            },\r\n            {\r\n                token : \"keyword.operator\",\r\n                regex : \"\\\\+\\\\.|\\\\-\\\\.|\\\\*\\\\.|\\\\/\\\\.|#|;;|\\\\+|\\\\-|\\\\*|\\\\*\\\\*\\\\/|\\\\/\\\\/|%|<<|>>|&|\\\\||\\\\^|~|<|>|<=|=>|==|!=|<>|<-|=\"\r\n            },\r\n            {\r\n                token : \"paren.lparen\",\r\n                regex : \"[[({]\"\r\n            },\r\n            {\r\n                token : \"paren.rparen\",\r\n                regex : \"[\\\\])}]\"\r\n            },\r\n            {\r\n                token : \"text\",\r\n                regex : \"\\\\s+\"\r\n            }\r\n        ],\r\n        \"comment\" : [\r\n            {\r\n                token : \"comment\", // closing comment\r\n                regex : \"\\\\*\\\\)\",\r\n                next : \"start\"\r\n            },\r\n            {\r\n                defaultToken : \"comment\"\r\n            }\r\n        ],\r\n\r\n        \"qstring\" : [\r\n            {\r\n                token : \"string\",\r\n                regex : '\"',\r\n                next : \"start\"\r\n            }, {\r\n                token : \"string\",\r\n                regex : '.+'\r\n            }\r\n        ]\r\n    };\r\n};\r\n\r\noop.inherits(OcamlHighlightRules, TextHighlightRules);\r\n\r\nexports.OcamlHighlightRules = OcamlHighlightRules;\r\n});\r\n"]}