{"version":3,"sources":["mode/razor_highlight_rules.js"],"names":["define","require","exports","module","oop","lang","HtmlHighlightRules","DocCommentHighlightRules","CSharpHighlightRules","RazorLangHighlightRules","call","this","$rules","start","unshift","regex","onMatch","value","state","stack","prefix","exec","next","end","token","parentCloseMap","{","[","(","deepCopy","open","shift","stackItem","processPotentialCallback","inherits","RazorHighlightRules","blockEndMap","@{","@(","@functions{","blockEndRule","blockStart","razorStartRules","key","apply","embedRules","normalizeRules"],"mappings":";;;;;;;AAAAA,OAAO,SAASC,QAASC,QAASC,QAClC,aAEA,IAAIC,EAAMH,QAAQ,cACdI,EAAOJ,QAAQ,eAEfK,GAD2BL,QAAQ,iCAAiCM,yBAC/CN,QAAQ,0BAA0BK,oBACvDE,EAAuBP,QAAQ,4BAA4BO,qBAG3DC,EAA0B,WAC1BD,EAAqBE,KAAKC,MAU1BA,KAAKC,OAAOC,MAAMC,SACdC,MAAO,UACPC,QAAS,SAASC,EAAOC,EAAOC,GAC5B,IAAIC,EAAS,gBAAgBC,KAAKH,GAAO,GAKzC,OAHAC,EAAML,QAAQG,GACdE,EAAML,QAAQM,EAPP,aAQPT,KAAKW,KAAOF,EARL,YASA,kBAGXP,MAAO,OACPU,IAAK,OACLC,MAAO,YAGX,IAAIC,GACAC,IAAK,IACLC,IAAK,IACLC,IAAK,KAGTjB,KAAKC,OAvBU,aAuBSP,EAAKwB,SAASlB,KAAKC,OAAOC,OAClDF,KAAKC,OAxBU,aAwBOE,SAClBC,MAAO,UACPC,QAAS,SAASC,EAAOC,EAAOC,GAC5B,IAAIW,EAAOX,EAAM,GACjB,OAAIM,EAAeK,KAAUb,EAClB,mBAEXE,EAAMY,QACNZ,EAAMY,QACNpB,KAAKW,KAxCkB,SAASL,EAAOe,GAC3C,MAAyB,mBAAdA,EACAA,EAAUf,GAEde,EAoCSC,CAAyBhB,EAAOE,EAAM,KAAO,QAClD,oBAKnBf,EAAI8B,SAASzB,EAAyBD,GAEtC,IAAI2B,EAAsB,WACtB7B,EAAmBI,KAAKC,MAIxB,IAUIyB,GACAC,KAAM,IACNC,KAAM,IACNC,cAAc,KAGdC,GACAzB,MAAO,OACPC,QAAS,SAASC,EAAOC,EAAOC,GAC5B,IAAIsB,EAAatB,EAAM,GACvB,OAAIiB,EAAYK,KAAgBxB,EACrB,mBAEXE,EAAMY,QACNZ,EAAMY,QACNpB,KAAKW,KAAOH,EAAMY,SAAW,QACtB,6BAuCXW,IAEI7B,MAAO,OACPU,IAAK,OACLC,MAAO,YAGPA,OAAQ,uBAAwB,OAAQ,cACxCT,MAAO,6BAxEXA,MAAO,oBACPC,QAAS,SAASC,EAAOC,EAAOC,GAI5B,OAHAA,EAAML,QAAQG,GACdE,EAAML,QAAQ,qBACdH,KAAKW,KAAO,oBACL,6BA2BXP,MAAO,YACPC,QAAS,SAASC,EAAOC,EAAOC,GAG5B,OAFAA,EAAML,QAAQ,qBACdH,KAAKW,KAAO,oBACL,6BA2Cf,IAAK,IAAIqB,KAAOhC,KAAKC,OACjBD,KAAKC,OAAO+B,GAAK7B,QAAQ8B,MAAMjC,KAAKC,OAAO+B,GAAMD,GAErD/B,KAAKkC,WAAWpC,EAAyB,gBAAiB+B,IAAgB,UAC1E7B,KAAKkC,WAAWpC,EAAyB,iBA1CrCe,MAAO,GACPT,MAAO,4BACPO,KAAM,SAwCgE,UAE1EX,KAAKmC,kBAGT1C,EAAI8B,SAASC,EAAqB7B,GAElCJ,QAAQiC,oBAAsBA,EAC9BjC,QAAQO,wBAA0BA","file":"../../mode/razor_highlight_rules.js","sourcesContent":["define(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar lang = require(\"../lib/lang\");\r\nvar DocCommentHighlightRules = require(\"./doc_comment_highlight_rules\").DocCommentHighlightRules;\r\nvar HtmlHighlightRules = require(\"./html_highlight_rules\").HtmlHighlightRules;\r\nvar CSharpHighlightRules = require(\"./csharp_highlight_rules\").CSharpHighlightRules;\r\n\r\nvar blockPrefix = 'razor-block-';\r\nvar RazorLangHighlightRules = function() {\r\n    CSharpHighlightRules.call(this);\r\n\r\n    var processPotentialCallback = function(value, stackItem) {\r\n        if (typeof stackItem === \"function\")\r\n            return stackItem(value);\r\n\r\n        return stackItem;\r\n    };\r\n\r\n    var inBraces = 'in-braces';\r\n    this.$rules.start.unshift({\r\n        regex: '[\\\\[({]',\r\n        onMatch: function(value, state, stack) {\r\n            var prefix = /razor-[^\\-]+-/.exec(state)[0];\r\n\r\n            stack.unshift(value);\r\n            stack.unshift(prefix + inBraces);\r\n            this.next = prefix + inBraces;\r\n            return 'paren.lparen';\r\n        }\r\n    }, {\r\n        start: \"@\\\\*\",\r\n        end: \"\\\\*@\",\r\n        token: \"comment\"\r\n    });\r\n\r\n    var parentCloseMap = {\r\n        '{': '}',\r\n        '[': ']',\r\n        '(': ')'\r\n    };\r\n\r\n    this.$rules[inBraces] = lang.deepCopy(this.$rules.start);\r\n    this.$rules[inBraces].unshift({\r\n        regex: '[\\\\])}]',\r\n        onMatch: function(value, state, stack) {\r\n            var open = stack[1];\r\n            if (parentCloseMap[open] !== value)\r\n                return 'invalid.illegal';\r\n\r\n            stack.shift(); // exit in-braces block\r\n            stack.shift(); // exit brace marker\r\n            this.next = processPotentialCallback(value, stack[0]) || 'start';\r\n            return 'paren.rparen';\r\n        }\r\n    });\r\n};\r\n\r\noop.inherits(RazorLangHighlightRules, CSharpHighlightRules);\r\n\r\nvar RazorHighlightRules = function() {\r\n    HtmlHighlightRules.call(this);\r\n\r\n    // 'Blocks': @{}, @(), @functions{}\r\n\r\n    var blockStartRule = {\r\n        regex: '@[({]|@functions{',\r\n        onMatch: function(value, state, stack) {\r\n            stack.unshift(value);\r\n            stack.unshift('razor-block-start');\r\n            this.next = 'razor-block-start';\r\n            return 'punctuation.block.razor';\r\n        }\r\n    };\r\n\r\n    var blockEndMap = {\r\n        '@{': '}',\r\n        '@(': ')',\r\n        '@functions{':'}'\r\n    };\r\n\r\n    var blockEndRule = {\r\n        regex: '[})]',\r\n        onMatch: function(value, state, stack) {\r\n            var blockStart = stack[1];\r\n            if (blockEndMap[blockStart] !== value)\r\n                return 'invalid.illegal';\r\n\r\n            stack.shift(); // exit razor block\r\n            stack.shift(); // remove block type marker\r\n            this.next = stack.shift() || 'start';\r\n            return 'punctuation.block.razor';\r\n        }\r\n    };\r\n\r\n    // Short: @Abc.Cde(Xyz).Ef\r\n\r\n    var shortStartRule = {\r\n        regex: \"@(?![{(])\",\r\n        onMatch: function(value, state, stack) {\r\n            stack.unshift(\"razor-short-start\");\r\n            this.next = \"razor-short-start\";\r\n            return 'punctuation.short.razor';\r\n        }\r\n    };\r\n\r\n    var shortEndRule = {\r\n        token: \"\",\r\n        regex: \"(?=[^A-Za-z_\\\\.()\\\\[\\\\]])\",\r\n        next: 'pop'\r\n    };\r\n\r\n    // Control flow: @if, etc\r\n\r\n    var ifStartRule = {\r\n        regex: \"@(?=if)\",\r\n        onMatch: function(value, state, stack) {\r\n            stack.unshift(function(value) {\r\n                if (value !== '}')\r\n                    return 'start';\r\n\r\n                return stack.shift() || 'start';\r\n            });\r\n            this.next = 'razor-block-start';\r\n            return 'punctuation.control.razor';\r\n        }\r\n    };\r\n\r\n    // Combined:\r\n\r\n    var razorStartRules = [\r\n        {\r\n            start: \"@\\\\*\",\r\n            end: \"\\\\*@\",\r\n            token: \"comment\"\r\n        },\r\n        {\r\n            token: [\"meta.directive.razor\", \"text\", \"identifier\"],\r\n            regex: \"^(\\\\s*@model)(\\\\s+)(.+)$\"\r\n        },\r\n        blockStartRule,\r\n        //ifStartRule,\r\n        shortStartRule\r\n    ];\r\n\r\n    for (var key in this.$rules)\r\n        this.$rules[key].unshift.apply(this.$rules[key], razorStartRules);\r\n\r\n    this.embedRules(RazorLangHighlightRules, \"razor-block-\", [blockEndRule], [\"start\"]);\r\n    this.embedRules(RazorLangHighlightRules, \"razor-short-\", [shortEndRule], [\"start\"]);\r\n\r\n    this.normalizeRules();\r\n};\r\n\r\noop.inherits(RazorHighlightRules, HtmlHighlightRules);\r\n\r\nexports.RazorHighlightRules = RazorHighlightRules;\r\nexports.RazorLangHighlightRules = RazorLangHighlightRules;\r\n});\r\n"]}