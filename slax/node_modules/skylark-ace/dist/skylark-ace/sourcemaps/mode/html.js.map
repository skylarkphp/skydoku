{"version":3,"sources":["mode/html.js"],"names":["define","require","exports","module","oop","lang","TextMode","Mode","JavaScriptMode","CssMode","HtmlHighlightRules","XmlBehaviour","HtmlFoldMode","FoldMode","HtmlCompletions","WorkerClient","voidElements","optionalEndTags","options","this","fragmentContext","HighlightRules","$behaviour","$completer","createModeDelegates","js-","css-","foldingRules","arrayToMap","inherits","blockComment","start","end","getNextLineIndent","state","line","tab","$getIndent","checkOutdent","input","getCompletions","session","pos","prefix","createWorker","constructor","worker","attachToDocument","getDocument","call","context","on","e","setAnnotations","data","clearAnnotations","$id","prototype"],"mappings":";;;;;;;AA8BAA,OAAO,SAASC,QAASC,QAASC,QAClC,aAEA,IAAIC,EAAMH,QAAQ,cACdI,EAAOJ,QAAQ,eACfK,EAAWL,QAAQ,UAAUM,KAC7BC,EAAiBP,QAAQ,gBAAgBM,KACzCE,EAAUR,QAAQ,SAASM,KAC3BG,EAAqBT,QAAQ,0BAA0BS,mBACvDC,EAAeV,QAAQ,mBAAmBU,aAC1CC,EAAeX,QAAQ,kBAAkBY,SACzCC,EAAkBb,QAAQ,sBAAsBa,gBAChDC,EAAed,QAAQ,2BAA2Bc,aAGlDC,GAAgB,OAAQ,OAAQ,KAAM,MAAO,QAAS,KAAM,MAAO,QAAS,SAAU,OAAQ,OAAQ,WAAY,QAAS,SAAU,QAAS,OAC9IC,GAAmB,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,WAAY,SAAU,WAAY,KAAM,MAE9FV,EAAO,SAASW,GAChBC,KAAKC,gBAAkBF,GAAWA,EAAQE,gBAC1CD,KAAKE,eAAiBX,EACtBS,KAAKG,WAAa,IAAIX,EACtBQ,KAAKI,WAAa,IAAIT,EAEtBK,KAAKK,qBACDC,MAAOjB,EACPkB,OAAQjB,IAGZU,KAAKQ,aAAe,IAAIf,EAAaO,KAAKH,aAAcX,EAAKuB,WAAWX,KAE5Eb,EAAIyB,SAAStB,EAAMD,GAEnB,WAEIa,KAAKW,cAAgBC,MAAO,UAAQC,IAAK,UAEzCb,KAAKH,aAAeX,EAAKuB,WAAWZ,GAEpCG,KAAKc,kBAAoB,SAASC,EAAOC,EAAMC,GAC3C,OAAOjB,KAAKkB,WAAWF,IAG3BhB,KAAKmB,aAAe,SAASJ,EAAOC,EAAMI,GACtC,OAAO,GAGXpB,KAAKqB,eAAiB,SAASN,EAAOO,EAASC,EAAKC,GAChD,OAAOxB,KAAKI,WAAWiB,eAAeN,EAAOO,EAASC,EAAKC,IAG/DxB,KAAKyB,aAAe,SAASH,GACzB,GAAItB,KAAK0B,aAAetC,EAAxB,CAEA,IAAIuC,EAAS,IAAI/B,GAAc,OAAQ,uBAAwB,UAc/D,OAbA+B,EAAOC,iBAAiBN,EAAQO,eAE5B7B,KAAKC,iBACL0B,EAAOG,KAAK,eAAgBC,QAAS/B,KAAKC,mBAE9C0B,EAAOK,GAAG,QAAS,SAASC,GACxBX,EAAQY,eAAeD,EAAEE,QAG7BR,EAAOK,GAAG,YAAa,WACnBV,EAAQc,qBAGLT,IAGX3B,KAAKqC,IAAM,iBACZP,KAAK1C,EAAKkD,WAEbvD,QAAQK,KAAOA","file":"../../mode/html.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2010, Ajax.org B.V.\r\n * All rights reserved.\r\n * \r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n * \r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\ndefine(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar lang = require(\"../lib/lang\");\r\nvar TextMode = require(\"./text\").Mode;\r\nvar JavaScriptMode = require(\"./javascript\").Mode;\r\nvar CssMode = require(\"./css\").Mode;\r\nvar HtmlHighlightRules = require(\"./html_highlight_rules\").HtmlHighlightRules;\r\nvar XmlBehaviour = require(\"./behaviour/xml\").XmlBehaviour;\r\nvar HtmlFoldMode = require(\"./folding/html\").FoldMode;\r\nvar HtmlCompletions = require(\"./html_completions\").HtmlCompletions;\r\nvar WorkerClient = require(\"../worker/worker_client\").WorkerClient;\r\n\r\n// http://www.w3.org/TR/html5/syntax.html#void-elements\r\nvar voidElements = [\"area\", \"base\", \"br\", \"col\", \"embed\", \"hr\", \"img\", \"input\", \"keygen\", \"link\", \"meta\", \"menuitem\", \"param\", \"source\", \"track\", \"wbr\"];\r\nvar optionalEndTags = [\"li\", \"dt\", \"dd\", \"p\", \"rt\", \"rp\", \"optgroup\", \"option\", \"colgroup\", \"td\", \"th\"];\r\n\r\nvar Mode = function(options) {\r\n    this.fragmentContext = options && options.fragmentContext;\r\n    this.HighlightRules = HtmlHighlightRules;\r\n    this.$behaviour = new XmlBehaviour();\r\n    this.$completer = new HtmlCompletions();\r\n    \r\n    this.createModeDelegates({\r\n        \"js-\": JavaScriptMode,\r\n        \"css-\": CssMode\r\n    });\r\n    \r\n    this.foldingRules = new HtmlFoldMode(this.voidElements, lang.arrayToMap(optionalEndTags));\r\n};\r\noop.inherits(Mode, TextMode);\r\n\r\n(function() {\r\n\r\n    this.blockComment = {start: \"<!--\", end: \"-->\"};\r\n\r\n    this.voidElements = lang.arrayToMap(voidElements);\r\n\r\n    this.getNextLineIndent = function(state, line, tab) {\r\n        return this.$getIndent(line);\r\n    };\r\n\r\n    this.checkOutdent = function(state, line, input) {\r\n        return false;\r\n    };\r\n\r\n    this.getCompletions = function(state, session, pos, prefix) {\r\n        return this.$completer.getCompletions(state, session, pos, prefix);\r\n    };\r\n\r\n    this.createWorker = function(session) {\r\n        if (this.constructor != Mode)\r\n            return;\r\n        var worker = new WorkerClient([\"ace\"], \"ace/mode/html_worker\", \"Worker\");\r\n        worker.attachToDocument(session.getDocument());\r\n\r\n        if (this.fragmentContext)\r\n            worker.call(\"setOptions\", [{context: this.fragmentContext}]);\r\n\r\n        worker.on(\"error\", function(e) {\r\n            session.setAnnotations(e.data);\r\n        });\r\n\r\n        worker.on(\"terminate\", function() {\r\n            session.clearAnnotations();\r\n        });\r\n\r\n        return worker;\r\n    };\r\n\r\n    this.$id = \"ace/mode/html\";\r\n}).call(Mode.prototype);\r\n\r\nexports.Mode = Mode;\r\n});\r\n"]}