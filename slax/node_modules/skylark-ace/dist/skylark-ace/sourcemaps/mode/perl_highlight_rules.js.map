{"version":3,"sources":["mode/perl_highlight_rules.js"],"names":["define","require","exports","module","oop","TextHighlightRules","PerlHighlightRules","keywordMapper","this","createKeywordMapper","keyword","constant.language","support.function","$rules","start","token","regex","next","qqstring","qstring","block_comment","defaultToken","inherits"],"mappings":";;;;;;;AA8BAA,OAAO,SAASC,EAASC,EAASC,GAClC,aAEA,IAAIC,EAAMH,EAAQ,cACdI,EAAqBJ,EAAQ,0BAA0BI,mBAEvDC,EAAqB,WAErB,IAgCIC,EAAgBC,KAAKC,qBACrBC,QAjCW,wJAkCXC,oBA7BmB,mBA8BnBC,mBA5BmB,22CA6BpB,cAKHJ,KAAKK,QACDC,QAEQC,MAAQ,cACRC,MAAQ,sBACRC,KAAO,kBAEPF,MAAQ,gBACRC,MAAQ,iFAERD,MAAQ,SACRC,MAAQ,uCAERD,MAAQ,SACRC,MAAQ,aACRC,KAAO,aAEPF,MAAQ,SACRC,MAAQ,uCAERD,MAAQ,SACRC,MAAQ,aACRC,KAAO,YAEPF,MAAQ,mBACRC,MAAQ,sBAERD,MAAQ,mBACRC,MAAQ,oDAERD,MAAQR,EACRS,MAAQ,gCAERD,MAAQ,mBACRC,MAAQ,6YAERD,MAAQ,UACRC,MAAQ,SAERD,MAAQ,SACRC,MAAQ,UAERD,MAAQ,SACRC,MAAQ,YAERD,MAAQ,OACRC,MAAQ,SAGhBE,WAEQH,MAAQ,SACRC,MAAQ,gCACRC,KAAO,UAEPF,MAAQ,SACRC,MAAQ,OAGhBG,UAEQJ,MAAQ,SACRC,MAAQ,gCACRC,KAAO,UAEPF,MAAQ,SACRC,MAAQ,OAGhBI,gBAEQL,MAAO,cACPC,MAAO,WACPC,KAAM,UAGNI,aAAc,kBAM9BjB,EAAIkB,SAAShB,EAAoBD,GAEjCH,EAAQI,mBAAqBA","file":"../../mode/perl_highlight_rules.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2010, Ajax.org B.V.\r\n * All rights reserved.\r\n * \r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n * \r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\ndefine(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\r\n\r\nvar PerlHighlightRules = function() {\r\n\r\n    var keywords = (\r\n        \"base|constant|continue|else|elsif|for|foreach|format|goto|if|last|local|my|next|\" +\r\n         \"no|package|parent|redo|require|scalar|sub|unless|until|while|use|vars\"\r\n    );\r\n\r\n    var buildinConstants = (\"ARGV|ENV|INC|SIG\");\r\n\r\n    var builtinFunctions = (\r\n        \"getprotobynumber|getprotobyname|getservbyname|gethostbyaddr|\" +\r\n         \"gethostbyname|getservbyport|getnetbyaddr|getnetbyname|getsockname|\" +\r\n         \"getpeername|setpriority|getprotoent|setprotoent|getpriority|\" +\r\n         \"endprotoent|getservent|setservent|endservent|sethostent|socketpair|\" +\r\n         \"getsockopt|gethostent|endhostent|setsockopt|setnetent|quotemeta|\" +\r\n         \"localtime|prototype|getnetent|endnetent|rewinddir|wantarray|getpwuid|\" +\r\n         \"closedir|getlogin|readlink|endgrent|getgrgid|getgrnam|shmwrite|\" +\r\n         \"shutdown|readline|endpwent|setgrent|readpipe|formline|truncate|\" +\r\n         \"dbmclose|syswrite|setpwent|getpwnam|getgrent|getpwent|ucfirst|sysread|\" +\r\n         \"setpgrp|shmread|sysseek|sysopen|telldir|defined|opendir|connect|\" +\r\n         \"lcfirst|getppid|binmode|syscall|sprintf|getpgrp|readdir|seekdir|\" +\r\n         \"waitpid|reverse|unshift|symlink|dbmopen|semget|msgrcv|rename|listen|\" +\r\n         \"chroot|msgsnd|shmctl|accept|unpack|exists|fileno|shmget|system|\" +\r\n         \"unlink|printf|gmtime|msgctl|semctl|values|rindex|substr|splice|\" +\r\n         \"length|msgget|select|socket|return|caller|delete|alarm|ioctl|index|\" +\r\n         \"undef|lstat|times|srand|chown|fcntl|close|write|umask|rmdir|study|\" +\r\n         \"sleep|chomp|untie|print|utime|mkdir|atan2|split|crypt|flock|chmod|\" +\r\n         \"BEGIN|bless|chdir|semop|shift|reset|link|stat|chop|grep|fork|dump|\" +\r\n         \"join|open|tell|pipe|exit|glob|warn|each|bind|sort|pack|eval|push|\" +\r\n         \"keys|getc|kill|seek|sqrt|send|wait|rand|tied|read|time|exec|recv|\" +\r\n         \"eof|chr|int|ord|exp|pos|pop|sin|log|abs|oct|hex|tie|cos|vec|END|ref|\" +\r\n         \"map|die|uc|lc|do\"\r\n    );\r\n\r\n    var keywordMapper = this.createKeywordMapper({\r\n        \"keyword\": keywords,\r\n        \"constant.language\": buildinConstants,\r\n        \"support.function\": builtinFunctions\r\n    }, \"identifier\");\r\n\r\n    // regexp must not have capturing parentheses. Use (?:) instead.\r\n    // regexps are ordered -> the first match is used\r\n\r\n    this.$rules = {\r\n        \"start\" : [\r\n            {\r\n                token : \"comment.doc\",\r\n                regex : \"^=(?:begin|item)\\\\b\",\r\n                next : \"block_comment\"\r\n            }, {\r\n                token : \"string.regexp\",\r\n                regex : \"[/](?:(?:\\\\[(?:\\\\\\\\]|[^\\\\]])+\\\\])|(?:\\\\\\\\/|[^\\\\]/]))*[/]\\\\w*\\\\s*(?=[).,;]|$)\"\r\n            }, {\r\n                token : \"string\", // single line\r\n                regex : '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'\r\n            }, {\r\n                token : \"string\", // multi line string start\r\n                regex : '[\"].*\\\\\\\\$',\r\n                next : \"qqstring\"\r\n            }, {\r\n                token : \"string\", // single line\r\n                regex : \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\r\n            }, {\r\n                token : \"string\", // multi line string start\r\n                regex : \"['].*\\\\\\\\$\",\r\n                next : \"qstring\"\r\n            }, {\r\n                token : \"constant.numeric\", // hex\r\n                regex : \"0x[0-9a-fA-F]+\\\\b\"\r\n            }, {\r\n                token : \"constant.numeric\", // float\r\n                regex : \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"\r\n            }, {\r\n                token : keywordMapper,\r\n                regex : \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\r\n            }, {\r\n                token : \"keyword.operator\",\r\n                regex : \"%#|\\\\$#|\\\\.\\\\.\\\\.|\\\\|\\\\|=|>>=|<<=|<=>|&&=|=>|!~|\\\\^=|&=|\\\\|=|\\\\.=|x=|%=|\\\\/=|\\\\*=|\\\\-=|\\\\+=|=~|\\\\*\\\\*|\\\\-\\\\-|\\\\.\\\\.|\\\\|\\\\||&&|\\\\+\\\\+|\\\\->|!=|==|>=|<=|>>|<<|,|=|\\\\?\\\\:|\\\\^|\\\\||x|%|\\\\/|\\\\*|<|&|\\\\\\\\|~|!|>|\\\\.|\\\\-|\\\\+|\\\\-C|\\\\-b|\\\\-S|\\\\-u|\\\\-t|\\\\-p|\\\\-l|\\\\-d|\\\\-f|\\\\-g|\\\\-s|\\\\-z|\\\\-k|\\\\-e|\\\\-O|\\\\-T|\\\\-B|\\\\-M|\\\\-A|\\\\-X|\\\\-W|\\\\-c|\\\\-R|\\\\-o|\\\\-x|\\\\-w|\\\\-r|\\\\b(?:and|cmp|eq|ge|gt|le|lt|ne|not|or|xor)\"\r\n            }, {\r\n                token : \"comment\",\r\n                regex : \"#.*$\"\r\n            }, {\r\n                token : \"lparen\",\r\n                regex : \"[[({]\"\r\n            }, {\r\n                token : \"rparen\",\r\n                regex : \"[\\\\])}]\"\r\n            }, {\r\n                token : \"text\",\r\n                regex : \"\\\\s+\"\r\n            }\r\n        ],\r\n        \"qqstring\" : [\r\n            {\r\n                token : \"string\",\r\n                regex : '(?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?\"',\r\n                next : \"start\"\r\n            }, {\r\n                token : \"string\",\r\n                regex : '.+'\r\n            }\r\n        ],\r\n        \"qstring\" : [\r\n            {\r\n                token : \"string\",\r\n                regex : \"(?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?'\",\r\n                next : \"start\"\r\n            }, {\r\n                token : \"string\",\r\n                regex : '.+'\r\n            }\r\n        ],\r\n        \"block_comment\": [\r\n            {\r\n                token: \"comment.doc\", \r\n                regex: \"^=cut\\\\b\",\r\n                next: \"start\"\r\n            },\r\n            {\r\n                defaultToken: \"comment.doc\"\r\n            }\r\n        ]\r\n    };\r\n};\r\n\r\noop.inherits(PerlHighlightRules, TextHighlightRules);\r\n\r\nexports.PerlHighlightRules = PerlHighlightRules;\r\n});\r\n"]}