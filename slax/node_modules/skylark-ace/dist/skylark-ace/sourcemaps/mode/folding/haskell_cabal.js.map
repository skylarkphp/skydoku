{"version":3,"sources":["mode/folding/haskell_cabal.js"],"names":["define","require","exports","module","oop","BaseFoldMode","FoldMode","Range","inherits","this","isHeading","session","row","token","getTokens","type","lastIndexOf","getFoldWidget","foldStyle","test","getLine","maxRow","getLength","getFoldWidgetRange","startColumn","length","startRow","endRow","endColumn","call","prototype"],"mappings":";;;;;;;AAiCAA,OAAO,SAASC,EAASC,EAASC,GAClC,aAEA,IAAIC,EAAMH,EAAQ,iBACdI,EAAeJ,EAAQ,eAAeK,SACtCC,EAAQN,EAAQ,eAAeM,MAE/BD,EAAWJ,EAAQI,SAAW,aAClCF,EAAII,SAASF,EAAUD,GAEvB,WAIEI,KAAKC,UAAY,SAAUC,EAAQC,GAC/B,IACIC,EAAQF,EAAQG,UAAUF,GAAK,GACnC,OAAY,GAALA,GAAWC,GAAgD,IAAvCA,EAAME,KAAKC,YAFxB,iBAE6C,IAG/DP,KAAKQ,cAAgB,SAASN,EAASO,EAAWN,GAC9C,GAAIH,KAAKC,UAAUC,EAAQC,GACzB,MAAO,QACF,GAAkB,iBAAdM,IAAkC,QAAQC,KAAKR,EAAQS,QAAQR,IAAO,CAE/E,IADA,IAAIS,EAASV,EAAQW,cACZV,EAAMS,GACP,QAAQF,KAAKR,EAAQS,QAAQR,MAIrC,GAAIA,GAAKS,GAAUZ,KAAKC,UAAUC,EAAQC,GACxC,MAAO,MAGX,MAAO,IAIXH,KAAKc,mBAAqB,SAASZ,EAASO,EAAWN,GACnD,IACIY,EADOb,EAAQS,QAAQR,GACJa,OACnBJ,EAASV,EAAQW,YACjBI,EAAWd,EACXe,EAASf,EAEb,GAAIH,KAAKC,UAAUC,EAAQC,GAAM,CAC7B,OAASA,EAAMS,GACX,GAAIZ,KAAKC,UAAUC,EAAQC,GAAK,CAC9BA,IACA,MAMN,IAFAe,EAASf,GAEIc,EACT,KAAOC,EAASD,GAAY,QAAQP,KAAKR,EAAQS,QAAQO,KACrDA,IAGR,GAAIA,EAASD,EAAU,CACnB,IAAIE,EAAYjB,EAAQS,QAAQO,GAAQF,OACxC,OAAO,IAAIlB,EAAMmB,EAAUF,EAAaG,EAAQC,SAGjD,GAAkD,QAA9CnB,KAAKQ,cAAcN,EAASO,EAAWN,GAAa,CAG7D,IAFIe,EAASf,EACTgB,EAAYjB,EAAQS,QAAQO,GAAQF,SAC/Bb,GAAK,IACRH,KAAKC,UAAUC,EAAQC,KAKzBY,EADOb,EAAQS,QAAQR,GACJa,OACvB,OAAO,IAAIlB,EAAMK,EAAKY,EAAaG,EAAQC,MAIhDC,KAAKvB,EAASwB","file":"../../../mode/folding/haskell_cabal.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2010, Ajax.org B.V.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n/*\r\n* Folding mode for Cabal files (Haskell): allow folding each seaction, including\r\n* the initial general section.\r\n*/\r\ndefine(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../../lib/oop\");\r\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\r\nvar Range = require(\"../../range\").Range;\r\n\r\nvar FoldMode = exports.FoldMode = function() {};\r\noop.inherits(FoldMode, BaseFoldMode);\r\n\r\n(function() {\r\n  /**\r\n  is the row a heading?\r\n  */\r\n  this.isHeading = function (session,row) {\r\n      var heading = \"markup.heading\";\r\n      var token = session.getTokens(row)[0];\r\n      return row==0 || (token && token.type.lastIndexOf(heading, 0) === 0);\r\n  };\r\n\r\n  this.getFoldWidget = function(session, foldStyle, row) {\r\n      if (this.isHeading(session,row)){\r\n        return \"start\";\r\n      } else if (foldStyle === \"markbeginend\" && !(/^\\s*$/.test(session.getLine(row)))){\r\n        var maxRow = session.getLength();\r\n        while (++row < maxRow) {\r\n          if (!(/^\\s*$/.test(session.getLine(row)))){\r\n              break;\r\n          }\r\n        }\r\n        if (row==maxRow || this.isHeading(session,row)){\r\n          return \"end\";\r\n        }\r\n      }\r\n      return \"\";\r\n  };\r\n\r\n\r\n  this.getFoldWidgetRange = function(session, foldStyle, row) {\r\n      var line = session.getLine(row);\r\n      var startColumn = line.length;\r\n      var maxRow = session.getLength();\r\n      var startRow = row;\r\n      var endRow = row;\r\n      // go until next heading\r\n      if (this.isHeading(session,row)) {\r\n          while (++row < maxRow) {\r\n              if (this.isHeading(session,row)){\r\n                row--;\r\n                break;\r\n              }\r\n          }\r\n\r\n          endRow = row;\r\n          // remove empty lines at end\r\n          if (endRow > startRow) {\r\n              while (endRow > startRow && /^\\s*$/.test(session.getLine(endRow)))\r\n                  endRow--;\r\n          }\r\n\r\n          if (endRow > startRow) {\r\n              var endColumn = session.getLine(endRow).length;\r\n              return new Range(startRow, startColumn, endRow, endColumn);\r\n          }\r\n      // go back to heading\r\n      } else if (this.getFoldWidget(session, foldStyle, row)===\"end\"){\r\n        var endRow = row;\r\n        var endColumn = session.getLine(endRow).length;\r\n        while (--row>=0){\r\n          if (this.isHeading(session,row)){\r\n            break;\r\n          }\r\n        }\r\n        var line = session.getLine(row);\r\n        var startColumn = line.length;\r\n        return new Range(row, startColumn, endRow, endColumn);\r\n      }\r\n    };\r\n\r\n}).call(FoldMode.prototype);\r\n\r\n});\r\n"]}