{"version":3,"sources":["mode/folding/xml.js"],"names":["define","require","exports","module","oop","Range","BaseFoldMode","FoldMode","TokenIterator","voidElements","optionalEndTags","call","this","mixin","inherits","Tag","tagName","closing","selfClosing","start","row","column","end","is","token","type","lastIndexOf","getFoldWidget","session","foldStyle","tag","_getFirstTagInLine","hasOwnProperty","toLowerCase","_findEndTagInLine","getCommentFoldWidget","test","getState","getLine","tokens","getTokens","i","length","value","startColumn","_readTagForward","iterator","getCurrentToken","getCurrentTokenRow","getCurrentTokenColumn","stepForward","_readTagBackward","stepBackward","_pop","stack","top","pop","getFoldWidgetRange","firstTag","getCommentFoldRange","fromPoints","push","prototype"],"mappings":"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","file":"../../../mode/folding/xml.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2010, Ajax.org B.V.\r\n * All rights reserved.\r\n * \r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n * \r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\ndefine(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../../lib/oop\");\r\nvar lang = require(\"../../lib/lang\");\r\nvar Range = require(\"../../range\").Range;\r\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\r\nvar TokenIterator = require(\"../../token_iterator\").TokenIterator;\r\n\r\nvar FoldMode = exports.FoldMode = function(voidElements, optionalEndTags) {\r\n    BaseFoldMode.call(this);\r\n    this.voidElements = voidElements || {};\r\n    this.optionalEndTags = oop.mixin({}, this.voidElements);\r\n    if (optionalEndTags)\r\n        oop.mixin(this.optionalEndTags, optionalEndTags);\r\n    \r\n};\r\noop.inherits(FoldMode, BaseFoldMode);\r\n\r\nvar Tag = function() {\r\n    this.tagName = \"\";\r\n    this.closing = false;\r\n    this.selfClosing = false;\r\n    this.start = {row: 0, column: 0};\r\n    this.end = {row: 0, column: 0};\r\n};\r\n\r\nfunction is(token, type) {\r\n    return token.type.lastIndexOf(type + \".xml\") > -1;\r\n}\r\n\r\n(function() {\r\n\r\n    this.getFoldWidget = function(session, foldStyle, row) {\r\n        var tag = this._getFirstTagInLine(session, row);\r\n\r\n        if (!tag)\r\n            return this.getCommentFoldWidget(session, row);\r\n\r\n        if (tag.closing || (!tag.tagName && tag.selfClosing))\r\n            return foldStyle == \"markbeginend\" ? \"end\" : \"\";\r\n\r\n        if (!tag.tagName || tag.selfClosing || this.voidElements.hasOwnProperty(tag.tagName.toLowerCase()))\r\n            return \"\";\r\n\r\n        if (this._findEndTagInLine(session, row, tag.tagName, tag.end.column))\r\n            return \"\";\r\n\r\n        return \"start\";\r\n    };\r\n    \r\n    this.getCommentFoldWidget = function(session, row) {\r\n        if (/comment/.test(session.getState(row)) && /<!-/.test(session.getLine(row)))\r\n            return \"start\";\r\n        return \"\";\r\n    };\r\n\r\n    /*\r\n     * returns a first tag (or a fragment) in a line\r\n     */\r\n    this._getFirstTagInLine = function(session, row) {\r\n        var tokens = session.getTokens(row);\r\n        var tag = new Tag();\r\n\r\n        for (var i = 0; i < tokens.length; i++) {\r\n            var token = tokens[i];\r\n            if (is(token, \"tag-open\")) {\r\n                tag.end.column = tag.start.column + token.value.length;\r\n                tag.closing = is(token, \"end-tag-open\");\r\n                token = tokens[++i];\r\n                if (!token)\r\n                    return null;\r\n                tag.tagName = token.value;\r\n                tag.end.column += token.value.length;\r\n                for (i++; i < tokens.length; i++) {\r\n                    token = tokens[i];\r\n                    tag.end.column += token.value.length;\r\n                    if (is(token, \"tag-close\")) {\r\n                        tag.selfClosing = token.value == '/>';\r\n                        break;\r\n                    }\r\n                }\r\n                return tag;\r\n            } else if (is(token, \"tag-close\")) {\r\n                tag.selfClosing = token.value == '/>';\r\n                return tag;\r\n            }\r\n            tag.start.column += token.value.length;\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    this._findEndTagInLine = function(session, row, tagName, startColumn) {\r\n        var tokens = session.getTokens(row);\r\n        var column = 0;\r\n        for (var i = 0; i < tokens.length; i++) {\r\n            var token = tokens[i];\r\n            column += token.value.length;\r\n            if (column < startColumn)\r\n                continue;\r\n            if (is(token, \"end-tag-open\")) {\r\n                token = tokens[i + 1];\r\n                if (token && token.value == tagName)\r\n                    return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    /*\r\n     * reads a full tag and places the iterator after the tag\r\n     */\r\n    this._readTagForward = function(iterator) {\r\n        var token = iterator.getCurrentToken();\r\n        if (!token)\r\n            return null;\r\n\r\n        var tag = new Tag();\r\n        do {\r\n            if (is(token, \"tag-open\")) {\r\n                tag.closing = is(token, \"end-tag-open\");\r\n                tag.start.row = iterator.getCurrentTokenRow();\r\n                tag.start.column = iterator.getCurrentTokenColumn();\r\n            } else if (is(token, \"tag-name\")) {\r\n                tag.tagName = token.value;\r\n            } else if (is(token, \"tag-close\")) {\r\n                tag.selfClosing = token.value == \"/>\";\r\n                tag.end.row = iterator.getCurrentTokenRow();\r\n                tag.end.column = iterator.getCurrentTokenColumn() + token.value.length;\r\n                iterator.stepForward();\r\n                return tag;\r\n            }\r\n        } while(token = iterator.stepForward());\r\n\r\n        return null;\r\n    };\r\n    \r\n    this._readTagBackward = function(iterator) {\r\n        var token = iterator.getCurrentToken();\r\n        if (!token)\r\n            return null;\r\n\r\n        var tag = new Tag();\r\n        do {\r\n            if (is(token, \"tag-open\")) {\r\n                tag.closing = is(token, \"end-tag-open\");\r\n                tag.start.row = iterator.getCurrentTokenRow();\r\n                tag.start.column = iterator.getCurrentTokenColumn();\r\n                iterator.stepBackward();\r\n                return tag;\r\n            } else if (is(token, \"tag-name\")) {\r\n                tag.tagName = token.value;\r\n            } else if (is(token, \"tag-close\")) {\r\n                tag.selfClosing = token.value == \"/>\";\r\n                tag.end.row = iterator.getCurrentTokenRow();\r\n                tag.end.column = iterator.getCurrentTokenColumn() + token.value.length;\r\n            }\r\n        } while(token = iterator.stepBackward());\r\n\r\n        return null;\r\n    };\r\n    \r\n    this._pop = function(stack, tag) {\r\n        while (stack.length) {\r\n            \r\n            var top = stack[stack.length-1];\r\n            if (!tag || top.tagName == tag.tagName) {\r\n                return stack.pop();\r\n            }\r\n            else if (this.optionalEndTags.hasOwnProperty(top.tagName)) {\r\n                stack.pop();\r\n                continue;\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    \r\n    this.getFoldWidgetRange = function(session, foldStyle, row) {\r\n        var firstTag = this._getFirstTagInLine(session, row);\r\n        \r\n        if (!firstTag) {\r\n            return this.getCommentFoldWidget(session, row)\r\n                && session.getCommentFoldRange(row, session.getLine(row).length);\r\n        }\r\n        \r\n        var isBackward = firstTag.closing || firstTag.selfClosing;\r\n        var stack = [];\r\n        var tag;\r\n        \r\n        if (!isBackward) {\r\n            var iterator = new TokenIterator(session, row, firstTag.start.column);\r\n            var start = {\r\n                row: row,\r\n                column: firstTag.start.column + firstTag.tagName.length + 2\r\n            };\r\n            if (firstTag.start.row == firstTag.end.row)\r\n                start.column = firstTag.end.column;\r\n            while (tag = this._readTagForward(iterator)) {\r\n                if (tag.selfClosing) {\r\n                    if (!stack.length) {\r\n                        tag.start.column += tag.tagName.length + 2;\r\n                        tag.end.column -= 2;\r\n                        return Range.fromPoints(tag.start, tag.end);\r\n                    } else\r\n                        continue;\r\n                }\r\n                \r\n                if (tag.closing) {\r\n                    this._pop(stack, tag);\r\n                    if (stack.length == 0)\r\n                        return Range.fromPoints(start, tag.start);\r\n                }\r\n                else {\r\n                    stack.push(tag);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var iterator = new TokenIterator(session, row, firstTag.end.column);\r\n            var end = {\r\n                row: row,\r\n                column: firstTag.start.column\r\n            };\r\n            \r\n            while (tag = this._readTagBackward(iterator)) {\r\n                if (tag.selfClosing) {\r\n                    if (!stack.length) {\r\n                        tag.start.column += tag.tagName.length + 2;\r\n                        tag.end.column -= 2;\r\n                        return Range.fromPoints(tag.start, tag.end);\r\n                    } else\r\n                        continue;\r\n                }\r\n                \r\n                if (!tag.closing) {\r\n                    this._pop(stack, tag);\r\n                    if (stack.length == 0) {\r\n                        tag.start.column += tag.tagName.length + 2;\r\n                        if (tag.start.row == tag.end.row && tag.start.column < tag.end.column)\r\n                            tag.start.column = tag.end.column;\r\n                        return Range.fromPoints(tag.start, end);\r\n                    }\r\n                }\r\n                else {\r\n                    stack.push(tag);\r\n                }\r\n            }\r\n        }\r\n        \r\n    };\r\n\r\n}).call(FoldMode.prototype);\r\n\r\n});\r\n"]}