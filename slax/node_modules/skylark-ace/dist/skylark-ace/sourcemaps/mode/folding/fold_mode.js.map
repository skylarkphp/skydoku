{"version":3,"sources":["mode/folding/fold_mode.js"],"names":["define","require","exports","module","Range","FoldMode","this","foldingStartMarker","foldingStopMarker","getFoldWidget","session","foldStyle","row","line","getLine","test","getFoldWidgetRange","indentationBlock","column","re","startLevel","search","startColumn","length","maxRow","getLength","startRow","endRow","level","endColumn","openingBracketBlock","bracket","typeRe","start","end","$findClosingBracket","fw","foldWidgets","fromPoints","closingBracketBlock","$findOpeningBracket","call","prototype"],"mappings":";;;;;;;AA8BAA,OAAO,SAASC,EAASC,EAASC,GAClC,aAEA,IAAIC,EAAQH,EAAQ,eAAeG,MAE/BC,EAAWH,EAAQG,SAAW,cAElC,WAEIC,KAAKC,mBAAqB,KAC1BD,KAAKE,kBAAoB,KAGzBF,KAAKG,cAAgB,SAASC,EAASC,EAAWC,GAC9C,IAAIC,EAAOH,EAAQI,QAAQF,GAC3B,OAAIN,KAAKC,mBAAmBQ,KAAKF,GACtB,QACM,gBAAbF,GACOL,KAAKE,mBACLF,KAAKE,kBAAkBO,KAAKF,GAC5B,MACJ,IAGXP,KAAKU,mBAAqB,SAASN,EAASC,EAAWC,GACnD,OAAO,MAGXN,KAAKW,iBAAmB,SAASP,EAASE,EAAKM,GAC3C,IAAIC,EAAK,KACLN,EAAOH,EAAQI,QAAQF,GACvBQ,EAAaP,EAAKQ,OAAOF,GAC7B,IAAmB,GAAfC,EAAJ,CAQA,IALA,IAAIE,EAAcJ,GAAUL,EAAKU,OAC7BC,EAASd,EAAQe,YACjBC,EAAWd,EACXe,EAASf,IAEJA,EAAMY,GAAQ,CACnB,IAAII,EAAQlB,EAAQI,QAAQF,GAAKS,OAAOF,GAExC,IAAc,GAAVS,EAAJ,CAGA,GAAIA,GAASR,EACT,MAEJO,EAASf,GAGb,GAAIe,EAASD,EAAU,CACnB,IAAIG,EAAYnB,EAAQI,QAAQa,GAAQJ,OACxC,OAAO,IAAInB,EAAMsB,EAAUJ,EAAaK,EAAQE,MAIxDvB,KAAKwB,oBAAsB,SAASpB,EAASqB,EAASnB,EAAKM,EAAQc,GAC/D,IAAIC,GAASrB,IAAKA,EAAKM,OAAQA,EAAS,GACpCgB,EAAMxB,EAAQyB,oBAAoBJ,EAASE,EAAOD,GACtD,GAAKE,EAAL,CAGA,IAAIE,EAAK1B,EAAQ2B,YAAYH,EAAItB,KAQjC,OAPU,MAANwB,IACAA,EAAK1B,EAAQD,cAAcyB,EAAItB,MAEzB,SAANwB,GAAiBF,EAAItB,IAAMqB,EAAMrB,MACjCsB,EAAItB,MACJsB,EAAIhB,OAASR,EAAQI,QAAQoB,EAAItB,KAAKW,QAEnCnB,EAAMkC,WAAWL,EAAOC,KAGnC5B,KAAKiC,oBAAsB,SAAS7B,EAASqB,EAASnB,EAAKM,EAAQc,GAC/D,IAAIE,GAAOtB,IAAKA,EAAKM,OAAQA,GACzBe,EAAQvB,EAAQ8B,oBAAoBT,EAASG,GAEjD,GAAKD,EAML,OAHAA,EAAMf,SACNgB,EAAIhB,SAEId,EAAMkC,WAAWL,EAAOC,MAErCO,KAAKpC,EAASqC","file":"../../../mode/folding/fold_mode.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2010, Ajax.org B.V.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\ndefine(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar Range = require(\"../../range\").Range;\r\n\r\nvar FoldMode = exports.FoldMode = function() {};\r\n\r\n(function() {\r\n\r\n    this.foldingStartMarker = null;\r\n    this.foldingStopMarker = null;\r\n\r\n    // must return \"\" if there's no fold, to enable caching\r\n    this.getFoldWidget = function(session, foldStyle, row) {\r\n        var line = session.getLine(row);\r\n        if (this.foldingStartMarker.test(line))\r\n            return \"start\";\r\n        if (foldStyle == \"markbeginend\"\r\n                && this.foldingStopMarker\r\n                && this.foldingStopMarker.test(line))\r\n            return \"end\";\r\n        return \"\";\r\n    };\r\n\r\n    this.getFoldWidgetRange = function(session, foldStyle, row) {\r\n        return null;\r\n    };\r\n\r\n    this.indentationBlock = function(session, row, column) {\r\n        var re = /\\S/;\r\n        var line = session.getLine(row);\r\n        var startLevel = line.search(re);\r\n        if (startLevel == -1)\r\n            return;\r\n\r\n        var startColumn = column || line.length;\r\n        var maxRow = session.getLength();\r\n        var startRow = row;\r\n        var endRow = row;\r\n\r\n        while (++row < maxRow) {\r\n            var level = session.getLine(row).search(re);\r\n\r\n            if (level == -1)\r\n                continue;\r\n\r\n            if (level <= startLevel)\r\n                break;\r\n\r\n            endRow = row;\r\n        }\r\n\r\n        if (endRow > startRow) {\r\n            var endColumn = session.getLine(endRow).length;\r\n            return new Range(startRow, startColumn, endRow, endColumn);\r\n        }\r\n    };\r\n\r\n    this.openingBracketBlock = function(session, bracket, row, column, typeRe) {\r\n        var start = {row: row, column: column + 1};\r\n        var end = session.$findClosingBracket(bracket, start, typeRe);\r\n        if (!end)\r\n            return;\r\n\r\n        var fw = session.foldWidgets[end.row];\r\n        if (fw == null)\r\n            fw = session.getFoldWidget(end.row);\r\n\r\n        if (fw == \"start\" && end.row > start.row) {\r\n            end.row --;\r\n            end.column = session.getLine(end.row).length;\r\n        }\r\n        return Range.fromPoints(start, end);\r\n    };\r\n\r\n    this.closingBracketBlock = function(session, bracket, row, column, typeRe) {\r\n        var end = {row: row, column: column};\r\n        var start = session.$findOpeningBracket(bracket, end);\r\n\r\n        if (!start)\r\n            return;\r\n\r\n        start.column++;\r\n        end.column--;\r\n\r\n        return  Range.fromPoints(start, end);\r\n    };\r\n}).call(FoldMode.prototype);\r\n\r\n});\r\n"]}