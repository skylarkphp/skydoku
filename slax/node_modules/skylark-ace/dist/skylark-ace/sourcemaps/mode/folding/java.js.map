{"version":3,"sources":["mode/folding/java.js"],"names":["define","require","exports","module","oop","CStyleFoldMode","FoldMode","Range","inherits","this","importRegex","getCStyleFoldWidget","getFoldWidget","session","foldStyle","row","line","getLine","test","getCstyleFoldWidgetRange","getFoldWidgetRange","forceMultiline","match","startColumn","length","maxRow","getLength","startRow","endRow","endColumn","call","prototype"],"mappings":";;;;;;;AAAAA,OAAO,SAASC,EAASC,EAASC,GAClC,aAEA,IAAIC,EAAMH,EAAQ,iBACdI,EAAiBJ,EAAQ,YAAYK,SACrCC,EAAQN,EAAQ,eAAeM,MAE/BD,EAAWJ,EAAQI,SAAW,aAClCF,EAAII,SAASF,EAAUD,GAEvB,WACII,KAAKC,YAAc,WACnBD,KAAKE,oBAAsBF,KAAKG,cAChCH,KAAKG,cAAgB,SAASC,EAASC,EAAWC,GAC9C,GAAkB,cAAdD,EAA2B,CAC3B,IAAIE,EAAOH,EAAQI,QAAQF,GAC3B,GAAIN,KAAKC,YAAYQ,KAAKF,KACX,GAAPD,IAAaN,KAAKC,YAAYQ,KAAKL,EAAQI,QAAQF,EAAM,KACzD,MAAO,QAInB,OAAON,KAAKE,oBAAoBE,EAASC,EAAWC,IAGxDN,KAAKU,yBAA2BV,KAAKW,mBACrCX,KAAKW,mBAAqB,SAASP,EAASC,EAAWC,EAAKM,GACxD,IACIC,GADAN,EAAOH,EAAQI,QAAQF,IACVO,MAAMb,KAAKC,aAC5B,IAAKY,GAAuB,cAAdR,EACV,OAAOL,KAAKU,yBAAyBN,EAASC,EAAWC,EAAKM,GAOlE,IALA,IAAIE,EAAcD,EAAM,GAAGE,OACvBC,EAASZ,EAAQa,YACjBC,EAAWZ,EACXa,EAASb,IAEJA,EAAMU,GAAQ,CACnB,IAAIT,EACJ,KADIA,EAAOH,EAAQI,QAAQF,IAClBO,MAAM,SAAf,CAGA,IAAKN,EAAKM,MAAMb,KAAKC,aACjB,MAEJkB,EAASb,GAGb,GAAIa,EAASD,EAAU,CACnB,IAAIE,EAAYhB,EAAQI,QAAQW,GAAQJ,OACxC,OAAO,IAAIjB,EAAMoB,EAAUJ,EAAaK,EAAQC,MAIzDC,KAAKxB,EAASyB","file":"../../../mode/folding/java.js","sourcesContent":["define(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../../lib/oop\");\r\nvar CStyleFoldMode = require(\"./cstyle\").FoldMode;\r\nvar Range = require(\"../../range\").Range;\r\n\r\nvar FoldMode = exports.FoldMode = function() {};\r\noop.inherits(FoldMode, CStyleFoldMode);\r\n\r\n(function() {\r\n    this.importRegex = /^import /;\r\n    this.getCStyleFoldWidget = this.getFoldWidget;\r\n    this.getFoldWidget = function(session, foldStyle, row) {\r\n        if (foldStyle === \"markbegin\") {\r\n            var line = session.getLine(row);\r\n            if (this.importRegex.test(line)) {\r\n                if (row == 0 || !this.importRegex.test(session.getLine(row - 1)))\r\n                    return \"start\";\r\n            }\r\n        }\r\n\r\n        return this.getCStyleFoldWidget(session, foldStyle, row);\r\n    };\r\n    \r\n    this.getCstyleFoldWidgetRange = this.getFoldWidgetRange;\r\n    this.getFoldWidgetRange = function(session, foldStyle, row, forceMultiline) {\r\n        var line = session.getLine(row);\r\n        var match = line.match(this.importRegex);\r\n        if (!match || foldStyle !== \"markbegin\")\r\n            return this.getCstyleFoldWidgetRange(session, foldStyle, row, forceMultiline);\r\n\r\n        var startColumn = match[0].length;\r\n        var maxRow = session.getLength();\r\n        var startRow = row;\r\n        var endRow = row;\r\n\r\n        while (++row < maxRow) {\r\n            var line = session.getLine(row);\r\n            if (line.match(/^\\s*$/))\r\n                continue;\r\n\r\n            if (!line.match(this.importRegex))\r\n                break;\r\n\r\n            endRow = row;\r\n        }\r\n\r\n        if (endRow > startRow) {\r\n            var endColumn = session.getLine(endRow).length;\r\n            return new Range(startRow, startColumn, endRow, endColumn);\r\n        }\r\n    };\r\n\r\n}).call(FoldMode.prototype);\r\n\r\n});\r\n"]}