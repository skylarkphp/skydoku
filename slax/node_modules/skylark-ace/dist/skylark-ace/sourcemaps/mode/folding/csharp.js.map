{"version":3,"sources":["mode/folding/csharp.js"],"names":["define","require","exports","module","oop","Range","CFoldMode","FoldMode","commentRegex","this","foldingStartMarker","RegExp","source","replace","start","foldingStopMarker","end","inherits","usingRe","getFoldWidgetRangeBase","getFoldWidgetRange","getFoldWidgetBase","getFoldWidget","session","foldStyle","row","fw","line","getLine","test","prev","next","range","getUsingStatementBlock","getRegionBlock","startColumn","match","length","maxRow","getLength","startRow","endRow","endColumn","search","re","depth","m","exec","call","prototype"],"mappings":";;;;;;;AA8BAA,OAAO,SAASC,QAASC,QAASC,QAClC,aAEA,IAAIC,EAAMH,QAAQ,iBACdI,EAAQJ,QAAQ,eAAeI,MAC/BC,EAAYL,QAAQ,YAAYM,SAEhCA,EAAWL,QAAQK,SAAW,SAASC,GACnCA,IACAC,KAAKC,mBAAqB,IAAIC,OAC1BF,KAAKC,mBAAmBE,OAAOC,QAAQ,YAAa,IAAML,EAAaM,QAE3EL,KAAKM,kBAAoB,IAAIJ,OACzBF,KAAKM,kBAAkBH,OAAOC,QAAQ,YAAa,IAAML,EAAaQ,QAIlFZ,EAAIa,SAASV,EAAUD,GAEvB,WACIG,KAAKS,QAAU,eAEfT,KAAKU,uBAAyBV,KAAKW,mBACnCX,KAAKY,kBAAoBZ,KAAKa,cAE9Bb,KAAKa,cAAgB,SAASC,EAASC,EAAWC,GAC9C,IAAIC,EAAKjB,KAAKY,kBAAkBE,EAASC,EAAWC,GACpD,IAAKC,EAAI,CACL,IAAIC,EAAOJ,EAAQK,QAAQH,GAC3B,GAAI,gBAAgBI,KAAKF,GACrB,MAAO,QACX,IAAIT,EAAUT,KAAKS,QACnB,GAAIA,EAAQW,KAAKF,GAAO,CACpB,IAAIG,EAAOP,EAAQK,QAAQH,EAAM,GAC7BM,EAAOR,EAAQK,QAAQH,EAAM,GACjC,IAAKP,EAAQW,KAAKC,IAASZ,EAAQW,KAAKE,GACpC,MAAO,SAGnB,OAAOL,GAGXjB,KAAKW,mBAAqB,SAASG,EAASC,EAAWC,GACnD,IAAIO,EAAQvB,KAAKU,uBAAuBI,EAASC,EAAWC,GAC5D,GAAIO,EACA,OAAOA,EAEX,IAAIL,EAAOJ,EAAQK,QAAQH,GAC3B,OAAIhB,KAAKS,QAAQW,KAAKF,GACXlB,KAAKwB,uBAAuBV,EAASI,EAAMF,GAElD,gBAAgBI,KAAKF,GACdlB,KAAKyB,eAAeX,EAASI,EAAMF,QAD9C,GAIJhB,KAAKwB,uBAAyB,SAASV,EAASI,EAAMF,GAMlD,IALA,IAAIU,EAAcR,EAAKS,MAAM3B,KAAKS,SAAS,GAAGmB,OAAS,EACnDC,EAASf,EAAQgB,YACjBC,EAAWf,EACXgB,EAAShB,IAEJA,EAAMa,GAEX,GADAX,EAAOJ,EAAQK,QAAQH,IACnB,QAAQI,KAAKF,GAAjB,CAEA,IAAKlB,KAAKS,QAAQW,KAAKF,GACnB,MAEJc,EAAShB,EAGb,GAAIgB,EAASD,EAAU,CACnB,IAAIE,EAAYnB,EAAQK,QAAQa,GAAQJ,OACxC,OAAO,IAAIhC,EAAMmC,EAAUL,EAAaM,EAAQC,KAIxDjC,KAAKyB,eAAiB,SAASX,EAASI,EAAMF,GAO1C,IANA,IAAIU,EAAcR,EAAKgB,OAAO,QAC1BL,EAASf,EAAQgB,YACjBC,EAAWf,EAEXmB,EAAK,sBACLC,EAAQ,IACHpB,EAAMa,GAAQ,CACnBX,EAAOJ,EAAQK,QAAQH,GACvB,IAAIqB,EAAIF,EAAGG,KAAKpB,GAChB,GAAKmB,IAEDA,EAAE,GACFD,IAEAA,KAECA,GACD,MAIR,GADapB,EACAe,EACT,OAAO,IAAInC,EAAMmC,EAAUL,EAFlBV,EAEuCE,EAAKU,UAI9DW,KAAKzC,EAAS0C","file":"../../../mode/folding/csharp.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2010, Ajax.org B.V.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\ndefine(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../../lib/oop\");\r\nvar Range = require(\"../../range\").Range;\r\nvar CFoldMode = require(\"./cstyle\").FoldMode;\r\n\r\nvar FoldMode = exports.FoldMode = function(commentRegex) {\r\n    if (commentRegex) {\r\n        this.foldingStartMarker = new RegExp(\r\n            this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start)\r\n        );\r\n        this.foldingStopMarker = new RegExp(\r\n            this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end)\r\n        );\r\n    }\r\n};\r\noop.inherits(FoldMode, CFoldMode);\r\n\r\n(function() {\r\n    this.usingRe = /^\\s*using \\S/;\r\n\r\n    this.getFoldWidgetRangeBase = this.getFoldWidgetRange;\r\n    this.getFoldWidgetBase = this.getFoldWidget;\r\n    \r\n    this.getFoldWidget = function(session, foldStyle, row) {\r\n        var fw = this.getFoldWidgetBase(session, foldStyle, row);\r\n        if (!fw) {\r\n            var line = session.getLine(row);\r\n            if (/^\\s*#region\\b/.test(line)) \r\n                return \"start\";\r\n            var usingRe = this.usingRe;\r\n            if (usingRe.test(line)) {\r\n                var prev = session.getLine(row - 1);\r\n                var next = session.getLine(row + 1);\r\n                if (!usingRe.test(prev) && usingRe.test(next))\r\n                    return \"start\";\r\n            }\r\n        }\r\n        return fw;\r\n    };\r\n    \r\n    this.getFoldWidgetRange = function(session, foldStyle, row) {\r\n        var range = this.getFoldWidgetRangeBase(session, foldStyle, row);\r\n        if (range)\r\n            return range;\r\n\r\n        var line = session.getLine(row);\r\n        if (this.usingRe.test(line))\r\n            return this.getUsingStatementBlock(session, line, row);\r\n            \r\n        if (/^\\s*#region\\b/.test(line))\r\n            return this.getRegionBlock(session, line, row);\r\n    };\r\n    \r\n    this.getUsingStatementBlock = function(session, line, row) {\r\n        var startColumn = line.match(this.usingRe)[0].length - 1;\r\n        var maxRow = session.getLength();\r\n        var startRow = row;\r\n        var endRow = row;\r\n\r\n        while (++row < maxRow) {\r\n            line = session.getLine(row);\r\n            if (/^\\s*$/.test(line))\r\n                continue;\r\n            if (!this.usingRe.test(line))\r\n                break;\r\n\r\n            endRow = row;\r\n        }\r\n\r\n        if (endRow > startRow) {\r\n            var endColumn = session.getLine(endRow).length;\r\n            return new Range(startRow, startColumn, endRow, endColumn);\r\n        }\r\n    };\r\n    \r\n    this.getRegionBlock = function(session, line, row) {\r\n        var startColumn = line.search(/\\s*$/);\r\n        var maxRow = session.getLength();\r\n        var startRow = row;\r\n        \r\n        var re = /^\\s*#(end)?region\\b/;\r\n        var depth = 1;\r\n        while (++row < maxRow) {\r\n            line = session.getLine(row);\r\n            var m = re.exec(line);\r\n            if (!m)\r\n                continue;\r\n            if (m[1])\r\n                depth--;\r\n            else\r\n                depth++;\r\n\r\n            if (!depth)\r\n                break;\r\n        }\r\n\r\n        var endRow = row;\r\n        if (endRow > startRow) {\r\n            return new Range(startRow, startColumn, endRow, line.length);\r\n        }\r\n    };\r\n\r\n}).call(FoldMode.prototype);\r\n\r\n});\r\n"]}