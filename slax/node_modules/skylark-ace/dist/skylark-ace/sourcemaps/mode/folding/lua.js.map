{"version":3,"sources":["mode/folding/lua.js"],"names":["define","require","exports","module","oop","BaseFoldMode","FoldMode","Range","TokenIterator","inherits","this","foldingStartMarker","foldingStopMarker","getFoldWidget","session","foldStyle","row","line","getLine","isStart","test","isEnd","match","getTokenAt","index","type","bgTokenizer","getState","getFoldWidgetRange","doc","exec","luaBlock","getCommentFoldRange","openingBracketBlock","closingBracketBlock","length","column","stream","indentKeywords","function","do","then","elseif","end","repeat","until","token","getCurrentToken","val","value","stack","dir","startColumn","getCurrentTokenColumn","startRow","step","stepBackward","stepForward","level","unshift","shift","getCurrentTokenRow","call","prototype"],"mappings":"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","file":"../../../mode/folding/lua.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2012, Ajax.org B.V.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\ndefine(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../../lib/oop\");\r\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\r\nvar Range = require(\"../../range\").Range;\r\nvar TokenIterator = require(\"../../token_iterator\").TokenIterator;\r\n\r\n\r\nvar FoldMode = exports.FoldMode = function() {};\r\n\r\noop.inherits(FoldMode, BaseFoldMode);\r\n\r\n(function() {\r\n\r\n    this.foldingStartMarker = /\\b(function|then|do|repeat)\\b|{\\s*$|(\\[=*\\[)/;\r\n    this.foldingStopMarker = /\\bend\\b|^\\s*}|\\]=*\\]/;\r\n\r\n    this.getFoldWidget = function(session, foldStyle, row) {\r\n        var line = session.getLine(row);\r\n        var isStart = this.foldingStartMarker.test(line);\r\n        var isEnd = this.foldingStopMarker.test(line);\r\n\r\n        if (isStart && !isEnd) {\r\n            var match = line.match(this.foldingStartMarker);\r\n            if (match[1] == \"then\" && /\\belseif\\b/.test(line))\r\n                return;\r\n            if (match[1]) {\r\n                if (session.getTokenAt(row, match.index + 1).type === \"keyword\")\r\n                    return \"start\";\r\n            } else if (match[2]) {\r\n                var type = session.bgTokenizer.getState(row) || \"\";\r\n                if (type[0] == \"bracketedComment\" || type[0] == \"bracketedString\")\r\n                    return \"start\";\r\n            } else {\r\n                return \"start\";\r\n            }\r\n        }\r\n        if (foldStyle != \"markbeginend\" || !isEnd || isStart && isEnd)\r\n            return \"\";\r\n\r\n        var match = line.match(this.foldingStopMarker);\r\n        if (match[0] === \"end\") {\r\n            if (session.getTokenAt(row, match.index + 1).type === \"keyword\")\r\n                return \"end\";\r\n        } else if (match[0][0] === \"]\") {\r\n            var type = session.bgTokenizer.getState(row - 1) || \"\";\r\n            if (type[0] == \"bracketedComment\" || type[0] == \"bracketedString\")\r\n                return \"end\";\r\n        } else\r\n            return \"end\";\r\n    };\r\n\r\n    this.getFoldWidgetRange = function(session, foldStyle, row) {\r\n        var line = session.doc.getLine(row);\r\n        var match = this.foldingStartMarker.exec(line);\r\n        if (match) {\r\n            if (match[1])\r\n                return this.luaBlock(session, row, match.index + 1);\r\n\r\n            if (match[2])\r\n                return session.getCommentFoldRange(row, match.index + 1);\r\n\r\n            return this.openingBracketBlock(session, \"{\", row, match.index);\r\n        }\r\n\r\n        var match = this.foldingStopMarker.exec(line);\r\n        if (match) {\r\n            if (match[0] === \"end\") {\r\n                if (session.getTokenAt(row, match.index + 1).type === \"keyword\")\r\n                    return this.luaBlock(session, row, match.index + 1);\r\n            }\r\n\r\n            if (match[0][0] === \"]\")\r\n                return session.getCommentFoldRange(row, match.index + 1);\r\n\r\n            return this.closingBracketBlock(session, \"}\", row, match.index + match[0].length);\r\n        }\r\n    };\r\n\r\n    this.luaBlock = function(session, row, column) {\r\n        var stream = new TokenIterator(session, row, column);\r\n        var indentKeywords = {\r\n            \"function\": 1,\r\n            \"do\": 1,\r\n            \"then\": 1,\r\n            \"elseif\": -1,\r\n            \"end\": -1,\r\n            \"repeat\": 1,\r\n            \"until\": -1\r\n        };\r\n\r\n        var token = stream.getCurrentToken();\r\n        if (!token || token.type != \"keyword\")\r\n            return;\r\n\r\n        var val = token.value;\r\n        var stack = [val];\r\n        var dir = indentKeywords[val];\r\n\r\n        if (!dir)\r\n            return;\r\n\r\n        var startColumn = dir === -1 ? stream.getCurrentTokenColumn() : session.getLine(row).length;\r\n        var startRow = row;\r\n\r\n        stream.step = dir === -1 ? stream.stepBackward : stream.stepForward;\r\n        while(token = stream.step()) {\r\n            if (token.type !== \"keyword\")\r\n                continue;\r\n            var level = dir * indentKeywords[token.value];\r\n\r\n            if (level > 0) {\r\n                stack.unshift(token.value);\r\n            } else if (level <= 0) {\r\n                stack.shift();\r\n                if (!stack.length && token.value != \"elseif\")\r\n                    break;\r\n                if (level === 0)\r\n                    stack.unshift(token.value);\r\n            }\r\n        }\r\n\r\n        var row = stream.getCurrentTokenRow();\r\n        if (dir === -1)\r\n            return new Range(row, session.getLine(row).length, startRow, startColumn);\r\n        else\r\n            return new Range(startRow, startColumn, row, stream.getCurrentTokenColumn());\r\n    };\r\n\r\n}).call(FoldMode.prototype);\r\n\r\n});\r\n"]}