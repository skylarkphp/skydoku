{"version":3,"sources":["mode/red.js"],"names":["define","require","exports","module","oop","TextMode","Mode","RedHighlightRules","RedFoldMode","FoldMode","MatchingBraceOutdent","Range","this","HighlightRules","foldingRules","$outdent","$behaviour","$defaultBehaviour","inherits","lineCommentStart","blockComment","start","end","getNextLineIndent","state","line","tab","indent","$getIndent","tokenizedLine","getTokenizer","getLineTokens","tokens","endState","length","type","match","checkOutdent","input","autoOutdent","doc","row","$id","call","prototype"],"mappings":";;;;;;;AA8BAA,OAAO,SAASC,QAASC,QAASC,QAClC,aAEA,IAAIC,EAAMH,QAAQ,cACdI,EAAWJ,QAAQ,UAAUK,KAC7BC,EAAoBN,QAAQ,yBAAyBM,kBACrDC,EAAcP,QAAQ,oBAAoBQ,SAC1CC,EAAuBT,QAAQ,4BAA4BS,qBAG3DJ,GAFQL,QAAQ,YAAYU,MAErB,WACPC,KAAKC,eAAiBN,EACtBK,KAAKE,aAAe,IAAIN,EACxBI,KAAKG,SAAW,IAAIL,EACpBE,KAAKI,WAAaJ,KAAKK,oBAE3Bb,EAAIc,SAASZ,EAAMD,GAEnB,WAEIO,KAAKO,iBAAmB,IACxBP,KAAKQ,cAAiBC,MAAO,YAAaC,IAAK,KAE/CV,KAAKW,kBAAoB,SAASC,EAAOC,EAAMC,GAC3C,IAAIC,EAASf,KAAKgB,WAAWH,GAEzBI,EAAgBjB,KAAKkB,eAAeC,cAAcN,EAAMD,GACxDQ,EAASH,EAAcG,OACvBC,EAAWJ,EAAcL,MAE7B,GAAIQ,EAAOE,QAA0C,WAAhCF,EAAOA,EAAOE,OAAO,GAAGC,KACzC,OAAOR,EAGX,GAAa,SAATH,GACIY,EAAQX,EAAKW,MAAM,sBAEnBT,GAAUD,QAEX,GAAa,aAATF,EAAsB,CAC7B,GAAgB,SAAZS,EACA,MAAO,GAEX,IAAIG,GAAAA,EAAQX,EAAKW,MAAM,kBAEfA,EAAM,KACNT,GAAU,KAEdA,GAAU,MAIlB,OAAOA,GAGXf,KAAKyB,aAAe,SAASb,EAAOC,EAAMa,GACtC,OAAO1B,KAAKG,SAASsB,aAAaZ,EAAMa,IAG5C1B,KAAK2B,YAAc,SAASf,EAAOgB,EAAKC,GACpC7B,KAAKG,SAASwB,YAAYC,EAAKC,IAGnC7B,KAAK8B,IAAM,gBACZC,KAAKrC,EAAKsC,WAEb1C,QAAQI,KAAOA","file":"../../mode/red.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2010, Ajax.org B.V.\r\n * All rights reserved.\r\n * \r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n * \r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\ndefine(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar TextMode = require(\"./text\").Mode;\r\nvar RedHighlightRules = require(\"./red_highlight_rules\").RedHighlightRules;\r\nvar RedFoldMode = require(\"./folding/cstyle\").FoldMode;\r\nvar MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\r\nvar Range = require(\"../range\").Range;\r\n\r\nvar Mode = function() {\r\n    this.HighlightRules = RedHighlightRules;\r\n    this.foldingRules = new RedFoldMode();\r\n    this.$outdent = new MatchingBraceOutdent();\r\n    this.$behaviour = this.$defaultBehaviour;\r\n};\r\noop.inherits(Mode, TextMode);\r\n\r\n(function() {\r\n\r\n    this.lineCommentStart = \";\";\r\n    this.blockComment = { start: \"comment {\", end: \"}\" };\r\n\r\n    this.getNextLineIndent = function(state, line, tab) {\r\n        var indent = this.$getIndent(line);\r\n\r\n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\r\n        var tokens = tokenizedLine.tokens;\r\n        var endState = tokenizedLine.state;\r\n\r\n        if (tokens.length && tokens[tokens.length-1].type == \"comment\") {\r\n            return indent;\r\n        }\r\n\r\n        if (state == \"start\") {\r\n            var match = line.match(/^.*[\\{\\[\\(]\\s*$/);\r\n            if (match) {\r\n                indent += tab;\r\n            }\r\n        } else if (state == \"doc-start\") {\r\n            if (endState == \"start\") {\r\n                return \"\";\r\n            }\r\n            var match = line.match(/^\\s*(\\/?)\\*/);\r\n            if (match) {\r\n                if (match[1]) {\r\n                    indent += \" \";\r\n                }\r\n                indent += \"* \";\r\n            }\r\n        }\r\n\r\n        return indent;\r\n    };\r\n\r\n    this.checkOutdent = function(state, line, input) {\r\n        return this.$outdent.checkOutdent(line, input);\r\n    };\r\n\r\n    this.autoOutdent = function(state, doc, row) {\r\n        this.$outdent.autoOutdent(doc, row);\r\n    };\r\n\r\n    this.$id = \"ace/mode/red\";\r\n}).call(Mode.prototype);\r\n\r\nexports.Mode = Mode;\r\n});\r\n"]}