{"version":3,"sources":["mode/io_highlight_rules.js"],"names":["define","require","exports","module","oop","TextHighlightRules","IoHighlightRules","this","$rules","start","token","regex","comment","push","next","defaultToken","normalizeRules","metaData","fileTypes","keyEquivalent","name","scopeName","inherits"],"mappings":";;;;;;;AAoCAA,OAAO,SAASC,QAASC,QAASC,QAClC,aAEA,IAAIC,EAAMH,QAAQ,cACdI,EAAqBJ,QAAQ,0BAA0BI,mBAEvDC,EAAmB,WAInBC,KAAKC,QAAWC,QACTC,OAAS,OAAQ,6BACjBC,MAAO,aACPC,QAAS,0JACTF,OAAS,OAAQ,6BACjBC,MAAO,aACPC,QAAS,kEACTF,MAAO,qBACPC,MAAO,iHACPD,MAAO,oCACPC,MAAO,OACPE,OACKH,MAAO,oCACPC,MAAO,OACPG,KAAM,QACNC,aAAc,uBACnBL,MAAO,oCACPC,MAAO,KACPE,OACKH,MAAO,+BACPC,MAAO,IACPG,KAAM,QACNC,aAAc,mCACnBL,MAAO,oCACPC,MAAO,IACPE,OACKH,MAAO,8BAA+BC,MAAO,IAAKG,KAAM,QACxDC,aAAc,kCACnBL,MAAO,uBACPC,MAAO,mDACPC,QAAS,0OACTF,MAAO,sBACPC,MAAO,yEACPD,MAAO,oBAAqBC,MAAO,oBACnCD,MAAO,mBAAoBC,MAAO,yBAClCD,MAAO,sBACPC,MAAO,uEACPD,MAAO,8BACPC,MAAO,+BACPD,MAAO,yCACPC,MAAO,MACPE,OACKH,MAAO,uCACPC,MAAO,MACPG,KAAM,QACNJ,MAAO,+BAAgCC,MAAO,UAC9CI,aAAc,8BACnBL,MAAO,yCACPC,MAAO,IACPE,OACKH,MAAO,uCACPC,MAAO,IACPG,KAAM,QACNJ,MAAO,+BAAgCC,MAAO,UAC9CI,aAAc,8BACnBL,MAAO,sBACPC,MAAO,oHACPD,MAAO,2BAA4BC,MAAO,aAC1CD,MAAO,uBACPC,MAAO,mEAEdJ,KAAKS,kBAGTV,EAAiBW,UAAaC,WAAa,MACrCC,cAAe,MACfC,KAAM,KACNC,UAAW,aAGjBjB,EAAIkB,SAAShB,EAAkBD,GAE/BH,QAAQI,iBAAmBA","file":"../../mode/io_highlight_rules.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2012, Ajax.org B.V.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\n/* This file was autogenerated from tm bundles\\io.tmbundle/Syntaxes/io.plist (uuid: ) */\r\n/****************************************************************************************\r\n * IT MIGHT NOT BE PERFECT ...But it's a good start from an existing *.tmlanguage file. *\r\n * fileTypes                                                                            *\r\n ****************************************************************************************/\r\n\r\ndefine(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\r\n\r\nvar IoHighlightRules = function() {\r\n    // regexp must not have capturing parentheses. Use (?:) instead.\r\n    // regexps are ordered -> the first match is used\r\n\r\n    this.$rules = { start: \r\n       [ { token: [ 'text', 'meta.empty-parenthesis.io' ],\r\n           regex: '(\\\\()(\\\\))',\r\n           comment: 'we match this to overload return inside () --Allan; scoping rules for what gets the scope have changed, so we now group the ) instead of the ( -- Rob' },\r\n         { token: [ 'text', 'meta.comma-parenthesis.io' ],\r\n           regex: '(\\\\,)(\\\\))',\r\n           comment: 'We want to do the same for ,) -- Seckar; same as above -- Rob' },\r\n         { token: 'keyword.control.io',\r\n           regex: '\\\\b(?:if|ifTrue|ifFalse|ifTrueIfFalse|for|loop|reverseForeach|foreach|map|continue|break|while|do|return)\\\\b' },\r\n         { token: 'punctuation.definition.comment.io',\r\n           regex: '/\\\\*',\r\n           push: \r\n            [ { token: 'punctuation.definition.comment.io',\r\n                regex: '\\\\*/',\r\n                next: 'pop' },\r\n              { defaultToken: 'comment.block.io' } ] },\r\n         { token: 'punctuation.definition.comment.io',\r\n           regex: '//',\r\n           push: \r\n            [ { token: 'comment.line.double-slash.io',\r\n                regex: '$',\r\n                next: 'pop' },\r\n              { defaultToken: 'comment.line.double-slash.io' } ] },\r\n         { token: 'punctuation.definition.comment.io',\r\n           regex: '#',\r\n           push: \r\n            [ { token: 'comment.line.number-sign.io', regex: '$', next: 'pop' },\r\n              { defaultToken: 'comment.line.number-sign.io' } ] },\r\n         { token: 'variable.language.io',\r\n           regex: '\\\\b(?:self|sender|target|proto|protos|parent)\\\\b',\r\n           comment: 'I wonder if some of this isn\\'t variable.other.language? --Allan; scoping this as variable.language to match Objective-C\\'s handling of \\'self\\', which is inconsistent with C++\\'s handling of \\'this\\' but perhaps intentionally so -- Rob' },\r\n         { token: 'keyword.operator.io',\r\n           regex: '<=|>=|=|:=|\\\\*|\\\\||\\\\|\\\\||\\\\+|-|/|&|&&|>|<|\\\\?|@|@@|\\\\b(?:and|or)\\\\b' },\r\n         { token: 'constant.other.io', regex: '\\\\bGL[\\\\w_]+\\\\b' },\r\n         { token: 'support.class.io', regex: '\\\\b[A-Z](?:\\\\w+)?\\\\b' },\r\n         { token: 'support.function.io',\r\n           regex: '\\\\b(?:clone|call|init|method|list|vector|block|\\\\w+(?=\\\\s*\\\\())\\\\b' },\r\n         { token: 'support.function.open-gl.io',\r\n           regex: '\\\\bgl(?:u|ut)?[A-Z]\\\\w+\\\\b' },\r\n         { token: 'punctuation.definition.string.begin.io',\r\n           regex: '\"\"\"',\r\n           push: \r\n            [ { token: 'punctuation.definition.string.end.io',\r\n                regex: '\"\"\"',\r\n                next: 'pop' },\r\n              { token: 'constant.character.escape.io', regex: '\\\\\\\\.' },\r\n              { defaultToken: 'string.quoted.triple.io' } ] },\r\n         { token: 'punctuation.definition.string.begin.io',\r\n           regex: '\"',\r\n           push: \r\n            [ { token: 'punctuation.definition.string.end.io',\r\n                regex: '\"',\r\n                next: 'pop' },\r\n              { token: 'constant.character.escape.io', regex: '\\\\\\\\.' },\r\n              { defaultToken: 'string.quoted.double.io' } ] },\r\n         { token: 'constant.numeric.io',\r\n           regex: '\\\\b(?:0(?:x|X)[0-9a-fA-F]*|(?:[0-9]+\\\\.?[0-9]*|\\\\.[0-9]+)(?:(?:e|E)(?:\\\\+|-)?[0-9]+)?)(?:L|l|UL|ul|u|U|F|f)?\\\\b' },\r\n         { token: 'variable.other.global.io', regex: 'Lobby\\\\b' },\r\n         { token: 'constant.language.io',\r\n           regex: '\\\\b(?:TRUE|true|FALSE|false|NULL|null|Null|Nil|nil|YES|NO)\\\\b' } ] };\r\n    \r\n    this.normalizeRules();\r\n};\r\n\r\nIoHighlightRules.metaData = { fileTypes: [ 'io' ],\r\n      keyEquivalent: '^~I',\r\n      name: 'Io',\r\n      scopeName: 'source.io' };\r\n\r\n\r\noop.inherits(IoHighlightRules, TextHighlightRules);\r\n\r\nexports.IoHighlightRules = IoHighlightRules;\r\n});"]}