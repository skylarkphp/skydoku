{"version":3,"sources":["mode/prolog_highlight_rules.js"],"names":["define","require","exports","module","oop","TextHighlightRules","PrologHighlightRules","this","$rules","start","include","#atom","token","regex","#basic_elem","#basic_fact","#builtins","#comment","push","next","defaultToken","#constants","#directive","#expr","#fact","#list","#operators","#parameter","#rule","#statement","#string","#variable","normalizeRules","metaData","fileTypes","foldingStartMarker","foldingStopMarker","keyEquivalent","name","scopeName","inherits"],"mappings":"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","file":"../../mode/prolog_highlight_rules.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2012, Ajax.org B.V.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\n/* This file was autogenerated from https://raw.github.com/stephenroller/prolog-tmbundle/master/Syntaxes/Prolog.tmLanguage (uuid: ) */\r\n/****************************************************************************************\r\n * IT MIGHT NOT BE PERFECT ...But it's a good start from an existing *.tmlanguage file. *\r\n * fileTypes                                                                            *\r\n ****************************************************************************************/\r\n\r\ndefine(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\r\n\r\nvar PrologHighlightRules = function() {\r\n    // regexp must not have capturing parentheses. Use (?:) instead.\r\n    // regexps are ordered -> the first match is used\r\n\r\n    this.$rules = { start: \r\n       [ { include: '#comment' },\r\n         { include: '#basic_fact' },\r\n         { include: '#rule' },\r\n         { include: '#directive' },\r\n         { include: '#fact' } ],\r\n      '#atom': \r\n       [ { token: 'constant.other.atom.prolog',\r\n           regex: '\\\\b[a-z][a-zA-Z0-9_]*\\\\b' },\r\n         { token: 'constant.numeric.prolog',\r\n           regex: '-?\\\\d+(?:\\\\.\\\\d+)?' },\r\n         { include: '#string' } ],\r\n      '#basic_elem': \r\n       [ { include: '#comment' },\r\n         { include: '#statement' },\r\n         { include: '#constants' },\r\n         { include: '#operators' },\r\n         { include: '#builtins' },\r\n         { include: '#list' },\r\n         { include: '#atom' },\r\n         { include: '#variable' } ],\r\n      '#basic_fact': \r\n       [ { token: \r\n            [ 'entity.name.function.fact.basic.prolog',\r\n              'punctuation.end.fact.basic.prolog' ],\r\n           regex: '([a-z]\\\\w*)(\\\\.)' } ],\r\n      '#builtins': \r\n       [ { token: 'support.function.builtin.prolog',\r\n           regex: '\\\\b(?:abolish|abort|ancestors|arg|ascii|assert[az]|atom(?:ic)?|body|char|close|conc|concat|consult|define|definition|dynamic|dump|fail|file|free|free_proc|functor|getc|goal|halt|head|head|integer|length|listing|match_args|member|next_clause|nl|nonvar|nth|number|cvars|nvars|offset|op|print?|prompt|putc|quoted|ratom|read|redefine|rename|retract(?:all)?|see|seeing|seen|skip|spy|statistics|system|tab|tell|telling|term|time|told|univ|unlink_clause|unspy_predicate|var|write)\\\\b' } ],\r\n      '#comment': \r\n       [ { token: \r\n            [ 'punctuation.definition.comment.prolog',\r\n              'comment.line.percentage.prolog' ],\r\n           regex: '(%)(.*$)' },\r\n         { token: 'punctuation.definition.comment.prolog',\r\n           regex: '/\\\\*',\r\n           push: \r\n            [ { token: 'punctuation.definition.comment.prolog',\r\n                regex: '\\\\*/',\r\n                next: 'pop' },\r\n              { defaultToken: 'comment.block.prolog' } ] } ],\r\n      '#constants': \r\n       [ { token: 'constant.language.prolog',\r\n           regex: '\\\\b(?:true|false|yes|no)\\\\b' } ],\r\n      '#directive': \r\n       [ { token: 'keyword.operator.directive.prolog',\r\n           regex: ':-',\r\n           push: \r\n            [ { token: 'meta.directive.prolog', regex: '\\\\.', next: 'pop' },\r\n              { include: '#comment' },\r\n              { include: '#statement' },\r\n              { defaultToken: 'meta.directive.prolog' } ] } ],\r\n      '#expr': \r\n       [ { include: '#comments' },\r\n         { token: 'meta.expression.prolog',\r\n           regex: '\\\\(',\r\n           push: \r\n            [ { token: 'meta.expression.prolog', regex: '\\\\)', next: 'pop' },\r\n              { include: '#expr' },\r\n              { defaultToken: 'meta.expression.prolog' } ] },\r\n         { token: 'keyword.control.cutoff.prolog', regex: '!' },\r\n         { token: 'punctuation.control.and.prolog', regex: ',' },\r\n         { token: 'punctuation.control.or.prolog', regex: ';' },\r\n         { include: '#basic_elem' } ],\r\n      '#fact': \r\n       [ { token: \r\n            [ 'entity.name.function.fact.prolog',\r\n              'punctuation.begin.fact.parameters.prolog' ],\r\n           regex: '([a-z]\\\\w*)(\\\\()(?!.*:-)',\r\n           push: \r\n            [ { token: \r\n                 [ 'punctuation.end.fact.parameters.prolog',\r\n                   'punctuation.end.fact.prolog' ],\r\n                regex: '(\\\\))(\\\\.?)',\r\n                next: 'pop' },\r\n              { include: '#parameter' },\r\n              { defaultToken: 'meta.fact.prolog' } ] } ],\r\n      '#list': \r\n       [ { token: 'punctuation.begin.list.prolog',\r\n           regex: '\\\\[(?=.*\\\\])',\r\n           push: \r\n            [ { token: 'punctuation.end.list.prolog',\r\n                regex: '\\\\]',\r\n                next: 'pop' },\r\n              { include: '#comment' },\r\n              { token: 'punctuation.separator.list.prolog', regex: ',' },\r\n              { token: 'punctuation.concat.list.prolog',\r\n                regex: '\\\\|',\r\n                push: \r\n                 [ { token: 'meta.list.concat.prolog',\r\n                     regex: '(?=\\\\s*\\\\])',\r\n                     next: 'pop' },\r\n                   { include: '#basic_elem' },\r\n                   { defaultToken: 'meta.list.concat.prolog' } ] },\r\n              { include: '#basic_elem' },\r\n              { defaultToken: 'meta.list.prolog' } ] } ],\r\n      '#operators': \r\n       [ { token: 'keyword.operator.prolog',\r\n           regex: '\\\\\\\\\\\\+|\\\\bnot\\\\b|\\\\bis\\\\b|->|[><]|[><\\\\\\\\:=]?=|(?:=\\\\\\\\|\\\\\\\\=)=' } ],\r\n      '#parameter': \r\n       [ { token: 'variable.language.anonymous.prolog',\r\n           regex: '\\\\b_\\\\b' },\r\n         { token: 'variable.parameter.prolog',\r\n           regex: '\\\\b[A-Z_]\\\\w*\\\\b' },\r\n         { token: 'punctuation.separator.parameters.prolog', regex: ',' },\r\n         { include: '#basic_elem' },\r\n         { token: 'text', regex: '[^\\\\s]' } ],\r\n      '#rule': \r\n       [ { token: 'meta.rule.prolog',\r\n           regex: '(?=[a-z]\\\\w*.*:-)',\r\n           push: \r\n            [ { token: 'punctuation.rule.end.prolog',\r\n                regex: '\\\\.',\r\n                next: 'pop' },\r\n              { token: 'meta.rule.signature.prolog',\r\n                regex: '(?=[a-z]\\\\w*.*:-)',\r\n                push: \r\n                 [ { token: 'meta.rule.signature.prolog',\r\n                     regex: '(?=:-)',\r\n                     next: 'pop' },\r\n                   { token: 'entity.name.function.rule.prolog',\r\n                     regex: '[a-z]\\\\w*(?=\\\\(|\\\\s*:-)' },\r\n                   { token: 'punctuation.rule.parameters.begin.prolog',\r\n                     regex: '\\\\(',\r\n                     push: \r\n                      [ { token: 'punctuation.rule.parameters.end.prolog',\r\n                          regex: '\\\\)',\r\n                          next: 'pop' },\r\n                        { include: '#parameter' },\r\n                        { defaultToken: 'meta.rule.parameters.prolog' } ] },\r\n                   { defaultToken: 'meta.rule.signature.prolog' } ] },\r\n              { token: 'keyword.operator.definition.prolog',\r\n                regex: ':-',\r\n                push: \r\n                 [ { token: 'meta.rule.definition.prolog',\r\n                     regex: '(?=\\\\.)',\r\n                     next: 'pop' },\r\n                   { include: '#comment' },\r\n                   { include: '#expr' },\r\n                   { defaultToken: 'meta.rule.definition.prolog' } ] },\r\n              { defaultToken: 'meta.rule.prolog' } ] } ],\r\n      '#statement': \r\n       [ { token: 'meta.statement.prolog',\r\n           regex: '(?=[a-z]\\\\w*\\\\()',\r\n           push: \r\n            [ { token: 'punctuation.end.statement.parameters.prolog',\r\n                regex: '\\\\)',\r\n                next: 'pop' },\r\n              { include: '#builtins' },\r\n              { include: '#atom' },\r\n              { token: 'punctuation.begin.statement.parameters.prolog',\r\n                regex: '\\\\(',\r\n                push: \r\n                 [ { token: 'meta.statement.parameters.prolog',\r\n                     regex: '(?=\\\\))',\r\n                     next: 'pop' },\r\n                   { token: 'punctuation.separator.statement.prolog', regex: ',' },\r\n                   { include: '#basic_elem' },\r\n                   { defaultToken: 'meta.statement.parameters.prolog' } ] },\r\n              { defaultToken: 'meta.statement.prolog' } ] } ],\r\n      '#string': \r\n       [ { token: 'punctuation.definition.string.begin.prolog',\r\n           regex: '\\'',\r\n           push: \r\n            [ { token: 'punctuation.definition.string.end.prolog',\r\n                regex: '\\'',\r\n                next: 'pop' },\r\n              { token: 'constant.character.escape.prolog', regex: '\\\\\\\\.' },\r\n              { token: 'constant.character.escape.quote.prolog',\r\n                regex: '\\'\\'' },\r\n              { defaultToken: 'string.quoted.single.prolog' } ] } ],\r\n      '#variable': \r\n       [ { token: 'variable.language.anonymous.prolog',\r\n           regex: '\\\\b_\\\\b' },\r\n         { token: 'variable.other.prolog',\r\n           regex: '\\\\b[A-Z_][a-zA-Z0-9_]*\\\\b' } ] };\r\n    \r\n    this.normalizeRules();\r\n};\r\n\r\nPrologHighlightRules.metaData = { fileTypes: [ 'plg', 'prolog' ],\r\n      foldingStartMarker: '(%\\\\s*region \\\\w*)|([a-z]\\\\w*.*:- ?)',\r\n      foldingStopMarker: '(%\\\\s*end(\\\\s*region)?)|(?=\\\\.)',\r\n      keyEquivalent: '^~P',\r\n      name: 'Prolog',\r\n      scopeName: 'source.prolog' };\r\n\r\n\r\noop.inherits(PrologHighlightRules, TextHighlightRules);\r\n\r\nexports.PrologHighlightRules = PrologHighlightRules;\r\n});"]}