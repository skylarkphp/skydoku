{"version":3,"sources":["mode/swift_highlight_rules.js"],"names":["define","require","exports","module","oop","lang","DocCommentHighlightRules","TextHighlightRules","SwiftHighlightRules","keywordMapper","this","createKeywordMapper","variable.language","keyword","storage.type","constant.language","support.function","$rules","start","options","nestable","interpolation","interpStart","nextState","mainRule","regex","multiline","token","escape","escapeRegExp","lead","open","push","error","next","defaultToken","filter","Boolean","close","onMatch","val","state","stack","length","unshift","shift","indexOf","string","getTagRule","caseInsensitive","getStartRule","stateName","embedRules","getEndRule","normalizeRules","inherits","HighlightRules"],"mappings":";;;;;;;AA+BAA,OAAO,SAASC,EAASC,EAASC,GAClC,aAEA,IAAIC,EAAMH,EAAQ,cACdI,EAAOJ,EAAQ,eACfK,EAA2BL,EAAQ,iCAAiCK,yBACpEC,EAAqBN,EAAQ,0BAA0BM,mBAEvDC,EAAsB,WACvB,IAAIC,EAAgBC,KAAKC,qBACpBC,oBAAqB,GACrBC,QAAW,ohBASXC,eAAgB,0GAEhBC,oBACI,2EACJC,mBACI,IACL,cAyFHN,KAAKO,QACDC,OAxFJ,SAAgBA,EAAOC,GACnB,IAAIC,EAAWD,EAAQC,UAAYD,EAAQE,cACvCC,EAAcH,EAAQE,eAAiBF,EAAQE,cAAcE,WAAa,QAC1EC,GACAC,MAAOP,GAASC,EAAQO,UAAY,GAAK,SACzCC,MAAO,gBAEPJ,GACAJ,EAAQS,SACJH,MAAON,EAAQS,OACfD,MAAO,oBAEXR,EAAQE,gBACJM,MAAQ,oBACRF,MAAQpB,EAAKwB,aAAaV,EAAQE,cAAcS,KAAOX,EAAQE,cAAcU,MAC7EC,KAAQV,GAEZH,EAAQc,QACJR,MAAON,EAAQc,MACfN,MAAO,kBAGPF,MAAOP,GAASC,EAAQO,UAAY,GAAK,MACzCC,MAAO,aACPO,KAAMd,EAAW,MAAQ,UAEzBe,aAAc,WAEpBC,OAAOC,SAOT,GALIjB,EACAI,EAASQ,KAAOT,EAEhBC,EAASU,KAAOX,GAEfJ,EAAQE,cACT,OAAOG,EAEX,IAAIO,EAAOZ,EAAQE,cAAcU,KAC7BO,EAAQnB,EAAQE,cAAciB,MAmBlC,QAjBIb,MAAO,IAAMpB,EAAKwB,aAAaE,EAAOO,GAAS,IAC/CC,QAAS,SAASC,EAAKC,EAAOC,GAE1B,OADAhC,KAAKwB,KAAOM,GAAOT,EAAOrB,KAAKa,UAAY,GACvCiB,GAAOT,GAAQW,EAAMC,QACrBD,EAAME,QAAQ,QAASH,GAChB,SAEPD,GAAOF,GAASI,EAAMC,SACtBD,EAAMG,QACNnC,KAAKwB,KAAOQ,EAAMG,SACkB,GAAhCnC,KAAKwB,KAAKY,QAAQ,WACX,kBAERN,GAAOT,EAAO,eAAiB,gBAE1CR,UAAWD,GAEEE,GA+BbuB,CAAO,KACHnB,OAAQ,uCACRP,eAAgBS,KAAM,KAAMC,KAAM,IAAKO,MAAO,KAC9CL,MAAO,MACPP,WAAW,MA9BXC,MAAQ,UACRF,MAAQ,cACRS,MACI5B,EAAyB0C,cACxBrB,MAAQ,UAAWF,MAAQ,MAAOS,KAAM,UACxCC,aAAe,UAAWc,iBAAiB,KAGpD3C,EAAyB4C,aAAa,cAElCvB,MAAQ,gBACRF,MAAQ,OACR0B,UAAW,iBACXnB,MACI1B,EAAyB0C,cACxBrB,MAAQ,gBAAiBF,MAAQ,OAAQO,KAAM,mBAC/CL,MAAQ,cAAeF,MAAQ,SAAUS,KAAO,QAChDC,aAAe,UAAWc,iBAAiB,OAiB/CxB,MAAO,wCACPE,MAAO,uBAGRF,MAAO,uCACPE,MAAOlB,IAGPkB,MAAQ,mBACRF,MAAQ,oFAERE,MAAQ,mBACRF,MAAQ,mFACRS,KAAQ,UAERP,MAAQ,uBACRF,MAAQ,UACRS,KAAQ,UAERP,MAAQ,eACRF,MAAQ,SACRS,KAAQ,UAERP,MAAQ,eACRF,MAAQ,YAKpBf,KAAK0C,WAAW9C,EAA0B,QACpCA,EAAyB+C,WAAW,WAE1C3C,KAAK4C,kBAITlD,EAAImD,SAAS/C,EAAqBD,GAElCL,EAAQsD,eAAiBhD","file":"../../mode/swift_highlight_rules.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2012, Ajax.org B.V.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\n\r\ndefine(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar lang = require(\"../lib/lang\");\r\nvar DocCommentHighlightRules = require(\"./doc_comment_highlight_rules\").DocCommentHighlightRules;\r\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\r\n\r\nvar SwiftHighlightRules = function() {\r\n   var keywordMapper = this.createKeywordMapper({\r\n        \"variable.language\": \"\",\r\n        \"keyword\": \"__COLUMN__|__FILE__|__FUNCTION__|__LINE__\"\r\n            + \"|as|associativity|break|case|class|continue|default|deinit|didSet\"\r\n            + \"|do|dynamicType|else|enum|extension|fallthrough|for|func|get|if|import\"\r\n            + \"|in|infix|init|inout|is|left|let|let|mutating|new|none|nonmutating\"\r\n            + \"|operator|override|postfix|precedence|prefix|protocol|return|right\"\r\n            + \"|safe|Self|self|set|struct|subscript|switch|Type|typealias\"\r\n            + \"|unowned|unsafe|var|weak|where|while|willSet\"\r\n            + \"|convenience|dynamic|final|infix|lazy|mutating|nonmutating|optional|override|postfix\"\r\n            + \"|prefix|required|static|guard|defer\",\r\n        \"storage.type\": \"bool|double|Double\"\r\n            + \"|extension|float|Float|int|Int|open|internal|fileprivate|private|public|string|String\",\r\n        \"constant.language\":\r\n            \"false|Infinity|NaN|nil|no|null|null|off|on|super|this|true|undefined|yes\",\r\n        \"support.function\":\r\n            \"\"\r\n    }, \"identifier\");\r\n    \r\n    function string(start, options) {\r\n        var nestable = options.nestable || options.interpolation;\r\n        var interpStart = options.interpolation && options.interpolation.nextState || \"start\";\r\n        var mainRule = {\r\n            regex: start + (options.multiline ? \"\" : \"(?=.)\"),\r\n            token: \"string.start\"\r\n        };\r\n        var nextState = [\r\n            options.escape && {\r\n                regex: options.escape,\r\n                token: \"character.escape\"\r\n            },\r\n            options.interpolation && {\r\n                token : \"paren.quasi.start\",\r\n                regex : lang.escapeRegExp(options.interpolation.lead + options.interpolation.open),\r\n                push  : interpStart\r\n            },\r\n            options.error && {\r\n                regex: options.error,\r\n                token: \"error.invalid\"\r\n            }, \r\n            {\r\n                regex: start + (options.multiline ? \"\" : \"|$\"),\r\n                token: \"string.end\",\r\n                next: nestable ? \"pop\" : \"start\"\r\n            }, {\r\n                defaultToken: \"string\"\r\n            }\r\n        ].filter(Boolean);\r\n        \r\n        if (nestable)\r\n            mainRule.push = nextState;\r\n        else\r\n            mainRule.next = nextState;\r\n        \r\n        if (!options.interpolation)\r\n            return mainRule;\r\n        \r\n        var open = options.interpolation.open;\r\n        var close = options.interpolation.close;\r\n        var counter = {\r\n            regex: \"[\" + lang.escapeRegExp(open + close) + \"]\",\r\n            onMatch: function(val, state, stack) {\r\n                this.next = val == open ? this.nextState : \"\";\r\n                if (val == open && stack.length) {\r\n                    stack.unshift(\"start\", state);\r\n                    return \"paren\";\r\n                }\r\n                if (val == close && stack.length) {\r\n                    stack.shift();\r\n                    this.next = stack.shift();\r\n                    if (this.next.indexOf(\"string\") != -1)\r\n                        return \"paren.quasi.end\";\r\n                }\r\n                return val == open ? \"paren.lparen\" : \"paren.rparen\";\r\n            },\r\n            nextState: interpStart\r\n        }; \r\n        return [counter, mainRule];\r\n    }\r\n    \r\n    function comments() {\r\n        return [{\r\n                token : \"comment\",\r\n                regex : \"\\\\/\\\\/(?=.)\",\r\n                next : [\r\n                    DocCommentHighlightRules.getTagRule(),\r\n                    {token : \"comment\", regex : \"$|^\", next: \"start\"},\r\n                    {defaultToken : \"comment\", caseInsensitive: true}\r\n                ]\r\n            },\r\n            DocCommentHighlightRules.getStartRule(\"doc-start\"),\r\n            {\r\n                token : \"comment.start\",\r\n                regex : /\\/\\*/,\r\n                stateName: \"nested_comment\",\r\n                push : [\r\n                    DocCommentHighlightRules.getTagRule(),\r\n                    {token : \"comment.start\", regex : /\\/\\*/, push: \"nested_comment\"},\r\n                    {token : \"comment.end\", regex : \"\\\\*\\\\/\", next : \"pop\"},\r\n                    {defaultToken : \"comment\", caseInsensitive: true}\r\n                ]\r\n            }\r\n        ];\r\n    }\r\n    \r\n\r\n    this.$rules = {\r\n        start: [\r\n            string('\"', {\r\n                escape: /\\\\(?:[0\\\\tnr\"']|u{[a-fA-F1-9]{0,8}})/,\r\n                interpolation: {lead: \"\\\\\", open: \"(\", close: \")\"},\r\n                error: /\\\\./,\r\n                multiline: false\r\n            }),\r\n            comments(),\r\n            {\r\n                 regex: /@[a-zA-Z_$][a-zA-Z_$\\d\\u0080-\\ufffe]*/,\r\n                 token: \"variable.parameter\"\r\n            },\r\n            {\r\n                regex: /[a-zA-Z_$][a-zA-Z_$\\d\\u0080-\\ufffe]*/,\r\n                token: keywordMapper\r\n            },  \r\n            {\r\n                token : \"constant.numeric\", \r\n                regex : /[+-]?(?:0(?:b[01]+|o[0-7]+|x[\\da-fA-F])|\\d+(?:(?:\\.\\d*)?(?:[PpEe][+-]?\\d+)?)\\b)/\r\n            }, {\r\n                token : \"keyword.operator\",\r\n                regex : /--|\\+\\+|===|==|=|!=|!==|<=|>=|<<=|>>=|>>>=|<>|<|>|!|&&|\\|\\||\\?:|[!$%&*+\\-~\\/^]=?/,\r\n                next  : \"start\"\r\n            }, {\r\n                token : \"punctuation.operator\",\r\n                regex : /[?:,;.]/,\r\n                next  : \"start\"\r\n            }, {\r\n                token : \"paren.lparen\",\r\n                regex : /[\\[({]/,\r\n                next  : \"start\"\r\n            }, {\r\n                token : \"paren.rparen\",\r\n                regex : /[\\])}]/\r\n            } \r\n            \r\n        ]\r\n    };\r\n    this.embedRules(DocCommentHighlightRules, \"doc-\",\r\n        [ DocCommentHighlightRules.getEndRule(\"start\") ]);\r\n    \r\n    this.normalizeRules();\r\n};\r\n\r\n\r\noop.inherits(SwiftHighlightRules, TextHighlightRules);\r\n\r\nexports.HighlightRules = SwiftHighlightRules;\r\n});"]}