{"version":3,"sources":["mode/praat_highlight_rules.js"],"names":["define","require","exports","module","oop","TextHighlightRules","PraatHighlightRules","this","$rules","start","token","regex","next","form","for","brokenstring","inherits"],"mappings":";;;;;;;AAAAA,OAAO,SAASC,QAASC,QAASC,QAClC,aAEA,IAAIC,EAAMH,QAAQ,cACdI,EAAqBJ,QAAQ,0BAA0BI,mBAEvDC,EAAsB,WAwGtBC,KAAKC,QACDC,QAGQC,MAAQ,sBACRC,MAAQ,oDAGRD,OAAS,OAAQ,OAAQ,mBAAoB,OAAQ,WACrDC,MAAQ,iEAGRD,OAAS,OAAQ,UAAW,OAAQ,UACpCC,MAAQ,iHAGRD,OAAS,OAAQ,WACjBC,MAAQ,qCAGRD,OAAS,OAAQ,mBAAoB,QACrCC,MAAQ,+DAGRD,OAAS,OAAQ,OAAQ,mBAAoB,OAAQ,UAAW,OAAQ,WACxEC,MAAQ,6IAGRD,OAAS,OAAQ,UAAW,OAAQ,WACpCC,MAAQ,uEAGRD,OAAS,OAAQ,UAAW,OAAQ,WACpCC,MAAQ,8DAGRD,OAAS,OAAQ,UAAW,OAAQ,WACpCC,MAAQ,4CAGRD,OAAS,OAAQ,mBAAoB,QACrCC,MAAQ,mCAGRD,MAAQ,mBACRC,MAAQ,2xCAGRD,MAAQ,oBACRC,MAAQ,6LAGRD,OAAS,mBAAoB,QAC7BC,MAAQ,sgDAGRD,MAAQ,UACRC,MAAQ,YACRC,KAAO,QAGPF,MAAQ,UACRC,MAAQ,iIAGRD,MAAQ,SACRC,MAAQ,YAGRD,MAAQ,SACRC,MAAQ,UACRC,KAAO,iBAGPF,OAAS,OAAQ,UAAW,OAAQ,uBACpCC,MAAQ,4BACRC,KAAO,SAGPF,MAAQ,mBACRC,MAAQ,iDAGRD,OAAS,UAAW,OAAQ,wBAC5BC,MAAQ,8BAGRD,OAAS,uBAAwB,QACjCC,MAAQ,oBAGRD,OAAS,OAAQ,UAAW,OAAQ,wBACpCC,MAAQ,2BAGRD,MAAQ,UACRC,MAAQ,iBAERD,MAAQ,OACRC,MAAQ,QAGhBE,OAEQH,OAAS,UAAW,OAAQ,oBAC5BC,MAAQ,gDAERD,OAAS,UAAW,oBACpBC,MAAQ,uEAERD,OAAS,UAAW,UACpBC,MAAQ,+BAERD,OAAS,UAAW,OAAQ,UAC5BC,MAAQ,uCAERD,OAAS,UAAW,OAAQ,SAAU,mBACtCC,MAAQ,mCAERD,OAAS,UAAW,OAAQ,qBAC5BC,MAAQ,6CAERD,OAAS,UAAW,OAAQ,oBAC5BC,MAAQ,+FAERD,OAAS,UAAW,UACpBC,MAAQ,qBAERD,MAAQ,UACRC,MAAQ,UACRC,KAAO,UAGfE,MAEQJ,OAAS,UAAW,OAAQ,mBAAoB,QAChDC,MAAQ,kEAERD,OAAS,UAAW,QACpBC,MAAQ,yBAERD,MAAQ,OACRC,MAAQ,IACRC,KAAO,UAGfG,eAEQL,OAAS,OAAQ,UACjBC,MAAQ,sBAERD,MAAQ,SACRC,MAAQ,IACRC,KAAO,YAMvBR,EAAIY,SAASV,EAAqBD,GAElCH,QAAQI,oBAAsBA","file":"../../mode/praat_highlight_rules.js","sourcesContent":["define(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\r\n\r\nvar PraatHighlightRules = function() {\r\n\r\n    var keywords = (\r\n        \"if|then|else|elsif|elif|endif|fi|\" +\r\n        \"endfor|endproc|\" + // related keywords specified below\r\n        \"while|endwhile|\" +\r\n        \"repeat|until|\" +\r\n        \"select|plus|minus|\" +\r\n        \"assert|asserterror\"\r\n    );\r\n\r\n    var predefinedVariables = (\r\n        \"macintosh|windows|unix|\" +\r\n        \"praatVersion|praatVersion\\\\$\" +\r\n        \"pi|undefined|\" +\r\n        \"newline\\\\$|tab\\\\$|\" +\r\n        \"shellDirectory\\\\$|homeDirectory\\\\$|preferencesDirectory\\\\$|\" +\r\n        \"temporaryDirectory\\\\$|defaultDirectory\\\\$\"\r\n    );\r\n\r\n    // What is \"endSendPraat\"? Function? Directive?\r\n    var directives = (\r\n        \"clearinfo|endSendPraat\"\r\n    );\r\n\r\n    var functions = (\r\n//      Info functions\r\n        \"writeInfo|writeInfoLine|appendInfo|appendInfoLine|info\\\\$|\" +\r\n        \"writeFile|writeFileLine|appendFile|appendFileLine|\" +\r\n//      Math functions\r\n        \"abs|round|floor|ceiling|min|max|imin|imax|\" +\r\n        \"sqrt|sin|cos|tan|arcsin|arccos|arctan|arctan2|sinc|sincpi|\" +\r\n        \"exp|ln|lnBeta|lnGamma|log10|log2|\" +\r\n        \"sinh|cosh|tanh|arcsinh|arccosh|arctanh|\" +\r\n        \"sigmoid|invSigmoid|erf|erfc|\" +\r\n        \"random(?:Uniform|Integer|Gauss|Poisson|Binomial)|\" +\r\n        \"gaussP|gaussQ|invGaussQ|incompleteGammaP|incompleteBeta|\" +\r\n        \"chiSquareP|chiSquareQ|invChiSquareQ|studentP|studentQ|invStudentQ|\" +\r\n        \"fisherP|fisherQ|invFisherQ|\" +\r\n        \"binomialP|binomialQ|invBinomialP|invBinomialQ|\" +\r\n        \"hertzToBark|barkToHerz|\" +\r\n        \"hertzToMel|melToHertz|\" +\r\n        \"hertzToSemitones|semitonesToHerz|\" +\r\n        \"erb|hertzToErb|erbToHertz|\" +\r\n        \"phonToDifferenceLimens|differenceLimensToPhon|\" +\r\n        \"soundPressureToPhon|\" +\r\n        \"beta|beta2|besselI|besselK|\" +\r\n        \"numberOfColumns|numberOfRows|\" +\r\n//      String functions\r\n        \"selected|selected\\\\$|numberOfSelected|variableExists|\"+\r\n        \"index|rindex|startsWith|endsWith|\"+\r\n        \"index_regex|rindex_regex|replace_regex\\\\$|\"+\r\n        \"length|extractWord\\\\$|extractLine\\\\$|extractNumber|\" +\r\n        \"left\\\\$|right\\\\$|mid\\\\$|replace\\\\$|\" +\r\n        \"date\\\\$|fixed\\\\$|percent\\\\$|\" +\r\n//      Array functions\r\n        \"zero#|linear#|randomUniform#|randomInteger#|randomGauss#|\" +\r\n//      Pause functions\r\n        \"beginPause|endPause|\" +\r\n//      Demo functions\r\n        \"demoShow|demoWindowTitle|demoInput|demoWaitForInput|\" +\r\n        \"demoClicked|demoClickedIn|demoX|demoY|\" +\r\n        \"demoKeyPressed|demoKey\\\\$|\" +\r\n        \"demoExtraControlKeyPressed|demoShiftKeyPressed|\"+\r\n        \"demoCommandKeyPressed|demoOptionKeyPressed|\" +\r\n//      File functions\r\n        \"environment\\\\$|chooseReadFile\\\\$|\" +\r\n        \"chooseDirectory\\\\$|createDirectory|fileReadable|deleteFile|\" +\r\n        \"selectObject|removeObject|plusObject|minusObject|\" +\r\n        \"runScript|exitScript|\" +\r\n//      sendpraat functions\r\n        \"beginSendPraat|endSendPraat|\" +\r\n//      Other\r\n        \"objectsAreIdentical\"\r\n    );\r\n\r\n    var objectTypes = (\r\n        \"Activation|AffineTransform|AmplitudeTier|Art|Artword|Autosegment|\"  +\r\n        \"BarkFilter|CCA|Categories|Cepstrum|Cepstrumc|ChebyshevSeries|\"      +\r\n        \"ClassificationTable|Cochleagram|Collection|Configuration|\"          +\r\n        \"Confusion|ContingencyTable|Corpus|Correlation|Covariance|\"          +\r\n        \"CrossCorrelationTable|CrossCorrelationTables|DTW|Diagonalizer|\"     +\r\n        \"Discriminant|Dissimilarity|Distance|Distributions|DurationTier|\"    +\r\n        \"EEG|ERP|ERPTier|Eigen|Excitation|Excitations|ExperimentMFC|FFNet|\"  +\r\n        \"FeatureWeights|Formant|FormantFilter|FormantGrid|FormantPoint|\"     +\r\n        \"FormantTier|GaussianMixture|HMM|HMM_Observation|\"                   +\r\n        \"HMM_ObservationSequence|HMM_State|HMM_StateSequence|Harmonicity|\"   +\r\n        \"ISpline|Index|Intensity|IntensityTier|IntervalTier|KNN|KlattGrid|\"  +\r\n        \"KlattTable|LFCC|LPC|Label|LegendreSeries|LinearRegression|\"         +\r\n        \"LogisticRegression|LongSound|Ltas|MFCC|MSpline|ManPages|\"           +\r\n        \"Manipulation|Matrix|MelFilter|MixingMatrix|Movie|Network|\"          +\r\n        \"OTGrammar|OTHistory|OTMulti|PCA|PairDistribution|ParamCurve|\"       +\r\n        \"Pattern|Permutation|Pitch|PitchTier|PointProcess|Polygon|\"          +\r\n        \"Polynomial|Procrustes|RealPoint|RealTier|ResultsMFC|Roots|SPINET|\"  +\r\n        \"SSCP|SVD|Salience|ScalarProduct|Similarity|SimpleString|\"           +\r\n        \"SortedSetOfString|Sound|Speaker|Spectrogram|Spectrum|SpectrumTier|\" +\r\n        \"SpeechSynthesizer|SpellingChecker|Strings|StringsIndex|Table|\"      +\r\n        \"TableOfReal|TextGrid|TextInterval|TextPoint|TextTier|Tier|\"         +\r\n        \"Transition|VocalTract|Weight|WordList\"\r\n    );\r\n\r\n    // regexp must not have capturing parentheses. Use (?:) instead.\r\n    // regexps are ordered -> the first match is used\r\n\r\n    this.$rules = {\r\n        \"start\" : [\r\n            {\r\n            // Interpolated strings\r\n                token : \"string.interpolated\",\r\n                regex : /'((?:\\.?[a-z][a-zA-Z0-9_.]*)(?:\\$|#|:[0-9]+)?)'/\r\n            }, {\r\n            // stopwatch\r\n                token : [\"text\", \"text\", \"keyword.operator\", \"text\", \"keyword\"],\r\n                regex : /(^\\s*)(?:(\\.?[a-z][a-zA-Z0-9_.]*\\$?\\s+)(=)(\\s+))?(stopwatch)/\r\n            }, {\r\n            // Directives which introduce unquoted strings\r\n                token : [\"text\", \"keyword\", \"text\", \"string\"],\r\n                regex : /(^\\s*)(print(?:line|tab)?|echo|exit|pause|send(?:praat|socket)|include|execute|system(?:_nocheck)?)(\\s+)(.*)/\r\n            }, {\r\n            // Directives with no arguments\r\n                token : [\"text\", \"keyword\"],\r\n                regex : \"(^\\\\s*)(\" + directives + \")$\"\r\n            }, {\r\n            // Operators\r\n                token : [\"text\", \"keyword.operator\", \"text\"],\r\n                regex : /(\\s+)((?:\\+|-|\\/|\\*|<|>)=?|==?|!=|%|\\^|\\||and|or|not)(\\s+)/\r\n            }, {\r\n            // Commands\r\n                token : [\"text\", \"text\", \"keyword.operator\", \"text\", \"keyword\", \"text\", \"keyword\"],\r\n                regex : /(^\\s*)(?:(\\.?[a-z][a-zA-Z0-9_.]*\\$?\\s+)(=)(\\s+))?(?:((?:no)?warn|(?:unix_)?nocheck|noprogress)(\\s+))?((?:[A-Z][^.:\"]+)(?:$|(?:\\.{3}|:)))/\r\n            }, {\r\n            // Editor mode\r\n                token : [\"text\", \"keyword\", \"text\", \"keyword\"],\r\n                regex : /(^\\s*)((?:no(?:warn|check))?)(\\s*)(\\b(?:editor(?::?)|endeditor)\\b)/\r\n            }, {\r\n            // Demo commands\r\n                token : [\"text\", \"keyword\", \"text\", \"keyword\"],\r\n                regex : /(^\\s*)(?:(demo)?(\\s+))((?:[A-Z][^.:\"]+)(?:$|(?:\\.{3}|:)))/\r\n            }, {\r\n            // Font-sizing commands\r\n                token : [\"text\", \"keyword\", \"text\", \"keyword\"],\r\n                regex : /^(\\s*)(?:(demo)(\\s+))?(10|12|14|16|24)$/\r\n            }, {\r\n            // do-style command calls\r\n                token : [\"text\", \"support.function\", \"text\"],\r\n                regex : /(\\s*)(do\\$?)(\\s*:\\s*|\\s*\\(\\s*)/\r\n            }, {\r\n            // Object types\r\n                token : \"entity.name.type\",\r\n                regex : \"(\" + objectTypes + \")\"\r\n            }, {\r\n            // Predefined variables\r\n                token : \"variable.language\",\r\n                regex : \"(\" + predefinedVariables + \")\"\r\n            }, {\r\n            // Functions\r\n                token : [\"support.function\", \"text\"],\r\n                regex : \"((?:\" + functions + \")\\\\$?)(\\\\s*(?::|\\\\())\"\r\n            }, {\r\n            // For-loop declarations\r\n                token : \"keyword\",\r\n                regex : /(\\bfor\\b)/,\r\n                next : \"for\"\r\n            }, {\r\n            // Generic keywords\r\n                token : \"keyword\",\r\n                regex : \"(\\\\b(?:\" + keywords + \")\\\\b)\"\r\n            }, {\r\n            // Generic strings\r\n                token : \"string\",\r\n                regex : /\"[^\"]*\"/\r\n            }, {\r\n            // Multiline quoted strings\r\n                token : \"string\",\r\n                regex : /\"[^\"]*$/,\r\n                next : \"brokenstring\"\r\n            }, {\r\n            // Form declarations\r\n                token : [\"text\", \"keyword\", \"text\", \"entity.name.section\"],\r\n                regex : /(^\\s*)(\\bform\\b)(\\s+)(.*)/,\r\n                next : \"form\"\r\n            }, {\r\n            // Numeric constants\r\n                token : \"constant.numeric\",\r\n                regex : /\\b[+-]?\\d+(?:(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)?\\b/\r\n            }, {\r\n            // Procedure declarations\r\n                token : [\"keyword\", \"text\", \"entity.name.function\"],\r\n                regex : /(procedure)(\\s+)([^:\\s]+)/\r\n            }, {\r\n            // New-style procedure calls\r\n                token : [\"entity.name.function\", \"text\"],\r\n                regex : /(@\\S+)(:|\\s*\\()/\r\n            }, {\r\n            // Old-style procedure calls\r\n                token : [\"text\", \"keyword\", \"text\", \"entity.name.function\"],\r\n                regex : /(^\\s*)(call)(\\s+)(\\S+)/\r\n            }, {\r\n            // Comments\r\n                token : \"comment\",\r\n                regex : /(^\\s*#|;).*$/\r\n            }, {\r\n                token : \"text\",\r\n                regex : /\\s+/\r\n            }\r\n        ],\r\n        \"form\" : [\r\n            {\r\n                token : [\"keyword\", \"text\", \"constant.numeric\"],\r\n                regex : /((?:optionmenu|choice)\\s+)(\\S+:\\s+)([0-9]+)/\r\n            }, {\r\n                token : [\"keyword\", \"constant.numeric\"],\r\n                regex : /((?:option|button)\\s+)([+-]?\\d+(?:(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)?\\b)/\r\n            }, {\r\n                token : [\"keyword\", \"string\"],\r\n                regex : /((?:option|button)\\s+)(.*)/\r\n            }, {\r\n                token : [\"keyword\", \"text\", \"string\"],\r\n                regex : /((?:sentence|text)\\s+)(\\S+\\s*)(.*)/\r\n            }, {\r\n                token : [\"keyword\", \"text\", \"string\", \"invalid.illegal\"],\r\n                regex : /(word\\s+)(\\S+\\s*)(\\S+)?(\\s.*)?/\r\n            }, {\r\n                token : [\"keyword\", \"text\", \"constant.language\"],\r\n                regex : /(boolean\\s+)(\\S+\\s*)(0|1|\"?(?:yes|no)\"?)/\r\n            }, {\r\n                token : [\"keyword\", \"text\", \"constant.numeric\"],\r\n                regex : /((?:real|natural|positive|integer)\\s+)(\\S+\\s*)([+-]?\\d+(?:(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)?\\b)/\r\n            }, {\r\n                token : [\"keyword\", \"string\"],\r\n                regex : /(comment\\s+)(.*)/\r\n            }, {\r\n                token : \"keyword\",\r\n                regex : 'endform',\r\n                next : \"start\"\r\n            }\r\n        ],\r\n        \"for\" : [\r\n            {\r\n                token : [\"keyword\", \"text\", \"constant.numeric\", \"text\"],\r\n                regex : /(from|to)(\\s+)([+-]?\\d+(?:(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)?)(\\s*)/\r\n            }, {\r\n                token : [\"keyword\", \"text\"],\r\n                regex : /(from|to)(\\s+\\S+\\s*)/\r\n            }, {\r\n                token : \"text\",\r\n                regex : /$/,\r\n                next : \"start\"\r\n            }\r\n        ],\r\n        \"brokenstring\" : [\r\n            {\r\n                token : [\"text\", \"string\"],\r\n                regex : /(\\s*\\.{3})([^\"]*)/\r\n            }, {\r\n                token : \"string\",\r\n                regex : /\"/,\r\n                next : \"start\"\r\n            }\r\n        ]\r\n    };\r\n};\r\n\r\noop.inherits(PraatHighlightRules, TextHighlightRules);\r\n\r\nexports.PraatHighlightRules = PraatHighlightRules;\r\n});\r\n"]}