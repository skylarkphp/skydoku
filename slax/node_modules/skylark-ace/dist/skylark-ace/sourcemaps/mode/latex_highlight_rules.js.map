{"version":3,"sources":["mode/latex_highlight_rules.js"],"names":["define","require","exports","module","oop","TextHighlightRules","LatexHighlightRules","this","$rules","start","token","regex","next","equation","defaultToken","verbatim","lstlisting","normalizeRules","inherits"],"mappings":";;;;;;;AAAAA,OAAO,SAASC,EAASC,EAASC,GAClC,aAEA,IAAIC,EAAMH,EAAQ,cACdI,EAAqBJ,EAAQ,0BAA0BI,mBAEvDC,EAAsB,WAEtBC,KAAKC,QACDC,QAGIC,MAAQ,UACRC,MAAQ,SAGRD,OAAS,UAAW,SAAU,qBAAsB,SAAU,SAAU,eAAgB,UACxFC,MAAQ,kFAGRD,OAAS,UAAU,SAAU,qBAAsB,UACnDC,MAAQ,0DAGRD,OAAS,eAAgB,SAAU,qBAAsB,UACzDC,MAAQ,8BACRC,KAAO,aAEPF,OAAS,eAAgB,SAAU,qBAAsB,UACzDC,MAAQ,gCACRC,KAAO,eAGPF,OAAS,eAAgB,SAAU,qBAAsB,UACzDC,MAAQ,uCAERD,MAAQ,eACRC,MAAQ,cACRC,OACIF,OAAS,mBAAoB,SAAU,oBACvCC,MAAQ,mBACRC,KAAO,YAIXF,MAAQ,eACRC,MAAQ,kBAGRD,MAAQ,SACRC,MAAQ,UAGRD,MAAQ,SACRC,MAAQ,YAGRD,MAAQ,4BACRC,MAAQ,mBAGRD,MAAQ,SACRC,MAAQ,WACRC,KAAQ,aAEZC,WACIH,MAAQ,UACRC,MAAQ,SAERD,MAAQ,SACRC,MAAQ,WACRC,KAAQ,UAERF,MAAQ,4BACRC,MAAQ,gCAERD,MAAQ,QACRC,MAAQ,SACRC,KAAO,UAEPE,aAAe,WAEnBC,WACIL,OAAS,eAAgB,SAAU,qBAAsB,UACzDC,MAAQ,4BACRC,KAAO,UAEPE,aAAe,SAEnBE,aACIN,OAAS,eAAgB,SAAU,qBAAsB,UACzDC,MAAQ,8BACRC,KAAO,UAEPE,aAAe,UAIvBP,KAAKU,kBAETb,EAAIc,SAASZ,EAAqBD,GAElCH,EAAQI,oBAAsBA","file":"../../mode/latex_highlight_rules.js","sourcesContent":["define(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\r\n\r\nvar LatexHighlightRules = function() {  \r\n\r\n    this.$rules = {\r\n        \"start\" : [{\r\n            // A comment. Tex comments start with % and go to \r\n            // the end of the line\r\n            token : \"comment\",\r\n            regex : \"%.*$\"\r\n        }, {\r\n            // Documentclass and usepackage\r\n            token : [\"keyword\", \"lparen\", \"variable.parameter\", \"rparen\", \"lparen\", \"storage.type\", \"rparen\"],\r\n            regex : \"(\\\\\\\\(?:documentclass|usepackage|input))(?:(\\\\[)([^\\\\]]*)(\\\\]))?({)([^}]*)(})\"\r\n        }, {\r\n            // A label\r\n            token : [\"keyword\",\"lparen\", \"variable.parameter\", \"rparen\"],\r\n            regex : \"(\\\\\\\\(?:label|v?ref|cite(?:[^{]*)))(?:({)([^}]*)(}))?\"\r\n        }, {\r\n            // A Verbatim block\r\n            token : [\"storage.type\", \"lparen\", \"variable.parameter\", \"rparen\"],\r\n            regex : \"(\\\\\\\\begin)({)(verbatim)(})\",\r\n            next : \"verbatim\"\r\n        },  {\r\n            token : [\"storage.type\", \"lparen\", \"variable.parameter\", \"rparen\"],\r\n            regex : \"(\\\\\\\\begin)({)(lstlisting)(})\",\r\n            next : \"lstlisting\"\r\n        },  {\r\n            // A block\r\n            token : [\"storage.type\", \"lparen\", \"variable.parameter\", \"rparen\"],\r\n            regex : \"(\\\\\\\\(?:begin|end))({)([\\\\w*]*)(})\"\r\n        }, {\r\n            token : \"storage.type\",\r\n            regex : /\\\\verb\\b\\*?/,\r\n            next : [{\r\n                token : [\"keyword.operator\", \"string\", \"keyword.operator\"],\r\n                regex : \"(.)(.*?)(\\\\1|$)|\",\r\n                next : \"start\"\r\n            }]\r\n        }, {\r\n            // A tex command e.g. \\foo\r\n            token : \"storage.type\",\r\n            regex : \"\\\\\\\\[a-zA-Z]+\"\r\n        }, {\r\n            // Curly and square braces\r\n            token : \"lparen\",\r\n            regex : \"[[({]\"\r\n        }, {\r\n            // Curly and square braces\r\n            token : \"rparen\",\r\n            regex : \"[\\\\])}]\"\r\n        }, {\r\n            // Escaped character (including new line)\r\n            token : \"constant.character.escape\",\r\n            regex : \"\\\\\\\\[^a-zA-Z]?\"\r\n        }, {\r\n            // An equation\r\n            token : \"string\",\r\n            regex : \"\\\\${1,2}\",\r\n            next  : \"equation\"\r\n        }],\r\n        \"equation\" : [{\r\n            token : \"comment\",\r\n            regex : \"%.*$\"\r\n        }, {\r\n            token : \"string\",\r\n            regex : \"\\\\${1,2}\",\r\n            next  : \"start\"\r\n        }, {\r\n            token : \"constant.character.escape\",\r\n            regex : \"\\\\\\\\(?:[^a-zA-Z]|[a-zA-Z]+)\"\r\n        }, {\r\n            token : \"error\", \r\n            regex : \"^\\\\s*$\", \r\n            next : \"start\" \r\n        }, {\r\n            defaultToken : \"string\"\r\n        }],\r\n        \"verbatim\": [{\r\n            token : [\"storage.type\", \"lparen\", \"variable.parameter\", \"rparen\"],\r\n            regex : \"(\\\\\\\\end)({)(verbatim)(})\",\r\n            next : \"start\"\r\n        }, {\r\n            defaultToken : \"text\"\r\n        }],\r\n        \"lstlisting\": [{\r\n            token : [\"storage.type\", \"lparen\", \"variable.parameter\", \"rparen\"],\r\n            regex : \"(\\\\\\\\end)({)(lstlisting)(})\",\r\n            next : \"start\"\r\n        }, {\r\n            defaultToken : \"text\"\r\n        }]\r\n    };\r\n    \r\n    this.normalizeRules();\r\n};\r\noop.inherits(LatexHighlightRules, TextHighlightRules);\r\n\r\nexports.LatexHighlightRules = LatexHighlightRules;\r\n\r\n});\r\n"]}