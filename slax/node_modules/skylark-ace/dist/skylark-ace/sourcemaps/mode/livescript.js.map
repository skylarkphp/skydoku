{"version":3,"sources":["mode/livescript.js"],"names":["define","require","exports","module","identifier","LiveScriptMode","keywordend","stringfill","Mode","superclass","indenter","prototype","sub","sup","fun","constructor","extended","extend$","obj","src","own","hasOwnProperty","key","call","import$","displayName","that","this","$tokenizer","Tokenizer","Rules","$outdent","MatchingBraceOutdent","$id","$behaviour","RegExp","getNextLineIndent","state","line","tab","indent","tokens","$getIndent","getLineTokens","length","type","test","lineCommentStart","blockComment","start","end","checkOutdent","input","ref$","autoOutdent","doc","row","defaultToken","token","regex","next","heregex","comment","qdoc","qqdoc","qstring","qqstring","js","words"],"mappings":"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","file":"../../mode/livescript.js","sourcesContent":["define(function(require, exports, module){\r\n  var identifier, LiveScriptMode, keywordend, stringfill;\r\n  identifier = '(?![\\\\d\\\\s])[$\\\\w\\\\xAA-\\\\uFFDC](?:(?!\\\\s)[$\\\\w\\\\xAA-\\\\uFFDC]|-[A-Za-z])*';\r\n  exports.Mode = LiveScriptMode = (function(superclass){\r\n    var indenter, prototype = extend$((import$(LiveScriptMode, superclass).displayName = 'LiveScriptMode', LiveScriptMode), superclass).prototype, constructor = LiveScriptMode;\r\n    function LiveScriptMode(){\r\n      var that;\r\n      this.$tokenizer = new (require('../tokenizer')).Tokenizer(LiveScriptMode.Rules);\r\n      if (that = require('../mode/matching_brace_outdent')) {\r\n        this.$outdent = new that.MatchingBraceOutdent;\r\n      }\r\n      this.$id = \"ace/mode/livescript\";\r\n      this.$behaviour = new (require(\"./behaviour/cstyle\").CstyleBehaviour)();\r\n    }\r\n    indenter = RegExp('(?:[({[=:]|[-~]>|\\\\b(?:e(?:lse|xport)|d(?:o|efault)|t(?:ry|hen)|finally|import(?:\\\\s*all)?|const|var|let|new|catch(?:\\\\s*' + identifier + ')?))\\\\s*$');\r\n    prototype.getNextLineIndent = function(state, line, tab){\r\n      var indent, tokens;\r\n      indent = this.$getIndent(line);\r\n      tokens = this.$tokenizer.getLineTokens(line, state).tokens;\r\n      if (!(tokens.length && tokens[tokens.length - 1].type === 'comment')) {\r\n        if (state === 'start' && indenter.test(line)) {\r\n          indent += tab;\r\n        }\r\n      }\r\n      return indent;\r\n    };\r\n    prototype.lineCommentStart = \"#\";\r\n    prototype.blockComment = {start: \"###\", end: \"###\"};\r\n    prototype.checkOutdent = function(state, line, input){\r\n      var ref$;\r\n      return (ref$ = this.$outdent) != null ? ref$.checkOutdent(line, input) : void 8;\r\n    };\r\n    prototype.autoOutdent = function(state, doc, row){\r\n      var ref$;\r\n      return (ref$ = this.$outdent) != null ? ref$.autoOutdent(doc, row) : void 8;\r\n    };\r\n    return LiveScriptMode;\r\n  }(require('../mode/text').Mode));\r\n  keywordend = '(?![$\\\\w]|-[A-Za-z]|\\\\s*:(?![:=]))';\r\n  stringfill = {\r\n    defaultToken: 'string'\r\n  };\r\n  LiveScriptMode.Rules = {\r\n    start: [\r\n      {\r\n        token: 'keyword',\r\n        regex: '(?:t(?:h(?:is|row|en)|ry|ypeof!?)|c(?:on(?:tinue|st)|a(?:se|tch)|lass)|i(?:n(?:stanceof)?|mp(?:ort(?:\\\\s+all)?|lements)|[fs])|d(?:e(?:fault|lete|bugger)|o)|f(?:or(?:\\\\s+own)?|inally|unction)|s(?:uper|witch)|e(?:lse|x(?:tends|port)|val)|a(?:nd|rguments)|n(?:ew|ot)|un(?:less|til)|w(?:hile|ith)|o[fr]|return|break|let|var|loop)' + keywordend\r\n      }, {\r\n        token: 'constant.language',\r\n        regex: '(?:true|false|yes|no|on|off|null|void|undefined)' + keywordend\r\n      }, {\r\n        token: 'invalid.illegal',\r\n        regex: '(?:p(?:ackage|r(?:ivate|otected)|ublic)|i(?:mplements|nterface)|enum|static|yield)' + keywordend\r\n      }, {\r\n        token: 'language.support.class',\r\n        regex: '(?:R(?:e(?:gExp|ferenceError)|angeError)|S(?:tring|yntaxError)|E(?:rror|valError)|Array|Boolean|Date|Function|Number|Object|TypeError|URIError)' + keywordend\r\n      }, {\r\n        token: 'language.support.function',\r\n        regex: '(?:is(?:NaN|Finite)|parse(?:Int|Float)|Math|JSON|(?:en|de)codeURI(?:Component)?)' + keywordend\r\n      }, {\r\n        token: 'variable.language',\r\n        regex: '(?:t(?:hat|il|o)|f(?:rom|allthrough)|it|by|e)' + keywordend\r\n      }, {\r\n        token: 'identifier',\r\n        regex: identifier + '\\\\s*:(?![:=])'\r\n      }, {\r\n        token: 'variable',\r\n        regex: identifier\r\n      }, {\r\n        token: 'keyword.operator',\r\n        regex: '(?:\\\\.{3}|\\\\s+\\\\?)'\r\n      }, {\r\n        token: 'keyword.variable',\r\n        regex: '(?:@+|::|\\\\.\\\\.)',\r\n        next: 'key'\r\n      }, {\r\n        token: 'keyword.operator',\r\n        regex: '\\\\.\\\\s*',\r\n        next: 'key'\r\n      }, {\r\n        token: 'string',\r\n        regex: '\\\\\\\\\\\\S[^\\\\s,;)}\\\\]]*'\r\n      }, {\r\n        token: 'string.doc',\r\n        regex: '\\'\\'\\'',\r\n        next: 'qdoc'\r\n      }, {\r\n        token: 'string.doc',\r\n        regex: '\"\"\"',\r\n        next: 'qqdoc'\r\n      }, {\r\n        token: 'string',\r\n        regex: '\\'',\r\n        next: 'qstring'\r\n      }, {\r\n        token: 'string',\r\n        regex: '\"',\r\n        next: 'qqstring'\r\n      }, {\r\n        token: 'string',\r\n        regex: '`',\r\n        next: 'js'\r\n      }, {\r\n        token: 'string',\r\n        regex: '<\\\\[',\r\n        next: 'words'\r\n      }, {\r\n        token: 'string.regex',\r\n        regex: '//',\r\n        next: 'heregex'\r\n      }, {\r\n        token: 'comment.doc',\r\n        regex: '/\\\\*',\r\n        next: 'comment'\r\n      }, {\r\n        token: 'comment',\r\n        regex: '#.*'\r\n      }, {\r\n        token: 'string.regex',\r\n        regex: '\\\\/(?:[^[\\\\/\\\\n\\\\\\\\]*(?:(?:\\\\\\\\.|\\\\[[^\\\\]\\\\n\\\\\\\\]*(?:\\\\\\\\.[^\\\\]\\\\n\\\\\\\\]*)*\\\\])[^[\\\\/\\\\n\\\\\\\\]*)*)\\\\/[gimy$]{0,4}',\r\n        next: 'key'\r\n      }, {\r\n        token: 'constant.numeric',\r\n        regex: '(?:0x[\\\\da-fA-F][\\\\da-fA-F_]*|(?:[2-9]|[12]\\\\d|3[0-6])r[\\\\da-zA-Z][\\\\da-zA-Z_]*|(?:\\\\d[\\\\d_]*(?:\\\\.\\\\d[\\\\d_]*)?|\\\\.\\\\d[\\\\d_]*)(?:e[+-]?\\\\d[\\\\d_]*)?[\\\\w$]*)'\r\n      }, {\r\n        token: 'lparen',\r\n        regex: '[({[]'\r\n      }, {\r\n        token: 'rparen',\r\n        regex: '[)}\\\\]]',\r\n        next: 'key'\r\n      }, {\r\n        token: 'keyword.operator',\r\n        regex: '[\\\\^!|&%+\\\\-]+'\r\n      }, {\r\n        token: 'text',\r\n        regex: '\\\\s+'\r\n      }\r\n    ],\r\n    heregex: [\r\n      {\r\n        token: 'string.regex',\r\n        regex: '.*?//[gimy$?]{0,4}',\r\n        next: 'start'\r\n      }, {\r\n        token: 'string.regex',\r\n        regex: '\\\\s*#{'\r\n      }, {\r\n        token: 'comment.regex',\r\n        regex: '\\\\s+(?:#.*)?'\r\n      }, {\r\n        defaultToken: 'string.regex'\r\n      }\r\n    ],\r\n    key: [\r\n      {\r\n        token: 'keyword.operator',\r\n        regex: '[.?@!]+'\r\n      }, {\r\n        token: 'identifier',\r\n        regex: identifier,\r\n        next: 'start'\r\n      }, {\r\n        token: 'text',\r\n        regex: '',\r\n        next: 'start'\r\n      }\r\n    ],\r\n    comment: [\r\n      {\r\n        token: 'comment.doc',\r\n        regex: '.*?\\\\*/',\r\n        next: 'start'\r\n      }, {\r\n        defaultToken: 'comment.doc'\r\n      }\r\n    ],\r\n    qdoc: [\r\n      {\r\n        token: 'string',\r\n        regex: \".*?'''\",\r\n        next: 'key'\r\n      }, stringfill\r\n    ],\r\n    qqdoc: [\r\n      {\r\n        token: 'string',\r\n        regex: '.*?\"\"\"',\r\n        next: 'key'\r\n      }, stringfill\r\n    ],\r\n    qstring: [\r\n      {\r\n        token: 'string',\r\n        regex: '[^\\\\\\\\\\']*(?:\\\\\\\\.[^\\\\\\\\\\']*)*\\'',\r\n        next: 'key'\r\n      }, stringfill\r\n    ],\r\n    qqstring: [\r\n      {\r\n        token: 'string',\r\n        regex: '[^\\\\\\\\\"]*(?:\\\\\\\\.[^\\\\\\\\\"]*)*\"',\r\n        next: 'key'\r\n      }, stringfill\r\n    ],\r\n    js: [\r\n      {\r\n        token: 'string',\r\n        regex: '[^\\\\\\\\`]*(?:\\\\\\\\.[^\\\\\\\\`]*)*`',\r\n        next: 'key'\r\n      }, stringfill\r\n    ],\r\n    words: [\r\n      {\r\n        token: 'string',\r\n        regex: '.*?\\\\]>',\r\n        next: 'key'\r\n      }, stringfill\r\n    ]\r\n  };\r\nfunction extend$(sub, sup){\r\n  function fun(){} fun.prototype = (sub.superclass = sup).prototype;\r\n  (sub.prototype = new fun).constructor = sub;\r\n  if (typeof sup.extended == 'function') sup.extended(sub);\r\n  return sub;\r\n}\r\nfunction import$(obj, src){\r\n  var own = {}.hasOwnProperty;\r\n  for (var key in src) if (own.call(src, key)) obj[key] = src[key];\r\n  return obj;\r\n}\r\n});"]}