{"version":3,"sources":["mode/less_highlight_rules.js"],"names":["define","require","exports","module","oop","TextHighlightRules","CssHighlightRules","LessHighlightRules","keywordList","keywords","split","properties","supportType","keywordMapper","this","createKeywordMapper","support.constant","supportConstant","keyword","support.constant.color","supportConstantColor","support.constant.fonts","supportConstantFonts","numRe","$rules","start","token","regex","next","value","indexOf","toLowerCase","first","second","caseInsensitive","comment","defaultToken","normalizeRules","inherits"],"mappings":";;;;;;;AA8BAA,OAAO,SAASC,EAASC,EAASC,GAClC,aAEA,IAAIC,EAAMH,EAAQ,cACdI,EAAqBJ,EAAQ,0BAA0BI,mBACvDC,EAAoBL,EAAQ,yBAE5BM,EAAqB,WAGrB,IAAIC,EAAc,wJAIdC,EAAWD,EAAYE,MAAM,KAE7BC,EAAaL,EAAkBM,YAAYF,MAAM,KAEjDG,EAAgBC,KAAKC,qBACrBC,mBAAoBV,EAAkBW,gBACtCC,QAAWV,EACXW,yBAA0Bb,EAAkBc,qBAC5CC,yBAA0Bf,EAAkBgB,sBAC7C,cAAc,GAKbC,EAAQ,yCAKZT,KAAKU,QACDC,QAEQC,MAAQ,UACRC,MAAQ,cAGRD,MAAQ,UACRC,MAAQ,SACRC,KAAO,YAEPF,MAAQ,SACRC,MAAQ,uCAERD,MAAQ,SACRC,MAAQ,uCAERD,OAAS,mBAAoB,WAC7BC,MAAQ,IAAMJ,EAAQ,qFAEtBG,MAAQ,mBACRC,MAAQ,iBAERD,MAAQ,mBACRC,MAAQ,iBAERD,MAAQ,mBACRC,MAAQJ,IAERG,OAAS,mBAAoB,eAAgB,SAAU,gBACvDC,MAAQ,wBAERD,OAAS,mBAAoB,gBAC7BC,MAAQ,iCAERD,MAAQ,SAASG,GACb,OAAIpB,EAASqB,QAAQD,EAAME,gBAAkB,EAClC,UAEA,YAEfJ,MAAQ,+BAERD,MAAQ,WACRC,MAAQ,kCAERD,MAAQ,SAASM,EAAOC,GACpB,OAAGtB,EAAWmB,QAAQE,EAAMD,gBAAkB,GAClC,wBAAyB,SAGzB,+BAAgC,SAGhDJ,MAAQ,yBAERD,MAAQ,UACRC,MAAQ,MAERD,MAAQb,EACRc,MAAQ,8BAERD,MAAO,oBACPC,MAAO,iBAEPD,MAAO,oBACPC,MAAO,mBAEPD,MAAO,oBACPC,MAAO,uBAEPD,MAAO,WACPC,MAAO,gBAEPD,MAAQ,mBACRC,MAAQ,+BAERD,MAAQ,eACRC,MAAQ,UAERD,MAAQ,eACRC,MAAQ,YAERD,MAAQ,OACRC,MAAQ,SAERO,iBAAiB,IAGzBC,UAEQT,MAAQ,UACRC,MAAQ,SACRC,KAAO,UAEPQ,aAAe,aAI3BtB,KAAKuB,kBAGTjC,EAAIkC,SAAS/B,EAAoBF,GAEjCH,EAAQK,mBAAqBA","file":"../../mode/less_highlight_rules.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2010, Ajax.org B.V.\r\n * All rights reserved.\r\n * \r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n * \r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\ndefine(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\r\nvar CssHighlightRules = require('./css_highlight_rules');\r\n\r\nvar LessHighlightRules = function() {\r\n\r\n\r\n    var keywordList = \"@import|@media|@font-face|@keyframes|@-webkit-keyframes|@supports|\" + \r\n        \"@charset|@plugin|@namespace|@document|@page|@viewport|@-ms-viewport|\" +\r\n        \"or|and|when|not\";\r\n\r\n    var keywords = keywordList.split('|');\r\n\r\n    var properties = CssHighlightRules.supportType.split('|');\r\n\r\n    var keywordMapper = this.createKeywordMapper({\r\n        \"support.constant\": CssHighlightRules.supportConstant,\r\n        \"keyword\": keywordList,\r\n        \"support.constant.color\": CssHighlightRules.supportConstantColor,\r\n        \"support.constant.fonts\": CssHighlightRules.supportConstantFonts\r\n    }, \"identifier\", true);   \r\n\r\n    // regexp must not have capturing parentheses. Use (?:) instead.\r\n    // regexps are ordered -> the first match is used\r\n\r\n    var numRe = \"\\\\-?(?:(?:[0-9]+)|(?:[0-9]*\\\\.[0-9]+))\";\r\n\r\n    // regexp must not have capturing parentheses. Use (?:) instead.\r\n    // regexps are ordered -> the first match is used\r\n\r\n    this.$rules = {\r\n        \"start\" : [\r\n            {\r\n                token : \"comment\",\r\n                regex : \"\\\\/\\\\/.*$\"\r\n            },\r\n            {\r\n                token : \"comment\", // multi line comment\r\n                regex : \"\\\\/\\\\*\",\r\n                next : \"comment\"\r\n            }, {\r\n                token : \"string\", // single line\r\n                regex : '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'\r\n            }, {\r\n                token : \"string\", // single line\r\n                regex : \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\r\n            }, {\r\n                token : [\"constant.numeric\", \"keyword\"],\r\n                regex : \"(\" + numRe + \")(ch|cm|deg|em|ex|fr|gd|grad|Hz|in|kHz|mm|ms|pc|pt|px|rad|rem|s|turn|vh|vm|vw|%)\"\r\n            }, {\r\n                token : \"constant.numeric\", // hex6 color\r\n                regex : \"#[a-f0-9]{6}\"\r\n            }, {\r\n                token : \"constant.numeric\", // hex3 color\r\n                regex : \"#[a-f0-9]{3}\"\r\n            }, {\r\n                token : \"constant.numeric\",\r\n                regex : numRe\r\n            }, {\r\n                token : [\"support.function\", \"paren.lparen\", \"string\", \"paren.rparen\"],\r\n                regex : \"(url)(\\\\()(.*)(\\\\))\"\r\n            }, {\r\n                token : [\"support.function\", \"paren.lparen\"],\r\n                regex : \"(:extend|[a-z0-9_\\\\-]+)(\\\\()\"\r\n            }, {\r\n                token : function(value) {\r\n                    if (keywords.indexOf(value.toLowerCase()) > -1)\r\n                        return \"keyword\";\r\n                    else\r\n                        return \"variable\";\r\n                },\r\n                regex : \"[@\\\\$][a-z0-9_\\\\-@\\\\$]*\\\\b\"\r\n            }, {\r\n                token : \"variable\",\r\n                regex : \"[@\\\\$]\\\\{[a-z0-9_\\\\-@\\\\$]*\\\\}\"\r\n            }, {\r\n                token : function(first, second) {\r\n                    if(properties.indexOf(first.toLowerCase()) > -1) {\r\n                        return [\"support.type.property\", \"text\"];\r\n                    }\r\n                    else {\r\n                        return [\"support.type.unknownProperty\", \"text\"];\r\n                    }\r\n                },\r\n                regex : \"([a-z0-9-_]+)(\\\\s*:)\"\r\n            }, {\r\n                token : \"keyword\",\r\n                regex : \"&\"   // special case - always treat as keyword\r\n            }, {\r\n                token : keywordMapper,\r\n                regex : \"\\\\-?[@a-z_][@a-z0-9_\\\\-]*\"\r\n            }, {\r\n                token: \"variable.language\",\r\n                regex: \"#[a-z0-9-_]+\"\r\n            }, {\r\n                token: \"variable.language\",\r\n                regex: \"\\\\.[a-z0-9-_]+\"\r\n            }, {\r\n                token: \"variable.language\",\r\n                regex: \":[a-z_][a-z0-9-_]*\"\r\n            }, {\r\n                token: \"constant\",\r\n                regex: \"[a-z0-9-_]+\"\r\n            }, {\r\n                token : \"keyword.operator\",\r\n                regex : \"<|>|<=|>=|=|!=|-|%|\\\\+|\\\\*\"\r\n            }, {\r\n                token : \"paren.lparen\",\r\n                regex : \"[[({]\"\r\n            }, {\r\n                token : \"paren.rparen\",\r\n                regex : \"[\\\\])}]\"\r\n            }, {\r\n                token : \"text\",\r\n                regex : \"\\\\s+\"\r\n            }, {\r\n                caseInsensitive: true\r\n            }\r\n        ],\r\n        \"comment\" : [\r\n            {\r\n                token : \"comment\", // closing comment\r\n                regex : \"\\\\*\\\\/\",\r\n                next : \"start\"\r\n            }, {\r\n                defaultToken : \"comment\"\r\n            }\r\n        ]\r\n    };\r\n    this.normalizeRules();\r\n};\r\n\r\noop.inherits(LessHighlightRules, TextHighlightRules);\r\n\r\nexports.LessHighlightRules = LessHighlightRules;\r\n\r\n});\r\n"]}