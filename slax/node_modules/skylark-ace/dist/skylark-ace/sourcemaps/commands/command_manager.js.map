{"version":3,"sources":["commands/command_manager.js"],"names":["define","require","exports","module","oop","MultiHashHandler","EventEmitter","CommandManager","platform","commands","call","this","byName","setDefaultHandler","e","command","exec","editor","args","inherits","implement","Array","isArray","i","length","$readOnly","readOnly","$checkCommandState","isAvailable","returnValue","_emit","_signal","toggleRecording","$inReplay","recording","macro","pop","removeEventListener","$addCommandToMacro","oldMacro","push","bind","on","replay","forEach","x","trimMacro","m","map","name","prototype"],"mappings":";;;;;;;AAAAA,OAAO,SAASC,QAASC,QAASC,QAClC,aAEA,IAAIC,EAAMH,QAAQ,cACdI,EAAmBJ,QAAQ,4BAA4BI,iBACvDC,EAAeL,QAAQ,wBAAwBK,aAc/CC,EAAiB,SAASC,EAAUC,GACpCJ,EAAiBK,KAAKC,KAAMF,EAAUD,GACtCG,KAAKC,OAASD,KAAKF,SACnBE,KAAKE,kBAAkB,OAAQ,SAASC,GACpC,OAAOA,EAAEC,QAAQC,KAAKF,EAAEG,OAAQH,EAAEI,aAI1Cd,EAAIe,SAASZ,EAAgBF,GAE7B,WAEID,EAAIgB,UAAUT,KAAML,GAEpBK,KAAKK,KAAO,SAASD,EAASE,EAAQC,GAClC,GAAIG,MAAMC,QAAQP,GAAU,CACxB,IAAK,IAAIQ,EAAIR,EAAQS,OAAQD,KACzB,GAAIZ,KAAKK,KAAKD,EAAQQ,GAAIN,EAAQC,GAAO,OAAO,EAEpD,OAAO,EAMX,GAHuB,iBAAZH,IACPA,EAAUJ,KAAKF,SAASM,KAEvBA,EACD,OAAO,EAEX,GAAIE,GAAUA,EAAOQ,YAAcV,EAAQW,SACvC,OAAO,EAEX,GAA+B,GAA3Bf,KAAKgB,oBAA+BZ,EAAQa,cAAgBb,EAAQa,YAAYX,GAChF,OAAO,EAEX,IAAIH,GAAKG,OAAQA,EAAQF,QAASA,EAASG,KAAMA,GAIjD,OAHAJ,EAAEe,YAAclB,KAAKmB,MAAM,OAAQhB,GACnCH,KAAKoB,QAAQ,YAAajB,IAED,IAAlBA,EAAEe,aAGblB,KAAKqB,gBAAkB,SAASf,GAC5B,IAAIN,KAAKsB,UAIT,OADAhB,GAAUA,EAAOa,MAAM,gBACnBnB,KAAKuB,WACLvB,KAAKwB,MAAMC,MACXzB,KAAK0B,oBAAoB,OAAQ1B,KAAK2B,oBAEjC3B,KAAKwB,MAAMX,SACZb,KAAKwB,MAAQxB,KAAK4B,UAEf5B,KAAKuB,WAAY,IAEvBvB,KAAK2B,qBACN3B,KAAK2B,mBAAqB,SAASxB,GAC/BH,KAAKwB,MAAMK,MAAM1B,EAAEC,QAASD,EAAEI,QAChCuB,KAAK9B,OAGXA,KAAK4B,SAAW5B,KAAKwB,MACrBxB,KAAKwB,SACLxB,KAAK+B,GAAG,OAAQ/B,KAAK2B,oBACd3B,KAAKuB,WAAY,IAG5BvB,KAAKgC,OAAS,SAAS1B,GACnB,IAAIN,KAAKsB,WAActB,KAAKwB,MAA5B,CAGA,GAAIxB,KAAKuB,UACL,OAAOvB,KAAKqB,gBAAgBf,GAEhC,IACIN,KAAKsB,WAAY,EACjBtB,KAAKwB,MAAMS,QAAQ,SAASC,GACR,iBAALA,EACPlC,KAAKK,KAAK6B,EAAG5B,GAEbN,KAAKK,KAAK6B,EAAE,GAAI5B,EAAQ4B,EAAE,KAC/BlC,MACL,QACEA,KAAKsB,WAAY,KAIzBtB,KAAKmC,UAAY,SAASC,GACtB,OAAOA,EAAEC,IAAI,SAASH,GAKlB,MAJmB,iBAARA,EAAE,KACTA,EAAE,GAAKA,EAAE,GAAGI,MACXJ,EAAE,KACHA,EAAIA,EAAE,IACHA,MAIhBnC,KAAKH,EAAe2C,WAEvBhD,QAAQK,eAAiBA","file":"../../commands/command_manager.js","sourcesContent":["define(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nvar oop = require(\"../lib/oop\");\r\nvar MultiHashHandler = require(\"../keyboard/hash_handler\").MultiHashHandler;\r\nvar EventEmitter = require(\"../lib/event_emitter\").EventEmitter;\r\n\r\n/**\r\n * @class CommandManager\r\n *\r\n **/\r\n\r\n/**\r\n * new CommandManager(platform, commands)\r\n * @param {String} platform Identifier for the platform; must be either `\"mac\"` or `\"win\"`\r\n * @param {Array} commands A list of commands\r\n *\r\n **/\r\n\r\nvar CommandManager = function(platform, commands) {\r\n    MultiHashHandler.call(this, commands, platform);\r\n    this.byName = this.commands;\r\n    this.setDefaultHandler(\"exec\", function(e) {\r\n        return e.command.exec(e.editor, e.args || {});\r\n    });\r\n};\r\n\r\noop.inherits(CommandManager, MultiHashHandler);\r\n\r\n(function() {\r\n\r\n    oop.implement(this, EventEmitter);\r\n\r\n    this.exec = function(command, editor, args) {\r\n        if (Array.isArray(command)) {\r\n            for (var i = command.length; i--; ) {\r\n                if (this.exec(command[i], editor, args)) return true;\r\n            }\r\n            return false;\r\n        }\r\n\r\n        if (typeof command === \"string\")\r\n            command = this.commands[command];\r\n\r\n        if (!command)\r\n            return false;\r\n\r\n        if (editor && editor.$readOnly && !command.readOnly)\r\n            return false;\r\n\r\n        if (this.$checkCommandState != false && command.isAvailable && !command.isAvailable(editor))\r\n            return false;\r\n\r\n        var e = {editor: editor, command: command, args: args};\r\n        e.returnValue = this._emit(\"exec\", e);\r\n        this._signal(\"afterExec\", e);\r\n\r\n        return e.returnValue === false ? false : true;\r\n    };\r\n\r\n    this.toggleRecording = function(editor) {\r\n        if (this.$inReplay)\r\n            return;\r\n\r\n        editor && editor._emit(\"changeStatus\");\r\n        if (this.recording) {\r\n            this.macro.pop();\r\n            this.removeEventListener(\"exec\", this.$addCommandToMacro);\r\n\r\n            if (!this.macro.length)\r\n                this.macro = this.oldMacro;\r\n\r\n            return this.recording = false;\r\n        }\r\n        if (!this.$addCommandToMacro) {\r\n            this.$addCommandToMacro = function(e) {\r\n                this.macro.push([e.command, e.args]);\r\n            }.bind(this);\r\n        }\r\n\r\n        this.oldMacro = this.macro;\r\n        this.macro = [];\r\n        this.on(\"exec\", this.$addCommandToMacro);\r\n        return this.recording = true;\r\n    };\r\n\r\n    this.replay = function(editor) {\r\n        if (this.$inReplay || !this.macro)\r\n            return;\r\n\r\n        if (this.recording)\r\n            return this.toggleRecording(editor);\r\n\r\n        try {\r\n            this.$inReplay = true;\r\n            this.macro.forEach(function(x) {\r\n                if (typeof x == \"string\")\r\n                    this.exec(x, editor);\r\n                else\r\n                    this.exec(x[0], editor, x[1]);\r\n            }, this);\r\n        } finally {\r\n            this.$inReplay = false;\r\n        }\r\n    };\r\n\r\n    this.trimMacro = function(m) {\r\n        return m.map(function(x){\r\n            if (typeof x[0] != \"string\")\r\n                x[0] = x[0].name;\r\n            if (!x[1])\r\n                x = x[0];\r\n            return x;\r\n        });\r\n    };\r\n\r\n}).call(CommandManager.prototype);\r\n\r\nexports.CommandManager = CommandManager;\r\n\r\n});\r\n"]}