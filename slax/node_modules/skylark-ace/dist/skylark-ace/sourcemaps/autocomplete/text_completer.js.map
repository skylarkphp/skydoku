{"version":3,"sources":["autocomplete/text_completer.js"],"names":["define","require","exports","module","Range","splitRegex","wordDistance","doc","pos","prefixPos","getTextRange","fromPoints","row","column","split","length","getWordIndex","words","getValue","wordScores","Object","create","currentWord","forEach","word","idx","distance","Math","abs","score","max","getCompletions","editor","session","prefix","callback","wordScore","keys","map","caption","value","meta"],"mappings":";;;;;;;AA8BAA,OAAO,SAASC,EAASC,EAASC,GAC9B,IAAIC,EAAQH,EAAQ,YAAYG,MAE5BC,EAAa,iDAWjB,SAASC,EAAaC,EAAKC,GACvB,IAAIC,EAVR,SAAsBF,EAAKC,GAEvB,OADiBD,EAAIG,aAAaN,EAAMO,YAAYC,IAAK,EAAGC,OAAO,GAAIL,IACrDM,MAAMT,GAAYU,OAAS,EAQ7BC,CAAaT,EAAKC,GAC9BS,EAAQV,EAAIW,WAAWJ,MAAMT,GAC7Bc,EAAaC,OAAOC,OAAO,MAE3BC,EAAcL,EAAMR,GAaxB,OAXAQ,EAAMM,QAAQ,SAASC,EAAMC,GACzB,GAAKD,GAAQA,IAASF,EAAtB,CAEA,IAAII,EAAWC,KAAKC,IAAInB,EAAYgB,GAChCI,EAAQZ,EAAMF,OAASW,EACvBP,EAAWK,GACXL,EAAWK,GAAQG,KAAKG,IAAID,EAAOV,EAAWK,IAE9CL,EAAWK,GAAQK,KAGpBV,EAGXjB,EAAQ6B,eAAiB,SAASC,EAAQC,EAASzB,EAAK0B,EAAQC,GAC5D,IAAIC,EAAY9B,EAAa2B,EAASzB,GAEtC2B,EAAS,KADMf,OAAOiB,KAAKD,GACHE,IAAI,SAASd,GACjC,OACIe,QAASf,EACTgB,MAAOhB,EACPK,MAAOO,EAAUZ,GACjBiB,KAAM","file":"../../autocomplete/text_completer.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2012, Ajax.org B.V.\r\n * All rights reserved.\r\n * \r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n * \r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\ndefine(function(require, exports, module) {\r\n    var Range = require(\"../range\").Range;\r\n    \r\n    var splitRegex = /[^a-zA-Z_0-9\\$\\-\\u00C0-\\u1FFF\\u2C00-\\uD7FF\\w]+/;\r\n\r\n    function getWordIndex(doc, pos) {\r\n        var textBefore = doc.getTextRange(Range.fromPoints({row: 0, column:0}, pos));\r\n        return textBefore.split(splitRegex).length - 1;\r\n    }\r\n\r\n    /**\r\n     * Does a distance analysis of the word `prefix` at position `pos` in `doc`.\r\n     * @return Map\r\n     */\r\n    function wordDistance(doc, pos) {\r\n        var prefixPos = getWordIndex(doc, pos);\r\n        var words = doc.getValue().split(splitRegex);\r\n        var wordScores = Object.create(null);\r\n        \r\n        var currentWord = words[prefixPos];\r\n\r\n        words.forEach(function(word, idx) {\r\n            if (!word || word === currentWord) return;\r\n\r\n            var distance = Math.abs(prefixPos - idx);\r\n            var score = words.length - distance;\r\n            if (wordScores[word]) {\r\n                wordScores[word] = Math.max(score, wordScores[word]);\r\n            } else {\r\n                wordScores[word] = score;\r\n            }\r\n        });\r\n        return wordScores;\r\n    }\r\n\r\n    exports.getCompletions = function(editor, session, pos, prefix, callback) {\r\n        var wordScore = wordDistance(session, pos);\r\n        var wordList = Object.keys(wordScore);\r\n        callback(null, wordList.map(function(word) {\r\n            return {\r\n                caption: word,\r\n                value: word,\r\n                score: wordScore[word],\r\n                meta: \"local\"\r\n            };\r\n        }));\r\n    };\r\n});\r\n"]}