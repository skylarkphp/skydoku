{"version":3,"sources":["apply_delta.js"],"names":["define","require","exports","module","applyDelta","docLines","delta","doNotValidate","row","start","startColumn","column","line","action","lines","length","substring","args","concat","splice","apply","endColumn","end","endRow"],"mappings":";;;;;;;AA8BAA,OAAO,SAASC,QAASC,QAASC,QAClC,aA0CAD,QAAQE,WAAa,SAASC,EAAUC,EAAOC,GAK3C,IAAIC,EAAMF,EAAMG,MAAMD,IAClBE,EAAcJ,EAAMG,MAAME,OAC1BC,EAAOP,EAASG,IAAQ,GAC5B,OAAQF,EAAMO,QACV,IAAK,SAED,GAAqB,IADTP,EAAMQ,MACRC,OACNV,EAASG,GAAOI,EAAKI,UAAU,EAAGN,GAAeJ,EAAMQ,MAAM,GAAKF,EAAKI,UAAUN,OAC9E,CACH,IAAIO,GAAQT,EAAK,GAAGU,OAAOZ,EAAMQ,OACjCT,EAASc,OAAOC,MAAMf,EAAUY,GAChCZ,EAASG,GAAOI,EAAKI,UAAU,EAAGN,GAAeL,EAASG,GAC1DH,EAASG,EAAMF,EAAMQ,MAAMC,OAAS,IAAMH,EAAKI,UAAUN,GAE7D,MACJ,IAAK,SACD,IAAIW,EAAYf,EAAMgB,IAAIX,OACtBY,EAASjB,EAAMgB,IAAId,IACnBA,IAAQe,EACRlB,EAASG,GAAOI,EAAKI,UAAU,EAAGN,GAAeE,EAAKI,UAAUK,GAEhEhB,EAASc,OACLX,EAAKe,EAASf,EAAM,EACpBI,EAAKI,UAAU,EAAGN,GAAeL,EAASkB,GAAQP,UAAUK","file":"../apply_delta.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2010, Ajax.org B.V.\r\n * All rights reserved.\r\n * \r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n * \r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\ndefine(function(require, exports, module) {\r\n\"use strict\";\r\n\r\nfunction throwDeltaError(delta, errorText){\r\n    console.log(\"Invalid Delta:\", delta);\r\n    throw \"Invalid Delta: \" + errorText;\r\n}\r\n\r\nfunction positionInDocument(docLines, position) {\r\n    return position.row    >= 0 && position.row    <  docLines.length &&\r\n           position.column >= 0 && position.column <= docLines[position.row].length;\r\n}\r\n\r\nfunction validateDelta(docLines, delta) {\r\n    // Validate action string.\r\n    if (delta.action != \"insert\" && delta.action != \"remove\")\r\n        throwDeltaError(delta, \"delta.action must be 'insert' or 'remove'\");\r\n    \r\n    // Validate lines type.\r\n    if (!(delta.lines instanceof Array))\r\n        throwDeltaError(delta, \"delta.lines must be an Array\");\r\n\r\n    // Validate range type.\r\n    if (!delta.start || !delta.end)\r\n       throwDeltaError(delta, \"delta.start/end must be an present\");\r\n\r\n    // Validate that the start point is contained in the document.\r\n    var start = delta.start;\r\n    if (!positionInDocument(docLines, delta.start))\r\n        throwDeltaError(delta, \"delta.start must be contained in document\");\r\n    \r\n    // Validate that the end point is contained in the document (remove deltas only).\r\n    var end = delta.end;\r\n    if (delta.action == \"remove\" && !positionInDocument(docLines, end))\r\n        throwDeltaError(delta, \"delta.end must contained in document for 'remove' actions\");\r\n    \r\n    // Validate that the .range size matches the .lines size.\r\n    var numRangeRows = end.row - start.row;\r\n    var numRangeLastLineChars = (end.column - (numRangeRows == 0 ? start.column : 0));\r\n    if (numRangeRows != delta.lines.length - 1 || delta.lines[numRangeRows].length != numRangeLastLineChars)\r\n        throwDeltaError(delta, \"delta.range must match delta lines\");\r\n}\r\n\r\nexports.applyDelta = function(docLines, delta, doNotValidate) {\r\n    // disabled validation since it breaks autocompletion popup\r\n    // if (!doNotValidate)\r\n    //    validateDelta(docLines, delta);\r\n    \r\n    var row = delta.start.row;\r\n    var startColumn = delta.start.column;\r\n    var line = docLines[row] || \"\";\r\n    switch (delta.action) {\r\n        case \"insert\":\r\n            var lines = delta.lines;\r\n            if (lines.length === 1) {\r\n                docLines[row] = line.substring(0, startColumn) + delta.lines[0] + line.substring(startColumn);\r\n            } else {\r\n                var args = [row, 1].concat(delta.lines);\r\n                docLines.splice.apply(docLines, args);\r\n                docLines[row] = line.substring(0, startColumn) + docLines[row];\r\n                docLines[row + delta.lines.length - 1] += line.substring(startColumn);\r\n            }\r\n            break;\r\n        case \"remove\":\r\n            var endColumn = delta.end.column;\r\n            var endRow = delta.end.row;\r\n            if (row === endRow) {\r\n                docLines[row] = line.substring(0, startColumn) + line.substring(endColumn);\r\n            } else {\r\n                docLines.splice(\r\n                    row, endRow - row + 1,\r\n                    line.substring(0, startColumn) + docLines[endRow].substring(endColumn)\r\n                );\r\n            }\r\n            break;\r\n    }\r\n};\r\n});\r\n"]}