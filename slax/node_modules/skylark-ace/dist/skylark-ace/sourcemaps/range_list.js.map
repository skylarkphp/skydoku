{"version":3,"sources":["range_list.js"],"names":["define","require","exports","module","comparePoints","Range","RangeList","this","ranges","pointIndex","pos","excludeEdges","startIndex","list","i","length","range","cmpEnd","end","cmpStart","start","add","isEmpty","endIndex","splice","addList","removed","push","apply","substractPoint","merge","next","sort","a","b","cmp","row","column","contains","containsPoint","rangeAtPoint","clipRows","startRow","endRow","clipped","removeAll","attach","session","detach","onChange","$onChange","bind","on","removeListener","delta","n","r","action","lineDif","colDiff","$insertRight","call","prototype"],"mappings":";;;;;;;AA8BAA,OAAO,SAASC,EAASC,EAASC,GAClC,aACA,IACIC,EADQH,EAAQ,WAAWI,MACLD,cAEtBE,EAAY,WACZC,KAAKC,YAGT,WACID,KAAKH,cAAgBA,EAErBG,KAAKE,WAAa,SAASC,EAAKC,EAAcC,GAG1C,IAFA,IAAIC,EAAON,KAAKC,OAEPM,EAAIF,GAAc,EAAGE,EAAID,EAAKE,OAAQD,IAAK,CAChD,IAAIE,EAAQH,EAAKC,GACbG,EAASb,EAAcM,EAAKM,EAAME,KACtC,KAAID,EAAS,GAAb,CAEA,IAAIE,EAAWf,EAAcM,EAAKM,EAAMI,OACxC,OAAe,IAAXH,EACON,GAA6B,IAAbQ,GAAkBL,EAAE,EAAIA,EAC/CK,EAAW,GAAmB,IAAbA,IAAmBR,EAC7BG,GAEHA,EAAE,GAEd,OAAQA,EAAI,GAGhBP,KAAKc,IAAM,SAASL,GAChB,IAAIL,GAAgBK,EAAMM,UACtBV,EAAaL,KAAKE,WAAWO,EAAMI,MAAOT,GAC1CC,EAAa,IACbA,GAAcA,EAAa,GAE/B,IAAIW,EAAWhB,KAAKE,WAAWO,EAAME,IAAKP,EAAcC,GAMxD,OAJIW,EAAW,EACXA,GAAYA,EAAW,EAEvBA,IACGhB,KAAKC,OAAOgB,OAAOZ,EAAYW,EAAWX,EAAYI,IAGjET,KAAKkB,QAAU,SAASZ,GAEpB,IADA,IAAIa,KACKZ,EAAID,EAAKE,OAAQD,KACtBY,EAAQC,KAAKC,MAAMF,EAASnB,KAAKc,IAAIR,EAAKC,KAE9C,OAAOY,GAGXnB,KAAKsB,eAAiB,SAASnB,GAC3B,IAAII,EAAIP,KAAKE,WAAWC,GAExB,GAAII,GAAK,EACL,OAAOP,KAAKC,OAAOgB,OAAOV,EAAG,IAIrCP,KAAKuB,MAAQ,WAST,IARA,IAOoBd,EAPhBU,KACAb,EAAON,KAAKC,OAMZuB,GAJJlB,EAAOA,EAAKmB,KAAK,SAASC,EAAGC,GACzB,OAAO9B,EAAc6B,EAAEb,MAAOc,EAAEd,UAGpB,GACPN,EAAI,EAAGA,EAAID,EAAKE,OAAQD,IAAK,CAClCE,EAAQe,EACRA,EAAOlB,EAAKC,GACZ,IAAIqB,EAAM/B,EAAcY,EAAME,IAAKa,EAAKX,OACpCe,EAAM,IAGC,GAAPA,GAAanB,EAAMM,WAAcS,EAAKT,aAGtClB,EAAcY,EAAME,IAAKa,EAAKb,KAAO,IACrCF,EAAME,IAAIkB,IAAML,EAAKb,IAAIkB,IACzBpB,EAAME,IAAImB,OAASN,EAAKb,IAAImB,QAGhCxB,EAAKW,OAAOV,EAAG,GACfY,EAAQC,KAAKI,GACbA,EAAOf,EACPF,KAKJ,OAFAP,KAAKC,OAASK,EAEPa,GAGXnB,KAAK+B,SAAW,SAASF,EAAKC,GAC1B,OAAO9B,KAAKE,YAAY2B,IAAKA,EAAKC,OAAQA,KAAY,GAG1D9B,KAAKgC,cAAgB,SAAS7B,GAC1B,OAAOH,KAAKE,WAAWC,IAAQ,GAGnCH,KAAKiC,aAAe,SAAS9B,GACzB,IAAII,EAAIP,KAAKE,WAAWC,GACxB,GAAII,GAAK,EACL,OAAOP,KAAKC,OAAOM,IAI3BP,KAAKkC,SAAW,SAASC,EAAUC,GAC/B,IAAI9B,EAAON,KAAKC,OAChB,GAAIK,EAAK,GAAGO,MAAMgB,IAAMO,GAAU9B,EAAKA,EAAKE,OAAS,GAAGK,MAAMgB,IAAMM,EAChE,SAEJ,IAAI9B,EAAaL,KAAKE,YAAY2B,IAAKM,EAAUL,OAAQ,IACrDzB,EAAa,IACbA,GAAcA,EAAa,GAC/B,IAAIW,EAAWhB,KAAKE,YAAY2B,IAAKO,EAAQN,OAAQ,GAAIzB,GACrDW,EAAW,IACXA,GAAYA,EAAW,GAG3B,IADA,IAAIqB,KACK9B,EAAIF,EAAYE,EAAIS,EAAUT,IACnC8B,EAAQjB,KAAKd,EAAKC,IAEtB,OAAO8B,GAGXrC,KAAKsC,UAAY,WACb,OAAOtC,KAAKC,OAAOgB,OAAO,EAAGjB,KAAKC,OAAOO,SAG7CR,KAAKuC,OAAS,SAASC,GACfxC,KAAKwC,SACLxC,KAAKyC,SAETzC,KAAKwC,QAAUA,EACfxC,KAAK0C,SAAW1C,KAAK2C,UAAUC,KAAK5C,MAEpCA,KAAKwC,QAAQK,GAAG,SAAU7C,KAAK0C,WAGnC1C,KAAKyC,OAAS,WACLzC,KAAKwC,UAEVxC,KAAKwC,QAAQM,eAAe,SAAU9C,KAAK0C,UAC3C1C,KAAKwC,QAAU,OAGnBxC,KAAK2C,UAAY,SAASI,GAMtB,IALA,IAAIlC,EAAQkC,EAAMlC,MACdF,EAAMoC,EAAMpC,IACZwB,EAAWtB,EAAMgB,IACjBO,EAASzB,EAAIkB,IACb5B,EAASD,KAAKC,OACTM,EAAI,EAAGyC,EAAI/C,EAAOO,OAAQD,EAAIyC,EAAGzC,IAAK,CAE3C,IADI0C,EAAIhD,EAAOM,IACTI,IAAIkB,KAAOM,EACb,MAGR,GAAoB,UAAhBY,EAAMG,OAGN,IAFA,IAAIC,EAAUf,EAASD,EACnBiB,GAAWvC,EAAMiB,OAASnB,EAAImB,OAC3BvB,EAAIyC,EAAGzC,IAAK,CAEf,IADI0C,EAAIhD,EAAOM,IACTM,MAAMgB,IAAMM,EACd,MAUJ,GARIc,EAAEpC,MAAMgB,KAAOM,GAAYc,EAAEpC,MAAMiB,QAAUjB,EAAMiB,SAC/CmB,EAAEpC,MAAMiB,QAAUjB,EAAMiB,QAAU9B,KAAKqD,eAGvCJ,EAAEpC,MAAMiB,QAAUsB,EAClBH,EAAEpC,MAAMgB,KAAOsB,IAGnBF,EAAEtC,IAAIkB,KAAOM,GAAYc,EAAEtC,IAAImB,QAAUjB,EAAMiB,OAAQ,CACvD,GAAImB,EAAEtC,IAAImB,QAAUjB,EAAMiB,QAAU9B,KAAKqD,aACrC,SAGAJ,EAAEtC,IAAImB,QAAUjB,EAAMiB,QAAUsB,EAAU,GAAK7C,EAAIyC,EAAI,GACnDC,EAAEtC,IAAImB,OAASmB,EAAEpC,MAAMiB,QAAUmB,EAAEtC,IAAImB,QAAU7B,EAAOM,EAAE,GAAGM,MAAMiB,SACnEmB,EAAEtC,IAAImB,QAAUsB,GAExBH,EAAEtC,IAAImB,QAAUsB,EAChBH,EAAEtC,IAAIkB,KAAOsB,QAMrB,IAFIA,EAAUhB,EAAWC,EACrBgB,EAAUvC,EAAMiB,OAASnB,EAAImB,OAC1BvB,EAAIyC,EAAGzC,IAAK,CAGf,IAFI0C,EAAIhD,EAAOM,IAETM,MAAMgB,IAAMO,EACd,MAEAa,EAAEtC,IAAIkB,IAAMO,IAERD,EAAWc,EAAEtC,IAAIkB,KACdM,GAAYc,EAAEtC,IAAIkB,KAAOhB,EAAMiB,OAASmB,EAAEtC,IAAImB,SAGrDmB,EAAEtC,IAAIkB,IAAMM,EACZc,EAAEtC,IAAImB,OAASjB,EAAMiB,QAEhBmB,EAAEtC,IAAIkB,KAAOO,EACda,EAAEtC,IAAImB,QAAUnB,EAAImB,QAChBqB,GAAWF,EAAEtC,IAAImB,OAASjB,EAAMiB,UAChCmB,EAAEtC,IAAImB,OAASjB,EAAMiB,OACrBmB,EAAEtC,IAAIkB,IAAMhB,EAAMgB,MAItBoB,EAAEtC,IAAImB,QAAUsB,EAChBH,EAAEtC,IAAIkB,KAAOsB,GAGZF,EAAEtC,IAAIkB,IAAMO,IACjBa,EAAEtC,IAAIkB,KAAOsB,GAGbF,EAAEpC,MAAMgB,IAAMO,IAEVD,EAAWc,EAAEpC,MAAMgB,KAChBM,GAAYc,EAAEpC,MAAMgB,KAAOhB,EAAMiB,OAASmB,EAAEpC,MAAMiB,SAGzDmB,EAAEpC,MAAMgB,IAAMM,EACdc,EAAEpC,MAAMiB,OAASjB,EAAMiB,QAElBmB,EAAEpC,MAAMgB,KAAOO,EAChBa,EAAEpC,MAAMiB,QAAUnB,EAAImB,QAClBqB,GAAWF,EAAEpC,MAAMiB,OAASjB,EAAMiB,UAClCmB,EAAEpC,MAAMiB,OAASjB,EAAMiB,OACvBmB,EAAEpC,MAAMgB,IAAMhB,EAAMgB,MAIxBoB,EAAEpC,MAAMiB,QAAUsB,EAClBH,EAAEpC,MAAMgB,KAAOsB,GAGdF,EAAEpC,MAAMgB,IAAMO,IACnBa,EAAEpC,MAAMgB,KAAOsB,GAK3B,GAAe,GAAXA,GAAgB5C,EAAIyC,EACpB,KAAOzC,EAAIyC,EAAGzC,IAAK,CACf,IAAI0C,GAAAA,EAAIhD,EAAOM,IACbM,MAAMgB,KAAOsB,EACfF,EAAEtC,IAAIkB,KAAOsB,MAK1BG,KAAKvD,EAAUwD,WAElB5D,EAAQI,UAAYA","file":"../range_list.js","sourcesContent":["/* ***** BEGIN LICENSE BLOCK *****\r\n * Distributed under the BSD license:\r\n *\r\n * Copyright (c) 2010, Ajax.org B.V.\r\n * All rights reserved.\r\n * \r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *     * Redistributions of source code must retain the above copyright\r\n *       notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above copyright\r\n *       notice, this list of conditions and the following disclaimer in the\r\n *       documentation and/or other materials provided with the distribution.\r\n *     * Neither the name of Ajax.org B.V. nor the\r\n *       names of its contributors may be used to endorse or promote products\r\n *       derived from this software without specific prior written permission.\r\n * \r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * ***** END LICENSE BLOCK ***** */\r\n\r\ndefine(function(require, exports, module) {\r\n\"use strict\";\r\nvar Range = require(\"./range\").Range;\r\nvar comparePoints = Range.comparePoints;\r\n\r\nvar RangeList = function() {\r\n    this.ranges = [];\r\n};\r\n\r\n(function() {\r\n    this.comparePoints = comparePoints;\r\n\r\n    this.pointIndex = function(pos, excludeEdges, startIndex) {\r\n        var list = this.ranges;\r\n\r\n        for (var i = startIndex || 0; i < list.length; i++) {\r\n            var range = list[i];\r\n            var cmpEnd = comparePoints(pos, range.end);\r\n            if (cmpEnd > 0)\r\n                continue;\r\n            var cmpStart = comparePoints(pos, range.start);\r\n            if (cmpEnd === 0)\r\n                return excludeEdges && cmpStart !== 0 ? -i-2 : i;\r\n            if (cmpStart > 0 || (cmpStart === 0 && !excludeEdges))\r\n                return i;\r\n\r\n            return -i-1;\r\n        }\r\n        return -i - 1;\r\n    };\r\n\r\n    this.add = function(range) {\r\n        var excludeEdges = !range.isEmpty();\r\n        var startIndex = this.pointIndex(range.start, excludeEdges);\r\n        if (startIndex < 0)\r\n            startIndex = -startIndex - 1;\r\n\r\n        var endIndex = this.pointIndex(range.end, excludeEdges, startIndex);\r\n\r\n        if (endIndex < 0)\r\n            endIndex = -endIndex - 1;\r\n        else\r\n            endIndex++;\r\n        return this.ranges.splice(startIndex, endIndex - startIndex, range);\r\n    };\r\n\r\n    this.addList = function(list) {\r\n        var removed = [];\r\n        for (var i = list.length; i--; ) {\r\n            removed.push.apply(removed, this.add(list[i]));\r\n        }\r\n        return removed;\r\n    };\r\n\r\n    this.substractPoint = function(pos) {\r\n        var i = this.pointIndex(pos);\r\n\r\n        if (i >= 0)\r\n            return this.ranges.splice(i, 1);\r\n    };\r\n\r\n    // merge overlapping ranges\r\n    this.merge = function() {\r\n        var removed = [];\r\n        var list = this.ranges;\r\n        \r\n        list = list.sort(function(a, b) {\r\n            return comparePoints(a.start, b.start);\r\n        });\r\n        \r\n        var next = list[0], range;\r\n        for (var i = 1; i < list.length; i++) {\r\n            range = next;\r\n            next = list[i];\r\n            var cmp = comparePoints(range.end, next.start);\r\n            if (cmp < 0)\r\n                continue;\r\n\r\n            if (cmp == 0 && !range.isEmpty() && !next.isEmpty())\r\n                continue;\r\n\r\n            if (comparePoints(range.end, next.end) < 0) {\r\n                range.end.row = next.end.row;\r\n                range.end.column = next.end.column;\r\n            }\r\n\r\n            list.splice(i, 1);\r\n            removed.push(next);\r\n            next = range;\r\n            i--;\r\n        }\r\n        \r\n        this.ranges = list;\r\n\r\n        return removed;\r\n    };\r\n\r\n    this.contains = function(row, column) {\r\n        return this.pointIndex({row: row, column: column}) >= 0;\r\n    };\r\n\r\n    this.containsPoint = function(pos) {\r\n        return this.pointIndex(pos) >= 0;\r\n    };\r\n\r\n    this.rangeAtPoint = function(pos) {\r\n        var i = this.pointIndex(pos);\r\n        if (i >= 0)\r\n            return this.ranges[i];\r\n    };\r\n\r\n\r\n    this.clipRows = function(startRow, endRow) {\r\n        var list = this.ranges;\r\n        if (list[0].start.row > endRow || list[list.length - 1].start.row < startRow)\r\n            return [];\r\n\r\n        var startIndex = this.pointIndex({row: startRow, column: 0});\r\n        if (startIndex < 0)\r\n            startIndex = -startIndex - 1;\r\n        var endIndex = this.pointIndex({row: endRow, column: 0}, startIndex);\r\n        if (endIndex < 0)\r\n            endIndex = -endIndex - 1;\r\n\r\n        var clipped = [];\r\n        for (var i = startIndex; i < endIndex; i++) {\r\n            clipped.push(list[i]);\r\n        }\r\n        return clipped;\r\n    };\r\n\r\n    this.removeAll = function() {\r\n        return this.ranges.splice(0, this.ranges.length);\r\n    };\r\n\r\n    this.attach = function(session) {\r\n        if (this.session)\r\n            this.detach();\r\n\r\n        this.session = session;\r\n        this.onChange = this.$onChange.bind(this);\r\n\r\n        this.session.on('change', this.onChange);\r\n    };\r\n\r\n    this.detach = function() {\r\n        if (!this.session)\r\n            return;\r\n        this.session.removeListener('change', this.onChange);\r\n        this.session = null;\r\n    };\r\n\r\n    this.$onChange = function(delta) {\r\n        var start = delta.start;\r\n        var end = delta.end;\r\n        var startRow = start.row;\r\n        var endRow = end.row;\r\n        var ranges = this.ranges;\r\n        for (var i = 0, n = ranges.length; i < n; i++) {\r\n            var r = ranges[i];\r\n            if (r.end.row >= startRow)\r\n                break;\r\n        }\r\n        \r\n        if (delta.action == \"insert\") {\r\n            var lineDif = endRow - startRow;\r\n            var colDiff = -start.column + end.column;\r\n            for (; i < n; i++) {\r\n                var r = ranges[i];\r\n                if (r.start.row > startRow)\r\n                    break;\r\n    \r\n                if (r.start.row == startRow && r.start.column >= start.column) {\r\n                    if (r.start.column == start.column && this.$insertRight) {\r\n                        // do nothing\r\n                    } else {\r\n                        r.start.column += colDiff;\r\n                        r.start.row += lineDif;\r\n                    }\r\n                }\r\n                if (r.end.row == startRow && r.end.column >= start.column) {\r\n                    if (r.end.column == start.column && this.$insertRight) {\r\n                        continue;\r\n                    }\r\n                    // special handling for the case when two ranges share an edge\r\n                    if (r.end.column == start.column && colDiff > 0 && i < n - 1) {\r\n                        if (r.end.column > r.start.column && r.end.column == ranges[i+1].start.column)\r\n                            r.end.column -= colDiff;\r\n                    }\r\n                    r.end.column += colDiff;\r\n                    r.end.row += lineDif;\r\n                }\r\n            }\r\n        } else {\r\n            var lineDif = startRow - endRow;\r\n            var colDiff = start.column - end.column;\r\n            for (; i < n; i++) {\r\n                var r = ranges[i];\r\n                \r\n                if (r.start.row > endRow)\r\n                    break;\r\n                    \r\n                if (r.end.row < endRow\r\n                    && (\r\n                        startRow < r.end.row \r\n                        || startRow == r.end.row && start.column < r.end.column\r\n                    )\r\n                ) {\r\n                    r.end.row = startRow;\r\n                    r.end.column = start.column;\r\n                }\r\n                else if (r.end.row == endRow) {\r\n                    if (r.end.column <= end.column) {\r\n                        if (lineDif || r.end.column > start.column) {\r\n                            r.end.column = start.column;\r\n                            r.end.row = start.row;\r\n                        }\r\n                    }\r\n                    else {\r\n                        r.end.column += colDiff;\r\n                        r.end.row += lineDif;\r\n                    }\r\n                }\r\n                else if (r.end.row > endRow) {\r\n                    r.end.row += lineDif;\r\n                }\r\n                \r\n                if (r.start.row < endRow\r\n                    && (\r\n                        startRow < r.start.row \r\n                        || startRow == r.start.row && start.column < r.start.column\r\n                    )\r\n                ) {\r\n                    r.start.row = startRow;\r\n                    r.start.column = start.column;\r\n                }\r\n                else if (r.start.row == endRow) {\r\n                    if (r.start.column <= end.column) {\r\n                        if (lineDif || r.start.column > start.column) {\r\n                            r.start.column = start.column;\r\n                            r.start.row = start.row;\r\n                        }\r\n                    }\r\n                    else {\r\n                        r.start.column += colDiff;\r\n                        r.start.row += lineDif;\r\n                    }\r\n                }\r\n                else if (r.start.row > endRow) {\r\n                    r.start.row += lineDif;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (lineDif != 0 && i < n) {\r\n            for (; i < n; i++) {\r\n                var r = ranges[i];\r\n                r.start.row += lineDif;\r\n                r.end.row += lineDif;\r\n            }\r\n        }\r\n    };\r\n\r\n}).call(RangeList.prototype);\r\n\r\nexports.RangeList = RangeList;\r\n});\r\n"]}