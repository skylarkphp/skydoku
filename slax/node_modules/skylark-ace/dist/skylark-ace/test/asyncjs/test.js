/**
 * skylark-ace - A version of ace v1.4.3 that ported to running on skylarkjs.
 * @author Hudaokeji Co.,Ltd
 * @version v0.9.0
 * @link www.skylarkjs.org
 * @license MIT
 */
define(function(t,e,n){var o=t("ace/lib/oop"),s=t("asyncjs/async");t("asyncjs/utils"),e.TestGenerator=function(t){s.Generator.call(this,t)},o.inherits(e.TestGenerator,s.Generator),function(){this.exec=function(){this.run().report().summary(function(t,e){console.log("DONE")})},this.run=function(){return this.setupTest().each(function(t,e){t.setUpSuite?t.setUpSuite(e):e()}).each(function(t,e){t.test(function(n,o){t.err=n,t.passed=o,e()})}).each(function(t,e){t.tearDownSuite?t.tearDownSuite(e):e()})},this.report=function(){return this.each(function(t,e){var n=t.passed?"[32m":"[31m",o=t.name;t.suiteName&&(o=t.suiteName+": "+t.name),console.log(n+"["+t.count+"/"+t.index+"] "+o+" "+(t.passed?"OK":"FAIL")+"[0m"),t.passed||(t.err.stack?console.log(t.err.stack):console.log(t.err)),e()})},this.summary=function(t){var e=0,n=0;this.each(function(t){t.passed?e+=1:n+=1}).end(function(){console.log(""),console.log("Summary:"),console.log(""),console.log("Total number of tests: "+(e+n)),e&&console.log("[32mPassed tests:          "+e+"[0m"),n&&console.log("[31mFailed tests:          "+n+"[0m"),console.log(""),t(null,0==n)})},this.setupTest=function(){return this.each(function(t,e){var n=function(t){t()},o=t.context||this;if(t.setUp)var a=s.makeAsync(0,t.setUp,o);else a=n;if(tearDownCalled=!1,t.tearDown)var r=s.makeAsync(0,t.tearDown,o);else r=n;function i(e){tearDownCalled=!0,r.call(t.context,e)}var c=s.makeAsync(0,t.fn,o);t.test=function(e){var n;s.list([a,c,i]).delay(0).call(o).timeout(t.timeout).toArray(!1,function(t,o){if(!n){n=!0;var s=t[1];e(s,!s)}})},e()})}}.call(e.TestGenerator.prototype),e.testcase=function(t,n,o){var a=[];for(var r in t)a.push(r);var i,c=t.setUp||null,u=t.tearDown||null;a.forEach(function(t){">"==t.charAt(0)&&(i=t)}),i&&(a=[i]);var l=a.filter(function(e){return e.match(/^>?test/)&&"function"==typeof t[e]}),f=l.length,m=1;return tests=l.map(function(e){return{suiteName:n||t.name||"",name:e,setUp:c,tearDown:u,context:t,timeout:void 0===o?3e3:o,fn:t[e],count:f,index:m++}}),t.setUpSuite&&(tests[0].setUpSuite=s.makeAsync(0,t.setUpSuite,t)),t.tearDownSuite&&(tests[tests.length-1].tearDownSuite=s.makeAsync(0,t.tearDownSuite,t)),s.list(tests,e.TestGenerator)}});
//# sourceMappingURL=../../sourcemaps/test/asyncjs/test.js.map
