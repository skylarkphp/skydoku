/**
 * skylark-ace - A version of ace v1.4.3 that ported to running on skylarkjs.
 * @author Hudaokeji Co.,Ltd
 * @version v0.9.0
 * @link www.skylarkjs.org
 * @license MIT
 */
define(function(require,exports,module){"no use strict";var e=require("./lib/lang"),t=(require("./lib/oop"),require("./lib/net")),a=require("./lib/app_config").AppConfig;module.exports=exports=new a;var n=function(){return this||"undefined"!=typeof window&&window}(),r={packaged:!1,workerPath:null,modePath:null,themePath:null,basePath:"",suffix:".js",$moduleUrls:{},loadWorkerFromBlob:!0};exports.get=function(e){if(!r.hasOwnProperty(e))throw new Error("Unknown config key: "+e);return r[e]},exports.set=function(e,t){if(!r.hasOwnProperty(e))throw new Error("Unknown config key: "+e);r[e]=t},exports.all=function(){return e.copyObject(r)},exports.$modes={},exports.moduleUrl=function(e,t){if(r.$moduleUrls[e])return r.$moduleUrls[e];var a=e.split("/"),n="snippets"==(t=t||a[a.length-2]||"")?"/":"-",o=a[a.length-1];if("worker"==t&&"-"==n){var i=new RegExp("^"+t+"[\\-_]|[\\-_]"+t+"$","g");o=o.replace(i,"")}(!o||o==t)&&a.length>1&&(o=a[a.length-2]);var l=r[t+"Path"];return null==l?l=r.basePath:"/"==n&&(t=n=""),l&&"/"!=l.slice(-1)&&(l+="/"),l+t+n+o+this.get("suffix")},exports.setModuleUrl=function(e,t){return r.$moduleUrls[e]=t},exports.$loading={},exports.loadModule=function(e,a){var module,n;Array.isArray(e)&&(n=e[0],e=e[1]);try{module=require(e)}catch(e){}if(module&&!exports.$loading[e])return a&&a(module);if(exports.$loading[e]||(exports.$loading[e]=[]),exports.$loading[e].push(a),!(exports.$loading[e].length>1)){var r=function(){require([e],function(module){exports._emit("load.module",{name:e,module:module});var t=exports.$loading[e];exports.$loading[e]=null,t.forEach(function(e){e&&e(module)})})};if(!exports.get("packaged"))return r();t.loadScript(exports.moduleUrl(e,n),r),o()}};var o=function(){r.basePath||r.workerPath||r.modePath||r.themePath||Object.keys(r.$moduleUrls).length||(console.error("Unable to infer path to ace from script src,","use ace.config.set('basePath', 'path') to enable dynamic loading of modes and themes","or with webpack use ace/webpack-resolver"),o=function(){})};exports.init=function(e){if(n&&n.document){r.packaged=e||require.packaged||module.packaged||n.define&&define.packaged;for(var t,a={},o="",i=document.currentScript||document._currentScript,l=(i&&i.ownerDocument||document).getElementsByTagName("script"),c=0;c<l.length;c++){var u=l[c],d=u.src||u.getAttribute("src");if(d){for(var s=u.attributes,f=0,h=s.length;f<h;f++){var g=s[f];0===g.name.indexOf("data-ace-")&&(a[(t=g.name.replace(/^data-ace-/,""),t.replace(/-(.)/g,function(e,t){return t.toUpperCase()}))]=g.value)}var p=d.match(/^(.*)\/ace(\-\w+)?\.js(\?|$)/);p&&(o=p[1])}}for(var m in o&&(a.base=a.base||o,a.packaged=!0),a.basePath=a.base,a.workerPath=a.workerPath||a.base,a.modePath=a.modePath||a.base,a.themePath=a.themePath||a.base,delete a.base,a)void 0!==a[m]&&exports.set(m,a[m])}}});
//# sourceMappingURL=sourcemaps/config.js.map
