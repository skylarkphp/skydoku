{"version":3,"sources":["skylark-widgets-swt-all.js"],"names":["define","obj1","path","obj2","split","length","ns","i","name","_attach","skylark","attach","obj","main","class2type","nativeIsArray","Array","isArray","toString","type","forEach","toLowerCase","String","call","object","constructor","isEmptyObject","isFunction","value","isHtmlNode","nodeType","isNumber","isObject","isString","isWindow","window","isArrayLike","isBoolean","isDefined","isDocument","DOCUMENT_NODE","isElement","isEmpty","isNaN","isNull","isNumeric","isPlainObject","Object","getPrototypeOf","prototype","isSameOrigin","href","origin","location","protocol","hostname","port","startsWith","isSymbol","isObjectLike","objectToString","symbolTag","isUndefined","types","INFINITY","MAX_INTEGER","NAN","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","toFinite","toNumber","sign","other","valueOf","replace","isBinary","test","slice","toInteger","result","remainder","numbers","eq","deepEq","hasOwnProperty","keysFunc","defaults","SymbolProto","Symbol","allKeys","keys","key","push","has","_mixin","target","source","deep","safe","undefined","_parseMixinArgs","args","params","arguments","shift","pop","sources","mixin","apply","this","values","a","b","aStack","bStack","className","areArrays","aCtor","bCtor","clone","src","checkCloneMethod","copy","index","l","each","callback","undef","extend","arg","isEqual","includes","collection","fromIndex","guard","nativeMax","indexOf","baseIndexOf","isMatch","attrs","omit","prop1","prop2","pn","pick","removeItem","items","item","idx","splice","fallback","prop","safeMixin","objects","filter","find","baseFindIndex","array","predicate","fromRight","baseIsNaN","flatten","j","compact","first","n","func","grep","out","inArray","makeArray","offset","startWith","concat","merge","second","arr","fn","map","elements","reduce","initialValue","uniq","arrays","createClass","_constructor","_construct","init","props","parent","mixins","options","innerParent","ctor","Error","clss","unshift","superclass","cls","clsMixines","serialMixins","newCtor","xtor","Function","create","__proto__","__mixin__","mergeMixins","klassName","__mixins__","partial","proto","_super","noOverrided","overrides","superFn","tmp","overrided","ret","defineProperty","extendClass","inherit","f1","klass","QueryResults","results","isPromise","then","addIterativeMethod","method","Deferred","when","delegate","total","ArrayStore","queryEngine","query","queryObject","required","execute","thisObject","cache","buildFn","sortSet","sort","aValue","attribute","bValue","descending","start","count","Infinity","matches","idProperty","get","id","data","getIdentity","put","Math","random","overwrite","add","remove","setData","identifier","nextId","aspect","methodName","advice","receiveArguments","dispatcher","existing","executionId","before","next","around","after","newResults","signal","previous","advised","advise","proxy","context","TypeError","TMP","templateSettings","evaluate","interpolate","escape","noMatch","escapes","'","\\","\r","\n","\t"," "," ","escaper","bind","debounce","wait","timeout","clearTimeout","setTimeout","defer","requestAnimationFrame","setTimeoutout","negate","noop","returnTrue","returnFalse","template","text","settings","render","matcher","RegExp","join","match","variable","e","argument","funcs","Promise","always","handler","done","fail","catch","self","promise","makePromise2","resolve","reject","_resolve","_reject","isResolved","isPending","isRejected","v","state","notified","listeners","onResolved","onRejected","onProgress","progress","__ctx__","pipe","notify","listener","error","resolveWith","_resolved","p","reason","rejectWith","_rejected","errback","progback","all","d","race","valueOrPromise","receivedPromise","nativePromise","deferred","cancel","err","immediate","async","parallel","ctx","rets","series","waterful","parseMilliSeconds","str","strs","number","trim","datetimes","eventMethods","preventDefault","stopImmediatePropagation","stopPropagation","compatible","event","isDefaultPrevented","sourceMethod","Event","CustomEvent","[object Object]","super","parse","segs","Emitter","on","events","selector","one","_hub","parsed","emit","eventName","len","reCompact","isImmediatePropagationStopped","listened","evtArr","_events","listenTo","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","listenToOnce","off","evts","liveEvents","_","unlistenTo","trigger","createEvent","Evented","hoster","isBrowser","isNode","global","browser","node","process","versions","v8","_document","w","require","document","matched","ua","exec","version","uaMatch","navigator","userAgent","chrome","webkit","safari","escapeCharMap","freeze","&","<",">","\"","`","=","replaceChar","c","escapeChars","idCounter","string","line","body","escapeHTML","me","callee","stash","getElementById","innerHTML","camelCase","toUpperCase","dasherize","deserializeValue","JSON","generateUUID","r","lowerFirst","charAt","rtrim","serializeValue","stringify","substitute","transform","getObject","retVal","getValue","_k","reverse","format","slugify","from","uniqueId","prefix","upperFirst","strings","base64","decode","input","binary","chr1","chr2","chr3","enc1","enc2","enc3","enc4","output","_keyStr","fromCharCode","utftext","c1","c2","charCodeAt","c3","_utf8_decode","encode","_utf8_encode","Stateful","attributes","cid","cidPrefix","set","changed","validationError","idAttribute","toJSON","attr","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","_pending","clear","hasChanged","changedAttributes","diff","old","previousAttributes","isNew","isValid","validate","hub","publish","arg1","argn","subscribe","topic","_uid","langx","funcArg","payload","getQueryParams","url","queryParam","nv","toPixel","parseFloat","uid","URL","webkitURL","vendorPrefix","vendorPrefixRE","transEndEventNames","WebkitTransition","MozTransition","OTransition","transition","transEndEventName","css3PropPrefix","css3EventPrefix","cssStyles","cssProps","vendorPrefixesRE","testEl","createElement","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","requestFullScreen","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","testStyle","exitFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen","style","cssPropName","isIE","normalizeStyleProperty","normalizeCssProperty","normalizeCssEvent","support","end","fragmentRE","singleTagRE","div","table","tableBody","tableRow","containers","tr","tbody","thead","tfoot","td","th","*","rootNodeRE","ensureNodes","nodes","copyByClone","cloneNode","nodeName","elm","chkName","enhancePlaceContent","placing","neddsFlattern","append","parentNode","appendChild","tag","createElementNS","setAttribute","rxhtmlTag","isChildOf","directly","documentElement","contains","ownerDoc","ownerDocument","noder","active","doc","el","activeElement","refNode","nextSibling","insertBefore","blur","getAttribs","setAttrib","getAttrib","child","contents","contentDocument","childNodes","createFragment","html","$1","container","xml","newXml","edsplit","removeSelfClosingTags","dom","removeChild","createTextNode","empty","hasChildNodes","firstChild","fullScreen","exitFullScreen","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","focusable","element","hasTabindex","mapName","img","focusableIfVisible","fieldset","$","is","disabled","closest","visible","isActive","elem","isInDocument","offsetParent","defaultView","getComputedStyle","position","ownerWindow","parentWindow","prepend","reflow","offsetHeight","console","warn","children","oldNode","replaceChild","selectable","onselectstart","MozUserSelect","KhtmlUserSelect","unselectable","traverse","wrapper","wrapperNode","wrapperInner","unwrap","isDoc","local","nativeMatchesSelector","separatorIndex","combinatorIndex","reversed","reverseCache","reUnescape","expression","isReversed","Slick","currentCache","expressions","raw","regexp","parser","reverseCombinator","combinator","exp","last","parts","cexp","escapeRegExp","rawMatch","separator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","currentSeparator","currentParsed","classList","classes","pseudos","operator","rinputs","rheader","parseSelector","button","checked","enabled","even","focus","tabindex","gt","sel","header","hidden","lt","not","odd","selected","tabbable","tabIndex","offsetWidth","createInputPseudo","createButtonPseudo","isArrayFilter","radio","checkbox","file","password","image","submit","reset","ancestors","root","rootIsSelector","descendants","querySelectorAll","matchError","descendant","querySelector","lastChild","previousSibling","check","adjacent","nextSiblings","previousSiblings","siblings","divide","cond","nativeSelector","customPseudos","part","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","filterSingle","matchs","combine","bit","node1","op","divided","single","currentBit","founds","found","currentItems","finder","ancestor","byId","findAll","capitalRE","propMap","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","valHooks","option","select","selectedIndex","max","optionSet","attrName","_store","confirm","store","_attributeData","_setData","dataAttrName","camelName","_getData","cleanData","txt","textContent","hooks","value1","datax","dataName","aria","pluck","property","removeAttr","removeAttribute","removeData","names","removeProp","isQ","some","every","rquickExpr","wrapper_node_operation","oldValueFunc","argType","wrapper_map","wrapper_selector","wrapper_selector_until","util","wrapper_every_act","wrapper_value","newValue","NodeList","ready","rootQuery","toArray","size","excludes","parents","parentsUntil","pushStack","elms","prevObject","replaceWith","newContent","wrap","htmlIsFunction","wrapAll","firstElementChild","wrapInner","toggle","setting","css","show","hide","prevAll","nextAll","detach","hover","fnOver","fnOut","mouseenter","mouseleave","appendTo","prependTo","insertAfter","replaceAll","original","elems","insert","scrollParent","includeHidden","excludeStaticParent","overflowRegex","andSelf","addBack","eventType","place","addContent","content","disableSelection","enableSelection","flow","isBlockNode","plugin","returnValue","plugins","instantiate","wraps","wrapper_some_chk","wrapper_every_act_firstArgFunc","newArg1","wrapper_name_value","VisualElement","_elm","velm","batch","action","HTMLElement","_delegator","ignoreProperties","readyRE","NativeEventCtors","NativeEvents","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","abort","change","selectionchange","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","textInput","touchstart","touchmove","touchend","load","resize","scroll","unload","wheel","bubbles","cancelable","namespace","getEventCtor","createProxy","originalEvent","specialEvents","focusinSupported","realEvent","handlers","EventBindings","_target","_event","_bindings","bindings","binding","_listener","domEvt","_args","currentTarget","liveFired","related","relatedTarget","addEventListener","removing","removeEventListener","EventsHandler","_handler","register","specialEvent","bindingEvent","bindType","bindEventName","unregister","findHandler","readyState","keyCodeLookup","backspace","comma","delete","down","enter","home","left","page_down","page_up","period","right","space","tab","up","eventer","transitionEnd","delegateType","shortcuts","registry","run","shortcut","metaKey","ctrlKey","ctrl","alt","altKey","shiftKey","keyCode","charCode","pattern","shortcutKey","regKey","special","stop","evented","dispatchEvent","delegateMethodNames","maybeAddPx","cssNumber","column-count","columns","font-weight","line-height","opacity","z-index","zoom","classReCache","classRE","svg","baseVal","elementDisplay","getStyles","view","opener","styler","autocssfix","cssHooks","addClass","re","computedStyle","getPropertyValue","removeProperty","cssText","hasClass","isInvisible","removeClass","display","defaultDisplay","toggleClass","replaceClass","newClass","oldClass","cachedScrollbarWidth","px","scrollbarWidth","w1","w2","innerDiv","clientWidth","borderExtents","top","bottom","s","borderLeftWidth","borderTopWidth","borderRightWidth","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","clientSize","dimension","width","height","clientHeight","isBorderBox","bex","pex","paddingExtents","getDocumentSize","scrollWidth","scrollHeight","marginLeft","marginTop","marginRight","marginBottom","marginSize","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","pageXOffset","pageYOffset","relativeRect","scrollLeft","hasScrollLeft","scrollTo","scrollY","scrollTop","hasScrollTop","scrollX","innerWidth","innerHeight","geom","contentRect","cs","fullCover","hor","vert","vertical","horizontal","marginRect","pageRect","round","scrollIntoView","align","x","y","parentWidth","parentHeight","parentElm","pos","rootElm","offsetLeft","offsetTop","getOffset","abs","rhorizontal","rvertical","roffset","rposition","rpercent","getOffsets","offsets","parseCss","positions","fit","newOverRight","within","withinOffset","outerWidth","collisionPosLeft","collisionPosition","overLeft","overRight","collisionWidth","newOverBottom","outerHeight","collisionPosTop","overTop","overBottom","collisionHeight","flip","newOverLeft","myOffset","my","elemWidth","atOffset","at","targetWidth","newOverTop","elemHeight","targetHeight","flipfit","posit","targetOffset","basePosition","dimensions","of","withinElement","hasOffset","msize","scrollInfo","overflowX","overflowY","hasOverflowX","getScrollInfo","collision","pageY","pageX","horizontalOffset","verticalOffset","using","dir","feedback","important","Dimension","m","margin","cb","mb","swt","CONST","BACKSPACE_KEYCODE","COMMA_KEYCODE","DELETE_KEYCODE","DOWN_ARROW_KEYCODE","ENTER_KEYCODE","TAB_KEYCODE","UP_ARROW_KEYCODE","isKey","isBackspaceKey","isDeleteKey","isTabKey","isUpArrow","isDownArrow","ENCODED_REGEX","cleanInput","questionableMarkup","isShiftHeld","files","diskfs","webentry","entry","onError","isFile","relativePath","isDirectory","dirReader","createReader","readEntries","entries","dropzone","hoverClass","droppedCallback","dropped","enterdCount","dataTransfer","webkitGetAsEntry","getAsEntry","pastezone","pastedCallback","pasted","clipboardData","getAsFile","fileInput","maxFileSize","directory","multiple","accept","title","fileSelected","picked","selectFiles","pickedFiles","onchange","webkitEntries","webkitdirectory","picker","http","getAbsoluteUrl","Xhr","jsonpID","rscript","scriptTypeRE","xmlTypeRE","jsonType","htmlType","blankRE","XhrDefaultOptions","beforeSend","success","complete","accepts","script","json","crossDomain","processData","traditional","xhrFields","withCredentials","mimeToDataType","mime","appendQuery","serializeData","param","serialize","scope","t","hash","encodeURIComponent","_request","xhr","XMLHttpRequest","dataType","handleAs","mimeType","headers","isFormData","FormData","basicAuthorizationToken","user","contentType","overrideMimeType","finish","onloadend","onabort","onprogress","ontimeout","status","getResponseHeader","responseText","eval","responseXML","Blob","xhrObj","response","reponse","statusText","evt","open","setRequestHeader","send","request","post","patch","del","defaultOptions","blobSlice","webkitSlice","mozSlice","Upload","_options","debug","maxConnections","maxChunkSize","fileName","loaded","onComplete","onCancel","onFailure","_queue","_params","_files","_xhrs","_loaded","_send","sendAll","_cancel","_dequeue","cancelAll","getName","getSize","fileSize","getLoaded","curUploadingSize","chunkSize","curLoadedSize","formParamName","formData","lengthComputable","getQueue","animationName","animationDuration","animationTiming","transitionProperty","transitionDuration","transitionTiming","transitionDelay","animationEnd","supportedTransforms","cssReset","animate","properties","duration","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","easing","fx","speeds","normal","eace","clientLeft","scrollToTop","speed","scale","scrollFrom","freq","interval","setInterval","clearInterval","fadeTo","fadeIn","fadeOut","slideDown","visibility","overflow","slideUp","queue","fast","slow","emulateTransitionEnd","called","fadeToggle","ceasing","allback","slideToggle","throb","timer","time","throbber","overlayDiv","zIndex","overlay","textNode","update","nodeValue","toogle","elmx","pluginKlasses","pluginName","pair","instanceDataName","pluginInstance","destroy","pluginKlass","Plugin","_initOptions","ctors","_destroy","_delay","instance","curOption","_setOptions","_setOption","getUID","domNode","shortcutName","extfn","shortcutter","args2","FileUpload","MultiUploader","uploadUrl","allowedExtensions","sizeLimit","minSizeLimit","autoUpload","selectors","fileList","fileItem","nodata","startUploads","cancelUploads","_velm","_initEventHandler","_initFileHandlers","_initUpoadHandler","_updateFileList","dzSelector","pzSelector","pkSelector","_addFiles","_onProgress","_onComplete","_onCancel","_onFailure","itemSelectors","_listElement","$fileItem","fileId","$files","$item","_getItemByFileId","percent","progressHTML","_formatSize","_updateFile","_filesInProgress","doneMsg","_addToList","_formatFileName","with_files_elements","without_files_elements","when_pending","when_running","when_done","item2","_validateFile","_addFile","_isAllowedExtension","_error","code","messages","replacement","showMessage","ext","allowed","bytes","toFixed","collections","Collection","_clear","it","iterator","hasNext","thisArg","Map","_getInnerItems","_items","_findKeyByRegExp","regExp","strKey","oldValue","updated","findByRegExp","removeByRegExp","toPlain","plain","delim","_Map","HashMap","base","Widget","_elmx","_parse","_create","_init","addonCategoryOptions","addons","widgetCtor","categoryName","addonOption","addonName","addonSetting","addonCtor","addon","parentElement","_startup","optionsAttr","options1","widgetClass","_refresh","updates","mapping","attributs","styles","_addons","category","getEnclosing","getEnclosed","ArrayList","ex","enable","disable","getEl","ariaTarget","_aria","meta","addStatePropMethod","widgetName","ui","bs3","bsTransitionEnd","Collapse","DEFAULTS","$element","$trigger","transitioning","$parent","getParent","addAriaAndCollapsedClass","hasWidth","activesData","actives","startEvent","collapse","scrollSize","TRANSITION_DURATION","isOpen","VERSION","Panel","toggler","$toggle","$body","$this","collpasePlugin","expand","full","unfull","toogleFull","close","panel_dom","minimize","Accordion","panel","panels","panelEl","_panels","_post","addPanel","expandAll","collapseAll","overided","Button","btnSize","btnType","leftIcon","rightIcon","topIcon","bottomIcon","$el","$fa_icon_left","$fa_icon_right","iconleft","iconright","Carousel","pause","keyboard","controls","playPause","indicators","slides","$indicators","paused","sliding","$active","$items","embeded","cycle","slide","slideIndex","to","which","getItemIndex","getItemForDirection","direction","activeIndex","willWrap","delta","itemIndex","$next","isCycling","slideEvent","$nextIndicator","slidEvent","indicatorTemplate","slideTemplate","templates","_bs_carousel","carousel","slideAction","createIndicator","thumbnailUrl","thumbnail","gallery","indicator","indicatorPrototype","getItemTitle","thumbnailProperty","thumbnailIndicators","Gallery","getItemProperty","getElementsByTagName","backgroundImage","addIndicator","indicatorContainer","list","setActiveIndicator","activeIndicator","activeIndicatorClass","initSlides","reload","addSlide","resetSlides","_Toggler","isChecked","uncheck","CheckBox","chk","lbl","label","chkSelector","lblSelector","$chk","$lbl","$containerToggle","$label","$toggleContainer","setDisabledState","backdrop","Dropdown","clearMenus","ComboBox","autoResizeMenu","filterOnKeypress","showOptionsOnKeypress","$dropMenu","$li","substr","$input","$button","dropdown","$inputGroupBtn","itemclicked","inputchanged","menuShown","setDefaultSelection","outerHTML","doSelect","$selectedItem","clearSelection","resizeMenu","selectedItem","notFound","selectByText","innerText","selectByValue","selectBySelector","selectByIndex","synthetic","IS_NAVIGATIONAL","$selected","previousKeyPress","extra","TextBox","multiline","subtype","_dom","_sync","Listing","multiSelect","multiTier","mode","levels","hasChildren","tree","expandIcon","collapseIcon","treeIcon","itemGroup","accordion","checkable","icon","itemSelector","_$items","veItem","multiTierMode","hasChildrenSelector","childrenSelector","iconSelector","textSelector","itemTemplate","treeIconTemplate","treeIconSelector","expandIconClass","collapseIconClass","togglerSelector","findItem","valueOrIdx","selectOneItem","Pagination","firstNavi","prevNavi","nextNavi","lastNavi","numericNavi","numericTxt","totalPages","maxButtonsVisible","currentPage","Number","$first","$prev","$last","$numeric","checkCanAction","$elm","numeric","pageNo","totalPageNoBtns","min","begin","visibles","$btn","changePageNoBtns","changeLabeldBtns","Progress","bar","_vbar","increase","tick","Radio","$radio","$container","ignoreVisibilityCheck","logError","containerSelector","setInitialState","resetGroup","setCheckedState","$radios","groupName","SearchBox","clearOnEmpty","searchOnKeyPress","allowCancel","$repeater","$icon","buttonclicked","clearPending","activeSearch","search","searchText","SelectList","emptyLabelHTML","$hiddenField","$dropdownMenu","itemClicked","itemChanged","newWidth","sizer","Boolean","Tabular","buttonClasses","removeLast","moveUp","moveDown","rowDrag","sectionClasses","caption","subPanel","footer","hideButtons","_showEmptyMessage","skipWidthCalculation","tbWrap","_tbWrap","$emptyCell","_i18n","rowEmpty","_finalColSpan","_calculateColumnWidth","$tbWhole","$scroller","tbHeadRow","tbColGp","_rowOrder","tbBodyRow","marginThreshold","modal","colLimit","z","headCellWidth","bodyCellWidth","_createGridButton","uiIcon","genButton","showLabel","_sortSequence","startIndex","tbWhole","hideRowNumColumn","idPrefix","_emptyGrid","_uniqueIndex","_saveSetting","_gridRowDragged","isMoveUp","uniqueIndex","tbRowIndex","afterRowDragged","_checkGridAndGetSettings","noMsg","$grid","alert","_systemMessages","notInit","getValueMultiGrid","_insertRow","numOfRowOrRowArray","rowIndex","callerUniqueIndex","tbRow","tbCell","addedRows","parentIndex","tbBody","tbSubRow","reachMaxRow","oldHeight","oldScroll","numOfRow","loadData","maintainScroll","maxRowsAllowed","useSubPanel","_sectionClasses","rowSpan","invisible","cellCss","ctrlName","ctrlId","nameFormatter","customBuilder","ctrlOptions","lastGroupName","lastGroupElem","group","Option","arrayOpt","eqIndex","substring","selectmenu","uiOption","textAlign","datepicker","spinner","autocomplete","ctrlAttr","ctrlProp","ctrlCss","ctrlClass","uiTooltip","tooltip","onClick","caller","appendGrid","onChange","getRowIndex","setCtrlValue","_hideLastColumn","_visibleCount","rowButtonsInFront","customGridButtons","rowUniqueIndex","insertRow","_buttonClasses","_removeRow","moveUpRow","moveDownRow","rowDragging","customRowButtons","buttonCfg","uiButton","atTheFront","makeCustomRowButton","colSpan","subPanelBuilder","afterRowInserted","afterRowAppended","maxNumRowsReached","newHeight","force","beforeRowRemove","afterRowRemoved","_loadData","records","isInit","insertResult","rowDataLoaded","_isDataLoaded","initData","dataLoaded","noColumnInfo","tbHead","tbFoot","elemNotTable","tbHeadCellRowNum","tbHeadCellRowButton","_defaultInitOptions","_defaultCallbackContainer","_wrapperId","_calculateWidth","i18n","_defaultTextResources","_defaultButtonClasses","_defaultSectionClasses","_defaultHideButtons","Date","getTime","pendingSkipCol","columnOpt","_defaultColumnOptions","resizable","displayCss","headerSpan","displayTooltip","handles","childnodes","captionTooltip","customFooterButtons","makeCustomBottomButton","sortable","axis","containment","handle","helper","org","helperSelect","orgSelect","lastIndexOf","originalPosition","appendRow","initRows","isReady","isDataLoaded","insertUniqueIndex","removeRow","emptyGrid","trTarget","trSwap","trAdtTarget","swapSeq","oldIndex","findRowIndex","afterRowSwapped","trAdtSwap","showColumn","colIndex","hideColumn","isColumnInvisible","getRowCount","getUniqueIndex","getRowValue","loopIndex","getAllValue","objectMode","rowValue","rowCountName","getCtrlValue","getCellCtrl","getCellCtrlByUniqueIndex","getRowOrder","getColumns","isRowEmpty","removeEmptyRows","maxBodyHeight","autoColumnWidth","subPanelGetter","emptyCriteria","customGetter","customSetter","notSupportMethod","exButton","btnClass","btnCss","btnAttr","rowData","keyName","suffix","adtData","newData","columnName","currentValue","defaultValue","Tab","$ul","$previous","hideEvent","showEvent","$target","activate","TabStrip","tabpane","droptabs","dropdownMenu","dropdownTabs","dropdownCaret","visibleTabs","auto","pullDropdownRight","$header","$tabs","$content","$tabpanes","tabEl","arrange","dropdownTabsSelector","visibleTabsSelector","dropdownLabel","$dropdownTabs","$visibleTabs","tempElem","hiddenElementWidth","availableSpace","visibleTabsWidth","Toolbar","toolbarFloat","toolbarHidden","toolbarFloatOffset","toolbarHeight","_this","opts","editor","editable","os","mobile","placeholderEl","addToolItem","itemWidget","addSeparator"],"mappings":"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","file":"../skylark-widgets-swt-all.js","sourcesContent":["define('skylark-langx-ns/_attach',[],function(){\r\n    return  function attach(obj1,path,obj2) {\r\n        if (typeof path == \"string\") {\r\n            path = path.split(\".\");//[path]\r\n        };\r\n        var length = path.length,\r\n            ns=obj1,\r\n            i=0,\r\n            name = path[i++];\r\n\r\n        while (i < length) {\r\n            ns = ns[name] = ns[name] || {};\r\n            name = path[i++];\r\n        }\r\n\r\n        return ns[name] = obj2;\r\n    }\r\n});\ndefine('skylark-langx-ns/ns',[\r\n    \"./_attach\"\r\n], function(_attach) {\r\n    var skylark = {\r\n    \tattach : function(path,obj) {\r\n    \t\treturn _attach(skylark,path,obj);\r\n    \t}\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-langx-ns/main',[\r\n\t\"./ns\"\r\n],function(skylark){\r\n\treturn skylark;\r\n});\ndefine('skylark-langx-ns', ['skylark-langx-ns/main'], function (main) { return main; });\n\ndefine('skylark-langx/skylark',[\r\n    \"skylark-langx-ns\"\r\n], function(ns) {\r\n\treturn ns;\r\n});\r\n\ndefine('skylark-langx-types/types',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n    var nativeIsArray = Array.isArray, \r\n        toString = {}.toString;\r\n    \r\n    var type = (function() {\r\n        var class2type = {};\r\n\r\n        // Populate the class2type map\r\n        \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split(\" \").forEach(function(name) {\r\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n        });\r\n\r\n        return function type(obj) {\r\n            return obj == null ? String(obj) :\r\n                class2type[toString.call(obj)] || \"object\";\r\n        };\r\n    })();\r\n\r\n \r\n    var  isArray = nativeIsArray || function(obj) {\r\n        return object && object.constructor === Array;\r\n    };\r\n\r\n\r\n    /**\r\n     * Checks if `value` is array-like. A value is considered array-like if it's\r\n     * not a function/string/element and has a `value.length` that's an integer greater than or\r\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\r\n     *\r\n     * @category Lang\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\r\n     * @example\r\n     *\r\n     * isArrayLike([1, 2, 3])\r\n     * // => true\r\n     *\r\n     * isArrayLike(document.body.children)\r\n     * // => false\r\n     *\r\n     * isArrayLike('abc')\r\n     * // => true\r\n     *\r\n     * isArrayLike(Function)\r\n     * // => false\r\n     */    \r\n    function isArrayLike(obj) {\r\n        return !isString(obj) && !isHtmlNode(obj) && typeof obj.length == 'number' && !isFunction(obj);\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is classified as a boolean primitive or object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\r\n     * @example\r\n     *\r\n     * isBoolean(false)\r\n     * // => true\r\n     *\r\n     * isBoolean(null)\r\n     * // => false\r\n     */\r\n    function isBoolean(obj) {\r\n       return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\r\n       //return typeof(obj) === \"boolean\";\r\n    }\r\n\r\n    function isDefined(obj) {\r\n        return typeof obj !== 'undefined';\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\r\n    }\r\n\r\n   // Is a given value a DOM element?\r\n    function isElement(obj) {\r\n        return !!(obj && obj.nodeType === 1);\r\n    }   \r\n\r\n    function isEmptyObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n            if (obj[name] !== null) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    /**\r\n     * Checks if `value` is classified as a `Function` object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\r\n     * @example\r\n     *\r\n     * isFunction(parseInt)\r\n     * // => true\r\n     *\r\n     * isFunction(/abc/)\r\n     * // => false\r\n     */\r\n    function isFunction(value) {\r\n        return type(value) == \"function\";\r\n    }\r\n\r\n\r\n\r\n    function isHtmlNode(obj) {\r\n        return obj && obj.nodeType; // obj instanceof Node; //Consider the elements in IFRAME\r\n    }\r\n\r\n    function isInstanceOf( /*Object*/ value, /*Type*/ type) {\r\n        //Tests whether the value is an instance of a type.\r\n        if (value === undefined) {\r\n            return false;\r\n        } else if (value === null || type == Object) {\r\n            return true;\r\n        } else if (typeof value === \"number\") {\r\n            return type === Number;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else if (typeof value === \"boolean\") {\r\n            return type === Boolean;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else {\r\n            return (value instanceof type) || (value && value.isInstanceOf ? value.isInstanceOf(type) : false);\r\n        }\r\n    }\r\n\r\n    function isNull(obj) {\r\n        return obj === null;\r\n    }\r\n\r\n    function isNumber(obj) {\r\n        return typeof obj == 'number';\r\n    }\r\n\r\n    function isObject(obj) {\r\n        var type = typeof obj;\r\n        return type === 'function' || type === 'object' && !!obj;        \r\n        //return type(obj) == \"object\";\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return obj && obj == obj.window;\r\n    }\r\n\r\n    function isSameOrigin(href) {\r\n        if (href) {\r\n            var origin = location.protocol + '//' + location.hostname;\r\n            if (location.port) {\r\n                origin += ':' + location.port;\r\n            }\r\n            return href.startsWith(origin);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is classified as a `Symbol` primitive or object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\r\n     * @example\r\n     *\r\n     * _.isSymbol(Symbol.iterator);\r\n     * // => true\r\n     *\r\n     * _.isSymbol('abc');\r\n     * // => false\r\n     */\r\n    function isSymbol(value) {\r\n      return typeof value == 'symbol' ||\r\n        (isObjectLike(value) && objectToString.call(value) == symbolTag);\r\n    }\r\n\r\n    // Is a given variable undefined?\r\n    function isUndefined(obj) {\r\n        return obj === void 0;\r\n    }\r\n\r\n    return skylark.attach(\"langx.types\",{\r\n\r\n        isArray: isArray,\r\n\r\n        isArrayLike: isArrayLike,\r\n\r\n        isBoolean: isBoolean,\r\n\r\n        isDefined: isDefined,\r\n\r\n        isDocument: isDocument,\r\n\r\n        isElement,\r\n\r\n        isEmpty : isEmptyObject,\r\n\r\n        isEmptyObject: isEmptyObject,\r\n\r\n        isFunction: isFunction,\r\n\r\n        isHtmlNode: isHtmlNode,\r\n\r\n        isNaN : function (obj) {\r\n            return isNaN(obj);\r\n        },\r\n\r\n        isNull: isNull,\r\n\r\n\r\n        isNumber: isNumber,\r\n\r\n        isNumeric: isNumber,\r\n\r\n        isObject: isObject,\r\n\r\n        isPlainObject: isPlainObject,\r\n\r\n        isString: isString,\r\n\r\n        isSameOrigin: isSameOrigin,\r\n\r\n        isSymbol : isSymbol,\r\n\r\n        isUndefined: isUndefined,\r\n\r\n        isWindow: isWindow,\r\n\r\n        type: type\r\n    });\r\n\r\n});\ndefine('skylark-langx-types/main',[\r\n\t\"./types\"\r\n],function(types){\r\n\treturn types;\r\n});\ndefine('skylark-langx-types', ['skylark-langx-types/main'], function (main) { return main; });\n\ndefine('skylark-langx-numbers/numbers',[\r\n    \"skylark-langx-ns\",\r\n    \"skylark-langx-types\"\r\n],function(skylark,types){\r\n\tvar isObject = types.isObject,\r\n\t\tisSymbol = types.isSymbol;\r\n\r\n\tvar INFINITY = 1 / 0,\r\n\t    MAX_SAFE_INTEGER = 9007199254740991,\r\n\t    MAX_INTEGER = 1.7976931348623157e+308,\r\n\t    NAN = 0 / 0;\r\n\r\n\t/** Used to match leading and trailing whitespace. */\r\n\tvar reTrim = /^\\s+|\\s+$/g;\r\n\r\n\t/** Used to detect bad signed hexadecimal string values. */\r\n\tvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\r\n\r\n\t/** Used to detect binary string values. */\r\n\tvar reIsBinary = /^0b[01]+$/i;\r\n\r\n\t/** Used to detect octal string values. */\r\n\tvar reIsOctal = /^0o[0-7]+$/i;\r\n\r\n\t/** Used to detect unsigned integer values. */\r\n\tvar reIsUint = /^(?:0|[1-9]\\d*)$/;\r\n\r\n\t/** Built-in method references without a dependency on `root`. */\r\n\tvar freeParseInt = parseInt;\r\n\r\n\t/**\r\n\t * Converts `value` to a finite number.\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @since 4.12.0\r\n\t * @category Lang\r\n\t * @param {*} value The value to convert.\r\n\t * @returns {number} Returns the converted number.\r\n\t * @example\r\n\t *\r\n\t * _.toFinite(3.2);\r\n\t * // => 3.2\r\n\t *\r\n\t * _.toFinite(Number.MIN_VALUE);\r\n\t * // => 5e-324\r\n\t *\r\n\t * _.toFinite(Infinity);\r\n\t * // => 1.7976931348623157e+308\r\n\t *\r\n\t * _.toFinite('3.2');\r\n\t * // => 3.2\r\n\t */\r\n\tfunction toFinite(value) {\r\n\t  if (!value) {\r\n\t    return value === 0 ? value : 0;\r\n\t  }\r\n\t  value = toNumber(value);\r\n\t  if (value === INFINITY || value === -INFINITY) {\r\n\t    var sign = (value < 0 ? -1 : 1);\r\n\t    return sign * MAX_INTEGER;\r\n\t  }\r\n\t  return value === value ? value : 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts `value` to an integer.\r\n\t *\r\n\t * **Note:** This method is loosely based on\r\n\t * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @param {*} value The value to convert.\r\n\t * @returns {number} Returns the converted integer.\r\n\t * @example\r\n\t *\r\n\t * _.toInteger(3.2);\r\n\t * // => 3\r\n\t *\r\n\t * _.toInteger(Number.MIN_VALUE);\r\n\t * // => 0\r\n\t *\r\n\t * _.toInteger(Infinity);\r\n\t * // => 1.7976931348623157e+308\r\n\t *\r\n\t * _.toInteger('3.2');\r\n\t * // => 3\r\n\t */\r\n\tfunction toInteger(value) {\r\n\t  var result = toFinite(value),\r\n\t      remainder = result % 1;\r\n\r\n\t  return result === result ? (remainder ? result - remainder : result) : 0;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Converts `value` to a number.\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @since 4.0.0\r\n\t * @category Lang\r\n\t * @param {*} value The value to process.\r\n\t * @returns {number} Returns the number.\r\n\t * @example\r\n\t *\r\n\t * _.toNumber(3.2);\r\n\t * // => 3.2\r\n\t *\r\n\t * _.toNumber(Number.MIN_VALUE);\r\n\t * // => 5e-324\r\n\t *\r\n\t * _.toNumber(Infinity);\r\n\t * // => Infinity\r\n\t *\r\n\t * _.toNumber('3.2');\r\n\t * // => 3.2\r\n\t */\r\n\tfunction toNumber(value) {\r\n\t  if (typeof value == 'number') {\r\n\t    return value;\r\n\t  }\r\n\t  if (isSymbol(value)) {\r\n\t    return NAN;\r\n\t  }\r\n\t  if (isObject(value)) {\r\n\t    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\r\n\t    value = isObject(other) ? (other + '') : other;\r\n\t  }\r\n\t  if (typeof value != 'string') {\r\n\t    return value === 0 ? value : +value;\r\n\t  }\r\n\t  value = value.replace(reTrim, '');\r\n\t  var isBinary = reIsBinary.test(value);\r\n\t  return (isBinary || reIsOctal.test(value))\r\n\t    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\r\n\t    : (reIsBadHex.test(value) ? NAN : +value);\r\n\t}\r\n\r\n\treturn  skylark.attach(\"langx.numbers\",{\r\n\t\ttoFinite : toFinite,\r\n\t\ttoNumber : toNumber,\r\n\t\ttoInteger : toInteger\r\n\t});\r\n});\ndefine('skylark-langx-numbers/main',[\r\n\t\"./numbers\"\r\n],function(numbers){\r\n\treturn numbers;\r\n});\ndefine('skylark-langx-numbers', ['skylark-langx-numbers/main'], function (main) { return main; });\n\ndefine('skylark-langx-objects/objects',[\r\n    \"skylark-langx-ns/ns\",\r\n    \"skylark-langx-ns/_attach\",\r\n\t\"skylark-langx-types\",\r\n    \"skylark-langx-numbers\"\r\n],function(skylark,_attach,types,numbers){\r\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty,\r\n        slice = Array.prototype.slice,\r\n        isBoolean = types.isBoolean,\r\n        isFunction = types.isFunction,\r\n\t\tisObject = types.isObject,\r\n\t\tisPlainObject = types.isPlainObject,\r\n\t\tisArray = types.isArray,\r\n        isArrayLike = types.isArrayLike,\r\n        isString = types.isString,\r\n        toInteger = numbers.toInteger;\r\n\r\n     // An internal function for creating assigner functions.\r\n    function createAssigner(keysFunc, defaults) {\r\n        return function(obj) {\r\n          var length = arguments.length;\r\n          if (defaults) obj = Object(obj);  \r\n          if (length < 2 || obj == null) return obj;\r\n          for (var index = 1; index < length; index++) {\r\n            var source = arguments[index],\r\n                keys = keysFunc(source),\r\n                l = keys.length;\r\n            for (var i = 0; i < l; i++) {\r\n              var key = keys[i];\r\n              if (!defaults || obj[key] === void 0) obj[key] = source[key];\r\n            }\r\n          }\r\n          return obj;\r\n       };\r\n    }\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    var eq, deepEq;\r\n    var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\r\n\r\n    eq = function(a, b, aStack, bStack) {\r\n        // Identical objects are equal. `0 === -0`, but they aren't identical.\r\n        // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n        if (a === b) return a !== 0 || 1 / a === 1 / b;\r\n        // `null` or `undefined` only equal to itself (strict comparison).\r\n        if (a == null || b == null) return false;\r\n        // `NaN`s are equivalent, but non-reflexive.\r\n        if (a !== a) return b !== b;\r\n        // Exhaust primitive checks\r\n        var type = typeof a;\r\n        if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\r\n        return deepEq(a, b, aStack, bStack);\r\n    };\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    deepEq = function(a, b, aStack, bStack) {\r\n        // Unwrap any wrapped objects.\r\n        //if (a instanceof _) a = a._wrapped;\r\n        //if (b instanceof _) b = b._wrapped;\r\n        // Compare `[[Class]]` names.\r\n        var className = toString.call(a);\r\n        if (className !== toString.call(b)) return false;\r\n        switch (className) {\r\n            // Strings, numbers, regular expressions, dates, and booleans are compared by value.\r\n            case '[object RegExp]':\r\n            // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\r\n            case '[object String]':\r\n                // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n                // equivalent to `new String(\"5\")`.\r\n                return '' + a === '' + b;\r\n            case '[object Number]':\r\n                // `NaN`s are equivalent, but non-reflexive.\r\n                // Object(NaN) is equivalent to NaN.\r\n                if (+a !== +a) return +b !== +b;\r\n                // An `egal` comparison is performed for other numeric values.\r\n                return +a === 0 ? 1 / +a === 1 / b : +a === +b;\r\n            case '[object Date]':\r\n            case '[object Boolean]':\r\n                // Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n                // millisecond representations. Note that invalid dates with millisecond representations\r\n                // of `NaN` are not equivalent.\r\n                return +a === +b;\r\n            case '[object Symbol]':\r\n                return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\r\n        }\r\n\r\n        var areArrays = className === '[object Array]';\r\n        if (!areArrays) {\r\n            if (typeof a != 'object' || typeof b != 'object') return false;\r\n            // Objects with different constructors are not equivalent, but `Object`s or `Array`s\r\n            // from different frames are.\r\n            var aCtor = a.constructor, bCtor = b.constructor;\r\n            if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\r\n                               isFunction(bCtor) && bCtor instanceof bCtor)\r\n                          && ('constructor' in a && 'constructor' in b)) {\r\n                return false;\r\n            }\r\n        }\r\n        // Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n\r\n        // Initializing stack of traversed objects.\r\n        // It's done here since we only need them for objects and arrays comparison.\r\n        aStack = aStack || [];\r\n        bStack = bStack || [];\r\n        var length = aStack.length;\r\n        while (length--) {\r\n            // Linear search. Performance is inversely proportional to the number of\r\n            // unique nested structures.\r\n            if (aStack[length] === a) return bStack[length] === b;\r\n        }\r\n\r\n        // Add the first object to the stack of traversed objects.\r\n        aStack.push(a);\r\n        bStack.push(b);\r\n\r\n        // Recursively compare objects and arrays.\r\n        if (areArrays) {\r\n            // Compare array lengths to determine if a deep comparison is necessary.\r\n            length = a.length;\r\n            if (length !== b.length) return false;\r\n            // Deep compare the contents, ignoring non-numeric properties.\r\n            while (length--) {\r\n                if (!eq(a[length], b[length], aStack, bStack)) return false;\r\n            }\r\n        } else {\r\n            // Deep compare objects.\r\n            var keys = Object.keys(a), key;\r\n            length = keys.length;\r\n            // Ensure that both objects contain the same number of properties before comparing deep equality.\r\n            if (Object.keys(b).length !== length) return false;\r\n            while (length--) {\r\n                // Deep compare each member\r\n                key = keys[length];\r\n                if (!(b[key]!==undefined && eq(a[key], b[key], aStack, bStack))) return false;\r\n            }\r\n        }\r\n        // Remove the first object from the stack of traversed objects.\r\n        aStack.pop();\r\n        bStack.pop();\r\n        return true;\r\n    };\r\n\r\n    // Retrieve all the property names of an object.\r\n    function allKeys(obj) {\r\n        if (!isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function each(obj, callback) {\r\n        var length, key, i, undef, value;\r\n\r\n        if (obj) {\r\n            length = obj.length;\r\n\r\n            if (length === undef) {\r\n                // Loop object items\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        value = obj[key];\r\n                        if (callback.call(value, key, value) === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Loop array items\r\n                for (i = 0; i < length; i++) {\r\n                    value = obj[i];\r\n                    if (callback.call(value, i, value) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function extend(target) {\r\n        var deep, args = slice.call(arguments, 1);\r\n        if (typeof target == 'boolean') {\r\n            deep = target\r\n            target = args.shift()\r\n        }\r\n        if (args.length == 0) {\r\n            args = [target];\r\n            target = this;\r\n        }\r\n        args.forEach(function(arg) {\r\n            mixin(target, arg, deep);\r\n        });\r\n        return target;\r\n    }\r\n\r\n    // Retrieve the names of an object's own properties.\r\n    // Delegates to **ECMAScript 5**'s native `Object.keys`.\r\n    function keys(obj) {\r\n        if (isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) if (has(obj, key)) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function has(obj, path) {\r\n        if (!isArray(path)) {\r\n            return obj != null && hasOwnProperty.call(obj, path);\r\n        }\r\n        var length = path.length;\r\n        for (var i = 0; i < length; i++) {\r\n            var key = path[i];\r\n            if (obj == null || !hasOwnProperty.call(obj, key)) {\r\n                return false;\r\n            }\r\n            obj = obj[key];\r\n        }\r\n        return !!length;\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\r\n     * checked for a substring of `value`, otherwise\r\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\r\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\r\n     * the offset from the end of `collection`.\r\n     *\r\n     * @static\r\n     * @memberOf _\r\n     * @since 0.1.0\r\n     * @category Collection\r\n     * @param {Array|Object|string} collection The collection to inspect.\r\n     * @param {*} value The value to search for.\r\n     * @param {number} [fromIndex=0] The index to search from.\r\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\r\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\r\n     * @example\r\n     *\r\n     * _.includes([1, 2, 3], 1);\r\n     * // => true\r\n     *\r\n     * _.includes([1, 2, 3], 1, 2);\r\n     * // => false\r\n     *\r\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\r\n     * // => true\r\n     *\r\n     * _.includes('abcd', 'bc');\r\n     * // => true\r\n     */\r\n    function includes(collection, value, fromIndex, guard) {\r\n      collection = isArrayLike(collection) ? collection : values(collection);\r\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\r\n\r\n      var length = collection.length;\r\n      if (fromIndex < 0) {\r\n        fromIndex = nativeMax(length + fromIndex, 0);\r\n      }\r\n      return isString(collection)\r\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\r\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\r\n    }\r\n\r\n\r\n   // Perform a deep comparison to check if two objects are equal.\r\n    function isEqual(a, b) {\r\n        return eq(a, b);\r\n    }\r\n\r\n    // Returns whether an object has a given set of `key:value` pairs.\r\n    function isMatch(object, attrs) {\r\n        var keys = keys(attrs), length = keys.length;\r\n        if (object == null) return !length;\r\n        var obj = Object(object);\r\n        for (var i = 0; i < length; i++) {\r\n          var key = keys[i];\r\n          if (attrs[key] !== obj[key] || !(key in obj)) return false;\r\n        }\r\n        return true;\r\n    }    \r\n\r\n    function _mixin(target, source, deep, safe) {\r\n        for (var key in source) {\r\n            //if (!source.hasOwnProperty(key)) {\r\n            //    continue;\r\n            //}\r\n            if (safe && target[key] !== undefined) {\r\n                continue;\r\n            }\r\n            if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n                if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\r\n                    target[key] = {};\r\n                }\r\n                if (isArray(source[key]) && !isArray(target[key])) {\r\n                    target[key] = [];\r\n                }\r\n                _mixin(target[key], source[key], deep, safe);\r\n            } else if (source[key] !== undefined) {\r\n                target[key] = source[key]\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function _parseMixinArgs(args) {\r\n        var params = slice.call(arguments, 0),\r\n            target = params.shift(),\r\n            deep = false;\r\n        if (isBoolean(params[params.length - 1])) {\r\n            deep = params.pop();\r\n        }\r\n\r\n        return {\r\n            target: target,\r\n            sources: params,\r\n            deep: deep\r\n        };\r\n    }\r\n\r\n    function mixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, false);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n   // Return a copy of the object without the blacklisted properties.\r\n    function omit(obj, prop1,prop2) {\r\n        if (!obj) {\r\n            return null;\r\n        }\r\n        var result = mixin({},obj);\r\n        for(var i=1;i<arguments.length;i++) {\r\n            var pn = arguments[i];\r\n            if (pn in obj) {\r\n                delete result[pn];\r\n            }\r\n        }\r\n        return result;\r\n\r\n    }\r\n\r\n   // Return a copy of the object only containing the whitelisted properties.\r\n    function pick(obj,prop1,prop2) {\r\n        if (!obj) {\r\n            return null;\r\n        }\r\n        var result = {};\r\n        for(var i=1;i<arguments.length;i++) {\r\n            var pn = arguments[i];\r\n            if (pn in obj) {\r\n                result[pn] = obj[pn];\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function removeItem(items, item) {\r\n        if (isArray(items)) {\r\n            var idx = items.indexOf(item);\r\n            if (idx != -1) {\r\n                items.splice(idx, 1);\r\n            }\r\n        } else if (isPlainObject(items)) {\r\n            for (var key in items) {\r\n                if (items[key] == item) {\r\n                    delete items[key];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function result(obj, path, fallback) {\r\n        if (!isArray(path)) {\r\n            path = path.split(\".\");//[path]\r\n        };\r\n        var length = path.length;\r\n        if (!length) {\r\n          return isFunction(fallback) ? fallback.call(obj) : fallback;\r\n        }\r\n        for (var i = 0; i < length; i++) {\r\n          var prop = obj == null ? void 0 : obj[path[i]];\r\n          if (prop === void 0) {\r\n            prop = fallback;\r\n            i = length; // Ensure we don't continue iterating.\r\n          }\r\n          obj = isFunction(prop) ? prop.call(obj) : prop;\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    function safeMixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, true);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    // Retrieve the values of an object's properties.\r\n    function values(obj) {\r\n        var keys = allKeys(obj);\r\n        var length = keys.length;\r\n        var values = Array(length);\r\n        for (var i = 0; i < length; i++) {\r\n            values[i] = obj[keys[i]];\r\n        }\r\n        return values;\r\n    }\r\n\r\n    function clone( /*anything*/ src,checkCloneMethod) {\r\n        var copy;\r\n        if (src === undefined || src === null) {\r\n            copy = src;\r\n        } else if (checkCloneMethod && src.clone) {\r\n            copy = src.clone();\r\n        } else if (isArray(src)) {\r\n            copy = [];\r\n            for (var i = 0; i < src.length; i++) {\r\n                copy.push(clone(src[i]));\r\n            }\r\n        } else if (isPlainObject(src)) {\r\n            copy = {};\r\n            for (var key in src) {\r\n                copy[key] = clone(src[key]);\r\n            }\r\n        } else {\r\n            copy = src;\r\n        }\r\n\r\n        return copy;\r\n\r\n    }\r\n\r\n    return skylark.attach(\"langx.objects\",{\r\n        allKeys: allKeys,\r\n\r\n        attach : _attach,\r\n\r\n        clone: clone,\r\n\r\n        defaults : createAssigner(allKeys, true),\r\n\r\n        each : each,\r\n\r\n        extend : extend,\r\n\r\n        has: has,\r\n\r\n        isEqual: isEqual,   \r\n\r\n        includes: includes,\r\n\r\n        isMatch: isMatch,\r\n\r\n        keys: keys,\r\n\r\n        mixin: mixin,\r\n\r\n        omit: omit,\r\n\r\n        pick: pick,\r\n\r\n        removeItem: removeItem,\r\n\r\n        result : result,\r\n        \r\n        safeMixin: safeMixin,\r\n\r\n        values: values\r\n    });\r\n\r\n\r\n});\ndefine('skylark-langx-objects/main',[\r\n\t\"./objects\"\r\n],function(objects){\r\n\treturn objects;\r\n});\ndefine('skylark-langx-objects', ['skylark-langx-objects/main'], function (main) { return main; });\n\ndefine('skylark-langx-arrays/arrays',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\"\r\n],function(skylark,types,objects){\r\n  var filter = Array.prototype.filter,\r\n      find = Array.prototype.find,\r\n    isArrayLike = types.isArrayLike;\r\n\r\n    /**\r\n     * The base implementation of `_.findIndex` and `_.findLastIndex` without\r\n     * support for iteratee shorthands.\r\n     *\r\n     * @param {Array} array The array to inspect.\r\n     * @param {Function} predicate The function invoked per iteration.\r\n     * @param {number} fromIndex The index to search from.\r\n     * @param {boolean} [fromRight] Specify iterating from right to left.\r\n     * @returns {number} Returns the index of the matched value, else `-1`.\r\n     */\r\n    function baseFindIndex(array, predicate, fromIndex, fromRight) {\r\n      var length = array.length,\r\n          index = fromIndex + (fromRight ? 1 : -1);\r\n\r\n      while ((fromRight ? index-- : ++index < length)) {\r\n        if (predicate(array[index], index, array)) {\r\n          return index;\r\n        }\r\n      }\r\n      return -1;\r\n    }\r\n\r\n    /**\r\n     * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\r\n     *\r\n     * @param {Array} array The array to inspect.\r\n     * @param {*} value The value to search for.\r\n     * @param {number} fromIndex The index to search from.\r\n     * @returns {number} Returns the index of the matched value, else `-1`.\r\n     */\r\n    function baseIndexOf(array, value, fromIndex) {\r\n      if (value !== value) {\r\n        return baseFindIndex(array, baseIsNaN, fromIndex);\r\n      }\r\n      var index = fromIndex - 1,\r\n          length = array.length;\r\n\r\n      while (++index < length) {\r\n        if (array[index] === value) {\r\n          return index;\r\n        }\r\n      }\r\n      return -1;\r\n    }\r\n\r\n    /**\r\n     * The base implementation of `isNaN` without support for number objects.\r\n     *\r\n     * @private\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\r\n     */\r\n    function baseIsNaN(value) {\r\n      return value !== value;\r\n    }\r\n\r\n\r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n\r\n    function filter2(array,func) {\r\n      return filter.call(array,func);\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0; i < array.length; i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j < item.length; j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        objects.each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item);\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n       if (isArrayLike(obj) ) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n      }\r\n\r\n      // array of single index\r\n      return [ obj ];             \r\n    }\r\n\r\n\r\n    function forEach (arr, fn) {\r\n      if (arr.forEach) return arr.forEach(fn)\r\n      for (var i = 0; i < arr.length; i++) fn(arr[i], i);\r\n    }\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n\r\n    function merge( first, second ) {\r\n      var l = second.length,\r\n          i = first.length,\r\n          j = 0;\r\n\r\n      if ( typeof l === \"number\" ) {\r\n        for ( ; j < l; j++ ) {\r\n          first[ i++ ] = second[ j ];\r\n        }\r\n      } else {\r\n        while ( second[j] !== undefined ) {\r\n          first[ i++ ] = second[ j++ ];\r\n        }\r\n      }\r\n\r\n      first.length = i;\r\n\r\n      return first;\r\n    }\r\n\r\n    function reduce(array,callback,initialValue) {\r\n        return Array.prototype.reduce.call(array,callback,initialValue);\r\n    }\r\n\r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    function find2(array,func) {\r\n      return find.call(array,func);\r\n    }\r\n\r\n    return skylark.attach(\"langx.arrays\",{\r\n        baseFindIndex: baseFindIndex,\r\n\r\n        baseIndexOf : baseIndexOf,\r\n        \r\n        compact: compact,\r\n\r\n        first : function(items,n) {\r\n            if (n) {\r\n                return items.slice(0,n);\r\n            } else {\r\n                return items[0];\r\n            }\r\n        },\r\n\r\n        filter : filter2,\r\n\r\n        find : find2,\r\n        \r\n        flatten: flatten,\r\n\r\n        grep: grep,\r\n\r\n        inArray: inArray,\r\n\r\n        makeArray: makeArray,\r\n\r\n        merge : merge,\r\n\r\n        forEach : forEach,\r\n\r\n        map : map,\r\n        \r\n        reduce : reduce,\r\n\r\n        uniq : uniq\r\n\r\n    });\r\n});\ndefine('skylark-langx-arrays/main',[\r\n\t\"./arrays\"\r\n],function(arrays){\r\n\treturn arrays;\r\n});\ndefine('skylark-langx-arrays', ['skylark-langx-arrays/main'], function (main) { return main; });\n\ndefine('skylark-langx/arrays',[\r\n\t\"skylark-langx-arrays\"\r\n],function(arrays){\r\n  return arrays;\r\n});\ndefine('skylark-langx-klass/klass',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-arrays\",\r\n],function(skylark,types,objects,arrays){\r\n    var uniq = arrays.uniq,\r\n        has = objects.has,\r\n        mixin = objects.mixin,\r\n        isArray = types.isArray,\r\n        isDefined = types.isDefined;\r\n\r\n/* for reference \r\n function klass(props,parent) {\r\n    var ctor = function(){\r\n        this._construct();\r\n    };\r\n    ctor.prototype = props;\r\n    if (parent) {\r\n        ctor._proto_ = parent;\r\n        props.__proto__ = parent.prototype;\r\n    }\r\n    return ctor;\r\n}\r\n\r\n// Type some JavaScript code here.\r\nlet animal = klass({\r\n  _construct(){\r\n      this.name = this.name + \",hi\";\r\n  },\r\n    \r\n  name: \"Animal\",\r\n  eat() {         // [[HomeObject]] == animal\r\n    alert(`${this.name} eats.`);\r\n  }\r\n    \r\n    \r\n});\r\n\r\n\r\nlet rabbit = klass({\r\n  name: \"Rabbit\",\r\n  _construct(){\r\n      super._construct();\r\n  },\r\n  eat() {         // [[HomeObject]] == rabbit\r\n    super.eat();\r\n  }\r\n},animal);\r\n\r\nlet longEar = klass({\r\n  name: \"Long Ear\",\r\n  eat() {         // [[HomeObject]] == longEar\r\n    super.eat();\r\n  }\r\n},rabbit);\r\n*/\r\n    \r\n    function inherit(ctor, base) {\r\n        var f = function() {};\r\n        f.prototype = base.prototype;\r\n\r\n        ctor.prototype = new f();\r\n    }\r\n\r\n    var f1 = function() {\r\n        function extendClass(ctor, props, options) {\r\n            // Copy the properties to the prototype of the class.\r\n            var proto = ctor.prototype,\r\n                _super = ctor.superclass.prototype,\r\n                noOverrided = options && options.noOverrided,\r\n                overrides = options && options.overrides || {};\r\n\r\n            for (var name in props) {\r\n                if (name === \"constructor\") {\r\n                    continue;\r\n                }\r\n\r\n                // Check if we're overwriting an existing function\r\n                var prop = props[name];\r\n                if (typeof props[name] == \"function\") {\r\n                    proto[name] =  !prop._constructor && !noOverrided && typeof _super[name] == \"function\" ?\r\n                          (function(name, fn, superFn) {\r\n                            return function() {\r\n                                var tmp = this.overrided;\r\n\r\n                                // Add a new ._super() method that is the same method\r\n                                // but on the super-class\r\n                                this.overrided = superFn;\r\n\r\n                                // The method only need to be bound temporarily, so we\r\n                                // remove it when we're done executing\r\n                                var ret = fn.apply(this, arguments);\r\n\r\n                                this.overrided = tmp;\r\n\r\n                                return ret;\r\n                            };\r\n                        })(name, prop, _super[name]) :\r\n                        prop;\r\n                } else if (types.isPlainObject(prop) && prop!==null && (prop.get)) {\r\n                    Object.defineProperty(proto,name,prop);\r\n                } else {\r\n                    proto[name] = prop;\r\n                }\r\n            }\r\n            return ctor;\r\n        }\r\n\r\n        function serialMixins(ctor,mixins) {\r\n            var result = [];\r\n\r\n            mixins.forEach(function(mixin){\r\n                if (has(mixin,\"__mixins__\")) {\r\n                     throw new Error(\"nested mixins\");\r\n                }\r\n                var clss = [];\r\n                while (mixin) {\r\n                    clss.unshift(mixin);\r\n                    mixin = mixin.superclass;\r\n                }\r\n                result = result.concat(clss);\r\n            });\r\n\r\n            result = uniq(result);\r\n\r\n            result = result.filter(function(mixin){\r\n                var cls = ctor;\r\n                while (cls) {\r\n                    if (mixin === cls) {\r\n                        return false;\r\n                    }\r\n                    if (has(cls,\"__mixins__\")) {\r\n                        var clsMixines = cls[\"__mixins__\"];\r\n                        for (var i=0; i<clsMixines.length;i++) {\r\n                            if (clsMixines[i]===mixin) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                    cls = cls.superclass;\r\n                }\r\n                return true;\r\n            });\r\n\r\n            if (result.length>0) {\r\n                return result;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        function mergeMixins(ctor,mixins) {\r\n            var newCtor =ctor;\r\n            for (var i=0;i<mixins.length;i++) {\r\n                var xtor = new Function();\r\n                xtor.prototype = Object.create(newCtor.prototype);\r\n                xtor.__proto__ = newCtor;\r\n                xtor.superclass = null;\r\n                mixin(xtor.prototype,mixins[i].prototype);\r\n                xtor.prototype.__mixin__ = mixins[i];\r\n                newCtor = xtor;\r\n            }\r\n\r\n            return newCtor;\r\n        }\r\n\r\n        function _constructor ()  {\r\n            if (this._construct) {\r\n                return this._construct.apply(this, arguments);\r\n            } else  if (this.init) {\r\n                return this.init.apply(this, arguments);\r\n            }\r\n        }\r\n\r\n        return function createClass(props, parent, mixins,options) {\r\n            if (isArray(parent)) {\r\n                options = mixins;\r\n                mixins = parent;\r\n                parent = null;\r\n            }\r\n            parent = parent || Object;\r\n\r\n            if (isDefined(mixins) && !isArray(mixins)) {\r\n                options = mixins;\r\n                mixins = false;\r\n            }\r\n\r\n            var innerParent = parent;\r\n\r\n            if (mixins) {\r\n                mixins = serialMixins(innerParent,mixins);\r\n            }\r\n\r\n            if (mixins) {\r\n                innerParent = mergeMixins(innerParent,mixins);\r\n            }\r\n\r\n            var klassName = props.klassName || \"\",\r\n                ctor = new Function(\r\n                    \"return function \" + klassName + \"() {\" +\r\n                    \"var inst = this,\" +\r\n                    \" ctor = arguments.callee;\" +\r\n                    \"if (!(inst instanceof ctor)) {\" +\r\n                    \"inst = Object.create(ctor.prototype);\" +\r\n                    \"}\" +\r\n                    \"return ctor._constructor.apply(inst, arguments) || inst;\" + \r\n                    \"}\"\r\n                )();\r\n\r\n\r\n            // Populate our constructed prototype object\r\n            ctor.prototype = Object.create(innerParent.prototype);\r\n\r\n            // Enforce the constructor to be what we expect\r\n            ctor.prototype.constructor = ctor;\r\n            ctor.superclass = parent;\r\n\r\n            // And make this class extendable\r\n            ctor.__proto__ = innerParent;\r\n\r\n\r\n            if (!ctor._constructor) {\r\n                ctor._constructor = _constructor;\r\n            } \r\n\r\n            if (mixins) {\r\n                ctor.__mixins__ = mixins;\r\n            }\r\n\r\n            if (!ctor.partial) {\r\n                ctor.partial = function(props, options) {\r\n                    return extendClass(this, props, options);\r\n                };\r\n            }\r\n            if (!ctor.inherit) {\r\n                ctor.inherit = function(props, mixins,options) {\r\n                    return createClass(props, this, mixins,options);\r\n                };\r\n            }\r\n\r\n            ctor.partial(props, options);\r\n\r\n            return ctor;\r\n        };\r\n    }\r\n\r\n    var createClass = f1();\r\n\r\n    return skylark.attach(\"langx.klass\",createClass);\r\n});\ndefine('skylark-langx-klass/main',[\r\n\t\"./klass\"\r\n],function(klass){\r\n\treturn klass;\r\n});\ndefine('skylark-langx-klass', ['skylark-langx-klass/main'], function (main) { return main; });\n\ndefine('skylark-langx/klass',[\r\n    \"skylark-langx-klass\"\r\n],function(klass){\r\n    return klass;\r\n});\ndefine('skylark-langx/ArrayStore',[\r\n    \"./klass\"\r\n],function(klass){\r\n    var SimpleQueryEngine = function(query, options){\r\n        // summary:\r\n        //      Simple query engine that matches using filter functions, named filter\r\n        //      functions or objects by name-value on a query object hash\r\n        //\r\n        // description:\r\n        //      The SimpleQueryEngine provides a way of getting a QueryResults through\r\n        //      the use of a simple object hash as a filter.  The hash will be used to\r\n        //      match properties on data objects with the corresponding value given. In\r\n        //      other words, only exact matches will be returned.\r\n        //\r\n        //      This function can be used as a template for more complex query engines;\r\n        //      for example, an engine can be created that accepts an object hash that\r\n        //      contains filtering functions, or a string that gets evaluated, etc.\r\n        //\r\n        //      When creating a new dojo.store, simply set the store's queryEngine\r\n        //      field as a reference to this function.\r\n        //\r\n        // query: Object\r\n        //      An object hash with fields that may match fields of items in the store.\r\n        //      Values in the hash will be compared by normal == operator, but regular expressions\r\n        //      or any object that provides a test() method are also supported and can be\r\n        //      used to match strings by more complex expressions\r\n        //      (and then the regex's or object's test() method will be used to match values).\r\n        //\r\n        // options: dojo/store/api/Store.QueryOptions?\r\n        //      An object that contains optional information such as sort, start, and count.\r\n        //\r\n        // returns: Function\r\n        //      A function that caches the passed query under the field \"matches\".  See any\r\n        //      of the \"query\" methods on dojo.stores.\r\n        //\r\n        // example:\r\n        //      Define a store with a reference to this engine, and set up a query method.\r\n        //\r\n        //  |   var myStore = function(options){\r\n        //  |       //  ...more properties here\r\n        //  |       this.queryEngine = SimpleQueryEngine;\r\n        //  |       //  define our query method\r\n        //  |       this.query = function(query, options){\r\n        //  |           return QueryResults(this.queryEngine(query, options)(this.data));\r\n        //  |       };\r\n        //  |   };\r\n\r\n        // create our matching query function\r\n        switch(typeof query){\r\n            default:\r\n                throw new Error(\"Can not query with a \" + typeof query);\r\n            case \"object\": case \"undefined\":\r\n                var queryObject = query;\r\n                query = function(object){\r\n                    for(var key in queryObject){\r\n                        var required = queryObject[key];\r\n                        if(required && required.test){\r\n                            // an object can provide a test method, which makes it work with regex\r\n                            if(!required.test(object[key], object)){\r\n                                return false;\r\n                            }\r\n                        }else if(required != object[key]){\r\n                            return false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                };\r\n                break;\r\n            case \"string\":\r\n                // named query\r\n                if(!this[query]){\r\n                    throw new Error(\"No filter function \" + query + \" was found in store\");\r\n                }\r\n                query = this[query];\r\n                // fall through\r\n            case \"function\":\r\n                // fall through\r\n        }\r\n        \r\n        function filter(arr, callback, thisObject){\r\n            // summary:\r\n            //      Returns a new Array with those items from arr that match the\r\n            //      condition implemented by callback.\r\n            // arr: Array\r\n            //      the array to iterate over.\r\n            // callback: Function|String\r\n            //      a function that is invoked with three arguments (item,\r\n            //      index, array). The return of this function is expected to\r\n            //      be a boolean which determines whether the passed-in item\r\n            //      will be included in the returned array.\r\n            // thisObject: Object?\r\n            //      may be used to scope the call to callback\r\n            // returns: Array\r\n            // description:\r\n            //      This function corresponds to the JavaScript 1.6 Array.filter() method, with one difference: when\r\n            //      run over sparse arrays, this implementation passes the \"holes\" in the sparse array to\r\n            //      the callback function with a value of undefined. JavaScript 1.6's filter skips the holes in the sparse array.\r\n            //      For more details, see:\r\n            //      https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter\r\n            // example:\r\n            //  | // returns [2, 3, 4]\r\n            //  | array.filter([1, 2, 3, 4], function(item){ return item>1; });\r\n\r\n            // TODO: do we need \"Ctr\" here like in map()?\r\n            var i = 0, l = arr && arr.length || 0, out = [], value;\r\n            if(l && typeof arr == \"string\") arr = arr.split(\"\");\r\n            if(typeof callback == \"string\") callback = cache[callback] || buildFn(callback);\r\n            if(thisObject){\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback.call(thisObject, value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }else{\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback(value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }\r\n            return out; // Array\r\n        }\r\n\r\n        function execute(array){\r\n            // execute the whole query, first we filter\r\n            var results = filter(array, query);\r\n            // next we sort\r\n            var sortSet = options && options.sort;\r\n            if(sortSet){\r\n                results.sort(typeof sortSet == \"function\" ? sortSet : function(a, b){\r\n                    for(var sort, i=0; sort = sortSet[i]; i++){\r\n                        var aValue = a[sort.attribute];\r\n                        var bValue = b[sort.attribute];\r\n                        // valueOf enables proper comparison of dates\r\n                        aValue = aValue != null ? aValue.valueOf() : aValue;\r\n                        bValue = bValue != null ? bValue.valueOf() : bValue;\r\n                        if (aValue != bValue){\r\n                            // modified by lwf 2016/07/09\r\n                            //return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                            return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                        }\r\n                    }\r\n                    return 0;\r\n                });\r\n            }\r\n            // now we paginate\r\n            if(options && (options.start || options.count)){\r\n                var total = results.length;\r\n                results = results.slice(options.start || 0, (options.start || 0) + (options.count || Infinity));\r\n                results.total = total;\r\n            }\r\n            return results;\r\n        }\r\n        execute.matches = query;\r\n        return execute;\r\n    };\r\n\r\n    var QueryResults = function(results){\r\n        // summary:\r\n        //      A function that wraps the results of a store query with additional\r\n        //      methods.\r\n        // description:\r\n        //      QueryResults is a basic wrapper that allows for array-like iteration\r\n        //      over any kind of returned data from a query.  While the simplest store\r\n        //      will return a plain array of data, other stores may return deferreds or\r\n        //      promises; this wrapper makes sure that *all* results can be treated\r\n        //      the same.\r\n        //\r\n        //      Additional methods include `forEach`, `filter` and `map`.\r\n        // results: Array|dojo/promise/Promise\r\n        //      The result set as an array, or a promise for an array.\r\n        // returns:\r\n        //      An array-like object that can be used for iterating over.\r\n        // example:\r\n        //      Query a store and iterate over the results.\r\n        //\r\n        //  |   store.query({ prime: true }).forEach(function(item){\r\n        //  |       //  do something\r\n        //  |   });\r\n\r\n        if(!results){\r\n            return results;\r\n        }\r\n\r\n        var isPromise = !!results.then;\r\n        // if it is a promise it may be frozen\r\n        if(isPromise){\r\n            results = Object.delegate(results);\r\n        }\r\n        function addIterativeMethod(method){\r\n            // Always add the iterative methods so a QueryResults is\r\n            // returned whether the environment is ES3 or ES5\r\n            results[method] = function(){\r\n                var args = arguments;\r\n                var result = Deferred.when(results, function(results){\r\n                    //Array.prototype.unshift.call(args, results);\r\n                    return QueryResults(Array.prototype[method].apply(results, args));\r\n                });\r\n                // forEach should only return the result of when()\r\n                // when we're wrapping a promise\r\n                if(method !== \"forEach\" || isPromise){\r\n                    return result;\r\n                }\r\n            };\r\n        }\r\n\r\n        addIterativeMethod(\"forEach\");\r\n        addIterativeMethod(\"filter\");\r\n        addIterativeMethod(\"map\");\r\n        if(results.total == null){\r\n            results.total = Deferred.when(results, function(results){\r\n                return results.length;\r\n            });\r\n        }\r\n        return results; // Object\r\n    };\r\n\r\n    var ArrayStore = klass({\r\n        \"klassName\": \"ArrayStore\",\r\n\r\n        \"queryEngine\": SimpleQueryEngine,\r\n        \r\n        \"idProperty\": \"id\",\r\n\r\n\r\n        get: function(id){\r\n            // summary:\r\n            //      Retrieves an object by its identity\r\n            // id: Number\r\n            //      The identity to use to lookup the object\r\n            // returns: Object\r\n            //      The object in the store that matches the given id.\r\n            return this.data[this.index[id]];\r\n        },\r\n\r\n        getIdentity: function(object){\r\n            return object[this.idProperty];\r\n        },\r\n\r\n        put: function(object, options){\r\n            var data = this.data,\r\n                index = this.index,\r\n                idProperty = this.idProperty;\r\n            var id = object[idProperty] = (options && \"id\" in options) ? options.id : idProperty in object ? object[idProperty] : Math.random();\r\n            if(id in index){\r\n                // object exists\r\n                if(options && options.overwrite === false){\r\n                    throw new Error(\"Object already exists\");\r\n                }\r\n                // replace the entry in data\r\n                data[index[id]] = object;\r\n            }else{\r\n                // add the new object\r\n                index[id] = data.push(object) - 1;\r\n            }\r\n            return id;\r\n        },\r\n\r\n        add: function(object, options){\r\n            (options = options || {}).overwrite = false;\r\n            // call put with overwrite being false\r\n            return this.put(object, options);\r\n        },\r\n\r\n        remove: function(id){\r\n            // summary:\r\n            //      Deletes an object by its identity\r\n            // id: Number\r\n            //      The identity to use to delete the object\r\n            // returns: Boolean\r\n            //      Returns true if an object was removed, falsy (undefined) if no object matched the id\r\n            var index = this.index;\r\n            var data = this.data;\r\n            if(id in index){\r\n                data.splice(index[id], 1);\r\n                // now we have to reindex\r\n                this.setData(data);\r\n                return true;\r\n            }\r\n        },\r\n        query: function(query, options){\r\n            // summary:\r\n            //      Queries the store for objects.\r\n            // query: Object\r\n            //      The query to use for retrieving objects from the store.\r\n            // options: dojo/store/api/Store.QueryOptions?\r\n            //      The optional arguments to apply to the resultset.\r\n            // returns: dojo/store/api/Store.QueryResults\r\n            //      The results of the query, extended with iterative methods.\r\n            //\r\n            // example:\r\n            //      Given the following store:\r\n            //\r\n            //  |   var store = new Memory({\r\n            //  |       data: [\r\n            //  |           {id: 1, name: \"one\", prime: false },\r\n            //  |           {id: 2, name: \"two\", even: true, prime: true},\r\n            //  |           {id: 3, name: \"three\", prime: true},\r\n            //  |           {id: 4, name: \"four\", even: true, prime: false},\r\n            //  |           {id: 5, name: \"five\", prime: true}\r\n            //  |       ]\r\n            //  |   });\r\n            //\r\n            //  ...find all items where \"prime\" is true:\r\n            //\r\n            //  |   var results = store.query({ prime: true });\r\n            //\r\n            //  ...or find all items where \"even\" is true:\r\n            //\r\n            //  |   var results = store.query({ even: true });\r\n            return QueryResults(this.queryEngine(query, options)(this.data));\r\n        },\r\n\r\n        setData: function(data){\r\n            // summary:\r\n            //      Sets the given data as the source for this store, and indexes it\r\n            // data: Object[]\r\n            //      An array of objects to use as the source of data.\r\n            if(data.items){\r\n                // just for convenience with the data format IFRS expects\r\n                this.idProperty = data.identifier || this.idProperty;\r\n                data = this.data = data.items;\r\n            }else{\r\n                this.data = data;\r\n            }\r\n            this.index = {};\r\n            for(var i = 0, l = data.length; i < l; i++){\r\n                this.index[data[i][this.idProperty]] = i;\r\n            }\r\n        },\r\n\r\n        init: function(options) {\r\n            for(var i in options){\r\n                this[i] = options[i];\r\n            }\r\n            this.setData(this.data || []);\r\n        }\r\n\r\n    });\r\n\r\n\treturn ArrayStore;\r\n});\ndefine('skylark-langx-aspect/aspect',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n\r\n  var undefined, nextId = 0;\r\n    function advise(dispatcher, type, advice, receiveArguments){\r\n        var previous = dispatcher[type];\r\n        var around = type == \"around\";\r\n        var signal;\r\n        if(around){\r\n            var advised = advice(function(){\r\n                return previous.advice(this, arguments);\r\n            });\r\n            signal = {\r\n                remove: function(){\r\n                    if(advised){\r\n                        advised = dispatcher = advice = null;\r\n                    }\r\n                },\r\n                advice: function(target, args){\r\n                    return advised ?\r\n                        advised.apply(target, args) :  // called the advised function\r\n                        previous.advice(target, args); // cancelled, skip to next one\r\n                }\r\n            };\r\n        }else{\r\n            // create the remove handler\r\n            signal = {\r\n                remove: function(){\r\n                    if(signal.advice){\r\n                        var previous = signal.previous;\r\n                        var next = signal.next;\r\n                        if(!next && !previous){\r\n                            delete dispatcher[type];\r\n                        }else{\r\n                            if(previous){\r\n                                previous.next = next;\r\n                            }else{\r\n                                dispatcher[type] = next;\r\n                            }\r\n                            if(next){\r\n                                next.previous = previous;\r\n                            }\r\n                        }\r\n\r\n                        // remove the advice to signal that this signal has been removed\r\n                        dispatcher = advice = signal.advice = null;\r\n                    }\r\n                },\r\n                id: nextId++,\r\n                advice: advice,\r\n                receiveArguments: receiveArguments\r\n            };\r\n        }\r\n        if(previous && !around){\r\n            if(type == \"after\"){\r\n                // add the listener to the end of the list\r\n                // note that we had to change this loop a little bit to workaround a bizarre IE10 JIT bug\r\n                while(previous.next && (previous = previous.next)){}\r\n                previous.next = signal;\r\n                signal.previous = previous;\r\n            }else if(type == \"before\"){\r\n                // add to beginning\r\n                dispatcher[type] = signal;\r\n                signal.next = previous;\r\n                previous.previous = signal;\r\n            }\r\n        }else{\r\n            // around or first one just replaces\r\n            dispatcher[type] = signal;\r\n        }\r\n        return signal;\r\n    }\r\n    function aspect(type){\r\n        return function(target, methodName, advice, receiveArguments){\r\n            var existing = target[methodName], dispatcher;\r\n            if(!existing || existing.target != target){\r\n                // no dispatcher in place\r\n                target[methodName] = dispatcher = function(){\r\n                    var executionId = nextId;\r\n                    // before advice\r\n                    var args = arguments;\r\n                    var before = dispatcher.before;\r\n                    while(before){\r\n                        args = before.advice.apply(this, args) || args;\r\n                        before = before.next;\r\n                    }\r\n                    // around advice\r\n                    if(dispatcher.around){\r\n                        var results = dispatcher.around.advice(this, args);\r\n                    }\r\n                    // after advice\r\n                    var after = dispatcher.after;\r\n                    while(after && after.id < executionId){\r\n                        if(after.receiveArguments){\r\n                            var newResults = after.advice.apply(this, args);\r\n                            // change the return value only if a new value was returned\r\n                            results = newResults === undefined ? results : newResults;\r\n                        }else{\r\n                            results = after.advice.call(this, results, args);\r\n                        }\r\n                        after = after.next;\r\n                    }\r\n                    return results;\r\n                };\r\n                if(existing){\r\n                    dispatcher.around = {advice: function(target, args){\r\n                        return existing.apply(target, args);\r\n                    }};\r\n                }\r\n                dispatcher.target = target;\r\n            }\r\n            var results = advise((dispatcher || existing), type, advice, receiveArguments);\r\n            advice = null;\r\n            return results;\r\n        };\r\n    }\r\n\r\n    return skylark.attach(\"langx.aspect\",{\r\n        after: aspect(\"after\"),\r\n \r\n        around: aspect(\"around\"),\r\n        \r\n        before: aspect(\"before\")\r\n    });\r\n});\ndefine('skylark-langx-aspect/main',[\r\n\t\"./aspect\"\r\n],function(aspect){\r\n\treturn aspect;\r\n});\ndefine('skylark-langx-aspect', ['skylark-langx-aspect/main'], function (main) { return main; });\n\ndefine('skylark-langx/aspect',[\r\n    \"skylark-langx-aspect\"\r\n],function(aspect){\r\n  return aspect;\r\n});\ndefine('skylark-langx-funcs/funcs',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\"\r\n],function(skylark,types,objects){\r\n\tvar mixin = objects.mixin,\r\n        slice = Array.prototype.slice,\r\n        isFunction = types.isFunction,\r\n        isString = types.isString;\r\n\r\n    function defer(fn) {\r\n        if (requestAnimationFrame) {\r\n            requestAnimationFrame(fn);\r\n        } else {\r\n            setTimeoutout(fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function noop() {\r\n    }\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n    function debounce(fn, wait) {\r\n        var timeout;\r\n        return function () {\r\n            var context = this, args = arguments;\r\n            var later = function () {\r\n                timeout = null;\r\n                fn.apply(context, args);\r\n            };\r\n            if (timeout) clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n   \r\n    var delegate = (function() {\r\n        // boodman/crockford delegation w/ cornford optimization\r\n        function TMP() {}\r\n        return function(obj, props) {\r\n            TMP.prototype = obj;\r\n            var tmp = new TMP();\r\n            TMP.prototype = null;\r\n            if (props) {\r\n                mixin(tmp, props);\r\n            }\r\n            return tmp; // Object\r\n        };\r\n    })();\r\n\r\n\r\n    // By default, Underscore uses ERB-style template delimiters, change the\r\n    // following template settings to use alternative delimiters.\r\n    var templateSettings = {\r\n        evaluate: /<%([\\s\\S]+?)%>/g,\r\n        interpolate: /<%=([\\s\\S]+?)%>/g,\r\n        escape: /<%-([\\s\\S]+?)%>/g\r\n    };\r\n\r\n    // When customizing `templateSettings`, if you don't want to define an\r\n    // interpolation, evaluation or escaping regex, we need one that is\r\n    // guaranteed not to match.\r\n    var noMatch = /(.)^/;\r\n\r\n\r\n    // Certain characters need to be escaped so that they can be put into a\r\n    // string literal.\r\n    var escapes = {\r\n      \"'\":      \"'\",\r\n      '\\\\':     '\\\\',\r\n      '\\r':     'r',\r\n      '\\n':     'n',\r\n      '\\t':     't',\r\n      '\\u2028': 'u2028',\r\n      '\\u2029': 'u2029'\r\n    };\r\n\r\n    var escaper = /\\\\|'|\\r|\\n|\\t|\\u2028|\\u2029/g;\r\n\r\n\r\n    function template(text, data, settings) {\r\n        var render;\r\n        settings = objects.defaults({}, settings,templateSettings);\r\n\r\n        // Combine delimiters into one regular expression via alternation.\r\n        var matcher = RegExp([\r\n          (settings.escape || noMatch).source,\r\n          (settings.interpolate || noMatch).source,\r\n          (settings.evaluate || noMatch).source\r\n        ].join('|') + '|$', 'g');\r\n\r\n        // Compile the template source, escaping string literals appropriately.\r\n        var index = 0;\r\n        var source = \"__p+='\";\r\n        text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\r\n          source += text.slice(index, offset)\r\n              .replace(escaper, function(match) { return '\\\\' + escapes[match]; });\r\n\r\n          if (escape) {\r\n            source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\r\n          }\r\n          if (interpolate) {\r\n            source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\r\n          }\r\n          if (evaluate) {\r\n            source += \"';\\n\" + evaluate + \"\\n__p+='\";\r\n          }\r\n          index = offset + match.length;\r\n          return match;\r\n        });\r\n        source += \"';\\n\";\r\n\r\n        // If a variable is not specified, place data values in local scope.\r\n        if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\r\n\r\n        source = \"var __t,__p='',__j=Array.prototype.join,\" +\r\n          \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\r\n          source + 'return __p;\\n';\r\n\r\n        try {\r\n          render = new Function(settings.variable || 'obj', '_', source);\r\n        } catch (e) {\r\n          e.source = source;\r\n          throw e;\r\n        }\r\n\r\n        if (data) {\r\n          return render(data,this)\r\n        }\r\n        var template = proxy(function(data) {\r\n          return render.call(this, data,this);\r\n        },this);\r\n\r\n        // Provide the compiled source as a convenience for precompilation.\r\n        var argument = settings.variable || 'obj';\r\n        template.source = 'function(' + argument + '){\\n' + source + '}';\r\n\r\n        return template;\r\n    }\r\n\r\n\r\n    /**\r\n     * Creates a function that negates the result of the predicate `func`. The\r\n     * `func` predicate is invoked with the `this` binding and arguments of the\r\n     * created function.\r\n     * @category Function\r\n     * @param {Function} predicate The predicate to negate.\r\n     * @returns {Function} Returns the new negated function.\r\n     * @example\r\n     *\r\n     * function isEven(n) {\r\n     *   return n % 2 == 0\r\n     * }\r\n     *\r\n     * filter([1, 2, 3, 4, 5, 6], negate(isEven))\r\n     * // => [1, 3, 5]\r\n     */\r\n    function negate(predicate) {\r\n      if (typeof predicate !== 'function') {\r\n        throw new TypeError('Expected a function')\r\n      }\r\n      return function(...args) {\r\n        return !predicate.apply(this, args)\r\n      }\r\n    }\r\n\r\n\r\n    return skylark.attach(\"langx.funcs\",{\r\n        bind : proxy,\r\n        \r\n        debounce: debounce,\r\n\r\n        delegate: delegate,\r\n\r\n        defer: defer,\r\n\r\n        negate: negate,\r\n\r\n        noop : noop,\r\n\r\n        proxy: proxy,\r\n\r\n        returnTrue: function() {\r\n            return true;\r\n        },\r\n\r\n        returnFalse: function() {\r\n            return false;\r\n        },\r\n\r\n        templateSettings : templateSettings,\r\n        template : template\r\n    });\r\n});\ndefine('skylark-langx-funcs/main',[\r\n\t\"./funcs\"\r\n],function(funcs){\r\n\treturn funcs;\r\n});\ndefine('skylark-langx-funcs', ['skylark-langx-funcs/main'], function (main) { return main; });\n\ndefine('skylark-langx-async/Deferred',[\r\n    \"skylark-langx-arrays\",\r\n\t\"skylark-langx-funcs\",\r\n    \"skylark-langx-objects\"\r\n],function(arrays,funcs,objects){\r\n    \"use strict\";\r\n\r\n    var slice = Array.prototype.slice,\r\n        proxy = funcs.proxy,\r\n        makeArray = arrays.makeArray,\r\n        result = objects.result,\r\n        mixin = objects.mixin;\r\n\r\n    mixin(Promise.prototype,{\r\n        always: function(handler) {\r\n            //this.done(handler);\r\n            //this.fail(handler);\r\n            this.then(handler,handler);\r\n            return this;\r\n        },\r\n        done : function() {\r\n            for (var i = 0;i<arguments.length;i++) {\r\n                this.then(arguments[i]);\r\n            }\r\n            return this;\r\n        },\r\n        fail : function(handler) { \r\n            //return mixin(Promise.prototype.catch.call(this,handler),added);\r\n            //return this.then(null,handler);\r\n            this.catch(handler);\r\n            return this;\r\n         }\r\n    });\r\n\r\n\r\n    var Deferred = function() {\r\n        var self = this,\r\n            p = this.promise = makePromise2(new Promise(function(resolve, reject) {\r\n                self._resolve = resolve;\r\n                self._reject = reject;\r\n            }));\r\n\r\n        //wrapPromise(p,self);\r\n\r\n        //this[PGLISTENERS] = [];\r\n        //this[PGNOTIFIES] = [];\r\n\r\n        //this.resolve = Deferred.prototype.resolve.bind(this);\r\n        //this.reject = Deferred.prototype.reject.bind(this);\r\n        //this.progress = Deferred.prototype.progress.bind(this);\r\n\r\n    };\r\n\r\n   \r\n    function makePromise2(promise) {\r\n        // Don't modify any promise that has been already modified.\r\n        if (promise.isResolved) return promise;\r\n\r\n        // Set initial state\r\n        var isPending = true;\r\n        var isRejected = false;\r\n        var isResolved = false;\r\n\r\n        // Observe the promise, saving the fulfillment in a closure scope.\r\n        var result = promise.then(\r\n            function(v) {\r\n                isResolved = true;\r\n                isPending = false;\r\n                return v; \r\n            }, \r\n            function(e) {\r\n                isRejected = true;\r\n                isPending = false;\r\n                throw e; \r\n            }\r\n        );\r\n\r\n        result.isResolved = function() { return isResolved; };\r\n        result.isPending = function() { return isPending; };\r\n        result.isRejected = function() { return isRejected; };\r\n\r\n        result.state = function() {\r\n            if (isResolved) {\r\n                return 'resolved';\r\n            }\r\n            if (isRejected) {\r\n                return 'rejected';\r\n            }\r\n            return 'pending';\r\n        };\r\n\r\n        var notified = [],\r\n            listeners = [];\r\n\r\n          \r\n        result.then = function(onResolved,onRejected,onProgress) {\r\n            if (onProgress) {\r\n                this.progress(onProgress);\r\n            }\r\n            return makePromise2(Promise.prototype.then.call(this,\r\n                onResolved && function(args) {\r\n                    if (args && args.__ctx__ !== undefined) {\r\n                        return onResolved.apply(args.__ctx__,args);\r\n                    } else {\r\n                        return onResolved(args);\r\n                    }\r\n                },\r\n                onRejected && function(args){\r\n                    if (args && args.__ctx__ !== undefined) {\r\n                        return onRejected.apply(args.__ctx__,args);\r\n                    } else {\r\n                        return onRejected(args);\r\n                    }\r\n                }\r\n            ));\r\n        };\r\n\r\n        result.progress = function(handler) {\r\n            notified.forEach(function (value) {\r\n                handler(value);\r\n            });\r\n            listeners.push(handler);\r\n            return this;\r\n        };\r\n\r\n        result.pipe = result.then;\r\n\r\n        result.notify = function(value) {\r\n            try {\r\n                notified.push(value);\r\n\r\n                return listeners.forEach(function (listener) {\r\n                    return listener(value);\r\n                });\r\n            } catch (error) {\r\n            this.reject(error);\r\n            }\r\n            return this;\r\n        };\r\n\r\n        return result;\r\n    }\r\n\r\n \r\n    Deferred.prototype.resolve = function(value) {\r\n        var args = slice.call(arguments);\r\n        return this.resolveWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.resolveWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._resolve(args);\r\n        this._resolved = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.notify = function(value) {\r\n        var p = result(this,\"promise\");\r\n        p.notify(value);\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        var args = slice.call(arguments);\r\n        return this.rejectWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.rejectWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._reject(args);\r\n        this._rejected = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.isResolved = function() {\r\n        var p = result(this,\"promise\");\r\n        return p.isResolved();\r\n    };\r\n\r\n    Deferred.prototype.isRejected = function() {\r\n        var p = result(this,\"promise\");\r\n        return p.isRejected();\r\n    };\r\n\r\n    Deferred.prototype.state = function() {\r\n        var p = result(this,\"promise\");\r\n        return p.state();\r\n    };\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        var p = result(this,\"promise\");\r\n        return p.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.prototype.progress = function(progback){\r\n        var p = result(this,\"promise\");\r\n        return p.progress(progback);\r\n    };\r\n   \r\n    Deferred.prototype.catch = function(errback) {\r\n        var p = result(this,\"promise\");\r\n        return p.catch(errback);\r\n    };\r\n\r\n\r\n    Deferred.prototype.always  = function() {\r\n        var p = result(this,\"promise\");\r\n        p.always.apply(p,arguments);\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.done  = function() {\r\n        var p = result(this,\"promise\");\r\n        p.done.apply(p,arguments);\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.fail = function(errback) {\r\n        var p = result(this,\"promise\");\r\n        p.fail(errback);\r\n        return this;\r\n    };\r\n\r\n\r\n    Deferred.all = function(array) {\r\n        //return wrapPromise(Promise.all(array));\r\n        var d = new Deferred();\r\n        Promise.all(array).then(d.resolve.bind(d),d.reject.bind(d));\r\n        return result(d,\"promise\");\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return makePromise2(Promise.race(array));\r\n    };\r\n\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n        } else if (!nativePromise) {\r\n            var deferred = new Deferred(valueOrPromise.cancel);\r\n            valueOrPromise.then(proxy(deferred.resolve,deferred), proxy(deferred.reject,deferred), deferred.notify);\r\n            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve.apply(d,arguments);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n\r\n    Deferred.promise = function(callback) {\r\n        var d = new Deferred();\r\n\r\n        callback(d.resolve.bind(d),d.reject.bind(d),d.progress.bind(d));\r\n\r\n        return d.promise;\r\n    };\r\n\r\n    return Deferred;\r\n});\ndefine('skylark-langx-async/async',[\r\n    \"skylark-langx-ns\",\r\n    \"skylark-langx-objects\",\r\n    \"./Deferred\"\r\n],function(skylark,objects,Deferred){\r\n    var each = objects.each;\r\n    \r\n    var async = {\r\n        Deferred : Deferred,\r\n\r\n        parallel : function(arr,args,ctx) {\r\n            var rets = [];\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            each(arr,function(i,func){\r\n                rets.push(func.apply(ctx,args));\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        series : function(arr,args,ctx) {\r\n            var rets = [],\r\n                d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolve();\r\n            each(arr,function(i,func){\r\n                p = p.then(function(){\r\n                    return func.apply(ctx,args);\r\n                });\r\n                rets.push(p);\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        waterful : function(arr,args,ctx) {\r\n            var d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolveWith(ctx,args);\r\n\r\n            each(arr,function(i,func){\r\n                p = p.then(func);\r\n            });\r\n            return p;\r\n        }\r\n    };\r\n\r\n\treturn skylark.attach(\"langx.async\",async);\t\r\n});\ndefine('skylark-langx-async/main',[\r\n\t\"./async\"\r\n],function(async){\r\n\treturn async;\r\n});\ndefine('skylark-langx-async', ['skylark-langx-async/main'], function (main) { return main; });\n\ndefine('skylark-langx/async',[\r\n    \"skylark-langx-async\"\r\n],function(async){\r\n    return async;\r\n});\ndefine('skylark-langx-datetimes/datetimes',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n     function parseMilliSeconds(str) {\r\n\r\n        var strs = str.split(' ');\r\n        var number = parseInt(strs[0]);\r\n\r\n        if (isNaN(number)){\r\n            return 0;\r\n        }\r\n\r\n        var min = 60000 * 60;\r\n\r\n        switch (strs[1].trim().replace(/\\./g, '')) {\r\n            case 'minutes':\r\n            case 'minute':\r\n            case 'min':\r\n            case 'mm':\r\n            case 'm':\r\n                return 60000 * number;\r\n            case 'hours':\r\n            case 'hour':\r\n            case 'HH':\r\n            case 'hh':\r\n            case 'h':\r\n            case 'H':\r\n                return min * number;\r\n            case 'seconds':\r\n            case 'second':\r\n            case 'sec':\r\n            case 'ss':\r\n            case 's':\r\n                return 1000 * number;\r\n            case 'days':\r\n            case 'day':\r\n            case 'DD':\r\n            case 'dd':\r\n            case 'd':\r\n                return (min * 24) * number;\r\n            case 'months':\r\n            case 'month':\r\n            case 'MM':\r\n            case 'M':\r\n                return (min * 24 * 28) * number;\r\n            case 'weeks':\r\n            case 'week':\r\n            case 'W':\r\n            case 'w':\r\n                return (min * 24 * 7) * number;\r\n            case 'years':\r\n            case 'year':\r\n            case 'yyyy':\r\n            case 'yy':\r\n            case 'y':\r\n                return (min * 24 * 365) * number;\r\n            default:\r\n                return 0;\r\n        }\r\n    };\r\n\t\r\n\treturn skylark.attach(\"langx.datetimes\",{\r\n\t\tparseMilliSeconds\r\n\t});\r\n});\ndefine('skylark-langx-datetimes/main',[\r\n\t\"./datetimes\"\r\n],function(datetimes){\r\n\treturn datetimes;\r\n});\ndefine('skylark-langx-datetimes', ['skylark-langx-datetimes/main'], function (main) { return main; });\n\ndefine('skylark-langx/datetimes',[\r\n    \"skylark-langx-datetimes\"\r\n],function(datetimes){\r\n    return datetimes;\r\n});\ndefine('skylark-langx/Deferred',[\r\n    \"skylark-langx-async/Deferred\"\r\n],function(Deferred){\r\n    return Deferred;\r\n});\ndefine('skylark-langx-emitter/Event',[\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-funcs\",\r\n  \"skylark-langx-klass\",\r\n],function(objects,funcs,klass){\r\n    var eventMethods = {\r\n        preventDefault: \"isDefaultPrevented\",\r\n        stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n        stopPropagation: \"isPropagationStopped\"\r\n     };\r\n        \r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            objects.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = funcs.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = funcs.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n\r\n    /*\r\n    var Event = klass({\r\n        _construct : function(type,props) {\r\n            CustomEvent.call(this,type.props);\r\n            objects.safeMixin(this, props);\r\n            compatible(this);\r\n        }\r\n    },CustomEvent);\r\n    */\r\n\r\n    class Event extends CustomEvent {\r\n        constructor(type,props) {\r\n            super(type,props);\r\n            objects.safeMixin(this, props);\r\n            compatible(this);\r\n        } \r\n    }\r\n\r\n\r\n    Event.compatible = compatible;\r\n\r\n    return Event;\r\n    \r\n});\ndefine('skylark-langx-emitter/Emitter',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-arrays\",\r\n  \"skylark-langx-klass\",\r\n  \"./Event\"\r\n],function(skylark,types,objects,arrays,klass,Event){\r\n    var slice = Array.prototype.slice,\r\n        compact = arrays.compact,\r\n        isDefined = types.isDefined,\r\n        isPlainObject = types.isPlainObject,\r\n        isFunction = types.isFunction,\r\n        isString = types.isString,\r\n        isEmptyObject = types.isEmptyObject,\r\n        mixin = objects.mixin,\r\n        safeMixin = objects.safeMixin;\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            name: segs[0],\r\n            ns: segs.slice(1).join(\" \")\r\n        };\r\n    }\r\n\r\n    var Emitter = klass({\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(event) {\r\n                var parsed = parse(event),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    ns : ns,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        emit: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new Event(e); //new CustomEvent(e);\r\n            }\r\n\r\n            Object.defineProperty(e,\"target\",{\r\n                value : this\r\n            });\r\n\r\n            var args = slice.call(arguments, 1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var parsed = parse(eventName),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                var listeners = self._hub[name];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                        return this;\r\n                    }\r\n                    var listener = listeners[i];\r\n                    if (ns && (!listener.ns ||  !listener.ns.startsWith(ns))) {\r\n                        continue;\r\n                    }\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                obj.one(event, callback, this);\r\n            } else {\r\n                obj.on(event, callback, this);\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event, callback) {\r\n            return this.listenTo(obj, event, callback, 1);\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(event) {\r\n                var parsed = parse(event),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                var evts = _hub[name];\r\n\r\n                if (evts) {\r\n                    var liveEvents = [];\r\n\r\n                    if (callback || ns) {\r\n                        for (var i = 0, len = evts.length; i < len; i++) {\r\n                            \r\n                            if (callback && evts[i].fn !== callback && evts[i].fn._ !== callback) {\r\n                                liveEvents.push(evts[i]);\r\n                                continue;\r\n                            } \r\n\r\n                            if (ns && (!evts[i].ns || evts[i].ns.indexOf(ns)!=0)) {\r\n                                liveEvents.push(evts[i]);\r\n                                continue;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (liveEvents.length) {\r\n                        _hub[name] = liveEvents;\r\n                    } else {\r\n                        delete _hub[name];\r\n                    }\r\n\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    var listeningEvent = listeningEvents[eventName];\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        trigger  : function() {\r\n            return this.emit.apply(this,arguments);\r\n        }\r\n    });\r\n\r\n    Emitter.createEvent = function (type,props) {\r\n        //var e = new CustomEvent(type,props);\r\n        //return safeMixin(e, props);\r\n        return new Event(type,props);\r\n    };\r\n\r\n    Emitter.Event = Event;\r\n\r\n    return skylark.attach(\"langx.Emitter\",Emitter);\r\n\r\n});\ndefine('skylark-langx-emitter/Evented',[\r\n  \"skylark-langx-ns/ns\",\r\n\t\"./Emitter\"\r\n],function(skylark,Emitter){\r\n\treturn skylark.attach(\"langx.Evented\",Emitter);\r\n});\ndefine('skylark-langx-emitter/main',[\r\n\t\"./Emitter\",\r\n\t\"./Evented\"\r\n],function(Emitter){\r\n\treturn Emitter;\r\n});\ndefine('skylark-langx-emitter', ['skylark-langx-emitter/main'], function (main) { return main; });\n\ndefine('skylark-langx/Emitter',[\r\n    \"skylark-langx-emitter\"\r\n],function(Evented){\r\n    return Evented;\r\n});\ndefine('skylark-langx/Evented',[\r\n    \"skylark-langx-emitter\"\r\n],function(Evented){\r\n    return Evented;\r\n});\ndefine('skylark-langx/funcs',[\r\n    \"skylark-langx-funcs\"\r\n],function(funcs){\r\n    return funcs;\r\n});\ndefine('skylark-langx-hoster/hoster',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n\t// The javascript host environment, brower and nodejs are supported.\r\n\tvar hoster = {\r\n\t\t\"isBrowser\" : true, // default\r\n\t\t\"isNode\" : null,\r\n\t\t\"global\" : this,\r\n\t\t\"browser\" : null,\r\n\t\t\"node\" : null\r\n\t};\r\n\r\n\tif (typeof process == \"object\" && process.versions && process.versions.node && process.versions.v8) {\r\n\t\thoster.isNode = true;\r\n\t\thoster.isBrowser = false;\r\n\t}\r\n\r\n\thoster.global = (function(){\r\n\t\tif (typeof global !== 'undefined' && typeof global !== 'function') {\r\n\t\t\t// global spec defines a reference to the global object called 'global'\r\n\t\t\t// https://github.com/tc39/proposal-global\r\n\t\t\t// `global` is also defined in NodeJS\r\n\t\t\treturn global;\r\n\t\t} else if (typeof window !== 'undefined') {\r\n\t\t\t// window is defined in browsers\r\n\t\t\treturn window;\r\n\t\t}\r\n\t\telse if (typeof self !== 'undefined') {\r\n\t\t\t// self is defined in WebWorkers\r\n\t\t\treturn self;\r\n\t\t}\r\n\t\treturn this;\r\n\t})();\r\n\r\n\tvar _document = null;\r\n\r\n\tObject.defineProperty(hoster,\"document\",function(){\r\n\t\tif (!_document) {\r\n\t\t\tvar w = typeof window === 'undefined' ? require('html-element') : window;\r\n\t\t\t_document = w.document;\r\n\t\t}\r\n\r\n\t\treturn _document;\r\n\t});\r\n\r\n\tif (hoster.isBrowser) {\r\n\t    function uaMatch( ua ) {\r\n\t\t    ua = ua.toLowerCase();\r\n\r\n\t\t    var match = /(chrome)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(webkit)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(opera)(?:.*version|)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(msie) ([\\w.]+)/.exec( ua ) ||\r\n\t\t      ua.indexOf('compatible') < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec( ua ) ||\r\n\t\t      [];\r\n\r\n\t\t    return {\r\n\t\t      browser: match[ 1 ] || '',\r\n\t\t      version: match[ 2 ] || '0'\r\n\t\t    };\r\n\t  \t};\r\n\r\n\t    var matched = uaMatch( navigator.userAgent );\r\n\r\n\t    var browser = hoster.browser = {};\r\n\r\n\t    if ( matched.browser ) {\r\n\t      browser[ matched.browser ] = true;\r\n\t      browser.version = matched.version;\r\n\t    }\r\n\r\n\t    // Chrome is Webkit, but Webkit is also Safari.\r\n\t    if ( browser.chrome ) {\r\n\t      browser.webkit = true;\r\n\t    } else if ( browser.webkit ) {\r\n\t      browser.safari = true;\r\n\t    }\r\n\t}\r\n\r\n\treturn  skylark.attach(\"langx.hoster\",hoster);\r\n});\ndefine('skylark-langx-hoster/main',[\r\n\t\"./hoster\"\r\n],function(hoster){\r\n\treturn hoster;\r\n});\ndefine('skylark-langx-hoster', ['skylark-langx-hoster/main'], function (main) { return main; });\n\ndefine('skylark-langx/hoster',[\r\n\t\"skylark-langx-hoster\"\r\n],function(hoster){\r\n\treturn hoster;\r\n});\ndefine('skylark-langx/numbers',[\r\n\t\"skylark-langx-numbers\"\r\n],function(numbers){\r\n\treturn numbers;\r\n});\ndefine('skylark-langx/objects',[\r\n    \"skylark-langx-objects\"\r\n],function(objects){\r\n    return objects;\r\n});\ndefine('skylark-langx-strings/strings',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n    // add default escape function for escaping HTML entities\r\n    var escapeCharMap = Object.freeze({\r\n        '&': '&amp;',\r\n        '<': '&lt;',\r\n        '>': '&gt;',\r\n        '\"': '&quot;',\r\n        \"'\": '&#x27;',\r\n        '`': '&#x60;',\r\n        '=': '&#x3D;',\r\n    });\r\n    function replaceChar(c) {\r\n        return escapeCharMap[c];\r\n    }\r\n    var escapeChars = /[&<>\"'`=]/g;\r\n\r\n\r\n     /*\r\n     * Converts camel case into dashes.\r\n     * @param {String} str\r\n     * @return {String}\r\n     * @exapmle marginTop -> margin-top\r\n     */\r\n    function dasherize(str) {\r\n        return str.replace(/::/g, '/')\r\n            .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\r\n            .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\r\n            .replace(/_/g, '-')\r\n            .toLowerCase();\r\n    }\r\n\r\n    function deserializeValue(value) {\r\n        try {\r\n            return value ?\r\n                value == \"true\" ||\r\n                (value == \"false\" ? false :\r\n                    value == \"null\" ? null :\r\n                    +value + \"\" == value ? +value :\r\n                    /^[\\[\\{]/.test(value) ? JSON.parse(value) :\r\n                    value) : value;\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    function escapeHTML(str) {\r\n        if (str == null) {\r\n            return '';\r\n        }\r\n        if (!str) {\r\n            return String(str);\r\n        }\r\n\r\n        return str.toString().replace(escapeChars, replaceChar);\r\n    }\r\n\r\n    function generateUUID() {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n            var r = Math.random() * 16 | 0;\r\n            var v = c === 'x' ? r : ((r & 0x3) | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    }\r\n\r\n    function trim(str) {\r\n        return str == null ? \"\" : String.prototype.trim.call(str);\r\n    }\r\n\r\n    function substitute( /*String*/ template,\r\n        /*Object|Array*/\r\n        map,\r\n        /*Function?*/\r\n        transform,\r\n        /*Object?*/\r\n        thisObject) {\r\n        // summary:\r\n        //    Performs parameterized substitutions on a string. Throws an\r\n        //    exception if any parameter is unmatched.\r\n        // template:\r\n        //    a string with expressions in the form `${key}` to be replaced or\r\n        //    `${key:format}` which specifies a format function. keys are case-sensitive.\r\n        // map:\r\n        //    hash to search for substitutions\r\n        // transform:\r\n        //    a function to process all parameters before substitution takes\r\n\r\n\r\n        thisObject = thisObject || window;\r\n        transform = transform ?\r\n            proxy(thisObject, transform) : function(v) {\r\n                return v;\r\n            };\r\n\r\n        function getObject(key, map) {\r\n            if (key.match(/\\./)) {\r\n                var retVal,\r\n                    getValue = function(keys, obj) {\r\n                        var _k = keys.pop();\r\n                        if (_k) {\r\n                            if (!obj[_k]) return null;\r\n                            return getValue(keys, retVal = obj[_k]);\r\n                        } else {\r\n                            return retVal;\r\n                        }\r\n                    };\r\n                return getValue(key.split(\".\").reverse(), map);\r\n            } else {\r\n                return map[key];\r\n            }\r\n        }\r\n\r\n        return template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\r\n            function(match, key, format) {\r\n                var value = getObject(key, map);\r\n                if (format) {\r\n                    value = getObject(format, thisObject).call(thisObject, value, key);\r\n                }\r\n                return transform(value, key).toString();\r\n            }); // String\r\n    }\r\n\r\n    var idCounter = 0;\r\n    function uniqueId (prefix) {\r\n        var id = ++idCounter + '';\r\n        return prefix ? prefix + id : id;\r\n    }\r\n\r\n\r\n    /**\r\n     * https://github.com/cho45/micro-template.js\r\n     * (c) cho45 http://cho45.github.com/mit-license\r\n     */\r\n    function template (id, data) {\r\n\r\n        function include(name, args) {\r\n            var stash = {};\r\n            for (var key in template.context.stash) if (template.context.stash.hasOwnProperty(key)) {\r\n                stash[key] = template.context.stash[key];\r\n            }\r\n            if (args) for (var key in args) if (args.hasOwnProperty(key)) {\r\n                stash[key] = args[key];\r\n            }\r\n            var context = template.context;\r\n            context.ret += template(name, stash);\r\n            template.context = context;\r\n        }\r\n\r\n        function wrapper(name, fun) {\r\n            var current = template.context.ret;\r\n            template.context.ret = '';\r\n            fun.apply(template.context);\r\n            var content = template.context.ret;\r\n            var orig_content = template.context.stash.content;\r\n            template.context.stash.content = content;\r\n            template.context.ret = current + template(name, template.context.stash);\r\n            template.context.stash.content = orig_content;\r\n        }\r\n\r\n        var me = arguments.callee;\r\n        if (!me.cache[id]) me.cache[id] = (function () {\r\n            var name = id, string = /^[\\w\\-]+$/.test(id) ? me.get(id): (name = 'template(string)', id); // no warnings\r\n            var line = 1, body = (\r\n                \"try { \" +\r\n                    (me.variable ?  \"var \" + me.variable + \" = this.stash;\" : \"with (this.stash) { \") +\r\n                        \"this.ret += '\"  +\r\n                        string.\r\n                            replace(/<%/g, '\\x11').replace(/%>/g, '\\x13'). // if you want other tag, just edit this line\r\n                            replace(/'(?![^\\x11\\x13]+?\\x13)/g, '\\\\x27').\r\n                            replace(/^\\s*|\\s*$/g, '').\r\n                            replace(/\\n|\\r\\n/g, function () { return \"';\\nthis.line = \" + (++line) + \"; this.ret += '\\\\n\" }).\r\n                            replace(/\\x11=raw(.+?)\\x13/g, \"' + ($1) + '\").\r\n                            replace(/\\x11=(.+?)\\x13/g, \"' + this.escapeHTML($1) + '\").\r\n                            replace(/\\x11(.+?)\\x13/g, \"'; $1; this.ret += '\") +\r\n                    \"'; \" + (me.variable ? \"\" : \"}\") + \"return this.ret;\" +\r\n                \"} catch (e) { throw 'TemplateError: ' + e + ' (on \" + name + \"' + ' line ' + this.line + ')'; } \" +\r\n                \"//@ sourceURL=\" + name + \"\\n\" // source map\r\n            ).replace(/this\\.ret \\+= '';/g, '');\r\n            var func = new Function(body);\r\n            var map  = { '&' : '&amp;', '<' : '&lt;', '>' : '&gt;', '\\x22' : '&#x22;', '\\x27' : '&#x27;' };\r\n            var escapeHTML = function (string) { return (''+string).replace(/[&<>\\'\\\"]/g, function (_) { return map[_] }) };\r\n            return function (stash) { return func.call(me.context = { escapeHTML: escapeHTML, line: 1, ret : '', stash: stash }) };\r\n        })();\r\n        return data ? me.cache[id](data) : me.cache[id];\r\n    }\r\n\r\n    template.cache = {};\r\n    \r\n\r\n    template.get = function (id) {\r\n        return document.getElementById(id).innerHTML;\r\n    };\r\n\r\n    function rtrim(str) {\r\n        return str.replace(/\\s+$/g, '');\r\n    }\r\n\r\n    // Slugify a string\r\n    function slugify(str) {\r\n        str = str.replace(/^\\s+|\\s+$/g, '');\r\n\r\n        // Make the string lowercase\r\n        str = str.toLowerCase();\r\n\r\n        // Remove accents, swap ñ for n, etc\r\n        var from = \"ÁÄÂÀÃÅČÇĆĎÉĚËÈÊẼĔȆÍÌÎÏŇÑÓÖÒÔÕØŘŔŠŤÚŮÜÙÛÝŸŽáäâàãåčçćďéěëèêẽĕȇíìîïňñóöòôõøðřŕšťúůüùûýÿžþÞĐđßÆa·/_,:;\";\r\n        var to   = \"AAAAAACCCDEEEEEEEEIIIINNOOOOOORRSTUUUUUYYZaaaaaacccdeeeeeeeeiiiinnooooooorrstuuuuuyyzbBDdBAa------\";\r\n        for (var i=0, l=from.length ; i<l ; i++) {\r\n            str = str.replace(new RegExp(from.charAt(i), 'g'), to.charAt(i));\r\n        }\r\n\r\n        // Remove invalid chars\r\n        //str = str.replace(/[^a-z0-9 -]/g, '') \r\n        // Collapse whitespace and replace by -\r\n        str = str.replace(/\\s+/g, '-') \r\n        // Collapse dashes\r\n        .replace(/-+/g, '-'); \r\n\r\n        return str;\r\n    }    \r\n\r\n    // return boolean if string 'true' or string 'false', or if a parsable string which is a number\r\n    // also supports JSON object and/or arrays parsing\r\n    function toType(str) {\r\n        var type = typeof str;\r\n        if (type !== 'string') {\r\n            return str;\r\n        }\r\n        var nb = parseFloat(str);\r\n        if (!isNaN(nb) && isFinite(str)) {\r\n            return nb;\r\n        }\r\n        if (str === 'false') {\r\n            return false;\r\n        }\r\n        if (str === 'true') {\r\n            return true;\r\n        }\r\n\r\n        try {\r\n            str = JSON.parse(str);\r\n        } catch (e) {}\r\n\r\n        return str;\r\n    }\r\n\r\n\treturn skylark.attach(\"langx.strings\",{\r\n        camelCase: function(str) {\r\n            return str.replace(/-([\\da-z])/g, function(a) {\r\n                return a.toUpperCase().replace('-', '');\r\n            });\r\n        },\r\n\r\n        dasherize: dasherize,\r\n\r\n        deserializeValue: deserializeValue,\r\n\r\n        escapeHTML : escapeHTML,\r\n\r\n        generateUUID : generateUUID,\r\n\r\n        lowerFirst: function(str) {\r\n            return str.charAt(0).toLowerCase() + str.slice(1);\r\n        },\r\n\r\n        rtrim : rtrim,\r\n\r\n        serializeValue: function(value) {\r\n            return JSON.stringify(value)\r\n        },\r\n\r\n\r\n        substitute: substitute,\r\n\r\n        slugify : slugify,\r\n\r\n        //template : template,\r\n\r\n        trim: trim,\r\n\r\n        uniqueId: uniqueId,\r\n\r\n        upperFirst: function(str) {\r\n            return str.charAt(0).toUpperCase() + str.slice(1);\r\n        }\r\n\t}) ; \r\n\r\n});\ndefine('skylark-langx-strings/base64',[\r\n\t\"./strings\"\r\n],function(strings) {\r\n\r\n\t// private property\r\n\tconst _keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\n\r\n\t// private method for UTF-8 encoding\r\n\tfunction _utf8_encode(string) {\r\n\t\tstring = string.replace(/\\r\\n/g,\"\\n\");\r\n\t\tvar utftext = \"\";\r\n\r\n\t\tfor (var n = 0; n < string.length; n++) {\r\n\r\n\t\t\tvar c = string.charCodeAt(n);\r\n\r\n\t\t\tif (c < 128) {\r\n\t\t\t\tutftext += String.fromCharCode(c);\r\n\t\t\t}\r\n\t\t\telse if((c > 127) && (c < 2048)) {\r\n\t\t\t\tutftext += String.fromCharCode((c >> 6) | 192);\r\n\t\t\t\tutftext += String.fromCharCode((c & 63) | 128);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tutftext += String.fromCharCode((c >> 12) | 224);\r\n\t\t\t\tutftext += String.fromCharCode(((c >> 6) & 63) | 128);\r\n\t\t\t\tutftext += String.fromCharCode((c & 63) | 128);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn utftext;\r\n\t}\r\n\r\n\t// private method for UTF-8 decoding\r\n\tfunction _utf8_decode(utftext) {\r\n\t\tvar string = \"\";\r\n\t\tvar i = 0;\r\n\t\tvar c = c1 = c2 = 0;\r\n\r\n\t\twhile ( i < utftext.length ) {\r\n\r\n\t\t\tc = utftext.charCodeAt(i);\r\n\r\n\t\t\tif (c < 128) {\r\n\t\t\t\tstring += String.fromCharCode(c);\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t\telse if((c > 191) && (c < 224)) {\r\n\t\t\t\tc2 = utftext.charCodeAt(i+1);\r\n\t\t\t\tstring += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\r\n\t\t\t\ti += 2;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tc2 = utftext.charCodeAt(i+1);\r\n\t\t\t\tc3 = utftext.charCodeAt(i+2);\r\n\t\t\t\tstring += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\r\n\t\t\t\ti += 3;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn string;\r\n\t}\r\n\r\n\t// public method for encoding\r\n\tfunction encode(input, binary) {\r\n\t\tbinary = (binary != null) ? binary : false;\r\n\t\tvar output = \"\";\r\n\t\tvar chr1, chr2, chr3, enc1, enc2, enc3, enc4;\r\n\t\tvar i = 0;\r\n\r\n\t\tif (!binary)\r\n\t\t{\r\n\t\t\tinput = _utf8_encode(input);\r\n\t\t}\r\n\r\n\t\twhile (i < input.length) {\r\n\r\n\t\t\tchr1 = input.charCodeAt(i++);\r\n\t\t\tchr2 = input.charCodeAt(i++);\r\n\t\t\tchr3 = input.charCodeAt(i++);\r\n\r\n\t\t\tenc1 = chr1 >> 2;\r\n\t\t\tenc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\r\n\t\t\tenc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\r\n\t\t\tenc4 = chr3 & 63;\r\n\r\n\t\t\tif (isNaN(chr2)) {\r\n\t\t\t\tenc3 = enc4 = 64;\r\n\t\t\t} else if (isNaN(chr3)) {\r\n\t\t\t\tenc4 = 64;\r\n\t\t\t}\r\n\r\n\t\t\toutput = output +\r\n\t\t\tthis._keyStr.charAt(enc1) + this._keyStr.charAt(enc2) +\r\n\t\t\tthis._keyStr.charAt(enc3) + this._keyStr.charAt(enc4);\r\n\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\t// public method for decoding\r\n\tfunction decode(input, binary) {\r\n\t\tbinary = (binary != null) ? binary : false;\r\n\t\tvar output = \"\";\r\n\t\tvar chr1, chr2, chr3;\r\n\t\tvar enc1, enc2, enc3, enc4;\r\n\t\tvar i = 0;\r\n\r\n\t\tinput = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\r\n\r\n\t\twhile (i < input.length) {\r\n\r\n\t\t\tenc1 = this._keyStr.indexOf(input.charAt(i++));\r\n\t\t\tenc2 = this._keyStr.indexOf(input.charAt(i++));\r\n\t\t\tenc3 = this._keyStr.indexOf(input.charAt(i++));\r\n\t\t\tenc4 = this._keyStr.indexOf(input.charAt(i++));\r\n\r\n\t\t\tchr1 = (enc1 << 2) | (enc2 >> 4);\r\n\t\t\tchr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\r\n\t\t\tchr3 = ((enc3 & 3) << 6) | enc4;\r\n\r\n\t\t\toutput = output + String.fromCharCode(chr1);\r\n\r\n\t\t\tif (enc3 != 64) {\r\n\t\t\t\toutput = output + String.fromCharCode(chr2);\r\n\t\t\t}\r\n\t\t\tif (enc4 != 64) {\r\n\t\t\t\toutput = output + String.fromCharCode(chr3);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif (!binary) {\r\n\t\t\toutput = _utf8_decode(output);\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\r\n\t}\r\n\r\n\r\n\treturn strings.base64 = {\r\n\t\tdecode,\r\n\t\tencode\r\n\t};\r\n\t\r\n});\ndefine('skylark-langx-strings/main',[\r\n\t\"./strings\",\r\n\t\"./base64\"\r\n],function(strings){\r\n\treturn strings;\r\n});\ndefine('skylark-langx-strings', ['skylark-langx-strings/main'], function (main) { return main; });\n\ndefine('skylark-langx/strings',[\r\n    \"skylark-langx-strings\"\r\n],function(strings){\r\n    return strings;\r\n});\ndefine('skylark-langx/Stateful',[\r\n\t\"./Evented\",\r\n  \"./strings\",\r\n  \"./objects\"\r\n],function(Evented,strings,objects){\r\n    var isEqual = objects.isEqual,\r\n        mixin = objects.mixin,\r\n        result = objects.result,\r\n        isEmptyObject = objects.isEmptyObject,\r\n        clone = objects.clone,\r\n        uniqueId = strings.uniqueId;\r\n\r\n    var Stateful = Evented.inherit({\r\n        _construct : function(attributes, options) {\r\n            var attrs = attributes || {};\r\n            options || (options = {});\r\n            this.cid = uniqueId(this.cidPrefix);\r\n            this.attributes = {};\r\n            if (options.collection) this.collection = options.collection;\r\n            if (options.parse) attrs = this.parse(attrs, options) || {};\r\n            var defaults = result(this, 'defaults');\r\n            attrs = mixin({}, defaults, attrs);\r\n            this.set(attrs, options);\r\n            this.changed = {};\r\n        },\r\n\r\n        // A hash of attributes whose current and previous value differ.\r\n        changed: null,\r\n\r\n        // The value returned during the last failed validation.\r\n        validationError: null,\r\n\r\n        // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\r\n        // CouchDB users may want to set this to `\"_id\"`.\r\n        idAttribute: 'id',\r\n\r\n        // The prefix is used to create the client id which is used to identify models locally.\r\n        // You may want to override this if you're experiencing name clashes with model ids.\r\n        cidPrefix: 'c',\r\n\r\n\r\n        // Return a copy of the model's `attributes` object.\r\n        toJSON: function(options) {\r\n          return clone(this.attributes);\r\n        },\r\n\r\n\r\n        // Get the value of an attribute.\r\n        get: function(attr) {\r\n          return this.attributes[attr];\r\n        },\r\n\r\n        // Returns `true` if the attribute contains a value that is not null\r\n        // or undefined.\r\n        has: function(attr) {\r\n          return this.get(attr) != null;\r\n        },\r\n\r\n        // Set a hash of model attributes on the object, firing `\"change\"`. This is\r\n        // the core primitive operation of a model, updating the data and notifying\r\n        // anyone who needs to know about the change in state. The heart of the beast.\r\n        set: function(key, val, options) {\r\n          if (key == null) return this;\r\n\r\n          // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n          var attrs;\r\n          if (typeof key === 'object') {\r\n            attrs = key;\r\n            options = val;\r\n          } else {\r\n            (attrs = {})[key] = val;\r\n          }\r\n\r\n          options || (options = {});\r\n\r\n          // Run validation.\r\n          if (!this._validate(attrs, options)) return false;\r\n\r\n          // Extract attributes and options.\r\n          var unset      = options.unset;\r\n          var silent     = options.silent;\r\n          var changes    = [];\r\n          var changing   = this._changing;\r\n          this._changing = true;\r\n\r\n          if (!changing) {\r\n            this._previousAttributes = clone(this.attributes);\r\n            this.changed = {};\r\n          }\r\n\r\n          var current = this.attributes;\r\n          var changed = this.changed;\r\n          var prev    = this._previousAttributes;\r\n\r\n          // For each `set` attribute, update or delete the current value.\r\n          for (var attr in attrs) {\r\n            val = attrs[attr];\r\n            if (!isEqual(current[attr], val)) changes.push(attr);\r\n            if (!isEqual(prev[attr], val)) {\r\n              changed[attr] = val;\r\n            } else {\r\n              delete changed[attr];\r\n            }\r\n            unset ? delete current[attr] : current[attr] = val;\r\n          }\r\n\r\n          // Update the `id`.\r\n          if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\r\n\r\n          // Trigger all relevant attribute changes.\r\n          if (!silent) {\r\n            if (changes.length) this._pending = options;\r\n            for (var i = 0; i < changes.length; i++) {\r\n              this.trigger('change:' + changes[i], this, current[changes[i]], options);\r\n            }\r\n          }\r\n\r\n          // You might be wondering why there's a `while` loop here. Changes can\r\n          // be recursively nested within `\"change\"` events.\r\n          if (changing) return this;\r\n          if (!silent) {\r\n            while (this._pending) {\r\n              options = this._pending;\r\n              this._pending = false;\r\n              this.trigger('change', this, options);\r\n            }\r\n          }\r\n          this._pending = false;\r\n          this._changing = false;\r\n          return this;\r\n        },\r\n\r\n        // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\r\n        // if the attribute doesn't exist.\r\n        unset: function(attr, options) {\r\n          return this.set(attr, void 0, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Clear all attributes on the model, firing `\"change\"`.\r\n        clear: function(options) {\r\n          var attrs = {};\r\n          for (var key in this.attributes) attrs[key] = void 0;\r\n          return this.set(attrs, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Determine if the model has changed since the last `\"change\"` event.\r\n        // If you specify an attribute name, determine if that attribute has changed.\r\n        hasChanged: function(attr) {\r\n          if (attr == null) return !isEmptyObject(this.changed);\r\n          return this.changed[attr] !== undefined;\r\n        },\r\n\r\n        // Return an object containing all the attributes that have changed, or\r\n        // false if there are no changed attributes. Useful for determining what\r\n        // parts of a view need to be updated and/or what attributes need to be\r\n        // persisted to the server. Unset attributes will be set to undefined.\r\n        // You can also pass an attributes object to diff against the model,\r\n        // determining if there *would be* a change.\r\n        changedAttributes: function(diff) {\r\n          if (!diff) return this.hasChanged() ? clone(this.changed) : false;\r\n          var old = this._changing ? this._previousAttributes : this.attributes;\r\n          var changed = {};\r\n          for (var attr in diff) {\r\n            var val = diff[attr];\r\n            if (isEqual(old[attr], val)) continue;\r\n            changed[attr] = val;\r\n          }\r\n          return !isEmptyObject(changed) ? changed : false;\r\n        },\r\n\r\n        // Get the previous value of an attribute, recorded at the time the last\r\n        // `\"change\"` event was fired.\r\n        previous: function(attr) {\r\n          if (attr == null || !this._previousAttributes) return null;\r\n          return this._previousAttributes[attr];\r\n        },\r\n\r\n        // Get all of the attributes of the model at the time of the previous\r\n        // `\"change\"` event.\r\n        previousAttributes: function() {\r\n          return clone(this._previousAttributes);\r\n        },\r\n\r\n        // Create a new model with identical attributes to this one.\r\n        clone: function() {\r\n          return new this.constructor(this.attributes);\r\n        },\r\n\r\n        // A model is new if it has never been saved to the server, and lacks an id.\r\n        isNew: function() {\r\n          return !this.has(this.idAttribute);\r\n        },\r\n\r\n        // Check if the model is currently in a valid state.\r\n        isValid: function(options) {\r\n          return this._validate({}, mixin({}, options, {validate: true}));\r\n        },\r\n\r\n        // Run validation against the next complete set of model attributes,\r\n        // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\r\n        _validate: function(attrs, options) {\r\n          if (!options.validate || !this.validate) return true;\r\n          attrs = mixin({}, this.attributes, attrs);\r\n          var error = this.validationError = this.validate(attrs, options) || null;\r\n          if (!error) return true;\r\n          this.trigger('invalid', this, error, mixin(options, {validationError: error}));\r\n          return false;\r\n        }\r\n    });\r\n\r\n\treturn Stateful;\r\n});\ndefine('skylark-langx-topic/topic',[\r\n\t\"skylark-langx-ns\",\r\n\t\"skylark-langx-emitter/Evented\"\r\n],function(skylark,Evented){\r\n\tvar hub = new Evented();\r\n\r\n\treturn skylark.attach(\"langx.topic\",{\r\n\t    publish: function(name, arg1,argn) {\r\n\t        var data = [].slice.call(arguments, 1);\r\n\r\n\t        return hub.trigger({\r\n\t            type : name,\r\n\t            data : data\r\n\t        });\r\n\t    },\r\n\r\n        subscribe: function(name, listener,ctx) {\r\n        \tvar handler = function(e){\r\n                listener.apply(ctx,e.data);\r\n            };\r\n            hub.on(name, handler);\r\n            return {\r\n            \tremove : function(){\r\n            \t\thub.off(name,handler);\r\n            \t}\r\n            }\r\n\r\n        }\r\n\r\n\t});\r\n});\ndefine('skylark-langx-topic/main',[\r\n\t\"./topic\"\r\n],function(topic){\r\n\treturn topic;\r\n});\ndefine('skylark-langx-topic', ['skylark-langx-topic/main'], function (main) { return main; });\n\ndefine('skylark-langx/topic',[\r\n\t\"skylark-langx-topic\"\r\n],function(topic){\r\n\treturn topic;\r\n});\ndefine('skylark-langx/types',[\r\n    \"skylark-langx-types\"\r\n],function(types){\r\n    return types;\r\n});\ndefine('skylark-langx/langx',[\r\n    \"./skylark\",\r\n    \"./arrays\",\r\n    \"./ArrayStore\",\r\n    \"./aspect\",\r\n    \"./async\",\r\n    \"./datetimes\",\r\n    \"./Deferred\",\r\n    \"./Emitter\",\r\n    \"./Evented\",\r\n    \"./funcs\",\r\n    \"./hoster\",\r\n    \"./klass\",\r\n    \"./numbers\",\r\n    \"./objects\",\r\n    \"./Stateful\",\r\n    \"./strings\",\r\n    \"./topic\",\r\n    \"./types\"\r\n], function(skylark,arrays,ArrayStore,aspect,async,datetimes,Deferred,Emitter,Evented,funcs,hoster,klass,numbers,objects,Stateful,strings,topic,types) {\r\n    \"use strict\";\r\n    var toString = {}.toString,\r\n        concat = Array.prototype.concat,\r\n        indexOf = Array.prototype.indexOf,\r\n        slice = Array.prototype.slice,\r\n        filter = Array.prototype.filter,\r\n        mixin = objects.mixin,\r\n        safeMixin = objects.safeMixin,\r\n        isFunction = types.isFunction;\r\n\r\n\r\n    function funcArg(context, arg, idx, payload) {\r\n        return isFunction(arg) ? arg.call(context, idx, payload) : arg;\r\n    }\r\n\r\n    function getQueryParams(url) {\r\n        var url = url || window.location.href,\r\n            segs = url.split(\"?\"),\r\n            params = {};\r\n\r\n        if (segs.length > 1) {\r\n            segs[1].split(\"&\").forEach(function(queryParam) {\r\n                var nv = queryParam.split('=');\r\n                params[nv[0]] = nv[1];\r\n            });\r\n        }\r\n        return params;\r\n    }\r\n\r\n\r\n    function toPixel(value) {\r\n        // style values can be floats, client code may want\r\n        // to round for integer pixels.\r\n        return parseFloat(value) || 0;\r\n    }\r\n\r\n\r\n    var _uid = 1;\r\n\r\n    function uid(obj) {\r\n        return obj._uid || (obj._uid = _uid++);\r\n    }\r\n\r\n    function langx() {\r\n        return langx;\r\n    }\r\n\r\n    mixin(langx, {\r\n        createEvent : Emitter.createEvent,\r\n\r\n        funcArg: funcArg,\r\n\r\n        getQueryParams: getQueryParams,\r\n\r\n        toPixel: toPixel,\r\n\r\n        uid: uid,\r\n\r\n        URL: typeof window !== \"undefined\" ? window.URL || window.webkitURL : null\r\n\r\n    });\r\n\r\n\r\n    mixin(langx, arrays,aspect,datetimes,funcs,numbers,objects,strings,types,{\r\n        ArrayStore : ArrayStore,\r\n\r\n        async : async,\r\n        \r\n        Deferred: Deferred,\r\n\r\n        Emitter: Emitter,\r\n\r\n        Evented: Evented,\r\n\r\n        hoster : hoster,\r\n\r\n        klass : klass,\r\n       \r\n        Stateful: Stateful,\r\n\r\n        topic : topic\r\n    });\r\n\r\n    return skylark.langx = langx;\r\n});\ndefine('skylark-domx-browser/browser',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\"\r\n], function(skylark,langx) {\r\n    \"use strict\";\r\n\r\n    var browser = langx.hoster.browser;\r\n \r\n    var checkedCssProperties = {\r\n            \"transitionproperty\": \"TransitionProperty\",\r\n        },\r\n        transEndEventNames = {\r\n          WebkitTransition : 'webkitTransitionEnd',\r\n          MozTransition    : 'transitionend',\r\n          OTransition      : 'oTransitionEnd otransitionend',\r\n          transition       : 'transitionend'\r\n        },\r\n        transEndEventName = null;\r\n\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n                          testEl.mozMatchesSelector ||\r\n                          testEl.oMatchesSelector ||\r\n                          testEl.matchesSelector,\r\n\r\n        requestFullScreen = testEl.requestFullscreen || \r\n                            testEl.webkitRequestFullscreen || \r\n                            testEl.mozRequestFullScreen || \r\n                            testEl.msRequestFullscreen,\r\n\r\n        exitFullScreen =  document.exitFullscreen ||\r\n                          document.webkitCancelFullScreen ||\r\n                          document.mozCancelFullScreen ||\r\n                          document.msExitFullscreen,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n            if (transEndEventNames[name]) {\r\n              transEndEventName = transEndEventNames[name];\r\n            }\r\n        }\r\n    }\r\n\r\n    if (!transEndEventName) {\r\n        if (testStyle[\"transition\"] !== undefined) {\r\n            transEndEventName = transEndEventNames[\"transition\"];\r\n        }\r\n    }\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        isIE : !!/msie/i.exec( window.navigator.userAgent ),\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        requestFullScreen : requestFullScreen,\r\n\r\n        exitFullscreen : requestFullScreen,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {\r\n\r\n        }\r\n\r\n    });\r\n\r\n    if  (transEndEventName) {\r\n        browser.support.transition = {\r\n            end : transEndEventName\r\n        };\r\n    }\r\n\r\n    testEl = null;\r\n\r\n    return skylark.attach(\"domx.browser\",browser);\r\n});\r\n\ndefine('skylark-domx-browser/main',[\r\n\t\"./browser\"\r\n],function(browser){\r\n\treturn browser;\r\n});\ndefine('skylark-domx-browser', ['skylark-domx-browser/main'], function (main) { return main; });\n\ndefine('skylark-domx-noder/noder',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\"\r\n], function(skylark, langx, browser) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n\r\n    function activeElement(doc) {\r\n        doc = doc || document;\r\n        var el;\r\n\r\n        // Support: IE 9 only\r\n        // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\r\n        try {\r\n            el = doc.activeElement;\r\n        } catch ( error ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 9 - 11 only\r\n        // IE may return null instead of an element\r\n        // Interestingly, this only seems to occur when NOT in an iframe\r\n        if ( !el ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 11 only\r\n        // IE11 returns a seemingly empty object in some cases when accessing\r\n        // document.activeElement from an <iframe>\r\n        if ( !el.nodeName ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        return el;\r\n    };\r\n\r\n    function enhancePlaceContent(placing,node) {\r\n        if (langx.isFunction(placing)) {\r\n            return placing.apply(node,[]);\r\n        }\r\n        if (langx.isArrayLike(placing)) {\r\n            var neddsFlattern;\r\n            for (var i=0;i<placing.length;i++) {\r\n                if (langx.isFunction(placing[i])) {\r\n                    placing[i] = placing[i].apply(node,[]);\r\n                    if (langx.isArrayLike(placing[i])) {\r\n                        neddsFlattern = true;\r\n                    }\r\n                }\r\n            }\r\n            if (neddsFlattern) {\r\n                placing = langx.flatten(placing);\r\n            }\r\n        }\r\n        return placing;\r\n    }\r\n    function after(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Get the children of the specified node, including text and comment nodes.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    /*   \r\n     * Create a element and set attributes on it.\r\n     * @param {HTMLElement} tag\r\n     * @param {props} props\r\n     * @param } parent\r\n     */\r\n    function createElement(tag, props, parent) {\r\n        var node;\r\n\r\n        if (/svg/i.test(tag)) {\r\n            node = document.createElementNS(\"http://www.w3.org/2000/svg\", tag)\r\n        } else {\r\n            node = document.createElement(tag);\r\n        }\r\n\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent, node);\r\n        }\r\n        return node;\r\n    }\r\n\r\nfunction removeSelfClosingTags(xml) {\r\n    var split = xml.split(\"/>\");\r\n    var newXml = \"\";\r\n    for (var i = 0; i < split.length - 1;i++) {\r\n        var edsplit = split[i].split(\"<\");\r\n        newXml += split[i] + \"></\" + edsplit[edsplit.length - 1].split(\" \")[0] + \">\";\r\n    }\r\n    return newXml + split[split.length-1];\r\n}\r\n\r\n    /*   \r\n     * Create a DocumentFragment from the HTML fragment.\r\n     * @param {String} html\r\n     */\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = removeSelfClosingTags(\"\" + html);\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    /*   \r\n     * Create a deep copy of the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {Boolean} deep\r\n     */\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node .\r\n     * @param {String} node\r\n     * @param {Node} child\r\n     */\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    /*   \r\n     * Create a new Text node.\r\n     * @param {String} text\r\n     * @param {Node} child\r\n     */\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    /*   \r\n     * Get the current document object.\r\n     */\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    /*   \r\n     * Remove all child nodes of the set of matched elements from the DOM.\r\n     * @param {Object} node\r\n     */\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    var fulledEl = null;\r\n\r\n    function fullScreen(el) {\r\n        if (el === false) {\r\n            browser.exitFullScreen.apply(document);\r\n        } else if (el) {\r\n            browser.requestFullScreen.apply(el);\r\n            fulledEl = el;\r\n        } else {\r\n            return (\r\n                document.fullscreenElement ||\r\n                document.webkitFullscreenElement ||\r\n                document.mozFullScreenElement ||\r\n                document.msFullscreenElement\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    // Selectors\r\n    function focusable( element, hasTabindex ) {\r\n        var map, mapName, img, focusableIfVisible, fieldset,\r\n            nodeName = element.nodeName.toLowerCase();\r\n\r\n        if ( \"area\" === nodeName ) {\r\n            map = element.parentNode;\r\n            mapName = map.name;\r\n            if ( !element.href || !mapName || map.nodeName.toLowerCase() !== \"map\" ) {\r\n                return false;\r\n            }\r\n            img = $( \"img[usemap='#\" + mapName + \"']\" );\r\n            return img.length > 0 && img.is( \":visible\" );\r\n        }\r\n\r\n        if ( /^(input|select|textarea|button|object)$/.test( nodeName ) ) {\r\n            focusableIfVisible = !element.disabled;\r\n\r\n            if ( focusableIfVisible ) {\r\n\r\n                // Form controls within a disabled fieldset are disabled.\r\n                // However, controls within the fieldset's legend do not get disabled.\r\n                // Since controls generally aren't placed inside legends, we skip\r\n                // this portion of the check.\r\n                fieldset = $( element ).closest( \"fieldset\" )[ 0 ];\r\n                if ( fieldset ) {\r\n                    focusableIfVisible = !fieldset.disabled;\r\n                }\r\n            }\r\n        } else if ( \"a\" === nodeName ) {\r\n            focusableIfVisible = element.href || hasTabindex;\r\n        } else {\r\n            focusableIfVisible = hasTabindex;\r\n        }\r\n\r\n        return focusableIfVisible && $( element ).is( \":visible\" ) && visible( $( element ) );\r\n    };\r\n\r\n\r\n   var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi;\r\n \r\n    /*   \r\n     * Get the HTML contents of the first element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} html\r\n     */\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html)) {\r\n                html = html.replace( rxhtmlTag, \"<$1></$2>\" );\r\n            }\r\n            if (langx.isString(html) || langx.isNumber(html)) {               \r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isChildOf(node, parent, directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a document.\r\n     * @param {Node} node\r\n     */\r\n    function isDocument(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is in the document\r\n     * @param {Node} node\r\n     */\r\n    function isInDocument(node) {\r\n      return (node === document.body) ? true : document.body.contains(node);\r\n    }        \r\n\r\n    var blockNodes = [\"div\", \"p\", \"ul\", \"ol\", \"li\", \"blockquote\", \"hr\", \"pre\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"table\"];\r\n\r\n    function isBlockNode(node) {\r\n        if (!node || node.nodeType === 3) {\r\n          return false;\r\n        }\r\n        return new RegExp(\"^(\" + (blockNodes.join('|')) + \")$\").test(node.nodeName.toLowerCase());\r\n    }\r\n\r\n    function isActive (elem) {\r\n            return elem === document.activeElement && (elem.type || elem.href);\r\n    }\r\n\r\n    /*   \r\n     * Get the owner document object for the specified element.\r\n     * @param {Node} elm\r\n     */\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return doc.defaultView || doc.parentWindow;\r\n    }\r\n\r\n    /*   \r\n     * insert one or more nodes as the first children of the specified node.\r\n     * @param {Node} node\r\n     * @param {Node or ArrayLike} placing\r\n     * @param {Boolean Optional} copyByClone\r\n     */\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && document.defaultView.getComputedStyle(parent).position == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    /*   \r\n     * Remove the set of matched elements from the DOM.\r\n     * @param {Node} node\r\n     */\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n                node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\", e);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function removeChild(node,children) {\r\n        if (!langx.isArrayLike(children)) {\r\n            children = [children];\r\n        }\r\n        for (var i=0;i<children.length;i++) {\r\n            node.removeChild(children[i]);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollParent( elm, includeHidden ) {\r\n        var position = document.defaultView.getComputedStyle(elm).position,\r\n            excludeStaticParent = position === \"absolute\",\r\n            overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n            scrollParent = this.parents().filter( function() {\r\n                var parent = $( this );\r\n                if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                    return false;\r\n                }\r\n                return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                    parent.css( \"overflow-x\" ) );\r\n            } ).eq( 0 );\r\n\r\n        return position === \"fixed\" || !scrollParent.length ?\r\n            $( this[ 0 ].ownerDocument || document ) :\r\n            scrollParent;\r\n    };\r\n\r\n\r\n    function reflow(elm) {\r\n        if (el == null) {\r\n          elm = document;\r\n        }\r\n        elm.offsetHeight;\r\n\r\n        return this;      \r\n    }\r\n\r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {Node} node\r\n     * @param {Node} oldNode\r\n     */\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n\r\n    function selectable(elem, selectable) {\r\n        if (elem === undefined || elem.style === undefined)\r\n            return;\r\n        elem.onselectstart = selectable ? function () {\r\n            return false;\r\n        } : function () {\r\n        };\r\n        elem.style.MozUserSelect = selectable ? 'auto' : 'none';\r\n        elem.style.KhtmlUserSelect = selectable ? 'auto' : 'none';\r\n        elem.unselectable = selectable ? 'on' : 'off';\r\n    }\r\n\r\n    /*   \r\n     * traverse the specified node and its descendants, perform the callback function on each\r\n     * @param {Node} node\r\n     * @param {Function} fn\r\n     */\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} node\r\n     */\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around each element in the set of matched elements.\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around the content of each element in the set of matched\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Remove the parents of the set of matched elements from the DOM, leaving the matched\r\n     * @param {Node} node\r\n     */\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        active  : activeElement,\r\n\r\n        after: after,\r\n\r\n        append: append,\r\n\r\n        before: before,\r\n\r\n        blur : function(el) {\r\n            el.blur();\r\n        },\r\n\r\n        body: function() {\r\n            return document.body;\r\n        },\r\n\r\n        clone: clone,\r\n\r\n        contains: contains,\r\n\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n     \r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        fullScreen: fullScreen,\r\n\r\n        focusable: focusable,\r\n\r\n        html: html,\r\n\r\n        isActive,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDocument: isDocument,\r\n\r\n        isInDocument: isInDocument,\r\n\r\n        isWindow: langx.isWindow,\r\n\r\n        nodeName : nodeName,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow: ownerWindow,\r\n\r\n        prepend: prepend,\r\n\r\n        reflow: reflow,\r\n\r\n        remove: remove,\r\n\r\n        removeChild : removeChild,\r\n\r\n        replace: replace,\r\n\r\n        selectable,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.attach(\"domx.noder\" , noder);\r\n});\ndefine('skylark-domx-noder/main',[\r\n\t\"./noder\"\r\n],function(noder){\r\n\treturn noder;\r\n});\ndefine('skylark-domx-noder', ['skylark-domx-noder/main'], function (main) { return main; });\n\ndefine('skylark-domx-finder/finder',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-noder\"\r\n], function(skylark, langx, browser, noder) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        rinputs = /^(?:input|select|textarea|button)$/i,\r\n        rheader = /^h\\d$/i,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    var pseudos = local.pseudos = {\r\n        // custom pseudos\r\n        \"button\": function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === \"button\" || name === \"button\";\r\n        },\r\n\r\n        'checked': function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        'contains': function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        'eq': function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'even': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 0;\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        'focusable': function( elm ) {\r\n            return noder.focusable(elm, elm.tabindex != null );\r\n        },\r\n\r\n        'first': function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        'gt': function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        'has': function(elm, idx, nodes, sel) {\r\n            return find(elm, sel);\r\n        },\r\n\r\n        // Element/input types\r\n        \"header\": function(elem) {\r\n            return rheader.test(elem.nodeName);\r\n        },\r\n\r\n        'hidden': function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        \"input\": function(elem) {\r\n            return rinputs.test(elem.nodeName);\r\n        },\r\n\r\n        'last': function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        'lt': function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        'not': function(elm, idx, nodes, sel) {\r\n            return !matches(elm, sel);\r\n        },\r\n\r\n        'odd': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 1;\r\n        },\r\n\r\n        /*   \r\n         * Get the parent of each element in the current set of matched elements.\r\n         * @param {Object} elm\r\n         */\r\n        'parent': function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        'selected': function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        'tabbable': function(elm) {\r\n            var tabIndex = elm.tabindex,\r\n                hasTabindex = tabIndex != null;\r\n            return ( !hasTabindex || tabIndex >= 0 ) && noder.focusable( element, hasTabindex );\r\n        },\r\n\r\n        'text': function(elm) {\r\n            return elm.type === \"text\";\r\n        },\r\n\r\n        'visible': function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        },\r\n        'empty': function(elm) {\r\n            return !elm.hasChildNodes();\r\n        }\r\n    };\r\n\r\n    [\"first\", \"eq\", \"last\"].forEach(function(item) {\r\n        pseudos[item].isArrayFilter = true;\r\n    });\r\n\r\n\r\n\r\n    pseudos[\"nth\"] = pseudos[\"eq\"];\r\n\r\n    function createInputPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === type;\r\n        };\r\n    }\r\n\r\n    function createButtonPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return (name === \"input\" || name === \"button\") && elem.type === type;\r\n        };\r\n    }\r\n\r\n    // Add button/input type pseudos\r\n    for (i in {\r\n        radio: true,\r\n        checkbox: true,\r\n        file: true,\r\n        password: true,\r\n        image: true\r\n    }) {\r\n        pseudos[i] = createInputPseudo(i);\r\n    }\r\n    for (i in {\r\n        submit: true,\r\n        reset: true\r\n    }) {\r\n        pseudos[i] = createButtonPseudo(i);\r\n    }\r\n\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value) + \"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            if (tag !== \"*\") {\r\n                nativeSelector = tag.toUpperCase() + nativeSelector;\r\n            }\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes, arrayFilte) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos,\r\n\r\n            i, part, cls, pseudo;\r\n\r\n        if (!arrayFilte) {\r\n            if (tag = cond.tag) {\r\n                var nodeName = node.nodeName.toUpperCase();\r\n                if (tag == '*') {\r\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n                } else {\r\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n                }\r\n            }\r\n\r\n            if (id = cond.id) {\r\n                if (node.getAttribute('id') != id) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (classes = cond.classes) {\r\n                for (i = classes.length; i--;) {\r\n                    cls = node.getAttribute('class');\r\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\r\n                }\r\n            }\r\n\r\n            if (attributes = cond.attributes) {\r\n                for (i = attributes.length; i--;) {\r\n                    part = attributes[i];\r\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\r\n                        if (!pseudo(node, idx, nodes, part.value)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            parsed = selector;\r\n        }\r\n\r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i,\r\n            currentExpression;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node, exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    local.filterSingle = function(nodes, exp) {\r\n        var matchs = filter.call(nodes, function(node, idx) {\r\n            return local.check(node, exp, idx, nodes, false);\r\n        });\r\n\r\n        matchs = filter.call(matchs, function(node, idx) {\r\n            return local.check(node, exp, idx, matchs, true);\r\n        });\r\n        return matchs;\r\n    };\r\n\r\n    local.filter = function(nodes, selector) {\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            return local.filterSingle(nodes, selector);\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            i,\r\n            currentExpression,\r\n            ret = [];\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n\r\n                var matchs = local.filterSingle(nodes, exp);\r\n\r\n                ret = langx.uniq(ret.concat(matchs));\r\n            } else {\r\n                throw new Error(\"not supported selector:\" + selector);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n\r\n    };\r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, false)\r\n                        });\r\n\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, true)\r\n                        });\r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n    /*\r\n     * Get the nearest ancestor of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the ancestors of the specitied element , optionally filtered by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestors(node, selector, root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while ((node = node.parentNode) && (node.nodeType !== 9)) {\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (langx.isArrayLike(root)) {\r\n                    if (langx.inArray(node,root)>-1) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n            if (!selector || matches(node, selector)) {\r\n              ret.push(node); \r\n            }\r\n        }\r\n\r\n        //if (selector) {\r\n        //    ret = local.filter(ret, selector);\r\n        //}\r\n        return ret;\r\n    }\r\n\r\n\r\n    /*\r\n     * Returns a element by its ID.\r\n     * @param {string} id\r\n     */\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    /*\r\n     * Get the children of the specified element , optionally filtered by a selector.\r\n     * @param {string} node\r\n     * @param {String optionlly} selector\r\n     */\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    /*\r\n     * Get the decendant of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the nearest decendent of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the descendants of each element in the current set of matched elements, filtered by a selector, jQuery object, or element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function find(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        if (matches(elm, selector)) {\r\n            return elm;\r\n        } else {\r\n            return descendant(elm, selector);\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the findAll of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function findAll(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        return descendants(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the first child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String} first\r\n     */\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the last child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String } last\r\n     */\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Check the specified element against a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm, selector) > -1;\r\n        } else if (langx.isPlainObject(selector)) {\r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Get the nearest next sibing of the specitied element , optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional} adjacent\r\n     */\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the next siblings of the specified element , optional filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Get the parent element of the specified element. if a selector is provided, it retrieves the parent element only if it matches that selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get hte nearest previous sibling of the specified element ,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional } adjacent\r\n     */\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get all preceding siblings of each element in the set of matched elements, optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Selects all sibling elements that follow after the “prev” element, have the same parent, and match the filtering “siblings” selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling,\r\n\r\n        previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return skylark.attach(\"domx.finder\", finder);\r\n});\ndefine('skylark-domx-finder/main',[\r\n\t\"./finder\"\r\n],function(finder){\r\n\r\n\treturn finder;\r\n});\ndefine('skylark-domx-finder', ['skylark-domx-finder/main'], function (main) { return main; });\n\ndefine('skylark-domx-data/data',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-noder\"\r\n], function(skylark, langx, finder,noder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n\r\n    // Strip and collapse whitespace according to HTML spec\r\n    function stripAndCollapse( value ) {\r\n      var tokens = value.match( /[^\\x20\\t\\r\\n\\f]+/g ) || [];\r\n      return tokens.join( \" \" );\r\n    }\r\n\r\n\r\n    var valHooks = {\r\n      option: {\r\n        get: function( elem ) {\r\n          var val = elem.getAttribute( \"value\" );\r\n          return val != null ?  val :  stripAndCollapse(text( elem ) );\r\n        }\r\n      },\r\n      select: {\r\n        get: function( elem ) {\r\n          var value, option, i,\r\n            options = elem.options,\r\n            index = elem.selectedIndex,\r\n            one = elem.type === \"select-one\",\r\n            values = one ? null : [],\r\n            max = one ? index + 1 : options.length;\r\n\r\n          if ( index < 0 ) {\r\n            i = max;\r\n\r\n          } else {\r\n            i = one ? index : 0;\r\n          }\r\n\r\n          // Loop through all the selected options\r\n          for ( ; i < max; i++ ) {\r\n            option = options[ i ];\r\n\r\n            if ( option.selected &&\r\n\r\n                // Don't return options that are disabled or in a disabled optgroup\r\n                !option.disabled &&\r\n                ( !option.parentNode.disabled ||\r\n                  !noder.nodeName( option.parentNode, \"optgroup\" ) ) ) {\r\n\r\n              // Get the specific value for the option\r\n              value = val(option);\r\n\r\n              // We don't need an array for one selects\r\n              if ( one ) {\r\n                return value;\r\n              }\r\n\r\n              // Multi-Selects return an array\r\n              values.push( value );\r\n            }\r\n          }\r\n\r\n          return values;\r\n        },\r\n\r\n        set: function( elem, value ) {\r\n          var optionSet, option,\r\n            options = elem.options,\r\n            values = langx.makeArray( value ),\r\n            i = options.length;\r\n\r\n          while ( i-- ) {\r\n            option = options[ i ];\r\n\r\n            /* eslint-disable no-cond-assign */\r\n\r\n            if ( option.selected =\r\n              langx.inArray( valHooks.option.get( option ), values ) > -1\r\n            ) {\r\n              optionSet = true;\r\n            }\r\n\r\n            /* eslint-enable no-cond-assign */\r\n          }\r\n\r\n          // Force browsers to behave consistently when non-matching value is set\r\n          if ( !optionSet ) {\r\n            elem.selectedIndex = -1;\r\n          }\r\n          return values;\r\n        }\r\n      }\r\n    };\r\n\r\n\r\n    // Radios and checkboxes getter/setter\r\n    langx.each( [ \"radio\", \"checkbox\" ], function() {\r\n      valHooks[ this ] = {\r\n        set: function( elem, value ) {\r\n          if ( langx.isArray( value ) ) {\r\n            return ( elem.checked = langx.inArray( val(elem), value ) > -1 );\r\n          }\r\n        }\r\n      };\r\n    });\r\n\r\n\r\n\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function aria(elm, name, value) {\r\n        return this.attr(elm, \"aria-\" + name, value);\r\n    }\r\n\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return elm.getAttribute ? elm.getAttribute(name) : elm[name];\r\n            }\r\n        } else {\r\n            elm.setAttribute ? elm.setAttribute(name, value) : elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    /*\r\n     *  Read all \"data-*\" attributes from a node\r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    /*\r\n     * xxx\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    } \r\n    /*\r\n     * Remove from the element all items that have not yet been run. \r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function cleanData(elm) {\r\n        if (elm[\"_$_store\"]) {\r\n            delete elm[\"_$_store\"];\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Remove a previously-stored piece of data. \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function removeData(elm, names) {\r\n        if (names) {\r\n            if (langx.isString(names)) {\r\n                names = names.split(/\\s+/);\r\n            }\r\n            var store = _store(elm, true);\r\n            names.forEach(function(name) {\r\n                delete store[name];\r\n            });            \r\n        } else {\r\n            cleanData(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * xxx \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    /*\r\n     * Get or set the value of an property for the specified element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * remove Attributes  \r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n\r\n    /*\r\n     * Remove the value of a property for the first element in the set of matched elements or set one or more properties for every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Get the combined text contents of each element in the set of matched elements, including their descendants, or set the text contents of the matched elements.  \r\n     * @param {Object} elm  \r\n     * @param {String} txt\r\n     */\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Get the current value of the first element in the set of matched elements or set the value of every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} value\r\n     */\r\n    function val(elm, value) {\r\n        var hooks = valHooks[ elm.type ] || valHooks[ elm.nodeName.toLowerCase() ];\r\n        if (value === undefined) {\r\n/*\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                if (/input|textarea/i.test(elm.tagName)) {\r\n                  return elm.value;\r\n                }\r\n                return text(elm);\r\n            }\r\n*/\r\n\r\n          if ( hooks &&  \"get\" in hooks &&  ( ret = hooks.get( elm, \"value\" ) ) !== undefined ) {\r\n            return ret;\r\n          }\r\n\r\n          ret = elm.value;\r\n\r\n          // Handle most common string cases\r\n          if ( typeof ret === \"string\" ) {\r\n            return ret.replace( /\\r/g, \"\" );\r\n          }\r\n\r\n          // Handle cases where value is null/undef or number\r\n          return ret == null ? \"\" : ret;\r\n\r\n        } else {\r\n/*          \r\n            if (/input|textarea/i.test(elm.tagName)) {\r\n              elm.value = value;\r\n            } else {\r\n              text(elm,value);\r\n            }\r\n            return this;\r\n*/\r\n          // Treat null/undefined as \"\"; convert numbers to string\r\n          if ( value == null ) {\r\n            value = \"\";\r\n\r\n          } else if ( typeof value === \"number\" ) {\r\n            value += \"\";\r\n\r\n          } else if ( langx.isArray( value ) ) {\r\n            value = langx.map( value, function( value1 ) {\r\n              return value1 == null ? \"\" : value1 + \"\";\r\n            } );\r\n          }\r\n\r\n          // If set returns undefined, fall back to normal setting\r\n          if ( !hooks || !( \"set\" in hooks ) || hooks.set( elm, value, \"value\" ) === undefined ) {\r\n            elm.value = value;\r\n          }\r\n        }      \r\n    }\r\n\r\n\r\n    finder.pseudos.data = function( elem, i, match,dataName ) {\r\n        return !!data( elem, dataName || match[3]);\r\n    };\r\n   \r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        aria: aria,\r\n\r\n        attr: attr,\r\n\r\n        cleanData: cleanData,\r\n\r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val,\r\n\r\n        valHooks : valHooks\r\n    });\r\n\r\n    return skylark.attach(\"domx.data\", datax);\r\n});\ndefine('skylark-domx-query/query',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-finder\"\r\n], function(skylark, langx, noder, finder) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        indexOf = Array.prototype.indexOf,\r\n        sort = Array.prototype.sort,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_node_operation(func, context, oldValueFunc) {\r\n        return function(html) {\r\n            var argType, nodes = langx.map(arguments, function(arg) {\r\n                argType = type(arg)\r\n                return argType == \"function\" || argType == \"object\" || argType == \"array\" || arg == null ?\r\n                    arg : noder.createFragment(arg)\r\n            });\r\n            if (nodes.length < 1) {\r\n                return this\r\n            }\r\n            this.each(function(idx) {\r\n                func.apply(context, [this, nodes, idx > 0]);\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = langx.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return query(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                } else {\r\n                    return [];\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            //if (selector === undefined) { //TODO : needs confirm?\r\n            //    selector = util;\r\n            //    util = undefined;\r\n            //}\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) { // TODO\r\n                //if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                //} else {\r\n                //    return [];\r\n                //}\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx,node) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, newArg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this;\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem,name,newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        if (langx.isString(context)) {\r\n                            context = finder.find(context);\r\n                        }\r\n\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (selector !== window && isArrayLike(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    });\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                $.ready(function() {\r\n                    selector($);\r\n                });\r\n                return rootQuery;\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        },rootQuery = $(document);\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n            length : 0,\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            forEach: function() {\r\n                return forEach.apply(this,arguments);\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            indexOf: function() {\r\n                return indexOf.apply(this,arguments);\r\n            },\r\n\r\n            sort : function() {\r\n                return sort.apply(this,arguments);\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            //remove: wrapper_every_act(noder.remove, noder),\r\n            remove : function(selector) {\r\n                if (selector) {\r\n                    return this.find(selector).remove();\r\n                }\r\n                this.each(function(i,node){\r\n                    noder.remove(node);\r\n                });\r\n                return this;\r\n            },\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                if (this.length > 0) {\r\n                    var self = this;\r\n                    if (langx.isString(selector)) {\r\n                        return some.call(self,function(elem) {\r\n                            return finder.matches(elem, selector);\r\n                        });\r\n                    } else if (langx.isArrayLike(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return langx.inArray(elem, selector) > -1;\r\n                        });\r\n                    } else if (langx.isHtmlNode(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return elem ==  selector;\r\n                        });\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            \r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx,node) {\r\n                        if (!selector.call(this, idx,node)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            html: wrapper_value(noder.html, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            pushStack : function(elms) {\r\n                var ret = $(elms);\r\n                ret.prevObject = this;\r\n                return ret;\r\n            },\r\n            \r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(html) {\r\n                /*\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index,node) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index,node) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n                */\r\n                var htmlIsFunction = typeof html === \"function\";\r\n\r\n                return this.each( function( i ) {\r\n                    $( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );\r\n                } );                \r\n            },\r\n\r\n            wrapAll: function(html) {\r\n                /*\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n                */\r\n                var wrap;\r\n\r\n                if ( this[ 0 ] ) {\r\n                    if ( typeof html === \"function\" ) {\r\n                        html = html.call( this[ 0 ] );\r\n                    }\r\n\r\n                    // The elements to wrap the target around\r\n                    wrap = $( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\r\n\r\n                    if ( this[ 0 ].parentNode ) {\r\n                        wrap.insertBefore( this[ 0 ] );\r\n                    }\r\n\r\n                    wrap.map( function() {\r\n                        var elem = this;\r\n\r\n                        while ( elem.firstElementChild ) {\r\n                            elem = elem.firstElementChild;\r\n                        }\r\n\r\n                        return elem;\r\n                    } ).append( this );\r\n                }\r\n\r\n                return this;\r\n\r\n            },\r\n\r\n            wrapInner: function(html) {\r\n                /*\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index,node) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index,node) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n                */\r\n                if ( typeof html === \"function\" ) {\r\n                    return this.each( function( i ) {\r\n                        $( this ).wrapInner( html.call( this, i ) );\r\n                    } );\r\n                }\r\n\r\n                return this.each( function() {\r\n                    var self = $( this ),\r\n                        contents = self.contents();\r\n\r\n                    if ( contents.length ) {\r\n                        contents.wrapAll( html );\r\n\r\n                    } else {\r\n                        self.append( html );\r\n                    }\r\n                } );\r\n\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                /*\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n                */\r\n                this.parent(selector).not(\"body\").each( function() {\r\n                    $(this).replaceWith(this.childNodes);\r\n                });\r\n                return this;\r\n\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSiblings, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            }\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n        $.fn.hover = function(fnOver, fnOut) {\r\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n        };\r\n\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n\r\n        langx.each( {\r\n            appendTo: \"append\",\r\n            prependTo: \"prepend\",\r\n            insertBefore: \"before\",\r\n            insertAfter: \"after\",\r\n            replaceAll: \"replaceWith\"\r\n        }, function( name, original ) {\r\n            $.fn[ name ] = function( selector ) {\r\n                var elems,\r\n                    ret = [],\r\n                    insert = $( selector ),\r\n                    last = insert.length - 1,\r\n                    i = 0;\r\n\r\n                for ( ; i <= last; i++ ) {\r\n                    elems = i === last ? this : this.clone( true );\r\n                    $( insert[ i ] )[ original ]( elems );\r\n\r\n                    // Support: Android <=4.0 only, PhantomJS 1 only\r\n                    // .get() because push.apply(_, arraylike) throws on ancient WebKit\r\n                    push.apply( ret, elems.get() );\r\n                }\r\n\r\n                return this.pushStack( ret );\r\n            };\r\n        } );\r\n\r\n/*\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceAll = function(selector) {\r\n            $(selector).replaceWith(this);\r\n            return this;\r\n        };\r\n*/\r\n        return $;\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.scrollParent = function( includeHidden ) {\r\n            var position = this.css( \"position\" ),\r\n                excludeStaticParent = position === \"absolute\",\r\n                overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n                scrollParent = this.parents().filter( function() {\r\n                    var parent = $( this );\r\n                    if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                        return false;\r\n                    }\r\n                    return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                        parent.css( \"overflow-x\" ) );\r\n                } ).eq( 0 );\r\n\r\n            return position === \"fixed\" || !scrollParent.length ?\r\n                $( this[ 0 ].ownerDocument || document ) :\r\n                scrollParent;\r\n        };\r\n\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings,prev,prevAll,next,nextAll'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n\r\n\r\n        $.fn.disableSelection = ( function() {\r\n            var eventType = \"onselectstart\" in document.createElement( \"div\" ) ?\r\n                \"selectstart\" :\r\n                \"mousedown\";\r\n\r\n            return function() {\r\n                return this.on( eventType + \".ui-disableSelection\", function( event ) {\r\n                    event.preventDefault();\r\n                } );\r\n            };\r\n        } )();\r\n\r\n        $.fn.enableSelection = function() {\r\n            return this.off( \".ui-disableSelection\" );\r\n        };\r\n\r\n        $.fn.reflow = function() {\r\n            return noder.flow(this[0]);\r\n        };\r\n\r\n        $.fn.isBlockNode = function() {\r\n            return noder.isBlockNode(this[0]);\r\n        };\r\n       \r\n\r\n    })(query);\r\n\r\n    query.fn.plugin = function(name,options) {\r\n        var args = slice.call( arguments, 1 ),\r\n            self = this,\r\n            returnValue = this;\r\n\r\n        this.each(function(){\r\n            returnValue = plugins.instantiate.apply(self,[this,name].concat(args));\r\n        });\r\n        return returnValue;\r\n    };\r\n\r\n\r\n    query.wraps = {\r\n        wrapper_node_operation,\r\n        wrapper_map,\r\n        wrapper_value,\r\n        wrapper_selector,\r\n        wrapper_some_chk,\r\n        wrapper_selector_until,\r\n        wrapper_every_act_firstArgFunc,\r\n        wrapper_every_act,\r\n        wrapper_name_value\r\n\r\n    };\r\n\r\n    return skylark.attach(\"domx.query\", query);\r\n\r\n});\ndefine('skylark-domx-query/main',[\r\n\t\"./query\"\r\n],function(query){\r\n\treturn query;\r\n});\ndefine('skylark-domx-query', ['skylark-domx-query/main'], function (main) { return main; });\n\ndefine('skylark-domx-velm/velm',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-query\"\r\n], function(skylark, langx, noder, finder, $) {\r\n    var map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n    /*\r\n     * VisualElement is a skylark class type wrapping a visule dom node,\r\n     * provides a number of prototype methods and supports chain calls.\r\n     */\r\n    var VisualElement = langx.klass({\r\n        klassName: \"VisualElement\",\r\n\r\n        \"_construct\": function(node) {\r\n            if (langx.isString(node)) {\r\n                if (node.charAt(0) === \"<\") {\r\n                    //html\r\n                    node = noder.createFragment(node)[0];\r\n                } else {\r\n                    // id\r\n                    node = document.getElementById(node);\r\n                }\r\n            }\r\n            this._elm = node;\r\n        }\r\n    });\r\n\r\n    VisualElement.prototype.$ = VisualElement.prototype.query = function(selector) {\r\n        return $(selector,this._elm);\r\n    };\r\n\r\n    VisualElement.prototype.elm = function() {\r\n        return this._elm;\r\n    };\r\n\r\n    /*\r\n     * the VisualElement object wrapping document.body\r\n     */\r\n    var root = new VisualElement(document.body),\r\n        velm = function(node) {\r\n            if (node) {\r\n                return new VisualElement(node);\r\n            } else {\r\n                return root;\r\n            }\r\n        };\r\n    /*\r\n     * Extend VisualElement prototype with wrapping the specified methods.\r\n     * @param {ArrayLike} fn\r\n     * @param {Object} context\r\n     */\r\n    function _delegator(fn, context) {\r\n        return function() {\r\n            var self = this,\r\n                elem = self._elm,\r\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\r\n\r\n            if (ret) {\r\n                if (ret === context) {\r\n                    return self;\r\n                } else {\r\n                    if (ret instanceof HTMLElement) {\r\n                        ret = new VisualElement(ret);\r\n                    } else if (langx.isArrayLike(ret)) {\r\n                        ret = map.call(ret, function(el) {\r\n                            if (el instanceof HTMLElement) {\r\n                                return new VisualElement(el);\r\n                            } else {\r\n                                return el;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n    }\r\n\r\n    langx.mixin(velm, {\r\n        batch: function(nodes, action, args) {\r\n            nodes.forEach(function(node) {\r\n                var elm = (node instanceof VisualElement) ? node : velm(node);\r\n                elm[action].apply(elm, args);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        root: new VisualElement(document.body),\r\n\r\n        VisualElement: VisualElement,\r\n\r\n        partial: function(name, fn) {\r\n            var props = {};\r\n\r\n            props[name] = fn;\r\n\r\n            VisualElement.partial(props);\r\n        },\r\n\r\n        delegate: function(names, context) {\r\n            var props = {};\r\n\r\n            names.forEach(function(name) {\r\n                props[name] = _delegator(context[name], context);\r\n            });\r\n\r\n            VisualElement.partial(props);\r\n        }\r\n    });\r\n\r\n    // from ./finder\r\n    velm.delegate([\r\n        \"ancestor\",\r\n        \"ancestors\",\r\n        \"children\",\r\n        \"descendant\",\r\n        \"find\",\r\n        \"findAll\",\r\n        \"firstChild\",\r\n        \"lastChild\",\r\n        \"matches\",\r\n        \"nextSibling\",\r\n        \"nextSiblings\",\r\n        \"parent\",\r\n        \"previousSibling\",\r\n        \"previousSiblings\",\r\n        \"siblings\"\r\n    ], finder);\r\n\r\n    /*\r\n     * find a dom element matched by the specified selector.\r\n     * @param {String} selector\r\n     */\r\n    velm.find = function(selector) {\r\n        if (selector === \"body\") {\r\n            return this.root;\r\n        } else {\r\n            return this.root.descendant(selector);\r\n        }\r\n    };\r\n\r\n\r\n    // from ./noder\r\n    velm.delegate([\r\n        \"after\",\r\n        \"append\",\r\n        \"before\",\r\n        \"clone\",\r\n        \"contains\",\r\n        \"contents\",\r\n        \"empty\",\r\n        \"html\",\r\n        \"isChildOf\",\r\n        \"isDocument\",\r\n        \"isInDocument\",\r\n        \"isWindow\",\r\n        \"ownerDoc\",\r\n        \"prepend\",\r\n        \"remove\",\r\n        \"removeChild\",\r\n        \"replace\",\r\n        \"reverse\",\r\n        \"throb\",\r\n        \"traverse\",\r\n        \"wrapper\",\r\n        \"wrapperInner\",\r\n        \"unwrap\"\r\n    ], noder);\r\n\r\n\r\n    return skylark.attach(\"domx.velm\", velm);\r\n});\ndefine('skylark-domx-velm/main',[\r\n\t\"./velm\"\r\n],function(velm){\r\n\treturn velm;\r\n});\ndefine('skylark-domx-velm', ['skylark-domx-velm/main'], function (main) { return main; });\n\ndefine('skylark-domx-data/main',[\r\n    \"./data\",\r\n    \"skylark-domx-velm\",\r\n    \"skylark-domx-query\"    \r\n],function(data,velm,$){\r\n    // from ./data\r\n    velm.delegate([\r\n        \"attr\",\r\n        \"data\",\r\n        \"prop\",\r\n        \"removeAttr\",\r\n        \"removeData\",\r\n        \"text\",\r\n        \"val\"\r\n    ], data);\r\n\r\n    $.fn.text = $.wraps.wrapper_value(data.text, data, data.text);\r\n\r\n    $.fn.attr = $.wraps.wrapper_name_value(data.attr, data, data.attr);\r\n\r\n    $.fn.removeAttr = $.wraps.wrapper_every_act(data.removeAttr, data);\r\n\r\n    $.fn.prop = $.wraps.wrapper_name_value(data.prop, data, data.prop);\r\n\r\n    $.fn.removeProp = $.wraps.wrapper_every_act(data.removeProp, data);\r\n\r\n    $.fn.data = $.wraps.wrapper_name_value(data.data, data);\r\n\r\n    $.fn.removeData = $.wraps.wrapper_every_act(data.removeData);\r\n\r\n    $.fn.val = $.wraps.wrapper_value(data.val, data, data.val);\r\n\r\n\r\n    return data;\r\n});\ndefine('skylark-domx-data', ['skylark-domx-data/main'], function (main) { return main; });\n\ndefine('skylark-domx-eventer/eventer',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-data\"\r\n], function(skylark, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n\r\n    var NativeEventCtors = [\r\n            window[\"CustomEvent\"], // 0 default\r\n            window[\"CompositionEvent\"], // 1\r\n            window[\"DragEvent\"], // 2\r\n            window[\"Event\"], // 3\r\n            window[\"FocusEvent\"], // 4\r\n            window[\"KeyboardEvent\"], // 5\r\n            window[\"MessageEvent\"], // 6\r\n            window[\"MouseEvent\"], // 7\r\n            window[\"MouseScrollEvent\"], // 8\r\n            window[\"MouseWheelEvent\"], // 9\r\n            window[\"MutationEvent\"], // 10\r\n            window[\"ProgressEvent\"], // 11\r\n            window[\"TextEvent\"], // 12\r\n            window[\"TouchEvent\"], // 13\r\n            window[\"UIEvent\"], // 14\r\n            window[\"WheelEvent\"], // 15\r\n            window[\"ClipboardEvent\"] // 16\r\n        ],\r\n        NativeEvents = {\r\n            \"compositionstart\": 1, // CompositionEvent\r\n            \"compositionend\": 1, // CompositionEvent\r\n            \"compositionupdate\": 1, // CompositionEvent\r\n\r\n            \"beforecopy\": 16, // ClipboardEvent\r\n            \"beforecut\": 16, // ClipboardEvent\r\n            \"beforepaste\": 16, // ClipboardEvent\r\n            \"copy\": 16, // ClipboardEvent\r\n            \"cut\": 16, // ClipboardEvent\r\n            \"paste\": 16, // ClipboardEvent\r\n\r\n            \"drag\": 2, // DragEvent\r\n            \"dragend\": 2, // DragEvent\r\n            \"dragenter\": 2, // DragEvent\r\n            \"dragexit\": 2, // DragEvent\r\n            \"dragleave\": 2, // DragEvent\r\n            \"dragover\": 2, // DragEvent\r\n            \"dragstart\": 2, // DragEvent\r\n            \"drop\": 2, // DragEvent\r\n\r\n            \"abort\": 3, // Event\r\n            \"change\": 3, // Event\r\n            \"error\": 3, // Event\r\n            \"selectionchange\": 3, // Event\r\n            \"submit\": 3, // Event\r\n            \"reset\": 3, // Event\r\n\r\n            \"focus\": 4, // FocusEvent\r\n            \"blur\": 4, // FocusEvent\r\n            \"focusin\": 4, // FocusEvent\r\n            \"focusout\": 4, // FocusEvent\r\n\r\n            \"keydown\": 5, // KeyboardEvent\r\n            \"keypress\": 5, // KeyboardEvent\r\n            \"keyup\": 5, // KeyboardEvent\r\n\r\n            \"message\": 6, // MessageEvent\r\n\r\n            \"click\": 7, // MouseEvent\r\n            \"contextmenu\": 7, // MouseEvent\r\n            \"dblclick\": 7, // MouseEvent\r\n            \"mousedown\": 7, // MouseEvent\r\n            \"mouseup\": 7, // MouseEvent\r\n            \"mousemove\": 7, // MouseEvent\r\n            \"mouseover\": 7, // MouseEvent\r\n            \"mouseout\": 7, // MouseEvent\r\n            \"mouseenter\": 7, // MouseEvent\r\n            \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n            \"textInput\": 12, // TextEvent\r\n\r\n            \"touchstart\": 13, // TouchEvent\r\n            \"touchmove\": 13, // TouchEvent\r\n            \"touchend\": 13, // TouchEvent\r\n\r\n            \"load\": 14, // UIEvent\r\n            \"resize\": 14, // UIEvent\r\n            \"select\": 14, // UIEvent\r\n            \"scroll\": 14, // UIEvent\r\n            \"unload\": 14, // UIEvent,\r\n\r\n            \"wheel\": 15 // WheelEvent\r\n        };\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return NativeEventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type || {};\r\n                type = props.type || \"\";\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(src, props) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: src\r\n            };\r\n        for (key in src) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && src[key] !== undefined) {\r\n                proxy[key] = src[key];\r\n            }\r\n        }\r\n        if (props) {\r\n            langx.mixin(proxy, props);\r\n        }\r\n        return compatible(proxy, src);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings, function(idx, binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns && options.ns.indexOf(ns) === -1) {\r\n                                return;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            var originalEvent = self._event;\r\n                            if (originalEvent in hover) {\r\n                                var related = e.relatedTarget;\r\n                                if (related && (related === match || noder.contains(match, related))) {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n                    /*\r\n                                        if (event in hover) {\r\n                                            var l = self._listener;\r\n                                            self._listener = function(e) {\r\n                                                var related = e.relatedTarget;\r\n                                                if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                                    return l.apply(this, arguments);\r\n                                                }\r\n                                            }\r\n                                        }\r\n                    */\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                if (event) {\r\n                    var listener = events[event];\r\n\r\n                    if (listener) {\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                } else {\r\n                    //remove all events\r\n                    for (event in events) {\r\n                        var listener = events[event];\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    /*   \r\n     * Remove an event handler for one or more events from the specified element.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional } selector\r\n     * @param {Function} callback\r\n     */\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach an event handler function for one or more events to the selected elements.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     * @param {Boolean　Optional} one\r\n     */\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach a handler to an event for the elements. The handler is executed at most once per \r\n     * @param {HTMLElement} elm  \r\n     * @param {String} event\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     */\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Prevents propagation and clobbers the default action of the passed event. The same as calling event.preventDefault() and event.stopPropagation(). \r\n     * @param {String} event\r\n     */\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Execute all handlers and behaviors attached to the matched elements for the given event  \r\n     * @param {String} evented\r\n     * @param {String} type\r\n     * @param {Array or PlainObject } args\r\n     */\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        var fn = (evented.dispatchEvent || evented.trigger);\r\n        if (fn) {\r\n            fn.call(evented, e);\r\n        } else {\r\n            console.warn(\"The evented parameter is not a eventable object\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n    /*   \r\n     * Specify a function to execute when the DOM is fully loaded.  \r\n     * @param {Function} callback\r\n     */\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            langx.defer(callback);\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"backspace\": 8,\r\n        \"comma\": 188,\r\n        \"delete\": 46,\r\n        \"down\": 40,\r\n        \"end\": 35,\r\n        \"enter\": 13,\r\n        \"escape\": 27,\r\n        \"home\": 36,\r\n        \"left\": 37,\r\n        \"page_down\": 34,\r\n        \"page_up\": 33,\r\n        \"period\": 190,\r\n        \"right\": 39,\r\n        \"space\": 32,\r\n        \"tab\": 9,\r\n        \"up\": 38\r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    if (browser.support.transition) {\r\n        specialEvents.transitionEnd = {\r\n//          handle: function (e) {\r\n//            if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)\r\n//          },\r\n          bindType: browser.support.transition.end,\r\n          delegateType: browser.support.transition.end\r\n        }        \r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        NativeEvents : NativeEvents,\r\n        \r\n        create: createEvent,\r\n\r\n        keys: keyCodeLookup,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special: specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    each(NativeEvents,function(name){\r\n        eventer[name] = function(elm,selector,data,callback) {\r\n            if (arguments.length>1) {\r\n                return this.on(elm,name,selector,data,callback);\r\n            } else {\r\n                if (name == \"focus\") {\r\n                    if (elm.focus) {\r\n                        elm.focus();\r\n                    }\r\n                } else if (name == \"blur\") {\r\n                    if (elm.blur) {\r\n                        elm.blur();\r\n                    }\r\n                } else if (name == \"click\") {\r\n                    if (elm.click) {\r\n                        elm.click();\r\n                    }\r\n                } else {\r\n                    this.trigger(elm,name);\r\n                }\r\n\r\n                return this;\r\n            }\r\n        };\r\n    });\r\n\r\n    return skylark.attach(\"domx.eventer\",eventer);\r\n});\ndefine('skylark-domx-eventer/main',[\r\n    \"skylark-langx/langx\",\r\n    \"./eventer\",\r\n    \"skylark-domx-velm\",\r\n    \"skylark-domx-query\"        \r\n],function(langx,eventer,velm,$){\r\n\r\n    var delegateMethodNames = [\r\n        \"off\",\r\n        \"on\",\r\n        \"one\",\r\n        \"trigger\"\r\n    ];\r\n\r\n    langx.each(eventer.NativeEvents,function(name){\r\n        delegateMethodNames.push(name);\r\n    });\r\n\r\n    // from ./eventer\r\n    velm.delegate(delegateMethodNames, eventer);\r\n\r\n    langx.each(delegateMethodNames,function(i,name){\r\n        $.fn[name] = $.wraps.wrapper_every_act(eventer[name],eventer);\r\n    });\r\n\r\n\r\n    /*\r\n    $.fn.on = $.wraps.wrapper_every_act(eventer.on, eventer);\r\n\r\n    $.fn.off = $.wraps.wrapper_every_act(eventer.off, eventer);\r\n\r\n    $.fn.trigger = $.wraps.wrapper_every_act(eventer.trigger, eventer);\r\n\r\n    ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n        'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n        'change select keydown keypress keyup error transitionEnd').split(' ').forEach(function(event) {\r\n        $.fn[event] = $.wraps.wrapper_every_act(eventer[event],eventer);\r\n    });\r\n\r\n    $.fn.one = function(event, selector, data, callback) {\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = null;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = null;\r\n        }\r\n\r\n        return this.on(event, selector, data, callback, 1)\r\n    }; \r\n    */\r\n\r\n    $.ready = eventer.ready;\r\n\r\n    return eventer;\r\n});\ndefine('skylark-domx-eventer', ['skylark-domx-eventer/main'], function (main) { return main; });\n\ndefine('skylark-domx-styler/styler',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\"\r\n], function(skylark, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} value\r\n     */\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n    function disabled(elm, value ) {\r\n        if (arguments.length < 2) {\r\n            return !!this.dom.disabled;\r\n        }\r\n\r\n        elm.disabled = value;\r\n\r\n        return this;\r\n    }\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getStyles(element).getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n    /*\r\n     * Display the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    /*\r\n     * Hide the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n\r\n    function getStyles( elem ) {\r\n\r\n        // Support: IE <=11 only, Firefox <=30 (#15098, #14150)\r\n        // IE throws on elements created in popups\r\n        // FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\r\n        var view = elem.ownerDocument.defaultView;\r\n\r\n        if ( !view || !view.opener ) {\r\n            view = window;\r\n        }\r\n\r\n        return view.getComputedStyle( elem);\r\n    }\r\n\r\n\r\n    /*\r\n     * Get the value of a computed style property for the first element in the set of matched elements or set one or more CSS properties for every matched element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} property\r\n     * @param {Any} value\r\n     */\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getStyles(elm)\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(dasherize(property))\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(dasherize(prop)))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Determine whether any of the matched elements are assigned the given class.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    /*\r\n     * Remove a single class, multiple classes, or all classes from each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm, \"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Add or remove one or more classes from the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     * @param {} when\r\n     */\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: false,\r\n        cssHooks: {\r\n\r\n        },\r\n\r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        disabled : disabled,        \r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return skylark.attach(\"domx.styler\", styler);\r\n});\ndefine('skylark-domx-styler/main',[\r\n\t\"./styler\",\r\n\t\"skylark-domx-velm\",\r\n\t\"skylark-domx-query\"\t\r\n],function(styler,velm,$){\r\n\t\r\n    // from ./styler\r\n    velm.delegate([\r\n        \"addClass\",\r\n        \"className\",\r\n        \"css\",\r\n        \"hasClass\",\r\n        \"hide\",\r\n        \"isInvisible\",\r\n        \"removeClass\",\r\n        \"show\",\r\n        \"toggleClass\"\r\n    ], styler);\r\n\r\n    // properties\r\n\r\n    var properties = [ 'position', 'left', 'top', 'right', 'bottom', 'width', 'height', 'border', 'borderLeft',\r\n    'borderTop', 'borderRight', 'borderBottom', 'borderColor', 'display', 'overflow', 'margin', 'marginLeft', 'marginTop', 'marginRight', 'marginBottom', 'padding', 'paddingLeft', 'paddingTop', 'paddingRight', 'paddingBottom', 'color',\r\n    'background', 'backgroundColor', 'opacity', 'fontSize', 'fontWeight', 'textAlign', 'textDecoration', 'textTransform', 'cursor', 'zIndex' ];\r\n\r\n    properties.forEach( function ( property ) {\r\n\r\n        var method = property;\r\n\r\n        velm.VisualElement.prototype[method ] = function (value) {\r\n\r\n            this.css( property, value );\r\n\r\n            return this;\r\n\r\n        };\r\n\r\n    });\r\n\r\n\r\n    $.fn.style = $.wraps.wrapper_name_value(styler.css, styler);\r\n\r\n    $.fn.css = $.wraps.wrapper_name_value(styler.css, styler);\r\n\r\n    //hasClass(name)\r\n    $.fn.hasClass = $.wraps.wrapper_some_chk(styler.hasClass, styler);\r\n\r\n    //addClass(name)\r\n    $.fn.addClass = $.wraps.wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className);\r\n\r\n    //removeClass(name)\r\n    $.fn.removeClass = $.wraps.wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className);\r\n\r\n    //toogleClass(name,when)\r\n    $.fn.toggleClass = $.wraps.wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className);\r\n\r\n    $.fn.replaceClass = function(newClass, oldClass) {\r\n        this.removeClass(oldClass);\r\n        this.addClass(newClass);\r\n        return this;\r\n    };\r\n\r\n    $.fn.replaceClass = function(newClass, oldClass) {\r\n        this.removeClass(oldClass);\r\n        this.addClass(newClass);\r\n        return this;\r\n    };\r\n        \r\n\treturn styler;\r\n});\ndefine('skylark-domx-styler', ['skylark-domx-styler/main'], function (main) { return main; });\n\ndefine('skylark-domx-geom/geom',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-styler\"\r\n], function(skylark, langx, noder, styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel,\r\n        offsetParent = noder.offsetParent,\r\n        cachedScrollbarWidth;\r\n\r\n    function scrollbarWidth() {\r\n        if (cachedScrollbarWidth !== undefined) {\r\n            return cachedScrollbarWidth;\r\n        }\r\n        var w1, w2,\r\n            div = noder.createFragment(\"<div style=\" +\r\n                \"'display:block;position:absolute;width:200px;height:200px;overflow:hidden;'>\" +\r\n                \"<div style='height:300px;width:auto;'></div></div>\")[0],\r\n            innerDiv = div.childNodes[0];\r\n\r\n        noder.append(document.body, div);\r\n\r\n        w1 = innerDiv.offsetWidth;\r\n\r\n        styler.css(div, \"overflow\", \"scroll\");\r\n\r\n        w2 = innerDiv.offsetWidth;\r\n\r\n        if (w1 === w2) {\r\n            w2 = div[0].clientWidth;\r\n        }\r\n\r\n        noder.remove(div);\r\n\r\n        return (cachedScrollbarWidth = w1 - w2);\r\n    }\r\n    /*\r\n     * Get the widths of each border of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function borderExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth, elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    /*\r\n     * Get or set the viewport position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the viewport rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the height of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the size of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get or set the width of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the rect of the specified element content box.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n\r\n    function fullCover(elem, hor, vert) {\r\n        let vertical = vert;\r\n        let horizontal = hor;\r\n        if (langx.isUndefined(horizontal)) {\r\n            horizontal = true;\r\n        }\r\n        if (langx.isUndefined(vertical)) {\r\n            vertical = true;\r\n        }\r\n        elem.style.position = 'absolute';\r\n        if (horizontal) {\r\n            elem.style.left = 0;\r\n            elem.style.right = 0;\r\n        }\r\n        if (vertical) {\r\n            elem.style.top = 0;\r\n            elem.style.bottom = 0;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLDocument} doc\r\n     */\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each margin of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function marginExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n\r\n    function marginRect(elm) {\r\n        var obj = relativeRect(elm),\r\n            me = marginExtents(elm);\r\n\r\n        return {\r\n            left: obj.left,\r\n            top: obj.top,\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n\r\n    function marginSize(elm) {\r\n        var obj = size(elm),\r\n            me = marginExtents(elm);\r\n\r\n        return {\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each padding of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function paddingExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the position of the specified element border box , relative to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the rect of the specified element border box , relatived to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Scroll the specified element into view.\r\n     * @param {HTMLElement} elm\r\n     * @param {} align\r\n     */\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n    /*\r\n     * Get or set the current horizontal position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollLeft(elm, value) {\r\n        if (elm.nodeType === 9) {\r\n            elm = elm.defaultView;\r\n        }\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or the current vertical position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollTop(elm, value) {\r\n        if (elm.nodeType === 9) {\r\n            elm = elm.defaultView;\r\n        }\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject}dimension\r\n     */\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined && props.width !== \"\" && props.width !== null) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined && props.height !== \"\" && props.height !== null) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        fullCover,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        marginRect: marginRect,\r\n\r\n        marginSize: marginSize,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollbarWidth: scrollbarWidth,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    ( function() {\r\n        var max = Math.max,\r\n            abs = Math.abs,\r\n            rhorizontal = /left|center|right/,\r\n            rvertical = /top|center|bottom/,\r\n            roffset = /[\\+\\-]\\d+(\\.[\\d]+)?%?/,\r\n            rposition = /^\\w+/,\r\n            rpercent = /%$/;\r\n\r\n        function getOffsets( offsets, width, height ) {\r\n            return [\r\n                parseFloat( offsets[ 0 ] ) * ( rpercent.test( offsets[ 0 ] ) ? width / 100 : 1 ),\r\n                parseFloat( offsets[ 1 ] ) * ( rpercent.test( offsets[ 1 ] ) ? height / 100 : 1 )\r\n            ];\r\n        }\r\n\r\n        function parseCss( element, property ) {\r\n            return parseInt( styler.css( element, property ), 10 ) || 0;\r\n        }\r\n\r\n        function getDimensions( raw ) {\r\n            if ( raw.nodeType === 9 ) {\r\n                return {\r\n                    size: size(raw),\r\n                    offset: { top: 0, left: 0 }\r\n                };\r\n            }\r\n            if ( noder.isWindow( raw ) ) {\r\n                return {\r\n                    size: size(raw),\r\n                    offset: { \r\n                        top: scrollTop(raw), \r\n                        left: scrollLeft(raw) \r\n                    }\r\n                };\r\n            }\r\n            if ( raw.preventDefault ) {\r\n                return {\r\n                    size : {\r\n                        width: 0,\r\n                        height: 0\r\n                    },\r\n                    offset: { \r\n                        top: raw.pageY, \r\n                        left: raw.pageX \r\n                    }\r\n                };\r\n            }\r\n            return {\r\n                size: size(raw),\r\n                offset: pagePosition(raw)\r\n            };\r\n        }\r\n\r\n        function getScrollInfo( within ) {\r\n            var overflowX = within.isWindow || within.isDocument ? \"\" :\r\n                    styler.css(within.element,\"overflow-x\" ),\r\n                overflowY = within.isWindow || within.isDocument ? \"\" :\r\n                    styler.css(within.element,\"overflow-y\" ),\r\n                hasOverflowX = overflowX === \"scroll\" ||\r\n                    ( overflowX === \"auto\" && within.width < scrollWidth(within.element) ),\r\n                hasOverflowY = overflowY === \"scroll\" ||\r\n                    ( overflowY === \"auto\" && within.height < scrollHeight(within.element));\r\n            return {\r\n                width: hasOverflowY ? scrollbarWidth() : 0,\r\n                height: hasOverflowX ? scrollbarWidth() : 0\r\n            };\r\n        }\r\n\r\n        function getWithinInfo( element ) {\r\n            var withinElement = element || window,\r\n                isWindow = noder.isWindow( withinElement),\r\n                isDocument = !!withinElement && withinElement.nodeType === 9,\r\n                hasOffset = !isWindow && !isDocument,\r\n                msize = marginSize(withinElement);\r\n            return {\r\n                element: withinElement,\r\n                isWindow: isWindow,\r\n                isDocument: isDocument,\r\n                offset: hasOffset ? pagePosition(element) : { left: 0, top: 0 },\r\n                scrollLeft: scrollLeft(withinElement),\r\n                scrollTop: scrollTop(withinElement),\r\n                width: msize.width,\r\n                height: msize.height\r\n            };\r\n        }\r\n\r\n        function posit(elm,options ) {\r\n            // Make a copy, we don't want to modify arguments\r\n            options = langx.extend( {}, options );\r\n\r\n            var atOffset, targetWidth, targetHeight, targetOffset, basePosition, dimensions,\r\n                target = options.of,\r\n                within = getWithinInfo( options.within ),\r\n                scrollInfo = getScrollInfo( within ),\r\n                collision = ( options.collision || \"flip\" ).split( \" \" ),\r\n                offsets = {};\r\n\r\n            dimensions = getDimensions( target );\r\n            if ( target.preventDefault ) {\r\n\r\n                // Force left top to allow flipping\r\n                options.at = \"left top\";\r\n            }\r\n            targetWidth = dimensions.size.width;\r\n            targetHeight = dimensions.size.height;\r\n            targetOffset = dimensions.offset;\r\n\r\n            // Clone to reuse original targetOffset later\r\n            basePosition = langx.extend( {}, targetOffset );\r\n\r\n            // Force my and at to have valid horizontal and vertical positions\r\n            // if a value is missing or invalid, it will be converted to center\r\n            langx.each( [ \"my\", \"at\" ], function() {\r\n                var pos = ( options[ this ] || \"\" ).split( \" \" ),\r\n                    horizontalOffset,\r\n                    verticalOffset;\r\n\r\n                if ( pos.length === 1 ) {\r\n                    pos = rhorizontal.test( pos[ 0 ] ) ?\r\n                        pos.concat( [ \"center\" ] ) :\r\n                        rvertical.test( pos[ 0 ] ) ?\r\n                            [ \"center\" ].concat( pos ) :\r\n                            [ \"center\", \"center\" ];\r\n                }\r\n                pos[ 0 ] = rhorizontal.test( pos[ 0 ] ) ? pos[ 0 ] : \"center\";\r\n                pos[ 1 ] = rvertical.test( pos[ 1 ] ) ? pos[ 1 ] : \"center\";\r\n\r\n                // Calculate offsets\r\n                horizontalOffset = roffset.exec( pos[ 0 ] );\r\n                verticalOffset = roffset.exec( pos[ 1 ] );\r\n                offsets[ this ] = [\r\n                    horizontalOffset ? horizontalOffset[ 0 ] : 0,\r\n                    verticalOffset ? verticalOffset[ 0 ] : 0\r\n                ];\r\n\r\n                // Reduce to just the positions without the offsets\r\n                options[ this ] = [\r\n                    rposition.exec( pos[ 0 ] )[ 0 ],\r\n                    rposition.exec( pos[ 1 ] )[ 0 ]\r\n                ];\r\n            } );\r\n\r\n            // Normalize collision option\r\n            if ( collision.length === 1 ) {\r\n                collision[ 1 ] = collision[ 0 ];\r\n            }\r\n\r\n            if ( options.at[ 0 ] === \"right\" ) {\r\n                basePosition.left += targetWidth;\r\n            } else if ( options.at[ 0 ] === \"center\" ) {\r\n                basePosition.left += targetWidth / 2;\r\n            }\r\n\r\n            if ( options.at[ 1 ] === \"bottom\" ) {\r\n                basePosition.top += targetHeight;\r\n            } else if ( options.at[ 1 ] === \"center\" ) {\r\n                basePosition.top += targetHeight / 2;\r\n            }\r\n\r\n            atOffset = getOffsets( offsets.at, targetWidth, targetHeight );\r\n            basePosition.left += atOffset[ 0 ];\r\n            basePosition.top += atOffset[ 1 ];\r\n\r\n            return ( function(elem) {\r\n                var collisionPosition, using,\r\n                    msize = marginSize(elem),\r\n                    elemWidth = msize.width,\r\n                    elemHeight = msize.height,\r\n                    marginLeft = parseCss( elem, \"marginLeft\" ),\r\n                    marginTop = parseCss( elem, \"marginTop\" ),\r\n                    collisionWidth = elemWidth + marginLeft + parseCss( elem, \"marginRight\" ) +\r\n                        scrollInfo.width,\r\n                    collisionHeight = elemHeight + marginTop + parseCss( elem, \"marginBottom\" ) +\r\n                        scrollInfo.height,\r\n                    position = langx.extend( {}, basePosition ),\r\n                    myOffset = getOffsets( offsets.my, msize.width, msize.height);\r\n\r\n                if ( options.my[ 0 ] === \"right\" ) {\r\n                    position.left -= elemWidth;\r\n                } else if ( options.my[ 0 ] === \"center\" ) {\r\n                    position.left -= elemWidth / 2;\r\n                }\r\n\r\n                if ( options.my[ 1 ] === \"bottom\" ) {\r\n                    position.top -= elemHeight;\r\n                } else if ( options.my[ 1 ] === \"center\" ) {\r\n                    position.top -= elemHeight / 2;\r\n                }\r\n\r\n                position.left += myOffset[ 0 ];\r\n                position.top += myOffset[ 1 ];\r\n\r\n                collisionPosition = {\r\n                    marginLeft: marginLeft,\r\n                    marginTop: marginTop\r\n                };\r\n\r\n                langx.each( [ \"left\", \"top\" ], function( i, dir ) {\r\n                    if ( positions[ collision[ i ] ] ) {\r\n                        positions[ collision[ i ] ][ dir ]( position, {\r\n                            targetWidth: targetWidth,\r\n                            targetHeight: targetHeight,\r\n                            elemWidth: elemWidth,\r\n                            elemHeight: elemHeight,\r\n                            collisionPosition: collisionPosition,\r\n                            collisionWidth: collisionWidth,\r\n                            collisionHeight: collisionHeight,\r\n                            offset: [ atOffset[ 0 ] + myOffset[ 0 ], atOffset [ 1 ] + myOffset[ 1 ] ],\r\n                            my: options.my,\r\n                            at: options.at,\r\n                            within: within,\r\n                            elem: elem\r\n                        } );\r\n                    }\r\n                } );\r\n\r\n                if ( options.using ) {\r\n\r\n                    // Adds feedback as second argument to using callback, if present\r\n                    using = function( props ) {\r\n                        var left = targetOffset.left - position.left,\r\n                            right = left + targetWidth - elemWidth,\r\n                            top = targetOffset.top - position.top,\r\n                            bottom = top + targetHeight - elemHeight,\r\n                            feedback = {\r\n                                target: {\r\n                                    element: target,\r\n                                    left: targetOffset.left,\r\n                                    top: targetOffset.top,\r\n                                    width: targetWidth,\r\n                                    height: targetHeight\r\n                                },\r\n                                element: {\r\n                                    element: elem,\r\n                                    left: position.left,\r\n                                    top: position.top,\r\n                                    width: elemWidth,\r\n                                    height: elemHeight\r\n                                },\r\n                                horizontal: right < 0 ? \"left\" : left > 0 ? \"right\" : \"center\",\r\n                                vertical: bottom < 0 ? \"top\" : top > 0 ? \"bottom\" : \"middle\"\r\n                            };\r\n                        if ( targetWidth < elemWidth && abs( left + right ) < targetWidth ) {\r\n                            feedback.horizontal = \"center\";\r\n                        }\r\n                        if ( targetHeight < elemHeight && abs( top + bottom ) < targetHeight ) {\r\n                            feedback.vertical = \"middle\";\r\n                        }\r\n                        if ( max( abs( left ), abs( right ) ) > max( abs( top ), abs( bottom ) ) ) {\r\n                            feedback.important = \"horizontal\";\r\n                        } else {\r\n                            feedback.important = \"vertical\";\r\n                        }\r\n                        options.using.call( this, props, feedback );\r\n                    };\r\n                }\r\n\r\n                pagePosition(elem, langx.extend( position, { using: using } ));\r\n            })(elm);\r\n        }\r\n\r\n        var positions = {\r\n            fit: {\r\n                left: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.isWindow ? within.scrollLeft : within.offset.left,\r\n                        outerWidth = within.width,\r\n                        collisionPosLeft = position.left - data.collisionPosition.marginLeft,\r\n                        overLeft = withinOffset - collisionPosLeft,\r\n                        overRight = collisionPosLeft + data.collisionWidth - outerWidth - withinOffset,\r\n                        newOverRight;\r\n\r\n                    // Element is wider than within\r\n                    if ( data.collisionWidth > outerWidth ) {\r\n\r\n                        // Element is initially over the left side of within\r\n                        if ( overLeft > 0 && overRight <= 0 ) {\r\n                            newOverRight = position.left + overLeft + data.collisionWidth - outerWidth -\r\n                                withinOffset;\r\n                            position.left += overLeft - newOverRight;\r\n\r\n                        // Element is initially over right side of within\r\n                        } else if ( overRight > 0 && overLeft <= 0 ) {\r\n                            position.left = withinOffset;\r\n\r\n                        // Element is initially over both left and right sides of within\r\n                        } else {\r\n                            if ( overLeft > overRight ) {\r\n                                position.left = withinOffset + outerWidth - data.collisionWidth;\r\n                            } else {\r\n                                position.left = withinOffset;\r\n                            }\r\n                        }\r\n\r\n                    // Too far left -> align with left edge\r\n                    } else if ( overLeft > 0 ) {\r\n                        position.left += overLeft;\r\n\r\n                    // Too far right -> align with right edge\r\n                    } else if ( overRight > 0 ) {\r\n                        position.left -= overRight;\r\n\r\n                    // Adjust based on position and margin\r\n                    } else {\r\n                        position.left = max( position.left - collisionPosLeft, position.left );\r\n                    }\r\n                },\r\n                top: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.isWindow ? within.scrollTop : within.offset.top,\r\n                        outerHeight = data.within.height,\r\n                        collisionPosTop = position.top - data.collisionPosition.marginTop,\r\n                        overTop = withinOffset - collisionPosTop,\r\n                        overBottom = collisionPosTop + data.collisionHeight - outerHeight - withinOffset,\r\n                        newOverBottom;\r\n\r\n                    // Element is taller than within\r\n                    if ( data.collisionHeight > outerHeight ) {\r\n\r\n                        // Element is initially over the top of within\r\n                        if ( overTop > 0 && overBottom <= 0 ) {\r\n                            newOverBottom = position.top + overTop + data.collisionHeight - outerHeight -\r\n                                withinOffset;\r\n                            position.top += overTop - newOverBottom;\r\n\r\n                        // Element is initially over bottom of within\r\n                        } else if ( overBottom > 0 && overTop <= 0 ) {\r\n                            position.top = withinOffset;\r\n\r\n                        // Element is initially over both top and bottom of within\r\n                        } else {\r\n                            if ( overTop > overBottom ) {\r\n                                position.top = withinOffset + outerHeight - data.collisionHeight;\r\n                            } else {\r\n                                position.top = withinOffset;\r\n                            }\r\n                        }\r\n\r\n                    // Too far up -> align with top\r\n                    } else if ( overTop > 0 ) {\r\n                        position.top += overTop;\r\n\r\n                    // Too far down -> align with bottom edge\r\n                    } else if ( overBottom > 0 ) {\r\n                        position.top -= overBottom;\r\n\r\n                    // Adjust based on position and margin\r\n                    } else {\r\n                        position.top = max( position.top - collisionPosTop, position.top );\r\n                    }\r\n                }\r\n            },\r\n            flip: {\r\n                left: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.offset.left + within.scrollLeft,\r\n                        outerWidth = within.width,\r\n                        offsetLeft = within.isWindow ? within.scrollLeft : within.offset.left,\r\n                        collisionPosLeft = position.left - data.collisionPosition.marginLeft,\r\n                        overLeft = collisionPosLeft - offsetLeft,\r\n                        overRight = collisionPosLeft + data.collisionWidth - outerWidth - offsetLeft,\r\n                        myOffset = data.my[ 0 ] === \"left\" ?\r\n                            -data.elemWidth :\r\n                            data.my[ 0 ] === \"right\" ?\r\n                                data.elemWidth :\r\n                                0,\r\n                        atOffset = data.at[ 0 ] === \"left\" ?\r\n                            data.targetWidth :\r\n                            data.at[ 0 ] === \"right\" ?\r\n                                -data.targetWidth :\r\n                                0,\r\n                        offset = -2 * data.offset[ 0 ],\r\n                        newOverRight,\r\n                        newOverLeft;\r\n\r\n                    if ( overLeft < 0 ) {\r\n                        newOverRight = position.left + myOffset + atOffset + offset + data.collisionWidth -\r\n                            outerWidth - withinOffset;\r\n                        if ( newOverRight < 0 || newOverRight < abs( overLeft ) ) {\r\n                            position.left += myOffset + atOffset + offset;\r\n                        }\r\n                    } else if ( overRight > 0 ) {\r\n                        newOverLeft = position.left - data.collisionPosition.marginLeft + myOffset +\r\n                            atOffset + offset - offsetLeft;\r\n                        if ( newOverLeft > 0 || abs( newOverLeft ) < overRight ) {\r\n                            position.left += myOffset + atOffset + offset;\r\n                        }\r\n                    }\r\n                },\r\n                top: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.offset.top + within.scrollTop,\r\n                        outerHeight = within.height,\r\n                        offsetTop = within.isWindow ? within.scrollTop : within.offset.top,\r\n                        collisionPosTop = position.top - data.collisionPosition.marginTop,\r\n                        overTop = collisionPosTop - offsetTop,\r\n                        overBottom = collisionPosTop + data.collisionHeight - outerHeight - offsetTop,\r\n                        top = data.my[ 1 ] === \"top\",\r\n                        myOffset = top ?\r\n                            -data.elemHeight :\r\n                            data.my[ 1 ] === \"bottom\" ?\r\n                                data.elemHeight :\r\n                                0,\r\n                        atOffset = data.at[ 1 ] === \"top\" ?\r\n                            data.targetHeight :\r\n                            data.at[ 1 ] === \"bottom\" ?\r\n                                -data.targetHeight :\r\n                                0,\r\n                        offset = -2 * data.offset[ 1 ],\r\n                        newOverTop,\r\n                        newOverBottom;\r\n                    if ( overTop < 0 ) {\r\n                        newOverBottom = position.top + myOffset + atOffset + offset + data.collisionHeight -\r\n                            outerHeight - withinOffset;\r\n                        if ( newOverBottom < 0 || newOverBottom < abs( overTop ) ) {\r\n                            position.top += myOffset + atOffset + offset;\r\n                        }\r\n                    } else if ( overBottom > 0 ) {\r\n                        newOverTop = position.top - data.collisionPosition.marginTop + myOffset + atOffset +\r\n                            offset - offsetTop;\r\n                        if ( newOverTop > 0 || abs( newOverTop ) < overBottom ) {\r\n                            position.top += myOffset + atOffset + offset;\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            flipfit: {\r\n                left: function() {\r\n                    positions.flip.left.apply( this, arguments );\r\n                    positions.fit.left.apply( this, arguments );\r\n                },\r\n                top: function() {\r\n                    positions.flip.top.apply( this, arguments );\r\n                    positions.fit.top.apply( this, arguments );\r\n                }\r\n            }\r\n        };\r\n\r\n        geom.posit = posit;\r\n    })();\r\n\r\n    return skylark.attach(\"domx.geom\", geom);\r\n});\ndefine('skylark-domx-geom/main',[\r\n    \"skylark-langx/langx\",\r\n    \"./geom\",\r\n    \"skylark-domx-velm\",\r\n    \"skylark-domx-query\"        \r\n],function(langx,geom,velm,$){\r\n   // from ./geom\r\n    velm.delegate([\r\n        \"borderExtents\",\r\n        \"boundingPosition\",\r\n        \"boundingRect\",\r\n        \"clientHeight\",\r\n        \"clientSize\",\r\n        \"clientWidth\",\r\n        \"contentRect\",\r\n        \"height\",\r\n        \"marginExtents\",\r\n        \"offsetParent\",\r\n        \"paddingExtents\",\r\n        \"pagePosition\",\r\n        \"pageRect\",\r\n        \"relativePosition\",\r\n        \"relativeRect\",\r\n        \"scrollIntoView\",\r\n        \"scrollLeft\",\r\n        \"scrollTop\",\r\n        \"size\",\r\n        \"width\"\r\n    ], geom);\r\n\r\n    $.fn.offset = $.wraps.wrapper_value(geom.pagePosition, geom, geom.pagePosition);\r\n\r\n    $.fn.scrollTop = $.wraps.wrapper_value(geom.scrollTop, geom);\r\n\r\n    $.fn.scrollLeft = $.wraps.wrapper_value(geom.scrollLeft, geom);\r\n\r\n    $.fn.position =  function(options) {\r\n        if (!this.length) {\r\n            return this;\r\n        }\r\n\r\n        if (options) {\r\n            if (options.of && options.of.length) {\r\n                options = langx.clone(options);\r\n                options.of = options.of[0];\r\n            }\r\n            return this.each( function() {\r\n                geom.posit(this,options);\r\n            });\r\n        } else {\r\n            var elem = this[0];\r\n\r\n            return geom.relativePosition(elem);\r\n\r\n        }             \r\n    };\r\n\r\n    $.fn.offsetParent = $.wraps.wrapper_map(geom.offsetParent, geom);\r\n\r\n\r\n    $.fn.size = $.wraps.wrapper_value(geom.size, geom);\r\n\r\n    $.fn.width = $.wraps.wrapper_value(geom.width, geom, geom.width);\r\n\r\n    $.fn.height = $.wraps.wrapper_value(geom.height, geom, geom.height);\r\n\r\n    $.fn.clientSize = $.wraps.wrapper_value(geom.clientSize, geom.clientSize);\r\n    \r\n    ['width', 'height'].forEach(function(dimension) {\r\n        var offset, Dimension = dimension.replace(/./, function(m) {\r\n            return m[0].toUpperCase()\r\n        });\r\n\r\n        $.fn['outer' + Dimension] = function(margin, value) {\r\n            if (arguments.length) {\r\n                if (typeof margin !== 'boolean') {\r\n                    value = margin;\r\n                    margin = false;\r\n                }\r\n            } else {\r\n                margin = false;\r\n                value = undefined;\r\n            }\r\n\r\n            if (value === undefined) {\r\n                var el = this[0];\r\n                if (!el) {\r\n                    return undefined;\r\n                }\r\n                var cb = geom.size(el);\r\n                if (margin) {\r\n                    var me = geom.marginExtents(el);\r\n                    cb.width = cb.width + me.left + me.right;\r\n                    cb.height = cb.height + me.top + me.bottom;\r\n                }\r\n                return dimension === \"width\" ? cb.width : cb.height;\r\n            } else {\r\n                return this.each(function(idx, el) {\r\n                    var mb = {};\r\n                    var me = geom.marginExtents(el);\r\n                    if (dimension === \"width\") {\r\n                        mb.width = value;\r\n                        if (margin) {\r\n                            mb.width = mb.width - me.left - me.right\r\n                        }\r\n                    } else {\r\n                        mb.height = value;\r\n                        if (margin) {\r\n                            mb.height = mb.height - me.top - me.bottom;\r\n                        }\r\n                    }\r\n                    geom.size(el, mb);\r\n                })\r\n\r\n            }\r\n        };\r\n    })\r\n\r\n    $.fn.innerWidth = $.wraps.wrapper_value(geom.clientWidth, geom, geom.clientWidth);\r\n\r\n    $.fn.innerHeight = $.wraps.wrapper_value(geom.clientHeight, geom, geom.clientHeight);\r\n\r\n    return geom;\r\n});\ndefine('skylark-domx-geom', ['skylark-domx-geom/main'], function (main) { return main; });\n\ndefine('skylark-widgets-swt/swt',[\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\"\r\n],function(skylark,langx,browser,eventer,noder,geom,$){\r\n\tvar swt = {};\r\n\r\n\tvar CONST = {\r\n\t\tBACKSPACE_KEYCODE: 8,\r\n\t\tCOMMA_KEYCODE: 188, // `,` & `<`\r\n\t\tDELETE_KEYCODE: 46,\r\n\t\tDOWN_ARROW_KEYCODE: 40,\r\n\t\tENTER_KEYCODE: 13,\r\n\t\tTAB_KEYCODE: 9,\r\n\t\tUP_ARROW_KEYCODE: 38\r\n\t};\r\n\r\n\tvar isShiftHeld = function isShiftHeld (e) { return e.shiftKey === true; };\r\n\r\n\tvar isKey = function isKey (keyCode) {\r\n\t\treturn function compareKeycodes (e) {\r\n\t\t\treturn e.keyCode === keyCode;\r\n\t\t};\r\n\t};\r\n\r\n\tvar isBackspaceKey = isKey(CONST.BACKSPACE_KEYCODE);\r\n\tvar isDeleteKey = isKey(CONST.DELETE_KEYCODE);\r\n\tvar isTabKey = isKey(CONST.TAB_KEYCODE);\r\n\tvar isUpArrow = isKey(CONST.UP_ARROW_KEYCODE);\r\n\tvar isDownArrow = isKey(CONST.DOWN_ARROW_KEYCODE);\r\n\r\n\tvar ENCODED_REGEX = /&[^\\s]*;/;\r\n\t/*\r\n\t * to prevent double encoding decodes content in loop until content is encoding free\r\n\t */\r\n\tvar cleanInput = function cleanInput (questionableMarkup) {\r\n\t\t// check for encoding and decode\r\n\t\twhile (ENCODED_REGEX.test(questionableMarkup)) {\r\n\t\t\tquestionableMarkup = $('<i>').html(questionableMarkup).text();\r\n\t\t}\r\n\r\n\t\t// string completely decoded now encode it\r\n\t\treturn $('<i>').text(questionableMarkup).html();\r\n\t};\r\n\r\n\tlangx.mixin(swt, {\r\n\t\tCONST: CONST,\r\n\t\tcleanInput: cleanInput,\r\n\t\tisBackspaceKey: isBackspaceKey,\r\n\t\tisDeleteKey: isDeleteKey,\r\n\t\tisShiftHeld: isShiftHeld,\r\n\t\tisTabKey: isTabKey,\r\n\t\tisUpArrow: isUpArrow,\r\n\t\tisDownArrow: isDownArrow\r\n\t});\r\n\r\n\treturn skylark.attach(\"widgets.swt\",swt);\r\n\r\n});\r\n\ndefine('skylark-domx-files/files',[\r\n    \"skylark-langx/skylark\"\r\n], function(skylark) {\r\n\r\n    function dataURLtoBlob(dataurl) {\r\n        var arr = dataurl.split(','),\r\n            mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]),\r\n            n = bstr.length,\r\n            u8arr = new Uint8Array(n);\r\n        while (n--) {\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], { type: mime });\r\n    }\r\n\r\n\r\n    var files = function() {\r\n        return files;\r\n    };\r\n\r\n    return skylark.attach(\"domx.files\", files);\r\n});\ndefine('skylark-io-diskfs/diskfs',[\r\n    \"skylark-langx/skylark\"\r\n], function(skylark) {\r\n\r\n    function dataURLtoBlob(dataurl) {\r\n        var arr = dataurl.split(','),\r\n            mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]),\r\n            n = bstr.length,\r\n            u8arr = new Uint8Array(n);\r\n        while (n--) {\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], { type: mime });\r\n    }\r\n\r\n\r\n    var diskfs = function() {\r\n        return diskfs;\r\n    };\r\n\r\n    return skylark.attach(\"storages.diskfs\", diskfs);\r\n});\n define('skylark-io-diskfs/webentry',[\r\n    \"skylark-langx/arrays\",\r\n    \"skylark-langx/Deferred\",\r\n    \"./diskfs\"\r\n],function(arrays,Deferred, diskfs){\r\n    var concat = Array.prototype.concat;\r\n    var webentry = (function() {\r\n        function one(entry, path) {\r\n            var d = new Deferred(),\r\n                onError = function(e) {\r\n                    d.reject(e);\r\n                };\r\n\r\n            path = path || '';\r\n            if (entry.isFile) {\r\n                entry.file(function(file) {\r\n                    file.relativePath = path;\r\n                    d.resolve(file);\r\n                }, onError);\r\n            } else if (entry.isDirectory) {\r\n                var dirReader = entry.createReader();\r\n                dirReader.readEntries(function(entries) {\r\n                    all(\r\n                        entries,\r\n                        path + entry.name + '/'\r\n                    ).then(function(files) {\r\n                        d.resolve(files);\r\n                    }).catch(onError);\r\n                }, onError);\r\n            } else {\r\n                // Return an empy list for file system items\r\n                // other than files or directories:\r\n                d.resolve([]);\r\n            }\r\n            return d.promise;\r\n        }\r\n\r\n        function all(entries, path) {\r\n            return Deferred.all(\r\n                arrays.map(entries, function(entry) {\r\n                    return one(entry, path);\r\n                })\r\n            ).then(function() {\r\n                return concat.apply([], arguments);\r\n            });\r\n        }\r\n\r\n        return {\r\n            one: one,\r\n            all: all\r\n        };\r\n    })();\r\n\r\n    return diskfs.webentry = webentry;\r\n});\n  define('skylark-domx-files/dropzone',[\r\n    \"skylark-langx/arrays\",\r\n    \"skylark-langx/Deferred\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-eventer\",\r\n    \"./files\",\r\n    \"skylark-io-diskfs/webentry\"\r\n],function(arrays,Deferred, styler, eventer, files, webentry){  /*\r\n     * Make the specified element to could accept HTML5 file drag and drop.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} params\r\n     */\r\n    function dropzone(elm, params) {\r\n        params = params || {};\r\n        var hoverClass = params.hoverClass || \"dropzone\",\r\n            droppedCallback = params.dropped;\r\n\r\n        var enterdCount = 0;\r\n        eventer.on(elm, \"dragenter\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                eventer.stop(e);\r\n                enterdCount++;\r\n                styler.addClass(elm, hoverClass)\r\n            }\r\n        });\r\n\r\n        eventer.on(elm, \"dragover\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                eventer.stop(e);\r\n            }\r\n        });\r\n\r\n        eventer.on(elm, \"dragleave\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                enterdCount--\r\n                if (enterdCount == 0) {\r\n                    styler.removeClass(elm, hoverClass);\r\n                }\r\n            }\r\n        });\r\n\r\n        eventer.on(elm, \"drop\", function(e) {\r\n            if (e.dataTransfer && e.dataTransfer.types.indexOf(\"Files\") > -1) {\r\n                styler.removeClass(elm, hoverClass)\r\n                eventer.stop(e);\r\n                if (droppedCallback) {\r\n                    var items = e.dataTransfer.items;\r\n                    if (items && items.length && (items[0].webkitGetAsEntry ||\r\n                            items[0].getAsEntry)) {\r\n                        webentry.all(\r\n                            arrays.map(items, function(item) {\r\n                                if (item.webkitGetAsEntry) {\r\n                                    return item.webkitGetAsEntry();\r\n                                }\r\n                                return item.getAsEntry();\r\n                            })\r\n                        ).then(droppedCallback);\r\n                    } else {\r\n                        droppedCallback(e.dataTransfer.files);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n     return files.dropzone = dropzone;\r\n});\ndefine('skylark-domx-files/pastezone',[\r\n    \"skylark-langx/objects\",\r\n    \"skylark-domx-eventer\",\r\n    \"./files\"\r\n],function(objects, eventer, files){\r\n    function pastezone(elm, params) {\r\n        params = params || {};\r\n        var hoverClass = params.hoverClass || \"pastezone\",\r\n            pastedCallback = params.pasted;\r\n\r\n        eventer.on(elm, \"paste\", function(e) {\r\n            var items = e.originalEvent && e.originalEvent.clipboardData &&\r\n                e.originalEvent.clipboardData.items,\r\n                files = [];\r\n            if (items && items.length) {\r\n                objects.each(items, function(index, item) {\r\n                    var file = item.getAsFile && item.getAsFile();\r\n                    if (file) {\r\n                        files.push(file);\r\n                    }\r\n                });\r\n            }\r\n            if (pastedCallback && files.length) {\r\n                pastedCallback(files);\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    return files.pastezone = pastezone;\r\n\r\n});\r\n\ndefine('skylark-io-diskfs/select',[\r\n    \"./diskfs\"\r\n],function(diskfs){\r\n    var fileInput,\r\n        fileInputForm,\r\n        fileSelected,\r\n        maxFileSize = 1 / 0;\r\n\r\n    function select(params) {\r\n        params = params || {};\r\n        var directory = params.directory || false,\r\n            multiple = params.multiple || false,\r\n            accept = params.accept || \"\", //'image/gif,image/jpeg,image/jpg,image/png,image/svg'\r\n            title = params.title || \"\",\r\n            fileSelected = params.picked;\r\n        if (!fileInput) {\r\n            var input = fileInput = document.createElement(\"input\");\r\n\r\n            function selectFiles(pickedFiles) {\r\n                for (var i = pickedFiles.length; i--;) {\r\n                    if (pickedFiles[i].size > maxFileSize) {\r\n                        pickedFiles.splice(i, 1);\r\n                    }\r\n                }\r\n                fileSelected(pickedFiles);\r\n            }\r\n\r\n            input.type = \"file\";\r\n            input.style.position = \"fixed\";\r\n            input.style.left = 0;\r\n            input.style.top = 0;\r\n            input.style.opacity = .001;\r\n            document.body.appendChild(input);\r\n\r\n            input.onchange = function(e) {\r\n                var entries = e.target.webkitEntries || e.target.entries;\r\n\r\n                if (entries && entries.length) {\r\n                    webentry.all(entries).then(function(files) {\r\n                        selectFiles(files);\r\n                    });\r\n                } else {\r\n                    selectFiles(Array.prototype.slice.call(e.target.files));\r\n                }\r\n                // reset to \"\", so selecting the same file next time still trigger the change handler\r\n                input.value = \"\";\r\n            };\r\n        }\r\n        fileInput.multiple = multiple;\r\n        fileInput.accept = accept;\r\n        fileInput.title = title;\r\n\r\n        fileInput.webkitdirectory = directory;\r\n        fileInput.click();\r\n    }\r\n\r\n    return diskfs.select = select;\r\n});\r\n\r\n\ndefine('skylark-domx-files/picker',[\r\n    \"skylark-langx/objects\",\r\n    \"skylark-domx-eventer\",\r\n    \"./files\",\r\n    \"skylark-io-diskfs/select\"\r\n],function(objects, eventer, files, select){\r\n    /*\r\n     * Make the specified element to pop-up the file selection dialog box when clicked , and read the contents the files selected from client file system by user.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} params\r\n     */\r\n    function picker(elm, params) {\r\n        eventer.on(elm, \"click\", function(e) {\r\n            e.preventDefault();\r\n            select(params);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    return files.picker = picker;\r\n\r\n});\r\n\r\n\r\n\ndefine('skylark-net-http/http',[\r\n  \"skylark-langx-ns/ns\",\r\n],function(skylark){\r\n\treturn skylark.attach(\"net.http\",{});\r\n});\ndefine('skylark-net-http/Xhr',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-arrays\",\r\n  \"skylark-langx-funcs\",\r\n  \"skylark-langx-async/Deferred\",\r\n  \"skylark-langx-emitter/Evented\",\r\n  \"./http\"\r\n],function(skylark,types,objects,arrays,funcs,Deferred,Evented,http){\r\n\r\n    var each = objects.each,\r\n        mixin = objects.mixin,\r\n        noop = funcs.noop,\r\n        isArray = types.isArray,\r\n        isFunction = types.isFunction,\r\n        isPlainObject = types.isPlainObject,\r\n        type = types.type;\r\n \r\n     var getAbsoluteUrl = (function() {\r\n        var a;\r\n\r\n        return function(url) {\r\n            if (!a) a = document.createElement('a');\r\n            a.href = url;\r\n\r\n            return a.href;\r\n        };\r\n    })();\r\n   \r\n    var Xhr = (function(){\r\n        var jsonpID = 0,\r\n            key,\r\n            name,\r\n            rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\r\n            scriptTypeRE = /^(?:text|application)\\/javascript/i,\r\n            xmlTypeRE = /^(?:text|application)\\/xml/i,\r\n            jsonType = 'application/json',\r\n            htmlType = 'text/html',\r\n            blankRE = /^\\s*$/;\r\n\r\n        var XhrDefaultOptions = {\r\n            async: true,\r\n\r\n            // Default type of request\r\n            type: 'GET',\r\n            // Callback that is executed before request\r\n            beforeSend: noop,\r\n            // Callback that is executed if the request succeeds\r\n            success: noop,\r\n            // Callback that is executed the the server drops error\r\n            error: noop,\r\n            // Callback that is executed on request complete (both: error and success)\r\n            complete: noop,\r\n            // The context for the callbacks\r\n            context: null,\r\n            // Whether to trigger \"global\" Ajax events\r\n            global: true,\r\n\r\n            // MIME types mapping\r\n            // IIS returns Javascript as \"application/x-javascript\"\r\n            accepts: {\r\n                script: 'text/javascript, application/javascript, application/x-javascript',\r\n                json: 'application/json',\r\n                xml: 'application/xml, text/xml',\r\n                html: 'text/html',\r\n                text: 'text/plain'\r\n            },\r\n            // Whether the request is to another domain\r\n            crossDomain: false,\r\n            // Default timeout\r\n            timeout: 0,\r\n            // Whether data should be serialized to string\r\n            processData: false,\r\n            // Whether the browser should be allowed to cache GET responses\r\n            cache: true,\r\n\r\n            traditional : false,\r\n            \r\n            xhrFields : {\r\n                withCredentials : false\r\n            }\r\n        };\r\n\r\n        function mimeToDataType(mime) {\r\n            if (mime) {\r\n                mime = mime.split(';', 2)[0];\r\n            }\r\n            if (mime) {\r\n                if (mime == htmlType) {\r\n                    return \"html\";\r\n                } else if (mime == jsonType) {\r\n                    return \"json\";\r\n                } else if (scriptTypeRE.test(mime)) {\r\n                    return \"script\";\r\n                } else if (xmlTypeRE.test(mime)) {\r\n                    return \"xml\";\r\n                }\r\n            }\r\n            return \"text\";\r\n        }\r\n\r\n        function appendQuery(url, query) {\r\n            if (query == '') return url\r\n            return (url + '&' + query).replace(/[&?]{1,2}/, '?')\r\n        }\r\n\r\n        // serialize payload and append it to the URL for GET requests\r\n        function serializeData(options) {\r\n            options.data = options.data || options.query;\r\n            if (options.processData && options.data && type(options.data) != \"string\") {\r\n                options.data = param(options.data, options.traditional);\r\n            }\r\n            if (options.data && (!options.type || options.type.toUpperCase() == 'GET')) {\r\n                if (type(options.data) != \"string\") {\r\n                    options.data = param(options.data, options.traditional);\r\n                }\r\n                options.url = appendQuery(options.url, options.data);\r\n                options.data = undefined;\r\n            }\r\n        }\r\n        \r\n        function serialize(params, obj, traditional, scope) {\r\n            var t, array = isArray(obj),\r\n                hash = isPlainObject(obj)\r\n            each(obj, function(key, value) {\r\n                t =type(value);\r\n                if (scope) key = traditional ? scope :\r\n                    scope + '[' + (hash || t == 'object' || t == 'array' ? key : '') + ']'\r\n                // handle data in serializeArray() format\r\n                if (!scope && array) params.add(value.name, value.value)\r\n                // recurse into nested objects\r\n                else if (t == \"array\" || (!traditional && t == \"object\"))\r\n                    serialize(params, value, traditional, key)\r\n                else params.add(key, value)\r\n            })\r\n        }\r\n\r\n        var param = function(obj, traditional) {\r\n            var params = []\r\n            params.add = function(key, value) {\r\n                if (isFunction(value)) {\r\n                  value = value();\r\n                }\r\n                if (value == null) {\r\n                  value = \"\";\r\n                }\r\n                this.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\r\n            };\r\n            serialize(params, obj, traditional)\r\n            return params.join('&').replace(/%20/g, '+')\r\n        };\r\n\r\n        var Xhr = Evented.inherit({\r\n            klassName : \"Xhr\",\r\n\r\n            _request  : function(args) {\r\n                var _ = this._,\r\n                    self = this,\r\n                    options = mixin({},XhrDefaultOptions,_.options,args),\r\n                    xhr = _.xhr = new XMLHttpRequest();\r\n\r\n                serializeData(options)\r\n\r\n                if (options.beforeSend) {\r\n                    options.beforeSend.call(this, xhr, options);\r\n                }                \r\n\r\n                var dataType = options.dataType || options.handleAs,\r\n                    mime = options.mimeType || options.accepts[dataType],\r\n                    headers = options.headers,\r\n                    xhrFields = options.xhrFields,\r\n                    isFormData = options.data && options.data instanceof FormData,\r\n                    basicAuthorizationToken = options.basicAuthorizationToken,\r\n                    type = options.type,\r\n                    url = options.url,\r\n                    async = options.async,\r\n                    user = options.user , \r\n                    password = options.password,\r\n                    deferred = new Deferred(),\r\n                    contentType = options.contentType || (isFormData ? false : 'application/x-www-form-urlencoded');\r\n\r\n                if (xhrFields) {\r\n                    for (name in xhrFields) {\r\n                        xhr[name] = xhrFields[name];\r\n                    }\r\n                }\r\n\r\n                if (mime && mime.indexOf(',') > -1) {\r\n                    mime = mime.split(',', 2)[0];\r\n                }\r\n                if (mime && xhr.overrideMimeType) {\r\n                    xhr.overrideMimeType(mime);\r\n                }\r\n\r\n                //if (dataType) {\r\n                //    xhr.responseType = dataType;\r\n                //}\r\n\r\n                var finish = function() {\r\n                    xhr.onloadend = noop;\r\n                    xhr.onabort = noop;\r\n                    xhr.onprogress = noop;\r\n                    xhr.ontimeout = noop;\r\n                    xhr = null;\r\n                }\r\n                var onloadend = function() {\r\n                    var result, error = false\r\n                    if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && getAbsoluteUrl(url).startsWith('file:'))) {\r\n                        dataType = dataType || mimeToDataType(options.mimeType || xhr.getResponseHeader('content-type'));\r\n\r\n                        result = xhr.responseText;\r\n                        try {\r\n                            if (dataType == 'script') {\r\n                                eval(result);\r\n                            } else if (dataType == 'xml') {\r\n                                result = xhr.responseXML;\r\n                            } else if (dataType == 'json') {\r\n                                result = blankRE.test(result) ? null : JSON.parse(result);\r\n                            } else if (dataType == \"blob\") {\r\n                                result = Blob([xhrObj.response]);\r\n                            } else if (dataType == \"arraybuffer\") {\r\n                                result = xhr.reponse;\r\n                            }\r\n                        } catch (e) { \r\n                            error = e;\r\n                        }\r\n\r\n                        if (error) {\r\n                            deferred.reject(error,xhr.status,xhr);\r\n                        } else {\r\n                            deferred.resolve(result,xhr.status,xhr);\r\n                        }\r\n                    } else {\r\n                        deferred.reject(new Error(xhr.statusText),xhr.status,xhr);\r\n                    }\r\n                    finish();\r\n                };\r\n\r\n                var onabort = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"abort\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n \r\n                var ontimeout = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"timeout\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n\r\n                var onprogress = function(evt) {\r\n                    if (deferred) {\r\n                        deferred.notify(evt,xhr.status,xhr);\r\n                    }\r\n                }\r\n\r\n                xhr.onloadend = onloadend;\r\n                xhr.onabort = onabort;\r\n                xhr.ontimeout = ontimeout;\r\n                xhr.onprogress = onprogress;\r\n\r\n                xhr.open(type, url, async, user, password);\r\n               \r\n                if (headers) {\r\n                    for ( var key in headers) {\r\n                        var value = headers[key];\r\n \r\n                        if(key.toLowerCase() === 'content-type'){\r\n                            contentType = value;\r\n                        } else {\r\n                           xhr.setRequestHeader(key, value);\r\n                        }\r\n                    }\r\n                }   \r\n\r\n                if  (contentType && contentType !== false){\r\n                    xhr.setRequestHeader('Content-Type', contentType);\r\n                }\r\n\r\n                if(!headers || !('X-Requested-With' in headers)){\r\n                    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n                }\r\n\r\n\r\n                //If basicAuthorizationToken is defined set its value into \"Authorization\" header\r\n                if (basicAuthorizationToken) {\r\n                    xhr.setRequestHeader(\"Authorization\", basicAuthorizationToken);\r\n                }\r\n\r\n                xhr.send(options.data ? options.data : null);\r\n\r\n                return deferred.promise;\r\n\r\n            },\r\n\r\n            \"abort\": function() {\r\n                var _ = this._,\r\n                    xhr = _.xhr;\r\n\r\n                if (xhr) {\r\n                    xhr.abort();\r\n                }    \r\n            },\r\n\r\n\r\n            \"request\": function(args) {\r\n                return this._request(args);\r\n            },\r\n\r\n            get : function(args) {\r\n                args = args || {};\r\n                args.type = \"GET\";\r\n                return this._request(args);\r\n            },\r\n\r\n            post : function(args) {\r\n                args = args || {};\r\n                args.type = \"POST\";\r\n                return this._request(args);\r\n            },\r\n\r\n            patch : function(args) {\r\n                args = args || {};\r\n                args.type = \"PATCH\";\r\n                return this._request(args);\r\n            },\r\n\r\n            put : function(args) {\r\n                args = args || {};\r\n                args.type = \"PUT\";\r\n                return this._request(args);\r\n            },\r\n\r\n            del : function(args) {\r\n                args = args || {};\r\n                args.type = \"DELETE\";\r\n                return this._request(args);\r\n            },\r\n\r\n            \"init\": function(options) {\r\n                this._ = {\r\n                    options : options || {}\r\n                };\r\n            }\r\n        });\r\n\r\n        [\"request\",\"get\",\"post\",\"put\",\"del\",\"patch\"].forEach(function(name){\r\n            Xhr[name] = function(url,args) {\r\n                var xhr = new Xhr({\"url\" : url});\r\n                return xhr[name](args);\r\n            };\r\n        });\r\n\r\n        Xhr.defaultOptions = XhrDefaultOptions;\r\n        Xhr.param = param;\r\n\r\n        return Xhr;\r\n    })();\r\n\r\n\treturn http.Xhr = Xhr;\t\r\n});\ndefine('skylark-net-http/Upload',[\r\n    \"skylark-langx-types\",\r\n    \"skylark-langx-objects\",\r\n    \"skylark-langx-arrays\",\r\n    \"skylark-langx-async/Deferred\",\r\n    \"skylark-langx-emitter/Evented\",    \r\n    \"./Xhr\",\r\n    \"./http\"\r\n],function(types, objects, arrays, Deferred, Evented,Xhr, http){\r\n\r\n    var blobSlice = Blob.prototype.slice || Blob.prototype.webkitSlice || Blob.prototype.mozSlice;\r\n\r\n\r\n    /*\r\n     *Class for uploading files using xhr.\r\n     */\r\n    var Upload = Evented.inherit({\r\n        klassName : \"Upload\",\r\n\r\n        _construct : function(options) {\r\n            this._options = objects.mixin({\r\n                debug: false,\r\n                url: '/upload',\r\n                // maximum number of concurrent uploads\r\n                maxConnections: 999,\r\n                // To upload large files in smaller chunks, set the following option\r\n                // to a preferred maximum chunk size. If set to 0, null or undefined,\r\n                // or the browser does not support the required Blob API, files will\r\n                // be uploaded as a whole.\r\n                maxChunkSize: undefined,\r\n\r\n                onProgress: function(id, fileName, loaded, total){\r\n                },\r\n                onComplete: function(id, fileName){\r\n                },\r\n                onCancel: function(id, fileName){\r\n                },\r\n                onFailure : function(id,fileName,e) {                    \r\n                }\r\n            },options);\r\n\r\n            this._queue = [];\r\n            // params for files in queue\r\n            this._params = [];\r\n\r\n            this._files = [];\r\n            this._xhrs = [];\r\n\r\n            // current loaded size in bytes for each file\r\n            this._loaded = [];\r\n\r\n        },\r\n\r\n        /**\r\n         * Adds file to the queue\r\n         * Returns id to use with upload, cancel\r\n         **/\r\n        add: function(file){\r\n            return this._files.push(file) - 1;\r\n        },\r\n\r\n        /**\r\n         * Sends the file identified by id and additional query params to the server.\r\n         */\r\n        send: function(id, params){\r\n            if (!this._files[id]) {\r\n                // Already sended or canceled\r\n                return ;\r\n            }\r\n            if (this._queue.indexOf(id)>-1) {\r\n                // Already in the queue\r\n                return;\r\n            }\r\n            var len = this._queue.push(id);\r\n\r\n            var copy = objects.clone(params);\r\n\r\n            this._params[id] = copy;\r\n\r\n            // if too many active uploads, wait...\r\n            if (len <= this._options.maxConnections){\r\n                this._send(id, this._params[id]);\r\n            }     \r\n        },\r\n\r\n        /**\r\n         * Sends all files  and additional query params to the server.\r\n         */\r\n        sendAll: function(params){\r\n           for( var id = 0; id <this._files.length; id++) {\r\n                this.send(id,params);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Cancels file upload by id\r\n         */\r\n        cancel: function(id){\r\n            this._cancel(id);\r\n            this._dequeue(id);\r\n        },\r\n\r\n        /**\r\n         * Cancells all uploads\r\n         */\r\n        cancelAll: function(){\r\n            for (var i=0; i<this._queue.length; i++){\r\n                this._cancel(this._queue[i]);\r\n            }\r\n            this._queue = [];\r\n        },\r\n\r\n        getName: function(id){\r\n            var file = this._files[id];\r\n            return file.fileName != null ? file.fileName : file.name;\r\n        },\r\n\r\n        getSize: function(id){\r\n            var file = this._files[id];\r\n            return file.fileSize != null ? file.fileSize : file.size;\r\n        },\r\n\r\n        /**\r\n         * Returns uploaded bytes for file identified by id\r\n         */\r\n        getLoaded: function(id){\r\n            return this._loaded[id] || 0;\r\n        },\r\n\r\n\r\n        /**\r\n         * Sends the file identified by id and additional query params to the server\r\n         * @param {Object} params name-value string pairs\r\n         */\r\n        _send: function(id, params){\r\n            var options = this._options,\r\n                name = this.getName(id),\r\n                size = this.getSize(id),\r\n                chunkSize = options.maxChunkSize || 0,\r\n                curUploadingSize,\r\n                curLoadedSize = 0,\r\n                file = this._files[id],\r\n                args = {\r\n                    headers : {\r\n                    }                    \r\n                };\r\n\r\n            this._loaded[id] = this._loaded[id] || 0;\r\n\r\n            var xhr = this._xhrs[id] = new Xhr({\r\n                url : options.url\r\n            });\r\n\r\n            if (chunkSize)  {\r\n\r\n                args.data = blobSlice.call(\r\n                    file,\r\n                    this._loaded[id],\r\n                    this._loaded[id] + chunkSize,\r\n                    file.type\r\n                );\r\n                // Store the current chunk size, as the blob itself\r\n                // will be dereferenced after data processing:\r\n                curUploadingSize = args.data.size;\r\n                // Expose the chunk bytes position range:\r\n                args.headers[\"content-range\"] = 'bytes ' + this._loaded[id] + '-' +\r\n                    (this._loaded[id] + curUploadingSize - 1) + '/' + size;\r\n                args.headers[\"Content-Type\"] = \"application/octet-stream\";\r\n            }  else {\r\n                curUploadingSize = size;\r\n                var formParamName =  params.formParamName,\r\n                    formData = params.formData;\r\n\r\n                if (formParamName) {\r\n                    if (!formData) {\r\n                        formData = new FormData();\r\n                    }\r\n                    formData.append(formParamName,file);\r\n                    args.data = formData;\r\n    \r\n                } else {\r\n                    args.headers[\"Content-Type\"] = file.type || \"application/octet-stream\";\r\n                    args.data = file;\r\n                }\r\n            }\r\n\r\n\r\n            var self = this;\r\n            xhr.post(\r\n                args\r\n            ).progress(function(e){\r\n                if (e.lengthComputable){\r\n                    curLoadedSize = curLoadedSize + e.loaded;\r\n                    self._loaded[id] = self._loaded[id] + e.loaded;\r\n                    self._options.onProgress(id, name, self._loaded[id], size);\r\n                }\r\n            }).then(function(){\r\n                if (!self._files[id]) {\r\n                    // the request was aborted/cancelled\r\n                    return;\r\n                }\r\n\r\n                if (curLoadedSize < curUploadingSize) {\r\n                    // Create a progress event if no final progress event\r\n                    // with loaded equaling total has been triggered\r\n                    // for this chunk:\r\n                    self._loaded[id] = self._loaded[id] + curUploadingSize - curLoadedSize;\r\n                    self._options.onProgress(id, name, self._loaded[id], size);                    \r\n                }\r\n\r\n                if (self._loaded[id] <size) {\r\n                    // File upload not yet complete,\r\n                    // continue with the next chunk:\r\n                    self._send(id,params);\r\n                } else {\r\n                    self._options.onComplete(id,name);\r\n\r\n                    self._files[id] = null;\r\n                    self._xhrs[id] = null;\r\n                    self._dequeue(id);\r\n                }\r\n\r\n\r\n            }).catch(function(e){\r\n                self._options.onFailure(id,name,e);\r\n\r\n                self._files[id] = null;\r\n                self._xhrs[id] = null;\r\n                self._dequeue(id);\r\n            });\r\n        },\r\n\r\n        _cancel: function(id){\r\n            this._options.onCancel(id, this.getName(id));\r\n\r\n            this._files[id] = null;\r\n\r\n            if (this._xhrs[id]){\r\n                this._xhrs[id].abort();\r\n                this._xhrs[id] = null;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Returns id of files being uploaded or\r\n         * waiting for their turn\r\n         */\r\n        getQueue: function(){\r\n            return this._queue;\r\n        },\r\n\r\n\r\n        /**\r\n         * Removes element from queue, starts upload of next\r\n         */\r\n        _dequeue: function(id){\r\n            var i = arrays.inArray(id,this._queue);\r\n            this._queue.splice(i, 1);\r\n\r\n            var max = this._options.maxConnections;\r\n\r\n            if (this._queue.length >= max && i < max){\r\n                var nextId = this._queue[max-1];\r\n                this._send(nextId, this._params[nextId]);\r\n            }\r\n        }\r\n    });\r\n\r\n    return http.Upload = Upload;    \r\n});\ndefine('skylark-domx-fx/fx',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-eventer\"\r\n], function(skylark, langx, browser, noder, geom, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    /*   \r\n     * Perform a custom animation of a set of CSS properties.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} properties\r\n     * @param {String} ease\r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     * @param {Number or String} delay\r\n     */\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false,\r\n            resetClipAuto = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                var v = properties[key];\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + v + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    if (key == \"clip\" && langx.isPlainObject(v)) {\r\n                        cssValues[key] = \"rect(\" + v.top+\"px,\"+ v.right +\"px,\"+ v.bottom +\"px,\"+ v.left+\"px)\";\r\n                        if (styler.css(elm,\"clip\") == \"auto\") {\r\n                            var size = geom.size(elm);\r\n                            styler.css(elm,\"clip\",\"rect(\"+\"0px,\"+ size.width +\"px,\"+ size.height +\"px,\"+\"0px)\");  \r\n                            resetClipAuto = true;\r\n                        }\r\n\r\n                    } else {\r\n                        cssValues[key] = v;\r\n                    }\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            if (resetClipAuto) {\r\n //               styler.css(elm,\"clip\",\"auto\");\r\n            }\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Hide an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Set the vertical position of the scroll bar for an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} pos\r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Adjust the opacity of an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Number or String} opacity\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display an element by fading them to opaque.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide an element by fading them to transparent.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            opacity = styler.css(elm,\"opacity\"),\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.css(elm,\"opacity\",opacity);\r\n            styler.hide(elm);\r\n            if (complete) {\r\n                complete.call(elm);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element by animating its opacity.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} ceasing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeToggle(elm, speed, ceasing, allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing, callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideDown(elm, duration, callback) {\r\n\r\n        // get the element position to restore it then\r\n        var position = styler.css(elm, 'position');\r\n\r\n        // show element if it is hidden\r\n        show(elm);\r\n\r\n        // place it so it displays as usually but hidden\r\n        styler.css(elm, {\r\n            position: 'absolute',\r\n            visibility: 'hidden'\r\n        });\r\n\r\n        // get naturally height, margin, padding\r\n        var marginTop = styler.css(elm, 'margin-top');\r\n        var marginBottom = styler.css(elm, 'margin-bottom');\r\n        var paddingTop = styler.css(elm, 'padding-top');\r\n        var paddingBottom = styler.css(elm, 'padding-bottom');\r\n        var height = styler.css(elm, 'height');\r\n\r\n        // set initial css for animation\r\n        styler.css(elm, {\r\n            position: position,\r\n            visibility: 'visible',\r\n            overflow: 'hidden',\r\n            height: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n\r\n        // animate to gotten height, margin and padding\r\n        animate(elm, {\r\n            height: height,\r\n            marginTop: marginTop,\r\n            marginBottom: marginBottom,\r\n            paddingTop: paddingTop,\r\n            paddingBottom: paddingBottom\r\n        }, {\r\n            duration: duration,\r\n            complete: function() {\r\n                if (callback) {\r\n                    callback.apply(elm);\r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideUp(elm, duration, callback) {\r\n        // active the function only if the element is visible\r\n        if (geom.height(elm) > 0) {\r\n\r\n            // get the element position to restore it then\r\n            var position = styler.css(elm, 'position');\r\n\r\n            // get the element height, margin and padding to restore them then\r\n            var height = styler.css(elm, 'height');\r\n            var marginTop = styler.css(elm, 'margin-top');\r\n            var marginBottom = styler.css(elm, 'margin-bottom');\r\n            var paddingTop = styler.css(elm, 'padding-top');\r\n            var paddingBottom = styler.css(elm, 'padding-bottom');\r\n\r\n            // set initial css for animation\r\n            styler.css(elm, {\r\n                visibility: 'visible',\r\n                overflow: 'hidden',\r\n                height: height,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                paddingTop: paddingTop,\r\n                paddingBottom: paddingBottom\r\n            });\r\n\r\n            // animate element height, margin and padding to zero\r\n            animate(elm, {\r\n                height: 0,\r\n                marginTop: 0,\r\n                marginBottom: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0\r\n            }, {\r\n                // callback : restore the element position, height, margin and padding to original values\r\n                duration: duration,\r\n                queue: false,\r\n                complete: function() {\r\n                    hide(elm);\r\n                    styler.css(elm, {\r\n                        visibility: 'visible',\r\n                        overflow: 'hidden',\r\n                        height: height,\r\n                        marginTop: marginTop,\r\n                        marginBottom: marginBottom,\r\n                        paddingTop: paddingTop,\r\n                        paddingBottom: paddingBottom\r\n                    });\r\n                    if (callback) {\r\n                        callback.apply(elm);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display or hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideToggle(elm, duration, callback) {\r\n\r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm, duration, callback);\r\n        }\r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm, duration, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function emulateTransitionEnd(elm,duration) {\r\n        var called = false;\r\n        eventer.one(elm,'transitionEnd', function () { \r\n            called = true;\r\n        })\r\n        var callback = function () { \r\n            if (!called) {\r\n                eventer.trigger(elm,browser.support.transition.end) \r\n            }\r\n        };\r\n        setTimeout(callback, duration);\r\n        \r\n        return this;\r\n    } \r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     * @param {Node} params\r\n     */\r\n    function overlay(elm, params) {\r\n        var overlayDiv = noder.createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n    \r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {HTMLElement} elm\r\n     * @param {Node} params\r\n     */\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n\r\n            throbber = noder.createElement(\"div\", {\r\n                \"class\": params.className || \"throbber\"\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                \"class\": 'overlay fade'\r\n            }),\r\n            throb = noder.createElement(\"div\", {\r\n                \"class\": \"throb\"\r\n            }),\r\n            textNode = noder.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    noder.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        if (params.style) {\r\n            styler.css(throbber,params.style);\r\n        }\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate,\r\n        emulateTransitionEnd,\r\n        fadeIn,\r\n        fadeOut,\r\n        fadeTo,\r\n        fadeToggle,\r\n        hide,\r\n        scrollToTop,\r\n\r\n        slideDown,\r\n        slideToggle,\r\n        slideUp,\r\n        show,\r\n        throb,\r\n        toggle\r\n    });\r\n\r\n    return skylark.attach(\"domx.fx\", fx);\r\n});\ndefine('skylark-domx-fx/main',[\r\n\t\"./fx\",\r\n\t\"skylark-domx-velm\",\r\n\t\"skylark-domx-query\"\t\r\n],function(fx,velm,$){\r\n    // from ./fx\r\n    velm.delegate([\r\n        \"animate\",\r\n        \"emulateTransitionEnd\",\r\n        \"fadeIn\",\r\n        \"fadeOut\",\r\n        \"fadeTo\",\r\n        \"fadeToggle\",\r\n        \"hide\",\r\n        \"scrollToTop\",\r\n        \"slideDown\",\r\n        \"slideToggle\",\r\n        \"slideUp\",\r\n        \"show\",\r\n        \"toggle\"\r\n    ], fx);\r\n\r\n    $.fn.hide =  $.wraps.wrapper_every_act(fx.hide, fx);\r\n\r\n    $.fn.animate = $.wraps.wrapper_every_act(fx.animate, fx);\r\n    $.fn.emulateTransitionEnd = $.wraps.wrapper_every_act(fx.emulateTransitionEnd, fx);\r\n\r\n    $.fn.show = $.wraps.wrapper_every_act(fx.show, fx);\r\n    $.fn.hide = $.wraps.wrapper_every_act(fx.hide, fx);\r\n    $.fn.toogle = $.wraps.wrapper_every_act(fx.toogle, fx);\r\n    $.fn.fadeTo = $.wraps.wrapper_every_act(fx.fadeTo, fx);\r\n    $.fn.fadeIn = $.wraps.wrapper_every_act(fx.fadeIn, fx);\r\n    $.fn.fadeOut = $.wraps.wrapper_every_act(fx.fadeOut, fx);\r\n    $.fn.fadeToggle = $.wraps.wrapper_every_act(fx.fadeToggle, fx);\r\n\r\n    $.fn.slideDown = $.wraps.wrapper_every_act(fx.slideDown, fx);\r\n    $.fn.slideToggle = $.wraps.wrapper_every_act(fx.slideToggle, fx);\r\n    $.fn.slideUp = $.wraps.wrapper_every_act(fx.slideUp, fx);\r\n\r\n\treturn fx;\r\n});\ndefine('skylark-domx-fx', ['skylark-domx-fx/main'], function (main) { return main; });\n\ndefine('skylark-domx-plugins/plugins',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-data\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-fx\",\r\n    \"skylark-domx-query\",\r\n    \"skylark-domx-velm\"\r\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx, $, elmx) {\r\n    \"use strict\";\r\n\r\n    var slice = Array.prototype.slice,\r\n        concat = Array.prototype.concat,\r\n        pluginKlasses = {},\r\n        shortcuts = {};\r\n\r\n    /*\r\n     * Create or get or destory a plugin instance assocated with the element.\r\n     */\r\n    function instantiate(elm,pluginName,options) {\r\n        var pair = pluginName.split(\":\"),\r\n            instanceDataName = pair[1];\r\n        pluginName = pair[0];\r\n\r\n        if (!instanceDataName) {\r\n            instanceDataName = pluginName;\r\n        }\r\n\r\n        var pluginInstance = datax.data( elm, instanceDataName );\r\n\r\n        if (options === \"instance\") {\r\n            return pluginInstance;\r\n        } else if (options === \"destroy\") {\r\n            if (!pluginInstance) {\r\n                throw new Error (\"The plugin instance is not existed\");\r\n            }\r\n            pluginInstance.destroy();\r\n            datax.removeData( elm, pluginName);\r\n            pluginInstance = undefined;\r\n        } else {\r\n            if (!pluginInstance) {\r\n                if (options !== undefined && typeof options !== \"object\") {\r\n                    throw new Error (\"The options must be a plain object\");\r\n                }\r\n                var pluginKlass = pluginKlasses[pluginName]; \r\n                pluginInstance = new pluginKlass(elm,options);\r\n                datax.data( elm, instanceDataName,pluginInstance );\r\n            } else if (options) {\r\n                pluginInstance.reset(options);\r\n            }\r\n        }\r\n\r\n        return pluginInstance;\r\n    }\r\n\r\n\r\n    function shortcutter(pluginName,extfn) {\r\n       /*\r\n        * Create or get or destory a plugin instance assocated with the element,\r\n        * and also you can execute the plugin method directory;\r\n        */\r\n        return function (elm,options) {\r\n            var  plugin = instantiate(elm, pluginName,\"instance\");\r\n            if ( options === \"instance\" ) {\r\n              return plugin || null;\r\n            }\r\n\r\n            if (!plugin) {\r\n                plugin = instantiate(elm, pluginName,typeof options == 'object' && options || {});\r\n                if (typeof options != \"string\") {\r\n                  return this;\r\n                }\r\n            } \r\n            if (options) {\r\n                var args = slice.call(arguments,1); //2\r\n                if (extfn) {\r\n                    return extfn.apply(plugin,args);\r\n                } else {\r\n                    if (typeof options == 'string') {\r\n                        var methodName = options;\r\n\r\n                        if ( !plugin ) {\r\n                            throw new Error( \"cannot call methods on \" + pluginName +\r\n                                \" prior to initialization; \" +\r\n                                \"attempted to call method '\" + methodName + \"'\" );\r\n                        }\r\n\r\n                        if ( !langx.isFunction( plugin[ methodName ] ) || methodName.charAt( 0 ) === \"_\" ) {\r\n                            throw new Error( \"no such method '\" + methodName + \"' for \" + pluginName +\r\n                                \" plugin instance\" );\r\n                        }\r\n\r\n                        var ret = plugin[methodName].apply(plugin,args);\r\n                        if (ret == plugin) {\r\n                          ret = undefined;\r\n                        }\r\n\r\n                        return ret;\r\n                    }                \r\n                }                \r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Register a plugin type\r\n     */\r\n    function register( pluginKlass,shortcutName,instanceDataName,extfn) {\r\n        var pluginName = pluginKlass.prototype.pluginName;\r\n        \r\n        pluginKlasses[pluginName] = pluginKlass;\r\n\r\n        if (shortcutName) {\r\n            if (instanceDataName && langx.isFunction(instanceDataName)) {\r\n                extfn = instanceDataName;\r\n                instanceDataName = null;\r\n            } \r\n            if (instanceDataName) {\r\n                pluginName = pluginName + \":\" + instanceDataName;\r\n            }\r\n\r\n            var shortcut = shortcuts[shortcutName] = shortcutter(pluginName,extfn);\r\n                \r\n            $.fn[shortcutName] = function(options) {\r\n                var returnValue = this;\r\n\r\n                if ( !this.length && options === \"instance\" ) {\r\n                  returnValue = undefined;\r\n                } else {\r\n                  var args = slice.call(arguments);\r\n                  this.each(function () {\r\n                    var args2 = slice.call(args);\r\n                    args2.unshift(this);\r\n                    var  ret  = shortcut.apply(undefined,args2);\r\n                    if (ret !== undefined) {\r\n                        returnValue = ret;\r\n                    }\r\n                  });\r\n                }\r\n\r\n                return returnValue;\r\n            };\r\n\r\n            elmx.partial(shortcutName,function(options) {\r\n                var  ret  = shortcut(this._elm,options);\r\n                if (ret === undefined) {\r\n                    ret = this;\r\n                }\r\n                return ret;\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n \r\n    var Plugin =   langx.Evented.inherit({\r\n        klassName: \"Plugin\",\r\n\r\n        _construct : function(elm,options) {\r\n           this._elm = elm;\r\n           this._initOptions(options);\r\n        },\r\n\r\n        _initOptions : function(options) {\r\n          var ctor = this.constructor,\r\n              cache = ctor.cache = ctor.cache || {},\r\n              defaults = cache.defaults;\r\n          if (!defaults) {\r\n            var  ctors = [];\r\n            do {\r\n              ctors.unshift(ctor);\r\n              if (ctor === Plugin) {\r\n                break;\r\n              }\r\n              ctor = ctor.superclass;\r\n            } while (ctor);\r\n\r\n            defaults = cache.defaults = {};\r\n            for (var i=0;i<ctors.length;i++) {\r\n              ctor = ctors[i];\r\n              if (ctor.prototype.hasOwnProperty(\"options\")) {\r\n                langx.mixin(defaults,ctor.prototype.options,true);\r\n              }\r\n              if (ctor.hasOwnProperty(\"options\")) {\r\n                langx.mixin(defaults,ctor.options,true);\r\n              }\r\n            }\r\n          }\r\n          Object.defineProperty(this,\"options\",{\r\n            value :langx.mixin({},defaults,options,true)\r\n          });\r\n\r\n          //return this.options = langx.mixin({},defaults,options);\r\n          return this.options;\r\n        },\r\n\r\n\r\n        destroy: function() {\r\n            var that = this;\r\n\r\n            this._destroy();\r\n            // We can probably remove the unbind calls in 2.0\r\n            // all event bindings should go through this._on()\r\n            datax.removeData(this._elm,this.pluginName );\r\n        },\r\n\r\n        _destroy: langx.noop,\r\n\r\n        _delay: function( handler, delay ) {\r\n            function handlerProxy() {\r\n                return ( typeof handler === \"string\" ? instance[ handler ] : handler )\r\n                    .apply( instance, arguments );\r\n            }\r\n            var instance = this;\r\n            return setTimeout( handlerProxy, delay || 0 );\r\n        },\r\n\r\n        option: function( key, value ) {\r\n            var options = key;\r\n            var parts;\r\n            var curOption;\r\n            var i;\r\n\r\n            if ( arguments.length === 0 ) {\r\n\r\n                // Don't return a reference to the internal hash\r\n                return langx.mixin( {}, this.options );\r\n            }\r\n\r\n            if ( typeof key === \"string\" ) {\r\n\r\n                // Handle nested keys, e.g., \"foo.bar\" => { foo: { bar: ___ } }\r\n                options = {};\r\n                parts = key.split( \".\" );\r\n                key = parts.shift();\r\n                if ( parts.length ) {\r\n                    curOption = options[ key ] = langx.mixin( {}, this.options[ key ] );\r\n                    for ( i = 0; i < parts.length - 1; i++ ) {\r\n                        curOption[ parts[ i ] ] = curOption[ parts[ i ] ] || {};\r\n                        curOption = curOption[ parts[ i ] ];\r\n                    }\r\n                    key = parts.pop();\r\n                    if ( arguments.length === 1 ) {\r\n                        return curOption[ key ] === undefined ? null : curOption[ key ];\r\n                    }\r\n                    curOption[ key ] = value;\r\n                } else {\r\n                    if ( arguments.length === 1 ) {\r\n                        return this.options[ key ] === undefined ? null : this.options[ key ];\r\n                    }\r\n                    options[ key ] = value;\r\n                }\r\n            }\r\n\r\n            this._setOptions( options );\r\n\r\n            return this;\r\n        },\r\n\r\n        _setOptions: function( options ) {\r\n            var key;\r\n\r\n            for ( key in options ) {\r\n                this._setOption( key, options[ key ] );\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        _setOption: function( key, value ) {\r\n\r\n            this.options[ key ] = value;\r\n\r\n            return this;\r\n        },\r\n\r\n        getUID : function (prefix) {\r\n            prefix = prefix || \"plugin\";\r\n            do prefix += ~~(Math.random() * 1000000)\r\n            while (document.getElementById(prefix))\r\n            return prefix;\r\n        },\r\n\r\n        elm : function() {\r\n            return this._elm;\r\n        }\r\n\r\n    });\r\n\r\n    $.fn.plugin = function(name,options) {\r\n        var args = slice.call( arguments, 1 ),\r\n            self = this,\r\n            returnValue = this;\r\n\r\n        this.each(function(){\r\n            returnValue = instantiate.apply(self,[this,name].concat(args));\r\n        });\r\n        return returnValue;\r\n    };\r\n\r\n    elmx.partial(\"plugin\",function(name,options) {\r\n        var args = slice.call( arguments, 1 );\r\n        return instantiate.apply(this,[this.domNode,name].concat(args));\r\n    }); \r\n\r\n\r\n    function plugins() {\r\n        return plugins;\r\n    }\r\n     \r\n    langx.mixin(plugins, {\r\n        instantiate,\r\n        Plugin,\r\n        register,\r\n        shortcuts\r\n    });\r\n\r\n    return  skylark.attach(\"domx.plugins\",plugins);\r\n});\ndefine('skylark-domx-plugins/main',[\r\n\t\"./plugins\"\r\n],function(plugins){\r\n\treturn plugins;\r\n});\ndefine('skylark-domx-plugins', ['skylark-domx-plugins/main'], function (main) { return main; });\n\ndefine('skylark-domx-files/MultiUploader',[\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-velm\",\r\n  \"skylark-net-http/Upload\",\r\n  \"skylark-domx-plugins\",\r\n  \"./files\"\r\n]  ,function(skylark,langx,$, elmx,FileUpload, plugins,files){\r\n\r\n    var fileListTemplate = '<div class=\"lark-multiuploader\">' + \r\n        '    <h3 class=\"popover-title\">Upload files</h3>' + \r\n        '    <div class=\"popover-content container-fluid\" class=\"file-list file-dropzone file-pastezone\">' + \r\n        '        <div class=\"no-data\"><em>Add files.</em></div>' + \r\n        '    </div>' + \r\n        '    <footer>' + \r\n        '        <button class=\"btn btn-warning pull-right btn-sm\" id=\"cancel-uploads-button\"><i class=\"icon-cancel\"></i>Cancel uploads</button>' + \r\n        '        <span class=\"btn btn-success fileinput-button btn-sm\" id=\"fileinput-button\">' + \r\n        '            <i class=\"icon-plus\"></i>' + \r\n        '            <span>Add files...</span>' + \r\n        '            <input id=\"fileupload\" type=\"file\" name=\"files[]\" multiple=\"multiple\">' + \r\n        '        </span>' + \r\n        '        <button class=\"btn btn-primary btn-sm\" id=\"start-uploads-button\"><i class=\"icon-start\"></i>Start uploads</button>' + \r\n        '    </footer>' + \r\n        '</div>',\r\n        fileItemTemplate = '<div class=\"file-item row\">' +\r\n        '   <div class=\"col-md-6\"><span class=\"name\"></span></div>' + \r\n        '   <div class=\"col-md-3\">' +\r\n        '    <span class=\"size\"></span>' +\r\n        '    <div class=\"progress hidden\">' +\r\n        '        <div class=\"progress-label\"></div>' +\r\n        '        <div class=\"bar\"></div>' +\r\n        '    </div>' +\r\n        '    <span class=\"message hidden\"></span>' +\r\n        '   </div>' +\r\n        '   <div class=\"col-md-3\">' +\r\n        '    <button class=\"btn btn-warning btn-xs cancel\"><i class=\"icon-remove\"></i>Cancel</button>' +\r\n        '    <button class=\"btn btn-xs clear hidden\">Clear</button>' +\r\n        '   </div>' +\r\n        '</div>';\r\n\r\n    var MultiUploader =  plugins.Plugin.inherit({\r\n        klassName : \"Uploader\",\r\n        pluginName : \"lark.multiuploader\",\r\n\r\n        options: {\r\n            uploadUrl: '/upload',\r\n\r\n        \tparams: {\r\n                formParamName : \"file\"\r\n            },\r\n\r\n    \t    maxConnections: 3,\r\n        \t// validation\r\n        \tallowedExtensions: [],\r\n        \tsizeLimit: 0,\r\n        \tminSizeLimit: 0,\r\n\r\n            autoUpload: false,\r\n            selectors : {\r\n              fileList : \".file-list\",\r\n              fileItem : \".file-item\",\r\n              nodata : \".file-list .no-data\",\r\n\r\n              picker   : \".file-picker\",\r\n              dropzone : \".file-dropzone\",\r\n              pastezone: \".file-pastezone\",\r\n\r\n              startUploads: '.start-uploads',\r\n              cancelUploads: '.cancel-uploads',\r\n            },\r\n\r\n            template : fileListTemplate,\r\n\r\n            dataType: 'json',\r\n\r\n            fileItem : {\r\n            \tselectors : {\r\n                    name : \".name\",\r\n                    size : \".size\",\r\n                    cancel: \".cancel\",\r\n                    clear : \".clear\",\r\n                    progress : \".progress\",\r\n                    message : \".message\"                   \r\n            \t},\r\n\r\n            \ttemplate : fileItemTemplate\r\n            }\r\n        },\r\n\r\n\r\n        _construct : function(elm,options) {\r\n            var self = this;\r\n\r\n\r\n            // Render current files\r\n            /*\r\n            this.files.forEach(function (file) {\r\n                self.renderFile(file);\r\n            });\r\n            */\r\n\r\n            //this._refresh({files:true});\r\n        \r\n\r\n            //this._files.on('all', function(){\r\n            //  self._refresh({files:true});\r\n            //});\r\n\r\n\r\n           this.overrided(elm,options);\r\n\r\n\r\n           this._velm = elmx(this._elm);\r\n        \r\n\r\n\r\n            this._initEventHandler();\r\n            this._initFileHandlers();\r\n            this._initUpoadHandler();\r\n            this._updateFileList();\r\n        },\r\n\r\n        _initFileHandlers : function() {\r\n            var self = this;\r\n\r\n            var selectors = this.options.selectors,\r\n            \tdzSelector = selectors.dropzone,\r\n            \tpzSelector = selectors.pastezone,\r\n            \tpkSelector = selectors.picker;\r\n\r\n            if (dzSelector) {\r\n\t\t\t\tthis._velm.$(dzSelector).dropzone({\r\n\t                dropped : function (files) {\r\n                        self._addFiles(files);\r\n\t                }\r\n\t\t\t\t});\r\n            }\r\n\r\n\r\n            if (pzSelector) {\r\n                this._velm.$(pzSelector).pastezone({\r\n                    pasted : function (files) {\r\n                        self._addFiles(files);\r\n                    }\r\n                });                \r\n            }\r\n\r\n            if (pkSelector) {\r\n                this._velm.$(pkSelector).picker({\r\n                    multiple: true,\r\n                    picked : function (files) {\r\n                        self._addFiles(files);\r\n                    }\r\n                });                \r\n            }\r\n        },\r\n\r\n        _initUpoadHandler: function(){\r\n            var self = this,\r\n                handlerClass;\r\n\r\n            this._handler = new FileUpload({\r\n                url: this.options.uploadUrl,\r\n                maxConnections: this.options.maxConnections,\r\n                onProgress: function(id, fileName, loaded, total){\r\n                    self._onProgress(id, fileName, loaded, total);\r\n                },\r\n                onComplete: function(id, fileName, result){\r\n                    self._onComplete(id, fileName, result);\r\n                },\r\n                onCancel: function(id, fileName){\r\n                    self._onCancel(id, fileName);\r\n                },\r\n                onFailure: function(id,fileName,e){\r\n                    self._onFailure(id,fileName,e);\r\n                }\r\n            });\r\n        },\r\n        \r\n         /**\r\n         * delegate click event for cancel link\r\n         **/\r\n        _initEventHandler: function(){\r\n            var self = this,\r\n               selectors = this.options.selectors,\r\n               itemSelectors = this.options.fileItem.selectors, \r\n               list = this._listElement;\r\n\r\n            // Add cancel handler\r\n            this._velm.$(selectors.fileList).on(\"click\",itemSelectors.cancel,function(e){\r\n                var $fileItem = $(this).closest(selectors.fileItem),\r\n                    fileId = $fileItem.data(\"fileId\");\r\n                self._handler.cancel(fileId);\r\n                $fileItem.remove();\r\n                self._updateFileList();\r\n            });\r\n\r\n            // Add clear handler\r\n            this._velm.$(selectors.fileList).on(\"click\",itemSelectors.clear,function(e){\r\n                var $fileItem = $(this).closest(selectors.fileItem),\r\n                    fileId = $fileItem.data(\"fileId\");\r\n                $fileItem.remove();\r\n                self._updateFileList();\r\n            });\r\n\r\n            // Add cancel all handler\r\n            this._velm.$(selectors.cancelUploads).click(function(){\r\n                var $files = self._velm.$(selectors.fileList).find(selectors.fileItem);           \r\n                $files.forEach(function(fileItem){\r\n                    var $fileItem = $(fileItem),\r\n                        fileId = $fileItem.data(\"fileId\");\r\n                    self._handler.cancel(fileId);\r\n                    $fileItem.remove();\r\n                });\r\n                self._updateFileList();\r\n\r\n            });\r\n\r\n            // Add start uploads handler\r\n            this._velm.$(selectors.startUploads).click(function(){\r\n                var $files = self._velm.$(selectors.fileList).find(selectors.fileItem);           \r\n                $files.forEach(function(fileItem){\r\n                    var $fileItem = $(fileItem),\r\n                        fileId = $fileItem.data(\"fileId\");\r\n                    if (!$fileItem.data(\"status\")) {\r\n                        // The file has not yet been sent\r\n                        self._handler.send(fileId,self.options.params);\r\n                    }\r\n                });\r\n\r\n            });\r\n            \r\n\r\n        },       \r\n\r\n        _onProgress: function(id, fileName, loaded, total){          \r\n            var $item = this._getItemByFileId(id);\r\n\r\n            var percent = parseInt(loaded / total * 100, 10);\r\n            var progressHTML = this._formatSize(loaded)+' of '+ this._formatSize(total);\r\n\r\n            $item.data(\"status\",\"running\");\r\n            $item.find('.progress')\r\n                .find('.bar')\r\n                .css('width', percent+'%')\r\n                .parent()\r\n                .find('.progress-label')\r\n                .html(progressHTML);\r\n            this._updateFile($item);\r\n\r\n        },\r\n\r\n        _onComplete: function(id, fileName, result){\r\n            this._filesInProgress--;\r\n            var $item = this._getItemByFileId(id);\r\n            $item.data(\"status\",\"done\");\r\n            $item.find('.message').html('<i class=\"icon-success\"></i> ' + (this.doneMsg || 'Uploaded'));\r\n            this._updateFile($item);\r\n        },\r\n\r\n        _onFailure : function(id,fileName,e) {\r\n            this._filesInProgress--;\r\n            var $item = this._getItemByFileId(id);\r\n            $item.data(\"status\",\"error\");\r\n            $item.find('.message').html('<i class=\"icon-error\"></i> ');;\r\n            this._updateFile($item)\r\n\r\n        },\r\n\r\n        _onCancel: function(id, fileName){\r\n            this._filesInProgress--;\r\n            var $item = this._getItemByFileId(id);\r\n            $item.data(\"status\",\"cancel\");\r\n            this._updateFile($item)\r\n        },\r\n\r\n        _addToList: function(id, fileName){\r\n            var self = this;\r\n\r\n\r\n            var fileName = this._handler.getName(id),\r\n                fileSize = this._handler.getSize(id);\r\n\r\n            var item = $(this.options.fileItem.template);\r\n            item.data(\"fileId\",id);\r\n\r\n            item.find(this.options.fileItem.selectors.name).html(this._formatFileName(fileName));\r\n            item.find(this.options.fileItem.selectors.size).html(this._formatSize(fileSize));\r\n\r\n            this._velm.$(this.options.selectors.fileList).append(item);\r\n\r\n            this._updateFileList();\r\n        },\r\n    \r\n        _updateFileList : function ()  {\r\n            var selectors = this.options.selectors,\r\n                itemSelectors = this.options.fileItem.selectors,\r\n                files = this._velm.$(selectors.fileList).find(selectors.fileItem);\r\n\r\n            var with_files_elements = this._velm.$(selectors.cancelUploads + ',' + selectors.startUploads);\r\n            var without_files_elements = this._velm.$(selectors.nodata);\r\n            if (files.length > 0) {\r\n                with_files_elements.removeClass('hidden');\r\n                without_files_elements.addClass('hidden');\r\n            } else {\r\n                with_files_elements.addClass('hidden');\r\n                without_files_elements.removeClass('hidden');\r\n            }\r\n        },\r\n        \r\n        _updateFile: function ($item) {\r\n            var selectors = this.options.fileItem.selectors,\r\n                when_pending = $item.find(selectors.size + \",\" + selectors.cancel),\r\n                when_running = $item.find(selectors.progress + \",\" + selectors.cancel),\r\n                when_done = $item.find(selectors.message + \",\" + selectors.clear);\r\n\r\n            var status = $item.data(\"status\");    \r\n            if (status == \"pending\") {\r\n                when_running.add(when_done).addClass('hidden');\r\n                when_pending.removeClass('hidden');\r\n            } else if (status == \"running\") {\r\n                when_pending.add(when_done).addClass('hidden');\r\n                when_running.removeClass('hidden');\r\n            } else if (status == \"done\" || status == \"error\") {\r\n                when_pending.add(when_running).addClass('hidden');\r\n                when_done.removeClass('hidden');\r\n            }\r\n        },\r\n\r\n        _getItemByFileId: function(id){\r\n            var selectors = this.options.selectors,\r\n                files = this._velm.$(selectors.fileList).find(selectors.fileItem),\r\n                item;\r\n\r\n            // there can't be txt nodes in dynamically created list\r\n            // and we can  use nextSibling\r\n\r\n            for (var i = 0; i<files.length;i++){\r\n                var item2 = files[i];\r\n                if ($(item2).data(\"fileId\") == id) {\r\n                    item = item2;\r\n                    break;\r\n                }\r\n            }\r\n            if (item) {\r\n                return $(item);\r\n            }\r\n        },\r\n\r\n\r\n            \r\n        _addFiles: function(files){\r\n            for (var i=0; i<files.length; i++){\r\n                if ( !this._validateFile(files[i])){\r\n                    return;\r\n                }\r\n            }\r\n\r\n            for (var i=0; i<files.length; i++){\r\n                this._addFile(files[i]);\r\n            }\r\n        },\r\n\r\n        _addFile: function(file){\r\n            var id = this._handler.add(file);\r\n\r\n            this._filesInProgress++;\r\n            this._addToList(id);\r\n\r\n            //this._handler.upload(id, this.options.params);\r\n        },\r\n\r\n        _validateFile: function(file){\r\n            var name, size;\r\n\r\n            if (file.value){\r\n                // it is a file input\r\n                // get input value and remove path to normalize\r\n                name = file.value.replace(/.*(\\/|\\\\)/, \"\");\r\n            } else {\r\n                // fix missing properties in Safari\r\n                name = file.fileName != null ? file.fileName : file.name;\r\n                size = file.fileSize != null ? file.fileSize : file.size;\r\n            }\r\n\r\n            if (! this._isAllowedExtension(name)){\r\n                this._error('typeError', name);\r\n                return false;\r\n\r\n            } else if (size === 0){\r\n                this._error('emptyError', name);\r\n                return false;\r\n\r\n            } else if (size && this.options.sizeLimit && size > this.options.sizeLimit){\r\n                this._error('sizeError', name);\r\n                return false;\r\n\r\n            } else if (size && size < this.options.minSizeLimit){\r\n                this._error('minSizeError', name);\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        },\r\n\r\n        _error: function(code, fileName){\r\n            var message = this.options.messages[code];\r\n            function r(name, replacement){ message = message.replace(name, replacement); }\r\n\r\n            r('{file}', this._formatFileName(fileName));\r\n            r('{extensions}', this.options.allowedExtensions.join(', '));\r\n            r('{sizeLimit}', this._formatSize(this.options.sizeLimit));\r\n            r('{minSizeLimit}', this._formatSize(this.options.minSizeLimit));\r\n\r\n            this.options.showMessage(message);\r\n        },\r\n\r\n        _formatFileName: function(name){\r\n            if (name.length > 33){\r\n                name = name.slice(0, 19) + '...' + name.slice(-13);\r\n            }\r\n            return name;\r\n        },\r\n\r\n        _isAllowedExtension: function(fileName){\r\n            var ext = (-1 !== fileName.indexOf('.')) ? fileName.replace(/.*[.]/, '').toLowerCase() : '';\r\n            var allowed = this.options.allowedExtensions;\r\n\r\n            if (!allowed.length){return true;}\r\n\r\n            for (var i=0; i<allowed.length; i++){\r\n                if (allowed[i].toLowerCase() == ext){ return true;}\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        _formatSize: function(bytes){\r\n            var i = -1;\r\n            do {\r\n                bytes = bytes / 1024;\r\n                i++;\r\n            } while (bytes > 99);\r\n\r\n            return Math.max(bytes, 0.1).toFixed(1) + ['KB', 'MB', 'GB', 'TB', 'PB', 'EB'][i];\r\n        }\r\n\r\n    });\r\n\r\n   plugins.register(MultiUploader);\r\n\r\n\r\n\r\n\treturn files.MultiUploader = MultiUploader;\r\n});\ndefine('skylark-domx-files/main',[\r\n\t\"./files\",\r\n\t\"skylark-domx-velm\",\r\n\t\"skylark-domx-query\",\r\n\t\"./dropzone\",\r\n\t\"./pastezone\",\r\n\t\"./picker\",\r\n\t\"./MultiUploader\"\r\n],function(files,velm,$){\r\n\tvelm.delegate([\r\n\t\t\"dropzone\",\r\n\t\t\"pastezone\",\r\n\t\t\"picker\"\r\n\t],files);\r\n\r\n    $.fn.pastezone = $.wraps.wrapper_every_act(files.pastezone, files);\r\n    $.fn.dropzone = $.wraps.wrapper_every_act(files.dropzone, files);\r\n    $.fn.picker = $.wraps.wrapper_every_act(files.picker, files);\r\n\r\n\treturn files;\r\n});\ndefine('skylark-domx-files', ['skylark-domx-files/main'], function (main) { return main; });\n\ndefine('skylark-data-collection/collections',[\r\n\t\"skylark-langx/skylark\"\r\n],function(skylark){\r\n\treturn skylark.attach(\"data.collections\",{});\r\n});\ndefine('skylark-data-collection/Collection',[\r\n    \"skylark-langx/Evented\",\r\n    \"./collections\"\r\n], function(Evented, collections) {\r\n\r\n    var Collection = collections.Collection = Evented.inherit({\r\n\r\n        \"klassName\": \"Collection\",\r\n\r\n        _clear: function() {\r\n            throw new Error('Unimplemented API');\r\n        },\r\n\r\n        \"clear\": function() {\r\n            //desc: \"Removes all items from the Collection\",\r\n            //result: {\r\n            //    type: Collection,\r\n            //    desc: \"this instance for chain call\"\r\n            //},\r\n            //params: [],\r\n            this._clear();\r\n            this.trigger(\"changed:clear\");\r\n            return this;\r\n        },\r\n\r\n        /*\r\n         *@method count\r\n         *@return {Number}\r\n         */\r\n        count : /*Number*/function () {\r\n            var c = 0,\r\n                it = this.iterator();\r\n            while(!it.hasNext()){\r\n                c++;\r\n            }\r\n            return c;\r\n        },\r\n\r\n        \"forEach\": function( /*Function*/ func, /*Object?*/ thisArg) {\r\n            //desc: \"Executes a provided callback function once per collection item.\",\r\n            //result: {\r\n            //    type: Number,\r\n            //    desc: \"the number of items\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"func\",\r\n            //    type: Function,\r\n            //    desc: \"Function to execute for each element.\"\r\n            //}, {\r\n            //    name: \"thisArg\",\r\n            //    type: Object,\r\n            //    desc: \"Value to use as this when executing callback.\"\r\n            //}],\r\n            var it = this.iterator();\r\n            while(it.hasNext()){\r\n                var item = it.next();\r\n                func.call(thisArg || item,item);\r\n            }\r\n            return this;\r\n\r\n        },\r\n\r\n        \"iterator\" : function() {\r\n            throw new Error('Unimplemented API');\r\n        },\r\n\r\n        \"toArray\": function() {\r\n            //desc: \"Returns an array containing all of the items in this collection in proper sequence (from first to last item).\",\r\n            //result: {\r\n            //    type: Array,\r\n            //    desc: \"an array containing all of the elements in this collection in proper sequence\"\r\n            //},\r\n            //params: [],\r\n            var items = [],\r\n                it = this.iterator();\r\n            while(!it.hasNext()){\r\n                items.push(it.next());\r\n            }\r\n            return items;\r\n        }\r\n    });\r\n\r\n    return Collection;\r\n});\r\n\n\r\ndefine('skylark-data-collection/Map',[\r\n    \"./collections\",\r\n    \"./Collection\"\r\n], function( collections, Collection) {\r\n\r\n    var Map = collections.Map = Collection.inherit({\r\n\r\n        \"klassName\": \"Map\",\r\n\r\n        _getInnerItems : function() {\r\n            return this._items;\r\n        },\r\n\r\n        _clear : function() {\r\n            this._items = [];\r\n        },\r\n\r\n        _findKeyByRegExp: function(regExp, callback) {\r\n            var items = this._getInnerItems();\r\n            return items.filter(function(key) {\r\n                if (key.match(regExp)) {\r\n                    if (callback) callback(key);\r\n                    return true;\r\n                } else {\r\n                    return false;\r\n                }\r\n            });\r\n        },\r\n\r\n        \"get\":  function(strKey, silent) {\r\n            //desc: \"Returns the item at the specified key in the Hashtable.\",\r\n            //result: {\r\n            //    type: Object,\r\n            //    desc: \"The item at the specified key.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"strKey\",\r\n            //    type: String,\r\n            //    desc: \"The key of the item to return.\"\r\n            //}, {\r\n            //    name: \"silent\",\r\n            //    type: Boolean,\r\n            //    desc: \"the silent flag.\",\r\n            //    optional: true\r\n            //}],\r\n            if (typeof(strKey) != \"string\") {\r\n                throw \"hash key is not string!\";\r\n            }\r\n            /*\r\n            if (!silent && !this.contains(strKey)) {\r\n                throw \"hash key is not  existed\";\r\n            }\r\n            */\r\n            var items = this._getInnerItems();\r\n            return items[strKey];\r\n        },\r\n\r\n        \"iterator\" : function() {\r\n            var i =0;\r\n            return {\r\n                hasNext : function() {\r\n                    return i < this._items.length;\r\n                },\r\n                next : function() {\r\n                    var key =  this._items[i++];\r\n                    return [this._items[key],key];\r\n                }\r\n            }\r\n        },\r\n\r\n        \"set\": function( /*String*/ strKey, /*Object*/ value) {\r\n            //desc: \"Replaces the item at the specified key in the Hashtable with the specified item.\",\r\n            //result: {\r\n            //    type: Map,\r\n            //    desc: \"this instance for chain call.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"strKey\",\r\n            //    type: String,\r\n            //    desc: \"key of the item to replace.\"\r\n            //}, {\r\n            //    name: \"value\",\r\n            //    type: Object,\r\n            //    desc: \"item to be stored at the specified position.\"\r\n            //}],\r\n            if (typeof(strKey) != \"string\") {\r\n                throw \"hash key is not string!\";\r\n            }\r\n\r\n            /*\r\n            if (!this.contains(strKey)) {\r\n                throw \"hash key is not existed\";\r\n            }\r\n            */\r\n\r\n            var items = this._getInnerItems();\r\n            if (items.indexOf(strKey) == -1) {\r\n                items.push(strKey);\r\n            }\r\n            var oldValue = items[strKey];\r\n            if (oldValue !== value) {\r\n                items[strKey] = value;\r\n                var updated = {};\r\n                updated[strKey] = {\r\n                    name : strKey,\r\n                    value : value,\r\n                    oldValue : oldValue\r\n                };\r\n                this.trigger(\"changed\" ,{ //TODO: \"changed:\"+ strKey\r\n                    data : updated\r\n                });\r\n            }\r\n            return this;\r\n        },\r\n\r\n\r\n        \"remove\": function( /*String*/ strKey) {\r\n            //desc: \"Removes the first occurrence of a specific item from the Hashtable\",\r\n            //result: {\r\n            //    type: Map,\r\n            //    desc: \"this instance for chain call.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"strKey\",\r\n            //    type: String,\r\n            //    desc: \"The key for The item to remove from the Hashtable.\"\r\n            //}],\r\n            if (typeof(strKey) != \"string\") {\r\n                throw \"hash key is not string!\";\r\n            }\r\n            var items = this._getInnerItems();\r\n            var idx = items.indexOf(strKey);\r\n            if (idx >= 0) {\r\n                delete items[strKey];\r\n                delete items[idx];\r\n            }\r\n        },\r\n\r\n        findByRegExp: function( /*String*/ regExp, callback) {\r\n            //desc: \"find regExp items\",\r\n            //result: {\r\n            //    type: Map,\r\n            //    desc: \"this instance for chain call.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"regExp\",\r\n            //    type: String,\r\n            //    desc: \"The key for The item to remove from the Hashtable.\"\r\n            //}, {\r\n            //    name: \"callback\",\r\n            //    type: Function,\r\n            //    desc: \"the callback method\"\r\n            //}],\r\n            var items = [],\r\n                self = this;\r\n            this._findKeyByRegExp(regExp, function(key) {\r\n                var item = self.get(key);\r\n                if (callback) callback(item);\r\n                items.push(item);\r\n            });\r\n            return items;\r\n        },\r\n\r\n        removeByRegExp: function( /*String*/ regExp) {\r\n            //desc: \"Removes regExp items\",\r\n            //result: {\r\n            //    type: Map,\r\n            //    desc: \"this instance for chain call.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"regExp\",\r\n            //    type: String,\r\n            //    desc: \"The key for The item to remove from the Hashtable.\"\r\n            //}],\r\n            var self = this;\r\n            this._findKeyByRegExp(regExp, function(key) {\r\n                self.remove(key);\r\n            });\r\n        },\r\n\r\n        \"toPlain\": function() {\r\n            //desc: \"Returns a plain object containing all of the items in this Hashable.\",\r\n            //result: {\r\n            //    type: Object,\r\n            //    desc: \"a plain object containing all of the items in this Hashtable.\"\r\n            //},\r\n            //params: [],\r\n            var items = this._getInnerItems(); \r\n\r\n            for (var i = 0; i < items.length; i++) {\r\n                var key = items[i];\r\n                plain[key] = items[key];\r\n            }\r\n            return plain;\r\n        },\r\n\r\n        \"toString\": function( /*String?*/ delim) {\r\n            //desc: \"implementation of toString, follows [].toString().\",\r\n            //result: {\r\n            //    type: String,\r\n            //   desc: \"The string.\"\r\n            //},\r\n            //params: [{\r\n            //    name: \"delim\",\r\n            //    type: String,\r\n            //    desc: \"The delim \",\r\n            //    optional: true\r\n            //}],\r\n            var items = this._getInnerItems();\r\n\r\n            return items.join((delim || \",\"));\r\n        },\r\n\r\n        \"init\": function( /*Object*/ data) {\r\n            var items = this._items = [];\r\n            for (var name in data) {\r\n                items.push(name);\r\n                items[name]= data[name];\r\n            }\r\n        }\r\n       \r\n    });\r\n    return Map;\r\n});\r\n\n\r\ndefine('skylark-data-collection/HashMap',[\r\n    \"./collections\",\r\n\t\"./Map\"\r\n],function(collections,_Map) {\r\n\r\n\tvar HashMap = collections.HashMap = _Map.inherit({\r\n\t});\r\n\r\n\treturn HashMap;\r\n});\ndefine('skylark-widgets-base/base',[\r\n\t\"skylark-langx/skylark\"\r\n],function(skylark){\r\n\treturn skylark.attach(\"widgets.base\",{});\r\n});\ndefine('skylark-widgets-base/Widget',[\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-data\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-files\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-velm\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-fx\",\r\n  \"skylark-domx-plugins\",\r\n  \"skylark-data-collection/HashMap\",\r\n  \"./base\"\r\n],function(skylark,langx,browser,datax,eventer,noder,files,geom,elmx,$,fx, plugins,HashMap,base){\r\n\r\n/*---------------------------------------------------------------------------------*/\r\n\r\n  var Widget = plugins.Plugin.inherit({\r\n    klassName: \"Widget\",\r\n\r\n    _elmx : elmx,\r\n\r\n    _construct : function(elm,options) {\r\n        if (langx.isHtmlNode(elm)) {\r\n          options = this._parse(elm,options);\r\n        } else {\r\n          options = elm;\r\n          elm = null;\r\n        }\r\n        this.overrided(elm,options);\r\n\r\n        if (!elm) {\r\n          this._velm = this._create();\r\n          this._elm = this._velm.elm();\r\n        } else {\r\n          this._velm = elmx(this._elm);\r\n        }\r\n        \r\n        Object.defineProperty(this,\"state\",{\r\n          value :this.options.state || new HashMap()\r\n        });\r\n\r\n        //this.state = this.options.state || new Map();\r\n        this._init();\r\n\r\n        var addonCategoryOptions = this.options.addons;\r\n        if (addonCategoryOptions) {\r\n          var widgetCtor = this.constructor,\r\n              addons = widgetCtor.addons;\r\n          for (var categoryName in addonCategoryOptions) {\r\n              for (var i =0;i < addonCategoryOptions[categoryName].length; i++ ) {\r\n                var addonOption = addonCategoryOptions[categoryName][i];\r\n                if (langx.isString(addonOption)) {\r\n                  var addonName = addonOption,\r\n                      addonSetting = addons[categoryName][addonName],\r\n                      addonCtor = addonSetting.ctor ? addonSetting.ctor : addonSetting;\r\n\r\n                  this.addon(addonCtor,addonSetting.options);\r\n\r\n                }\r\n\r\n              }\r\n          }\r\n        }\r\n\r\n        if (this._elm.parentElement) {\r\n          // The widget is already in document\r\n          this._startup();\r\n        }\r\n\r\n     },\r\n\r\n    /**\r\n     * Parses widget options from attached element.\r\n     * This is a callback method called by constructor when attached element is specified.\r\n     * @method _parse\r\n     * @return {Object} options.\r\n     */\r\n    _parse : function(elm,options) {\r\n      var optionsAttr = datax.data(elm,\"options\");\r\n      if (optionsAttr) {\r\n         //var options1 = JSON.parse(\"{\" + optionsAttr + \"}\");\r\n         var options1 = eval(\"({\" + optionsAttr + \"})\");\r\n         options = langx.mixin(options1,options); \r\n      }\r\n      return options || {};\r\n    },\r\n\r\n\r\n    /**\r\n     * Create html element for this widget.\r\n     * This is a callback method called by constructor when attached element is not specified.\r\n     * @method _create\r\n     */\r\n    _create : function() {\r\n        var template = this.options.template;\r\n        if (template) {\r\n          return this._elmx(template);\r\n        } else {\r\n          throw new Error(\"The template is not existed in options!\");\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * Init widget.\r\n     * This is a callback method called by constructor.\r\n     * @method _init\r\n     */\r\n    _init : function() {\r\n      var self = this;\r\n      if (this.widgetClass) {\r\n        this._velm.addClass(this.widgetClass);\r\n      }\r\n      this.state.on(\"changed\",function(e,args) {\r\n        self._refresh(args.data);\r\n      });\r\n    },\r\n\r\n\r\n    /**\r\n     * Startup widget.\r\n     * This is a callback method called when widget element is added into dom.\r\n     * @method _post\r\n     */\r\n    _startup : function() {\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * Refresh widget.\r\n     * This is a callback method called when widget state is changed.\r\n     * @method _refresh\r\n     */\r\n    _refresh : function(updates) {\r\n      /*\r\n      var _ = this._,\r\n          model = _.model,\r\n          dom = _.dom,\r\n          props = {\r\n\r\n          };\r\n      updates = updates || {};\r\n      for (var attrName in updates){\r\n          var v = updates[attrName].value;\r\n          if (v && v.toCss) {\r\n              v.toCss(props);\r\n              updates[attrName].processed = true;\r\n          }\r\n\r\n      };\r\n\r\n      this.css(props);\r\n\r\n      if (updates[\"disabled\"]) {\r\n          var v = updates[\"disabled\"].value;\r\n          dom.aria('disabled', v);\r\n          self.classes.toggle('disabled', v);\r\n      }\r\n      */\r\n    },                \r\n\r\n    mapping : {\r\n      \"events\" : {\r\n  //       'mousedown .title':  'edit',\r\n  //       'click .button':     'save',\r\n  //       'click .open':       function(e) { ... }            \r\n      },\r\n\r\n      \"attributs\" : {\r\n\r\n      },\r\n\r\n      \"properties\" : {\r\n\r\n      },\r\n\r\n      \"styles\" : {\r\n\r\n      }\r\n    },\r\n\r\n    addon : function(ctor,setting) {\r\n      var categoryName = ctor.categoryName,\r\n          addonName = ctor.addonName;\r\n\r\n      this._addons = this.addons || {};\r\n      var category = this._addons[categoryName] = this._addons[categoryName] || {};\r\n      category[addonName] = new ctor(this,setting);\r\n      return this;\r\n    },\r\n\r\n    addons : function(categoryName,settings) {\r\n      this._addons = this.addons || {};\r\n      var category = this._addons[categoryName] = this._addons[categoryName] || {};\r\n\r\n      if (settings == undefined) {\r\n        return langx.clone(category || null);\r\n      } else {\r\n        langx.mixin(category,settings);\r\n      }\r\n    },\r\n\r\n\r\n    /**\r\n     * Returns a html element representing the widget.\r\n     *\r\n     * @method render\r\n     * @return {HtmlElement} HTML element representing the widget.\r\n     */\r\n    render: function() {\r\n      return this._elm;\r\n    },\r\n\r\n\r\n\r\n    /**\r\n     * Returns a parent widget  enclosing this widgets, or null if not exist.\r\n     *\r\n     * @method getEnclosing\r\n     * @return {Widget} The enclosing parent widget, or null if not exist.\r\n     */\r\n    getEnclosing : function(selector) {\r\n      return null;\r\n    },\r\n\r\n    /**\r\n     * Returns a widget collection with all enclosed child widgets.\r\n     *\r\n     * @method getEnclosed\r\n     * @return {List} Collection with all enclosed child widgets..\r\n     */\r\n    getEnclosed : function() {\r\n      var self = this;\r\n          children = new ArrayList();\r\n      return children;\r\n    },\r\n\r\n    /**\r\n     * Sets the visible state to true.\r\n     *\r\n     * @method show\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n\r\n    show : function() {\r\n      this._velm.show();\r\n    },\r\n\r\n    /**\r\n     * Sets the visible state to false.\r\n     *\r\n     * @method hide\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    hide : function() {\r\n      this._velm.hide();\r\n    },\r\n\r\n    /**\r\n     * Focuses the current widget.\r\n     *\r\n     * @method focus\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    focus :function() {\r\n      try {\r\n        this._velm.focus();\r\n      } catch (ex) {\r\n        // Ignore IE error\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Blurs the current widget.\r\n     *\r\n     * @method blur\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    blur : function() {\r\n      this._velm.blur();\r\n\r\n      return this;\r\n    },\r\n\r\n    enable: function () {\r\n      this.state.set('disabled',false);\r\n      return this;\r\n    },\r\n\r\n    disable: function () {\r\n      this.state.set('disabled',true);\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the specified aria property.\r\n     *\r\n     * @method aria\r\n     * @param {String} name Name of the aria property to set.\r\n     * @param {String} value Value of the aria property.\r\n     * @return {Widget} Current widget instance.\r\n     */\r\n    aria : function(name, value) {\r\n      const self = this, elm = self.getEl(self.ariaTarget);\r\n\r\n      if (typeof value === 'undefined') {\r\n        return self._aria[name];\r\n      }\r\n\r\n      self._aria[name] = value;\r\n\r\n      if (self.state.get('rendered')) {\r\n        elm.setAttribute(name === 'role' ? name : 'aria-' + name, value);\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    attr: function (name,value) {\r\n        var velm = this._velm,\r\n            ret = velm.attr(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    css: function (name, value) {\r\n        var velm = this._velm,\r\n            ret = velm.css(name, value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    data: function (name, value) {\r\n        var velm = this._velm,\r\n            ret = velm.data(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    prop: function (name,value) {\r\n        var velm = this._velm,\r\n            ret = velm.prop(name,value);\r\n        return ret == velm ? this : ret;\r\n    },\r\n\r\n    throb: function(params) {\r\n      return fx.throb(this._elm,params);\r\n    },\r\n\r\n    emit : function(type,params) {\r\n      var e = langx.Emitter.createEvent(type,{\r\n        data : params\r\n      });\r\n      return langx.Emitter.prototype.emit.call(this,e,params);\r\n    },\r\n\r\n    /**\r\n     *  Attach the current widget element to dom document.\r\n     *\r\n     * @method attach\r\n     * @return {Widget} This Widget.\r\n     */\r\n    attach : function(target,position){\r\n        var elm = target;\r\n        if (!position || position==\"child\") {\r\n            noder.append(elm,this._elm);\r\n        } else  if (position == \"before\") {\r\n            noder.before(elm,this._elm);\r\n        } else if (position == \"after\") {\r\n            noder.after(elm,this._elm);\r\n        }\r\n        this._startup();\r\n    },\r\n\r\n    /**\r\n     *  Detach the current widget element from dom document.\r\n     *\r\n     * @method html\r\n     * @return {HtmlElement} HTML element representing the widget.\r\n     */\r\n    detach : function() {\r\n      this._velm.remove();\r\n    }\r\n  });\r\n\r\n  Widget.inherit = function(meta) {\r\n    var ctor = plugins.Plugin.inherit.apply(this,arguments);\r\n\r\n    function addStatePropMethod(name) {\r\n        ctor.prototype[name] = function(value) {\r\n          if (value !== undefined) {\r\n            this.state.set(name,value);\r\n            return this;\r\n          } else {\r\n            return this.state.get(name);\r\n          }\r\n        };\r\n    }\r\n    if (meta.state) {\r\n      for (var name in meta.state) {\r\n          addStatePropMethod(name);\r\n      }\r\n    }\r\n\r\n    if (meta.pluginName) {\r\n      plugins.register(ctor,meta.pluginName);\r\n    }\r\n    return ctor;\r\n  };\r\n\r\n  Widget.register = function(ctor,widgetName) {\r\n    var meta = ctor.prototype,\r\n        pluginName = widgetName || meta.pluginName;\r\n\r\n    function addStatePropMethod(name) {\r\n        ctor.prototype[name] = function(value) {\r\n          if (value !== undefined) {\r\n            this.state.set(name,value);\r\n            return this;\r\n          } else {\r\n            return this.state.get(name);\r\n          }\r\n        };\r\n    }\r\n    if (meta.state) {\r\n      for (var name in meta.state) {\r\n          addStatePropMethod(name);\r\n      }\r\n    }\r\n\r\n    if (pluginName) {\r\n      plugins.register(ctor,pluginName);\r\n    }\r\n    return ctor;\r\n  };\r\n\r\n  return base.Widget = Widget;\r\n});\r\n\ndefine('skylark-widgets-swt/Widget',[\r\n  \"skylark-widgets-base/Widget\"\r\n],function(Widget){\r\n  return Widget;\r\n});\r\n\ndefine('skylark-bootstrap3/bs3',[\n  \"skylark-langx/skylark\",\n  \"skylark-langx/langx\",\n  \"skylark-domx-browser\",\n  \"skylark-domx-eventer\",\n  \"skylark-domx-noder\",\n  \"skylark-domx-geom\",\n  \"skylark-domx-query\"\n],function(skylark,langx,browser,eventer,noder,geom,$){\n\tvar ui = skylark.ui = skylark.ui || {}, \n\t\tbs3 = ui.bs3 = {};\n\n/*---------------------------------------------------------------------------------*/\n\t/*\n\t * Fuel UX utilities.js\n\t * https://github.com/ExactTarget/fuelux\n\t *\n\t * Copyright (c) 2014 ExactTarget\n\t * Licensed under the BSD New license.\n\t */\n\tvar CONST = {\n\t\tBACKSPACE_KEYCODE: 8,\n\t\tCOMMA_KEYCODE: 188, // `,` & `<`\n\t\tDELETE_KEYCODE: 46,\n\t\tDOWN_ARROW_KEYCODE: 40,\n\t\tENTER_KEYCODE: 13,\n\t\tTAB_KEYCODE: 9,\n\t\tUP_ARROW_KEYCODE: 38\n\t};\n\n\tvar isShiftHeld = function isShiftHeld (e) { return e.shiftKey === true; };\n\n\tvar isKey = function isKey (keyCode) {\n\t\treturn function compareKeycodes (e) {\n\t\t\treturn e.keyCode === keyCode;\n\t\t};\n\t};\n\n\tvar isBackspaceKey = isKey(CONST.BACKSPACE_KEYCODE);\n\tvar isDeleteKey = isKey(CONST.DELETE_KEYCODE);\n\tvar isTabKey = isKey(CONST.TAB_KEYCODE);\n\tvar isUpArrow = isKey(CONST.UP_ARROW_KEYCODE);\n\tvar isDownArrow = isKey(CONST.DOWN_ARROW_KEYCODE);\n\n\tvar ENCODED_REGEX = /&[^\\s]*;/;\n\t/*\n\t * to prevent double encoding decodes content in loop until content is encoding free\n\t */\n\tvar cleanInput = function cleanInput (questionableMarkup) {\n\t\t// check for encoding and decode\n\t\twhile (ENCODED_REGEX.test(questionableMarkup)) {\n\t\t\tquestionableMarkup = $('<i>').html(questionableMarkup).text();\n\t\t}\n\n\t\t// string completely decoded now encode it\n\t\treturn $('<i>').text(questionableMarkup).html();\n\t};\n\n\n\n\n\tlangx.mixin(bs3, {\n\t\tCONST: CONST,\n\t\tcleanInput: cleanInput,\n\t\tisBackspaceKey: isBackspaceKey,\n\t\tisDeleteKey: isDeleteKey,\n\t\tisShiftHeld: isShiftHeld,\n\t\tisTabKey: isTabKey,\n\t\tisUpArrow: isUpArrow,\n\t\tisDownArrow: isDownArrow\n\t});\n\n\treturn bs3;\n});\n\ndefine('skylark-bootstrap3/transition',[\n  \"skylark-langx/langx\",\n  \"skylark-domx-browser\",\n  \"skylark-domx-eventer\",\n  \"skylark-domx-noder\",\n  \"skylark-domx-geom\",\n  \"skylark-domx-query\",\n  \"./bs3\"\n],function(langx,browser,eventer,noder,geom,$,bs3){\n\n/* ========================================================================\n * Bootstrap: transition.js v3.3.7\n * http://getbootstrap.com/javascript/#transitions\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n  'use strict';\n\n  eventer.special.bsTransitionEnd = eventer.special.transitionEnd;\n});\n\ndefine('skylark-bootstrap3/collapse',[\n    \"skylark-langx/langx\",\n    \"skylark-domx-browser\",\n    \"skylark-domx-eventer\",\n    \"skylark-domx-noder\",\n    \"skylark-domx-geom\",\n    \"skylark-domx-query\",\n    \"skylark-domx-plugins\",\n    \"./bs3\",\n    \"./transition\"\n], function(langx, browser, eventer, noder, geom, $, plugins, bs3) {\n\n\n/* ========================================================================\n * Bootstrap: collapse.js v3.3.7\n * http://getbootstrap.com/javascript/#collapse\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n/* jshint latedef: false */\n\n  'use strict';\n\n  // COLLAPSE PUBLIC CLASS DEFINITION\n  // ================================\n\n  var Collapse = bs3.Collapse = plugins.Plugin.inherit({\n    klassName: \"Collapse\",\n\n    pluginName : \"bs3.collapse\",\n\n    _construct : function(element,options) {\n      options = langx.mixin({}, Collapse.DEFAULTS, $(element).data(), options)\n      this.overrided(element,options);\n\n      this.$element      = $(element)\n      this.$trigger      = $('[data-toggle=\"collapse\"][href=\"#' + element.id + '\"],' +\n                             '[data-toggle=\"collapse\"][data-target=\"#' + element.id + '\"]')\n      this.transitioning = null\n\n      if (this.options.parent) {\n        this.$parent = this.getParent()\n      } else {\n        this.addAriaAndCollapsedClass(this.$element, this.$trigger)\n      }\n\n      if (this.options.toggle) {\n        this.toggle();\n      }\n    },\n\n    dimension : function () {\n      var hasWidth = this.$element.hasClass('width')\n      return hasWidth ? 'width' : 'height'\n    },\n\n    show : function () {\n      if (this.transitioning || this.$element.hasClass('in')) return\n\n      var activesData\n      var actives = this.$parent && this.$parent.children('.panel').children('.in, .collapsing')\n\n      if (actives && actives.length) {\n        activesData = actives.data('bs.collapse')\n        if (activesData && activesData.transitioning) return\n      }\n\n      var startEvent = eventer.create('show.bs.collapse')\n      this.$element.trigger(startEvent)\n      if (startEvent.isDefaultPrevented()) return\n\n      if (actives && actives.length) {\n        //Plugin.call(actives, 'hide')\n        actives.collapse(\"hide\");\n        activesData || actives.data('bs.collapse', null)\n      }\n\n      var dimension = this.dimension()\n\n      this.$element\n        .removeClass('collapse')\n        .addClass('collapsing')[dimension](0)\n        .attr('aria-expanded', true)\n\n      this.$trigger\n        .removeClass('collapsed')\n        .attr('aria-expanded', true)\n\n      this.transitioning = 1\n\n      var complete = function () {\n        this.$element\n          .removeClass('collapsing')\n          .addClass('collapse in')[dimension]('')\n        this.transitioning = 0\n        this.$element\n          .trigger('shown.bs.collapse')\n      }\n\n      if (!browser.support.transition) return complete.call(this)\n\n      var scrollSize = langx.camelCase(['scroll', dimension].join('-'))\n\n      this.$element\n        .one('transitionEnd', langx.proxy(complete, this))\n        .emulateTransitionEnd(Collapse.TRANSITION_DURATION)[dimension](this.$element[0][scrollSize])\n    },\n\n    hide : function () {\n      if (this.transitioning || !this.$element.hasClass('in')) return\n\n      var startEvent = eventer.create('hide.bs.collapse')\n      this.$element.trigger(startEvent)\n      if (startEvent.isDefaultPrevented()) return\n\n      var dimension = this.dimension()\n\n      this.$element[dimension](this.$element[dimension]())[0].offsetHeight\n\n      this.$element\n        .addClass('collapsing')\n        .removeClass('collapse in')\n        .attr('aria-expanded', false)\n\n      this.$trigger\n        .addClass('collapsed')\n        .attr('aria-expanded', false)\n\n      this.transitioning = 1\n\n      var complete = function () {\n        this.transitioning = 0\n        this.$element\n          .removeClass('collapsing')\n          .addClass('collapse')\n          .trigger('hidden.bs.collapse')\n      }\n\n      if (!browser.support.transition) return complete.call(this)\n\n      this.$element\n        [dimension](0)\n        .one('transitionEnd', langx.proxy(complete, this))\n        .emulateTransitionEnd(Collapse.TRANSITION_DURATION)\n    },\n\n    toggle : function () {\n      this[this.$element.hasClass('in') ? 'hide' : 'show']()\n    },\n\n    getParent : function () {\n      return $(this.options.parent)\n        .find('[data-toggle=\"collapse\"][data-parent=\"' + this.options.parent + '\"]')\n        .each(langx.proxy(function (i, element) {\n          var $element = $(element)\n          this.addAriaAndCollapsedClass(getTargetFromTrigger($element), $element)\n        }, this))\n        .end()\n    },\n\n    addAriaAndCollapsedClass : function ($element, $trigger) {\n      var isOpen = $element.hasClass('in')\n\n      $element.attr('aria-expanded', isOpen)\n      $trigger\n        .toggleClass('collapsed', !isOpen)\n        .attr('aria-expanded', isOpen)\n    }\n\n  });\n\n  Collapse.VERSION  = '3.3.7'\n\n  Collapse.TRANSITION_DURATION = 350\n\n  Collapse.DEFAULTS = {\n    toggle: true\n  }\n\n\n  function getTargetFromTrigger($trigger) {\n    var href\n    var target = $trigger.attr('data-target')\n      || (href = $trigger.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '') // strip for ie7\n\n    return $(target)\n  }\n\n\n  // COLLAPSE PLUGIN DEFINITION\n  // ==========================\n\n  /*\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.collapse')\n      var options = langx.mixin({}, Collapse.DEFAULTS, $this.data(), typeof option == 'object' && option)\n\n      if (!data && options.toggle && /show|hide/.test(option)) options.toggle = false\n      if (!data) $this.data('bs.collapse', (data = new Collapse(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.collapse\n\n  $.fn.collapse             = Plugin;\n  $.fn.collapse.Constructor = Collapse;\n\n  // COLLAPSE NO CONFLICT\n  // ====================\n\n  $.fn.collapse.noConflict = function () {\n    $.fn.collapse = old\n    return this\n  }\n  */\n\n  plugins.register(Collapse,\"collapse\");\n\n  return Collapse;\n\n});\n\ndefine('skylark-widgets-swt/Panel',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-bootstrap3/collapse\",\r\n  \"./swt\",\r\n  \"./Widget\"\r\n],function(langx,browser,eventer,noder,geom,$,collapse,swt,Widget){\r\n\r\n  var Panel = Widget.inherit({\r\n    klassName : \"Panel\",\r\n\r\n    pluginName : \"lark.panel\",\r\n\r\n    options : {\r\n      toggler : {\r\n        selector : \".panel-heading [data-toggle=\\\"collapse\\\"]\"\r\n      },\r\n\r\n      body : {\r\n        selector : \".panel-collapse\"\r\n      }\r\n    },\r\n\r\n    _init : function() {\r\n      var self = this;\r\n      this.$toggle = this._velm.find(this.options.toggler.selector);\r\n      this.$body = this._velm.find(this.options.body.selector);\r\n      this.$toggle.on('click.lark',function (e) {\r\n        var $this   = $(this);\r\n        var collpasePlugin    = self.$body.collapse('instance');\r\n        if (collpasePlugin) {\r\n          collpasePlugin.toggle();\r\n        } else {\r\n          self.$body.collapse($this.data());\r\n        }\r\n      });\r\n\r\n    },\r\n\r\n    expand : function() {\r\n      // expand this panel\r\n      this.$body.collapse(\"show\");\r\n    },\r\n\r\n    collapse : function() {\r\n      // collapse this panel\r\n      this.$body.collapse(\"hide\");\r\n    },\r\n\r\n    toogle : function() {\r\n      // toogle this panel\r\n     this.body.collapse(\"toogle\");\r\n    },\r\n\r\n    full : function() {\r\n\r\n    },\r\n\r\n    unfull : function() {\r\n\r\n    },\r\n\r\n    toogleFull : function() {\r\n\r\n    },\r\n    \r\n    close: function () {\r\n      var panel_dom = this.dom(id);\r\n      this.minimize(id, true).promise().then(function () {\r\n        panel_dom.fadeOut();\r\n      });\r\n    }\r\n\r\n\r\n  });\r\n\r\n\r\n  return Panel;\r\n\r\n});\ndefine('skylark-widgets-swt/Accordion',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-bootstrap3/collapse\",\r\n  \"./swt\",\r\n  \"./Widget\",\r\n  \"./Panel\"\r\n],function(langx,browser,eventer,noder,geom,$,collapse,swt,Widget, Panel){\r\n\r\n  var Accordion = Widget.inherit({\r\n    klassName : \"Accordion\",\r\n\r\n    pluginName : \"lark.accordion\",\r\n\r\n    options : {\r\n      panel: {\r\n        selector : \"> .panel\",\r\n        template : null,\r\n      }\r\n    },\r\n\r\n    _init : function() {\r\n      var panels = [];\r\n      this._velm.$(this.options.panel.selector).forEach(function(panelEl){\r\n        var panel = new Accordion.Panel(panelEl,{\r\n\r\n        });\r\n        panels.push(panel);\r\n      });\r\n      this._panels = panels;\r\n    },\r\n\r\n    _post : function() {\r\n      // handle internal events\r\n    },\r\n\r\n    _refresh : function(updates) {\r\n    },\r\n\r\n    panels : {\r\n      get : function() {\r\n\r\n      }\r\n    },\r\n\r\n\r\n    addPanel : function() {\r\n\r\n    },\r\n\r\n    /**\r\n     * Removes a accordion pane.\r\n     *\r\n     * @method remove\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    remove : function() {\r\n\r\n    },\r\n\r\n    /**\r\n     * Expands a accordion pane.\r\n     *\r\n     * @method remove\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    expand : function() {\r\n      // expand a panel\r\n\r\n    },\r\n\r\n    /**\r\n     * Expands all accordion panes.\r\n     *\r\n     * @method expandAll\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    expandAll : function() {\r\n      // expand a panel\r\n\r\n    },\r\n\r\n    /**\r\n     * Collapse a accordion pane.\r\n     *\r\n     * @method collapse\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    collapse : function() {\r\n\r\n    },\r\n\r\n    /**\r\n     * Collapses all accordion pane.\r\n     *\r\n     * @method collapseAll\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    collapseAll : function() {\r\n\r\n    }\r\n  });\r\n\r\n  Accordion.Panel = Panel.inherit({\r\n    klassName : \"AccordionPanel\",\r\n\r\n    _init : function() {\r\n      //this._velm.collapse();\r\n      this.overrided();\r\n    },\r\n\r\n    expand : function() {\r\n      // expand this panel\r\n      $(this._elm).collapse(\"show\");\r\n    },\r\n\r\n    collapse : function() {\r\n      // collapse this panel\r\n      $(this._elm).collapse(\"hide\");\r\n    },\r\n\r\n    toogle : function() {\r\n      // toogle this panel\r\n     $(this._elm).collapse(\"toogle\");\r\n    },\r\n\r\n    remove : function() {\r\n      this.overided();\r\n    }\r\n  });\r\n\r\n  return swt.Accordion = Accordion;\r\n});\r\n\ndefine('skylark-widgets-swt/Button',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"./swt\",\r\n  \"./Widget\"\r\n],function(langx,$,swt,Widget){\r\n\r\n\tclass Button extends Widget {\r\n\t\tget klassName() {\r\n      return \"Button\";\r\n    } \r\n\r\n    get pluginName(){\r\n      return \"lark.button\";\r\n    } \r\n\r\n\t\tget options () {\r\n      return {\r\n        btnSize : \"lg\",\r\n        btnType : \"default\",\r\n        leftIcon : null,\r\n        rightIcon : null,\r\n        topIcon : null, // TODO\r\n        bottomIcon : null //TODO        \r\n      }\r\n\t\t}\r\n\r\n    get state() {\r\n      return {\r\n        \"text\" : String\r\n      }\r\n    }\r\n\r\n    _parse (elm,options) {\r\n      var $el = $(elm),\r\n          options = langx.mixin({},options);\r\n\r\n      if (!options.btnType) {\r\n        if ($el.hasClass(\"btn-link\")) {\r\n          options.btnType = \"link\";\r\n        } else if ($el.hasClass(\"btn-default\")) {\r\n          options.btnType = \"default\";\r\n        } else if ($el.hasClass(\"btn-primary\")) {\r\n          options.btnType = \"primary\";\r\n        } else if ($el.hasClass(\"btn-info\")) {\r\n          options.btnType = \"info\";\r\n        } else if ($el.hasClass(\"btn-success\")) {\r\n          options.btnType = \"success\";\r\n        } else if ($el.hasClass(\"btn-warning\")) {\r\n          options.btnType = \"warning\";\r\n        } else if ($el.hasClass(\"btn-danger\")) {\r\n          options.btnType = \"danger\";\r\n        }        \r\n      }\r\n\r\n      if (!options.btnSize) {\r\n        if ($el.hasClass(\"btn-xs\")) {\r\n          options.btnSize = \"xs\";\r\n        } else if ($el.hasClass(\"btn-sm\")) {\r\n          options.btnSize = \"sm\";\r\n        } else if ($el.hasClass(\"btn-lg\")) {\r\n          options.btnSize = \"lg\";\r\n        }        \r\n      }\r\n\r\n      if (!options.href) {\r\n        options.href = $el.attr('href');\r\n\r\n        options.target = $el.attr('target');\r\n      }\r\n\r\n      if (!options.text) {\r\n        options.text = $el.find('.text').text();\r\n      }\r\n\r\n      if (!options.leftIcon) {\r\n        var $fa_icon_left = $el.find('.fa-icon-left');\r\n        if ($fa_icon_left.length > 0) {\r\n          $fa_icon_left.removeClass('fa-icon-left').removeClass('fa');\r\n          options.leftIcon = $fa_icon_left.attr('class');\r\n          $fa_icon_left.addClass('fa-icon-left').addClass('fa');\r\n        }\r\n      }\r\n\r\n      if (!options.rightIcon) {\r\n        var $fa_icon_right = $el.find('.fa-icon-right');\r\n\r\n        if ($fa_icon_right.length > 0) {\r\n          $fa_icon_right.removeClass('fa-icon-right').removeClass('fa');\r\n          options.rightIcon = $fa_icon_right.attr('class');\r\n          $fa_icon_right.addClass('fa-icon-right').addClass('fa');\r\n        }        \r\n      }\r\n    }\r\n\r\n    _refresh (updates) {\r\n      //this.overrided(updates);\r\n      super._refresh(updates);\r\n\r\n      var velm = this._velm;\r\n\r\n      if (updates.btnType) {\r\n          velm.removeClass('btn-link btn-default btn-primary btn-info btn-success btn-warning btn-danger').addClass(\"btn-\" + updates.btnType.value);\r\n      }\r\n\r\n      if (updates.btnSize) {\r\n        velm.removeClass('btn-xs btn-sm btn-lg').addClass(\"btn-\" + updates.btnSize.value);\r\n      }\r\n\r\n      if (updates.text) {\r\n        velm.$('.text').text(updates.text.value);\r\n      }\r\n\r\n      if (updates.left) {\r\n          velm.$('.fa-icon-left').remove();\r\n          velm.prepend('<i style=\"word-spacing: -1em;\" class=\"fa fa-icon-left fa-' + updates.iconleft.value + '\">&nbsp;</i>\\n');\r\n      }\r\n\r\n      if (updates.iconright) {\r\n          velm.$('.fa-icon-right').remove();\r\n          if (updates.iconright.value) {\r\n              velm.append('<i style=\"word-spacing: -1em;\" class=\"fa fa-icon-right fa-' + updates.iconright.value + '\">&nbsp;</i>\\n');\r\n          }\r\n      }\r\n    }\r\n  };\r\n\r\n  Widget.register(Button);\r\n//  class Buttonx extends Button {\r\n//\r\n//  }\r\n\r\n//  Widget.register(Buttonx,\"lark.button\");\r\n  return swt.Button = Button;\r\n\r\n});\r\n\r\n\r\n\r\n\ndefine('skylark-bootstrap3/carousel',[\n    \"skylark-langx/langx\",\n    \"skylark-domx-browser\",\n    \"skylark-domx-eventer\",\n    \"skylark-domx-noder\",\n    \"skylark-domx-geom\",\n    \"skylark-domx-query\",\n    \"skylark-domx-plugins\",\n    \"./bs3\",\n    \"./transition\"\n], function(langx, browser, eventer, noder, geom, $, plugins, bs3) {\n\n    /* ========================================================================\n     * Bootstrap: carousel.js v3.3.7\n     * http://getbootstrap.com/javascript/#carousel\n     * ========================================================================\n     * Copyright 2011-2016 Twitter, Inc.\n     * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n     * ======================================================================== */\n\n    'use strict';\n\n    // CAROUSEL CLASS DEFINITION\n    // =========================\n\n    var Carousel = bs3.Carousel = plugins.Plugin.inherit({\n        klassName: \"Carousel\",\n\n        pluginName: \"bs3.carousel\",\n\n        options : {\n            interval: 5000,\n            pause: 'hover',\n            wrap: true,\n            keyboard: true,\n\n            selectors :{\n                controls : {\n                 // The class for the \"toggle\" control:\n                  toggle: '.toggle',\n                  // The class for the \"prev\" control:\n                  prev: '.prev',\n                  // The class for the \"next\" control:\n                  next: '.next',\n                  // The class for the \"close\" control:\n                  close: '.close',\n                  // The class for the \"play-pause\" toggle control:\n                  playPause: '.play-pause'\n                },\n                indicators : {\n                    container : \".carousel-indicators\"  \n                },\n                slides : {\n                    container : \"\",\n                    item : \".item\" \n                }\n            }\n\n\n        },\n\n        _construct: function(element, options) {\n            options = langx.mixin({}, $(element).data(), options);\n            //this.options = options\n            this.overrided(element,options);\n\n            this.$element = $(element)\n            this.$indicators = this.$element.find(this.options.selectors.indicators.container); //'.carousel-indicators'\n            this.paused = null\n            this.sliding = null\n            this.interval = null\n            this.$active = null\n            this.$items = null\n\n            var self = this;\n            if (!this.options.embeded) {\n                this.options.keyboard && this.$element.on('keydown.bs.carousel', langx.proxy(this.keydown, this))\n\n                this.options.pause == 'hover' && !('ontouchstart' in document.documentElement) && this.$element\n                    .on('mouseenter.bs3.carousel', langx.proxy(this.pause, this))\n                    .on('mouseleave.bs3.carousel', langx.proxy(this.cycle, this));\n\n                this.$element.on(\"click.bs3.carousel.data-api\", \"[data-slide],[data-slide-to]\", function(e) {\n                    var $this = $(this),\n                        slide = $this.attr('data-slide'),\n                        slideIndex = $this.attr('data-slide-to');\n\n                    if (slide == \"prev\") {\n                        self.prev();\n                    } else if (slide == \"next\") {\n                        self.next();\n                    } else  if (slideIndex) {\n                        self.to(slideIndex);\n                    }\n                    e.preventDefault();\n                });\n            }\n        },\n\n        keydown : function(e) {\n            if (/input|textarea/i.test(e.target.tagName)) return\n            switch (e.which) {\n                case 37:\n                    this.prev();\n                    break\n                case 39:\n                    this.next();\n                    break\n                default:\n                    return\n            }\n\n            e.preventDefault()\n        },\n\n        cycle : function(e) {\n            e || (this.paused = false)\n\n            this.interval && clearInterval(this.interval)\n\n            this.options.interval &&\n                !this.paused &&\n                (this.interval = setInterval(langx.proxy(this.next, this), this.options.interval))\n\n            return this\n        },\n\n        getItemIndex : function(item) {\n            this.$items = item.parent().children(this.options.selectors.slides.item);//'.item' \n            return this.$items.index(item || this.$active)\n        },\n\n        getItemForDirection : function(direction, active) {\n            var activeIndex = this.getItemIndex(active)\n            var willWrap = (direction == 'prev' && activeIndex === 0) ||\n                (direction == 'next' && activeIndex == (this.$items.length - 1))\n            if (willWrap && !this.options.wrap) return active\n            var delta = direction == 'prev' ? -1 : 1\n            var itemIndex = (activeIndex + delta) % this.$items.length\n            return this.$items.eq(itemIndex)\n        },\n\n        to : function(pos) {\n            var that = this\n            var activeIndex = this.getItemIndex(this.$active = this.$element.find(this.options.selectors.slides.item+\".active\"));//'.item.active'\n\n            if (pos > (this.$items.length - 1) || pos < 0) return\n\n            if (this.sliding) return this.$element.one('slid.bs.carousel', function() { that.to(pos) }) // yes, \"slid\"\n            if (activeIndex == pos) return this.pause().cycle()\n\n            return this.slide(pos > activeIndex ? 'next' : 'prev', this.$items.eq(pos))\n        },\n\n        pause : function(e) {\n            e || (this.paused = true)\n\n            if (this.$element.find(this.options.selectors.controls.next + \",\"+ this.options.selectors.controls.prev).length && browser.support.transition) { //.next,.prev\n                this.$element.trigger(browser.support.transition.end)\n                this.cycle(true)\n            }\n\n            this.interval = clearInterval(this.interval)\n\n            return this\n        },\n\n        next : function() {\n            if (this.sliding) return\n            return this.slide('next')\n        },\n\n        prev : function() {\n            if (this.sliding) return\n            return this.slide('prev')\n        },\n\n        slide : function(type, next) {\n            var $active = this.$element.find(this.options.selectors.slides.item+\".active\");//'.item.active'\n            var $next = next || this.getItemForDirection(type, $active)\n            var isCycling = this.interval\n            var direction = type == 'next' ? 'left' : 'right'\n            var that = this\n\n            if ($next.hasClass('active')) return (this.sliding = false)\n\n            var relatedTarget = $next[0]\n            var slideEvent = eventer.create('slide.bs.carousel', {\n                relatedTarget: relatedTarget,\n                direction: direction\n            })\n            this.$element.trigger(slideEvent)\n            if (slideEvent.isDefaultPrevented()) return\n\n            this.sliding = true\n\n            isCycling && this.pause()\n\n            if (this.$indicators.length) {\n                this.$indicators.find('.active').removeClass('active')\n                var $nextIndicator = $(this.$indicators.children()[this.getItemIndex($next)])\n                $nextIndicator && $nextIndicator.addClass('active')\n            }\n\n            var slidEvent = eventer.create('slid.bs.carousel', { relatedTarget: relatedTarget, direction: direction }) // yes, \"slid\"\n            if (browser.support.transition && this.$element.hasClass('slide')) {\n                $next.addClass(type)\n                $next[0].offsetWidth // force reflow\n                $active.addClass(direction)\n                $next.addClass(direction)\n                $active\n                    .one('transitionEnd', function() {\n                        $next.removeClass([type, direction].join(' ')).addClass('active')\n                        $active.removeClass(['active', direction].join(' '))\n                        that.sliding = false\n                        setTimeout(function() {\n                            that.$element.trigger(slidEvent)\n                        }, 0)\n                    })\n                    .emulateTransitionEnd()\n            } else {\n                $active.removeClass('active')\n                $next.addClass('active')\n                this.sliding = false\n                this.$element.trigger(slidEvent)\n            }\n\n            isCycling && this.cycle()\n\n            return this\n        },\n\n    });\n\n    // var Carousel = function (element, options) {\n    // }\n\n    Carousel.VERSION = '3.3.7'\n\n    Carousel.TRANSITION_DURATION = 600\n\n\n\n\n    // CAROUSEL PLUGIN DEFINITION\n    // ==========================\n    /*\n    function Plugin(option) {\n        return this.each(function() {\n            var $this = $(this)\n            var wgt = $this.data('bs.carousel')\n            var options = langx.mixin({}, Carousel.DEFAULTS, $this.data(), typeof option == 'object' && option)\n            var action = typeof option == 'string' ? option : options.slide\n\n            if (!wgt) {\n                $this.data('bs.carousel', (wgt = new Carousel(this, options)));\n            }\n            if (typeof option == 'number') {\n                wgt.to(option);\n            } else if (action) {\n                wgt[action]()\n            } else if (options.interval) {\n                wgt.pause().cycle();\n            }\n        })\n    }\n    */\n    plugins.register(Carousel,\"carousel\",function(options){\n        //this -> plugin instance\n        var action = typeof options == 'string' ? options : options.slide\n        if (typeof options == 'number') {\n            this.to(options);\n        } else if (action) {\n            this[action]()\n        } else if (options.interval) {\n            this.pause().cycle();\n        }        \n    });\n\n    return Carousel;\n\n});\ndefine('skylark-widgets-swt/Carousel',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-query\",\r\n    \"./swt\",\r\n    \"./Widget\",\r\n    \"skylark-bootstrap3/carousel\"\r\n], function(langx, browser, eventer, noder, geom,  $, swt, Widget) {\r\n\r\n    var Carousel =  Widget.inherit({\r\n        klassName : \"Carousel\",\r\n        pluginName : \"lark.carousel\",\r\n\r\n        options : {\r\n\r\n            items : [],\r\n\r\n            indicatorTemplate : \"\",\r\n            slideTemplate : \"\",\r\n\r\n            templates : {\r\n              container : \"<div class=\\\"carousel slide\\\" data-ride=\\\"carousel\\\">\" +\r\n                          \"/div\",\r\n              indicators : {\r\n                  container : \"<ol class=\\\"carousel-indicators\\\">\" +\r\n                              \"</ol>\",\r\n                  item :  \"<li></li>\"\r\n              },\r\n\r\n              slides : {\r\n                  container : \"<div class=\\\"carousel-inner\\\">\" +\r\n                              \"/div\",\r\n                  item :  \"<div class=\\\"item carousel-item\\\">\" +\r\n                            \"<img alt=\\\"First slide\\\"  src=\\\"{{url}}\\\">\" +\r\n                          \"</div>\"\r\n              }\r\n            }\r\n        },\r\n\r\n        _init : function() {\r\n          this._bs_carousel = this._velm.carousel(this.options);\r\n          var self = this;          \r\n          this._velm.on(\"click.lark\", \"[data-slide],[data-slide-to]\", function(e) {\r\n            var $this = $(this)\r\n            var slideIndex = $this.attr('data-slide-to');\r\n            if (slideIndex) {\r\n                self.to(slideIndex);\r\n            } else {\r\n              var slideAction = $this.attr('data-slide');\r\n              if (slideAction == \"prev\") {\r\n                self.prev();\r\n              } else {\r\n                self.next();\r\n              }\r\n            }\r\n\r\n            e.preventDefault();\r\n\r\n        });\r\n        },\r\n\r\n        to : function(pos) {\r\n          return this._bs_carousel.to(pos);\r\n        },\r\n\r\n        pause : function(e) {\r\n          this._bs_carousel.pause(e);\r\n          return this;\r\n        },\r\n\r\n        cycle : function(e) {\r\n          return this._bs_carousel.cycle(e);\r\n        },\r\n\r\n        next : function() {\r\n          return this._bs_carousel.next();\r\n        },\r\n\r\n        prev : function() {\r\n          return this._bs_carousel.prev();\r\n        },\r\n\r\n        add : function() {\r\n            \r\n        },\r\n\r\n        createIndicator: function (obj) {\r\n          var gallery = this.gallery,\r\n            indicator = this.indicatorPrototype.cloneNode(false)\r\n          var title = gallery.getItemTitle(obj)\r\n          var thumbnailProperty = this.options.thumbnailProperty\r\n          var thumbnailUrl\r\n          var thumbnail\r\n          if (this.options.thumbnailIndicators) {\r\n            if (thumbnailProperty) {\r\n              thumbnailUrl = Gallery.getItemProperty(obj, thumbnailProperty)\r\n            }\r\n            if (thumbnailUrl === undefined) {\r\n              thumbnail = obj.getElementsByTagName && $(obj).find('img')[0]\r\n              if (thumbnail) {\r\n                thumbnailUrl = thumbnail.src\r\n              }\r\n            }\r\n            if (thumbnailUrl) {\r\n              indicator.style.backgroundImage = 'url(\"' + thumbnailUrl + '\")'\r\n            }\r\n          }\r\n          if (title) {\r\n            indicator.title = title;\r\n          }\r\n          return indicator;\r\n      },\r\n\r\n      addIndicator: function (index) {\r\n        if (this.indicatorContainer.length) {\r\n          var indicator = this.createIndicator(this.list[index])\r\n          indicator.setAttribute('data-slide-to', index)\r\n          this.indicatorContainer[0].appendChild(indicator)\r\n          this.indicators.push(indicator)\r\n        }\r\n      },\r\n\r\n      setActiveIndicator: function (index) {\r\n        if (this.indicators) {\r\n          if (this.activeIndicator) {\r\n            this.activeIndicator.removeClass(this.options.activeIndicatorClass)\r\n          }\r\n          this.activeIndicator = $(this.indicators[index])\r\n          this.activeIndicator.addClass(this.options.activeIndicatorClass)\r\n        }\r\n      },\r\n\r\n      initSlides: function (reload) {\r\n        if (!reload) {\r\n          this.indicatorContainer = this.container.find(\r\n            this.options.indicatorContainer\r\n          )\r\n          if (this.indicatorContainer.length) {\r\n            this.indicatorPrototype = document.createElement('li')\r\n            this.indicators = this.indicatorContainer[0].children\r\n          }\r\n        }\r\n        this.overrided(reload);\r\n      },\r\n\r\n      addSlide: function (index) {\r\n        this.overrided(index);\r\n        this.addIndicator(index)\r\n      },\r\n\r\n      resetSlides: function () {\r\n        this.overrided();\r\n        this.indicatorContainer.empty();\r\n        this.indicators = [];\r\n      },\r\n\r\n    });\r\n\r\n    return swt.Carousel = Carousel;\r\n\r\n});\ndefine('skylark-widgets-swt/_Toggler',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"./swt\",\r\n  \"./Widget\"\r\n],function(langx,browser,eventer,noder,geom,$,swt,Widget){\r\n\r\n  var _Toggler = swt._Toggler = Widget.inherit({\r\n    klassName: \"_Toggler\",\r\n\r\n    toggle: function () {\r\n      var checked = this.isChecked();\r\n\r\n      if (checked) {\r\n        this.uncheck();\r\n      } else {\r\n        this.check();\r\n      }\r\n    },\r\n\r\n    check: function  () {\r\n      this.state.set('checked',true);\r\n      return this;\r\n    },\r\n\r\n    uncheck: function () {\r\n      this.state.set('checked',false);\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Getter function for the checked state.\r\n     *\r\n     * @method isChecked\r\n     * @return {Boolean} True/false \r\n     */\r\n    isChecked: function () {\r\n      return this.state.get('checked');\r\n    }\r\n  });\r\n\r\n\treturn _Toggler;\r\n});\r\n\ndefine('skylark-widgets-swt/CheckBox',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"./swt\",\r\n  \"./_Toggler\"\r\n],function(langx,browser,eventer,noder,geom,$,swt,_Toggler){\r\n\r\n  var CheckBox =  _Toggler.inherit({\r\n    klassName: \"CheckBox\",\r\n\r\n    pluginName : \"lark.checkbox\",\r\n\r\n    options : {\r\n      selectors : {\r\n        chk : \"input[type=checkbox]\",\r\n        lbl : \"checkbox-label\"\r\n      },\r\n      template : undefined,\r\n      checked : undefined,\r\n      label : undefined,\r\n      value : undefined\r\n    },\r\n\r\n    /*\r\n     *@override\r\n     */\r\n    _parse : function(elm,options) {\r\n      options = this.overrided(elm,options);\r\n      var $el = $(elm),\r\n          chkSelector = options.selectors && options.selectors.chk,\r\n          lblSelector = options.selectors && options.selectors.lbl;\r\n\r\n      if (!chkSelector) {\r\n        chkSelector = this.options.selectors.chk;\r\n      }\r\n      if (!lblSelector) {\r\n        lblSelector = this.options.selectors.lbl;\r\n      }\r\n\r\n      var $chk = $el.find(chkSelector),\r\n          $lbl = $el.find(lblSelector);\r\n\r\n      if (options.checked == undefined) {\r\n        options.checked = $chk.prop('checked')\r\n      } else {\r\n        $chk.prop('checked',options.checked);\r\n      }\r\n\r\n      if (options.disabled == undefined) {\r\n        options.disabled = $chk.prop('disabled')\r\n      } else {\r\n        $chk.prop('disabled',options.disabled);\r\n      }\r\n\r\n      return options;\r\n    },\r\n\r\n    /*\r\n     *@override\r\n     */\r\n    _create : function() {\r\n      //TODO\r\n    },\r\n\r\n    /*\r\n     *@override\r\n     */\r\n    _init : function() {\r\n      var elm = this._elm;\r\n\r\n      // cache elements\r\n      this.$lbl = this._velm.$(this.options.selectors.lbl);\r\n      this.$chk = this._velm.$(this.options.selectors.chk);\r\n    },\r\n\r\n\r\n    /*\r\n     *@override\r\n     */\r\n    _startup : function() {\r\n      // handle internal events\r\n      var self = this;\r\n      this.$chk.on('change', function(evt) {\r\n        //var $chk = $(evt.target);\r\n        var checked = self.$chk.prop('checked');\r\n        self.state.set(\"checked\",checked);\r\n      });\r\n    },\r\n\r\n    /*\r\n     *@override\r\n     */\r\n    _refresh : function(updates) {\r\n\r\n        function setCheckedState (checked) {\r\n          var $chk = self.$chk;\r\n          var $lbl = self.$label;\r\n          var $containerToggle = self.$toggleContainer;\r\n\r\n          if (checked) {\r\n            $chk.prop('checked', true);\r\n            $lbl.addClass('checked');\r\n            $containerToggle.removeClass('hide hidden');\r\n          } else {\r\n            $chk.prop('checked', false);\r\n            $lbl.removeClass('checked');\r\n            $containerToggle.addClass('hidden');\r\n          }\r\n        }\r\n\r\n        function setDisabledState (disabled) {\r\n          var $chk = self.$chk;\r\n          var $lbl = self.$label;\r\n\r\n          if (disabled) {\r\n            $chk.prop('disabled', true);\r\n            $lbl.addClass('disabled');\r\n          } else {\r\n            $chk.prop('disabled', false);\r\n            $lbl.removeClass('disabled');\r\n          }\r\n        }\r\n\r\n        // update visual with attribute values from control\r\n        this.overrided(changed);\r\n        var self  = this;\r\n\r\n        if (updates[\"checked\"]) {\r\n          setCheckedState(updates[\"checked\"].value);\r\n        }\r\n        if (updates[\"disabled\"]) {\r\n          setDisabledState(updates[\"disabled\"].value);\r\n        }\r\n    }\r\n  });\r\n\r\n\treturn swt.CheckBox = CheckBox;\r\n});\r\n\ndefine('skylark-bootstrap3/dropdown',[\n  \"skylark-langx/langx\",\n  \"skylark-domx-browser\",\n  \"skylark-domx-eventer\",\n  \"skylark-domx-noder\",\n  \"skylark-domx-geom\",\n  \"skylark-domx-query\",\n  \"skylark-domx-plugins\",\n  \"./bs3\"\n],function(langx,browser,eventer,noder,geom,$,plugins,bs3){\n\n/* ========================================================================\n * Bootstrap: dropdown.js v3.3.7\n * http://getbootstrap.com/javascript/#dropdowns\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n  'use strict';\n\n  // DROPDOWN CLASS DEFINITION\n  // =========================\n\n  var backdrop = '.dropdown-backdrop';\n  var toggle   = '[data-toggle=\"dropdown\"]';\n\n  var Dropdown = bs3.Dropdown = plugins.Plugin.inherit({\n    klassName: \"Dropdown\",\n\n    pluginName : \"bs3.dropdown\",\n\n    _construct : function(element,options) {\n      var $el = this.$element = $(element);\n      $el.on('click.bs.dropdown', this.toggle);\n      $el.on('keydown.bs.dropdown', '[data-toggle=\"dropdown\"],.dropdown-menu',this.keydown);\n    },\n\n    toggle : function (e) {\n      var $this = $(this)\n\n      if ($this.is('.disabled, :disabled')) return\n\n      var $parent  = getParent($this)\n      var isActive = $parent.hasClass('open')\n\n      clearMenus()\n\n      if (!isActive) {\n        if ('ontouchstart' in document.documentElement && !$parent.closest('.navbar-nav').length) {\n          // if mobile we use a backdrop because click events don't delegate\n          $(document.createElement('div'))\n            .addClass('dropdown-backdrop')\n            .insertAfter($(this))\n            .on('click', clearMenus)\n        }\n\n        var relatedTarget = { relatedTarget: this }\n        $parent.trigger(e = eventer.create('show.bs.dropdown', relatedTarget))\n\n        if (e.isDefaultPrevented()) return\n\n        $this\n          .trigger('focus')\n          .attr('aria-expanded', 'true')\n\n        $parent\n          .toggleClass('open')\n          .trigger(eventer.create('shown.bs.dropdown', relatedTarget))\n      }\n\n      return false\n    },\n\n    keydown : function (e) {\n      if (!/(38|40|27|32)/.test(e.which) || /input|textarea/i.test(e.target.tagName)) return\n\n      var $this = $(this)\n\n      e.preventDefault()\n      e.stopPropagation()\n\n      if ($this.is('.disabled, :disabled')) return\n\n      var $parent  = getParent($this)\n      var isActive = $parent.hasClass('open')\n\n      if (!isActive && e.which != 27 || isActive && e.which == 27) {\n        if (e.which == 27) $parent.find(toggle).trigger('focus')\n        return $this.trigger('click')\n      }\n\n      var desc = ' li:not(.disabled):visible a'\n      var $items = $parent.find('.dropdown-menu' + desc)\n\n      if (!$items.length) return\n\n      var index = $items.index(e.target)\n\n      if (e.which == 38 && index > 0)                 index--         // up\n      if (e.which == 40 && index < $items.length - 1) index++         // down\n      if (!~index)                                    index = 0\n\n      $items.eq(index).trigger('focus')\n    }\n\n  });\n\n  Dropdown.VERSION = '3.3.7'\n\n  function getParent($this) {\n    var selector = $this.attr('data-target')\n\n    if (!selector) {\n      selector = $this.attr('href')\n      selector = selector && /#[A-Za-z]/.test(selector) && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n    }\n\n    var $parent = selector && $(selector)\n\n    return $parent && $parent.length ? $parent : $this.parent()\n  }\n\n  function clearMenus(e) {\n    if (e && e.which === 3) return\n    $(backdrop).remove()\n    $(toggle).each(function () {\n      var $this         = $(this)\n      var $parent       = getParent($this)\n      var relatedTarget = { relatedTarget: this }\n\n      if (!$parent.hasClass('open')) return\n\n      if (e && e.type == 'click' && /input|textarea/i.test(e.target.tagName) && noder.contains($parent[0], e.target)) return\n\n      $parent.trigger(e = eventer.create('hide.bs.dropdown', relatedTarget))\n\n      if (e.isDefaultPrevented()) return\n\n      $this.attr('aria-expanded', 'false')\n      $parent.removeClass('open').trigger(eventer.create('hidden.bs.dropdown', relatedTarget))\n    })\n  }\n\n\n  /*\n  // DROPDOWN PLUGIN DEFINITION\n  // ==========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this)\n      var data  = $this.data('bs.dropdown')\n\n      if (!data) $this.data('bs.dropdown', (data = new Dropdown(this)))\n      if (typeof option == 'string') data[option].call($this)\n    })\n  }\n\n  var old = $.fn.dropdown\n\n  $.fn.dropdown             = Plugin;\n  $.fn.dropdown.Constructor = Dropdown;\n\n\n  // DROPDOWN NO CONFLICT\n  // ====================\n\n  $.fn.dropdown.noConflict = function () {\n    $.fn.dropdown = old\n    return this\n  }\n\n\n\n  return $.fn.dropdown;\n  */\n\n  // APPLY TO STANDARD DROPDOWN ELEMENTS\n  // ===================================\n  $(document)\n    .on('click.bs.dropdown.data-api', clearMenus)\n    .on('click.bs.dropdown.data-api', '.dropdown form', function (e) { e.stopPropagation() });\n\n  plugins.register(Dropdown,\"dropdown\");\n\n  return Dropdown;\n\n});\n\ndefine('skylark-widgets-swt/ComboBox',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"./swt\",\r\n  \"./Widget\",\r\n  \"skylark-bootstrap3/dropdown\"\r\n],function(langx,browser,eventer,noder,geom,$,swt,Widget){\r\n\r\n\r\n\r\n\t// COMBOBOX CONSTRUCTOR AND PROTOTYPE\r\n\r\n\tvar ComboBox = Widget.inherit({\r\n\t\tklassName: \"ComboBox\",\r\n\r\n\t\tpluginName : \"lark.combobox\",\r\n\r\n\t\twidgetClass : \"lark-combobox\",\r\n\r\n\t\toptions : {\r\n\r\n\t\t\tautoResizeMenu: true,\r\n\t\t\tfilterOnKeypress: false,\r\n\t\t\tshowOptionsOnKeypress: false,\r\n\t\t\tfilter: function filter (list, predicate, self) {\r\n\t\t\t\tvar visible = 0;\r\n\t\t\t\tself.$dropMenu.find('.empty-indicator').remove();\r\n\r\n\t\t\t\tlist.each(function (i) {\r\n\t\t\t\t\tvar $li = $(this);\r\n\t\t\t\t\tvar text = $(this).text().trim();\r\n\r\n\t\t\t\t\t$li.removeClass();\r\n\r\n\t\t\t\t\tif (text === predicate) {\r\n\t\t\t\t\t\t$li.addClass('text-success');\r\n\t\t\t\t\t\tvisible++;\r\n\t\t\t\t\t} else if (text.substr(0, predicate.length) === predicate) {\r\n\t\t\t\t\t\t$li.addClass('text-info');\r\n\t\t\t\t\t\tvisible++;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$li.addClass('hidden');\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (visible === 0) {\r\n\t\t\t\t\tself.$dropMenu.append('<li class=\"empty-indicator text-muted\"><em>No Matches</em></li>');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_init : function() {\r\n\t\t\tthis.$element = $(this._elm);\r\n\r\n\t\t\tthis.$dropMenu = this.$element.find('.dropdown-menu');\r\n\t\t\tthis.$input = this.$element.find('input');\r\n\t\t\tthis.$button = this.$element.find('.btn');\r\n\t\t\tthis.$button.dropdown();\r\n\t\t\tthis.$inputGroupBtn = this.$element.find('.input-group-btn');\r\n\r\n\t\t\tthis.$element.on('click.lark', 'a', langx.proxy(this.itemclicked, this));\r\n\t\t\tthis.$element.on('change.lark', 'input', langx.proxy(this.inputchanged, this));\r\n\t\t\tthis.$element.on('shown.bs.dropdown', langx.proxy(this.menuShown, this));\r\n\t\t\tthis.$input.on('keyup.lark', langx.proxy(this.keypress, this));\r\n\r\n\t\t\t// set default selection\r\n\t\t\tthis.setDefaultSelection();\r\n\r\n\t\t\t// if dropdown is empty, disable it\r\n\t\t\tvar items = this.$dropMenu.children('li');\r\n\t\t\tif( items.length === 0) {\r\n\t\t\t\tthis.$button.addClass('disabled');\r\n\t\t\t}\r\n\r\n\t\t\t// filter on load in case the first thing they do is press navigational key to pop open the menu\r\n\t\t\tif (this.options.filterOnKeypress) {\r\n\t\t\t\tthis.options.filter(this.$dropMenu.find('li'), this.$input.val(), this);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_destroy: function () {\r\n\t\t\tthis.$element.remove();\r\n\t\t\t// remove any external bindings\r\n\t\t\t// [none]\r\n\r\n\t\t\t// set input value attrbute in markup\r\n\t\t\tthis.$element.find('input').each(function () {\r\n\t\t\t\t$(this).attr('value', $(this).val());\r\n\t\t\t});\r\n\r\n\t\t\t// empty elements to return to original markup\r\n\t\t\t// [none]\r\n\r\n\t\t\treturn this.$element[0].outerHTML;\r\n\t\t},\r\n\r\n\t\tdoSelect: function ($item) {\r\n\r\n\t\t\tif (typeof $item[0] !== 'undefined') {\r\n\t\t\t\t// remove selection from old item, may result in remove and\r\n\t\t\t\t// re-addition of class if item is the same\r\n\t\t\t\tthis.$element.find('li.selected:first').removeClass('selected');\r\n\r\n\t\t\t\t// add selection to new item\r\n\t\t\t\tthis.$selectedItem = $item;\r\n\t\t\t\tthis.$selectedItem.addClass('selected');\r\n\r\n\t\t\t\t// update input\r\n\t\t\t\tthis.$input.val(this.$selectedItem.text().trim());\r\n\t\t\t} else {\r\n\t\t\t\t// this is a custom input, not in the menu\r\n\t\t\t\tthis.$selectedItem = null;\r\n\t\t\t\tthis.$element.find('li.selected:first').removeClass('selected');\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tclearSelection: function () {\r\n\t\t\tthis.$selectedItem = null;\r\n\t\t\tthis.$input.val('');\r\n\t\t\tthis.$dropMenu.find('li').removeClass('selected');\r\n\t\t},\r\n\r\n\t\tmenuShown: function () {\r\n\t\t\tif (this.options.autoResizeMenu) {\r\n\t\t\t\tthis.resizeMenu();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tresizeMenu: function () {\r\n\t\t\tvar width = this.$element.outerWidth();\r\n\t\t\tthis.$dropMenu.outerWidth(width);\r\n\t\t},\r\n\r\n\t\tselectedItem: function () {\r\n\t\t\tvar item = this.$selectedItem;\r\n\t\t\tvar data = {};\r\n\r\n\t\t\tif (item) {\r\n\t\t\t\tvar txt = this.$selectedItem.text().trim();\r\n\t\t\t\tdata = langx.mixin({\r\n\t\t\t\t\ttext: txt\r\n\t\t\t\t}, this.$selectedItem.data());\r\n\t\t\t} else {\r\n\t\t\t\tdata = {\r\n\t\t\t\t\ttext: this.$input.val().trim(),\r\n\t\t\t\t\tnotFound: true\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\t\t},\r\n\r\n\t\tselectByText: function (text) {\r\n\t\t\tvar $item = $([]);\r\n\t\t\tthis.$element.find('li').each(function () {\r\n\t\t\t\tif ((this.textContent || this.innerText || $(this).text() || '').trim().toLowerCase() === (text || '').trim().toLowerCase()) {\r\n\t\t\t\t\t$item = $(this);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.doSelect($item);\r\n\t\t},\r\n\r\n\t\tselectByValue: function (value) {\r\n\t\t\tvar selector = 'li[data-value=\"' + value + '\"]';\r\n\t\t\tthis.selectBySelector(selector);\r\n\t\t},\r\n\r\n\t\tselectByIndex: function (index) {\r\n\t\t\t// zero-based index\r\n\t\t\tvar selector = 'li:eq(' + index + ')';\r\n\t\t\tthis.selectBySelector(selector);\r\n\t\t},\r\n\r\n\t\tselectBySelector: function (selector) {\r\n\t\t\tvar $item = this.$element.find(selector);\r\n\t\t\tthis.doSelect($item);\r\n\t\t},\r\n\r\n\t\tsetDefaultSelection: function () {\r\n\t\t\tvar selector = 'li[data-selected=true]:first';\r\n\t\t\tvar item = this.$element.find(selector);\r\n\r\n\t\t\tif (item.length > 0) {\r\n\t\t\t\t// select by data-attribute\r\n\t\t\t\tthis.selectBySelector(selector);\r\n\t\t\t\titem.removeData('selected');\r\n\t\t\t\titem.removeAttr('data-selected');\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tenable: function () {\r\n\t\t\tthis.$element.removeClass('disabled');\r\n\t\t\tthis.$input.removeAttr('disabled');\r\n\t\t\tthis.$button.removeClass('disabled');\r\n\t\t},\r\n\r\n\t\tdisable: function () {\r\n\t\t\tthis.$element.addClass('disabled');\r\n\t\t\tthis.$input.attr('disabled', true);\r\n\t\t\tthis.$button.addClass('disabled');\r\n\t\t},\r\n\r\n\t\titemclicked: function (e) {\r\n\t\t\tthis.$selectedItem = $(e.target).parent();\r\n\r\n\t\t\t// set input text and trigger input change event marked as synthetic\r\n\t\t\tthis.$input.val(this.$selectedItem.text().trim()).trigger('change', {\r\n\t\t\t\tsynthetic: true\r\n\t\t\t});\r\n\r\n\t\t\t// pass object including text and any data-attributes\r\n\t\t\t// to onchange event\r\n\t\t\tvar data = this.selectedItem();\r\n\r\n\t\t\t// trigger changed event\r\n\t\t\tthis.$element.trigger('changed.lark', data);\r\n\r\n\t\t\te.preventDefault();\r\n\r\n\t\t\t// return focus to control after selecting an option\r\n\t\t\tthis.$element.find('.dropdown-toggle').focus();\r\n\t\t},\r\n\r\n\t\tkeypress: function (e) {\r\n\t\t\tvar ENTER = 13;\r\n\t\t\t//var TAB = 9;\r\n\t\t\tvar ESC = 27;\r\n\t\t\tvar LEFT = 37;\r\n\t\t\tvar UP = 38;\r\n\t\t\tvar RIGHT = 39;\r\n\t\t\tvar DOWN = 40;\r\n\r\n\t\t\tvar IS_NAVIGATIONAL = (\r\n\t\t\t\te.which === UP ||\r\n\t\t\t\te.which === DOWN ||\r\n\t\t\t\te.which === LEFT ||\r\n\t\t\t\te.which === RIGHT\r\n\t\t\t);\r\n\r\n\t\t\tif(this.options.showOptionsOnKeypress && !this.$inputGroupBtn.hasClass('open')){\r\n\t\t\t\tthis.$button.dropdown('toggle');\r\n\t\t\t\tthis.$input.focus();\r\n\t\t\t}\r\n\r\n\t\t\tif (e.which === ENTER) {\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\tvar selected = this.$dropMenu.find('li.selected').text().trim();\r\n\t\t\t\tif(selected.length > 0){\r\n\t\t\t\t\tthis.selectByText(selected);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.selectByText(this.$input.val());\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.$inputGroupBtn.removeClass('open');\r\n\t\t\t} else if (e.which === ESC) {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tthis.clearSelection();\r\n\t\t\t\tthis.$inputGroupBtn.removeClass('open');\r\n\t\t\t} else if (this.options.showOptionsOnKeypress) {\r\n\t\t\t\tif (e.which === DOWN || e.which === UP) {\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\tvar $selected = this.$dropMenu.find('li.selected');\r\n\t\t\t\t\tif ($selected.length > 0) {\r\n\t\t\t\t\t\tif (e.which === DOWN) {\r\n\t\t\t\t\t\t\t$selected = $selected.next(':not(.hidden)');\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t$selected = $selected.prev(':not(.hidden)');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ($selected.length === 0){\r\n\t\t\t\t\t\tif (e.which === DOWN) {\r\n\t\t\t\t\t\t\t$selected = this.$dropMenu.find('li:not(.hidden):first');\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t$selected = this.$dropMenu.find('li:not(.hidden):last');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.doSelect($selected);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Avoid filtering on navigation key presses\r\n\t\t\tif (this.options.filterOnKeypress && !IS_NAVIGATIONAL) {\r\n\t\t\t\tthis.options.filter(this.$dropMenu.find('li'), this.$input.val(), this);\r\n\t\t\t}\r\n\r\n\t\t\tthis.previousKeyPress = e.which;\r\n\t\t},\r\n\r\n\t\tinputchanged: function (e, extra) {\r\n\t\t\tvar val = $(e.target).val();\r\n\t\t\t// skip processing for internally-generated synthetic event\r\n\t\t\t// to avoid double processing\r\n\t\t\tif (extra && extra.synthetic) {\r\n\t\t\t\tthis.selectByText(val);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.selectByText(val);\r\n\r\n\t\t\t// find match based on input\r\n\t\t\t// if no match, pass the input value\r\n\t\t\tvar data = this.selectedItem();\r\n\t\t\tif (data.text.length === 0) {\r\n\t\t\t\tdata = {\r\n\t\t\t\t\ttext: val\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\t// trigger changed event\r\n\t\t\tthis.$element.trigger('changed.lark', data);\r\n\t\t}\r\n\r\n\t});\r\n\r\n\r\n\r\n\tComboBox.prototype.getValue = ComboBox.prototype.selectedItem;\r\n\r\n\r\n\r\n\treturn swt.ComboBox = ComboBox;\r\n});\r\n\ndefine('skylark-widgets-swt/TextBox',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"./swt\",\r\n  \"./Widget\"\r\n],function(langx,browser,eventer,noder,geom,$,swt,Widget){\r\n\r\n  var SyncAttrs = [\r\n    'rows', 'spellcheck', 'maxLength', 'size', 'readonly', 'min',\r\n    'max', 'step', 'list', 'pattern', 'placeholder', 'required', 'multiple'\r\n  ];\r\n\r\n\tvar TextBox =  swt.TextBox = Widget.inherit({\r\n\t\tklassName: \"TextBox\",\r\n\r\n    pluginName: \"lark.textbox\",\r\n\r\n    /*\r\n     * Parse options from attached dom element.\r\n     * @override\r\n     */\r\n    _parse : function() {\r\n      var  velm = this._velm;\r\n\r\n      // get multiline option\r\n      this.options.multiline = velm.is(\"textarea\");\r\n      \r\n      // get current state of input\r\n      var value = $chk.prop('checked');\r\n      var disabled = $chk.prop('disabled');\r\n      this.state.set(\"value\",value);\r\n      this.state.set((\"disabled\",disabled));\r\n\r\n    },\r\n\r\n    /*\r\n     * Create a new  dom element for this widget\r\n     * @override\r\n     */\r\n    _create : function() {\r\n      var tagName = \"input\",attrs = {},\r\n          options = this.options;\r\n\r\n      langx.each([\r\n        'rows', 'spellcheck', 'maxLength', 'size', 'readonly', 'min',\r\n        'max', 'step', 'list', 'pattern', 'placeholder', 'required', 'multiple'\r\n      ], function (name) {\r\n        attrs[name] = options[name];\r\n      });\r\n\r\n      if (options.multiline) {\r\n        tagName = \"textarea\"\r\n      } \r\n      if (options.subtype) {\r\n        attrs.type = options.subtype;\r\n      }\r\n      this._elm = this._dom.noder.createElement(tagName,attrs);\r\n    },\r\n\r\n    /*\r\n     * Init this widget\r\n     * @override\r\n     */\r\n    _init : function() {\r\n    },\r\n\r\n    /*\r\n     * Sync dom element to widget state \r\n     * @override\r\n     */\r\n    _sync : function() {\r\n      // handle internal events\r\n      var self = this;\r\n      this._velm.on('change', function(evt) {\r\n        var value = self._velm.prop('value');\r\n        self.state.set(\"value\",value);\r\n      });\r\n    },\r\n\r\n    _refresh : function(updates) {\r\n        var self  = this;\r\n\r\n        if (updates[\"value\"] !== undefined) {\r\n          if (self._velm.value() !== e.value) {\r\n            self._velm.value(updates.value);\r\n          }\r\n        }\r\n        if (updates[\"disabled\"] !== undefined) {\r\n          self._velm.disable(updates[\"disabled\"]);\r\n        }\r\n\r\n        // update visual with attribute values from control\r\n        this.overrided(changed);\r\n    },\r\n\r\n  });\r\n\r\n\treturn TextBox;\r\n});\r\n\r\n\r\n\n define('skylark-widgets-swt/Listing',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"./swt\",\r\n  \"./Widget\"\r\n],function(langx,$,swt,Widget){\r\n\r\n    var Listing = Widget.inherit({\r\n        klassName : \"Listing\",\r\n\r\n        pluginName : \"lark.listing\",\r\n\r\n        options : {\r\n        \tmultiSelect: false,\r\n        \t//multiTier : false,\r\n\r\n          multiTier : {\r\n            mode   : \"\",  // \"tree\" or \"accordion\" or \"popup\"\r\n            levels : 2,\r\n            selectors :  {\r\n              children : \"ul\",  // \"> .list-group\"\r\n              hasChildren : \":has(ul)\"\r\n            },\r\n            tree : {\r\n              classes : {\r\n                expandIcon: 'glyphicon-plus',    // \"glyphicon-chevron-down\", 'glyphicon-folder-open'\r\n                collapseIcon: 'glyphicon-minus', // \"glyphicon-chevron-right\", 'glyphicon-folder-close'\r\n                children : \"\"                              // \"list-group children\"\r\n              },\r\n              templates : {\r\n                treeIcon : \"<i class=\\\"glyphicon\\\"></i>\",\r\n                itemGroup: \"\"\r\n\r\n              },\r\n              selectors : {\r\n                treeIcon : \" > i\"\r\n              }\r\n            },\r\n\r\n            accordion : {\r\n              selectors : {\r\n                toggler : \" > a\"\r\n              }\r\n\r\n            }\r\n          },\r\n\r\n        \ttoggle : false,\r\n        \tclasses : {\r\n          \tactive : \"active\"\r\n        \t},\r\n\r\n\r\n        \tselectors : {\r\n          \titem : \"li\",                   // \".list-group-item\"\r\n\r\n        \t},\r\n\r\n          item : {\r\n            template : \"<span><i class=\\\"glyphicon\\\"></i><a href=\\\"javascript: void(0);\\\"></a> </span>\",\r\n            checkable : false,\r\n            selectors : {\r\n              icon : \" > span > i\",\r\n              text : \" > span > a\"\r\n            }\r\n          },\r\n\r\n        \tselected : 0\r\n        },\r\n\r\n        state : {\r\n          selected : Object\r\n        },\r\n\r\n        _init : function() {\r\n            this.overrided();\r\n            var self = this,\r\n                velm = this._velm,\r\n                itemSelector = this.options.selectors.item;\r\n\r\n            this._$items = velm.$(itemSelector);\r\n\r\n            velm.on('click', itemSelector, function () {\r\n                var veItem = self._elmx(this);\r\n\r\n                if (!veItem.hasClass('disabled')) {\r\n                  var value = veItem.data(\"value\");\r\n                  if (value === undefined) {\r\n                    value = self._$items.index(this);\r\n                  }\r\n                  self.state.set(\"selected\",value);\r\n                }\r\n\r\n                //veItem.blur();\r\n                return false;\r\n            });\r\n            this.state.set(\"selected\",this.options.selected);\r\n\r\n            var $this = velm,\r\n                $toggle = this.options.toggle,\r\n                multiTierMode = this.options.multiTier.mode,\r\n                hasChildrenSelector = this.options.multiTier.selectors.hasChildren,\r\n                childrenSelector = this.options.multiTier.selectors.children,\r\n                iconSelector = this.options.item.selectors.icon,\r\n                textSelector = this.options.item.selectors.text,\r\n                itemTemplate = this.options.item.template,                \r\n                obj = this;\r\n\r\n\r\n            if (multiTierMode) {\r\n              if (multiTierMode == \"tree\") {\r\n                   var treeIconTemplate = this.options.multiTier.tree.templates.treeIcon,\r\n                       treeIconSelector = this.options.multiTier.tree.selectors.treeIcon,\r\n                       expandIconClass = this.options.multiTier.tree.classes.expandIcon,\r\n                       collapseIconClass = this.options.multiTier.tree.classes.collapseIcon;\r\n\r\n                   this._$items.each(function(){\r\n                     if($(this).is(hasChildrenSelector)) {\r\n                        var children = $(this).find(childrenSelector);\r\n                        $(children).remove();\r\n                        text = $(this).text().trim();\r\n                        $(this).html(treeIconTemplate+itemTemplate);\r\n                        $(this).find(treeIconSelector).addClass(expandIconClass).on(\"click\" + \".\" + self.pluginName, function(e) {\r\n                            e.preventDefault();\r\n\r\n                            $(this).toggleClass(expandIconClass).toggleClass(collapseIconClass);\r\n\r\n                            $(this).closest(\"li\").toggleClass(\"active\").children(\"ul\").collapse(\"toggle\");\r\n\r\n                            if ($toggle) {\r\n                                $(this).closest(\"li\").siblings().removeClass(\"active\").children(\"ul.in\").collapse(\"hide\");\r\n                            }\r\n                        });\r\n\r\n                        $(this).find(iconSelector).addClass('glyphicon-folder-open');\r\n                        $(this).find(textSelector).text(text);\r\n                        $(this).append(children);\r\n\r\n\r\n\r\n                      }  else {\r\n                        text = $(this).text().trim();\r\n                        $(this).html(treeIconTemplate+itemTemplate);\r\n                        $(this).find(iconSelector).addClass('glyphicon-file');\r\n                        $(this).find(textSelector).text(text);\r\n                    }\r\n\r\n                   });\r\n              } else if (multiTierMode == \"accordion\") {\r\n                var togglerSelector = self.options.multiTier.accordion.selectors.toggler;\r\n\r\n                this._$items.has(childrenSelector).find(togglerSelector).on(\"click\" + \".\" + this.pluginName, function(e) {\r\n                    e.preventDefault();\r\n\r\n                    $(this).closest(itemSelector).toggleClass(\"active\").children(childrenSelector).collapse(\"toggle\");\r\n\r\n                    if ($toggle) {\r\n                        $(this).closest(itemSelector).siblings().removeClass(\"active\").children(childrenSelector+\".in\").collapse(\"hide\");\r\n                    }\r\n                });\r\n              }\r\n\r\n\r\n             this._$items.filter(\".active\").has(childrenSelector).children(childrenSelector).addClass(\"collapse in\");\r\n             this._$items.not(\".active\").has(childrenSelector).children(childrenSelector).addClass(\"collapse\");\r\n\r\n              \r\n            }   \r\n        },\r\n\r\n        _refresh : function(updates) {\r\n          this.overrided(updates);\r\n          var self  = this;\r\n\r\n          function findItem(valueOrIdx) {\r\n            var $item;\r\n            if (langx.isNumber(valueOrIdx)) {\r\n              $item = self._$items.eq(valueOrIdx);\r\n            } else {\r\n              $item = self._$items.filter('[data-value=\"' + valueOrIdx + '\"]');\r\n            }\r\n            return $item;\r\n          } \r\n                 \r\n          function selectOneItem(valueOrIdx) {\r\n            findItem(valueOrIdx).addClass(self.options.classes.active);\r\n          }\r\n\r\n          function unselectOneItem(valueOrIdx) {\r\n            findItem(valueOrIdx).removeClass(self.options.classes.active);\r\n          }\r\n\r\n          if (updates[\"selected\"]) {\r\n            if (this.options.multiSelect) {\r\n            } else {\r\n              unselectOneItem(updates[\"selected\"].oldValue);\r\n              selectOneItem(updates[\"selected\"].value);\r\n            }\r\n\r\n          }\r\n        }\r\n\r\n  });\r\n\r\n  return swt.Listing = Listing;\r\n\r\n});\r\n\r\n\r\n\r\n\ndefine('skylark-widgets-swt/Pagination',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"./swt\",\r\n  \"./Widget\"\r\n],function(langx,browser,eventer,noder,geom,$,swt,Widget){\r\n\r\n    'use strict';\r\n\r\n    var Pagination = swt.Pagination = Widget.inherit({\r\n        klassName : \"Pagination\",\r\n\r\n        pluginName : \"lark.pagination\",\r\n\r\n        options : {\r\n            tagName : \"ul\",\r\n            css : \"\",\r\n            selectors : {\r\n                firstNavi : \"li[aria-label='first']\",\r\n                prevNavi : \"li[aria-label='prev']\",\r\n                nextNavi : \"li[aria-label='next']\",\r\n                lastNavi : \"li[aria-label='last']\",\r\n                numericNavi : \"li:not([aria-label])\",\r\n                numericTxt  : \"a\"\r\n            },\r\n            totalPages: 7,\r\n            maxButtonsVisible: 5,\r\n            currentPage: 1     \r\n        },\r\n\r\n        state : {\r\n            totalPages : Number,\r\n            currentPage : Number\r\n        },\r\n\r\n        _parse : function(elm,options) {\r\n\r\n        },\r\n        \r\n        _create : function(self) {\r\n        },\r\n\r\n        _init : function() {\r\n          this.$first = this._velm.$(this.options.selectors.firstNavi);\r\n          this.$prev = this._velm.$(this.options.selectors.prevNavi);\r\n          this.$last = this._velm.$(this.options.selectors.lastNavi);\r\n          this.$next = this._velm.$(this.options.selectors.nextNavi);\r\n          this.$numeric = this._velm.$(this.options.selectors.numericNavi);\r\n\r\n          var self = this;\r\n\r\n          function checkCanAction(elm) {\r\n            var $elm = $(elm);\r\n            if ($elm.is(\".disabled,.active\")) {\r\n              return false;\r\n            } else {\r\n              return $elm;\r\n            }\r\n          }\r\n\r\n          this.$first.click(function(){\r\n            if (!checkCanAction(this)) {\r\n              return;\r\n            }\r\n            self.currentPage(1);\r\n          });\r\n\r\n          this.$prev.click(function(){\r\n            if (!checkCanAction(this)) {\r\n              return;\r\n            }\r\n            self.currentPage(self.currentPage()-1);\r\n          });\r\n\r\n          this.$last.click(function(){\r\n            if (!checkCanAction(this)) {\r\n              return;\r\n            }\r\n            self.currentPage(self.totalPages());\r\n          });\r\n\r\n          this.$next.click(function(){\r\n            if (!checkCanAction(this)) {\r\n              return;\r\n            }\r\n            self.currentPage(self.currentPage()+1);\r\n          });\r\n\r\n          this.$numeric.click(function(){\r\n            var ret = checkCanAction(this)\r\n            if (!ret) {\r\n              return;\r\n            }\r\n            var numeric = ret.find(self.options.selectors.numericTxt).text(),\r\n                pageNo = parseInt(numeric);\r\n            self.currentPage(pageNo);\r\n\r\n          });\r\n\r\n          this.state.set(\"currentPage\",this.options.currentPage);\r\n          this.state.set(\"totalPages\",this.options.totalPages);\r\n\r\n          this.overrided();\r\n        },\r\n\r\n        _refresh: function (updates) {\r\n          this.overrided(updates);\r\n          var self = this;\r\n\r\n          function changePageNoBtns(currentPage,totalPages) {\r\n\r\n            // Create the numeric buttons.\r\n            // Variable of number control in the buttons.\r\n            var totalPageNoBtns = Math.min(totalPages, self.options.maxButtonsVisible);\r\n            var begin = 1;\r\n            var end = begin + totalPageNoBtns - 1;\r\n\r\n            /*\r\n             * Align the values in the begin and end variables if the user has the\r\n             * possibility that select a page that doens't appear in the paginador.\r\n             * e.g currentPage = 1, and user go to the 20 page.\r\n             */\r\n            while ((currentPage < begin) || (currentPage > end)) {\r\n              if (currentPage > end) {\r\n                 begin += totalPageNoBtns;\r\n                 end += totalPageNoBtns;\r\n\r\n                 if (end > totalPages) {\r\n                   begin = begin - (end - totalPages);\r\n                   end = totalPages;\r\n                 }\r\n               } else {\r\n                 begin -= totalPageNoBtns;\r\n                 end -= totalPageNoBtns;\r\n\r\n                 if (begin < 0) {\r\n                   end = end + (begin + totalPageNoBtns);\r\n                   begin = 1;\r\n                 }\r\n               }\r\n            }\r\n           /*\r\n            * Verify if the user clicks in the last page show by paginator.\r\n            * If yes, the paginator advances.\r\n            */\r\n            if ((currentPage === end) && (totalPages != 1)) {\r\n              begin = currentPage - 1;\r\n              end = begin + totalPageNoBtns - 1;\r\n\r\n              if (end >= totalPages) {\r\n                begin = begin - (end - (totalPages));\r\n                end = totalPages;\r\n              }\r\n            }\r\n\r\n            /*\r\n             * Verify it the user clicks in the first page show by paginator.\r\n             * If yes, the paginator retrogress\r\n             */\r\n             if ((begin === currentPage) && (totalPages != 1)) {\r\n               if (currentPage != 1) {\r\n                 end = currentPage + 1;\r\n                 begin = end - (totalPageNoBtns - 1);\r\n               }\r\n             }\r\n\r\n             var count = self.$numeric.size(),\r\n                 visibles = end-begin + 1,\r\n                 i = 0;\r\n\r\n             self.$numeric.filter(\".active\").removeClass(\"active\");\r\n             while (i<visibles) {\r\n               var pageNo = i + begin,\r\n                   $btn = self.$numeric.eq(i);\r\n               $btn.find(self.options.selectors.numericTxt).text(i+begin).show();\r\n               if (pageNo == currentPage) {\r\n                $btn.addClass(\"active\");\r\n               }\r\n               i++;\r\n             }\r\n             while (i<count) {\r\n               self.$numeric.eq(i).find(self.options.selectors.numericTxt).text(i+begin).hide();\r\n               i++;\r\n             }\r\n\r\n\r\n          }\r\n\r\n          function changeLabeldBtns(currentPage,totalPages) {\r\n            if (currentPage < 1) {\r\n              throw('Page can\\'t be less than 1');\r\n            } else if (currentPage > totalPages) {\r\n              throw('Page is bigger than total pages');\r\n            }\r\n\r\n            if (totalPages < 1) {\r\n              throw('Total Pages can\\'t be less than 1');\r\n            }\r\n\r\n            if (currentPage == 1 ) {\r\n              self.$first.addClass(\"disabled\");\r\n              self.$prev.addClass(\"disabled\");\r\n            } else {\r\n              self.$first.removeClass(\"disabled\");\r\n              self.$prev.removeClass(\"disabled\");\r\n            }\r\n\r\n            if (currentPage == totalPages ) {\r\n              self.$last.addClass(\"disabled\");\r\n              self.$next.addClass(\"disabled\");\r\n            } else {\r\n              self.$last.removeClass(\"disabled\");\r\n              self.$next.removeClass(\"disabled\");\r\n            }\r\n          }\r\n\r\n          if (updates.currentPage || updates.totalPages) {\r\n            var currentPage = self.currentPage(),\r\n                totalPages = self.totalPages();\r\n\r\n            changePageNoBtns(currentPage,totalPages);\r\n            changeLabeldBtns(currentPage,totalPages);\r\n          }\r\n\r\n        }\r\n\r\n    });\r\n\r\n    return Pagination;\r\n});\ndefine('skylark-widgets-swt/Progress',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"./swt\",\r\n  \"./Widget\"\r\n],function(langx,browser,eventer,noder,geom,$,swt,Widget){\r\n\r\n    'use strict';\r\n\r\n     var Progress = swt.Progress = Widget.inherit({\r\n     \tklassName : \"Progress\",\r\n\r\n     \tpluginName : \"lark.progress\",\r\n\r\n     \toptions : {\r\n     \t\tselectors : {\r\n     \t\t\tbar : \"progress-bar\"\r\n     \t\t},\r\n     \t\tmin : 0,\r\n     \t\tmax : 100\r\n     \t},\r\n\r\n     \tstate : {\r\n     \t\tvalue : Number\r\n     \t},\r\n\r\n\t\t_init : function() {\r\n\t\t\tthis._vbar = this._velm.find(this.options.selectors.bar);\r\n\t\t\tthis.value(this.options.min);\r\n\t\t},\r\n\r\n\t\t_refresh : function() {\r\n\t        this.overrided(changed);\r\n\t        var self  = this;\r\n\r\n\t        if (updates[\"value\"] !== undefined) {\r\n\t        \tvar value = updates[\"value\"],\r\n\t        \t\tmin = this.options.min,\r\n\t        \t\tmax = this.options.max;\r\n\r\n\t\t\t\tthis._vbar.css(\"width\",(value-min)/(max-min)*100+\"%\");\r\n\t        }\r\n\t\t},\r\n\r\n\t\tstart : function(max){\r\n\t\t\tthis.value(this.options.min);\r\n\t\t\tthis._velm.slideDown();\r\n\t\t},\r\n\r\n\t\tincrease : function(tick){\r\n\t\t\tvar value = this.value();\r\n\t\t\tthis.value(value += tick*1.0);\r\n\t\t},\r\n\r\n\t\tfinish : function(){\r\n\t\t\tthis.value(this.options.min);\r\n\t\t\tthis._velm.slideUp();\r\n\t\t}     \t\r\n     });\r\n\r\n\treturn Progress;\r\n\t\r\n });\ndefine('skylark-widgets-swt/Radio',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"./swt\",\r\n  \"./_Toggler\"\r\n],function(langx,browser,eventer,noder,geom,$,swt,_Toggler){\r\n\r\n  var Radio = swt.Radio = _Toggler.inherit({\r\n    klassName: \"Radio\",\r\n\r\n    pluginName : \"lark.radio\",\r\n\r\n    _parse : function() {\r\n      var $radio = this.$radio;\r\n\r\n      // get current state of input\r\n      var checked = $radio.prop('checked');\r\n      var disabled = $radio.prop('disabled');\r\n\r\n      this.state.set(\"checked\",checked);\r\n      this.state.set((\"disabled\",disabled));\r\n\r\n    },\r\n\r\n    _init : function() {\r\n      //this.options = langx.mixin({}, $.fn.checkbox.defaults, options);\r\n      var element = this.domNode;\r\n      var $element = $(element);\r\n\r\n      if (element.tagName.toLowerCase() !== 'label') {\r\n        logError('Radio must be initialized on the `label` that wraps the `input` element. See https://github.com/ExactTarget/fuelux/blob/master/reference/markup/checkbox.html for example of proper markup. Call `.checkbox()` on the `<label>` not the `<input>`');\r\n        return;\r\n      }\r\n\r\n      // cache elements\r\n      this.$label = $element;\r\n      this.$radio = this.$label.find('input[type=\"checkbox\"]');\r\n      this.$container = $element.parent('.checkbox'); // the container div\r\n\r\n      if (!this.options.ignoreVisibilityCheck && this.$radio.css('visibility').match(/hidden|collapse/)) {\r\n        logError('For accessibility reasons, in order for tab and space to function on checkbox, checkbox `<input />`\\'s `visibility` must not be set to `hidden` or `collapse`. See https://github.com/ExactTarget/fuelux/pull/1996 for more details.');\r\n      }\r\n\r\n      // determine if a toggle container is specified\r\n      var containerSelector = this.$radio.attr('data-toggle');\r\n      this.$toggleContainer = $(containerSelector);\r\n\r\n\r\n      // set default state\r\n      this.setInitialState();\r\n    },\r\n\r\n    _sync : function() {\r\n      // handle internal events\r\n      var self = this;\r\n      this.$radio.on('change', function(evt) {\r\n        //var $radio = $(evt.target);\r\n        var checked = self.$radio.prop('checked');\r\n        self.state.set(\"checked\",checked);\r\n      });\r\n    },\r\n\r\n    _refresh : function(updates) {\r\n\r\n        function setCheckedState (checked) {\r\n          var $radio = self.$radio;\r\n          var $lbl = self.$label;\r\n          var $containerToggle = self.$toggleContainer;\r\n\r\n          if (checked) {\r\n            // reset all items in group\r\n            this.resetGroup();\r\n\r\n            $radio.prop('checked', true);\r\n            $lbl.addClass('checked');\r\n            $containerToggle.removeClass('hide hidden');\r\n          } else {\r\n            $radio.prop('checked', false);\r\n            $lbl.removeClass('checked');\r\n            $containerToggle.addClass('hidden');\r\n          }\r\n        }\r\n\r\n        function setDisabledState (disabled) {\r\n          var $radio = self.$radio;\r\n          var $lbl = self.$label;\r\n\r\n          if (disabled) {\r\n            $radio.prop('disabled', true);\r\n            $lbl.addClass('disabled');\r\n          } else {\r\n            $radio.prop('disabled', false);\r\n            $lbl.removeClass('disabled');\r\n          }\r\n        }\r\n\r\n        // update visual with attribute values from control\r\n        this.overrided(changed);\r\n        var self  = this;\r\n\r\n        if (updates[\"checked\"]) {\r\n          setCheckedState(updates[\"checked\"].value);\r\n        }\r\n        if (updates[\"disabled\"]) {\r\n          setDisabledState(updates[\"disabled\"].value);\r\n        }\r\n    },\r\n\r\n    resetGroup: function resetGroup () {\r\n      var $radios = $('input[name=\"' + this.groupName + '\"]');\r\n      $radios.each(function resetRadio (index, item) {\r\n        var $radio = $(item);\r\n        var $lbl = $radio.parent();\r\n        var containerSelector = $radio.attr('data-toggle');\r\n        var $containerToggle = $(containerSelector);\r\n\r\n\r\n        $lbl.removeClass('checked');\r\n        $containerToggle.addClass('hidden');\r\n      });\r\n    }\r\n  });\r\n\r\n  return Radio;\r\n});\r\n\r\n\ndefine('skylark-widgets-swt/SearchBox',[\n  \"skylark-langx/langx\",\n  \"skylark-domx-browser\",\n  \"skylark-domx-eventer\",\n  \"skylark-domx-noder\",\n  \"skylark-domx-geom\",\n  \"skylark-domx-query\",\n  \"./swt\",\n  \"./Widget\",\n  \"skylark-bootstrap3/dropdown\"\n],function(langx,browser,eventer,noder,geom,$,swt,Widget){\n\n\n\t// SEARCH CONSTRUCTOR AND PROTOTYPE\n\n\tvar SearchBox = Widget.inherit({\n\t\tklassName: \"SearchBox\",\n\n\t\tpluginName: \"lark.searchbox\",\n\n\t\toptions : {\n\t\t\tclearOnEmpty: false,\n\t\t\tsearchOnKeyPress: false,\n\t\t\tallowCancel: false\n\t\t},\n\t\n\t\t_init : function() {\n\t\t\tthis.$element = $(this._elm);\n\t\t\tthis.$repeater = this.$element.closest('.repeater');\n\n\t\t\tif (this.$element.attr('data-searchOnKeyPress') === 'true'){\n\t\t\t\tthis.options.searchOnKeyPress = true;\n\t\t\t}\n\n\t\t\tthis.$button = this.$element.find('button');\n\t\t\tthis.$input = this.$element.find('input');\n\t\t\tthis.$icon = this.$element.find('.glyphicon, .fuelux-icon');\n\n\t\t\tthis.$button.on('click.fu.search', langx.proxy(this.buttonclicked, this));\n\t\t\tthis.$input.on('keyup.fu.search', langx.proxy(this.keypress, this));\n\n\t\t\tif (this.$repeater.length > 0) {\n\t\t\t\tthis.$repeater.on('rendered.fu.repeater', langx.proxy(this.clearPending, this));\n\t\t\t}\n\n\t\t\tthis.activeSearch = '';\n\t\t},\n\t\tdestroy: function () {\n\t\t\tthis.$element.remove();\n\t\t\t// any external bindings\n\t\t\t// [none]\n\t\t\t// set input value attrbute\n\t\t\tthis.$element.find('input').each(function () {\n\t\t\t\t$(this).attr('value', $(this).val());\n\t\t\t});\n\t\t\t// empty elements to return to original markup\n\t\t\t// [none]\n\t\t\t// returns string of markup\n\t\t\treturn this.$element[0].outerHTML;\n\t\t},\n\n\t\tsearch: function (searchText) {\n\t\t\tif (this.$icon.hasClass('glyphicon')) {\n\t\t\t\tthis.$icon.removeClass('glyphicon-search').addClass('glyphicon-remove');\n\t\t\t}\n\t\t\tif (this.$icon.hasClass('fuelux-icon')) {\n\t\t\t\tthis.$icon.removeClass('fuelux-icon-search').addClass('fuelux-icon-remove');\n\t\t\t}\n\n\t\t\tthis.activeSearch = searchText;\n\t\t\tthis.$element.addClass('searched pending');\n\t\t\tthis.$element.trigger('searched.fu.search', searchText);\n\t\t},\n\n\t\tclear: function () {\n\t\t\tif (this.$icon.hasClass('glyphicon')) {\n\t\t\t\tthis.$icon.removeClass('glyphicon-remove').addClass('glyphicon-search');\n\t\t\t}\n\t\t\tif (this.$icon.hasClass('fuelux-icon')) {\n\t\t\t\tthis.$icon.removeClass('fuelux-icon-remove').addClass('fuelux-icon-search');\n\t\t\t}\n\n\t\t\tif (this.$element.hasClass('pending')) {\n\t\t\t\tthis.$element.trigger('canceled.fu.search');\n\t\t\t}\n\n\t\t\tthis.activeSearch = '';\n\t\t\tthis.$input.val('');\n\t\t\tthis.$element.trigger('cleared.fu.search');\n\t\t\tthis.$element.removeClass('searched pending');\n\t\t},\n\n\t\tclearPending: function () {\n\t\t\tthis.$element.removeClass('pending');\n\t\t},\n\n\t\taction: function () {\n\t\t\tvar val = this.$input.val();\n\n\t\t\tif (val && val.length > 0) {\n\t\t\t\tthis.search(val);\n\t\t\t} else {\n\t\t\t\tthis.clear();\n\t\t\t}\n\t\t},\n\n\t\tbuttonclicked: function (e) {\n\t\t\te.preventDefault();\n\t\t\tif ($(e.currentTarget).is('.disabled, :disabled')) return;\n\n\t\t\tif (this.$element.hasClass('pending') || this.$element.hasClass('searched')) {\n\t\t\t\tthis.clear();\n\t\t\t} else {\n\t\t\t\tthis.action();\n\t\t\t}\n\t\t},\n\n\t\tkeypress: function (e) {\n\t\t\tvar ENTER_KEY_CODE = 13;\n\t\t\tvar TAB_KEY_CODE = 9;\n\t\t\tvar ESC_KEY_CODE = 27;\n\n\t\t\tif (e.which === ENTER_KEY_CODE) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.action();\n\t\t\t} else if (e.which === TAB_KEY_CODE) {\n\t\t\t\te.preventDefault();\n\t\t\t} else if (e.which === ESC_KEY_CODE) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.clear();\n\t\t\t} else if (this.options.searchOnKeyPress) {\n\t\t\t\t// search on other keypress\n\t\t\t\tthis.action();\n\t\t\t}\n\t\t},\n\n\t\tdisable: function () {\n\t\t\tthis.$element.addClass('disabled');\n\t\t\tthis.$input.attr('disabled', 'disabled');\n\n\t\t\tif (!this.options.allowCancel) {\n\t\t\t\tthis.$button.addClass('disabled');\n\t\t\t}\n\t\t},\n\n\t\tenable: function () {\n\t\t\tthis.$element.removeClass('disabled');\n\t\t\tthis.$input.removeAttr('disabled');\n\t\t\tthis.$button.removeClass('disabled');\n\t\t}\n\t});\n\n\treturn \tswt.SearchBox = SearchBox;\n});\n\ndefine('skylark-widgets-swt/SelectList',[\n  \"skylark-langx/langx\",\n  \"skylark-domx-browser\",\n  \"skylark-domx-eventer\",\n  \"skylark-domx-noder\",\n  \"skylark-domx-geom\",\n  \"skylark-domx-query\",\n  \"./swt\",\n  \"./Widget\",\n  \"skylark-bootstrap3/dropdown\"\n],function(langx,browser,eventer,noder,geom,$,swt,Widget){\n\n\n\t// SELECT CONSTRUCTOR AND PROTOTYPE\n\n\tvar SelectList = Widget.inherit({\n\t\tklassName: \"SelectList\",\n\n\t\tpluginName : \"lark.selectlist\",\n\t\n\t\toptions : {\n\t\t\temptyLabelHTML: '<li data-value=\"\"><a href=\"#\">No items</a></li>'\n\n\t\t},\n\n\t\t_init : function() {\n\t\t\tthis.$element = $(this._elm);\n\t\t\t//this.options = langx.mixin({}, $.fn.selectlist.defaults, options);\n\n\n\t\t\tthis.$button = this.$element.find('.btn.dropdown-toggle');\n\t\t\tthis.$hiddenField = this.$element.find('.hidden-field');\n\t\t\tthis.$label = this.$element.find('.selected-label');\n\t\t\tthis.$dropdownMenu = this.$element.find('.dropdown-menu');\n\n\t\t\tthis.$button.dropdown();\n\n\t\t\tthis.$element.on('click.fu.selectlist', '.dropdown-menu a', langx.proxy(this.itemClicked, this));\n\t\t\tthis.setDefaultSelection();\n\n\t\t\tif (this.options.resize === 'auto' || this.$element.attr('data-resize') === 'auto') {\n\t\t\t\tthis.resize();\n\t\t\t}\n\n\t\t\t// if selectlist is empty or is one item, disable it\n\t\t\tvar items = this.$dropdownMenu.children('li');\n\t\t\tif( items.length === 0) {\n\t\t\t\tthis.disable();\n\t\t\t\tthis.doSelect( $(this.options.emptyLabelHTML));\n\t\t\t}\n\n\t\t\t// support jumping focus to first letter in dropdown when key is pressed\n\t\t\tthis.$element.on('shown.bs.dropdown', function () {\n\t\t\t\t\tvar $this = $(this);\n\t\t\t\t\t// attach key listener when dropdown is shown\n\t\t\t\t\t$(document).on('keypress.fu.selectlist', function(e){\n\n\t\t\t\t\t\t// get the key that was pressed\n\t\t\t\t\t\tvar key = String.fromCharCode(e.which);\n\t\t\t\t\t\t// look the items to find the first item with the first character match and set focus\n\t\t\t\t\t\t$this.find(\"li\").each(function(idx,item){\n\t\t\t\t\t\t\tif ($(item).text().charAt(0).toLowerCase() === key) {\n\t\t\t\t\t\t\t\t$(item).children('a').focus();\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t// unbind key event when dropdown is hidden\n\t\t\tthis.$element.on('hide.bs.dropdown', function () {\n\t\t\t\t\t$(document).off('keypress.fu.selectlist');\n\t\t\t});\n\t\t},\n\n\t\tdestroy: function () {\n\t\t\tthis.$element.remove();\n\t\t\t// any external bindings\n\t\t\t// [none]\n\t\t\t// empty elements to return to original markup\n\t\t\t// [none]\n\t\t\t// returns string of markup\n\t\t\treturn this.$element[0].outerHTML;\n\t\t},\n\n\t\tdoSelect: function ($item) {\n\t\t\tvar $selectedItem;\n\t\t\tthis.$selectedItem = $selectedItem = $item;\n\n\t\t\tthis.$hiddenField.val(this.$selectedItem.attr('data-value'));\n\t\t\tthis.$label.html($(this.$selectedItem.children()[0]).html());\n\n\t\t\t// clear and set selected item to allow declarative init state\n\t\t\t// unlike other controls, selectlist's value is stored internal, not in an input\n\t\t\tthis.$element.find('li').each(function () {\n\t\t\t\tif ($selectedItem.is($(this))) {\n\t\t\t\t\t$(this).attr('data-selected', true);\n\t\t\t\t} else {\n\t\t\t\t\t$(this).removeData('selected').removeAttr('data-selected');\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\titemClicked: function (e) {\n\t\t\tthis.$element.trigger('clicked.fu.selectlist', this.$selectedItem);\n\n\t\t\te.preventDefault();\n\t\t\t// ignore if a disabled item is clicked\n\t\t\tif ($(e.currentTarget).parent('li').is('.disabled, :disabled')) { return; }\n\n\t\t\t// is clicked element different from currently selected element?\n\t\t\tif (!($(e.target).parent().is(this.$selectedItem))) {\n\t\t\t\tthis.itemChanged(e);\n\t\t\t}\n\n\t\t\t// return focus to control after selecting an option\n\t\t\tthis.$element.find('.dropdown-toggle').focus();\n\t\t},\n\n\t\titemChanged: function (e) {\n\t\t\t//selectedItem needs to be <li> since the data is stored there, not in <a>\n\t\t\tthis.doSelect($(e.target).closest('li'));\n\n\t\t\t// pass object including text and any data-attributes\n\t\t\t// to onchange event\n\t\t\tvar data = this.selectedItem();\n\t\t\t// trigger changed event\n\t\t\tthis.$element.trigger('changed.fu.selectlist', data);\n\t\t},\n\n\t\tresize: function () {\n\t\t\tvar width = 0;\n\t\t\tvar newWidth = 0;\n\t\t\tvar sizer = $('<div/>').addClass('selectlist-sizer');\n\n\n\t\t\tif (Boolean($(document).find('html').hasClass('fuelux'))) {\n\t\t\t\t// default behavior for fuel ux setup. means fuelux was a class on the html tag\n\t\t\t\t$(document.body).append(sizer);\n\t\t\t} else {\n\t\t\t\t// fuelux is not a class on the html tag. So we'll look for the first one we find so the correct styles get applied to the sizer\n\t\t\t\t$('.fuelux:first').append(sizer);\n\t\t\t}\n\n\t\t\tsizer.append(this.$element.clone());\n\n\t\t\tthis.$element.find('a').each(function () {\n\t\t\t\tsizer.find('.selected-label').text($(this).text());\n\t\t\t\tnewWidth = sizer.find('.selectlist').outerWidth();\n\t\t\t\tnewWidth = newWidth + sizer.find('.sr-only').outerWidth();\n\t\t\t\tif (newWidth > width) {\n\t\t\t\t\twidth = newWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (width <= 1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.$button.css('width', width);\n\t\t\tthis.$dropdownMenu.css('width', width);\n\n\t\t\tsizer.remove();\n\t\t},\n\n\t\tselectedItem: function () {\n\t\t\tvar txt = this.$selectedItem.text();\n\t\t\treturn langx.mixin({\n\t\t\t\ttext: txt\n\t\t\t}, this.$selectedItem.data());\n\t\t},\n\n\t\tselectByText: function (text) {\n\t\t\tvar $item = $([]);\n\t\t\tthis.$element.find('li').each(function () {\n\t\t\t\tif ((this.textContent || this.innerText || $(this).text() || '').toLowerCase() === (text || '').toLowerCase()) {\n\t\t\t\t\t$item = $(this);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.doSelect($item);\n\t\t},\n\n\t\tselectByValue: function (value) {\n\t\t\tvar selector = 'li[data-value=\"' + value + '\"]';\n\t\t\tthis.selectBySelector(selector);\n\t\t},\n\n\t\tselectByIndex: function (index) {\n\t\t\t// zero-based index\n\t\t\tvar selector = 'li:eq(' + index + ')';\n\t\t\tthis.selectBySelector(selector);\n\t\t},\n\n\t\tselectBySelector: function (selector) {\n\t\t\tvar $item = this.$element.find(selector);\n\t\t\tthis.doSelect($item);\n\t\t},\n\n\t\tsetDefaultSelection: function () {\n\t\t\tvar $item = this.$element.find('li[data-selected=true]').eq(0);\n\n\t\t\tif ($item.length === 0) {\n\t\t\t\t$item = this.$element.find('li').has('a').eq(0);\n\t\t\t}\n\n\t\t\tthis.doSelect($item);\n\t\t},\n\n\t\tenable: function () {\n\t\t\tthis.$element.removeClass('disabled');\n\t\t\tthis.$button.removeClass('disabled');\n\t\t},\n\n\t\tdisable: function () {\n\t\t\tthis.$element.addClass('disabled');\n\t\t\tthis.$button.addClass('disabled');\n\t\t}\n\n\t});\t\n\n\n\tSelectList.prototype.getValue = SelectList.prototype.selectedItem;\n\n\n\n\treturn swt.SelectList = SelectList;\n});\n\ndefine('skylark-widgets-swt/Tabular',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"./swt\",\r\n  \"./Widget\"\r\n],function(langx,browser,eventer,noder,geom,$,swt,Widget){\r\n\r\n    var Tabular = Widget.inherit({\r\n        klassName : \"Tabular\",\r\n\r\n        pluginName : \"lark.tabular\",\r\n\r\n        options : {\r\n            buttonClasses : { \r\n                append: null, \r\n                removeLast: null, \r\n                insert: null, \r\n                remove: null, \r\n                moveUp: null, \r\n                moveDown: null, \r\n                rowDrag: null \r\n            },\r\n            sectionClasses : { \r\n                caption: null, \r\n                header: null, \r\n                body: null, \r\n                subPanel: null, \r\n                footer: null \r\n            },\r\n            hideButtons : { \r\n                append: false, \r\n                removeLast: false, \r\n                insert: false, \r\n                remove: false, \r\n                moveUp: false, \r\n                moveDown: false \r\n            }\r\n\r\n        },\r\n\r\n        _showEmptyMessage : function (settings, skipWidthCalculation) {\r\n            var tbWrap = this._tbWrap;\r\n\r\n            var $emptyCell = $('<td></td>').text(settings._i18n.rowEmpty).attr('colspan', settings._finalColSpan);\r\n            $('table.body tbody', tbWrap).append($('<tr></tr>').addClass('empty').append($emptyCell));\r\n\r\n            /*\r\n            if (!skipWidthCalculation && settings.maxBodyHeight > 0) {\r\n                // Check scrolling enabled\r\n                if (settings.autoColumnWidth) {\r\n                    this._calculateColumnWidth();\r\n                } else {\r\n                    // Set the width of empty message cell to the thead width\r\n                    $emptyCell.width($('table.head', tbWrap).width() - 4);\r\n                }\r\n            }\r\n            */\r\n        },  \r\n\r\n        _calculateColumnWidth : function () {\r\n            var tbWrap = this._tbWrap;\r\n\r\n            var $tbWhole = $('table.body', tbWrap);\r\n            var $scroller = $('div.scroller', tbWrap);\r\n            var settings = $tbWhole.data('appendGrid');\r\n            var tbHeadRow = $('table.head tr.columnHead', tbWrap)[0];\r\n            var tbColGp = $('table.body colgroup', tbWrap)[0];\r\n            // Check any rows within the grid\r\n            if (settings._rowOrder.length > 0) {\r\n                // Reset the table/column width\r\n                $('td', tbHeadRow).width('auto');\r\n                $('col', tbColGp).width('auto');\r\n                $tbWhole.width('auto');\r\n                $scroller.width('auto');\r\n                // Check the total number of columns\r\n                var tbBodyRow = $('tbody tr', $tbWhole)[0];\r\n                var marginThreshold = -2;\r\n                if ($.fn.modal) {\r\n                    // If bootstrap is loaded, cell margin was reset\r\n                    marginThreshold = 1;\r\n                }\r\n                var colLimit = Math.min(tbHeadRow.childNodes.length, tbBodyRow.childNodes.length);\r\n                for (var z = 0; z < colLimit; z++) {\r\n                    var headCellWidth = tbHeadRow.childNodes[z].clientWidth + 1;\r\n                    var bodyCellWidth = tbBodyRow.childNodes[z].clientWidth + marginThreshold;\r\n                    if (bodyCellWidth > headCellWidth) {\r\n                        tbHeadRow.childNodes[z].style.width = bodyCellWidth + 'px';\r\n                    } else {\r\n                        tbColGp.childNodes[z].style.width = headCellWidth + 'px';\r\n                    }\r\n                }\r\n            } else {\r\n                $('table.body,table.foot', tbWrap).width($('table.head').width());\r\n            }\r\n            // Set the width of footer row\r\n            $('table.foot', tbWrap).width($tbWhole.width());\r\n            // Check the scroll panel width\r\n            $scroller.width($tbWhole.width() + $scroller[0].offsetWidth - $scroller[0].clientWidth + 1);\r\n        },\r\n\r\n\r\n        _createGridButton : function (param, uiIcon) {\r\n            // Generate the standard grid action button based on its parameter.\r\n            var genButton = null;\r\n            if (param) {\r\n                if (langx.isFunction(param)) {\r\n                    // Generate button if it is a function.\r\n                    genButton = $(param());\r\n                } else if (param.nodeType) {\r\n                    // Clone the button if it is a DOM element.\r\n                    genButton = $(param).clone();\r\n                } else if (param.icon || param.label) {\r\n                    // Generate jQuery UI Button if it is a plain object with `icon` or `label` property.\r\n                    genButton = $('<button/>').attr({ type: 'button' });\r\n                    genButton.plugin(\"lark.button\",param);\r\n                }\r\n            }\r\n            if (!genButton) {\r\n                // Use default setting (jQuery UI Button) if button is not created.\r\n                genButton = $('<button/>').attr({ type: 'button' });\r\n                genButton.plugin(\"lark.button\",{ icon: uiIcon, showLabel: false });\r\n            }\r\n            return genButton;\r\n        },\r\n\r\n        _sortSequence : function (startIndex) {\r\n            var tbWhole = this._elm;\r\n            var settings = $(tbWhole).data('appendGrid');\r\n            if (!settings.hideRowNumColumn) {\r\n                for (var z = startIndex; z < settings._rowOrder.length; z++) {\r\n                    $('#' + settings.idPrefix + '_Row_' + settings._rowOrder[z] + ' td.first', tbWhole).text(z + 1);\r\n                }\r\n            }\r\n        },\r\n\r\n        _emptyGrid : function () {\r\n            var tbWhole = this._elm;\r\n\r\n            // Load settings\r\n            var settings = $(tbWhole).data('appendGrid');\r\n            // Remove rows\r\n            $('tbody', tbWhole).empty();\r\n            settings._rowOrder.length = 0;\r\n            settings._uniqueIndex = 0;\r\n            // Save setting\r\n            this._saveSetting(settings);\r\n            // Add empty row\r\n            this._showEmptyMessage(settings);\r\n        },        \r\n\r\n        _gridRowDragged : function (isMoveUp, uniqueIndex, tbRowIndex) {\r\n            var tbWhole = this._elm;\r\n\r\n            // Get setting\r\n            var settings = $(tbWhole).data('appendGrid');\r\n            // Find the start sorting index\r\n            var startIndex = -1;\r\n            for (var z = 0; z < settings._rowOrder.length; z++) {\r\n                if (settings._rowOrder[z] == uniqueIndex) {\r\n                    if (isMoveUp) {\r\n                        startIndex = tbRowIndex;\r\n                        settings._rowOrder.splice(z, 1);\r\n                        settings._rowOrder.splice(tbRowIndex, 0, uniqueIndex);\r\n                    } else {\r\n                        startIndex = z;\r\n                        settings._rowOrder.splice(tbRowIndex + 1, 0, uniqueIndex);\r\n                        settings._rowOrder.splice(z, 1);\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n            // Do re-order\r\n            this._sortSequence( startIndex);\r\n            // Save setting\r\n            this._saveSetting(settings);\r\n\r\n            // Trigger event\r\n            if (langx.isFunction(settings.afterRowDragged)) {\r\n                settings.afterRowDragged(tbWhole, tbRowIndex, uniqueIndex);\r\n            }\r\n        },\r\n\r\n       _saveSetting : function (settings) {\r\n            var tbWhole = this._elm;\r\n\r\n            $(tbWhole).data('appendGrid', settings);\r\n            $('#' + settings.idPrefix + '_rowOrder', tbWhole).val(settings._rowOrder.join());\r\n        },\r\n\r\n\r\n        _checkGridAndGetSettings : function (noMsg) {\r\n            // Check the jQuery grid object is initialized and return its settings\r\n\r\n            var settings = null,\r\n                $grid = $(this._elm);\r\n\r\n            if ($grid.length == 1) {\r\n                settings = $grid.data('appendGrid');\r\n                if (!settings && !noMsg) {\r\n                    alert(_systemMessages.notInit);\r\n                }\r\n            } else if (!noMsg) {\r\n                alert(_systemMessages.getValueMultiGrid);\r\n            }\r\n            return settings;\r\n        },\r\n\r\n        _insertRow : function (numOfRowOrRowArray, rowIndex, callerUniqueIndex) {\r\n            // Define variables\r\n            var self = this,\r\n                tbWhole = this._elm;\r\n            var settings = $(tbWhole).data('appendGrid');\r\n            var addedRows = [], parentIndex = null, uniqueIndex, ctrl, hidden = [];\r\n            var tbHead = tbWhole.getElementsByTagName('thead')[0];\r\n            var tbBody = tbWhole.getElementsByTagName('tbody')[0];\r\n            var tbRow, tbSubRow = null, tbCell, reachMaxRow = false, calColWidth = false;\r\n            var oldHeight = 0, oldScroll = 0;\r\n            /*\r\n            if (settings.maxBodyHeight > 0) {\r\n                tbHead = $('#' + settings._wrapperId + ' table thead')[0];\r\n            }\r\n            */\r\n            // Check number of row to be inserted\r\n            var numOfRow = numOfRowOrRowArray, loadData = false;\r\n            if (langx.isArray(numOfRowOrRowArray)) {\r\n                numOfRow = numOfRowOrRowArray.length;\r\n                loadData = true;\r\n            }\r\n            // Check parent row\r\n            if (langx.isNumeric(callerUniqueIndex)) {\r\n                for (var z = 0; z < settings._rowOrder.length; z++) {\r\n                    if (settings._rowOrder[z] == callerUniqueIndex) {\r\n                        rowIndex = z;\r\n                        if (z != 0) parentIndex = z - 1;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else if (langx.isNumeric(rowIndex)) {\r\n                if (rowIndex >= settings._rowOrder.length) {\r\n                    rowIndex = null;\r\n                } else {\r\n                    parentIndex = rowIndex - 1;\r\n                }\r\n            }\r\n            else if (settings._rowOrder.length != 0) {\r\n                rowIndex = null;\r\n                parentIndex = settings._rowOrder.length - 1;\r\n            }\r\n            // Store old grid height\r\n            if (settings.maintainScroll && !langx.isNumeric(rowIndex)) {\r\n                oldHeight = $(tbWhole).height();\r\n                oldScroll = $(tbWhole).scrollParent().scrollTop();\r\n            }\r\n            // Remove empty row\r\n            if (settings._rowOrder.length == 0) {\r\n                $('tr.empty', tbWhole).remove();\r\n                calColWidth = true;\r\n            }\r\n            // Add total number of row\r\n            for (var z = 0; z < numOfRow; z++) {\r\n                // Check maximum number of rows\r\n                if (0 < settings.maxRowsAllowed && settings._rowOrder.length >= settings.maxRowsAllowed) {\r\n                    reachMaxRow = true;\r\n                    break;\r\n                }\r\n                // Update variables\r\n                settings._uniqueIndex++;\r\n                uniqueIndex = settings._uniqueIndex;\r\n                hidden.length = 0;\r\n                // Check row insert index\r\n                if (langx.isNumeric(rowIndex)) {\r\n                    settings._rowOrder.splice(rowIndex, 0, uniqueIndex);\r\n                    if (settings.useSubPanel) {\r\n                        tbBody.insertBefore(tbSubRow = document.createElement('tr'), tbBody.childNodes[rowIndex * 2]);\r\n                        tbBody.insertBefore(tbRow = document.createElement('tr'), tbBody.childNodes[rowIndex * 2]);\r\n                    } else {\r\n                        tbBody.insertBefore(tbRow = document.createElement('tr'), tbBody.childNodes[rowIndex]);\r\n                    }\r\n                    addedRows.push(rowIndex);\r\n                }\r\n                else {\r\n                    settings._rowOrder.push(uniqueIndex);\r\n                    tbBody.appendChild(tbRow = document.createElement('tr'));\r\n                    if (settings.useSubPanel) {\r\n                        tbBody.appendChild(tbSubRow = document.createElement('tr'));\r\n                    }\r\n                    addedRows.push(settings._rowOrder.length - 1);\r\n                }\r\n                tbRow.id = settings.idPrefix + '_Row_' + uniqueIndex;\r\n                if (settings._sectionClasses.body) {\r\n                    tbRow.className = settings._sectionClasses.body;\r\n                }\r\n                $(tbRow).data('appendGrid', uniqueIndex);\r\n                // Config on the sub panel row\r\n                if (tbSubRow != null) {\r\n                    tbSubRow.id = settings.idPrefix + '_SubRow_' + uniqueIndex;\r\n                    $(tbSubRow).data('appendGrid', uniqueIndex);\r\n                    if (settings._sectionClasses.subPanel) {\r\n                        tbSubRow.className = settings._sectionClasses.subPanel;\r\n                    }\r\n                }\r\n                // Add row number\r\n                if (!settings.hideRowNumColumn) {\r\n                    tbRow.appendChild(tbCell = document.createElement('td'));\r\n                    $(tbCell).addClass('ui-widget-content first').text(settings._rowOrder.length);\r\n                    if (settings.useSubPanel) tbCell.rowSpan = 2;\r\n                }\r\n                // Process on each columns\r\n                for (var y = 0; y < settings.columns.length; y++) {\r\n                    // Skip hidden\r\n                    if (settings.columns[y].type == 'hidden') {\r\n                        hidden.push(y);\r\n                        continue;\r\n                    }\r\n                    // Check column invisble\r\n                    var className = 'ui-widget-content';\r\n                    if (settings.columns[y].invisible) className += ' invisible';\r\n                    // Insert cell\r\n                    tbRow.appendChild(tbCell = document.createElement('td'));\r\n                    tbCell.id = settings.idPrefix + '_' + settings.columns[y].name + '_td_' + uniqueIndex;\r\n                    tbCell.className = className;\r\n                    if (settings.columns[y].cellCss != null) $(tbCell).css(settings.columns[y].cellCss);\r\n                    // Prepare control id and name\r\n                    var ctrlId = settings.idPrefix + '_' + settings.columns[y].name + '_' + uniqueIndex, ctrlName;\r\n                    if (langx.isFunction(settings.nameFormatter)) {\r\n                        ctrlName = settings.nameFormatter(settings.idPrefix, settings.columns[y].name, uniqueIndex);\r\n                    } else {\r\n                        ctrlName = ctrlId;\r\n                    }\r\n                    // Check control type\r\n                    ctrl = null;\r\n                    if (settings.columns[y].type == 'custom') {\r\n                        if (langx.isFunction(settings.columns[y].customBuilder)) {\r\n                            ctrl = settings.columns[y].customBuilder(tbCell, settings.idPrefix, settings.columns[y].name, uniqueIndex);\r\n                        }\r\n                    } else if (settings.columns[y].type == 'select' || settings.columns[y].type == 'ui-selectmenu') {\r\n                        ctrl = document.createElement('select');\r\n                        ctrl.id = ctrlId;\r\n                        ctrl.name = ctrlName;\r\n                        // Build option list\r\n                        if (langx.isArray(settings.columns[y].ctrlOptions)) {\r\n                            // For array type option list\r\n                            if (settings.columns[y].ctrlOptions.length > 0) {\r\n                                if (langx.isPlainObject(settings.columns[y].ctrlOptions[0])) {\r\n                                    // Check to generate optGroup or not\r\n                                    var lastGroupName = null, lastGroupElem = null;\r\n                                    for (var x = 0; x < settings.columns[y].ctrlOptions.length; x++) {\r\n                                        if (!isEmpty(settings.columns[y].ctrlOptions[x].group)) {\r\n                                            if (lastGroupName != settings.columns[y].ctrlOptions[x].group) {\r\n                                                lastGroupName = settings.columns[y].ctrlOptions[x].group;\r\n                                                lastGroupElem = document.createElement('optgroup');\r\n                                                lastGroupElem.label = lastGroupName;\r\n                                                ctrl.appendChild(lastGroupElem);\r\n                                            }\r\n                                        } else {\r\n                                            lastGroupElem = null;\r\n                                        }\r\n                                        var option = $('<option/>').val(settings.columns[y].ctrlOptions[x].value).text(settings.columns[y].ctrlOptions[x].label);\r\n                                        if (!isEmpty(settings.columns[y].ctrlOptions[x].title)) {\r\n                                            option.attr('title', settings.columns[y].ctrlOptions[x].title);\r\n                                        }\r\n                                        if (null == lastGroupElem) {\r\n                                            option.appendTo(ctrl);\r\n                                        }\r\n                                        else {\r\n                                            option.appendTo(lastGroupElem);\r\n                                        }\r\n                                        // ctrl.options[ctrl.options.length] = new Option(settings.columns[y].ctrlOptions[x].label, settings.columns[y].ctrlOptions[x].value);\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    for (var x = 0; x < settings.columns[y].ctrlOptions.length; x++) {\r\n                                        ctrl.options[ctrl.options.length] = new Option(settings.columns[y].ctrlOptions[x], settings.columns[y].ctrlOptions[x]);\r\n                                    }\r\n                                }\r\n                            }\r\n                        } else if (langx.isPlainObject(settings.columns[y].ctrlOptions)) {\r\n                            // For plain object type option list\r\n                            for (var x in settings.columns[y].ctrlOptions) {\r\n                                ctrl.options[ctrl.options.length] = new Option(settings.columns[y].ctrlOptions[x], x);\r\n                            }\r\n                        } else if (typeof (settings.columns[y].ctrlOptions) == 'string') {\r\n                            // For string type option list\r\n                            var arrayOpt = settings.columns[y].ctrlOptions.split(';');\r\n                            for (var x = 0; x < arrayOpt.length; x++) {\r\n                                var eqIndex = arrayOpt[x].indexOf(':');\r\n                                if (-1 == eqIndex) {\r\n                                    ctrl.options[ctrl.options.length] = new Option(arrayOpt[x], arrayOpt[x]);\r\n                                } else {\r\n                                    ctrl.options[ctrl.options.length] = new Option(arrayOpt[x].substring(eqIndex + 1, arrayOpt[x].length), arrayOpt[x].substring(0, eqIndex));\r\n                                }\r\n                            }\r\n                        } else if (langx.isFunction(settings.columns[y].ctrlOptions)) {\r\n                            settings.columns[y].ctrlOptions(ctrl);\r\n                        }\r\n                        tbCell.appendChild(ctrl);\r\n                        // Handle UI widget\r\n                        if (settings.columns[y].type == 'ui-selectmenu') {\r\n                            $(ctrl).selectmenu(settings.columns[y].uiOption);\r\n                        }\r\n                    }\r\n                    else if (settings.columns[y].type == 'checkbox') {\r\n                        ctrl = document.createElement('input');\r\n                        ctrl.type = 'checkbox';\r\n                        ctrl.id = ctrlId;\r\n                        ctrl.name = ctrlName;\r\n                        ctrl.value = 1;\r\n                        tbCell.appendChild(ctrl);\r\n                        tbCell.style.textAlign = 'center';\r\n                    }\r\n                    else if (settings.columns[y].type == 'textarea') {\r\n                        ctrl = document.createElement('textarea');\r\n                        ctrl.id = ctrlId;\r\n                        ctrl.name = ctrlName;\r\n                        tbCell.appendChild(ctrl);\r\n                    }\r\n                    else if (-1 != settings.columns[y].type.search(/^(color|date|datetime|datetime\\-local|email|month|number|range|search|tel|time|url|week)$/)) {\r\n                        ctrl = document.createElement('input');\r\n                        try {\r\n                            ctrl.type = settings.columns[y].type;\r\n                        }\r\n                        catch (err) { /* Not supported type */ }\r\n                        ctrl.id = ctrlId;\r\n                        ctrl.name = ctrlName;\r\n                        tbCell.appendChild(ctrl);\r\n                    }\r\n                    else {\r\n                        // Generate text input\r\n                        ctrl = document.createElement('input');\r\n                        ctrl.type = 'text';\r\n                        ctrl.id = ctrlId;\r\n                        ctrl.name = ctrlName;\r\n                        tbCell.appendChild(ctrl);\r\n                        // Handle UI widget\r\n                        if (settings.columns[y].type == 'ui-datepicker') {\r\n                            $(ctrl).datepicker(settings.columns[y].uiOption);\r\n                        } else if (settings.columns[y].type == 'ui-spinner') {\r\n                            $(ctrl).spinner(settings.columns[y].uiOption);\r\n                        } else if (settings.columns[y].type == 'ui-autocomplete') {\r\n                            $(ctrl).autocomplete(settings.columns[y].uiOption);\r\n                        }\r\n                    }\r\n                    // Add extra control properties\r\n                    if (settings.columns[y].type != 'custom') {\r\n                        // Add control attributes as needed\r\n                        if (settings.columns[y].ctrlAttr != null) $(ctrl).attr(settings.columns[y].ctrlAttr);\r\n                        // Add control properties as needed\r\n                        if (settings.columns[y].ctrlProp != null) $(ctrl).prop(settings.columns[y].ctrlProp);\r\n                        // Add control CSS as needed\r\n                        if (settings.columns[y].ctrlCss != null) $(ctrl).css(settings.columns[y].ctrlCss);\r\n                        // Add control class as needed\r\n                        if (settings.columns[y].ctrlClass != null) $(ctrl).addClass(settings.columns[y].ctrlClass);\r\n                        // Add jQuery UI tooltip as needed\r\n                        if (settings.columns[y].uiTooltip) $(ctrl).tooltip(settings.columns[y].uiTooltip);\r\n                        // Add control events as needed\r\n                        if (langx.isFunction(settings.columns[y].onClick)) {\r\n                            $(ctrl).click({ caller: tbWhole, callback: settings.columns[y].onClick, uniqueIndex: uniqueIndex }, function (evt) {\r\n                                evt.data.callback(evt, $(evt.data.caller).appendGrid('getRowIndex', evt.data.uniqueIndex));\r\n                            });\r\n                        }\r\n                        if (langx.isFunction(settings.columns[y].onChange)) {\r\n                            $(ctrl).change({ caller: tbWhole, callback: settings.columns[y].onChange, uniqueIndex: uniqueIndex }, function (evt) {\r\n                                evt.data.callback(evt, $(evt.data.caller).plugin(\"lark.tabular\").getRowIndex(evt.data.uniqueIndex));\r\n                            });\r\n                        }\r\n                    }\r\n                    if (loadData) {\r\n                        // Load data if needed\r\n                        setCtrlValue(settings, y, uniqueIndex, numOfRowOrRowArray[z][settings.columns[y].name]);\r\n                    } else if (!isEmpty(settings.columns[y].value)) {\r\n                        // Set default value\r\n                        setCtrlValue(settings, y, uniqueIndex, settings.columns[y].value);\r\n                    }\r\n                }\r\n                // Add button cell if needed\r\n                if (!settings._hideLastColumn || settings.columns.length > settings._visibleCount) {\r\n                    if (!settings.rowButtonsInFront) {\r\n                        tbRow.appendChild(tbCell = document.createElement('td'));\r\n                    } else if (!settings.hideRowNumColumn) {\r\n                        tbRow.insertBefore(tbCell = document.createElement('td'), tbRow.childNodes[1]);\r\n                    } else {\r\n                        tbRow.insertBefore(tbCell = document.createElement('td'), tbRow.firstChild);\r\n                    }\r\n                    tbCell.className = 'ui-widget-content last';\r\n                    tbCell.id = settings.idPrefix + '_last_td_' + uniqueIndex;\r\n                    if (settings._hideLastColumn) tbCell.style.display = 'none';\r\n                    // Add standard buttons\r\n                    if (!settings.hideButtons.insert) {\r\n                        var button = this._createGridButton(settings.customGridButtons.insert, 'ui-icon-arrowreturnthick-1-w')\r\n                            .attr({ id: settings.idPrefix + '_Insert_' + uniqueIndex, title: settings._i18n.insert, tabindex: -1 })\r\n                            .addClass('insert').data('appendGrid', { uniqueIndex: uniqueIndex })\r\n                            .click(function (evt) {\r\n                                var rowUniqueIndex = $(this).data('appendGrid').uniqueIndex;\r\n                                $(tbWhole).plugin(\"lark.tabular\").insertRow(1, null, rowUniqueIndex);\r\n                                if (evt && evt.preventDefault) evt.preventDefault(settings._buttonClasses.insert);\r\n                                return false;\r\n                            }).appendTo(tbCell);\r\n                        if (!isEmpty(settings._buttonClasses.insert)) button.addClass(settings._buttonClasses.insert);\r\n                    }\r\n                    if (!settings.hideButtons.remove) {\r\n                        var button = this._createGridButton(settings.customGridButtons.remove, 'ui-icon-trash')\r\n                            .attr({ id: settings.idPrefix + '_Delete_' + uniqueIndex, title: settings._i18n.remove, tabindex: -1 })\r\n                            .addClass('remove').data('appendGrid', { uniqueIndex: uniqueIndex })\r\n                            .click(function (evt) {\r\n                                var rowUniqueIndex = $(this).data('appendGrid').uniqueIndex;\r\n                                self._removeRow( null, rowUniqueIndex, false);\r\n                                if (evt && evt.preventDefault) evt.preventDefault();\r\n                                return false;\r\n                            }).appendTo(tbCell);\r\n                        if (!isEmpty(settings._buttonClasses.remove)) button.addClass(settings._buttonClasses.remove);\r\n                    }\r\n                    if (!settings.hideButtons.moveUp) {\r\n                        var button = this._createGridButton(settings.customGridButtons.moveUp, 'ui-icon-arrowthick-1-n')\r\n                            .attr({ id: settings.idPrefix + '_MoveUp_' + uniqueIndex, title: settings._i18n.moveUp, tabindex: -1 })\r\n                            .addClass('moveUp').data('appendGrid', { uniqueIndex: uniqueIndex })\r\n                            .click(function (evt) {\r\n                                var rowUniqueIndex = $(this).data('appendGrid').uniqueIndex;\r\n                                $(tbWhole).plugin(\"lark.tabular\").moveUpRow(null, rowUniqueIndex);\r\n                                if (evt && evt.preventDefault) evt.preventDefault();\r\n                                return false;\r\n                            }).appendTo(tbCell);\r\n                        if (!isEmpty(settings._buttonClasses.moveUp)) button.addClass(settings._buttonClasses.moveUp);\r\n                    }\r\n                    if (!settings.hideButtons.moveDown) {\r\n                        var button = this._createGridButton(settings.customGridButtons.moveDown, 'ui-icon-arrowthick-1-s')\r\n                            .attr({ id: settings.idPrefix + '_MoveDown_' + uniqueIndex, title: settings._i18n.moveDown, tabindex: -1 })\r\n                            .addClass('moveDown').data('appendGrid', { uniqueIndex: uniqueIndex })\r\n                            .click(function (evt) {\r\n                                var rowUniqueIndex = $(this).data('appendGrid').uniqueIndex;\r\n                                $(tbWhole).plugin(\"lark.tabular\").moveDownRow(null, rowUniqueIndex);\r\n                                if (evt && evt.preventDefault) evt.preventDefault();\r\n                                return false;\r\n                            }).appendTo(tbCell);\r\n                        if (!isEmpty(settings._buttonClasses.moveDown)) button.addClass(settings._buttonClasses.moveDown);\r\n                    }\r\n                    // Handle row dragging\r\n                    if (settings.rowDragging) {\r\n                        var button = $('<div/>').addClass('rowDrag ui-state-default ui-corner-all')\r\n                            .attr('title', settings._i18n.rowDrag).append($('<div/>').addClass('ui-icon ui-icon-caret-2-n-s').append($('<span/>').addClass('ui-button-text').text('Drag')))\r\n                            .appendTo(tbCell);\r\n                        if (!isEmpty(settings._buttonClasses.rowDrag)) button.addClass(settings._buttonClasses.rowDrag);\r\n                    }\r\n                    // Add hidden\r\n                    for (var y = 0; y < hidden.length; y++) {\r\n                        ctrl = document.createElement('input');\r\n                        ctrl.id = settings.idPrefix + '_' + settings.columns[hidden[y]].name + '_' + uniqueIndex;\r\n                        if (langx.isFunction(settings.nameFormatter)) {\r\n                            ctrl.name = settings.nameFormatter(settings.idPrefix, settings.columns[y].name, uniqueIndex);\r\n                        } else {\r\n                            ctrl.name = ctrl.id;\r\n                        }\r\n                        ctrl.type = 'hidden';\r\n\r\n                        if (loadData) {\r\n                            // Load data if needed\r\n                            ctrl.value = numOfRowOrRowArray[z][settings.columns[hidden[y]].name];\r\n                        } else if (!isEmpty(settings.columns[hidden[y]].value)) {\r\n                            // Set default value\r\n                            ctrl.value = settings.columns[hidden[y]].value;\r\n                        }\r\n                        tbCell.appendChild(ctrl);\r\n                    }\r\n                    // Add extra buttons\r\n                    if (settings.customRowButtons && settings.customRowButtons.length) {\r\n                        // Add front buttons\r\n                        for (var y = settings.customRowButtons.length - 1; y >= 0; y--) {\r\n                            var buttonCfg = settings.customRowButtons[y];\r\n                            if (buttonCfg && buttonCfg.uiButton && buttonCfg.click && buttonCfg.atTheFront) {\r\n                                $(tbCell).prepend(makeCustomRowButton(tbWhole, buttonCfg, uniqueIndex));\r\n                            }\r\n                        }\r\n                        // Add end buttons\r\n                        for (var y = 0; y < settings.customRowButtons.length; y++) {\r\n                            var buttonCfg = settings.customRowButtons[y];\r\n                            if (buttonCfg && buttonCfg.uiButton && buttonCfg.click && !buttonCfg.atTheFront) {\r\n                                $(tbCell).append(makeCustomRowButton(tbWhole, buttonCfg, uniqueIndex));\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                // Create sub panel\r\n                if (settings.useSubPanel) {\r\n                    tbSubRow.appendChild(tbCell = document.createElement('td'));\r\n                    tbCell.className = 'ui-widget-content';\r\n                    tbCell.colSpan = settings._visibleCount + (settings._hideLastColumn ? 0 : 1);\r\n                    if (langx.isFunction(settings.subPanelBuilder)) {\r\n                        settings.subPanelBuilder(tbCell, uniqueIndex);\r\n                    }\r\n                }\r\n            }\r\n            // Check if re-calculate column width is required\r\n            /*\r\n            if (0 < settings.maxBodyHeight && settings._calculateWidth && !calColWidth) {\r\n                var scroll = $('#' + settings._wrapperId + '>div.scroller')[0];\r\n                if (scroll.scrollHeight > scroll.offsetHeight) {\r\n                    calColWidth = true;\r\n                    settings._calculateWidth = false;\r\n                }\r\n            }\r\n            */\r\n            // Save setting\r\n            this._saveSetting(settings);\r\n            // Calculate column width\r\n            /*\r\n            if (calColWidth && settings.autoColumnWidth && settings.maxBodyHeight > 0) {\r\n                this._calculateColumnWidth();\r\n            }\r\n            */\r\n            // Trigger events\r\n            if (langx.isNumeric(rowIndex)) {\r\n                if (langx.isFunction(settings.afterRowInserted)) {\r\n                    settings.afterRowInserted(tbWhole, parentIndex, addedRows);\r\n                }\r\n            }\r\n            else {\r\n                if (langx.isFunction(settings.afterRowAppended)) {\r\n                    settings.afterRowAppended(tbWhole, parentIndex, addedRows);\r\n                }\r\n            }\r\n            if (reachMaxRow && langx.isFunction(settings.maxNumRowsReached)) {\r\n                settings.maxNumRowsReached();\r\n            }\r\n            // Scroll the page when append row\r\n            if (settings.maintainScroll && !langx.isNumeric(rowIndex)) {\r\n                // Try to maintain the height so that user no need to scroll every time when row added\r\n                var newHeight = $(tbWhole).height();\r\n                $(tbWhole).scrollParent().scrollTop(oldScroll + newHeight - oldHeight);\r\n            }\r\n            // Return added rows' uniqueIndex\r\n            return { addedRows: addedRows, parentIndex: parentIndex, rowIndex: rowIndex };\r\n        },\r\n\r\n        _removeRow : function (rowIndex, uniqueIndex, force) {\r\n            var tbWhole = this._elm;\r\n\r\n            var settings = $(tbWhole).data('appendGrid');\r\n            var tbBody = tbWhole.getElementsByTagName('tbody')[0];\r\n            if (langx.isNumeric(uniqueIndex)) {\r\n                for (var z = 0; z < settings._rowOrder.length; z++) {\r\n                    if (settings._rowOrder[z] == uniqueIndex) {\r\n                        rowIndex = z;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (langx.isNumeric(rowIndex)) {\r\n                // Remove middle row\r\n                if (force || typeof (settings.beforeRowRemove) != 'function' || settings.beforeRowRemove(tbWhole, rowIndex)) {\r\n                    settings._rowOrder.splice(rowIndex, 1);\r\n                    if (settings.useSubPanel) {\r\n                        tbBody.removeChild(tbBody.childNodes[rowIndex * 2]);\r\n                        tbBody.removeChild(tbBody.childNodes[rowIndex * 2]);\r\n                    } else {\r\n                        tbBody.removeChild(tbBody.childNodes[rowIndex]);\r\n                    }\r\n                    // Save setting\r\n                    this._saveSetting(settings);\r\n                    // Sort sequence\r\n                    this._sortSequence( rowIndex);\r\n                    // Trigger event\r\n                    if (langx.isFunction(settings.afterRowRemoved)) {\r\n                        settings.afterRowRemoved(tbWhole, rowIndex);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // Store old window scroll value\r\n                var oldHeight = 0, oldScroll = 0;\r\n                if (settings.maintainScroll) {\r\n                    oldHeight = $(tbWhole).height();\r\n                    oldScroll = $(tbWhole).scrollParent().scrollTop();\r\n                }\r\n                // Remove last row\r\n                if (force || !langx.isFunction(settings.beforeRowRemove) || settings.beforeRowRemove(tbWhole, settings._rowOrder.length - 1)) {\r\n                    uniqueIndex = settings._rowOrder.pop();\r\n                    tbBody.removeChild(tbBody.lastChild);\r\n                    if (settings.useSubPanel) {\r\n                        tbBody.removeChild(tbBody.lastChild);\r\n                    }\r\n                    // Save setting\r\n                    this._saveSetting(settings);\r\n                    // Trigger event\r\n                    if (langx.isFunction(settings.afterRowRemoved)) {\r\n                        settings.afterRowRemoved(tbWhole, null);\r\n                    }\r\n                }\r\n                // Scroll the page when append row\r\n                if (settings.maintainScroll) {\r\n                    // Try to maintain the height so that user no need to scroll every time when row added\r\n                    var newHeight = $(tbWhole).height();\r\n                    $(tbWhole).scrollParent().scrollTop(oldScroll + newHeight - oldHeight);\r\n                }\r\n            }\r\n            // Add empty row\r\n            if (settings._rowOrder.length == 0) {\r\n                this._showEmptyMessage(settings);\r\n            }\r\n        },\r\n\r\n        _loadData : function (records, isInit) {\r\n            var tbWhole = this._elm;\r\n            var tbBody, tbRow, tbCell, uniqueIndex, insertResult;\r\n            var settings = $(tbWhole).data('appendGrid');\r\n            if (settings) {\r\n                // Clear existing content\r\n                tbBody = tbWhole.getElementsByTagName('tbody')[0];\r\n                $(tbBody).empty();\r\n                settings._rowOrder.length = 0;\r\n                settings._uniqueIndex = 0;\r\n                // Check any records\r\n                if (records != null && records.length) {\r\n                    // Add rows\r\n                    insertResult = this._insertRow(records.length, null, null);\r\n                    // Set data\r\n                    for (var r = 0; r < insertResult.addedRows.length; r++) {\r\n                        for (var c = 0; c < settings.columns.length; c++) {\r\n                            setCtrlValue(settings, c, settings._rowOrder[r], records[r][settings.columns[c].name]);\r\n                        }\r\n                        if (langx.isFunction(settings.rowDataLoaded)) {\r\n                            settings.rowDataLoaded(tbWhole, records[r], r, settings._rowOrder[r]);\r\n                        }\r\n                    }\r\n                }\r\n                // Save setting\r\n                settings._isDataLoaded = true;\r\n                if (isInit) settings.initData = null;\r\n                $(tbWhole).data('appendGrid', settings);\r\n                // Trigger data loaded event\r\n                if (langx.isFunction(settings.dataLoaded)) {\r\n                    settings.dataLoaded(tbWhole, records);\r\n                }\r\n            }\r\n        },\r\n\r\n        _init: function () {\r\n            var options = this.options,\r\n                self = this;\r\n            // Check mandatory paramters included\r\n            if (!langx.isArray(options.columns) || options.columns.length == 0) {\r\n                alert(_systemMessages.noColumnInfo);\r\n            }\r\n            // Check target element is table or not\r\n            var tbWhole = this._elm, tbWrap, tbHead, tbBody, tbFoot, tbColGp, tbRow, tbCell;\r\n            if (isEmpty(tbWhole.tagName) || tbWhole.tagName != 'TABLE') {\r\n                alert(_systemMessages.elemNotTable);\r\n            }\r\n            // Generate settings\r\n            var settings = langx.extend({}, _defaultInitOptions, _defaultCallbackContainer, options);\r\n            // Add internal settings\r\n            langx.extend(settings, {\r\n                // The UniqueIndex accumulate counter\r\n                _uniqueIndex: 0,\r\n                // The row order array\r\n                _rowOrder: [],\r\n                // Indicate data is loaded or not\r\n                _isDataLoaded: false,\r\n                // Visible column count for internal calculation\r\n                _visibleCount: 0,\r\n                // Total colSpan count after excluding `hideRowNumColumn` and not generating last column\r\n                _finalColSpan: 0,\r\n                // Indicate to hide last column or not\r\n                _hideLastColumn: false,\r\n                // The element ID of the `appendGrid` wrapper\r\n                _wrapperId: null,\r\n                // \r\n                _calculateWidth: true\r\n            });\r\n            // Labels or messages used in grid\r\n            if (langx.isPlainObject(options.i18n))\r\n                settings._i18n = langx.extend({}, _defaultTextResources, options.i18n);\r\n            else\r\n                settings._i18n = langx.extend({}, _defaultTextResources);\r\n            // The extra class names for buttons\r\n            if (langx.isPlainObject(options.buttonClasses))\r\n                settings._buttonClasses = langx.extend({}, _defaultButtonClasses, options.buttonClasses);\r\n            else\r\n                settings._buttonClasses = langx.extend({}, _defaultButtonClasses);\r\n            // The extra class names for sections\r\n            if (langx.isPlainObject(options.sectionClasses))\r\n                settings._sectionClasses = langx.extend({}, _defaultSectionClasses, options.sectionClasses);\r\n            else\r\n                settings._sectionClasses = langx.extend({}, _defaultSectionClasses);\r\n            // Make sure the `hideButtons` setting defined\r\n            if (langx.isPlainObject(options.hideButtons))\r\n                settings.hideButtons = langx.extend({}, _defaultHideButtons, options.hideButtons);\r\n            else\r\n                settings.hideButtons = langx.extend({}, _defaultHideButtons);\r\n            // Check `idPrefix` is defined\r\n            if (isEmpty(settings.idPrefix)) {\r\n                // Check table ID defined\r\n                if (isEmpty(tbWhole.id) || tbWhole.id == '') {\r\n                    // Generate an ID using current time\r\n                    settings.idPrefix = 'ag' + new Date().getTime();\r\n                }\r\n                else {\r\n                    settings.idPrefix = tbWhole.id;\r\n                }\r\n            }\r\n            // Check custom grid button parameters\r\n            if (!langx.isPlainObject(settings.customGridButtons)) {\r\n                settings.customGridButtons = {};\r\n            }\r\n            // Check rowDragging and useSubPanel option\r\n            if (settings.useSubPanel && settings.rowDragging) {\r\n                settings.rowDragging = false;\r\n            }\r\n            // Create thead and tbody\r\n            tbHead = document.createElement('thead');\r\n            tbHead.className = 'ui-widget-header';\r\n            tbBody = document.createElement('tbody');\r\n            tbBody.className = 'ui-widget-content';\r\n            tbFoot = document.createElement('tfoot');\r\n            tbFoot.className = 'ui-widget-header';\r\n            tbColGp = document.createElement('colgroup');\r\n            // Prepare the table element\r\n            settings._wrapperId = settings.idPrefix + '-wrapper';\r\n            tbWrap = this._tbWrap = document.createElement('div');\r\n            $(tbWrap).attr('id', settings._wrapperId).addClass('appendGrid').insertAfter(tbWhole);\r\n            $(tbWhole).empty().addClass('ui-widget').appendTo(tbWrap);\r\n            // Check if content scrolling is enabled\r\n            /*\r\n            if (settings.maxBodyHeight > 0) {\r\n                // Seperate the thead and tfoot from source table\r\n                $('<table></table>').addClass('ui-widget head').append(tbHead).prependTo(tbWrap);\r\n                $(tbWhole).addClass('body').wrap($('<div></div>').addClass('scroller').css('max-height', settings.maxBodyHeight)).append(tbColGp, tbBody);\r\n                $('<table></table>').addClass('ui-widget foot').append(tbFoot).appendTo(tbWrap);\r\n            } else {\r\n                // Add thead, tbody and tfoot to the same table\r\n                $(tbWhole).addClass('head body foot').append(tbColGp, tbHead, tbBody, tbFoot);\r\n            }\r\n            */\r\n            // Add thead, tbody and tfoot to the same table\r\n            $(tbWhole).addClass('head body foot').append(tbColGp, tbHead, tbBody, tbFoot);\r\n\r\n            // Handle header row\r\n            var tbHeadCellRowNum, tbHeadCellRowButton;\r\n            tbHead.appendChild(tbRow = document.createElement('tr'));\r\n            if (settings._sectionClasses.header) {\r\n                tbRow.className = 'columnHead ' + settings._sectionClasses.header;\r\n            } else {\r\n                tbRow.className = 'columnHead';\r\n            }\r\n            if (!settings.hideRowNumColumn) {\r\n                tbRow.appendChild(tbHeadCellRowNum = document.createElement('td'));\r\n                tbHeadCellRowNum.className = 'ui-widget-header first';\r\n                // Add column group for scrolling\r\n                tbColGp.appendChild(document.createElement('col'));\r\n            }\r\n            // Prepare column information and add column header\r\n            var pendingSkipCol = 0;\r\n            for (var z = 0; z < settings.columns.length; z++) {\r\n                // Assign default setting\r\n                var columnOpt = langx.extend({}, _defaultColumnOptions, settings.columns[z]);\r\n                settings.columns[z] = columnOpt;\r\n                // Skip hidden\r\n                if (settings.columns[z].type != 'hidden') {\r\n                    // Check column is invisible\r\n                    if (!settings.columns[z].invisible) {\r\n                        settings._visibleCount++;\r\n                    }\r\n                    // Check skip header colSpan\r\n                    if (pendingSkipCol == 0) {\r\n                        var className = 'ui-widget-header';\r\n                        if (settings.columns[z].invisible) className += ' invisible';\r\n                        if (settings.columns[z].resizable) className += ' resizable';\r\n                        tbRow.appendChild(tbCell = document.createElement('td'));\r\n                        tbCell.id = settings.idPrefix + '_' + settings.columns[z].name + '_td_head';\r\n                        tbCell.className = className;\r\n                        if (settings.columns[z].displayCss) $(tbCell).css(settings.columns[z].displayCss);\r\n                        if (settings.columns[z].headerSpan > 1) {\r\n                            $(tbCell).attr('colSpan', settings.columns[z].headerSpan);\r\n                            pendingSkipCol = settings.columns[z].headerSpan - 1;\r\n                        }\r\n                        // Add tooltip\r\n                        if (langx.isPlainObject(settings.columns[z].displayTooltip)) {\r\n                            $(tbCell).tooltip(settings.columns[z].displayTooltip);\r\n                        }\r\n                        else if (!isEmpty(settings.columns[z].displayTooltip)) {\r\n                            $(tbCell).attr('title', settings.columns[z].displayTooltip).tooltip();\r\n                        }\r\n                        // Check to set display text or generate by function\r\n                        if (langx.isFunction(settings.columns[z].display)) {\r\n                            settings.columns[z].display(tbCell);\r\n                        } else if (!isEmpty(settings.columns[z].display)) {\r\n                            $(tbCell).text(settings.columns[z].display);\r\n                        }\r\n                        // Add column group for scrolling\r\n                        tbColGp.appendChild(document.createElement('col'));\r\n                    } else {\r\n                        pendingSkipCol--;\r\n                    }\r\n                }\r\n            }\r\n            // Enable columns resizable\r\n            if ($.fn.resizable ) {\r\n                $('td.resizable', tbHead).resizable({ handles: 'e' });\r\n            }\r\n            // Check to hide last column or not\r\n            if (settings.hideButtons.insert && settings.hideButtons.remove\r\n                    && settings.hideButtons.moveUp && settings.hideButtons.moveDown\r\n                    && (!langx.isArray(settings.customRowButtons) || settings.customRowButtons.length == 0)) {\r\n                settings._hideLastColumn = true;\r\n            }\r\n            // Calculate the `_finalColSpan` value\r\n            settings._finalColSpan = settings._visibleCount;\r\n            if (!settings.hideRowNumColumn) settings._finalColSpan++;\r\n            if (!settings._hideLastColumn) settings._finalColSpan++;\r\n            // Generate last column header if needed\r\n            if (!settings._hideLastColumn) {\r\n                if (settings.rowButtonsInFront) {\r\n                    if (settings.hideRowNumColumn) {\r\n                        // Insert a cell at the front\r\n                        tbRow.insertBefore(tbHeadCellRowButton = document.createElement('td'), tbRow.firstChild);\r\n                    } else {\r\n                        // Span the first cell that across row number and row button cells\r\n                        // tbHeadCellRowNum.colSpan = 2;\r\n                        // tbHeadCellRowButton = tbHeadCellRowNum;\r\n\r\n                        // Insert a cell as the second column\r\n                        tbRow.insertBefore(tbHeadCellRowButton = document.createElement('td'), tbRow.childnodes[1]);\r\n                    }\r\n                } else {\r\n                    tbRow.appendChild(tbHeadCellRowButton = document.createElement('td'));\r\n                }\r\n                tbHeadCellRowButton.className = 'ui-widget-header last';\r\n                tbHeadCellRowButton.id = settings.idPrefix + '_last_td_head';\r\n                // Add column group for scrolling\r\n                tbColGp.appendChild(document.createElement('col'));\r\n            }\r\n            // Add caption when defined\r\n            if (settings.caption) {\r\n                tbHead.insertBefore(tbRow = document.createElement('tr'), tbHead.firstChild);\r\n                if (settings._sectionClasses.caption) {\r\n                    tbRow.className = settings._sectionClasses.caption;\r\n                }\r\n                tbRow.appendChild(tbCell = document.createElement('td'));\r\n                tbCell.id = settings.idPrefix + '_caption_td';\r\n                tbCell.className = 'ui-state-active caption';\r\n                tbCell.colSpan = settings._finalColSpan;\r\n                // Add tooltip\r\n                if (langx.isPlainObject(settings.captionTooltip)) {\r\n                    $(tbCell).tooltip(settings.captionTooltip);\r\n                } else if (!isEmpty(settings.captionTooltip)) {\r\n                    $(tbCell).attr('title', settings.captionTooltip).tooltip();\r\n                }\r\n                // Check to set display text or generate by function\r\n                if (langx.isFunction(settings.caption)) {\r\n                    settings.caption(tbCell);\r\n                } else {\r\n                    $(tbCell).text(settings.caption);\r\n                }\r\n            }\r\n            // Handle footer row\r\n            tbFoot.appendChild(tbRow = document.createElement('tr'));\r\n            if (settings._sectionClasses.footer) {\r\n                tbRow.className = settings._sectionClasses.footer;\r\n            }\r\n            tbRow.appendChild(tbCell = document.createElement('td'));\r\n            tbCell.id = settings.idPrefix + '_footer_td';\r\n            tbCell.colSpan = settings._finalColSpan;\r\n            $('<input/>').attr({\r\n                type: 'hidden',\r\n                id: settings.idPrefix + '_rowOrder',\r\n                name: settings.idPrefix + '_rowOrder'\r\n            }).appendTo(tbCell);\r\n            // Make row invisible if all buttons are hidden\r\n            if (settings.hideButtons.append && settings.hideButtons.removeLast\r\n                    && (!langx.isArray(settings.customFooterButtons) || settings.customFooterButtons.length == 0)) {\r\n                tbRow.style.display = 'none';\r\n            } else {\r\n                if (!settings.hideButtons.append) {\r\n                    var button = this._createGridButton(settings.customGridButtons.append, 'ui-icon-plusthick')\r\n                    .attr({ title: settings._i18n.append }).addClass('append')\r\n                    .click(function (evt) {\r\n                        self._insertRow(1, null, null);\r\n                        if (evt && evt.preventDefault) evt.preventDefault();\r\n                        return false;\r\n                    }).appendTo(tbCell);\r\n                    if (!isEmpty(settings._buttonClasses.append)) button.addClass(settings._buttonClasses.append);\r\n                }\r\n                if (!settings.hideButtons.removeLast) {\r\n                    var button = this._createGridButton(settings.customGridButtons.removeLast, 'ui-icon-closethick')\r\n                    .attr({ title: settings._i18n.removeLast }).addClass('removeLast')\r\n                    .click(function (evt) {\r\n                        self._removeRow( null, this.value, false);\r\n                        if (evt && evt.preventDefault) evt.preventDefault();\r\n                        return false;\r\n                    }).appendTo(tbCell);\r\n                    if (!isEmpty(settings._buttonClasses.removeLast)) button.addClass(settings._buttonClasses.removeLast);\r\n                }\r\n                if (settings.customFooterButtons && settings.customFooterButtons.length) {\r\n                    // Add front buttons\r\n                    for (var y = settings.customFooterButtons.length - 1; y >= 0; y--) {\r\n                        var buttonCfg = settings.customFooterButtons[y];\r\n                        if (buttonCfg && buttonCfg.uiButton && buttonCfg.click && buttonCfg.atTheFront) {\r\n                            $(tbCell).prepend(makeCustomBottomButton(tbWhole, buttonCfg));\r\n                        }\r\n                    }\r\n                    // Add end buttons\r\n                    for (var y = 0; y < settings.customFooterButtons.length; y++) {\r\n                        var buttonCfg = settings.customFooterButtons[y];\r\n                        if (buttonCfg && buttonCfg.uiButton && buttonCfg.click && !buttonCfg.atTheFront) {\r\n                            $(tbCell).append(makeCustomBottomButton(tbWhole, buttonCfg));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // Enable dragging\r\n            if (settings.rowDragging) {\r\n                $(tbBody).sortable({\r\n                    axis: 'y',\r\n                    containment: tbWhole,\r\n                    handle: '.rowDrag',\r\n                    helper: function (e, tr) {\r\n                        var org = tr.children();\r\n                        var helper = tr.clone();\r\n                        // Fix the cell width of cloned table cell\r\n                        helper.children().each(function (index) {\r\n                            $(this).width(org.eq(index).width());\r\n                            // Set the value of drop down list when drag (Issue #18)\r\n                            var helperSelect = $('select', this);\r\n                            if (helperSelect.length > 0) {\r\n                                for (var y = 0; y < helperSelect.length; y++) {\r\n                                    var orgSelect = org.eq(index).find('select');\r\n                                    if (orgSelect.length > y) {\r\n                                        helperSelect[y].value = orgSelect[y].value;\r\n                                    }\r\n                                }\r\n                            }\r\n                        });\r\n                        return helper;\r\n                    },\r\n                    update: function (event, ui) {\r\n                        var uniqueIndex = ui.item[0].id.substring(ui.item[0].id.lastIndexOf('_') + 1);\r\n                        var tbRowIndex = ui.item[0].rowIndex - $('tr', tbHead).length;\r\n                        self._gridRowDragged(ui.originalPosition.top > ui.position.top, uniqueIndex, tbRowIndex);\r\n                    }\r\n                });\r\n            }\r\n            // Save options\r\n            $(tbWhole).data('appendGrid', settings);\r\n            if (langx.isArray(options.initData)) {\r\n                // Load data if initData is array\r\n                this._loadData(options.initData, true);\r\n            } else {\r\n                // Add empty rows\r\n                //$(tbWhole).appendGrid('appendRow', settings.initRows);\r\n                this.appendRow(settings.initRows);\r\n            }\r\n            // Show no rows in grid\r\n            if (settings._rowOrder.length == 0) {\r\n                this._showEmptyMessage(settings, true);\r\n            }\r\n\r\n            /*\r\n            // Calculate column width\r\n            if (settings.maxBodyHeight > 0) {\r\n                if (settings.autoColumnWidth) {\r\n                    this._calculateColumnWidth();\r\n                } else {\r\n                    $('table.foot', tbWrap).width($(tbWhole).width());\r\n                }\r\n            }\r\n            */\r\n        },\r\n\r\n        isReady: function () {\r\n            // Check the appendGrid is initialized or not\r\n            var settings = this._checkGridAndGetSettings( true);\r\n            if (settings) {\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n\r\n        isDataLoaded: function () {\r\n            // Check the grid data is loaded by `load` method or `initData` parameter or not\r\n            var settings = this._checkGridAndGetSettings();\r\n            if (settings) {\r\n                return settings._isDataLoaded;\r\n            }\r\n            return false;\r\n        },\r\n\r\n        load: function (records) {\r\n            var settings = this._checkGridAndGetSettings();\r\n            if (settings) {\r\n                if (records != null && records.length > 0) {\r\n                    this._loadData(records, false);\r\n                } else {\r\n                    this._emptyGrid();\r\n                }\r\n            }\r\n            return this;\r\n        },\r\n\r\n        appendRow: function (numOfRowOrRowArray) {\r\n            return this.insertRow(numOfRowOrRowArray);\r\n        },\r\n\r\n        insertRow: function (numOfRowOrRowArray, rowIndex, callerUniqueIndex) {\r\n            var settings = this._checkGridAndGetSettings();\r\n            if (settings) {\r\n                if ((langx.isArray(numOfRowOrRowArray) && numOfRowOrRowArray.length > 0) || (langx.isNumeric(numOfRowOrRowArray) && numOfRowOrRowArray > 0)) {\r\n                    // Define variables\r\n                    var tbWhole = this[0];\r\n                    insertResult = this._insertRow(numOfRowOrRowArray, rowIndex, callerUniqueIndex);\r\n                    // Reorder sequence as needed\r\n                    if (langx.isNumeric(rowIndex) || langx.isNumeric(callerUniqueIndex)) {\r\n                        // Sort sequence\r\n                        this._sortSequence( insertResult.rowIndex);\r\n                        // Move focus\r\n                        var insertUniqueIndex = settings._rowOrder[insertResult.addedRows[0]];\r\n                        $('#' + settings.idPrefix + '_Insert_' + insertUniqueIndex, tbWhole).focus();\r\n                    }\r\n                }\r\n            }\r\n            return this;\r\n        },\r\n        removeRow: function (rowIndex, uniqueIndex) {\r\n            var settings = this._checkGridAndGetSettings();\r\n            if (settings && settings._rowOrder.length > 0) {\r\n                this._removeRow(rowIndex, uniqueIndex, true);\r\n            }\r\n            return this;\r\n        },\r\n        emptyGrid: function () {\r\n            var settings = this._checkGridAndGetSettings();\r\n            if (settings) {\r\n                this._emptyGrid();\r\n            }\r\n            return target;\r\n        },\r\n        moveUpRow: function (rowIndex, uniqueIndex) {\r\n            var settings = this._checkGridAndGetSettings(), target = this;\r\n            if (settings) {\r\n                var tbWhole = target[0], trTarget, trSwap, trAdtTarget, swapSeq, oldIndex = null;\r\n                var tbBody = tbWhole.getElementsByTagName('tbody')[0];\r\n                if (langx.isNumeric(rowIndex) && rowIndex > 0 && rowIndex < settings._rowOrder.length) {\r\n                    oldIndex = rowIndex;\r\n                    uniqueIndex = settings._rowOrder[rowIndex];\r\n                } else if (langx.isNumeric(uniqueIndex)) {\r\n                    oldIndex = findRowIndex(uniqueIndex, settings);\r\n                }\r\n                if (oldIndex != null && oldIndex > 0) {\r\n                    // Get row to swap\r\n                    trTarget = document.getElementById(settings.idPrefix + '_Row_' + uniqueIndex, tbWhole);\r\n                    trSwap = document.getElementById(settings.idPrefix + '_Row_' + settings._rowOrder[oldIndex - 1], tbWhole);\r\n                    // Get the sub panel row if used\r\n                    if (settings.useSubPanel) {\r\n                        trAdtTarget = document.getElementById(settings.idPrefix + '_SubRow_' + uniqueIndex, tbWhole);\r\n                    }\r\n                    // Remove current row\r\n                    tbBody.removeChild(trTarget);\r\n                    if (settings.useSubPanel) {\r\n                        tbBody.removeChild(trAdtTarget);\r\n                    }\r\n                    // Insert before the above row\r\n                    tbBody.insertBefore(trTarget, trSwap);\r\n                    if (settings.useSubPanel) {\r\n                        tbBody.insertBefore(trAdtTarget, trSwap);\r\n                    }\r\n                    // Update rowOrder\r\n                    settings._rowOrder[oldIndex] = settings._rowOrder[oldIndex - 1];\r\n                    settings._rowOrder[oldIndex - 1] = uniqueIndex;\r\n                    // Update row label\r\n                    swapSeq = $('td.first', trSwap).html();\r\n                    $('td.first', trSwap).html($('td.first', trTarget).html());\r\n                    $('td.first', trTarget).html(swapSeq)\r\n                    // Save setting\r\n                    this._saveSetting(settings);\r\n                    // Change focus\r\n                    $('td.last button.moveUp', trTarget).removeClass('ui-state-hover').blur();\r\n                    $('td.last button.moveUp', trSwap).focus();\r\n                    // Trigger event\r\n                    if (settings.afterRowSwapped) {\r\n                        settings.afterRowSwapped(tbWhole, oldIndex, oldIndex - 1);\r\n                    }\r\n                }\r\n            }\r\n            return target;\r\n        },\r\n        moveDownRow: function (rowIndex, uniqueIndex) {\r\n            var settings = this._checkGridAndGetSettings(), target = this;\r\n            if (settings) {\r\n                var tbWhole = target[0], trTarget, trSwap, trAdtSwap, swapSeq, oldIndex = null;\r\n                var tbBody = tbWhole.getElementsByTagName('tbody')[0];\r\n                if (langx.isNumeric(rowIndex) && rowIndex >= 0 && rowIndex < settings._rowOrder.length - 1) {\r\n                    oldIndex = rowIndex;\r\n                    uniqueIndex = settings._rowOrder[rowIndex];\r\n                } else if (langx.isNumeric(uniqueIndex)) {\r\n                    oldIndex = findRowIndex(uniqueIndex, settings);\r\n                }\r\n                if (oldIndex != null && oldIndex != settings._rowOrder.length - 1) {\r\n                    // Get row to swap\r\n                    trTarget = document.getElementById(settings.idPrefix + '_Row_' + uniqueIndex, tbWhole);\r\n                    trSwap = document.getElementById(settings.idPrefix + '_Row_' + settings._rowOrder[oldIndex + 1], tbWhole);\r\n                    // Get the sub panel row if used\r\n                    if (settings.useSubPanel) {\r\n                        trAdtSwap = document.getElementById(settings.idPrefix + '_SubRow_' + settings._rowOrder[oldIndex + 1], tbWhole);\r\n                    }\r\n                    // Remove current row\r\n                    tbBody.removeChild(trSwap);\r\n                    // Insert before the above row\r\n                    tbBody.insertBefore(trSwap, trTarget);\r\n                    if (settings.useSubPanel) {\r\n                        tbBody.insertBefore(trAdtSwap, trTarget);\r\n                    }\r\n                    // Update rowOrder\r\n                    settings._rowOrder[oldIndex] = settings._rowOrder[oldIndex + 1];\r\n                    settings._rowOrder[oldIndex + 1] = uniqueIndex;\r\n                    // Update row label\r\n                    swapSeq = $('td.first', trSwap).html();\r\n                    $('td.first', trSwap).html($('td.first', trTarget).html());\r\n                    $('td.first', trTarget).html(swapSeq)\r\n                    // Save setting\r\n                    this._saveSetting(settings);\r\n                    // Change focus\r\n                    $('td.last button.moveDown', trTarget).removeClass('ui-state-hover').blur();\r\n                    $('td.last button.moveDown', trSwap).focus();\r\n                    // Trigger event\r\n                    if (settings.afterRowSwapped) {\r\n                        settings.afterRowSwapped(tbWhole, oldIndex, oldIndex + 1);\r\n                    }\r\n                }\r\n            }\r\n            return target;\r\n        },\r\n        showColumn: function (name) {\r\n            var settings = this._checkGridAndGetSettings();\r\n            if (settings && name) {\r\n                // Find column index\r\n                var colIndex = -1, tbWhole = this[0];\r\n                for (var z = 0; z < settings.columns.length; z++) {\r\n                    if (settings.columns[z].name == name) {\r\n                        colIndex = z;\r\n                        break;\r\n                    }\r\n                }\r\n                // Make sure the column exist and show the column if it is invisible only\r\n                if (colIndex != -1 && settings.columns[colIndex].invisible) {\r\n                    // Change caption and footer column span\r\n                    settings._visibleCount++;\r\n                    settings._finalColSpan++;\r\n                    $('#' + settings.idPrefix + '_caption_td').attr('colSpan', settings._finalColSpan);\r\n                    $('#' + settings.idPrefix + '_footer_td').attr('colSpan', settings._finalColSpan);\r\n                    // Remove invisible class on each row\r\n                    $('#' + settings.idPrefix + '_' + name + '_td_head').removeClass('invisible');\r\n                    for (var z = 0; z < settings._rowOrder.length; z++) {\r\n                        var uniqueIndex = settings._rowOrder[z];\r\n                        $('#' + settings.idPrefix + '_' + name + '_td_' + uniqueIndex).removeClass('invisible');\r\n                        if (settings.useSubPanel) {\r\n                            $('#' + settings.idPrefix + '_SubRow_' + uniqueIndex).attr('colSpan', settings._visibleCount + (settings._hideLastColumn ? 0 : 1));\r\n                        }\r\n                    }\r\n                    // Save changes\r\n                    settings.columns[colIndex].invisible = false;\r\n                    this._saveSetting(settings);\r\n                }\r\n            }\r\n            return this;\r\n        },\r\n        hideColumn: function (name) {\r\n            var settings = this._checkGridAndGetSettings();\r\n            if (settings && name) {\r\n                // Find column index\r\n                var colIndex = -1, tbWhole = this[0];\r\n                for (var z = 0; z < settings.columns.length; z++) {\r\n                    if (settings.columns[z].name == name) {\r\n                        colIndex = z;\r\n                        break;\r\n                    }\r\n                }\r\n                // Make sure the column exist and hide the column if it is visible only\r\n                if (colIndex != -1 && !settings.columns[colIndex].invisible) {\r\n                    // Change caption and footer column span\r\n                    settings._visibleCount--;\r\n                    settings._finalColSpan--;\r\n                    $('#' + settings.idPrefix + '_caption_td').attr('colSpan', settings._finalColSpan);\r\n                    $('#' + settings.idPrefix + '_footer_td').attr('colSpan', settings._finalColSpan);\r\n                    // Add invisible class on each row\r\n                    $('#' + settings.idPrefix + '_' + name + '_td_head').addClass('invisible');\r\n                    for (var z = 0; z < settings._rowOrder.length; z++) {\r\n                        var uniqueIndex = settings._rowOrder[z];\r\n                        $('#' + settings.idPrefix + '_' + name + '_td_' + uniqueIndex).addClass('invisible');\r\n                        if (settings.useSubPanel) {\r\n                            $('#' + settings.idPrefix + '_SubRow_' + uniqueIndex).attr('colSpan', settings._visibleCount + (settings._hideLastColumn ? 0 : 1));\r\n                        }\r\n                    }\r\n                    // Save changes\r\n                    settings.columns[colIndex].invisible = true;\r\n                    this._saveSetting(settings);\r\n                }\r\n            }\r\n            return this;\r\n        },\r\n        isColumnInvisible: function (name) {\r\n            var settings = this._checkGridAndGetSettings();\r\n            if (settings && name) {\r\n                for (var z = 0; z < settings.columns.length; z++) {\r\n                    if (settings.columns[z].name == name) {\r\n                        return settings.columns[z].invisible;\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        },\r\n        getRowCount: function () {\r\n            var settings = this._checkGridAndGetSettings();\r\n            if (settings) {\r\n                return settings._rowOrder.length;\r\n            }\r\n            return null;\r\n        },\r\n        getUniqueIndex: function (rowIndex) {\r\n            var settings = this._checkGridAndGetSettings();\r\n            if (settings && langx.isNumeric(rowIndex) && rowIndex < settings._rowOrder.length) {\r\n                return settings._rowOrder[rowIndex];\r\n            }\r\n            return null;\r\n        },\r\n        getRowIndex: function (uniqueIndex) {\r\n            var settings = this._checkGridAndGetSettings();\r\n            if (settings && langx.isNumeric(uniqueIndex)) {\r\n                for (var z = 0; z < settings._rowOrder.length; z++) {\r\n                    if (settings._rowOrder[z] == uniqueIndex) {\r\n                        return z;\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        },\r\n        getRowValue: function (rowIndex, uniqueIndex, loopIndex) {\r\n            var settings = this._checkGridAndGetSettings(), result = null;\r\n            if (settings) {\r\n                if (langx.isNumeric(rowIndex) && rowIndex >= 0 && rowIndex < settings._rowOrder.length) {\r\n                    uniqueIndex = settings._rowOrder[rowIndex];\r\n                }\r\n                if (!isEmpty(uniqueIndex)) {\r\n                    result = getRowValue(settings, uniqueIndex, loopIndex);\r\n                }\r\n            }\r\n            return result;\r\n        },\r\n        getAllValue: function (objectMode) {\r\n            var settings = this._checkGridAndGetSettings(), result = null;\r\n            if (settings) {\r\n                // Prepare result based on objectMode setting\r\n                result = objectMode ? {} : [];\r\n                // Process on each rows\r\n                for (var z = 0; z < settings._rowOrder.length; z++) {\r\n                    if (objectMode) {\r\n                        rowValue = getRowValue(settings, settings._rowOrder[z], z);\r\n                        langx.extend(result, rowValue)\r\n                    } else {\r\n                        rowValue = getRowValue(settings, settings._rowOrder[z]);\r\n                        result.push(rowValue);\r\n                    }\r\n                }\r\n                if (objectMode) {\r\n                    result[settings.rowCountName] = settings._rowOrder.length;\r\n                }\r\n            }\r\n            return result;\r\n        },\r\n        getCtrlValue: function (name, rowIndex) {\r\n            var settings = this._checkGridAndGetSettings();\r\n            if (settings && rowIndex >= 0 && rowIndex < settings._rowOrder.length) {\r\n                for (var z = 0; z < settings.columns.length; z++) {\r\n                    if (settings.columns[z].name === name) {\r\n                        return getCtrlValue(settings, z, settings._rowOrder[rowIndex]);\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        },\r\n        setCtrlValue: function (name, rowIndex, value) {\r\n            var settings = this._checkGridAndGetSettings();\r\n            if (settings && rowIndex >= 0 && rowIndex < settings._rowOrder.length) {\r\n                for (var z = 0; z < settings.columns.length; z++) {\r\n                    if (settings.columns[z].name == name) {\r\n                        setCtrlValue(settings, z, settings._rowOrder[rowIndex], value);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            return this;\r\n        },\r\n        getCellCtrl: function (name, rowIndex) {\r\n            var settings = this._checkGridAndGetSettings();\r\n            if (settings && rowIndex >= 0 && rowIndex < settings._rowOrder.length) {\r\n                var uniqueIndex = settings._rowOrder[rowIndex];\r\n                for (var z = 0; z < settings.columns.length; z++) {\r\n                    if (settings.columns[z].name === name) {\r\n                        return getCellCtrl(settings.columns[z].type, settings.idPrefix, name, uniqueIndex);\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        },\r\n        getCellCtrlByUniqueIndex: function (name, uniqueIndex) {\r\n            var settings = this._checkGridAndGetSettings();\r\n            if (settings) {\r\n                for (var z = 0; z < settings.columns.length; z++) {\r\n                    if (settings.columns[z].name === name) {\r\n                        return getCellCtrl(settings.columns[z].type, settings.idPrefix, name, uniqueIndex);\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        },\r\n        getRowOrder: function () {\r\n            var settings = this._checkGridAndGetSettings();\r\n            if (settings) {\r\n                // Return a copy of `Row Order` array\r\n                return settings._rowOrder.slice();\r\n            }\r\n            return null;\r\n        },\r\n        getColumns: function () {\r\n            var settings = this._checkGridAndGetSettings();\r\n            if (settings) {\r\n                // Return a copy of the columns array\r\n                return settings.columns.slice();\r\n            }\r\n            return null;\r\n        },\r\n        isRowEmpty: function (rowIndex) {\r\n            var settings = this._checkGridAndGetSettings();\r\n            if (settings) {\r\n                return isRowEmpty(settings, rowIndex);\r\n            }\r\n            return null;\r\n        },\r\n        removeEmptyRows: function () {\r\n            var settings = this._checkGridAndGetSettings();\r\n            if (settings) {\r\n                var tbWhole = this[0];\r\n                for (var z = settings._rowOrder.length; z >= 0; z--) {\r\n                    if (isRowEmpty(settings, z)) {\r\n                        // Remove itself\r\n                        this._removeRow( null, settings._rowOrder[z], true);\r\n                    }\r\n                }\r\n                return this;\r\n            }\r\n            return null;\r\n        }\r\n\r\n\r\n\r\n    });\r\n    // The default initial options.\r\n    var _defaultInitOptions = {\r\n        // The text as table caption, set null to disable caption generation.\r\n        caption: null,\r\n        // Tooltip for caption.\r\n        captionTooltip: null,\r\n        // The total number of empty rows generated when init the grid. This will be ignored if `initData` is assigned.\r\n        initRows: 3,\r\n        // The maximum number of rows allowed in this grid.\r\n        maxRowsAllowed: 0,\r\n        // An array of data to be filled after initialized the grid.\r\n        initData: null,\r\n        // Array of column options.\r\n        columns: null,\r\n        // Labels or messages used in grid.\r\n        i18n: null,\r\n        // The ID prefix of controls generated inside the grid. Table ID will be used if not defined.\r\n        idPrefix: null,\r\n        // Enable row dragging by using jQuery UI sortable on grid rows.\r\n        rowDragging: false,\r\n        // Hide the buttons at the end of rows or bottom of grid.\r\n        hideButtons: null,\r\n        // Hide the row number column.\r\n        hideRowNumColumn: false,\r\n        // Generate row buttom column in the front of input columns.\r\n        rowButtonsInFront: false,\r\n        // The variable name of row count used for object mode of getAllValue\r\n        rowCountName: '_RowCount',\r\n        // The extra class names for buttons.\r\n        buttonClasses: null,\r\n        // The extra class names for table sections.\r\n        sectionClasses: null,\r\n        // Custom the standard grid buttons.\r\n        customGridButtons: null,\r\n        // Adding extra button(s) at the end of rows.\r\n        customRowButtons: null,\r\n        // Adding extra button(s) at the bottom of grid.\r\n        customFooterButtons: null,\r\n        // Use the sub panel or not\r\n        useSubPanel: false,\r\n        // Maintain the scroll position after appended or removed last row.\r\n        maintainScroll: false,\r\n        // The maximum height of grid content, scroll bar will be display when the height is greater than this value.\r\n        maxBodyHeight: 0,\r\n        // Auto calculate the column width when scroll bar on table body is in use.\r\n        autoColumnWidth: true\r\n    };\r\n    var _defaultCallbackContainer = {\r\n        // The callback function for format the HTML name of generated controls.\r\n        nameFormatter: null,\r\n        // The callback function to be triggered after all data loaded to grid.\r\n        dataLoaded: null,\r\n        // The callback function to be triggered after data loaded to a row.\r\n        rowDataLoaded: null,\r\n        // The callback function to be triggered after new row appended.\r\n        afterRowAppended: null,\r\n        // The callback function to be triggered after new row inserted.\r\n        afterRowInserted: null,\r\n        // The callback function to be triggered after grid row swapped.\r\n        afterRowSwapped: null,\r\n        // The callback function to be triggered before grid row remove.\r\n        beforeRowRemove: null,\r\n        // The callback function to be triggered after grid row removed.\r\n        afterRowRemoved: null,\r\n        // The callback function to be triggered after grid row dragged.\r\n        afterRowDragged: null,\r\n        // The callback function for generating sub panel content.\r\n        subPanelBuilder: null,\r\n        // The callback function for getting values from sub panel. Used for `getAllValue` method.\r\n        subPanelGetter: null,\r\n        // The callback function to be triggered when row(s) is/are adding to grid but the maximum number of rows allowed is reached.\r\n        maxNumRowsReached: null\r\n    };\r\n    // Default column options.\r\n    var _defaultColumnOptions = {\r\n        // Type of column control.\r\n        type: 'text',\r\n        // Name of column.\r\n        name: null,\r\n        // Default value.\r\n        value: null,\r\n        // Display text on the header section.\r\n        display: null,\r\n        // Extra CSS setting to be added to display text.\r\n        displayCss: null,\r\n        // Tooltip for column head.\r\n        displayTooltip: null,\r\n        // The `colspan` setting on the column header.\r\n        headerSpan: 1,\r\n        // Extra CSS setting to be added to the control container table cell.\r\n        cellCss: null,\r\n        // Extra attributes to be added to the control.\r\n        ctrlAttr: null,\r\n        // Extra properties to be added to the control.\r\n        ctrlProp: null,\r\n        // Extra CSS to be added to the control.\r\n        ctrlCss: null,\r\n        // Extra name of class to be added to the control.\r\n        ctrlClass: null,\r\n        // The available option for building `select` type control.\r\n        ctrlOptions: null,\r\n        // Options for initalize jQuery UI widget.\r\n        uiOption: null,\r\n        // Options for initalize jQuery UI tooltip.\r\n        uiTooltip: null,\r\n        // Let column resizable by using jQuery UI Resizable Interaction.\r\n        resizable: false,\r\n        // Show or hide column after initialized.\r\n        invisible: false,\r\n        // The value to compare for indentify this column value is empty.\r\n        emptyCriteria: null,\r\n        // Callback function to build custom type control.\r\n        customBuilder: null,\r\n        // Callback function to get control value.\r\n        customGetter: null,\r\n        // Callback function to set control value.\r\n        customSetter: null,\r\n        // The `OnClick` event callback of control.\r\n        onClick: null,\r\n        // The `OnChange` event callback of control.\r\n        onChange: null\r\n    };\r\n    var _systemMessages = {\r\n        noColumnInfo: 'Cannot initial grid without column information!',\r\n        elemNotTable: 'Cannot initial grid on element other than TABLE!',\r\n        notInit: '`appendGrid` does not initialized',\r\n        getValueMultiGrid: 'Cannot get values on multiple grid',\r\n        notSupportMethod: 'Method is not supported by `appendGrid`: '\r\n    };\r\n    var _defaultTextResources = {\r\n        append: 'Append Row',\r\n        removeLast: 'Remove Last Row',\r\n        insert: 'Insert Row Above',\r\n        remove: 'Remove Current Row',\r\n        moveUp: 'Move Up',\r\n        moveDown: 'Move Down',\r\n        rowDrag: 'Sort Row',\r\n        rowEmpty: 'This Grid Is Empty'\r\n    };\r\n    var _defaultButtonClasses = { append: null, removeLast: null, insert: null, remove: null, moveUp: null, moveDown: null, rowDrag: null };\r\n    var _defaultSectionClasses = { caption: null, header: null, body: null, subPanel: null, footer: null };\r\n    var _defaultHideButtons = { append: false, removeLast: false, insert: false, remove: false, moveUp: false, moveDown: false };\r\n\r\n\r\n    function makeCustomBottomButton(tbWhole, buttonCfg) {\r\n        var exButton = $('<button/>').attr({ type: 'button', tabindex: -1 })\r\n        .button(buttonCfg.uiButton).click({ tbWhole: tbWhole }, buttonCfg.click);\r\n        if (buttonCfg.btnClass) exButton.addClass(buttonCfg.btnClass);\r\n        if (buttonCfg.btnCss) exButton.css(buttonCfg.btnCss);\r\n        if (buttonCfg.btnAttr) exButton.attr(buttonCfg.btnAttr);\r\n        return exButton;\r\n    }\r\n    function makeCustomRowButton(tbWhole, buttonCfg, uniqueIndex) {\r\n        var exButton = $('<button/>').val(uniqueIndex).attr({ type: 'button', tabindex: -1 })\r\n        .button(buttonCfg.uiButton).click({ tbWhole: tbWhole, uniqueIndex: uniqueIndex }, function (evt) {\r\n            var rowData = $(evt.data.tbWhole).plugin(\"lark.tabular\").getRowValue(null, evt.data.uniqueIndex);\r\n            buttonCfg.click(evt, evt.data.uniqueIndex, rowData);\r\n        });\r\n        if (buttonCfg.btnClass) exButton.addClass(buttonCfg.btnClass);\r\n        if (buttonCfg.btnCss) exButton.css(buttonCfg.btnCss);\r\n        if (buttonCfg.btnAttr) exButton.attr(buttonCfg.btnAttr);\r\n        return exButton;\r\n    }\r\n\r\n\r\n\r\n\r\n    function findRowIndex(uniqueIndex, settings) {\r\n        for (var z = 0; z < settings._rowOrder.length; z++) {\r\n            if (settings._rowOrder[z] == uniqueIndex) {\r\n                return z;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    function isEmpty(value) {\r\n        return typeof (value) == 'undefined' || value == null;\r\n    }\r\n    function getObjValue(obj, key) {\r\n        if (!isEmpty(obj) && langx.isPlainObject(obj) && !isEmpty(obj[key])) {\r\n            return obj[key];\r\n        }\r\n        return null;\r\n    }\r\n    function getRowIndex(settings, uniqueIndex) {\r\n        var rowIndex = null;\r\n        for (var z = 0; z < settings._rowOrder.length; z++) {\r\n            if (settings._rowOrder[z] == uniqueIndex) {\r\n                return z;\r\n            }\r\n        }\r\n        return rowIndex;\r\n    }\r\n    function getRowValue(settings, uniqueIndex, loopIndex) {\r\n        var result = {}, keyName = null, suffix = (isEmpty(loopIndex) ? '' : '_' + loopIndex);\r\n        for (var z = 0; z < settings.columns.length; z++) {\r\n            keyName = settings.columns[z].name + suffix;\r\n            result[keyName] = getCtrlValue(settings, z, uniqueIndex);\r\n        }\r\n        // Merge control values from sub panel if getter method defined\r\n        if (settings.useSubPanel && langx.isFunction(settings.subPanelGetter)) {\r\n            var adtData = settings.subPanelGetter(uniqueIndex);\r\n            if (langx.isPlainObject(adtData)) {\r\n                if (suffix == '') {\r\n                    // Extend to row data directly for array mode\r\n                    langx.extend(result, adtData);\r\n                } else {\r\n                    // For returning values in object mode, add suffix to all keys\r\n                    var newData = {};\r\n                    for (var key in adtData) {\r\n                        newData[key + suffix] = adtData[key];\r\n                    }\r\n                    langx.extend(result, newData);\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    function getCtrlValue(settings, colIndex, uniqueIndex) {\r\n        var type = settings.columns[colIndex].type, columnName = settings.columns[colIndex].name;\r\n        if (type == 'custom') {\r\n            if (langx.isFunction(settings.columns[colIndex].customGetter)) {\r\n                return settings.columns[colIndex].customGetter(settings.idPrefix, columnName, uniqueIndex);\r\n            } else {\r\n                return null;\r\n            }\r\n        } else {\r\n            var ctrl = getCellCtrl(type, settings.idPrefix, columnName, uniqueIndex);\r\n            if (ctrl == null) {\r\n                return null;\r\n            }\r\n            else if (type == 'checkbox') {\r\n                return ctrl.checked ? 1 : 0;\r\n            } else {\r\n                return $(ctrl).val();\r\n            }\r\n        }\r\n    }\r\n    function getCellCtrl(type, idPrefix, columnName, uniqueIndex) {\r\n        return document.getElementById(idPrefix + '_' + columnName + '_' + uniqueIndex);\r\n    }\r\n    function setCtrlValue(settings, colIndex, uniqueIndex, data) {\r\n        var type = settings.columns[colIndex].type;\r\n        var columnName = settings.columns[colIndex].name;\r\n        // Handle values by type\r\n        if (type == 'custom') {\r\n            if (langx.isFunction(settings.columns[colIndex].customSetter)) {\r\n                settings.columns[colIndex].customSetter(settings.idPrefix, columnName, uniqueIndex, data);\r\n            } else {\r\n                // `customSetter` is not a function?? Skip handling...\r\n            }\r\n        } else {\r\n            var element = getCellCtrl(type, settings.idPrefix, columnName, uniqueIndex);\r\n            if (type == 'checkbox') {\r\n                element.checked = (data != null && data != 0);\r\n            } else if (type == 'ui-selectmenu') {\r\n                element.value = (data == null ? '' : data);\r\n                $(element).selectmenu('refresh');\r\n            }\r\n            else {\r\n                $(element).val(data == null ? '' : data);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function isRowEmpty(settings, rowIndex) {\r\n        for (var z = 0; z < settings.columns.length; z++) {\r\n            var uniqueIndex = settings._rowOrder[rowIndex];\r\n            var currentValue = getCtrlValue(settings, z, uniqueIndex);\r\n            // Check the empty criteria is function\r\n            if (langx.isFunction(settings.columns[z].emptyCriteria)) {\r\n                if (!settings.columns[z].emptyCriteria(currentValue)) {\r\n                    return false;\r\n                }\r\n            } else {\r\n                // Find the default value\r\n                var defaultValue = null;\r\n                if (!isEmpty(settings.columns[z].emptyCriteria)) {\r\n                    defaultValue = settings.columns[z].emptyCriteria;\r\n                } else {\r\n                    // Check default value based on its type\r\n                    if (settings.columns[z].type == 'checkbox') {\r\n                        defaultValue = 0;\r\n                    } else if (settings.columns[z].type == 'select' || settings.columns[z].type == 'ui-selectmenu') {\r\n                        var options = getCellCtrl(settings.columns[z].type, settings.idPrefix, settings.columns[z].name, uniqueIndex).options;\r\n                        if (options.length > 0) {\r\n                            defaultValue = options[0].value;\r\n                        } else {\r\n                            defaultValue = '';\r\n                        }\r\n                    } else {\r\n                        defaultValue = '';\r\n                    }\r\n                }\r\n                // Compare with the default value\r\n                if (currentValue != defaultValue) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    /*\r\n    /// <summary>\r\n    /// Initialize append grid or calling its methods.\r\n    /// </summary>\r\n    $.fn.appendGrid = function (params) {\r\n        if (_methods[params]) {\r\n            return _methods[params].apply(this, Array.prototype.slice.call(arguments, 1));\r\n        } else if (typeof (params) === 'object' || !params) {\r\n            return _methods.init.apply(this, arguments);\r\n        } else {\r\n            alert(_systemMessages.notSupportMethod + params);\r\n        }\r\n    };\r\n    */\r\n\r\n    return Tabular ;\r\n});\r\n\ndefine('skylark-bootstrap3/tab',[\n  \"skylark-langx/langx\",\n  \"skylark-domx-browser\",\n  \"skylark-domx-eventer\",\n  \"skylark-domx-noder\",\n  \"skylark-domx-geom\",\n  \"skylark-domx-query\",\n  \"skylark-domx-plugins\",\n  \"./bs3\"\n],function(langx,browser,eventer,noder,geom,$,plugins,bs3){\n\n/* ========================================================================\n * Bootstrap: tab.js v3.3.7\n * http://getbootstrap.com/javascript/#tabs\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n  'use strict';\n\n  // TAB CLASS DEFINITION\n  // ====================\n\n\n  var Tab = bs3.Tab = plugins.Plugin.inherit({\n    klassName: \"Tab\",\n\n    pluginName : \"bs3.tab\",\n\n    _construct : function(element,options) {\n      // jscs:disable requireDollarBeforejQueryAssignment\n      this.element = $(element)\n      this.target = options && options.target;\n\n      // jscs:enable requireDollarBeforejQueryAssignment\n      this.element.on(\"click.bs.tab.data-api\",langx.proxy(function(e){\n        e.preventDefault()\n        this.show();\n      },this));    \n    },\n\n    show : function () {\n      var $this    = this.element\n      var $ul      = $this.closest('ul:not(.dropdown-menu)')\n      var selector = this.target || $this.data('target');\n\n      if (!selector) {\n        selector = $this.attr('href')\n        selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n      }\n\n      if ($this.parent('li').hasClass('active')) return\n\n      var $previous = $ul.find('.active:last a')\n      var hideEvent = eventer.create('hide.bs.tab', {\n        relatedTarget: $this[0]\n      })\n      var showEvent = eventer.create('show.bs.tab', {\n        relatedTarget: $previous[0]\n      })\n\n      $previous.trigger(hideEvent)\n      $this.trigger(showEvent)\n\n      if (showEvent.isDefaultPrevented() || hideEvent.isDefaultPrevented()) return\n\n      var $target = $(selector)\n\n      this.activate($this.closest('li'), $ul)\n      this.activate($target, $target.parent(), function () {\n        $previous.trigger({\n          type: 'hidden.bs.tab',\n          relatedTarget: $this[0]\n        })\n        $this.trigger({\n          type: 'shown.bs.tab',\n          relatedTarget: $previous[0]\n        })\n      })\n    },\n\n    activate : function (element, container, callback) {\n      var $active    = container.find('> .active')\n      var transition = callback\n        && browser.support.transition\n        && ($active.length && $active.hasClass('fade') || !!container.find('> .fade').length)\n\n      function next() {\n        $active\n          .removeClass('active')\n          .find('> .dropdown-menu > .active')\n            .removeClass('active')\n          .end()\n          .find('[data-toggle=\"tab\"]')\n            .attr('aria-expanded', false)\n\n        element\n          .addClass('active')\n          .find('[data-toggle=\"tab\"]')\n            .attr('aria-expanded', true)\n\n        if (transition) {\n          element[0].offsetWidth // reflow for transition\n          element.addClass('in')\n        } else {\n          element.removeClass('fade')\n        }\n\n        if (element.parent('.dropdown-menu').length) {\n          element\n            .closest('li.dropdown')\n              .addClass('active')\n            .end()\n            .find('[data-toggle=\"tab\"]')\n              .attr('aria-expanded', true)\n        }\n\n        callback && callback()\n      }\n\n      $active.length && transition ?\n        $active\n          .one('transitionEnd', next)\n          .emulateTransitionEnd(Tab.TRANSITION_DURATION) :\n        next()\n\n      $active.removeClass('in')\n    }\n\n\n  });\n\n\n  Tab.VERSION = '3.3.7'\n\n  Tab.TRANSITION_DURATION = 150\n\n  /*\n  // TAB PLUGIN DEFINITION\n  // =====================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this)\n      var data  = $this.data('bs.tab')\n\n      if (!data) $this.data('bs.tab', (data = new Tab(this,option)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.tab\n\n  $.fn.tab             = Plugin\n  $.fn.tab.Constructor = Tab\n\n\n  // TAB NO CONFLICT\n  // ===============\n\n  $.fn.tab.noConflict = function () {\n    $.fn.tab = old\n    return this\n  }\n\n  return $.fn.tab;\n  */\n\n  plugins.register(Tab,\"tab\");\n\n  return Tab;\n});\n\ndefine('skylark-widgets-swt/TabStrip',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-query\",\r\n    \"./swt\",\r\n    \"./Widget\",\r\n    \"skylark-bootstrap3/tab\",\r\n    \"skylark-bootstrap3/dropdown\"\r\n], function(langx, browser, eventer, noder, geom,  $, swt, Widget) {\r\n\r\n    var TabStrip = Widget.inherit({\r\n        klassName : \"TabStrip\",\r\n        pluginName : \"lark.tabstrip\",\r\n\r\n        options : {\r\n          selectors : {\r\n            header : \".nav-tabs\",\r\n            tab : \"[data-toggle=\\\"tab\\\"]\",\r\n            content : \".tab-content\",\r\n            tabpane : \".tab-pane\"\r\n          },\r\n\r\n          droptabs : {\r\n            selectors : {\r\n              dropdown : \"li.droptabs\",\r\n              dropdownMenu    : \"ul.dropdown-menu\",\r\n              dropdownTabs    : \"li\",\r\n              dropdownCaret   : \"b.caret\",\r\n              visibleTabs     : \">li:not(.dropdown)\",\r\n            },\r\n            auto              : true,\r\n            pullDropdownRight : true,\r\n\r\n\r\n          }\r\n        },\r\n\r\n        _init : function() {\r\n          this.$header = this._velm.$(this.options.selectors.header); \r\n          this.$tabs = this.$header.find(this.options.selectors.tab);\r\n          this.$content = this._velm.$(this.options.selectors.content);\r\n          this.$tabpanes = this.$content.find(this.options.selectors.tabpane);\r\n\r\n          this.$header.find('[data-toggle=\"dropdown\"]').dropdown();\r\n\r\n          var self = this;\r\n          this.$tabs.each(function(idx,tabEl){\r\n            $(tabEl).tab({\r\n              target : self.$tabpanes[idx]\r\n            });\r\n          });\r\n\r\n        },\r\n\r\n        arrange : function () {\r\n\r\n          var dropdownTabsSelector = this.options.droptabs.selectors.dropdownTabs,\r\n              visibleTabsSelector = this.options.droptabs.selectors.visibleTabs;\r\n\r\n              $container = this.$header;\r\n          var dropdown = $container.find(this.options.droptabs.selectors.dropdown);\r\n          var dropdownMenu = dropdown.find(this.options.droptabs.selectors.dropdownMenu);\r\n          var dropdownLabel = $('>a', dropdown).clone();\r\n          var dropdownCaret = $(this.options.droptabs.selectors.dropdownCaret, dropdown);\r\n\r\n          // We only want the default label, strip the caret out\r\n          $(this.options.droptabs.selectors.dropdownCaret, dropdownLabel).remove();\r\n\r\n          if (this.options.droptabs.pullDropdownRight) {\r\n            $(dropdown).addClass('pull-right');\r\n          }\r\n\r\n          var $dropdownTabs = function () {\r\n            return $(dropdownTabsSelector, dropdownMenu);\r\n          }\r\n\r\n          var $visibleTabs = function () {\r\n            return $(visibleTabsSelector, $container);\r\n          }\r\n\r\n          function getFirstHiddenElementWidth() {\r\n            var tempElem=$dropdownTabs().first().clone().appendTo($container).css(\"position\",\"fixed\");\r\n            var hiddenElementWidth = $(tempElem).outerWidth();\r\n            $(tempElem).remove();\r\n            return hiddenElementWidth;\r\n          }\r\n\r\n          function getHiddenElementWidth(elem) {\r\n            var tempElem=$(elem).clone().appendTo($container).css(\"position\",\"fixed\");\r\n            var hiddenElementWidth = $(tempElem).outerWidth();\r\n            $(tempElem).remove();\r\n            return hiddenElementWidth;\r\n          }\r\n\r\n          function getDropdownLabel() {\r\n            var labelText = 'Dropdown';\r\n            if ($(dropdown).hasClass('active')) {\r\n              labelText = $('>li.active>a', dropdownMenu).html();\r\n            } else if (dropdownLabel.html().length > 0) {\r\n              labelText = dropdownLabel.html();\r\n            }\r\n\r\n            labelText = $.trim(labelText);\r\n\r\n            if (labelText.length > 10) {\r\n              labelText = labelText.substring(0, 10) + '...';\r\n            }\r\n\r\n            return labelText;\r\n          }\r\n\r\n          function renderDropdownLabel() {\r\n            $('>a', dropdown).html(getDropdownLabel() + ' ' + dropdownCaret.prop('outerHTML'));\r\n          }\r\n\r\n          function manageActive(elem) {\r\n            //fixes a bug where Bootstrap can't remove the 'active' class on elements after they've been hidden inside the dropdown\r\n            $('a', $(elem)).on('show.bs.tab', function (e) {\r\n              $(e.relatedTarget).parent().removeClass('active');\r\n            })\r\n            $('a', $(elem)).on('shown.bs.tab', function (e) {\r\n              renderDropdownLabel();\r\n            })\r\n\r\n          }\r\n\r\n          function checkDropdownSelection() {\r\n            if ($($dropdownTabs()).filter('.active').length > 0) {\r\n              $(dropdown).addClass('active');\r\n            } else {\r\n              $(dropdown).removeClass('active');\r\n            }\r\n\r\n            renderDropdownLabel();\r\n          }\r\n\r\n\r\n          var visibleTabsWidth = function () {\r\n            var visibleTabsWidth = 0;\r\n            $($visibleTabs()).each(function( index ) {\r\n              visibleTabsWidth += parseInt($(this).outerWidth(), 10);\r\n            });\r\n            visibleTabsWidth = visibleTabsWidth + parseInt($(dropdown).outerWidth(), 10);\r\n            return visibleTabsWidth;\r\n          }\r\n\r\n          var availableSpace = function () {\r\n            return $container.outerWidth()-visibleTabsWidth();\r\n          }\r\n\r\n          if (availableSpace()<0) {//we will hide tabs here\r\n            var x = availableSpace();\r\n            $($visibleTabs().get().reverse()).each(function( index ){\r\n              if (!($(this).hasClass('always-visible'))){\r\n                  $(this).prependTo(dropdownMenu);\r\n                  x=x+$(this).outerWidth();\r\n              }\r\n              if (x>=0) {return false;}\r\n            });\r\n          }\r\n\r\n          if (availableSpace()>getFirstHiddenElementWidth()) { //and here we bring the tabs out\r\n            var x = availableSpace();\r\n            $($dropdownTabs()).each(function( index ){\r\n              if (getHiddenElementWidth(this) < x && !($(this).hasClass('always-dropdown'))){\r\n                $(this).appendTo($container);\r\n                x = x-$(this).outerWidth();\r\n              } else {return false;}\r\n             });\r\n\r\n            if (!this.options.droptabs.pullDropdownRight && !$(dropdown).is(':last-child')) {\r\n              // If not pulling-right, keep the dropdown at the end of the container.\r\n              $(dropdown).detach().insertAfter($container.find('li:last-child'));\r\n            }\r\n          }\r\n\r\n          if ($dropdownTabs().length <= 0) {\r\n            dropdown.hide();\r\n          } else {\r\n            dropdown.show();\r\n          }\r\n        },\r\n\r\n        add : function() {\r\n          //TODO\r\n        },\r\n\r\n        remove : function(){\r\n          //TODO\r\n        }\r\n    });\r\n\r\n\r\n\r\n\r\n\r\n    return swt.TabStrip = TabStrip;\r\n\r\n});\ndefine('skylark-widgets-swt/Toolbar',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-widgets-base/Widget\"\r\n],function(langx,$,Widget){ \r\n\r\n\r\n\r\n  var Toolbar = Widget.inherit({\r\n    pluginName : \"lark.toolbar\",\r\n\r\n    options : {\r\n      toolbarFloat: true,\r\n      toolbarHidden: false,\r\n      toolbarFloatOffset: 0,\r\n      template : '<div class=\"lark-toolbar\"><ul></ul></div>',\r\n      separator : {\r\n        template :  '<li><span class=\"separator\"></span></li>'\r\n      }\r\n    },\r\n\r\n    _init : function() {\r\n      var floatInitialized, initToolbarFloat, toolbarHeight;\r\n      //this.editor = editor;\r\n\r\n      //this.opts = langx.extend({}, this.opts, opts);\r\n      this.opts = this.options;\r\n\r\n\r\n      //if (!langx.isArray(this.opts.toolbar)) {\r\n      //  this.opts.toolbar = ['bold', 'italic', 'underline', 'strikethrough', '|', 'ol', 'ul', 'blockquote', 'code', '|', 'link', 'image', '|', 'indent', 'outdent'];\r\n      //}\r\n\r\n      this.wrapper = $(this._elm);\r\n      this.list = this.wrapper.find('ul');\r\n      this.list.on('click', function(e) {\r\n        return false;\r\n      });\r\n      this.wrapper.on('mousedown', (function(_this) {\r\n        return function(e) {\r\n          return _this.list.find('.menu-on').removeClass('.menu-on');\r\n        };\r\n      })(this));\r\n      $(document).on('mousedown.toolbar', (function(_this) {\r\n        return function(e) {\r\n          return _this.list.find('.menu-on').removeClass('menu-on');\r\n        };\r\n      })(this));\r\n      if (!this.opts.toolbarHidden && this.opts.toolbarFloat) {\r\n        this.wrapper.css('top', this.opts.toolbarFloatOffset);\r\n        toolbarHeight = 0;\r\n        initToolbarFloat = (function(_this) {\r\n          return function() {\r\n            _this.wrapper.css('position', 'static');\r\n            _this.wrapper.width('auto');\r\n            _this.editor.editable.util.reflow(_this.wrapper);\r\n            _this.wrapper.width(_this.wrapper.outerWidth());\r\n            _this.wrapper.css('left', _this.editor.editable.util.os.mobile ? _this.wrapper.position().left : _this.wrapper.offset().left);\r\n            _this.wrapper.css('position', '');\r\n            toolbarHeight = _this.wrapper.outerHeight();\r\n            _this.editor.placeholderEl.css('top', toolbarHeight);\r\n            return true;\r\n          };\r\n        })(this);\r\n        floatInitialized = null;\r\n\r\n        /*\r\n        $(window).on('resize.richeditor-' + this.editor.id, function(e) {\r\n          return floatInitialized = initToolbarFloat();\r\n        });\r\n        $(window).on('scroll.richeditor-' + this.editor.id, (function(_this) {\r\n          return function(e) {\r\n            var bottomEdge, scrollTop, topEdge;\r\n            if (!_this.wrapper.is(':visible')) {\r\n              return;\r\n            }\r\n            topEdge = _this.editor.wrapper.offset().top;\r\n            bottomEdge = topEdge + _this.editor.wrapper.outerHeight() - 80;\r\n            scrollTop = $(document).scrollTop() + _this.opts.toolbarFloatOffset;\r\n            if (scrollTop <= topEdge || scrollTop >= bottomEdge) {\r\n              _this.editor.wrapper.removeClass('toolbar-floating').css('padding-top', '');\r\n              if (_this.editor.editable.util.os.mobile) {\r\n                return _this.wrapper.css('top', _this.opts.toolbarFloatOffset);\r\n              }\r\n            } else {\r\n              floatInitialized || (floatInitialized = initToolbarFloat());\r\n              _this.editor.wrapper.addClass('toolbar-floating').css('padding-top', toolbarHeight);\r\n              if (_this.editor.editable.util.os.mobile) {\r\n                return _this.wrapper.css('top', scrollTop - topEdge + _this.opts.toolbarFloatOffset);\r\n              }\r\n            }\r\n          };\r\n        })(this));\r\n        */\r\n      }\r\n\r\n      /*\r\n      this.editor.on('destroy', (function(_this) {\r\n        return function() {\r\n          return _this.buttons.length = 0;\r\n        };\r\n      })(this));\r\n      */\r\n\r\n      \r\n    },\r\n\r\n    addToolItem : function(itemWidget) {\r\n      $(itemWidget._elm).appendTo(this.list);\r\n      return this;\r\n    },\r\n\r\n    addSeparator : function() {\r\n      $(this.options.separator.template).appendTo(this.list);\r\n      return this;\r\n    }\r\n\r\n  });\r\n\r\n\r\n  return Toolbar;\r\n\r\n});\ndefine('skylark-widgets-swt/main',[\r\n    \"./swt\",\r\n    \"./Widget\",\r\n    \"./Accordion\",\r\n    \"./Button\",\r\n    \"./Carousel\",\r\n    \"./CheckBox\",\r\n    \"./ComboBox\",\r\n    \"./TextBox\",\r\n    \"./Listing\",\r\n    \"./Pagination\",\r\n    \"./Progress\",\r\n    \"./Radio\",\r\n    \"./SearchBox\",\r\n    \"./SelectList\",\r\n    \"./Tabular\",\r\n    \"./TabStrip\",\r\n    \"./TextBox\",\r\n    \"./Toolbar\"\r\n], function(swt) {\r\n    return swt;\r\n});\ndefine('skylark-widgets-swt', ['skylark-widgets-swt/main'], function (main) { return main; });\n\n"]}