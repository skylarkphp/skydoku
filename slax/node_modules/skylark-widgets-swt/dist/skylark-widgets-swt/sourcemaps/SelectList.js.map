{"version":3,"sources":["SelectList.js"],"names":["define","langx","browser","eventer","noder","geom","$","swt","Widget","SelectList","inherit","klassName","pluginName","options","emptyLabelHTML","_init","this","$element","_elm","$button","find","$hiddenField","$label","$dropdownMenu","dropdown","on","proxy","itemClicked","setDefaultSelection","resize","attr","children","length","disable","doSelect","$this","document","e","key","String","fromCharCode","which","each","idx","item","text","charAt","toLowerCase","focus","off","destroy","remove","outerHTML","$item","$selectedItem","val","html","is","removeData","removeAttr","trigger","preventDefault","currentTarget","parent","target","itemChanged","closest","data","selectedItem","width","newWidth","sizer","addClass","Boolean","hasClass","body","append","clone","outerWidth","css","txt","mixin","selectByText","textContent","innerText","selectByValue","value","selector","selectBySelector","selectByIndex","index","eq","has","enable","removeClass","prototype","getValue"],"mappings":"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","file":"../SelectList.js","sourcesContent":["define([\n  \"skylark-langx/langx\",\n  \"skylark-domx-browser\",\n  \"skylark-domx-eventer\",\n  \"skylark-domx-noder\",\n  \"skylark-domx-geom\",\n  \"skylark-domx-query\",\n  \"./swt\",\n  \"./Widget\",\n  \"skylark-bootstrap3/dropdown\"\n],function(langx,browser,eventer,noder,geom,$,swt,Widget){\n\n\n\t// SELECT CONSTRUCTOR AND PROTOTYPE\n\n\tvar SelectList = Widget.inherit({\n\t\tklassName: \"SelectList\",\n\n\t\tpluginName : \"lark.selectlist\",\n\t\n\t\toptions : {\n\t\t\temptyLabelHTML: '<li data-value=\"\"><a href=\"#\">No items</a></li>'\n\n\t\t},\n\n\t\t_init : function() {\n\t\t\tthis.$element = $(this._elm);\n\t\t\t//this.options = langx.mixin({}, $.fn.selectlist.defaults, options);\n\n\n\t\t\tthis.$button = this.$element.find('.btn.dropdown-toggle');\n\t\t\tthis.$hiddenField = this.$element.find('.hidden-field');\n\t\t\tthis.$label = this.$element.find('.selected-label');\n\t\t\tthis.$dropdownMenu = this.$element.find('.dropdown-menu');\n\n\t\t\tthis.$button.dropdown();\n\n\t\t\tthis.$element.on('click.fu.selectlist', '.dropdown-menu a', langx.proxy(this.itemClicked, this));\n\t\t\tthis.setDefaultSelection();\n\n\t\t\tif (this.options.resize === 'auto' || this.$element.attr('data-resize') === 'auto') {\n\t\t\t\tthis.resize();\n\t\t\t}\n\n\t\t\t// if selectlist is empty or is one item, disable it\n\t\t\tvar items = this.$dropdownMenu.children('li');\n\t\t\tif( items.length === 0) {\n\t\t\t\tthis.disable();\n\t\t\t\tthis.doSelect( $(this.options.emptyLabelHTML));\n\t\t\t}\n\n\t\t\t// support jumping focus to first letter in dropdown when key is pressed\n\t\t\tthis.$element.on('shown.bs.dropdown', function () {\n\t\t\t\t\tvar $this = $(this);\n\t\t\t\t\t// attach key listener when dropdown is shown\n\t\t\t\t\t$(document).on('keypress.fu.selectlist', function(e){\n\n\t\t\t\t\t\t// get the key that was pressed\n\t\t\t\t\t\tvar key = String.fromCharCode(e.which);\n\t\t\t\t\t\t// look the items to find the first item with the first character match and set focus\n\t\t\t\t\t\t$this.find(\"li\").each(function(idx,item){\n\t\t\t\t\t\t\tif ($(item).text().charAt(0).toLowerCase() === key) {\n\t\t\t\t\t\t\t\t$(item).children('a').focus();\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t// unbind key event when dropdown is hidden\n\t\t\tthis.$element.on('hide.bs.dropdown', function () {\n\t\t\t\t\t$(document).off('keypress.fu.selectlist');\n\t\t\t});\n\t\t},\n\n\t\tdestroy: function () {\n\t\t\tthis.$element.remove();\n\t\t\t// any external bindings\n\t\t\t// [none]\n\t\t\t// empty elements to return to original markup\n\t\t\t// [none]\n\t\t\t// returns string of markup\n\t\t\treturn this.$element[0].outerHTML;\n\t\t},\n\n\t\tdoSelect: function ($item) {\n\t\t\tvar $selectedItem;\n\t\t\tthis.$selectedItem = $selectedItem = $item;\n\n\t\t\tthis.$hiddenField.val(this.$selectedItem.attr('data-value'));\n\t\t\tthis.$label.html($(this.$selectedItem.children()[0]).html());\n\n\t\t\t// clear and set selected item to allow declarative init state\n\t\t\t// unlike other controls, selectlist's value is stored internal, not in an input\n\t\t\tthis.$element.find('li').each(function () {\n\t\t\t\tif ($selectedItem.is($(this))) {\n\t\t\t\t\t$(this).attr('data-selected', true);\n\t\t\t\t} else {\n\t\t\t\t\t$(this).removeData('selected').removeAttr('data-selected');\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\titemClicked: function (e) {\n\t\t\tthis.$element.trigger('clicked.fu.selectlist', this.$selectedItem);\n\n\t\t\te.preventDefault();\n\t\t\t// ignore if a disabled item is clicked\n\t\t\tif ($(e.currentTarget).parent('li').is('.disabled, :disabled')) { return; }\n\n\t\t\t// is clicked element different from currently selected element?\n\t\t\tif (!($(e.target).parent().is(this.$selectedItem))) {\n\t\t\t\tthis.itemChanged(e);\n\t\t\t}\n\n\t\t\t// return focus to control after selecting an option\n\t\t\tthis.$element.find('.dropdown-toggle').focus();\n\t\t},\n\n\t\titemChanged: function (e) {\n\t\t\t//selectedItem needs to be <li> since the data is stored there, not in <a>\n\t\t\tthis.doSelect($(e.target).closest('li'));\n\n\t\t\t// pass object including text and any data-attributes\n\t\t\t// to onchange event\n\t\t\tvar data = this.selectedItem();\n\t\t\t// trigger changed event\n\t\t\tthis.$element.trigger('changed.fu.selectlist', data);\n\t\t},\n\n\t\tresize: function () {\n\t\t\tvar width = 0;\n\t\t\tvar newWidth = 0;\n\t\t\tvar sizer = $('<div/>').addClass('selectlist-sizer');\n\n\n\t\t\tif (Boolean($(document).find('html').hasClass('fuelux'))) {\n\t\t\t\t// default behavior for fuel ux setup. means fuelux was a class on the html tag\n\t\t\t\t$(document.body).append(sizer);\n\t\t\t} else {\n\t\t\t\t// fuelux is not a class on the html tag. So we'll look for the first one we find so the correct styles get applied to the sizer\n\t\t\t\t$('.fuelux:first').append(sizer);\n\t\t\t}\n\n\t\t\tsizer.append(this.$element.clone());\n\n\t\t\tthis.$element.find('a').each(function () {\n\t\t\t\tsizer.find('.selected-label').text($(this).text());\n\t\t\t\tnewWidth = sizer.find('.selectlist').outerWidth();\n\t\t\t\tnewWidth = newWidth + sizer.find('.sr-only').outerWidth();\n\t\t\t\tif (newWidth > width) {\n\t\t\t\t\twidth = newWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (width <= 1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.$button.css('width', width);\n\t\t\tthis.$dropdownMenu.css('width', width);\n\n\t\t\tsizer.remove();\n\t\t},\n\n\t\tselectedItem: function () {\n\t\t\tvar txt = this.$selectedItem.text();\n\t\t\treturn langx.mixin({\n\t\t\t\ttext: txt\n\t\t\t}, this.$selectedItem.data());\n\t\t},\n\n\t\tselectByText: function (text) {\n\t\t\tvar $item = $([]);\n\t\t\tthis.$element.find('li').each(function () {\n\t\t\t\tif ((this.textContent || this.innerText || $(this).text() || '').toLowerCase() === (text || '').toLowerCase()) {\n\t\t\t\t\t$item = $(this);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.doSelect($item);\n\t\t},\n\n\t\tselectByValue: function (value) {\n\t\t\tvar selector = 'li[data-value=\"' + value + '\"]';\n\t\t\tthis.selectBySelector(selector);\n\t\t},\n\n\t\tselectByIndex: function (index) {\n\t\t\t// zero-based index\n\t\t\tvar selector = 'li:eq(' + index + ')';\n\t\t\tthis.selectBySelector(selector);\n\t\t},\n\n\t\tselectBySelector: function (selector) {\n\t\t\tvar $item = this.$element.find(selector);\n\t\t\tthis.doSelect($item);\n\t\t},\n\n\t\tsetDefaultSelection: function () {\n\t\t\tvar $item = this.$element.find('li[data-selected=true]').eq(0);\n\n\t\t\tif ($item.length === 0) {\n\t\t\t\t$item = this.$element.find('li').has('a').eq(0);\n\t\t\t}\n\n\t\t\tthis.doSelect($item);\n\t\t},\n\n\t\tenable: function () {\n\t\t\tthis.$element.removeClass('disabled');\n\t\t\tthis.$button.removeClass('disabled');\n\t\t},\n\n\t\tdisable: function () {\n\t\t\tthis.$element.addClass('disabled');\n\t\t\tthis.$button.addClass('disabled');\n\t\t}\n\n\t});\t\n\n\n\tSelectList.prototype.getValue = SelectList.prototype.selectedItem;\n\n\n\n\treturn swt.SelectList = SelectList;\n});\n"]}