{"version":3,"sources":["ComboBox.js"],"names":["define","langx","browser","eventer","noder","geom","$","swt","Widget","ComboBox","inherit","klassName","pluginName","widgetClass","options","autoResizeMenu","filterOnKeypress","showOptionsOnKeypress","filter","list","predicate","self","visible","$dropMenu","find","remove","each","i","$li","this","text","trim","removeClass","addClass","substr","length","append","_init","$element","_elm","$input","$button","dropdown","$inputGroupBtn","on","proxy","itemclicked","inputchanged","menuShown","keypress","setDefaultSelection","children","val","_destroy","attr","outerHTML","doSelect","$item","$selectedItem","clearSelection","resizeMenu","width","outerWidth","selectedItem","data","txt","mixin","notFound","selectByText","textContent","innerText","toLowerCase","selectByValue","value","selector","selectBySelector","selectByIndex","index","item","removeData","removeAttr","enable","disable","e","target","parent","trigger","synthetic","preventDefault","focus","IS_NAVIGATIONAL","which","hasClass","selected","$selected","next","prev","previousKeyPress","extra","prototype","getValue"],"mappings":"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","file":"../ComboBox.js","sourcesContent":["define([\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"./swt\",\r\n  \"./Widget\",\r\n  \"skylark-bootstrap3/dropdown\"\r\n],function(langx,browser,eventer,noder,geom,$,swt,Widget){\r\n\r\n\r\n\r\n\t// COMBOBOX CONSTRUCTOR AND PROTOTYPE\r\n\r\n\tvar ComboBox = Widget.inherit({\r\n\t\tklassName: \"ComboBox\",\r\n\r\n\t\tpluginName : \"lark.combobox\",\r\n\r\n\t\twidgetClass : \"lark-combobox\",\r\n\r\n\t\toptions : {\r\n\r\n\t\t\tautoResizeMenu: true,\r\n\t\t\tfilterOnKeypress: false,\r\n\t\t\tshowOptionsOnKeypress: false,\r\n\t\t\tfilter: function filter (list, predicate, self) {\r\n\t\t\t\tvar visible = 0;\r\n\t\t\t\tself.$dropMenu.find('.empty-indicator').remove();\r\n\r\n\t\t\t\tlist.each(function (i) {\r\n\t\t\t\t\tvar $li = $(this);\r\n\t\t\t\t\tvar text = $(this).text().trim();\r\n\r\n\t\t\t\t\t$li.removeClass();\r\n\r\n\t\t\t\t\tif (text === predicate) {\r\n\t\t\t\t\t\t$li.addClass('text-success');\r\n\t\t\t\t\t\tvisible++;\r\n\t\t\t\t\t} else if (text.substr(0, predicate.length) === predicate) {\r\n\t\t\t\t\t\t$li.addClass('text-info');\r\n\t\t\t\t\t\tvisible++;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$li.addClass('hidden');\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (visible === 0) {\r\n\t\t\t\t\tself.$dropMenu.append('<li class=\"empty-indicator text-muted\"><em>No Matches</em></li>');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_init : function() {\r\n\t\t\tthis.$element = $(this._elm);\r\n\r\n\t\t\tthis.$dropMenu = this.$element.find('.dropdown-menu');\r\n\t\t\tthis.$input = this.$element.find('input');\r\n\t\t\tthis.$button = this.$element.find('.btn');\r\n\t\t\tthis.$button.dropdown();\r\n\t\t\tthis.$inputGroupBtn = this.$element.find('.input-group-btn');\r\n\r\n\t\t\tthis.$element.on('click.lark', 'a', langx.proxy(this.itemclicked, this));\r\n\t\t\tthis.$element.on('change.lark', 'input', langx.proxy(this.inputchanged, this));\r\n\t\t\tthis.$element.on('shown.bs.dropdown', langx.proxy(this.menuShown, this));\r\n\t\t\tthis.$input.on('keyup.lark', langx.proxy(this.keypress, this));\r\n\r\n\t\t\t// set default selection\r\n\t\t\tthis.setDefaultSelection();\r\n\r\n\t\t\t// if dropdown is empty, disable it\r\n\t\t\tvar items = this.$dropMenu.children('li');\r\n\t\t\tif( items.length === 0) {\r\n\t\t\t\tthis.$button.addClass('disabled');\r\n\t\t\t}\r\n\r\n\t\t\t// filter on load in case the first thing they do is press navigational key to pop open the menu\r\n\t\t\tif (this.options.filterOnKeypress) {\r\n\t\t\t\tthis.options.filter(this.$dropMenu.find('li'), this.$input.val(), this);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_destroy: function () {\r\n\t\t\tthis.$element.remove();\r\n\t\t\t// remove any external bindings\r\n\t\t\t// [none]\r\n\r\n\t\t\t// set input value attrbute in markup\r\n\t\t\tthis.$element.find('input').each(function () {\r\n\t\t\t\t$(this).attr('value', $(this).val());\r\n\t\t\t});\r\n\r\n\t\t\t// empty elements to return to original markup\r\n\t\t\t// [none]\r\n\r\n\t\t\treturn this.$element[0].outerHTML;\r\n\t\t},\r\n\r\n\t\tdoSelect: function ($item) {\r\n\r\n\t\t\tif (typeof $item[0] !== 'undefined') {\r\n\t\t\t\t// remove selection from old item, may result in remove and\r\n\t\t\t\t// re-addition of class if item is the same\r\n\t\t\t\tthis.$element.find('li.selected:first').removeClass('selected');\r\n\r\n\t\t\t\t// add selection to new item\r\n\t\t\t\tthis.$selectedItem = $item;\r\n\t\t\t\tthis.$selectedItem.addClass('selected');\r\n\r\n\t\t\t\t// update input\r\n\t\t\t\tthis.$input.val(this.$selectedItem.text().trim());\r\n\t\t\t} else {\r\n\t\t\t\t// this is a custom input, not in the menu\r\n\t\t\t\tthis.$selectedItem = null;\r\n\t\t\t\tthis.$element.find('li.selected:first').removeClass('selected');\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tclearSelection: function () {\r\n\t\t\tthis.$selectedItem = null;\r\n\t\t\tthis.$input.val('');\r\n\t\t\tthis.$dropMenu.find('li').removeClass('selected');\r\n\t\t},\r\n\r\n\t\tmenuShown: function () {\r\n\t\t\tif (this.options.autoResizeMenu) {\r\n\t\t\t\tthis.resizeMenu();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tresizeMenu: function () {\r\n\t\t\tvar width = this.$element.outerWidth();\r\n\t\t\tthis.$dropMenu.outerWidth(width);\r\n\t\t},\r\n\r\n\t\tselectedItem: function () {\r\n\t\t\tvar item = this.$selectedItem;\r\n\t\t\tvar data = {};\r\n\r\n\t\t\tif (item) {\r\n\t\t\t\tvar txt = this.$selectedItem.text().trim();\r\n\t\t\t\tdata = langx.mixin({\r\n\t\t\t\t\ttext: txt\r\n\t\t\t\t}, this.$selectedItem.data());\r\n\t\t\t} else {\r\n\t\t\t\tdata = {\r\n\t\t\t\t\ttext: this.$input.val().trim(),\r\n\t\t\t\t\tnotFound: true\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\t\t},\r\n\r\n\t\tselectByText: function (text) {\r\n\t\t\tvar $item = $([]);\r\n\t\t\tthis.$element.find('li').each(function () {\r\n\t\t\t\tif ((this.textContent || this.innerText || $(this).text() || '').trim().toLowerCase() === (text || '').trim().toLowerCase()) {\r\n\t\t\t\t\t$item = $(this);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.doSelect($item);\r\n\t\t},\r\n\r\n\t\tselectByValue: function (value) {\r\n\t\t\tvar selector = 'li[data-value=\"' + value + '\"]';\r\n\t\t\tthis.selectBySelector(selector);\r\n\t\t},\r\n\r\n\t\tselectByIndex: function (index) {\r\n\t\t\t// zero-based index\r\n\t\t\tvar selector = 'li:eq(' + index + ')';\r\n\t\t\tthis.selectBySelector(selector);\r\n\t\t},\r\n\r\n\t\tselectBySelector: function (selector) {\r\n\t\t\tvar $item = this.$element.find(selector);\r\n\t\t\tthis.doSelect($item);\r\n\t\t},\r\n\r\n\t\tsetDefaultSelection: function () {\r\n\t\t\tvar selector = 'li[data-selected=true]:first';\r\n\t\t\tvar item = this.$element.find(selector);\r\n\r\n\t\t\tif (item.length > 0) {\r\n\t\t\t\t// select by data-attribute\r\n\t\t\t\tthis.selectBySelector(selector);\r\n\t\t\t\titem.removeData('selected');\r\n\t\t\t\titem.removeAttr('data-selected');\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tenable: function () {\r\n\t\t\tthis.$element.removeClass('disabled');\r\n\t\t\tthis.$input.removeAttr('disabled');\r\n\t\t\tthis.$button.removeClass('disabled');\r\n\t\t},\r\n\r\n\t\tdisable: function () {\r\n\t\t\tthis.$element.addClass('disabled');\r\n\t\t\tthis.$input.attr('disabled', true);\r\n\t\t\tthis.$button.addClass('disabled');\r\n\t\t},\r\n\r\n\t\titemclicked: function (e) {\r\n\t\t\tthis.$selectedItem = $(e.target).parent();\r\n\r\n\t\t\t// set input text and trigger input change event marked as synthetic\r\n\t\t\tthis.$input.val(this.$selectedItem.text().trim()).trigger('change', {\r\n\t\t\t\tsynthetic: true\r\n\t\t\t});\r\n\r\n\t\t\t// pass object including text and any data-attributes\r\n\t\t\t// to onchange event\r\n\t\t\tvar data = this.selectedItem();\r\n\r\n\t\t\t// trigger changed event\r\n\t\t\tthis.$element.trigger('changed.lark', data);\r\n\r\n\t\t\te.preventDefault();\r\n\r\n\t\t\t// return focus to control after selecting an option\r\n\t\t\tthis.$element.find('.dropdown-toggle').focus();\r\n\t\t},\r\n\r\n\t\tkeypress: function (e) {\r\n\t\t\tvar ENTER = 13;\r\n\t\t\t//var TAB = 9;\r\n\t\t\tvar ESC = 27;\r\n\t\t\tvar LEFT = 37;\r\n\t\t\tvar UP = 38;\r\n\t\t\tvar RIGHT = 39;\r\n\t\t\tvar DOWN = 40;\r\n\r\n\t\t\tvar IS_NAVIGATIONAL = (\r\n\t\t\t\te.which === UP ||\r\n\t\t\t\te.which === DOWN ||\r\n\t\t\t\te.which === LEFT ||\r\n\t\t\t\te.which === RIGHT\r\n\t\t\t);\r\n\r\n\t\t\tif(this.options.showOptionsOnKeypress && !this.$inputGroupBtn.hasClass('open')){\r\n\t\t\t\tthis.$button.dropdown('toggle');\r\n\t\t\t\tthis.$input.focus();\r\n\t\t\t}\r\n\r\n\t\t\tif (e.which === ENTER) {\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\tvar selected = this.$dropMenu.find('li.selected').text().trim();\r\n\t\t\t\tif(selected.length > 0){\r\n\t\t\t\t\tthis.selectByText(selected);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.selectByText(this.$input.val());\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.$inputGroupBtn.removeClass('open');\r\n\t\t\t} else if (e.which === ESC) {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tthis.clearSelection();\r\n\t\t\t\tthis.$inputGroupBtn.removeClass('open');\r\n\t\t\t} else if (this.options.showOptionsOnKeypress) {\r\n\t\t\t\tif (e.which === DOWN || e.which === UP) {\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\tvar $selected = this.$dropMenu.find('li.selected');\r\n\t\t\t\t\tif ($selected.length > 0) {\r\n\t\t\t\t\t\tif (e.which === DOWN) {\r\n\t\t\t\t\t\t\t$selected = $selected.next(':not(.hidden)');\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t$selected = $selected.prev(':not(.hidden)');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ($selected.length === 0){\r\n\t\t\t\t\t\tif (e.which === DOWN) {\r\n\t\t\t\t\t\t\t$selected = this.$dropMenu.find('li:not(.hidden):first');\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t$selected = this.$dropMenu.find('li:not(.hidden):last');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.doSelect($selected);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Avoid filtering on navigation key presses\r\n\t\t\tif (this.options.filterOnKeypress && !IS_NAVIGATIONAL) {\r\n\t\t\t\tthis.options.filter(this.$dropMenu.find('li'), this.$input.val(), this);\r\n\t\t\t}\r\n\r\n\t\t\tthis.previousKeyPress = e.which;\r\n\t\t},\r\n\r\n\t\tinputchanged: function (e, extra) {\r\n\t\t\tvar val = $(e.target).val();\r\n\t\t\t// skip processing for internally-generated synthetic event\r\n\t\t\t// to avoid double processing\r\n\t\t\tif (extra && extra.synthetic) {\r\n\t\t\t\tthis.selectByText(val);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.selectByText(val);\r\n\r\n\t\t\t// find match based on input\r\n\t\t\t// if no match, pass the input value\r\n\t\t\tvar data = this.selectedItem();\r\n\t\t\tif (data.text.length === 0) {\r\n\t\t\t\tdata = {\r\n\t\t\t\t\ttext: val\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\t// trigger changed event\r\n\t\t\tthis.$element.trigger('changed.lark', data);\r\n\t\t}\r\n\r\n\t});\r\n\r\n\r\n\r\n\tComboBox.prototype.getValue = ComboBox.prototype.selectedItem;\r\n\r\n\r\n\r\n\treturn swt.ComboBox = ComboBox;\r\n});\r\n"]}