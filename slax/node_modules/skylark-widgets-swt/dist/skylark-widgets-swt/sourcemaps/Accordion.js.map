{"version":3,"sources":["Accordion.js"],"names":["define","langx","browser","eventer","noder","geom","$","collapse","swt","Widget","Panel","Accordion","inherit","klassName","pluginName","options","panel","selector","template","_init","panels","this","_velm","forEach","panelEl","push","_panels","_post","_refresh","updates","get","addPanel","remove","expand","expandAll","collapseAll","overrided","_elm","toogle","overided"],"mappings":";;;;;;;AAAAA,QACE,sBACA,uBACA,uBACA,qBACA,oBACA,qBACA,8BACA,QACA,WACA,WACA,SAASC,EAAMC,EAAQC,EAAQC,EAAMC,EAAKC,EAAEC,EAASC,EAAIC,EAAQC,GAEjE,IAAIC,EAAYF,EAAOG,SACrBC,UAAY,YAEZC,WAAa,iBAEbC,SACEC,OACEC,SAAW,WACXC,SAAW,OAIfC,MAAQ,WACN,IAAIC,KACJC,KAAKC,MAAMhB,EAAEe,KAAKN,QAAQC,MAAMC,UAAUM,QAAQ,SAASC,GACzD,IAAIR,EAAQ,IAAIL,EAAUD,MAAMc,MAGhCJ,EAAOK,KAAKT,KAEdK,KAAKK,QAAUN,GAGjBO,MAAQ,aAIRC,SAAW,SAASC,KAGpBT,QACEU,IAAM,cAMRC,SAAW,aAUXC,OAAS,aAUTC,OAAS,aAWTC,UAAY,aAWZ3B,SAAW,aAUX4B,YAAc,eAiChB,OA5BAxB,EAAUD,MAAQA,EAAME,SACtBC,UAAY,iBAEZM,MAAQ,WAENE,KAAKe,aAGPH,OAAS,WAEP3B,EAAEe,KAAKgB,MAAM9B,SAAS,SAGxBA,SAAW,WAETD,EAAEe,KAAKgB,MAAM9B,SAAS,SAGxB+B,OAAS,WAERhC,EAAEe,KAAKgB,MAAM9B,SAAS,WAGvByB,OAAS,WACPX,KAAKkB,cAIF/B,EAAIG,UAAYA","file":"../Accordion.js","sourcesContent":["define([\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-bootstrap3/collapse\",\r\n  \"./swt\",\r\n  \"./Widget\",\r\n  \"./Panel\"\r\n],function(langx,browser,eventer,noder,geom,$,collapse,swt,Widget, Panel){\r\n\r\n  var Accordion = Widget.inherit({\r\n    klassName : \"Accordion\",\r\n\r\n    pluginName : \"lark.accordion\",\r\n\r\n    options : {\r\n      panel: {\r\n        selector : \"> .panel\",\r\n        template : null,\r\n      }\r\n    },\r\n\r\n    _init : function() {\r\n      var panels = [];\r\n      this._velm.$(this.options.panel.selector).forEach(function(panelEl){\r\n        var panel = new Accordion.Panel(panelEl,{\r\n\r\n        });\r\n        panels.push(panel);\r\n      });\r\n      this._panels = panels;\r\n    },\r\n\r\n    _post : function() {\r\n      // handle internal events\r\n    },\r\n\r\n    _refresh : function(updates) {\r\n    },\r\n\r\n    panels : {\r\n      get : function() {\r\n\r\n      }\r\n    },\r\n\r\n\r\n    addPanel : function() {\r\n\r\n    },\r\n\r\n    /**\r\n     * Removes a accordion pane.\r\n     *\r\n     * @method remove\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    remove : function() {\r\n\r\n    },\r\n\r\n    /**\r\n     * Expands a accordion pane.\r\n     *\r\n     * @method remove\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    expand : function() {\r\n      // expand a panel\r\n\r\n    },\r\n\r\n    /**\r\n     * Expands all accordion panes.\r\n     *\r\n     * @method expandAll\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    expandAll : function() {\r\n      // expand a panel\r\n\r\n    },\r\n\r\n    /**\r\n     * Collapse a accordion pane.\r\n     *\r\n     * @method collapse\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    collapse : function() {\r\n\r\n    },\r\n\r\n    /**\r\n     * Collapses all accordion pane.\r\n     *\r\n     * @method collapseAll\r\n     * @return {Accordion} The current widget.\r\n     */\r\n    collapseAll : function() {\r\n\r\n    }\r\n  });\r\n\r\n  Accordion.Panel = Panel.inherit({\r\n    klassName : \"AccordionPanel\",\r\n\r\n    _init : function() {\r\n      //this._velm.collapse();\r\n      this.overrided();\r\n    },\r\n\r\n    expand : function() {\r\n      // expand this panel\r\n      $(this._elm).collapse(\"show\");\r\n    },\r\n\r\n    collapse : function() {\r\n      // collapse this panel\r\n      $(this._elm).collapse(\"hide\");\r\n    },\r\n\r\n    toogle : function() {\r\n      // toogle this panel\r\n     $(this._elm).collapse(\"toogle\");\r\n    },\r\n\r\n    remove : function() {\r\n      this.overided();\r\n    }\r\n  });\r\n\r\n  return swt.Accordion = Accordion;\r\n});\r\n"]}