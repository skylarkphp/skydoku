{"version":3,"sources":["Listing.js"],"names":["define","langx","$","swt","Widget","Listing","inherit","klassName","pluginName","options","multiSelect","multiTier","mode","levels","selectors","children","hasChildren","tree","classes","expandIcon","collapseIcon","templates","treeIcon","itemGroup","accordion","toggler","toggle","active","item","template","checkable","icon","text","selected","state","Object","_init","this","overrided","self","velm","_velm","itemSelector","_$items","on","veItem","_elmx","hasClass","value","data","undefined","index","set","$toggle","multiTierMode","hasChildrenSelector","childrenSelector","iconSelector","textSelector","itemTemplate","treeIconTemplate","treeIconSelector","expandIconClass","collapseIconClass","each","is","find","remove","trim","html","addClass","e","preventDefault","toggleClass","closest","collapse","siblings","removeClass","append","togglerSelector","has","filter","not","_refresh","updates","findItem","valueOrIdx","isNumber","eq","oldValue","selectOneItem"],"mappings":"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","file":"../Listing.js","sourcesContent":[" define([\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"./swt\",\r\n  \"./Widget\"\r\n],function(langx,$,swt,Widget){\r\n\r\n    var Listing = Widget.inherit({\r\n        klassName : \"Listing\",\r\n\r\n        pluginName : \"lark.listing\",\r\n\r\n        options : {\r\n        \tmultiSelect: false,\r\n        \t//multiTier : false,\r\n\r\n          multiTier : {\r\n            mode   : \"\",  // \"tree\" or \"accordion\" or \"popup\"\r\n            levels : 2,\r\n            selectors :  {\r\n              children : \"ul\",  // \"> .list-group\"\r\n              hasChildren : \":has(ul)\"\r\n            },\r\n            tree : {\r\n              classes : {\r\n                expandIcon: 'glyphicon-plus',    // \"glyphicon-chevron-down\", 'glyphicon-folder-open'\r\n                collapseIcon: 'glyphicon-minus', // \"glyphicon-chevron-right\", 'glyphicon-folder-close'\r\n                children : \"\"                              // \"list-group children\"\r\n              },\r\n              templates : {\r\n                treeIcon : \"<i class=\\\"glyphicon\\\"></i>\",\r\n                itemGroup: \"\"\r\n\r\n              },\r\n              selectors : {\r\n                treeIcon : \" > i\"\r\n              }\r\n            },\r\n\r\n            accordion : {\r\n              selectors : {\r\n                toggler : \" > a\"\r\n              }\r\n\r\n            }\r\n          },\r\n\r\n        \ttoggle : false,\r\n        \tclasses : {\r\n          \tactive : \"active\"\r\n        \t},\r\n\r\n\r\n        \tselectors : {\r\n          \titem : \"li\",                   // \".list-group-item\"\r\n\r\n        \t},\r\n\r\n          item : {\r\n            template : \"<span><i class=\\\"glyphicon\\\"></i><a href=\\\"javascript: void(0);\\\"></a> </span>\",\r\n            checkable : false,\r\n            selectors : {\r\n              icon : \" > span > i\",\r\n              text : \" > span > a\"\r\n            }\r\n          },\r\n\r\n        \tselected : 0\r\n        },\r\n\r\n        state : {\r\n          selected : Object\r\n        },\r\n\r\n        _init : function() {\r\n            this.overrided();\r\n            var self = this,\r\n                velm = this._velm,\r\n                itemSelector = this.options.selectors.item;\r\n\r\n            this._$items = velm.$(itemSelector);\r\n\r\n            velm.on('click', itemSelector, function () {\r\n                var veItem = self._elmx(this);\r\n\r\n                if (!veItem.hasClass('disabled')) {\r\n                  var value = veItem.data(\"value\");\r\n                  if (value === undefined) {\r\n                    value = self._$items.index(this);\r\n                  }\r\n                  self.state.set(\"selected\",value);\r\n                }\r\n\r\n                //veItem.blur();\r\n                return false;\r\n            });\r\n            this.state.set(\"selected\",this.options.selected);\r\n\r\n            var $this = velm,\r\n                $toggle = this.options.toggle,\r\n                multiTierMode = this.options.multiTier.mode,\r\n                hasChildrenSelector = this.options.multiTier.selectors.hasChildren,\r\n                childrenSelector = this.options.multiTier.selectors.children,\r\n                iconSelector = this.options.item.selectors.icon,\r\n                textSelector = this.options.item.selectors.text,\r\n                itemTemplate = this.options.item.template,                \r\n                obj = this;\r\n\r\n\r\n            if (multiTierMode) {\r\n              if (multiTierMode == \"tree\") {\r\n                   var treeIconTemplate = this.options.multiTier.tree.templates.treeIcon,\r\n                       treeIconSelector = this.options.multiTier.tree.selectors.treeIcon,\r\n                       expandIconClass = this.options.multiTier.tree.classes.expandIcon,\r\n                       collapseIconClass = this.options.multiTier.tree.classes.collapseIcon;\r\n\r\n                   this._$items.each(function(){\r\n                     if($(this).is(hasChildrenSelector)) {\r\n                        var children = $(this).find(childrenSelector);\r\n                        $(children).remove();\r\n                        text = $(this).text().trim();\r\n                        $(this).html(treeIconTemplate+itemTemplate);\r\n                        $(this).find(treeIconSelector).addClass(expandIconClass).on(\"click\" + \".\" + self.pluginName, function(e) {\r\n                            e.preventDefault();\r\n\r\n                            $(this).toggleClass(expandIconClass).toggleClass(collapseIconClass);\r\n\r\n                            $(this).closest(\"li\").toggleClass(\"active\").children(\"ul\").collapse(\"toggle\");\r\n\r\n                            if ($toggle) {\r\n                                $(this).closest(\"li\").siblings().removeClass(\"active\").children(\"ul.in\").collapse(\"hide\");\r\n                            }\r\n                        });\r\n\r\n                        $(this).find(iconSelector).addClass('glyphicon-folder-open');\r\n                        $(this).find(textSelector).text(text);\r\n                        $(this).append(children);\r\n\r\n\r\n\r\n                      }  else {\r\n                        text = $(this).text().trim();\r\n                        $(this).html(treeIconTemplate+itemTemplate);\r\n                        $(this).find(iconSelector).addClass('glyphicon-file');\r\n                        $(this).find(textSelector).text(text);\r\n                    }\r\n\r\n                   });\r\n              } else if (multiTierMode == \"accordion\") {\r\n                var togglerSelector = self.options.multiTier.accordion.selectors.toggler;\r\n\r\n                this._$items.has(childrenSelector).find(togglerSelector).on(\"click\" + \".\" + this.pluginName, function(e) {\r\n                    e.preventDefault();\r\n\r\n                    $(this).closest(itemSelector).toggleClass(\"active\").children(childrenSelector).collapse(\"toggle\");\r\n\r\n                    if ($toggle) {\r\n                        $(this).closest(itemSelector).siblings().removeClass(\"active\").children(childrenSelector+\".in\").collapse(\"hide\");\r\n                    }\r\n                });\r\n              }\r\n\r\n\r\n             this._$items.filter(\".active\").has(childrenSelector).children(childrenSelector).addClass(\"collapse in\");\r\n             this._$items.not(\".active\").has(childrenSelector).children(childrenSelector).addClass(\"collapse\");\r\n\r\n              \r\n            }   \r\n        },\r\n\r\n        _refresh : function(updates) {\r\n          this.overrided(updates);\r\n          var self  = this;\r\n\r\n          function findItem(valueOrIdx) {\r\n            var $item;\r\n            if (langx.isNumber(valueOrIdx)) {\r\n              $item = self._$items.eq(valueOrIdx);\r\n            } else {\r\n              $item = self._$items.filter('[data-value=\"' + valueOrIdx + '\"]');\r\n            }\r\n            return $item;\r\n          } \r\n                 \r\n          function selectOneItem(valueOrIdx) {\r\n            findItem(valueOrIdx).addClass(self.options.classes.active);\r\n          }\r\n\r\n          function unselectOneItem(valueOrIdx) {\r\n            findItem(valueOrIdx).removeClass(self.options.classes.active);\r\n          }\r\n\r\n          if (updates[\"selected\"]) {\r\n            if (this.options.multiSelect) {\r\n            } else {\r\n              unselectOneItem(updates[\"selected\"].oldValue);\r\n              selectOneItem(updates[\"selected\"].value);\r\n            }\r\n\r\n          }\r\n        }\r\n\r\n  });\r\n\r\n  return swt.Listing = Listing;\r\n\r\n});\r\n\r\n\r\n\r\n"]}