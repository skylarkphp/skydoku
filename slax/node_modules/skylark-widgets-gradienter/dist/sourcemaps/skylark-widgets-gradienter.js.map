{"version":3,"sources":["skylark-widgets-gradienter.js"],"names":["define","Drag","obj","gradx","init","o","oRoot","minX","maxX","minY","maxY","bSwapHorzRef","bSwapVertRef","fXMapper","fYMapper","onmousedown","start","hmode","vmode","root","isNaN","parseInt","style","left","right","xMapper","yMapper","onDragStart","Function","onDragEnd","onDrag","e","current_slider_id","this","id","fixE","y","top","bottom","x","lastMouseX","clientX","lastMouseY","clientY","minMouseX","maxMouseX","minMouseY","maxMouseY","document","onmousemove","drag","onmouseup","end","update_style_array","apply_style","panel","get_style_value","gx","css","show","color","rgb","get_rgb_obj","cp","colorPicker","nx","ny","ey","ex","Math","max","min","window","event","layerX","offsetX","layerY","offsetY","skylark","langx","browser","noder","eventer","finder","$","colors","Color","swt","Widget","ColorPicker","fn","draggable","ele","getElementById","attr","_options","options","targets","sliders","direction","type","code_shown","change","styles","rand_RGB","rand_pos","slider_ids","slider_index","shape","slider_hovered","jQ_present","load_jQ","add_event","el","evt","evt_func","element","event_function","attachEvent","call","addEventListener","get_random_position","pos","random","indexOf","push","get_random_rgb","R","G","B","update_target","values","length","i","j","len","v_len","value","html","apply_default_styles","offset","position","container_width","sort","A","style_str","suffix","split","r","g","b","load_info","set_colorpicker","console","log","add_slider","slider","k","delta","append","containment","axis","click","clr","move","rgba","toRgbString","hide","flat","showAlpha","clickoutFiresChange","showInput","showButtons","generate_options","name","state","str","replace","generate_radial_options","generate_linear_options","destroy","load_gradx","me","option_str","container","remove","splice","focus","$this","select","mouseup","off","val","center","h","v","text"],"mappings":"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","file":"../skylark-widgets-gradienter.js","sourcesContent":["define('skylark-widgets-gradienter/Drag',[],function() {\r\n    /**************************************************\r\n     * dom-drag.js\r\n     * 09.25.2001\r\n     * www.youngpup.net\r\n     **************************************************\r\n     * 10.28.2001 - fixed minor bug where events\r\n     * sometimes fired off the handle, not the root.\r\n     **************************************************/\r\n\r\n    var Drag = {\r\n\r\n        obj : null,\r\n\r\n        gradx : null,\r\n\r\n        init : function(o, oRoot, minX, maxX, minY, maxY, bSwapHorzRef, bSwapVertRef, fXMapper, fYMapper)\r\n        {\r\n            o.onmousedown\t= Drag.start;\r\n\r\n            o.hmode\t\t\t= bSwapHorzRef ? false : true ;\r\n            o.vmode\t\t\t= bSwapVertRef ? false : true ;\r\n\r\n            o.root = oRoot && oRoot != null ? oRoot : o ;\r\n\r\n            if (o.hmode  && isNaN(parseInt(o.root.style.left  ))) o.root.style.left   = \"0px\";\r\n           //if (o.vmode  && isNaN(parseInt(o.root.style.top   ))) o.root.style.top    = \"0px\";\r\n            if (!o.hmode && isNaN(parseInt(o.root.style.right ))) o.root.style.right  = \"0px\";\r\n           // if (!o.vmode && isNaN(parseInt(o.root.style.bottom))) o.root.style.bottom = \"0px\";\r\n\r\n            o.minX\t= typeof minX != 'undefined' ? minX : null;\r\n            o.minY\t= typeof minY != 'undefined' ? minY : null;\r\n            o.maxX\t= typeof maxX != 'undefined' ? maxX : null;\r\n            o.maxY\t= typeof maxY != 'undefined' ? maxY : null;\r\n\r\n            o.xMapper = fXMapper ? fXMapper : null;\r\n            o.yMapper = fYMapper ? fYMapper : null;\r\n\r\n            o.root.onDragStart\t= new Function();\r\n            o.root.onDragEnd\t= new Function();\r\n            o.root.onDrag\t\t= new Function();\r\n        },\r\n\r\n        start : function(e)\r\n        {\r\n            Drag.gradx.current_slider_id = \"#\"+this.id;\r\n\r\n            var o = Drag.obj = this;\r\n            e = Drag.fixE(e);\r\n            var y = parseInt(o.vmode ? o.root.style.top  : o.root.style.bottom);\r\n            var x = parseInt(o.hmode ? o.root.style.left : o.root.style.right );\r\n            o.root.onDragStart(x, y);\r\n\r\n            o.lastMouseX\t= e.clientX;\r\n            o.lastMouseY\t= e.clientY;\r\n\r\n            if (o.hmode) {\r\n                if (o.minX != null)\to.minMouseX\t= e.clientX - x + o.minX;\r\n                if (o.maxX != null)\to.maxMouseX\t= o.minMouseX + o.maxX - o.minX;\r\n            } else {\r\n                if (o.minX != null) o.maxMouseX = -o.minX + e.clientX + x;\r\n                if (o.maxX != null) o.minMouseX = -o.maxX + e.clientX + x;\r\n            }\r\n\r\n            if (o.vmode) {\r\n                if (o.minY != null)\to.minMouseY\t= e.clientY - y + o.minY;\r\n                if (o.maxY != null)\to.maxMouseY\t= o.minMouseY + o.maxY - o.minY;\r\n            }\r\n            else {\r\n                if (o.minY != null) o.maxMouseY = -o.minY + e.clientY + y;\r\n                if (o.maxY != null) o.minMouseY = -o.maxY + e.clientY + y;\r\n            }\r\n\r\n            document.onmousemove\t= Drag.drag;\r\n            document.onmouseup\t= Drag.end;\r\n\r\n            return false;\r\n        },\r\n\r\n        drag : function(e)\r\n        {\r\n            e = Drag.fixE(e);\r\n            var o = Drag.obj;\r\n\r\n            Drag.gradx.update_style_array();\r\n            Drag.gradx.apply_style(Drag.gradx.panel, Drag.gradx.get_style_value());\r\n            var left = Drag.gradx.gx(\"#\"+o.id).css(\"left\");\r\n\r\n\r\n            if(parseInt(left) > 60 && parseInt(left) < 390) {\r\n                Drag.gradx.gx(\"#gradx_slider_info\") //info element cached before\r\n                .css(\"left\",left)\r\n                .show();\r\n                         \r\n            }/*else {\r\n                if(parseInt(left) > 120) {\r\n                    left = \"272px\";\r\n                }else{\r\n                    left = \"120px\";\r\n                }\r\n                    \r\n                gradx.gx(\"#gradx_slider_info\") //info element cached before\r\n                .css(\"left\",left)\r\n                .show();\r\n                     \r\n            }*/\r\n             var color = Drag.gradx.gx(\"#\"+o.id).css(\"backgroundColor\");\r\n            //but what happens if @color is not in RGB ? :(\r\n            var rgb = Drag.gradx.get_rgb_obj(color);\r\n            Drag.gradx.cp.colorPicker(\"set\",rgb);\r\n\r\n\r\n            var ey\t= e.clientY;\r\n            var ex\t= e.clientX;\r\n            var y = parseInt(o.vmode ? o.root.style.top  : o.root.style.bottom);\r\n            var x = parseInt(o.hmode ? o.root.style.left : o.root.style.right );\r\n            var nx, ny;\r\n\r\n            if (o.minX != null) ex = o.hmode ? Math.max(ex, o.minMouseX) : Math.min(ex, o.maxMouseX);\r\n            if (o.maxX != null) ex = o.hmode ? Math.min(ex, o.maxMouseX) : Math.max(ex, o.minMouseX);\r\n            if (o.minY != null) ey = o.vmode ? Math.max(ey, o.minMouseY) : Math.min(ey, o.maxMouseY);\r\n            if (o.maxY != null) ey = o.vmode ? Math.min(ey, o.maxMouseY) : Math.max(ey, o.minMouseY);\r\n\r\n            nx = x + ((ex - o.lastMouseX) * (o.hmode ? 1 : -1));\r\n            ny = y + ((ey - o.lastMouseY) * (o.vmode ? 1 : -1));\r\n\r\n            if (o.xMapper)\t\tnx = o.xMapper(y)\r\n            else if (o.yMapper)\tny = o.yMapper(x)\r\n\r\n            Drag.obj.root.style[o.hmode ? \"left\" : \"right\"] = nx + \"px\";\r\n            //Drag.obj.root.style[o.vmode ? \"top\" : \"bottom\"] = ny + \"px\";\r\n            Drag.obj.lastMouseX\t= ex;\r\n            Drag.obj.lastMouseY\t= ey;\r\n\r\n            Drag.obj.root.onDrag(nx, ny);\r\n            return false;\r\n        },\r\n\r\n        end : function()\r\n        {\r\n            document.onmousemove = null;\r\n            document.onmouseup   = null;\r\n            Drag.obj.root.onDragEnd(\tparseInt(Drag.obj.root.style[Drag.obj.hmode ? \"left\" : \"right\"]), \r\n                parseInt(Drag.obj.root.style[Drag.obj.vmode ? \"top\" : \"bottom\"]));\r\n            Drag.obj = null;\r\n        },\r\n\r\n        fixE : function(e)\r\n        {\r\n            if (typeof e == 'undefined') e = window.event;\r\n            if (typeof e.layerX == 'undefined') e.layerX = e.offsetX;\r\n            if (typeof e.layerY == 'undefined') e.layerY = e.offsetY;\r\n            return e;\r\n        }\r\n    };\r\n\r\n    return Drag;\r\n});\ndefine('skylark-widgets-gradienter/Gradienter',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-query\",\r\n    \"skylark-data-color/colors\",\r\n    \"skylark-data-color/Color\",\r\n    \"skylark-widgets-swt/swt\",\r\n    \"skylark-widgets-swt/Widget\",\r\n    \"skylark-widgets-colorpicker/ColorPicker\",\r\n    \"./Drag\"\r\n],function(skylark, langx, browser, noder, eventer,finder, $, colors, Color, swt, Widget,ColorPicker,Drag) {\r\n\r\n\r\n    /*\r\n     *\r\n     * SAMPLE USAGE DETAILS :\r\n     * \r\n     * sliders structure :\r\n     *\r\n     * [\r\n     *  {\r\n     *     color: \"COLOR\",\r\n     *     position: \"POSITION\" //0 to 100 without % symbol\r\n     *  },\r\n     *  {\r\n     *     ....\r\n     *     ....\r\n     *  },\r\n     *  ....\r\n     * ]\r\n     *\r\n     */\r\n\r\n    'use strict';\r\n\r\n    //make me jquery UI  independent\r\n    if (typeof $.fn.draggable === \"undefined\") {\r\n\r\n        $.fn.draggable = function() {\r\n            //console.log(this);\r\n            var ele = document.getElementById(this.attr(\"id\"));\r\n            ele.style.top = \"121px\";\r\n            Drag.init(ele, null, 26, 426, 86, 86);\r\n            return this;\r\n        };\r\n\r\n\r\n    }\r\n\r\n\r\n    var gradX  = function(id, _options) {\r\n\r\n\r\n        var options = {\r\n            targets: [], //[element selector] -> array\r\n            sliders: [],\r\n            direction: 'left',\r\n            //if linear left | top | right | bottom\r\n            //if radial left | center | right , top | center | bottom \r\n            type: 'linear', //linear | circle | ellipse\r\n            code_shown: false, //false | true\r\n            change: function(sliders, styles) {\r\n                //nothing to do here by default\r\n            }\r\n        },\r\n    \t\r\n        //make global\t\r\n        gradx = Drag.gradx = {\r\n            rand_RGB: [],\r\n            rand_pos: [],\r\n            id: null,\r\n            slider_ids: [],\r\n            slider_index: 0, //global index for sliders\r\n            sliders: [], //contains styles of each slider\r\n            direction: \"left\", //direction of gradient or position of centre in case of radial gradients\r\n            type: \"linear\", //linear or radial\r\n            shape: \"cover\", //radial gradient size\r\n            slider_hovered: [],\r\n            jQ_present: true,\r\n            code_shown: false,\r\n            load_jQ: function() {\r\n\r\n                //handle any library conflicts here\r\n                this.gx = $;\r\n            },\r\n            //very lazy to replace this by jQuery\r\n            add_event: function(el, evt, evt_func) {\r\n                add_event(el, evt, evt_func);\r\n            },\r\n            get_random_position: function() {\r\n                var pos;\r\n\r\n                do {\r\n                    pos = parseInt(Math.random() * 100);\r\n                }\r\n                while (this.rand_pos.indexOf(pos) > -1);\r\n\r\n                this.rand_pos.push(pos);\r\n                return pos;\r\n\r\n            },\r\n            get_random_rgb: function() {\r\n\r\n                var R, G, B, color;\r\n\r\n                do {\r\n                    R = parseInt(Math.random() * 255);\r\n                    G = parseInt(Math.random() * 255);\r\n                    B = parseInt(Math.random() * 255);\r\n\r\n                    color = \"rgb(\" + R + \", \" + G + \", \" + B + \")\";\r\n                }\r\n                while (this.rand_RGB.indexOf(color) > -1);\r\n\r\n                this.rand_RGB.push(color);\r\n                return color;\r\n\r\n            },\r\n            //if target element is specified the target's style (background) is updated\r\n            update_target: function(values) {\r\n\r\n                if (this.targets.length > 0) {\r\n                    //target elements exist\r\n\r\n                    var i, j, ele, len = this.targets.length, v_len = values.length;\r\n                    for (i = 0; i < len; i++) {\r\n                        ele = gradx.gx(this.targets[i]);\r\n\r\n                        for (j = 0; j < v_len; j++) {\r\n                            ele.css(\"background-image\", values[j]);\r\n                        }\r\n\r\n                    }\r\n                }\r\n            },\r\n            //apply styles on fly\r\n            apply_style: function(ele, value) {\r\n\r\n                var type = 'linear';\r\n\r\n                if (gradx.type != 'linear') {\r\n                    type = 'radial';\r\n                }\r\n\r\n                if (value.indexOf(this.direction) > -1) {\r\n                    //add cross-browser compatibility\r\n                    var values = [\r\n                        \"-webkit-\" + type + \"-gradient(\" + value + \")\",\r\n                        \"-moz-\" + type + \"-gradient(\" + value + \")\",\r\n                        \"-ms-\" + type + \"-gradient(\" + value + \")\",\r\n                        \"-o-\" + type + \"-gradient(\" + value + \")\",\r\n                        type + \"-gradient(\" + value + \")\"\r\n                    ];\r\n                } else {\r\n                    //normal color\r\n                    values = [value];\r\n                }\r\n\r\n\r\n\r\n                var len = values.length, css = '';\r\n\r\n                while (len > 0) {\r\n                    len--;\r\n                    ele.css(\"background\", values[len]);\r\n                    css += \"background: \" + values[len] + \";\\n\";\r\n                }\r\n\r\n                //call the userdefined change function\r\n                this.change(this.sliders, values);\r\n                this.update_target(values);\r\n\r\n\r\n                gradx.gx('#gradx_code').html(css);\r\n\r\n            },\r\n            //on load\r\n            apply_default_styles: function() {\r\n                this.update_style_array()\r\n                var value = this.get_style_value();\r\n                this.apply_style(this.panel, value);\r\n            },\r\n            //update the slider_values[] while dragging\r\n            update_style_array: function() {\r\n\r\n                this.sliders = [];\r\n\r\n                var len = gradx.slider_ids.length,\r\n                        i, offset, position, id;\r\n\r\n                for (i = 0; i < len; i++) {\r\n                    id = \"#\" + gradx.slider_ids[i];\r\n                    offset = parseInt(gradx.gx(id).css(\"left\"));\r\n                    position = parseInt((offset / gradx.container_width) * 100);\r\n                    position -= 6; //TODO: find why this is required\r\n                    gradx.sliders.push([gradx.gx(id).css(\"background-color\"), position]);\r\n\r\n                }\r\n\r\n                this.sliders.sort(function(A, B) {\r\n                    if (A[1] > B[1])\r\n                        return 1;\r\n                    else\r\n                        return -1;\r\n                });\r\n            },\r\n            //creates the complete css background value to later apply style\r\n            get_style_value: function() {\r\n\r\n                var len = gradx.slider_ids.length;\r\n\r\n                if (len === 1) {\r\n                    //since only one slider , so simple background\r\n\r\n                    style_str = this.sliders[0][0];\r\n                } else {\r\n                    var style_str = \"\", suffix = \"\";\r\n                    for (var i = 0; i < len; i++) {\r\n                        if (this.sliders[i][1] == \"\") {\r\n                            style_str += suffix + (this.sliders[i][0]);\r\n\r\n                        } else {\r\n                            if (this.sliders[i][1] > 100) {\r\n                                this.sliders[i][1] = 100;\r\n                            }\r\n                            style_str += suffix + (this.sliders[i][0] + \" \" + this.sliders[i][1] + \"%\");\r\n\r\n                        }\r\n                        suffix = \" , \"; //add , from next iteration\r\n                    }\r\n\r\n                    if (this.type == 'linear') {\r\n                        //direction, [color stoppers]\r\n                        style_str = this.direction + \" , \" + style_str; //add direction for gradient\r\n                    } else {\r\n                        //position, type size, [color stoppers]\r\n                        style_str = this.direction + \" , \" + this.type + \" \" + this.shape + \" , \" + style_str;\r\n                    }\r\n                }\r\n\r\n                return style_str;\r\n            },\r\n            //@input rgb string rgb(<red>,<green>,<blue>)\r\n            //@output rgb object of form { r: <red> , g: <green> , b : <blue>}\r\n            get_rgb_obj: function(rgb) {\r\n\r\n                //rgb(r,g,b)\r\n                rgb = rgb.split(\"(\");\r\n                //r,g,b)\r\n                rgb = rgb[1];\r\n                //r g b)\r\n                rgb = rgb.split(\",\");\r\n\r\n                return {\r\n                    r: parseInt(rgb[0]),\r\n                    g: parseInt(rgb[1]),\r\n                    b: parseInt(rgb[2])\r\n                };\r\n\r\n            },\r\n            load_info: function(ele) {\r\n                var id = \"#\" + ele.id;\r\n                this.current_slider_id = id;\r\n                //check if current clicked element is an slider\r\n                if (this.slider_ids.indexOf(ele.id) > -1) { //javascript does not has # in its id\r\n\r\n                    var color = gradx.gx(id).css(\"backgroundColor\");\r\n                    //but what happens if @color is not in RGB ? :(\r\n                    var rgb = this.get_rgb_obj(color);\r\n\r\n                    var left = gradx.gx(id).css(\"left\");\r\n                    if (parseInt(left) > 26 && parseInt(left) < 426) {\r\n                        gradx.gx(\"#gradx_slider_info\") //info element cached before\r\n                                .css(\"left\", left)\r\n                                .show();\r\n\r\n                    } \r\n                    \r\n                    this.set_colorpicker(rgb);\r\n                    console.log(rgb);\r\n                }\r\n\r\n            },\r\n            //add slider\r\n            add_slider: function(sliders) {\r\n\r\n\r\n                var id, slider, k, position, value, delta;\r\n\r\n\r\n                if (sliders.length === 0) {\r\n                    sliders = [//default sliders\r\n                        {\r\n                            color: gradx.get_random_rgb(),\r\n                            position: gradx.get_random_position() //x percent of gradient panel(400px)\r\n                        },\r\n                        {\r\n                            color: gradx.get_random_rgb(),\r\n                            position: gradx.get_random_position()\r\n                        }\r\n                    ];\r\n\r\n                }\r\n\r\n\r\n                var obj = sliders;\r\n\r\n                for (k in obj) {\r\n\r\n                    if (typeof obj[k].position === \"undefined\")\r\n                        break;\r\n\r\n                    //convert % to px based on containers width\r\n                    var delta = 26; //range: 26px tp 426px\r\n                    position = parseInt((obj[k].position * this.container_width) / 100) + delta + \"px\";\r\n\r\n                    id = \"gradx_slider_\" + (this.slider_index); //create an id for this slider\r\n                    this.sliders.push(\r\n                            [\r\n                                obj[k].color,\r\n                                obj[k].position\r\n                            ]\r\n                            );\r\n\r\n                    this.slider_ids.push(id); //for reference wrt to id\r\n\r\n                    slider = \"<div class='gradx_slider' id='\" + id + \"'></div>\";\r\n                    gradx.gx(\"#gradx_start_sliders_\" + this.id).append(slider);\r\n\r\n                    gradx.gx('#' + id).css(\"backgroundColor\", obj[k].color).css(\"left\", position);\r\n                    this.slider_index++;\r\n                }\r\n\r\n                for (var i = 0, len = this.slider_ids.length; i < len; i++) {\r\n\r\n                    gradx.gx('#' + this.slider_ids[i]).draggable({\r\n                        containment: 'parent',\r\n                        axis: 'x',\r\n                        start: function() {\r\n                            if (gradx.jQ_present)\r\n                                gradx.current_slider_id = \"#\" + gradx.gx(this).attr(\"id\"); //got full jQuery power here !\r\n                        },\r\n                        drag: function() {\r\n\r\n                            gradx.update_style_array();\r\n                            gradx.apply_style(gradx.panel, gradx.get_style_value());\r\n                            var left = gradx.gx(gradx.current_slider_id).css(\"left\");\r\n\r\n\r\n                            if (parseInt(left) > 26 && parseInt(left) < 426) {\r\n                                gradx.gx(\"#gradx_slider_info\") //info element cached before\r\n                                        .css(\"left\", left)\r\n                                        .show();\r\n\r\n                            } /*else {\r\n                             if (parseInt(left) > 120) {\r\n                             left = \"272px\";\r\n                             } else {\r\n                             left = \"120px\";\r\n                             }\r\n                             \r\n                             gradx.gx(\"#gradx_slider_info\") //info element cached before\r\n                             .css(\"left\", left)\r\n                             .show();\r\n                             \r\n                             }*/\r\n                            var color = gradx.gx(gradx.current_slider_id).css(\"backgroundColor\");\r\n                            //but what happens if @color is not in RGB ? :(\r\n                            var rgb = gradx.get_rgb_obj(color);\r\n                            gradx.cp.colorPicker(\"set\", rgb);\r\n\r\n                        }\r\n\r\n                    }).click(function() {\r\n                        gradx.load_info(this);\r\n                        return false;\r\n                    });\r\n                }\r\n\r\n\r\n            },\r\n            set_colorpicker: function(clr) {\r\n                gradx.cp.colorPicker({\r\n                    move: function(color) {\r\n                        if (gradx.current_slider_id != false) {\r\n                            var rgba = color.toRgbString();\r\n                            gradx.gx(gradx.current_slider_id).css('background-color', rgba);\r\n                            gradx.update_style_array();\r\n                            gradx.apply_style(gradx.panel, gradx.get_style_value());\r\n                        }\r\n                    },\r\n                    change: function() {\r\n                        gradx.gx(\"#gradx_slider_info\").hide();\r\n                    },\r\n                    flat: true,\r\n                    showAlpha: true,\r\n                    color: clr,\r\n                    clickoutFiresChange: true,\r\n                    showInput: true,\r\n                    showButtons: false\r\n\r\n                });\r\n            },\r\n            generate_options: function(options) {\r\n\r\n                var len = options.length,\r\n                        name, state,\r\n                        str = '';\r\n\r\n                for (var i = 0; i < len; i++) {\r\n\r\n                    name = options[i].split(\" \");\r\n\r\n                    name = name[0];\r\n\r\n                    if (i < 2) {\r\n                        state = name[1];\r\n                    } else {\r\n                        state = '';\r\n                    }\r\n\r\n                    name = name.replace(\"-\", \" \");\r\n\r\n                    str += '<option value=' + options[i] + ' ' + state + '>' + name + '</option>';\r\n\r\n                }\r\n\r\n                return str;\r\n            },\r\n            generate_radial_options: function() {\r\n\r\n                var options;\r\n                options = [\"horizontal-center disabled\", \"center selected\", \"left\", \"right\"];\r\n                gradx.gx('#gradx_gradient_subtype').html(gradx.generate_options(options));\r\n\r\n                options = [\"vertical-center disabled\", \"center selected\", \"top\", \"bottom\"];\r\n                gradx.gx('#gradx_gradient_subtype2').html(gradx.generate_options(options)).show();\r\n\r\n            },\r\n            generate_linear_options: function() {\r\n\r\n                var options;\r\n                options = [\"horizontal-center disabled\", \"left selected\", \"right\", \"top\", \"bottom\"];\r\n                gradx.gx('#gradx_gradient_subtype').html(gradx.generate_options(options));\r\n\r\n                gradx.gx('#gradx_gradient_subtype2').hide();\r\n\r\n            },\r\n            destroy: function() {\r\n                var options = {\r\n                    targets: [], //[element selector] -> array\r\n                    sliders: [],\r\n                    direction: 'left',\r\n                    //if linear left | top | right | bottom\r\n                    //if radial left | center | right , top | center | bottom \r\n                    type: 'linear', //linear | circle | ellipse\r\n                    code_shown: false, //false | true\r\n                    change: function(sliders, styles) {\r\n                        //nothing to do here by default\r\n                    }\r\n                };\r\n\r\n                for (var k in options) {\r\n                    gradx[k] = options[k];\r\n                }\r\n            },\r\n            load_gradx: function(id, sliders) {\r\n                this.me = gradx.gx(id);\r\n                this.id = id.replace(\"#\", \"\");\r\n                id = this.id;\r\n                this.current_slider_id = false;\r\n                var html = \"<div class='gradx'>\\n\\\r\n                            <div id='gradx_add_slider' class='gradx_add_slider gradx_btn'><i class='icon icon-add'></i>add</div>\\n\\\r\n                            <div class='gradx_slectboxes'>\\n\\\r\n                            <select id='gradx_gradient_type' class='gradx_gradient_type'>\\n\\\r\n                                <option value='linear'>Linear</option>\\n\\\r\n                                <option value='circle'>Radial - Circle</option>\\n\\\r\n                                <option value='ellipse'>Radial - Ellipse</option>\\n\\\r\n                            </select>\\n\\\r\n                            <select id='gradx_gradient_subtype' class='gradx_gradient_type'>\\n\\\r\n                                <option id='gradx_gradient_subtype_desc' value='gradient-direction' disabled>gradient direction</option>\\n\\\r\n                                <option value='left' selected>Left</option>\\n\\\r\n                                <option value='right'>Right</option>\\n\\\r\n                                <option value='top'>Top</option>\\n\\\r\n                                <option value='bottom'>Bottom</option>\\n\\\r\n                            </select>\\n\\\r\n                            <select id='gradx_gradient_subtype2' class='gradx_gradient_type gradx_hide'>\\n\\\r\n                            </select>\\n\\\r\n                            <select id='gradx_radial_gradient_size' class='gradx_gradient_type gradx_hide'>\\n\\\r\n                            </select>\\n\\\r\n                            </div>\\n\\\r\n                            <div class='gradx_container' id='gradx_\" + id + \"'>\\n\\\r\n                                <div id='gradx_stop_sliders_\" + id + \"'></div>\\n\\\r\n                                <div class='gradx_panel' id='gradx_panel_\" + id + \"'></div>\\n\\\r\n                                <div class='gradx_start_sliders' id='gradx_start_sliders_\" + id + \"'>\\n\\\r\n                                    <div class='cp-default' id='gradx_slider_info'>\\n\\\r\n                                        <div id='gradx_slider_controls'>\\n\\\r\n                                            <div id='gradx_delete_slider' class='gradx_btn'><i class='icon icon-remove'></i>delete</div>\\n\\\r\n                                        </div>\\n\\\r\n                                        <div id='gradx_slider_content'></div>\\n\\\r\n                                    </div> \\n\\\r\n                                </div>\\n\\\r\n                            </div>\\n\\\r\n                            <div id='gradx_show_code' class='gradx_show_code gradx_btn'><i class='icon icon-file-css'></i><span>show the code</span></div>\\n\\\r\n                            <div id='gradx_show_presets' style='display:none' class='gradx_show_presets gradx_btn'><i class='icon icon-preset'></i><span>show presets</span></div>\\n\\\r\n                            <textarea class='gradx_code' id='gradx_code'></textarea>\\n\\\r\n                        </div>\";\r\n\r\n                this.me.html(html);\r\n\r\n\r\n                //generates html to select the different gradient sizes\r\n                // *only available for radial gradients\r\n                var gradient_size_val = [\"gradient-size disabled\", \"closest-side selected\", \"closest-corner\", \"farthest-side\", \"farthest-corner\", \"contain\", \"cover\"],\r\n                        option_str = '';\r\n\r\n\r\n                option_str = gradx.generate_options(gradient_size_val);\r\n\r\n                gradx.gx('#gradx_radial_gradient_size').html(option_str);\r\n\r\n\r\n                //cache divs for fast reference\r\n\r\n                this.container = gradx.gx(\"#gradx_\" + id);\r\n                this.panel = gradx.gx(\"#gradx_panel_\" + id);\r\n                //.hide();\r\n                //this.info.hide();\r\n                this.container_width = 400 //HARDCODE;\r\n                this.add_slider(sliders);\r\n\r\n\r\n                gradx.add_event(document, 'click', function() {\r\n    //            if(!gradx.jQ_present){\r\n                    if (!gradx.slider_hovered[id]) {\r\n                        gradx.gx(\"#gradx_slider_info\").hide();\r\n                        return false;\r\n                    }\r\n                });\r\n\r\n\r\n\r\n                gradx.gx('#gradx_add_slider').click(function() {\r\n                    gradx.add_slider([\r\n                        {\r\n                            color: gradx.get_random_rgb(),\r\n                            position: gradx.get_random_position() //no % symbol\r\n                        }\r\n                    ]);\r\n                    gradx.update_style_array();\r\n                    gradx.apply_style(gradx.panel, gradx.get_style_value());//(where,style)\r\n\r\n                });\r\n\r\n                //cache the element\r\n                gradx.cp = gradx.gx('#gradx_slider_content');\r\n\r\n                //call the colorpicker plugin\r\n                gradx.set_colorpicker(\"blue\");\r\n\r\n                gradx.gx('#gradx_delete_slider').click(function() {\r\n                    gradx.gx(gradx.current_slider_id).remove();\r\n                    gradx.gx(\"#gradx_slider_info\").hide();\r\n                    var id = gradx.current_slider_id.replace(\"#\", \"\");\r\n\r\n                    //remove all references from array for current deleted slider\r\n\r\n                    for (var i = 0; i < gradx.slider_ids.length; i++) {\r\n                        if (gradx.slider_ids[i] == id) {\r\n                            gradx.slider_ids.splice(i, 1);\r\n                        }\r\n                    }\r\n\r\n                    //apply modified style after removing the slider\r\n                    gradx.update_style_array();\r\n                    gradx.apply_style(gradx.panel, gradx.get_style_value());\r\n\r\n                    gradx.current_slider_id = false; //no slider is selected\r\n\r\n                });\r\n\r\n                gradx.gx('#gradx_code').focus(function() {\r\n                    var $this = gradx.gx(this);\r\n                    $this.select();\r\n\r\n                    // Work around Chrome's little problem\r\n                    $this.mouseup(function() {\r\n                        // Prevent further mouseup intervention\r\n                        $this.off(\"mouseup\");\r\n                        return false;\r\n                    });\r\n                });\r\n\r\n                gradx.gx('#gradx_gradient_type').change(function() {\r\n\r\n                    var type = gradx.gx(this).val(), options, option_str = '';\r\n\r\n                    if (type !== \"linear\") {\r\n                        //gradx.gx('#gradx_radial_gradient_size').show();\r\n\r\n                        gradx.generate_radial_options();\r\n                    } else {\r\n\r\n                        gradx.generate_linear_options();\r\n                        gradx.gx('#gradx_gradient_subtype').val(\"left\");\r\n                    }\r\n\r\n                    gradx.type = type;\r\n                    gradx.direction = gradx.gx('#gradx_gradient_subtype').val();\r\n                    gradx.apply_style(gradx.panel, gradx.get_style_value());//(where,style)\r\n                });\r\n\r\n                //change type onload userdefined\r\n                if (this.type !== \"linear\") {\r\n                    gradx.gx('#gradx_gradient_type').val(this.type);\r\n                    gradx.generate_radial_options();\r\n\r\n                    var h, v;\r\n\r\n                    if (this.direction !== 'left') {\r\n                        //user has passed his own direction\r\n                        var center;\r\n                        if (this.direction.indexOf(\",\") > -1) {\r\n                            center = this.direction.split(\",\");\r\n                        } else {\r\n                            //tolerate user mistakes\r\n                            center = this.direction.split(\" \");\r\n                        }\r\n\r\n                        h = center[0];\r\n                        v = center[1];\r\n\r\n                        //update the center points in the corr. select boxes\r\n                        gradx.gx('#gradx_gradient_subtype').val(h);\r\n                        gradx.gx('#gradx_gradient_subtype2').val(v);\r\n                    } else {\r\n                        var h = gradx.gx('#gradx_gradient_subtype').val();\r\n                        var v = gradx.gx('#gradx_gradient_subtype2').val();\r\n                    }\r\n\r\n                    gradx.direction = h + \" \" + v;\r\n                    gradx.apply_style(gradx.panel, gradx.get_style_value());//(where,style)\r\n                } else {\r\n\r\n                    //change direction if not left\r\n                    if (this.direction !== 'left') {\r\n                        gradx.gx('#gradx_gradient_subtype').val(this.direction);\r\n                    }\r\n                }\r\n\r\n                gradx.gx('#gradx_gradient_subtype').change(function() {\r\n\r\n                    if (gradx.type === 'linear') {\r\n                        gradx.direction = gradx.gx(this).val();\r\n                    } else {\r\n                        var h = gradx.gx(this).val();\r\n                        var v = gradx.gx('#gradx_gradient_subtype2').val();\r\n                        gradx.direction = h + \" \" + v;\r\n                    }\r\n                    gradx.apply_style(gradx.panel, gradx.get_style_value());//(where,style)\r\n\r\n                });\r\n\r\n                gradx.gx('#gradx_gradient_subtype2').change(function() {\r\n\r\n                    var h = gradx.gx('#gradx_gradient_subtype').val();\r\n                    var v = gradx.gx(this).val();\r\n                    gradx.direction = h + \" \" + v;\r\n                    gradx.apply_style(gradx.panel, gradx.get_style_value());//(where,style)\r\n\r\n                });\r\n\r\n                //not visible\r\n                gradx.gx('#gradx_radial_gradient_size').change(function() {\r\n                    gradx.shape = gradx.gx(this).val();\r\n                    gradx.apply_style(gradx.panel, gradx.get_style_value());//(where,style)\r\n\r\n                });\r\n\r\n                gradx.gx('#gradx_show_code').click(function() {\r\n\r\n                    if (gradx.code_shown) {\r\n                        //hide it\r\n\r\n                        gradx.code_shown = false;\r\n                        gradx.gx('#gradx_show_code span').text(\"show the code\");\r\n                        gradx.gx(\"#gradx_code\").hide();\r\n                    }\r\n                    else {\r\n                        //show it\r\n\r\n                        gradx.gx('#gradx_show_code span').text(\"hide the code\");\r\n                        gradx.gx(\"#gradx_code\").show();\r\n                        gradx.code_shown = true;\r\n                    }\r\n                });\r\n\r\n                //show or hide onload\r\n                if (gradx.code_shown) {\r\n                    //show it\r\n\r\n                    gradx.gx('#gradx_show_code span').text(\"hide the code\");\r\n                    gradx.gx(\"#gradx_code\").show();\r\n\r\n                }\r\n\r\n                gradx.add_event(document.getElementById('gradx_slider_info'), 'mouseout', function() {\r\n                    gradx.slider_hovered[id] = false;\r\n                });\r\n                gradx.add_event(document.getElementById('gradx_slider_info'), 'mouseover', function() {\r\n                    gradx.slider_hovered[id] = true;\r\n\r\n                });\r\n\r\n            }\r\n\r\n\r\n\r\n\r\n        };\r\n\r\n\r\n\r\n        function  add_event(element, event, event_function)\r\n        {\r\n            if (element.attachEvent) //Internet Explorer\r\n                element.attachEvent(\"on\" + event, function() {\r\n                    event_function.call(element);\r\n                });\r\n            else if (element.addEventListener) //Firefox & company\r\n                element.addEventListener(event, event_function, false); //don't need the 'call' trick because in FF everything already works in the right way\r\n        }\r\n        ;\r\n\r\n\r\n\r\n        //load jQuery library into gradx.gx\r\n        gradx.load_jQ();\r\n\r\n\r\n        /* merge _options into options */\r\n        langx.mixin(options, _options);\r\n\r\n        //apply options to gradx object\r\n\r\n        for (var k in options) {\r\n\r\n            //load the options into gradx object\r\n            gradx[k] = options[k];\r\n\r\n        }\r\n\r\n        gradx.load_gradx(id, gradx.sliders);\r\n        gradx.apply_default_styles();\r\n\r\n\r\n    };\r\n\r\n    return skylark.attach(\"widgets.Gradienter\",gradX);\r\n});\ndefine('skylark-widgets-gradienter/main',[\r\n    \"./Gradienter\",\r\n], function(Gradienter) {\r\n    return Gradienter;\r\n});\r\n\ndefine('skylark-widgets-gradienter', ['skylark-widgets-gradienter/main'], function (main) { return main; });\n\n"]}