{"version":3,"sources":["plugins.js"],"names":["define","skylark","langx","noder","datax","eventer","finder","geom","styler","fx","$","elmx","slice","Array","prototype","pluginKlasses","concat","shortcuts","instantiate","elm","pluginName","options","pair","split","instanceDataName","pluginInstance","data","Error","destroy","removeData","undefined","reset","pluginKlass","Plugin","Evented","inherit","klassName","_construct","this","_elm","_initOptions","ctor","constructor","cache","defaults","ctors","unshift","superclass","i","length","hasOwnProperty","mixin","Object","defineProperty","value","_destroy","noop","_delay","handler","delay","instance","setTimeout","apply","arguments","option","key","parts","curOption","shift","pop","_setOptions","_setOption","getUID","prefix","Math","random","document","getElementById","plugins","fn","plugin","name","args","call","self","returnValue","each","partial","domNode","register","shortcutName","extfn","isFunction","shortcut","methodName","charAt","shortcutter","args2","ret","attach"],"mappings":"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","file":"../plugins.js","sourcesContent":["define([\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-data\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-fx\",\r\n    \"skylark-domx-query\",\r\n    \"skylark-domx-velm\"\r\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx, $, elmx) {\r\n    \"use strict\";\r\n\r\n    var slice = Array.prototype.slice,\r\n        concat = Array.prototype.concat,\r\n        pluginKlasses = {},\r\n        shortcuts = {};\r\n\r\n    /*\r\n     * Create or get or destory a plugin instance assocated with the element.\r\n     */\r\n    function instantiate(elm,pluginName,options) {\r\n        var pair = pluginName.split(\":\"),\r\n            instanceDataName = pair[1];\r\n        pluginName = pair[0];\r\n\r\n        if (!instanceDataName) {\r\n            instanceDataName = pluginName;\r\n        }\r\n\r\n        var pluginInstance = datax.data( elm, instanceDataName );\r\n\r\n        if (options === \"instance\") {\r\n            return pluginInstance;\r\n        } else if (options === \"destroy\") {\r\n            if (!pluginInstance) {\r\n                throw new Error (\"The plugin instance is not existed\");\r\n            }\r\n            pluginInstance.destroy();\r\n            datax.removeData( elm, pluginName);\r\n            pluginInstance = undefined;\r\n        } else {\r\n            if (!pluginInstance) {\r\n                if (options !== undefined && typeof options !== \"object\") {\r\n                    throw new Error (\"The options must be a plain object\");\r\n                }\r\n                var pluginKlass = pluginKlasses[pluginName]; \r\n                pluginInstance = new pluginKlass(elm,options);\r\n                datax.data( elm, instanceDataName,pluginInstance );\r\n            } else if (options) {\r\n                pluginInstance.reset(options);\r\n            }\r\n        }\r\n\r\n        return pluginInstance;\r\n    }\r\n\r\n\r\n    function shortcutter(pluginName,extfn) {\r\n       /*\r\n        * Create or get or destory a plugin instance assocated with the element,\r\n        * and also you can execute the plugin method directory;\r\n        */\r\n        return function (elm,options) {\r\n            var  plugin = instantiate(elm, pluginName,\"instance\");\r\n            if ( options === \"instance\" ) {\r\n              return plugin || null;\r\n            }\r\n\r\n            if (!plugin) {\r\n                plugin = instantiate(elm, pluginName,typeof options == 'object' && options || {});\r\n                if (typeof options != \"string\") {\r\n                  return this;\r\n                }\r\n            } \r\n            if (options) {\r\n                var args = slice.call(arguments,1); //2\r\n                if (extfn) {\r\n                    return extfn.apply(plugin,args);\r\n                } else {\r\n                    if (typeof options == 'string') {\r\n                        var methodName = options;\r\n\r\n                        if ( !plugin ) {\r\n                            throw new Error( \"cannot call methods on \" + pluginName +\r\n                                \" prior to initialization; \" +\r\n                                \"attempted to call method '\" + methodName + \"'\" );\r\n                        }\r\n\r\n                        if ( !langx.isFunction( plugin[ methodName ] ) || methodName.charAt( 0 ) === \"_\" ) {\r\n                            throw new Error( \"no such method '\" + methodName + \"' for \" + pluginName +\r\n                                \" plugin instance\" );\r\n                        }\r\n\r\n                        return plugin[methodName].apply(plugin,args);\r\n                    }                \r\n                }                \r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Register a plugin type\r\n     */\r\n    function register( pluginKlass,shortcutName,instanceDataName,extfn) {\r\n        var pluginName = pluginKlass.prototype.pluginName;\r\n        \r\n        pluginKlasses[pluginName] = pluginKlass;\r\n\r\n        if (shortcutName) {\r\n            if (instanceDataName && langx.isFunction(instanceDataName)) {\r\n                extfn = instanceDataName;\r\n                instanceDataName = null;\r\n            } \r\n            if (instanceDataName) {\r\n                pluginName = pluginName + \":\" + instanceDataName;\r\n            }\r\n\r\n            var shortcut = shortcuts[shortcutName] = shortcutter(pluginName,extfn);\r\n                \r\n            $.fn[shortcutName] = function(options) {\r\n                var returnValue = this;\r\n\r\n                if ( !this.length && options === \"instance\" ) {\r\n                  returnValue = undefined;\r\n                } else {\r\n                  var args = slice.call(arguments);\r\n                  this.each(function () {\r\n                    var args2 = slice.call(args);\r\n                    args2.unshift(this);\r\n                    var  ret  = shortcut.apply(undefined,args2);\r\n                    if (ret !== undefined) {\r\n                        returnValue = ret;\r\n                        return false;\r\n                    }\r\n                  });\r\n                }\r\n\r\n                return returnValue;\r\n            };\r\n\r\n            elmx.partial(shortcutName,function(options) {\r\n                var  ret  = shortcut(this._elm,options);\r\n                if (ret === undefined) {\r\n                    ret = this;\r\n                }\r\n                return ret;\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n \r\n    var Plugin =   langx.Evented.inherit({\r\n        klassName: \"Plugin\",\r\n\r\n        _construct : function(elm,options) {\r\n           this._elm = elm;\r\n           this._initOptions(options);\r\n        },\r\n\r\n        _initOptions : function(options) {\r\n          var ctor = this.constructor,\r\n              cache = ctor.cache = ctor.cache || {},\r\n              defaults = cache.defaults;\r\n          if (!defaults) {\r\n            var  ctors = [];\r\n            do {\r\n              ctors.unshift(ctor);\r\n              if (ctor === Plugin) {\r\n                break;\r\n              }\r\n              ctor = ctor.superclass;\r\n            } while (ctor);\r\n\r\n            defaults = cache.defaults = {};\r\n            for (var i=0;i<ctors.length;i++) {\r\n              ctor = ctors[i];\r\n              if (ctor.prototype.hasOwnProperty(\"options\")) {\r\n                langx.mixin(defaults,ctor.prototype.options,true);\r\n              }\r\n              if (ctor.hasOwnProperty(\"options\")) {\r\n                langx.mixin(defaults,ctor.options,true);\r\n              }\r\n            }\r\n          }\r\n          Object.defineProperty(this,\"options\",{\r\n            value :langx.mixin({},defaults,options,true)\r\n          });\r\n\r\n          //return this.options = langx.mixin({},defaults,options);\r\n          return this.options;\r\n        },\r\n\r\n\r\n        destroy: function() {\r\n            var that = this;\r\n\r\n            this._destroy();\r\n            // We can probably remove the unbind calls in 2.0\r\n            // all event bindings should go through this._on()\r\n            datax.removeData(this._elm,this.pluginName );\r\n        },\r\n\r\n        _destroy: langx.noop,\r\n\r\n        _delay: function( handler, delay ) {\r\n            function handlerProxy() {\r\n                return ( typeof handler === \"string\" ? instance[ handler ] : handler )\r\n                    .apply( instance, arguments );\r\n            }\r\n            var instance = this;\r\n            return setTimeout( handlerProxy, delay || 0 );\r\n        },\r\n\r\n        option: function( key, value ) {\r\n            var options = key;\r\n            var parts;\r\n            var curOption;\r\n            var i;\r\n\r\n            if ( arguments.length === 0 ) {\r\n\r\n                // Don't return a reference to the internal hash\r\n                return langx.mixin( {}, this.options );\r\n            }\r\n\r\n            if ( typeof key === \"string\" ) {\r\n\r\n                // Handle nested keys, e.g., \"foo.bar\" => { foo: { bar: ___ } }\r\n                options = {};\r\n                parts = key.split( \".\" );\r\n                key = parts.shift();\r\n                if ( parts.length ) {\r\n                    curOption = options[ key ] = langx.mixin( {}, this.options[ key ] );\r\n                    for ( i = 0; i < parts.length - 1; i++ ) {\r\n                        curOption[ parts[ i ] ] = curOption[ parts[ i ] ] || {};\r\n                        curOption = curOption[ parts[ i ] ];\r\n                    }\r\n                    key = parts.pop();\r\n                    if ( arguments.length === 1 ) {\r\n                        return curOption[ key ] === undefined ? null : curOption[ key ];\r\n                    }\r\n                    curOption[ key ] = value;\r\n                } else {\r\n                    if ( arguments.length === 1 ) {\r\n                        return this.options[ key ] === undefined ? null : this.options[ key ];\r\n                    }\r\n                    options[ key ] = value;\r\n                }\r\n            }\r\n\r\n            this._setOptions( options );\r\n\r\n            return this;\r\n        },\r\n\r\n        _setOptions: function( options ) {\r\n            var key;\r\n\r\n            for ( key in options ) {\r\n                this._setOption( key, options[ key ] );\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        _setOption: function( key, value ) {\r\n\r\n            this.options[ key ] = value;\r\n\r\n            return this;\r\n        },\r\n\r\n        getUID : function (prefix) {\r\n            prefix = prefix || \"plugin\";\r\n            do prefix += ~~(Math.random() * 1000000)\r\n            while (document.getElementById(prefix))\r\n            return prefix;\r\n        },\r\n\r\n        elm : function() {\r\n            return this._elm;\r\n        }\r\n\r\n    });\r\n\r\n    $.fn.plugin = function(name,options) {\r\n        var args = slice.call( arguments, 1 ),\r\n            self = this,\r\n            returnValue = this;\r\n\r\n        this.each(function(){\r\n            returnValue = instantiate.apply(self,[this,name].concat(args));\r\n        });\r\n        return returnValue;\r\n    };\r\n\r\n    elmx.partial(\"plugin\",function(name,options) {\r\n        var args = slice.call( arguments, 1 );\r\n        return instantiate.apply(this,[this.domNode,name].concat(args));\r\n    }); \r\n\r\n\r\n    function plugins() {\r\n        return plugins;\r\n    }\r\n     \r\n    langx.mixin(plugins, {\r\n        instantiate,\r\n        Plugin,\r\n        register,\r\n        shortcuts\r\n    });\r\n\r\n    return  skylark.attach(\"domx.plugins\",plugins);\r\n});"]}