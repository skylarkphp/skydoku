{"version":3,"sources":["addons/markdown.js"],"names":["define","langx","Editor","addon","init","editor","parser","options","mdparser","window","marked","enableMarkdown","setOption","htmleditor","find","html","lblMarkedview","addAction","name","replace","mode","on","getCursorMode","markdown","cm","pos","getDoc","getCursor","posend","i","line","replaceRange","getLine","ch","length","setCursor","focus","matches","prefix","match","Number","currentvalue","e","param","extend","this","render","disableMarkdown","lblCodeview"],"mappings":";;;;;;;AAAAA,QACI,sBACA,aACF,SAASC,EAAMC,GACbA,EAAOC,MAAO,YAEVC,KAAM,SAASC,GAEX,IAAIC,EAASD,EAAOE,QAAQC,UAAYC,OAAOC,QAAU,KAqGzD,SAASC,IACLN,EAAOA,OAAOO,UAAU,OAAQ,OAChCP,EAAOQ,WAAWC,KAAK,gCAAgCC,KAAKV,EAAOE,QAAQS,eAG/E,SAASC,EAAUC,EAAMC,EAASC,GAC9Bf,EAAOgB,GAAG,UAAUH,EAAM,WACQ,YAA1Bb,EAAOiB,iBACPjB,EAAe,eAARe,EAAwB,cAAgB,oBAAoBD,KA3G1Eb,IAEDD,EAAOE,QAAQgB,UACfZ,IAGJM,EAAU,OAAQ,UAClBA,EAAU,SAAU,QACpBA,EAAU,SAAU,UACpBA,EAAU,aAAc,OAAQ,eAChCA,EAAU,OAAQ,iBAClBA,EAAU,QAAS,kBAEnBZ,EAAOgB,GAAG,gBAAiB,WAEvB,GAA8B,YAA1BhB,EAAOiB,gBAA+B,CAMtC,IAJA,IAAIE,EAAUnB,EAAOA,OACjBoB,EAAUD,EAAGE,SAASC,WAAU,GAChCC,EAAUJ,EAAGE,SAASC,WAAU,GAE3BE,EAAEJ,EAAIK,KAAMD,EAAGD,EAAOE,KAAK,EAAGD,IACnCL,EAAGO,aAAa,KAAKP,EAAGQ,QAAQH,IAAMC,KAAMD,EAAGI,GAAI,IAAOH,KAAMD,EAAGI,GAAIT,EAAGQ,QAAQH,GAAGK,SAGzFV,EAAGW,WACCL,KAAMF,EAAOE,KACbG,GAAIT,EAAGQ,QAAQJ,EAAOE,MAAMI,SAEhCV,EAAGY,WAIX/B,EAAOgB,GAAG,gBAAiB,WAEvB,GAA8B,YAA1BhB,EAAOiB,gBAA+B,CAEtC,IAM2Ce,EANvCb,EAAUnB,EAAOA,OACjBoB,EAAUD,EAAGE,SAASC,WAAU,GAChCC,EAAUJ,EAAGE,SAASC,WAAU,GAChCW,EAAU,EAEd,GAAIb,EAAIK,KAAO,GAGRO,EAFYb,EAAGQ,QAAQP,EAAIK,KAAK,GAEbS,MAAM,eACxBD,EAASE,OAAOH,EAAQ,IAAI,GAIpC,IAAK,IAAIR,EAAEJ,EAAIK,KAAMD,EAAGD,EAAOE,KAAK,EAAGD,IACnCL,EAAGO,aAAaO,EAAO,KAAKd,EAAGQ,QAAQH,IAAMC,KAAMD,EAAGI,GAAI,IAAOH,KAAMD,EAAGI,GAAIT,EAAGQ,QAAQH,GAAGK,SAC5FI,IAGJd,EAAGW,WACCL,KAAMF,EAAOE,KACbG,GAAIT,EAAGQ,QAAQJ,EAAOE,MAAMI,SAEhCV,EAAGY,WAIX/B,EAAOgB,GAAG,aAAc,WACc,OAA9BhB,EAAOA,OAAOE,QAAQa,OACtBf,EAAOoC,aAAenC,EAAOD,EAAOoC,iBAI5CpC,EAAOgB,GAAG,aAAc,SAASqB,EAAGC,GAChC,GAAkC,OAA9BtC,EAAOA,OAAOE,QAAQa,KAAe,CAC3Bf,EAAOA,OAAOqB,SAASC,YACjCgB,EAAMvB,KAAO,cAOrBnB,EAAM2C,OAAOvC,GAETM,eAAgB,WACZA,IACAkC,KAAKC,UAETC,gBAAiB,WACbF,KAAKxC,OAAOO,UAAU,OAAQ,aAC9BiC,KAAKhC,WAAWC,KAAK,gCAAgCC,KAAK8B,KAAKtC,QAAQyC,aACvEH,KAAKC,YAMbzC,EAAOgB,IACHV,eAAkB,WAAaN,EAAOM,kBACtCoC,gBAAkB,WAAa1C,EAAO0C","file":"../../addons/markdown.js","sourcesContent":["define([\r\n    \"skylark-langx/langx\",\r\n    \"../Editor\"\r\n],function(langx,Editor){\r\n    Editor.addon( 'markdown', {\r\n\r\n        init: function(editor) {\r\n\r\n            var parser = editor.options.mdparser || window.marked || null;\r\n\r\n            if (!parser) return;\r\n\r\n            if (editor.options.markdown) {\r\n                enableMarkdown();\r\n            }\r\n\r\n            addAction('bold', '**$1**');\r\n            addAction('italic', '*$1*');\r\n            addAction('strike', '~~$1~~');\r\n            addAction('blockquote', '> $1', 'replaceLine');\r\n            addAction('link', '[$1](http://)');\r\n            addAction('image', '![$1](http://)');\r\n\r\n            editor.on('action.listUl', function() {\r\n\r\n                if (editor.getCursorMode() == 'markdown') {\r\n\r\n                    var cm      = editor.editor,\r\n                        pos     = cm.getDoc().getCursor(true),\r\n                        posend  = cm.getDoc().getCursor(false);\r\n\r\n                    for (var i=pos.line; i<(posend.line+1);i++) {\r\n                        cm.replaceRange('* '+cm.getLine(i), { line: i, ch: 0 }, { line: i, ch: cm.getLine(i).length });\r\n                    }\r\n\r\n                    cm.setCursor({ \r\n                        line: posend.line, \r\n                        ch: cm.getLine(posend.line).length \r\n                    });\r\n                    cm.focus();\r\n                }\r\n            });\r\n\r\n            editor.on('action.listOl', function() {\r\n\r\n                if (editor.getCursorMode() == 'markdown') {\r\n\r\n                    var cm      = editor.editor,\r\n                        pos     = cm.getDoc().getCursor(true),\r\n                        posend  = cm.getDoc().getCursor(false),\r\n                        prefix  = 1;\r\n\r\n                    if (pos.line > 0) {\r\n                        var prevline = cm.getLine(pos.line-1), matches;\r\n\r\n                        if(matches = prevline.match(/^(\\d+)\\./)) {\r\n                            prefix = Number(matches[1])+1;\r\n                        }\r\n                    }\r\n\r\n                    for (var i=pos.line; i<(posend.line+1);i++) {\r\n                        cm.replaceRange(prefix+'. '+cm.getLine(i), { line: i, ch: 0 }, { line: i, ch: cm.getLine(i).length });\r\n                        prefix++;\r\n                    }\r\n\r\n                    cm.setCursor({ \r\n                        line: posend.line, \r\n                        ch: cm.getLine(posend.line).length \r\n                    });\r\n                    cm.focus();\r\n                }\r\n            });\r\n\r\n            editor.on('renderLate', function() {\r\n                if (editor.editor.options.mode == 'gfm') {\r\n                    editor.currentvalue = parser(editor.currentvalue);\r\n                }\r\n            });\r\n\r\n            editor.on('cursorMode', function(e, param) {\r\n                if (editor.editor.options.mode == 'gfm') {\r\n                    var pos = editor.editor.getDoc().getCursor();\r\n                    param.mode = 'markdown';\r\n                    //if (!editor.editor.getTokenAt(pos).state.base.htmlState) {\r\n                    //    param.mode = 'markdown';\r\n                    //}\r\n                }\r\n            });\r\n\r\n            langx.extend(editor, {\r\n\r\n                enableMarkdown: function() {\r\n                    enableMarkdown();\r\n                    this.render();\r\n                },\r\n                disableMarkdown: function() {\r\n                    this.editor.setOption('mode', 'htmlmixed');\r\n                    this.htmleditor.find('.uk-htmleditor-button-code a').html(this.options.lblCodeview);\r\n                    this.render();\r\n                }\r\n\r\n            });\r\n\r\n            // switch markdown mode on event\r\n            editor.on({\r\n                enableMarkdown  : function() { editor.enableMarkdown(); },\r\n                disableMarkdown : function() { editor.disableMarkdown(); }\r\n            });\r\n\r\n            function enableMarkdown() {\r\n                editor.editor.setOption('mode', 'gfm');\r\n                editor.htmleditor.find('.uk-htmleditor-button-code a').html(editor.options.lblMarkedview);\r\n            }\r\n\r\n            function addAction(name, replace, mode) {\r\n                editor.on('action.'+name, function() {\r\n                    if (editor.getCursorMode() == 'markdown') {\r\n                        editor[mode == 'replaceLine' ? 'replaceLine' : 'replaceSelection'](replace);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    });\r\n});"]}