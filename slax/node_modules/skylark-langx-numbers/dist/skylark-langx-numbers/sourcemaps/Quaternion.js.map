{"version":3,"sources":["Quaternion.js"],"names":["define","maths","numbers","Quaternion","x","y","z","w","this","_x","_y","_z","_w","undefined","Object","assign","slerp","qa","qb","qm","t","copy","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","s","cos","dir","sqrSin","Number","EPSILON","sin","Math","sqrt","len","atan2","tDir","f","defineProperties","prototype","get","set","value","_onChangeCallback","clone","constructor","quaternion","setFromEuler","euler","update","isEuler","Error","order","c1","c2","c3","s1","s2","s3","setFromAxisAngle","axis","angle","halfAngle","setFromRotationMatrix","m","te","elements","m11","m12","m13","m21","m22","m23","m31","m32","m33","trace","setFromUnitVectors","vFrom","vTo","r","dot","abs","normalize","angleTo","q","acos","clamp","rotateTowards","step","min","inverse","conjugate","v","lengthSq","length","l","multiply","p","console","warn","multiplyQuaternions","premultiply","a","b","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","equals","fromArray","array","offset","toArray","fromBufferAttribute","attribute","index","getX","getY","getZ","getW","_onChange","callback"],"mappings":"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","file":"../Quaternion.js","sourcesContent":["define([\r\n\t\"skylark-langx-maths\",\r\n\t\"./numbers\"\r\n] ,function(maths,numbers) {\r\n\r\n\r\n\tfunction Quaternion( x, y, z, w ) {\r\n\r\n\t\tthis._x = x || 0;\r\n\t\tthis._y = y || 0;\r\n\t\tthis._z = z || 0;\r\n\t\tthis._w = ( w !== undefined ) ? w : 1;\r\n\r\n\t}\r\n\r\n\tObject.assign( Quaternion, {\r\n\r\n\t\tslerp: function ( qa, qb, qm, t ) {\r\n\r\n\t\t\treturn qm.copy( qa ).slerp( qb, t );\r\n\r\n\t\t},\r\n\r\n\t\tslerpFlat: function ( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\r\n\r\n\t\t\t// fuzz-free, array-based Quaternion SLERP operation\r\n\r\n\t\t\tvar x0 = src0[ srcOffset0 + 0 ],\r\n\t\t\t\ty0 = src0[ srcOffset0 + 1 ],\r\n\t\t\t\tz0 = src0[ srcOffset0 + 2 ],\r\n\t\t\t\tw0 = src0[ srcOffset0 + 3 ],\r\n\r\n\t\t\t\tx1 = src1[ srcOffset1 + 0 ],\r\n\t\t\t\ty1 = src1[ srcOffset1 + 1 ],\r\n\t\t\t\tz1 = src1[ srcOffset1 + 2 ],\r\n\t\t\t\tw1 = src1[ srcOffset1 + 3 ];\r\n\r\n\t\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\r\n\r\n\t\t\t\tvar s = 1 - t,\r\n\r\n\t\t\t\t\tcos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\r\n\r\n\t\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\r\n\t\t\t\t\tsqrSin = 1 - cos * cos;\r\n\r\n\t\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\r\n\t\t\t\tif ( sqrSin > Number.EPSILON ) {\r\n\r\n\t\t\t\t\tvar sin = Math.sqrt( sqrSin ),\r\n\t\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\r\n\r\n\t\t\t\t\ts = Math.sin( s * len ) / sin;\r\n\t\t\t\t\tt = Math.sin( t * len ) / sin;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar tDir = t * dir;\r\n\r\n\t\t\t\tx0 = x0 * s + x1 * tDir;\r\n\t\t\t\ty0 = y0 * s + y1 * tDir;\r\n\t\t\t\tz0 = z0 * s + z1 * tDir;\r\n\t\t\t\tw0 = w0 * s + w1 * tDir;\r\n\r\n\t\t\t\t// Normalize in case we just did a lerp:\r\n\t\t\t\tif ( s === 1 - t ) {\r\n\r\n\t\t\t\t\tvar f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\r\n\r\n\t\t\t\t\tx0 *= f;\r\n\t\t\t\t\ty0 *= f;\r\n\t\t\t\t\tz0 *= f;\r\n\t\t\t\t\tw0 *= f;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdst[ dstOffset ] = x0;\r\n\t\t\tdst[ dstOffset + 1 ] = y0;\r\n\t\t\tdst[ dstOffset + 2 ] = z0;\r\n\t\t\tdst[ dstOffset + 3 ] = w0;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.defineProperties( Quaternion.prototype, {\r\n\r\n\t\tx: {\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this._x;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tthis._x = value;\r\n\t\t\t\tthis._onChangeCallback();\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\ty: {\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this._y;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tthis._y = value;\r\n\t\t\t\tthis._onChangeCallback();\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tz: {\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this._z;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tthis._z = value;\r\n\t\t\t\tthis._onChangeCallback();\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tw: {\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this._w;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tthis._w = value;\r\n\t\t\t\tthis._onChangeCallback();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( Quaternion.prototype, {\r\n\r\n\t\tset: function ( x, y, z, w ) {\r\n\r\n\t\t\tthis._x = x;\r\n\t\t\tthis._y = y;\r\n\t\t\tthis._z = z;\r\n\t\t\tthis._w = w;\r\n\r\n\t\t\tthis._onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tclone: function () {\r\n\r\n\t\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\r\n\r\n\t\t},\r\n\r\n\t\tcopy: function ( quaternion ) {\r\n\r\n\t\t\tthis._x = quaternion.x;\r\n\t\t\tthis._y = quaternion.y;\r\n\t\t\tthis._z = quaternion.z;\r\n\t\t\tthis._w = quaternion.w;\r\n\r\n\t\t\tthis._onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromEuler: function ( euler, update ) {\r\n\r\n\t\t\tif ( ! ( euler && euler.isEuler ) ) {\r\n\r\n\t\t\t\tthrow new Error( 'mathsQuaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar x = euler._x, y = euler._y, z = euler._z, order = euler.order;\r\n\r\n\t\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\r\n\t\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\r\n\t\t\t//\tcontent/SpinCalc.m\r\n\r\n\t\t\tvar cos = Math.cos;\r\n\t\t\tvar sin = Math.sin;\r\n\r\n\t\t\tvar c1 = cos( x / 2 );\r\n\t\t\tvar c2 = cos( y / 2 );\r\n\t\t\tvar c3 = cos( z / 2 );\r\n\r\n\t\t\tvar s1 = sin( x / 2 );\r\n\t\t\tvar s2 = sin( y / 2 );\r\n\t\t\tvar s3 = sin( z / 2 );\r\n\r\n\t\t\tif ( order === 'XYZ' ) {\r\n\r\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t\t} else if ( order === 'YXZ' ) {\r\n\r\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n\t\t\t} else if ( order === 'ZXY' ) {\r\n\r\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t\t} else if ( order === 'ZYX' ) {\r\n\r\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n\t\t\t} else if ( order === 'YZX' ) {\r\n\r\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t\t} else if ( order === 'XZY' ) {\r\n\r\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( update !== false ) this._onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromAxisAngle: function ( axis, angle ) {\r\n\r\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\r\n\r\n\t\t\t// assumes axis is normalized\r\n\r\n\t\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\r\n\r\n\t\t\tthis._x = axis.x * s;\r\n\t\t\tthis._y = axis.y * s;\r\n\t\t\tthis._z = axis.z * s;\r\n\t\t\tthis._w = Math.cos( halfAngle );\r\n\r\n\t\t\tthis._onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromRotationMatrix: function ( m ) {\r\n\r\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\r\n\r\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\t\tvar te = m.elements,\r\n\r\n\t\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\r\n\r\n\t\t\t\ttrace = m11 + m22 + m33,\r\n\t\t\t\ts;\r\n\r\n\t\t\tif ( trace > 0 ) {\r\n\r\n\t\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\r\n\r\n\t\t\t\tthis._w = 0.25 / s;\r\n\t\t\t\tthis._x = ( m32 - m23 ) * s;\r\n\t\t\t\tthis._y = ( m13 - m31 ) * s;\r\n\t\t\t\tthis._z = ( m21 - m12 ) * s;\r\n\r\n\t\t\t} else if ( m11 > m22 && m11 > m33 ) {\r\n\r\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\r\n\r\n\t\t\t\tthis._w = ( m32 - m23 ) / s;\r\n\t\t\t\tthis._x = 0.25 * s;\r\n\t\t\t\tthis._y = ( m12 + m21 ) / s;\r\n\t\t\t\tthis._z = ( m13 + m31 ) / s;\r\n\r\n\t\t\t} else if ( m22 > m33 ) {\r\n\r\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\r\n\r\n\t\t\t\tthis._w = ( m13 - m31 ) / s;\r\n\t\t\t\tthis._x = ( m12 + m21 ) / s;\r\n\t\t\t\tthis._y = 0.25 * s;\r\n\t\t\t\tthis._z = ( m23 + m32 ) / s;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\r\n\r\n\t\t\t\tthis._w = ( m21 - m12 ) / s;\r\n\t\t\t\tthis._x = ( m13 + m31 ) / s;\r\n\t\t\t\tthis._y = ( m23 + m32 ) / s;\r\n\t\t\t\tthis._z = 0.25 * s;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tsetFromUnitVectors: function ( vFrom, vTo ) {\r\n\r\n\t\t\t// assumes direction vectors vFrom and vTo are normalized\r\n\r\n\t\t\tvar EPS = 0.000001;\r\n\r\n\t\t\tvar r = vFrom.dot( vTo ) + 1;\r\n\r\n\t\t\tif ( r < EPS ) {\r\n\r\n\t\t\t\tr = 0;\r\n\r\n\t\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\r\n\r\n\t\t\t\t\tthis._x = - vFrom.y;\r\n\t\t\t\t\tthis._y = vFrom.x;\r\n\t\t\t\t\tthis._z = 0;\r\n\t\t\t\t\tthis._w = r;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis._x = 0;\r\n\t\t\t\t\tthis._y = - vFrom.z;\r\n\t\t\t\t\tthis._z = vFrom.y;\r\n\t\t\t\t\tthis._w = r;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\r\n\r\n\t\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\r\n\t\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\r\n\t\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\r\n\t\t\t\tthis._w = r;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this.normalize();\r\n\r\n\t\t},\r\n\r\n\t\tangleTo: function ( q ) {\r\n\r\n\t\t\treturn 2 * Math.acos( Math.abs( maths.clamp( this.dot( q ), - 1, 1 ) ) );\r\n\r\n\t\t},\r\n\r\n\t\trotateTowards: function ( q, step ) {\r\n\r\n\t\t\tvar angle = this.angleTo( q );\r\n\r\n\t\t\tif ( angle === 0 ) return this;\r\n\r\n\t\t\tvar t = Math.min( 1, step / angle );\r\n\r\n\t\t\tthis.slerp( q, t );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tinverse: function () {\r\n\r\n\t\t\t// quaternion is assumed to have unit length\r\n\r\n\t\t\treturn this.conjugate();\r\n\r\n\t\t},\r\n\r\n\t\tconjugate: function () {\r\n\r\n\t\t\tthis._x *= - 1;\r\n\t\t\tthis._y *= - 1;\r\n\t\t\tthis._z *= - 1;\r\n\r\n\t\t\tthis._onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tdot: function ( v ) {\r\n\r\n\t\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\r\n\r\n\t\t},\r\n\r\n\t\tlengthSq: function () {\r\n\r\n\t\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\r\n\r\n\t\t},\r\n\r\n\t\tlength: function () {\r\n\r\n\t\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\r\n\r\n\t\t},\r\n\r\n\t\tnormalize: function () {\r\n\r\n\t\t\tvar l = this.length();\r\n\r\n\t\t\tif ( l === 0 ) {\r\n\r\n\t\t\t\tthis._x = 0;\r\n\t\t\t\tthis._y = 0;\r\n\t\t\t\tthis._z = 0;\r\n\t\t\t\tthis._w = 1;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tl = 1 / l;\r\n\r\n\t\t\t\tthis._x = this._x * l;\r\n\t\t\t\tthis._y = this._y * l;\r\n\t\t\t\tthis._z = this._z * l;\r\n\t\t\t\tthis._w = this._w * l;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tmultiply: function ( q, p ) {\r\n\r\n\t\t\tif ( p !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'mathsQuaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\r\n\t\t\t\treturn this.multiplyQuaternions( q, p );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this.multiplyQuaternions( this, q );\r\n\r\n\t\t},\r\n\r\n\t\tpremultiply: function ( q ) {\r\n\r\n\t\t\treturn this.multiplyQuaternions( q, this );\r\n\r\n\t\t},\r\n\r\n\t\tmultiplyQuaternions: function ( a, b ) {\r\n\r\n\t\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\r\n\r\n\t\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\r\n\t\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\r\n\r\n\t\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\r\n\t\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\r\n\t\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\r\n\t\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\r\n\r\n\t\t\tthis._onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tslerp: function ( qb, t ) {\r\n\r\n\t\t\tif ( t === 0 ) return this;\r\n\t\t\tif ( t === 1 ) return this.copy( qb );\r\n\r\n\t\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\r\n\r\n\t\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\r\n\r\n\t\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\r\n\r\n\t\t\tif ( cosHalfTheta < 0 ) {\r\n\r\n\t\t\t\tthis._w = - qb._w;\r\n\t\t\t\tthis._x = - qb._x;\r\n\t\t\t\tthis._y = - qb._y;\r\n\t\t\t\tthis._z = - qb._z;\r\n\r\n\t\t\t\tcosHalfTheta = - cosHalfTheta;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.copy( qb );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( cosHalfTheta >= 1.0 ) {\r\n\r\n\t\t\t\tthis._w = w;\r\n\t\t\t\tthis._x = x;\r\n\t\t\t\tthis._y = y;\r\n\t\t\t\tthis._z = z;\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\r\n\r\n\t\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\r\n\r\n\t\t\t\tvar s = 1 - t;\r\n\t\t\t\tthis._w = s * w + t * this._w;\r\n\t\t\t\tthis._x = s * x + t * this._x;\r\n\t\t\t\tthis._y = s * y + t * this._y;\r\n\t\t\t\tthis._z = s * z + t * this._z;\r\n\r\n\t\t\t\tthis.normalize();\r\n\t\t\t\tthis._onChangeCallback();\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\r\n\t\t\tvar halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\r\n\t\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\r\n\t\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\r\n\r\n\t\t\tthis._w = ( w * ratioA + this._w * ratioB );\r\n\t\t\tthis._x = ( x * ratioA + this._x * ratioB );\r\n\t\t\tthis._y = ( y * ratioA + this._y * ratioB );\r\n\t\t\tthis._z = ( z * ratioA + this._z * ratioB );\r\n\r\n\t\t\tthis._onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\tequals: function ( quaternion ) {\r\n\r\n\t\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\r\n\r\n\t\t},\r\n\r\n\t\tfromArray: function ( array, offset ) {\r\n\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tthis._x = array[ offset ];\r\n\t\t\tthis._y = array[ offset + 1 ];\r\n\t\t\tthis._z = array[ offset + 2 ];\r\n\t\t\tthis._w = array[ offset + 3 ];\r\n\r\n\t\t\tthis._onChangeCallback();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\ttoArray: function ( array, offset ) {\r\n\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\t\tarray[ offset ] = this._x;\r\n\t\t\tarray[ offset + 1 ] = this._y;\r\n\t\t\tarray[ offset + 2 ] = this._z;\r\n\t\t\tarray[ offset + 3 ] = this._w;\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t},\r\n\r\n\t\tfromBufferAttribute: function ( attribute, index ) {\r\n\r\n\t\t\tthis._x = attribute.getX( index );\r\n\t\t\tthis._y = attribute.getY( index );\r\n\t\t\tthis._z = attribute.getZ( index );\r\n\t\t\tthis._w = attribute.getW( index );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\t_onChange: function ( callback ) {\r\n\r\n\t\t\tthis._onChangeCallback = callback;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t},\r\n\r\n\t\t_onChangeCallback: function () {}\r\n\r\n\t} );\r\n\r\n\r\n\treturn numbers.Quaternion = Quaternion;\r\n\r\n\r\n})"]}