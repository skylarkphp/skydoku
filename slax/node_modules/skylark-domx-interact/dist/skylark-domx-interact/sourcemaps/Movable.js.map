{"version":3,"sources":["Movable.js"],"names":["define","langx","noder","datax","geom","eventer","styler","plugins","interact","on","off","attr","removeAttr","pagePosition","addClass","height","Array","prototype","some","map","Movable","Plugin","inherit","klassName","pluginName","_construct","elm","options","updateWithTouchData","e","keys","i","changedTouches","split","length","this","overrided","overlayDiv","startX","startY","originalPos","handleEl","handle","auto","constraints","doc","document","startedCallback","started","movingCallback","moving","stoppedCallback","stopped","move","button","stop","deltaX","screenX","deltaY","screenY","l","left","t","top","minX","maxX","minY","maxY","relativePosition","preventDefault","remove","cursor","docSize","getDocumentSize","size","css","createElement","position","width","zIndex","opacity","append","body","_handleEl","register"],"mappings":";;;;;;;AAAAA,QACI,sBACA,qBACA,oBACA,oBACA,uBACA,sBACA,uBACA,cACF,SAASC,EAAMC,EAAMC,EAAMC,EAAKC,EAAQC,EAAOC,EAAQC,GAC5CH,EAAQI,GACPJ,EAAQK,IACPP,EAAMQ,KACAR,EAAMS,WACVR,EAAKS,aACHP,EAAOQ,SACTV,EAAKW,OACPC,MAAMC,UAAUC,KACjBF,MAAMC,UAAUE,IAR1B,IAUIC,EAAUb,EAAQc,OAAOC,SACzBC,UAAW,UAEXC,WAAa,eAGbC,WAAa,SAAUC,EAAKC,GAKxB,SAASC,EAAoBC,GACzB,IAAIC,EAAMC,EAEV,GAAIF,EAAEG,eAEF,IADAF,EAAO,8CAA8CG,MAAM,KACtDF,EAAI,EAAGA,EAAID,EAAKI,OAAQH,IACzBF,EAAEC,EAAKC,IAAMF,EAAEG,eAAe,GAAGF,EAAKC,IAVlDI,KAAKC,UAAUV,EAAIC,GAgBnB,IAGIU,EAMAC,EACAC,EACAC,EAXAC,GADJd,EAAUQ,KAAKR,SACQe,QAAUhB,EAC7BiB,GAAwB,IAAjBhB,EAAQgB,KACfC,EAAcjB,EAAQiB,YAEtBC,EAAMlB,EAAQmB,UAAYA,SAS1BC,EAAkBpB,EAAQqB,QAC1BC,EAAiBtB,EAAQuB,OACzBC,EAAkBxB,EAAQyB,QAwC1BC,EAAO,SAASxB,GAGZ,GAFAD,EAAoBC,GAEH,IAAbA,EAAEyB,OACF,OAAOC,EAAK1B,GAMhB,GAHAA,EAAE2B,OAAS3B,EAAE4B,QAAUnB,EACvBT,EAAE6B,OAAS7B,EAAE8B,QAAUpB,EAEnBI,EAAM,CACN,IAAIiB,EAAIpB,EAAYqB,KAAOhC,EAAE2B,OACzBM,EAAItB,EAAYuB,IAAMlC,EAAE6B,OACxBd,IAEIgB,EAAIhB,EAAYoB,OAChBJ,EAAIhB,EAAYoB,MAGhBJ,EAAIhB,EAAYqB,OAChBL,EAAIhB,EAAYqB,MAGhBH,EAAIlB,EAAYsB,OAChBJ,EAAIlB,EAAYsB,MAGhBJ,EAAIlB,EAAYuB,OAChBL,EAAIlB,EAAYuB,OAK5B/D,EAAKgE,iBAAiB1C,GAClBmC,KAAMD,EACNG,IAAKD,IAGTjC,EAAEwC,iBACEpB,GACAA,EAAepB,IAIvB0B,EAAO,SAAS1B,GACZD,EAAoBC,GAEpBxB,EAAQK,IAAImC,EAAK,sBAAuBQ,GAAM3C,IAAImC,EAAK,mBAAoBU,GAE3ErD,EAAMoE,OAAOjC,GAETc,GACAA,EAAgBtB,IAI5BxB,EAAQI,GAAGgC,EAAU,uBA9FT,SAASZ,GACb,IACI0C,EADAC,EAAUpE,EAAKqE,gBAAgB5B,GAGnCjB,EAAoBC,GAEpBA,EAAEwC,iBACWxC,EAAEyB,OAEfhB,EAAST,EAAE4B,QACXlB,EAASV,EAAE8B,QAEXnB,EAAcpC,EAAKgE,iBAAiB1C,GAC7BtB,EAAKsE,KAAKhD,GAGjB6C,EAASjE,EAAOqE,IAAIlC,EAAU,UAE9BJ,EAAanC,EAAM0E,cAAc,OACjCtE,EAAOqE,IAAItC,GACPwC,SAAU,WACVd,IAAK,EACLF,KAAM,EACNiB,MAAON,EAAQM,MACf/D,OAAQyD,EAAQzD,OAChBgE,OAAQ,WACRC,QAAS,KACTT,OAAQA,IAEZrE,EAAM+E,OAAOpC,EAAIqC,KAAM7C,GAEvBhC,EAAQI,GAAGoC,EAAK,sBAAuBQ,GAAM5C,GAAGoC,EAAK,mBAAoBU,GAErER,GACAA,EAAgBlB,KA8D5BM,KAAKgD,UAAY1C,GAIrB6B,OAAS,WACLjE,EAAQK,IAAIyB,KAAKgD,cAMzB,OAFA5E,EAAQ6E,SAAShE,EAAQ,WAElBZ,EAASY,QAAUA","file":"../Movable.js","sourcesContent":["define([\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-data\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-plugins\",\r\n    \"./interact\"\r\n],function(langx,noder,datax,geom,eventer,styler,plugins,interact){\r\n    var on = eventer.on,\r\n        off = eventer.off,\r\n        attr = datax.attr,\r\n        removeAttr = datax.removeAttr,\r\n        offset = geom.pagePosition,\r\n        addClass = styler.addClass,\r\n        height = geom.height,\r\n        some = Array.prototype.some,\r\n        map = Array.prototype.map;\r\n\r\n    var Movable = plugins.Plugin.inherit({\r\n        klassName: \"Movable\",\r\n\r\n        pluginName : \"lark.movable\",\r\n\r\n\r\n        _construct : function (elm, options) {\r\n            this.overrided(elm,options);\r\n\r\n\r\n\r\n            function updateWithTouchData(e) {\r\n                var keys, i;\r\n\r\n                if (e.changedTouches) {\r\n                    keys = \"screenX screenY pageX pageY clientX clientY\".split(' ');\r\n                    for (i = 0; i < keys.length; i++) {\r\n                        e[keys[i]] = e.changedTouches[0][keys[i]];\r\n                    }\r\n                }\r\n            }\r\n\r\n            options = this.options;\r\n            var handleEl = options.handle || elm,\r\n                auto = options.auto === false ? false : true,\r\n                constraints = options.constraints,\r\n                overlayDiv,\r\n                doc = options.document || document,\r\n                downButton,\r\n                start,\r\n                stop,\r\n                drag,\r\n                startX,\r\n                startY,\r\n                originalPos,\r\n                size,\r\n                startedCallback = options.started,\r\n                movingCallback = options.moving,\r\n                stoppedCallback = options.stopped,\r\n\r\n                start = function(e) {\r\n                    var docSize = geom.getDocumentSize(doc),\r\n                        cursor;\r\n\r\n                    updateWithTouchData(e);\r\n\r\n                    e.preventDefault();\r\n                    downButton = e.button;\r\n                    //handleEl = getHandleEl();\r\n                    startX = e.screenX;\r\n                    startY = e.screenY;\r\n\r\n                    originalPos = geom.relativePosition(elm);\r\n                    size = geom.size(elm);\r\n\r\n                    // Grab cursor from handle so we can place it on overlay\r\n                    cursor = styler.css(handleEl, \"curosr\");\r\n\r\n                    overlayDiv = noder.createElement(\"div\");\r\n                    styler.css(overlayDiv, {\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        left: 0,\r\n                        width: docSize.width,\r\n                        height: docSize.height,\r\n                        zIndex: 0x7FFFFFFF,\r\n                        opacity: 0.0001,\r\n                        cursor: cursor\r\n                    });\r\n                    noder.append(doc.body, overlayDiv);\r\n\r\n                    eventer.on(doc, \"mousemove touchmove\", move).on(doc, \"mouseup touchend\", stop);\r\n\r\n                    if (startedCallback) {\r\n                        startedCallback(e);\r\n                    }\r\n                },\r\n\r\n                move = function(e) {\r\n                    updateWithTouchData(e);\r\n\r\n                    if (e.button !== 0) {\r\n                        return stop(e);\r\n                    }\r\n\r\n                    e.deltaX = e.screenX - startX;\r\n                    e.deltaY = e.screenY - startY;\r\n\r\n                    if (auto) {\r\n                        var l = originalPos.left + e.deltaX,\r\n                            t = originalPos.top + e.deltaY;\r\n                        if (constraints) {\r\n\r\n                            if (l < constraints.minX) {\r\n                                l = constraints.minX;\r\n                            }\r\n\r\n                            if (l > constraints.maxX) {\r\n                                l = constraints.maxX;\r\n                            }\r\n\r\n                            if (t < constraints.minY) {\r\n                                t = constraints.minY;\r\n                            }\r\n\r\n                            if (t > constraints.maxY) {\r\n                                t = constraints.maxY;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    geom.relativePosition(elm, {\r\n                        left: l,\r\n                        top: t\r\n                    })\r\n\r\n                    e.preventDefault();\r\n                    if (movingCallback) {\r\n                        movingCallback(e);\r\n                    }\r\n                },\r\n\r\n                stop = function(e) {\r\n                    updateWithTouchData(e);\r\n\r\n                    eventer.off(doc, \"mousemove touchmove\", move).off(doc, \"mouseup touchend\", stop);\r\n\r\n                    noder.remove(overlayDiv);\r\n\r\n                    if (stoppedCallback) {\r\n                        stoppedCallback(e);\r\n                    }\r\n                };\r\n\r\n            eventer.on(handleEl, \"mousedown touchstart\", start);\r\n\r\n            this._handleEl = handleEl;\r\n\r\n        },\r\n\r\n        remove : function() {\r\n            eventer.off(this._handleEl);\r\n        }\r\n    });\r\n\r\n    plugins.register(Movable,\"movable\");\r\n\r\n    return interact.Movable = Movable;\r\n});\r\n"]}