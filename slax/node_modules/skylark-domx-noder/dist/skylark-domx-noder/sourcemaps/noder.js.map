{"version":3,"sources":["noder.js"],"names":["define","skylark","langx","browser","isIE","navigator","userAgent","match","fragmentRE","singleTagRE","div","document","createElement","table","tableBody","tableRow","containers","tr","tbody","thead","tfoot","td","th","*","rootNodeRE","map","Array","prototype","slice","ensureNodes","nodes","copyByClone","isArrayLike","call","node","cloneNode","flatten","nodeName","elm","chkName","name","toLowerCase","undefined","enhancePlaceContent","placing","isFunction","apply","neddsFlattern","i","length","append","parentNode","appendChild","this","tag","props","parent","test","createElementNS","setAttribute","rxhtmlTag","isChildOf","directly","documentElement","contains","ownerDoc","nodeType","ownerDocument","noder","mixin","active","doc","el","activeElement","error","body","after","refNode","nextSibling","insertBefore","before","blur","clone","deep","self","each","getAttribs","attr","setAttrib","getAttrib","child","contents","contentDocument","childNodes","createFragment","html","trim","RegExp","$1","container","innerHTML","xml","split","newXml","edsplit","removeSelfClosingTags","dom","forEach","removeChild","createTextNode","text","empty","hasChildNodes","firstChild","fullScreen","exitFullScreen","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","requestFullScreen","focusable","element","hasTabindex","mapName","img","focusableIfVisible","fieldset","href","$","is","disabled","closest","visible","isString","replace","isNumber","isActive","elem","type","isDocument","DOCUMENT_NODE","isInDocument","isWindow","offsetParent","defaultView","getComputedStyle","position","ownerWindow","parentWindow","prepend","reflow","offsetHeight","remove","e","console","warn","children","oldNode","replaceChild","selectable","style","onselectstart","MozUserSelect","KhtmlUserSelect","unselectable","traverse","fn","len","reverse","wrapper","wrapperNode","wrapperInner","unwrap","isDoc","attach"],"mappings":"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","file":"../noder.js","sourcesContent":["define([\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\"\r\n], function(skylark, langx, browser) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n\r\n    function activeElement(doc) {\r\n        doc = doc || document;\r\n        var el;\r\n\r\n        // Support: IE 9 only\r\n        // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\r\n        try {\r\n            el = doc.activeElement;\r\n        } catch ( error ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 9 - 11 only\r\n        // IE may return null instead of an element\r\n        // Interestingly, this only seems to occur when NOT in an iframe\r\n        if ( !el ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 11 only\r\n        // IE11 returns a seemingly empty object in some cases when accessing\r\n        // document.activeElement from an <iframe>\r\n        if ( !el.nodeName ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        return el;\r\n    };\r\n\r\n    function enhancePlaceContent(placing,node) {\r\n        if (langx.isFunction(placing)) {\r\n            return placing.apply(node,[]);\r\n        }\r\n        if (langx.isArrayLike(placing)) {\r\n            var neddsFlattern;\r\n            for (var i=0;i<placing.length;i++) {\r\n                if (langx.isFunction(placing[i])) {\r\n                    placing[i] = placing[i].apply(node,[]);\r\n                    if (langx.isArrayLike(placing[i])) {\r\n                        neddsFlattern = true;\r\n                    }\r\n                }\r\n            }\r\n            if (neddsFlattern) {\r\n                placing = langx.flatten(placing);\r\n            }\r\n        }\r\n        return placing;\r\n    }\r\n    function after(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Get the children of the specified node, including text and comment nodes.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    /*   \r\n     * Create a element and set attributes on it.\r\n     * @param {HTMLElement} tag\r\n     * @param {props} props\r\n     * @param } parent\r\n     */\r\n    function createElement(tag, props, parent) {\r\n        var node;\r\n\r\n        if (/svg/i.test(tag)) {\r\n            node = document.createElementNS(\"http://www.w3.org/2000/svg\", tag)\r\n        } else {\r\n            node = document.createElement(tag);\r\n        }\r\n\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent, node);\r\n        }\r\n        return node;\r\n    }\r\n\r\nfunction removeSelfClosingTags(xml) {\r\n    var split = xml.split(\"/>\");\r\n    var newXml = \"\";\r\n    for (var i = 0; i < split.length - 1;i++) {\r\n        var edsplit = split[i].split(\"<\");\r\n        newXml += split[i] + \"></\" + edsplit[edsplit.length - 1].split(\" \")[0] + \">\";\r\n    }\r\n    return newXml + split[split.length-1];\r\n}\r\n\r\n    /*   \r\n     * Create a DocumentFragment from the HTML fragment.\r\n     * @param {String} html\r\n     */\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = removeSelfClosingTags(\"\" + html);\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    /*   \r\n     * Create a deep copy of the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {Boolean} deep\r\n     */\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node .\r\n     * @param {String} node\r\n     * @param {Node} child\r\n     */\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    /*   \r\n     * Create a new Text node.\r\n     * @param {String} text\r\n     * @param {Node} child\r\n     */\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    /*   \r\n     * Get the current document object.\r\n     */\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    /*   \r\n     * Remove all child nodes of the set of matched elements from the DOM.\r\n     * @param {Object} node\r\n     */\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    var fulledEl = null;\r\n\r\n    function fullScreen(el) {\r\n        if (el === false) {\r\n            browser.exitFullScreen.apply(document);\r\n        } else if (el) {\r\n            browser.requestFullScreen.apply(el);\r\n            fulledEl = el;\r\n        } else {\r\n            return (\r\n                document.fullscreenElement ||\r\n                document.webkitFullscreenElement ||\r\n                document.mozFullScreenElement ||\r\n                document.msFullscreenElement\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    // Selectors\r\n    function focusable( element, hasTabindex ) {\r\n        var map, mapName, img, focusableIfVisible, fieldset,\r\n            nodeName = element.nodeName.toLowerCase();\r\n\r\n        if ( \"area\" === nodeName ) {\r\n            map = element.parentNode;\r\n            mapName = map.name;\r\n            if ( !element.href || !mapName || map.nodeName.toLowerCase() !== \"map\" ) {\r\n                return false;\r\n            }\r\n            img = $( \"img[usemap='#\" + mapName + \"']\" );\r\n            return img.length > 0 && img.is( \":visible\" );\r\n        }\r\n\r\n        if ( /^(input|select|textarea|button|object)$/.test( nodeName ) ) {\r\n            focusableIfVisible = !element.disabled;\r\n\r\n            if ( focusableIfVisible ) {\r\n\r\n                // Form controls within a disabled fieldset are disabled.\r\n                // However, controls within the fieldset's legend do not get disabled.\r\n                // Since controls generally aren't placed inside legends, we skip\r\n                // this portion of the check.\r\n                fieldset = $( element ).closest( \"fieldset\" )[ 0 ];\r\n                if ( fieldset ) {\r\n                    focusableIfVisible = !fieldset.disabled;\r\n                }\r\n            }\r\n        } else if ( \"a\" === nodeName ) {\r\n            focusableIfVisible = element.href || hasTabindex;\r\n        } else {\r\n            focusableIfVisible = hasTabindex;\r\n        }\r\n\r\n        return focusableIfVisible && $( element ).is( \":visible\" ) && visible( $( element ) );\r\n    };\r\n\r\n\r\n   var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi;\r\n \r\n    /*   \r\n     * Get the HTML contents of the first element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} html\r\n     */\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html)) {\r\n                html = html.replace( rxhtmlTag, \"<$1></$2>\" );\r\n            }\r\n            if (langx.isString(html) || langx.isNumber(html)) {               \r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isChildOf(node, parent, directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a document.\r\n     * @param {Node} node\r\n     */\r\n    function isDocument(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is in the document\r\n     * @param {Node} node\r\n     */\r\n    function isInDocument(node) {\r\n      return (node === document.body) ? true : document.body.contains(node);\r\n    }        \r\n\r\n    var blockNodes = [\"div\", \"p\", \"ul\", \"ol\", \"li\", \"blockquote\", \"hr\", \"pre\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"table\"];\r\n\r\n    function isBlockNode(node) {\r\n        if (!node || node.nodeType === 3) {\r\n          return false;\r\n        }\r\n        return new RegExp(\"^(\" + (blockNodes.join('|')) + \")$\").test(node.nodeName.toLowerCase());\r\n    }\r\n\r\n    function isActive (elem) {\r\n            return elem === document.activeElement && (elem.type || elem.href);\r\n    }\r\n\r\n    /*   \r\n     * Get the owner document object for the specified element.\r\n     * @param {Node} elm\r\n     */\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return doc.defaultView || doc.parentWindow;\r\n    }\r\n\r\n    /*   \r\n     * insert one or more nodes as the first children of the specified node.\r\n     * @param {Node} node\r\n     * @param {Node or ArrayLike} placing\r\n     * @param {Boolean Optional} copyByClone\r\n     */\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && document.defaultView.getComputedStyle(parent).position == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    /*   \r\n     * Remove the set of matched elements from the DOM.\r\n     * @param {Node} node\r\n     */\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n                node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\", e);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function removeChild(node,children) {\r\n        if (!langx.isArrayLike(children)) {\r\n            children = [children];\r\n        }\r\n        for (var i=0;i<children.length;i++) {\r\n            node.removeChild(children[i]);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollParent( elm, includeHidden ) {\r\n        var position = document.defaultView.getComputedStyle(elm).position,\r\n            excludeStaticParent = position === \"absolute\",\r\n            overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n            scrollParent = this.parents().filter( function() {\r\n                var parent = $( this );\r\n                if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                    return false;\r\n                }\r\n                return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                    parent.css( \"overflow-x\" ) );\r\n            } ).eq( 0 );\r\n\r\n        return position === \"fixed\" || !scrollParent.length ?\r\n            $( this[ 0 ].ownerDocument || document ) :\r\n            scrollParent;\r\n    };\r\n\r\n\r\n    function reflow(elm) {\r\n        if (el == null) {\r\n          elm = document;\r\n        }\r\n        elm.offsetHeight;\r\n\r\n        return this;      \r\n    }\r\n\r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {Node} node\r\n     * @param {Node} oldNode\r\n     */\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n\r\n    function selectable(elem, selectable) {\r\n        if (elem === undefined || elem.style === undefined)\r\n            return;\r\n        elem.onselectstart = selectable ? function () {\r\n            return false;\r\n        } : function () {\r\n        };\r\n        elem.style.MozUserSelect = selectable ? 'auto' : 'none';\r\n        elem.style.KhtmlUserSelect = selectable ? 'auto' : 'none';\r\n        elem.unselectable = selectable ? 'on' : 'off';\r\n    }\r\n\r\n    /*   \r\n     * traverse the specified node and its descendants, perform the callback function on each\r\n     * @param {Node} node\r\n     * @param {Function} fn\r\n     */\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} node\r\n     */\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around each element in the set of matched elements.\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around the content of each element in the set of matched\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Remove the parents of the set of matched elements from the DOM, leaving the matched\r\n     * @param {Node} node\r\n     */\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        active  : activeElement,\r\n\r\n        after: after,\r\n\r\n        append: append,\r\n\r\n        before: before,\r\n\r\n        blur : function(el) {\r\n            el.blur();\r\n        },\r\n\r\n        body: function() {\r\n            return document.body;\r\n        },\r\n\r\n        clone: clone,\r\n\r\n        contains: contains,\r\n\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n     \r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        fullScreen: fullScreen,\r\n\r\n        focusable: focusable,\r\n\r\n        html: html,\r\n\r\n        isActive,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDocument: isDocument,\r\n\r\n        isInDocument: isInDocument,\r\n\r\n        isWindow: langx.isWindow,\r\n\r\n        nodeName : nodeName,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow: ownerWindow,\r\n\r\n        prepend: prepend,\r\n\r\n        reflow: reflow,\r\n\r\n        remove: remove,\r\n\r\n        removeChild : removeChild,\r\n\r\n        replace: replace,\r\n\r\n        selectable,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.attach(\"domx.noder\" , noder);\r\n});"]}