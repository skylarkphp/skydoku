{"version":3,"sources":["ColorPicker.js"],"names":["define","skylark","langx","browser","noder","finder","$","eventer","styler","fx","colors","Color","draggable","noop","defaultOpts","beforeShow","move","change","show","hide","color","flat","showInput","allowEmpty","showButtons","clickoutFiresChange","showInitial","showPalette","showPaletteOnly","hideAfterPaletteSelect","togglePaletteOnly","showSelectionPalette","localStorageKey","appendTo","maxSelectionSize","cancelText","chooseText","togglePaletteMoreText","togglePaletteLessText","clearText","noColorSelectedText","preferredFormat","className","containerClassName","replacerClassName","showAlpha","theme","palette","selectionPalette","disabled","offset","pickers","replaceInput","join","markup","gradientFix","isIE","i","paletteTemplate","p","opts","html","length","current","tiny","c","toHsl","l","equals","formattedString","toString","swatchStyle","toRgbString","push","append","attr","ColorPicker","Evented","inherit","klassName","init","element","o","callbackContext","mixin","callbacks","bind","instanceOptions","resize","debounce","reflow","visible","isDragging","dragWidth","dragHeight","dragHelperHeight","slideHeight","alphaWidth","alphaSlideHelperWidth","slideHelperHeight","currentHue","currentSaturation","currentValue","currentAlpha","paletteArray","paletteLookup","slice","draggingClass","shiftMovementDirection","doc","ownerDocument","boundElement","body","container","addClass","pickerContainer","find","dragger","dragHelper","slider","slideHelper","alphaSliderInner","alphaSlider","alphaSlideHelper","textInput","paletteContainer","initialColorContainer","cancelButton","clearButton","chooseButton","toggleButton","isInput","is","isInputTypeColor","inputTypeColorSupport","shouldReplace","replacer","offsetElement","previewElement","initialColor","val","colorOnShow","currentPreferredFormat","isEmpty","applyOptions","text","isArray","j","rgb","toggleClass","updateSelectionPaletteFromStorage","window","localStorage","oldPalette","split","each","addColorToSelectionPalette","e","inArray","shift","drawPalette","currentColor","get","map","unique","reverse","getUniqueSelectionPalette","drawInitial","initial","dragStart","trigger","dragStop","removeClass","setFromTextInput","value","isValid","set","updateOriginalInput","toggle","event","create","isDefaultPrevented","hideAll","on","onkeydown","clickout","updateUI","keyCode","button","revert","off","ignoreFormatChange","newColor","newHsv","toHsv","h","s","v","a","getFormat","fromRatio","Math","round","format","updateHelperLocations","flatColor","css","toHexString","realColor","displayColor","realHex","realRgb","toRgb","realAlpha","gradient","toFilter","gradientType","dragX","dragY","max","min","top","left","alphaX","slideY","fireCallback","hasChanged","picker","input","dpWidth","dpHeight","inputHeight","docElem","viewWidth","viewHeight","offsetLeft","offsetTop","width","height","outerWidth","outerHeight","documentElement","clientWidth","scrollLeft","clientHeight","scrollTop","abs","bottom","right","disable","after","parent","paletteElementClick","data","ignore","target","closest","stopPropagation","preventDefault","click","setTimeout","keydown","hasClass","shiftKey","parseFloat","oldDragX","oldDragY","furtherFromX","setValue","paletteEvent","initialize","spect","option","optionName","optionValue","undefined","enable","coord","destroy","remove","id","func","obj","Array","prototype","args","call","arguments","apply","concat","dataID","load","loadOpts","defaults","localization","palettes","fn","colorPicker","extra","returnValue","this","method","Error","removeData","options","attach"],"mappings":"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","file":"../ColorPicker.js","sourcesContent":["define([\r\n   \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-query\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-fx\",\r\n    \"skylark-data-color/colors\",\r\n    \"skylark-data-color/Color\",\r\n    \"./draggable\"\r\n],function(skylark, langx, browser, noder, finder, $,eventer, styler,fx,colors, Color,draggable) {\r\n    \"use strict\";\r\n\r\n    var noop = langx.noop;\r\n\r\n    var defaultOpts = {\r\n\r\n        // Callbacks\r\n        beforeShow: noop,\r\n        move: noop,\r\n        change: noop,\r\n        show: noop,\r\n        hide: noop,\r\n\r\n        // Options\r\n        color: false,\r\n        flat: false,\r\n        showInput: false,\r\n        allowEmpty: false,\r\n        showButtons: true,\r\n        clickoutFiresChange: true,\r\n        showInitial: false,\r\n        showPalette: false,\r\n        showPaletteOnly: false,\r\n        hideAfterPaletteSelect: false,\r\n        togglePaletteOnly: false,\r\n        showSelectionPalette: true,\r\n        localStorageKey: false,\r\n        appendTo: \"body\",\r\n        maxSelectionSize: 7,\r\n        cancelText: \"cancel\",\r\n        chooseText: \"choose\",\r\n        togglePaletteMoreText: \"more\",\r\n        togglePaletteLessText: \"less\",\r\n        clearText: \"Clear Color Selection\",\r\n        noColorSelectedText: \"No Color Selected\",\r\n        preferredFormat: false,\r\n        className: \"\", // Deprecated - use containerClassName and replacerClassName instead.\r\n        containerClassName: \"\",\r\n        replacerClassName: \"\",\r\n        showAlpha: false,\r\n        theme: \"sp-light\",\r\n        palette: [[\"#ffffff\", \"#000000\", \"#ff0000\", \"#ff8000\", \"#ffff00\", \"#008000\", \"#0000ff\", \"#4b0082\", \"#9400d3\"]],\r\n        selectionPalette: [],\r\n        disabled: false,\r\n        offset: null\r\n    },\r\n    pickers = [],\r\n    replaceInput = [\r\n        \"<div class='sp-replacer'>\",\r\n            \"<div class='sp-preview'><div class='sp-preview-inner'></div></div>\",\r\n            \"<div class='sp-dd'>&#9660;</div>\",\r\n        \"</div>\"\r\n    ].join(''),\r\n    \r\n    markup = (function () {\r\n\r\n        // IE7-10 does not support gradients with multiple stops, so we need to simulate\r\n        //  that for the rainbow slider with 8 divs that each have a single gradient\r\n        var gradientFix = \"\";\r\n        if (browser.isIE) {\r\n            for (var i = 1; i <= 6; i++) {\r\n                gradientFix += \"<div class='sp-\" + i + \"'></div>\";\r\n            }\r\n        }\r\n\r\n        return [\r\n            \"<div class='sp-container sp-hidden'>\",\r\n                \"<div class='sp-palette-container'>\",\r\n                    \"<div class='sp-palette sp-thumb sp-cf'></div>\",\r\n                    \"<div class='sp-palette-button-container sp-cf'>\",\r\n                        \"<button type='button' class='sp-palette-toggle'></button>\",\r\n                    \"</div>\",\r\n                \"</div>\",\r\n                \"<div class='sp-picker-container'>\",\r\n                    \"<div class='sp-top sp-cf'>\",\r\n                        \"<div class='sp-fill'></div>\",\r\n                        \"<div class='sp-top-inner'>\",\r\n                            \"<div class='sp-color'>\",\r\n                                \"<div class='sp-sat'>\",\r\n                                    \"<div class='sp-val'>\",\r\n                                        \"<div class='sp-dragger'></div>\",\r\n                                    \"</div>\",\r\n                                \"</div>\",\r\n                            \"</div>\",\r\n                            \"<div class='sp-clear sp-clear-display'>\",\r\n                            \"</div>\",\r\n                            \"<div class='sp-hue'>\",\r\n                                \"<div class='sp-slider'></div>\",\r\n                                gradientFix,\r\n                            \"</div>\",\r\n                        \"</div>\",\r\n                        \"<div class='sp-alpha'><div class='sp-alpha-inner'><div class='sp-alpha-handle'></div></div></div>\",\r\n                    \"</div>\",\r\n                    \"<div class='sp-input-container sp-cf'>\",\r\n                        \"<input class='sp-input' type='text' spellcheck='false'  />\",\r\n                    \"</div>\",\r\n                    \"<div class='sp-initial sp-thumb sp-cf'></div>\",\r\n                    \"<div class='sp-button-container sp-cf'>\",\r\n                        \"<a class='sp-cancel' href='#'></a>\",\r\n                        \"<button type='button' class='sp-choose'></button>\",\r\n                    \"</div>\",\r\n                \"</div>\",\r\n            \"</div>\"\r\n        ].join(\"\");\r\n    })();\r\n\r\n    function paletteTemplate (p, color, className, opts) {\r\n        var html = [];\r\n        for (var i = 0; i < p.length; i++) {\r\n            var current = p[i];\r\n            if(current) {\r\n                var tiny = colors.Color(current);\r\n                var c = tiny.toHsl().l < 0.5 ? \"sp-thumb-el sp-thumb-dark\" : \"sp-thumb-el sp-thumb-light\";\r\n                c += (Color.equals(color, current)) ? \" sp-thumb-active\" : \"\";\r\n                var formattedString = tiny.toString(opts.preferredFormat || \"rgb\");\r\n                var swatchStyle = \"background-color:\" + tiny.toRgbString();\r\n                html.push('<span title=\"' + formattedString + '\" data-color=\"' + tiny.toRgbString() + '\" class=\"' + c + '\"><span class=\"sp-thumb-inner\" style=\"' + swatchStyle + ';\" /></span>');\r\n            } else {\r\n                var cls = 'sp-clear-display';\r\n                html.push($('<div />')\r\n                    .append($('<span data-color=\"\" style=\"background-color:transparent;\" class=\"' + cls + '\"></span>')\r\n                        .attr('title', opts.noColorSelectedText)\r\n                    )\r\n                    .html()\r\n                );\r\n            }\r\n        }\r\n        return \"<div class='sp-cf \" + className + \"'>\" + html.join('') + \"</div>\";\r\n    }\r\n\r\n    function hideAll() {\r\n        for (var i = 0; i < pickers.length; i++) {\r\n            if (pickers[i]) {\r\n                pickers[i].hide();\r\n            }\r\n        }\r\n    }\r\n\r\n    function instanceOptions(o, callbackContext) {\r\n        var opts = langx.mixin({}, defaultOpts, o);\r\n        opts.callbacks = {\r\n            'move': bind(opts.move, callbackContext),\r\n            'change': bind(opts.change, callbackContext),\r\n            'show': bind(opts.show, callbackContext),\r\n            'hide': bind(opts.hide, callbackContext),\r\n            'beforeShow': bind(opts.beforeShow, callbackContext)\r\n        };\r\n\r\n        return opts;\r\n    }\r\n\r\n\r\n\r\n    var ColorPicker = langx.Evented.inherit({\r\n        klassName : \"ColorPicker\",\r\n\r\n        init:function (element, o) {\r\n\r\n            var opts = instanceOptions(o, element),\r\n                flat = opts.flat,\r\n                showSelectionPalette = opts.showSelectionPalette,\r\n                localStorageKey = opts.localStorageKey,\r\n                theme = opts.theme,\r\n                callbacks = opts.callbacks,\r\n                resize = langx.debounce(reflow, 10),\r\n                visible = false,\r\n                isDragging = false,\r\n                dragWidth = 0,\r\n                dragHeight = 0,\r\n                dragHelperHeight = 0,\r\n                slideHeight = 0,\r\n                slideWidth = 0,\r\n                alphaWidth = 0,\r\n                alphaSlideHelperWidth = 0,\r\n                slideHelperHeight = 0,\r\n                currentHue = 0,\r\n                currentSaturation = 0,\r\n                currentValue = 0,\r\n                currentAlpha = 1,\r\n                palette = [],\r\n                paletteArray = [],\r\n                paletteLookup = {},\r\n                selectionPalette = opts.selectionPalette.slice(0),\r\n                maxSelectionSize = opts.maxSelectionSize,\r\n                draggingClass = \"sp-dragging\",\r\n                shiftMovementDirection = null;\r\n\r\n            var doc = element.ownerDocument,\r\n                body = doc.body,\r\n                boundElement = $(element),\r\n                disabled = false,\r\n                container = $(markup, doc).addClass(theme),\r\n                pickerContainer = container.find(\".sp-picker-container\"),\r\n                dragger = container.find(\".sp-color\"),\r\n                dragHelper = container.find(\".sp-dragger\"),\r\n                slider = container.find(\".sp-hue\"),\r\n                slideHelper = container.find(\".sp-slider\"),\r\n                alphaSliderInner = container.find(\".sp-alpha-inner\"),\r\n                alphaSlider = container.find(\".sp-alpha\"),\r\n                alphaSlideHelper = container.find(\".sp-alpha-handle\"),\r\n                textInput = container.find(\".sp-input\"),\r\n                paletteContainer = container.find(\".sp-palette\"),\r\n                initialColorContainer = container.find(\".sp-initial\"),\r\n                cancelButton = container.find(\".sp-cancel\"),\r\n                clearButton = container.find(\".sp-clear\"),\r\n                chooseButton = container.find(\".sp-choose\"),\r\n                toggleButton = container.find(\".sp-palette-toggle\"),\r\n                isInput = boundElement.is(\"input\"),\r\n                isInputTypeColor = isInput && boundElement.attr(\"type\") === \"color\" && inputTypeColorSupport(),\r\n                shouldReplace = isInput && !flat,\r\n                replacer = (shouldReplace) ? $(replaceInput).addClass(theme).addClass(opts.className).addClass(opts.replacerClassName) : $([]),\r\n                offsetElement = (shouldReplace) ? replacer : boundElement,\r\n                previewElement = replacer.find(\".sp-preview-inner\"),\r\n                initialColor = opts.color || (isInput && boundElement.val()),\r\n                colorOnShow = false,\r\n                currentPreferredFormat = opts.preferredFormat,\r\n                clickoutFiresChange = !opts.showButtons || opts.clickoutFiresChange,\r\n                isEmpty = !initialColor,\r\n                allowEmpty = opts.allowEmpty && !isInputTypeColor;\r\n\r\n            function applyOptions() {\r\n\r\n                if (opts.showPaletteOnly) {\r\n                    opts.showPalette = true;\r\n                }\r\n\r\n                toggleButton.text(opts.showPaletteOnly ? opts.togglePaletteMoreText : opts.togglePaletteLessText);\r\n\r\n                if (opts.palette) {\r\n                    palette = opts.palette.slice(0);\r\n                    paletteArray = langx.isArray(palette[0]) ? palette : [palette];\r\n                    paletteLookup = {};\r\n                    for (var i = 0; i < paletteArray.length; i++) {\r\n                        for (var j = 0; j < paletteArray[i].length; j++) {\r\n                            var rgb = Color(paletteArray[i][j]).toRgbString();\r\n                            paletteLookup[rgb] = true;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                container.toggleClass(\"sp-flat\", flat);\r\n                container.toggleClass(\"sp-input-disabled\", !opts.showInput);\r\n                container.toggleClass(\"sp-alpha-enabled\", opts.showAlpha);\r\n                container.toggleClass(\"sp-clear-enabled\", allowEmpty);\r\n                container.toggleClass(\"sp-buttons-disabled\", !opts.showButtons);\r\n                container.toggleClass(\"sp-palette-buttons-disabled\", !opts.togglePaletteOnly);\r\n                container.toggleClass(\"sp-palette-disabled\", !opts.showPalette);\r\n                container.toggleClass(\"sp-palette-only\", opts.showPaletteOnly);\r\n                container.toggleClass(\"sp-initial-disabled\", !opts.showInitial);\r\n                container.addClass(opts.className).addClass(opts.containerClassName);\r\n\r\n                reflow();\r\n            }\r\n\r\n            function initialize() {\r\n\r\n                if (browser.isIE) {\r\n                    container.find(\"*:not(input)\").attr(\"unselectable\", \"on\");\r\n                }\r\n\r\n                applyOptions();\r\n\r\n                if (shouldReplace) {\r\n                    boundElement.after(replacer).hide();\r\n                }\r\n\r\n                if (!allowEmpty) {\r\n                    clearButton.hide();\r\n                }\r\n\r\n                if (flat) {\r\n                    boundElement.after(container).hide();\r\n                }\r\n                else {\r\n\r\n                    var appendTo = opts.appendTo === \"parent\" ? boundElement.parent() : $(opts.appendTo);\r\n                    if (appendTo.length !== 1) {\r\n                        appendTo = $(\"body\");\r\n                    }\r\n\r\n                    appendTo.append(container);\r\n                }\r\n\r\n                updateSelectionPaletteFromStorage();\r\n\r\n                offsetElement.on(\"click.ColorPicker touchstart.ColorPicker\", function (e) {\r\n                    if (!disabled) {\r\n                        toggle();\r\n                    }\r\n\r\n                    e.stopPropagation();\r\n\r\n                    if (!$(e.target).is(\"input\")) {\r\n                        e.preventDefault();\r\n                    }\r\n                });\r\n\r\n                if(boundElement.is(\":disabled\") || (opts.disabled === true)) {\r\n                    disable();\r\n                }\r\n\r\n                // Prevent clicks from bubbling up to document.  This would cause it to be hidden.\r\n                container.click(stopPropagation);\r\n\r\n                // Handle user typed input\r\n                textInput.change(setFromTextInput);\r\n                textInput.on(\"paste\", function () {\r\n                    setTimeout(setFromTextInput, 1);\r\n                });\r\n                textInput.keydown(function (e) { if (e.keyCode == 13) { setFromTextInput(); } });\r\n\r\n                cancelButton.text(opts.cancelText);\r\n                cancelButton.on(\"click.ColorPicker\", function (e) {\r\n                    e.stopPropagation();\r\n                    e.preventDefault();\r\n                    revert();\r\n                    hide();\r\n                });\r\n\r\n                clearButton.attr(\"title\", opts.clearText);\r\n                clearButton.on(\"click.ColorPicker\", function (e) {\r\n                    e.stopPropagation();\r\n                    e.preventDefault();\r\n                    isEmpty = true;\r\n                    move();\r\n\r\n                    if(flat) {\r\n                        //for the flat style, this is a change event\r\n                        updateOriginalInput(true);\r\n                    }\r\n                });\r\n\r\n                chooseButton.text(opts.chooseText);\r\n                chooseButton.on(\"click.ColorPicker\", function (e) {\r\n                    e.stopPropagation();\r\n                    e.preventDefault();\r\n\r\n                    if (browser.isIE && textInput.is(\":focus\")) {\r\n                        textInput.trigger('change');\r\n                    }\r\n\r\n                    if (isValid()) {\r\n                        updateOriginalInput(true);\r\n                        hide();\r\n                    }\r\n                });\r\n\r\n                toggleButton.text(opts.showPaletteOnly ? opts.togglePaletteMoreText : opts.togglePaletteLessText);\r\n                toggleButton.on(\"click.spectrum\", function (e) {\r\n                    e.stopPropagation();\r\n                    e.preventDefault();\r\n\r\n                    opts.showPaletteOnly = !opts.showPaletteOnly;\r\n\r\n                    // To make sure the Picker area is drawn on the right, next to the\r\n                    // Palette area (and not below the palette), first move the Palette\r\n                    // to the left to make space for the picker, plus 5px extra.\r\n                    // The 'applyOptions' function puts the whole container back into place\r\n                    // and takes care of the button-text and the sp-palette-only CSS class.\r\n                    if (!opts.showPaletteOnly && !flat) {\r\n                        container.css('left', '-=' + (pickerContainer.outerWidth(true) + 5));\r\n                    }\r\n                    applyOptions();\r\n                });\r\n\r\n                draggable(alphaSlider, function (dragX, dragY, e) {\r\n                    currentAlpha = (dragX / alphaWidth);\r\n                    isEmpty = false;\r\n                    if (e.shiftKey) {\r\n                        currentAlpha = Math.round(currentAlpha * 10) / 10;\r\n                    }\r\n\r\n                    move();\r\n                }, dragStart, dragStop);\r\n\r\n                draggable(slider, function (dragX, dragY) {\r\n                    currentHue = parseFloat(dragY / slideHeight);\r\n                    isEmpty = false;\r\n                    if (!opts.showAlpha) {\r\n                        currentAlpha = 1;\r\n                    }\r\n                    move();\r\n                }, dragStart, dragStop);\r\n\r\n                draggable(dragger, function (dragX, dragY, e) {\r\n\r\n                    // shift+drag should snap the movement to either the x or y axis.\r\n                    if (!e.shiftKey) {\r\n                        shiftMovementDirection = null;\r\n                    }\r\n                    else if (!shiftMovementDirection) {\r\n                        var oldDragX = currentSaturation * dragWidth;\r\n                        var oldDragY = dragHeight - (currentValue * dragHeight);\r\n                        var furtherFromX = Math.abs(dragX - oldDragX) > Math.abs(dragY - oldDragY);\r\n\r\n                        shiftMovementDirection = furtherFromX ? \"x\" : \"y\";\r\n                    }\r\n\r\n                    var setSaturation = !shiftMovementDirection || shiftMovementDirection === \"x\";\r\n                    var setValue = !shiftMovementDirection || shiftMovementDirection === \"y\";\r\n\r\n                    if (setSaturation) {\r\n                        currentSaturation = parseFloat(dragX / dragWidth);\r\n                    }\r\n                    if (setValue) {\r\n                        currentValue = parseFloat((dragHeight - dragY) / dragHeight);\r\n                    }\r\n\r\n                    isEmpty = false;\r\n                    if (!opts.showAlpha) {\r\n                        currentAlpha = 1;\r\n                    }\r\n\r\n                    move();\r\n\r\n                }, dragStart, dragStop);\r\n\r\n                if (!!initialColor) {\r\n                    set(initialColor);\r\n\r\n                    // In case color was black - update the preview UI and set the format\r\n                    // since the set function will not run (default color is black).\r\n                    updateUI();\r\n                    currentPreferredFormat = opts.preferredFormat || Color(initialColor).format;\r\n\r\n                    addColorToSelectionPalette(initialColor);\r\n                }\r\n                else {\r\n                    updateUI();\r\n                }\r\n\r\n                if (flat) {\r\n                    show();\r\n                }\r\n\r\n                function paletteElementClick(e) {\r\n                    if (e.data && e.data.ignore) {\r\n                        set($(e.target).closest(\".sp-thumb-el\").data(\"color\"));\r\n                        move();\r\n                    }\r\n                    else {\r\n                        set($(e.target).closest(\".sp-thumb-el\").data(\"color\"));\r\n                        move();\r\n\r\n                        // If the picker is going to close immediately, a palette selection\r\n                        // is a change.  Otherwise, it's a move only.\r\n                        if (opts.hideAfterPaletteSelect) {\r\n                            updateOriginalInput(true);\r\n                            hide();\r\n                        } else {\r\n                            updateOriginalInput();\r\n                        }\r\n                    }\r\n\r\n                    return false;\r\n                }\r\n\r\n                var paletteEvent = browser.isIE ? \"mousedown.ColorPicker\" : \"click.ColorPicker touchstart.ColorPicker\";\r\n                paletteContainer.on(paletteEvent, \".sp-thumb-el\", paletteElementClick);\r\n                initialColorContainer.on(paletteEvent, \".sp-thumb-el:nth-child(1)\", { ignore: true }, paletteElementClick);\r\n            }\r\n\r\n            function updateSelectionPaletteFromStorage() {\r\n\r\n                if (localStorageKey && window.localStorage) {\r\n\r\n                    // Migrate old palettes over to new format.  May want to remove this eventually.\r\n                    try {\r\n                        var oldPalette = window.localStorage[localStorageKey].split(\",#\");\r\n                        if (oldPalette.length > 1) {\r\n                            delete window.localStorage[localStorageKey];\r\n                            langx.each(oldPalette, function(i, c) {\r\n                                 addColorToSelectionPalette(c);\r\n                            });\r\n                        }\r\n                    }\r\n                    catch(e) { }\r\n\r\n                    try {\r\n                        selectionPalette = window.localStorage[localStorageKey].split(\";\");\r\n                    }\r\n                    catch (e) { }\r\n                }\r\n            }\r\n\r\n            function addColorToSelectionPalette(color) {\r\n                if (showSelectionPalette) {\r\n                    var rgb = Color(color).toRgbString();\r\n                    if (!paletteLookup[rgb] && langx.inArray(rgb, selectionPalette) === -1) {\r\n                        selectionPalette.push(rgb);\r\n                        while(selectionPalette.length > maxSelectionSize) {\r\n                            selectionPalette.shift();\r\n                        }\r\n                    }\r\n\r\n                    if (localStorageKey && window.localStorage) {\r\n                        try {\r\n                            window.localStorage[localStorageKey] = selectionPalette.join(\";\");\r\n                        }\r\n                        catch(e) { }\r\n                    }\r\n                }\r\n            }\r\n\r\n            function getUniqueSelectionPalette() {\r\n                var unique = [];\r\n                if (opts.showPalette) {\r\n                    for (var i = 0; i < selectionPalette.length; i++) {\r\n                        var rgb = Color(selectionPalette[i]).toRgbString();\r\n\r\n                        if (!paletteLookup[rgb]) {\r\n                            unique.push(selectionPalette[i]);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return unique.reverse().slice(0, opts.maxSelectionSize);\r\n            }\r\n\r\n            function drawPalette() {\r\n\r\n                var currentColor = get();\r\n\r\n                var html = langx.map(paletteArray, function (palette, i) {\r\n                    return paletteTemplate(palette, currentColor, \"sp-palette-row sp-palette-row-\" + i, opts);\r\n                });\r\n\r\n                updateSelectionPaletteFromStorage();\r\n\r\n                if (selectionPalette) {\r\n                    html.push(paletteTemplate(getUniqueSelectionPalette(), currentColor, \"sp-palette-row sp-palette-row-selection\", opts));\r\n                }\r\n\r\n                paletteContainer.html(html.join(\"\"));\r\n            }\r\n\r\n            function drawInitial() {\r\n                if (opts.showInitial) {\r\n                    var initial = colorOnShow;\r\n                    var current = get();\r\n                    initialColorContainer.html(paletteTemplate([initial, current], current, \"sp-palette-row-initial\", opts));\r\n                }\r\n            }\r\n\r\n            function dragStart() {\r\n                if (dragHeight <= 0 || dragWidth <= 0 || slideHeight <= 0) {\r\n                    reflow();\r\n                }\r\n                isDragging = true;\r\n                container.addClass(draggingClass);\r\n                shiftMovementDirection = null;\r\n                boundElement.trigger('dragstart.ColorPicker', [ get() ]);\r\n            }\r\n\r\n            function dragStop() {\r\n                isDragging = false;\r\n                container.removeClass(draggingClass);\r\n                boundElement.trigger('dragstop.ColorPicker', [ get() ]);\r\n            }\r\n\r\n            function setFromTextInput() {\r\n\r\n                var value = textInput.val();\r\n\r\n                if ((value === null || value === \"\") && allowEmpty) {\r\n                    set(null);\r\n                    move();\r\n                    updateOriginalInput();\r\n                }\r\n                else {\r\n                    var tiny = Color(value);\r\n                    if (tiny.isValid()) {\r\n                        set(tiny);\r\n                        move();\r\n                        updateOriginalInput();\r\n                    }\r\n                    else {\r\n                        textInput.addClass(\"sp-validation-error\");\r\n                    }\r\n                }\r\n            }\r\n\r\n            function toggle() {\r\n                if (visible) {\r\n                    hide();\r\n                }\r\n                else {\r\n                    show();\r\n                }\r\n            }\r\n\r\n            function show() {\r\n                var event = eventer.create('beforeShow.ColorPicker');\r\n\r\n                if (visible) {\r\n                    reflow();\r\n                    return;\r\n                }\r\n\r\n                boundElement.trigger(event, [ get() ]);\r\n\r\n                if (callbacks.beforeShow(get()) === false || event.isDefaultPrevented()) {\r\n                    return;\r\n                }\r\n\r\n                hideAll();\r\n                visible = true;\r\n\r\n                $(doc).on(\"keydown.ColorPicker\", onkeydown);\r\n                $(doc).on(\"click.ColorPicker\", clickout);\r\n                $(window).on(\"resize.ColorPicker\", resize);\r\n                replacer.addClass(\"sp-active\");\r\n                container.removeClass(\"sp-hidden\");\r\n\r\n                reflow();\r\n                updateUI();\r\n\r\n                colorOnShow = get();\r\n\r\n                drawInitial();\r\n                callbacks.show(colorOnShow);\r\n                boundElement.trigger('show.ColorPicker', [ colorOnShow ]);\r\n            }\r\n\r\n            function onkeydown(e) {\r\n                // Close on ESC\r\n                if (e.keyCode === 27) {\r\n                    hide();\r\n                }\r\n            }\r\n\r\n            function clickout(e) {\r\n                // Return on right click.\r\n                if (e.button == 2) { return; }\r\n\r\n                // If a drag event was happening during the mouseup, don't hide\r\n                // on click.\r\n                if (isDragging) { return; }\r\n\r\n                if (clickoutFiresChange) {\r\n                    updateOriginalInput(true);\r\n                }\r\n                else {\r\n                    revert();\r\n                }\r\n                hide();\r\n            }\r\n\r\n            function hide() {\r\n                // Return if hiding is unnecessary\r\n                if (!visible || flat) { return; }\r\n                visible = false;\r\n\r\n                $(doc).off(\"keydown.ColorPicker\", onkeydown);\r\n                $(doc).off(\"click.ColorPicker\", clickout);\r\n                $(window).off(\"resize.ColorPicker\", resize);\r\n\r\n                replacer.removeClass(\"sp-active\");\r\n                container.addClass(\"sp-hidden\");\r\n\r\n                callbacks.hide(get());\r\n                boundElement.trigger('hide.ColorPicker', [ get() ]);\r\n            }\r\n\r\n            function revert() {\r\n                set(colorOnShow, true);\r\n                updateOriginalInput(true);\r\n            }\r\n\r\n            function set(color, ignoreFormatChange) {\r\n                if (Color.equals(color, get())) {\r\n                    // Update UI just in case a validation error needs\r\n                    // to be cleared.\r\n                    updateUI();\r\n                    return;\r\n                }\r\n\r\n                var newColor, newHsv;\r\n                if (!color && allowEmpty) {\r\n                    isEmpty = true;\r\n                } else {\r\n                    isEmpty = false;\r\n                    newColor = colors.Color(color);\r\n                    newHsv = newColor.toHsv();\r\n\r\n                    currentHue = (newHsv.h % 360) / 360;\r\n                    currentSaturation = newHsv.s;\r\n                    currentValue = newHsv.v;\r\n                    currentAlpha = newHsv.a;\r\n                }\r\n                updateUI();\r\n\r\n                if (newColor && newColor.isValid() && !ignoreFormatChange) {\r\n                    currentPreferredFormat = opts.preferredFormat || newColor.getFormat();\r\n                }\r\n            }\r\n\r\n            function get(opts) {\r\n                opts = opts || { };\r\n\r\n                if (allowEmpty && isEmpty) {\r\n                    return null;\r\n                }\r\n\r\n                return Color.fromRatio({\r\n                    h: currentHue,\r\n                    s: currentSaturation,\r\n                    v: currentValue,\r\n                    a: Math.round(currentAlpha * 1000) / 1000\r\n                }, { format: opts.format || currentPreferredFormat });\r\n            }\r\n\r\n            function isValid() {\r\n                return !textInput.hasClass(\"sp-validation-error\");\r\n            }\r\n\r\n            function move() {\r\n                updateUI();\r\n\r\n                callbacks.move(get());\r\n                boundElement.trigger('move.ColorPicker', [ get() ]);\r\n            }\r\n\r\n            function updateUI() {\r\n\r\n                textInput.removeClass(\"sp-validation-error\");\r\n\r\n                updateHelperLocations();\r\n\r\n                // Update dragger background color (gradients take care of saturation and value).\r\n                var flatColor = Color.fromRatio({ h: currentHue, s: 1, v: 1 });\r\n                dragger.css(\"background-color\", flatColor.toHexString());\r\n\r\n                // Get a format that alpha will be included in (hex and names ignore alpha)\r\n                var format = currentPreferredFormat;\r\n                if (currentAlpha < 1 && !(currentAlpha === 0 && format === \"name\")) {\r\n                    if (format === \"hex\" || format === \"hex3\" || format === \"hex6\" || format === \"name\") {\r\n                        format = \"rgb\";\r\n                    }\r\n                }\r\n\r\n                var realColor = get({ format: format }),\r\n                    displayColor = '';\r\n\r\n                 //reset background info for preview element\r\n                previewElement.removeClass(\"sp-clear-display\");\r\n                previewElement.css('background-color', 'transparent');\r\n\r\n                if (!realColor && allowEmpty) {\r\n                    // Update the replaced elements background with icon indicating no color selection\r\n                    previewElement.addClass(\"sp-clear-display\");\r\n                }\r\n                else {\r\n                    var realHex = realColor.toHexString(),\r\n                        realRgb = realColor.toRgbString();\r\n\r\n                    // Update the replaced elements background color (with actual selected color)\r\n                    previewElement.css(\"background-color\", realRgb);\r\n\r\n                    if (opts.showAlpha) {\r\n                        var rgb = realColor.toRgb();\r\n                        rgb.a = 0;\r\n                        var realAlpha = Color(rgb).toRgbString();\r\n                        var gradient = \"linear-gradient(left, \" + realAlpha + \", \" + realHex + \")\";\r\n\r\n                        if (browser.isIE) {\r\n                            alphaSliderInner.css(\"filter\", Color(realAlpha).toFilter({ gradientType: 1 }, realHex));\r\n                        }\r\n                        else {\r\n                            alphaSliderInner.css(\"background\", \"-webkit-\" + gradient);\r\n                            alphaSliderInner.css(\"background\", \"-moz-\" + gradient);\r\n                            alphaSliderInner.css(\"background\", \"-ms-\" + gradient);\r\n                            // Use current syntax gradient on unprefixed property.\r\n                            alphaSliderInner.css(\"background\",\r\n                                \"linear-gradient(to right, \" + realAlpha + \", \" + realHex + \")\");\r\n                        }\r\n                    }\r\n\r\n                    displayColor = realColor.toString(format);\r\n                }\r\n\r\n                // Update the text entry input as it changes happen\r\n                if (opts.showInput) {\r\n                    textInput.val(displayColor);\r\n                }\r\n\r\n                if (opts.showPalette) {\r\n                    drawPalette();\r\n                }\r\n\r\n                drawInitial();\r\n            }\r\n\r\n            function updateHelperLocations() {\r\n                var s = currentSaturation;\r\n                var v = currentValue;\r\n\r\n                if(allowEmpty && isEmpty) {\r\n                    //if selected color is empty, hide the helpers\r\n                    alphaSlideHelper.hide();\r\n                    slideHelper.hide();\r\n                    dragHelper.hide();\r\n                }\r\n                else {\r\n                    //make sure helpers are visible\r\n                    alphaSlideHelper.show();\r\n                    slideHelper.show();\r\n                    dragHelper.show();\r\n\r\n                    // Where to show the little circle in that displays your current selected color\r\n                    var dragX = s * dragWidth;\r\n                    var dragY = dragHeight - (v * dragHeight);\r\n                    dragX = Math.max(\r\n                        -dragHelperHeight,\r\n                        Math.min(dragWidth - dragHelperHeight, dragX - dragHelperHeight)\r\n                    );\r\n                    dragY = Math.max(\r\n                        -dragHelperHeight,\r\n                        Math.min(dragHeight - dragHelperHeight, dragY - dragHelperHeight)\r\n                    );\r\n                    dragHelper.css({\r\n                        \"top\": dragY + \"px\",\r\n                        \"left\": dragX + \"px\"\r\n                    });\r\n\r\n                    var alphaX = currentAlpha * alphaWidth;\r\n                    alphaSlideHelper.css({\r\n                        \"left\": (alphaX - (alphaSlideHelperWidth / 2)) + \"px\"\r\n                    });\r\n\r\n                    // Where to show the bar that displays your current selected hue\r\n                    var slideY = (currentHue) * slideHeight;\r\n                    slideHelper.css({\r\n                        \"top\": (slideY - slideHelperHeight) + \"px\"\r\n                    });\r\n                }\r\n            }\r\n\r\n            function updateOriginalInput(fireCallback) {\r\n                var color = get(),\r\n                    displayColor = '',\r\n                    hasChanged = !Color.equals(color, colorOnShow);\r\n\r\n                if (color) {\r\n                    displayColor = color.toString(currentPreferredFormat);\r\n                    // Update the selection palette with the current color\r\n                    addColorToSelectionPalette(color);\r\n                }\r\n\r\n                if (isInput) {\r\n                    boundElement.val(displayColor);\r\n                }\r\n\r\n                if (fireCallback && hasChanged) {\r\n                    callbacks.change(color);\r\n                    boundElement.trigger('change', [ color ]);\r\n                }\r\n            }\r\n\r\n            function reflow() {\r\n                if (!visible) {\r\n                    return; // Calculations would be useless and wouldn't be reliable anyways\r\n                }\r\n                dragWidth = dragger.width();\r\n                dragHeight = dragger.height();\r\n                dragHelperHeight = dragHelper.height();\r\n                slideWidth = slider.width();\r\n                slideHeight = slider.height();\r\n                slideHelperHeight = slideHelper.height();\r\n                alphaWidth = alphaSlider.width();\r\n                alphaSlideHelperWidth = alphaSlideHelper.width();\r\n\r\n                if (!flat) {\r\n                    container.css(\"position\", \"absolute\");\r\n                    if (opts.offset) {\r\n                        container.offset(opts.offset);\r\n                    } else {\r\n                        container.offset(getOffset(container, offsetElement));\r\n                    }\r\n                }\r\n\r\n                updateHelperLocations();\r\n\r\n                if (opts.showPalette) {\r\n                    drawPalette();\r\n                }\r\n\r\n                boundElement.trigger('reflow.ColorPicker');\r\n            }\r\n\r\n            function destroy() {\r\n                boundElement.show();\r\n                offsetElement.off(\"click.ColorPicker touchstart.ColorPicker\");\r\n                container.remove();\r\n                replacer.remove();\r\n                pickers[spect.id] = null;\r\n            }\r\n\r\n            function option(optionName, optionValue) {\r\n                if (optionName === undefined) {\r\n                    return langx.mixin({}, opts);\r\n                }\r\n                if (optionValue === undefined) {\r\n                    return opts[optionName];\r\n                }\r\n\r\n                opts[optionName] = optionValue;\r\n\r\n                if (optionName === \"preferredFormat\") {\r\n                    currentPreferredFormat = opts.preferredFormat;\r\n                }\r\n                applyOptions();\r\n            }\r\n\r\n            function enable() {\r\n                disabled = false;\r\n                boundElement.attr(\"disabled\", false);\r\n                offsetElement.removeClass(\"sp-disabled\");\r\n            }\r\n\r\n            function disable() {\r\n                hide();\r\n                disabled = true;\r\n                boundElement.attr(\"disabled\", true);\r\n                offsetElement.addClass(\"sp-disabled\");\r\n            }\r\n\r\n            function setOffset(coord) {\r\n                opts.offset = coord;\r\n                reflow();\r\n            }\r\n\r\n            initialize();\r\n\r\n            var spect = {\r\n                show: show,\r\n                hide: hide,\r\n                toggle: toggle,\r\n                reflow: reflow,\r\n                option: option,\r\n                enable: enable,\r\n                disable: disable,\r\n                offset: setOffset,\r\n                set: function (c) {\r\n                    set(c);\r\n                    updateOriginalInput();\r\n                },\r\n                get: get,\r\n                destroy: destroy,\r\n                container: container\r\n            };\r\n\r\n            spect.id = pickers.push(spect) - 1;\r\n\r\n            return spect;\r\n        }\r\n    });\r\n\r\n\r\n    /**\r\n    * checkOffset - get the offset below/above and left/right element depending on screen position\r\n    * Thanks https://github.com/jquery/jquery-ui/blob/master/ui/jquery.ui.datepicker.js\r\n    */\r\n    function getOffset(picker, input) {\r\n        var extraY = 0;\r\n        var dpWidth = picker.outerWidth();\r\n        var dpHeight = picker.outerHeight();\r\n        var inputHeight = input.outerHeight();\r\n        var doc = picker[0].ownerDocument;\r\n        var docElem = doc.documentElement;\r\n        var viewWidth = docElem.clientWidth + $(doc).scrollLeft();\r\n        var viewHeight = docElem.clientHeight + $(doc).scrollTop();\r\n        var offset = input.offset();\r\n        var offsetLeft = offset.left;\r\n        var offsetTop = offset.top;\r\n\r\n        offsetTop += inputHeight;\r\n\r\n        offsetLeft -=\r\n            Math.min(offsetLeft, (offsetLeft + dpWidth > viewWidth && viewWidth > dpWidth) ?\r\n            Math.abs(offsetLeft + dpWidth - viewWidth) : 0);\r\n\r\n        offsetTop -=\r\n            Math.min(offsetTop, ((offsetTop + dpHeight > viewHeight && viewHeight > dpHeight) ?\r\n            Math.abs(dpHeight + inputHeight - extraY) : extraY));\r\n\r\n        return {\r\n            top: offsetTop,\r\n            bottom: offset.bottom,\r\n            left: offsetLeft,\r\n            right: offset.right,\r\n            width: offset.width,\r\n            height: offset.height\r\n        };\r\n    }\r\n\r\n    /**\r\n    * stopPropagation - makes the code only doing this a little easier to read in line\r\n    */\r\n    function stopPropagation(e) {\r\n        e.stopPropagation();\r\n    }\r\n\r\n    /**\r\n    * Create a function bound to a given object\r\n    * Thanks to underscore.js\r\n    */\r\n    function bind(func, obj) {\r\n        var slice = Array.prototype.slice;\r\n        var args = slice.call(arguments, 2);\r\n        return function () {\r\n            return func.apply(obj, args.concat(slice.call(arguments)));\r\n        };\r\n    }\r\n\r\n\r\n    /**\r\n    * Define a query plugin\r\n    */\r\n    var dataID = \"ColorPicker.id\";\r\n    \r\n    function Plugin(opts, extra) {\r\n\r\n        if (typeof opts == \"string\") {\r\n\r\n            var returnValue = this;\r\n            var args = Array.prototype.slice.call( arguments, 1 );\r\n\r\n            this.each(function () {\r\n                var spect = pickers[$(this).data(dataID)];\r\n                if (spect) {\r\n                    var method = spect[opts];\r\n                    if (!method) {\r\n                        throw new Error( \"skylark-ui-colorpicker: no such method: '\" + opts + \"'\" );\r\n                    }\r\n\r\n                    if (opts == \"get\") {\r\n                        returnValue = spect.get();\r\n                    }\r\n                    else if (opts == \"container\") {\r\n                        returnValue = spect.container;\r\n                    }\r\n                    else if (opts == \"option\") {\r\n                        returnValue = spect.option.apply(spect, args);\r\n                    }\r\n                    else if (opts == \"destroy\") {\r\n                        spect.destroy();\r\n                        $(this).removeData(dataID);\r\n                    }\r\n                    else {\r\n                        method.apply(spect, args);\r\n                    }\r\n                }\r\n            });\r\n\r\n            return returnValue;\r\n        }\r\n\r\n        // Initializing a new instance of ColorPicker\r\n        return this.colorPicker(\"destroy\").each(function () {\r\n            var options = langx.mixin({}, $(this).data(), opts);\r\n            var spect = ColorPicker(this, options);\r\n            $(this).data(dataID, spect.id);\r\n        });\r\n    }\r\n\r\n    ColorPicker.load = true;\r\n    ColorPicker.loadOpts = {};\r\n    ColorPicker.draggable = draggable;\r\n    ColorPicker.defaults = defaultOpts;\r\n\r\n    ColorPicker.localization = { };\r\n    ColorPicker.palettes = { };\r\n\r\n    $.fn.colorPicker = Plugin;\r\n\r\n    return skylark.attach(\"domx.ColorPicker\",ColorPicker);\r\n\r\n});\r\n"]}