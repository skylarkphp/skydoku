{"version":3,"sources":["skylark-domx-gradienter-all.js"],"names":["define","obj1","path","obj2","split","length","ns","i","name","_attach","skylark","attach","obj","main","class2type","nativeIsArray","Array","isArray","toString","type","forEach","toLowerCase","String","call","object","constructor","isEmptyObject","isFunction","value","isHtmlNode","nodeType","isNumber","isObject","isString","isWindow","window","isArrayLike","isBoolean","isDefined","isDocument","DOCUMENT_NODE","isElement","isEmpty","isNaN","isNull","isNumeric","isPlainObject","Object","getPrototypeOf","prototype","isSameOrigin","href","origin","location","protocol","hostname","port","startsWith","isSymbol","isObjectLike","objectToString","symbolTag","isUndefined","types","INFINITY","MAX_INTEGER","NAN","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","toFinite","toNumber","sign","other","valueOf","replace","isBinary","test","slice","toInteger","result","remainder","numbers","eq","deepEq","hasOwnProperty","keysFunc","defaults","SymbolProto","Symbol","allKeys","keys","key","push","has","_mixin","target","source","deep","safe","undefined","_parseMixinArgs","args","params","arguments","shift","pop","sources","mixin","apply","this","values","a","b","aStack","bStack","className","areArrays","aCtor","bCtor","clone","src","checkCloneMethod","copy","index","l","each","callback","undef","extend","arg","isEqual","includes","collection","fromIndex","guard","nativeMax","indexOf","baseIndexOf","isMatch","attrs","omit","prop1","prop2","pn","pick","removeItem","items","item","idx","splice","fallback","prop","safeMixin","objects","filter","find","baseFindIndex","array","predicate","fromRight","baseIsNaN","flatten","j","compact","first","n","func","grep","out","inArray","makeArray","offset","startWith","concat","merge","second","arr","fn","map","elements","reduce","initialValue","uniq","arrays","createClass","_constructor","_construct","init","props","parent","mixins","options","innerParent","ctor","Error","clss","unshift","superclass","cls","clsMixines","serialMixins","newCtor","xtor","Function","create","__proto__","__mixin__","mergeMixins","klassName","__mixins__","partial","proto","_super","noOverrided","overrides","superFn","tmp","overrided","ret","defineProperty","extendClass","inherit","f1","klass","QueryResults","results","isPromise","then","addIterativeMethod","method","Deferred","when","delegate","total","ArrayStore","queryEngine","query","queryObject","required","execute","thisObject","cache","buildFn","sortSet","sort","aValue","attribute","bValue","descending","start","count","Infinity","matches","idProperty","get","id","data","getIdentity","put","Math","random","overwrite","add","remove","setData","identifier","nextId","aspect","methodName","advice","receiveArguments","dispatcher","existing","executionId","before","next","around","after","newResults","signal","previous","advised","advise","proxy","context","TypeError","TMP","templateSettings","evaluate","interpolate","escape","noMatch","escapes","'","\\","\r","\n","\t"," "," ","escaper","bind","debounce","wait","timeout","clearTimeout","setTimeout","defer","requestAnimationFrame","setTimeoutout","negate","noop","returnTrue","returnFalse","template","text","settings","render","matcher","RegExp","join","match","variable","e","argument","funcs","Promise","always","handler","done","fail","catch","self","promise","makePromise2","resolve","reject","_resolve","_reject","isResolved","isPending","isRejected","v","state","notified","listeners","onResolved","onRejected","onProgress","progress","__ctx__","pipe","notify","listener","error","resolveWith","_resolved","p","reason","rejectWith","_rejected","errback","progback","all","d","race","valueOrPromise","receivedPromise","nativePromise","deferred","cancel","err","immediate","async","parallel","ctx","rets","series","waterful","parseMilliSeconds","str","strs","number","trim","datetimes","parse","event","segs","Emitter","on","events","selector","one","_hub","parsed","emit","CustomEvent","eventName","len","reCompact","listened","evtArr","_events","listenTo","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","listenToOnce","off","evts","liveEvents","_","unlistenTo","trigger","createEvent","Evented","hoster","isBrowser","isNode","global","browser","node","process","versions","v8","_document","w","require","document","matched","ua","exec","version","uaMatch","navigator","userAgent","chrome","webkit","safari","escapeCharMap","freeze","&","<",">","\"","`","=","replaceChar","c","escapeChars","idCounter","string","line","body","escapeHTML","me","callee","stash","getElementById","innerHTML","camelCase","toUpperCase","dasherize","deserializeValue","JSON","generateUUID","r","lowerFirst","charAt","rtrim","serializeValue","stringify","substitute","transform","getObject","retVal","getValue","_k","reverse","format","slugify","from","uniqueId","prefix","upperFirst","strings","base64","decode","input","binary","chr1","chr2","chr3","enc1","enc2","enc3","enc4","output","_keyStr","fromCharCode","utftext","c1","c2","charCodeAt","c3","_utf8_decode","encode","_utf8_encode","Stateful","attributes","cid","cidPrefix","set","changed","validationError","idAttribute","toJSON","attr","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","_pending","clear","hasChanged","changedAttributes","diff","old","previousAttributes","isNew","isValid","validate","hub","publish","arg1","argn","subscribe","topic","_uid","langx","funcArg","payload","getQueryParams","url","queryParam","nv","toPixel","parseFloat","uid","URL","webkitURL","vendorPrefix","vendorPrefixRE","transEndEventNames","WebkitTransition","MozTransition","OTransition","transition","transEndEventName","css3PropPrefix","css3EventPrefix","cssStyles","cssProps","vendorPrefixesRE","testEl","createElement","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","requestFullScreen","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","testStyle","exitFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen","style","cssPropName","isIE","normalizeStyleProperty","normalizeCssProperty","normalizeCssEvent","support","end","fragmentRE","singleTagRE","div","table","tableBody","tableRow","containers","tr","tbody","thead","tfoot","td","th","*","rootNodeRE","ensureNodes","nodes","copyByClone","cloneNode","nodeName","elm","chkName","enhancePlaceContent","placing","neddsFlattern","append","parentNode","appendChild","tag","createElementNS","setAttribute","rxhtmlTag","isChildOf","directly","documentElement","contains","ownerDoc","ownerDocument","noder","active","doc","el","activeElement","refNode","nextSibling","insertBefore","blur","getAttribs","setAttrib","getAttrib","child","contents","contentDocument","childNodes","createFragment","html","$1","container","xml","newXml","edsplit","removeSelfClosingTags","dom","removeChild","createTextNode","empty","hasChildNodes","firstChild","fullScreen","exitFullScreen","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","focusable","element","hasTabindex","mapName","img","focusableIfVisible","fieldset","$","is","disabled","closest","visible","isActive","elem","isInDocument","offsetParent","defaultView","getComputedStyle","position","ownerWindow","parentWindow","prepend","reflow","offsetHeight","console","warn","children","oldNode","replaceChild","selectable","onselectstart","MozUserSelect","KhtmlUserSelect","unselectable","traverse","wrapper","wrapperNode","wrapperInner","unwrap","isDoc","local","nativeMatchesSelector","separatorIndex","combinatorIndex","reversed","reverseCache","reUnescape","expression","isReversed","Slick","currentCache","expressions","raw","regexp","parser","reverseCombinator","combinator","exp","last","parts","cexp","escapeRegExp","rawMatch","separator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","currentSeparator","currentParsed","classList","classes","pseudos","operator","rinputs","rheader","parseSelector","button","checked","enabled","even","focus","tabindex","gt","sel","header","hidden","lt","not","odd","selected","tabbable","tabIndex","offsetWidth","createInputPseudo","createButtonPseudo","isArrayFilter","radio","checkbox","file","password","image","submit","reset","ancestors","root","rootIsSelector","descendants","querySelectorAll","matchError","descendant","querySelector","lastChild","previousSibling","check","adjacent","nextSiblings","previousSiblings","siblings","divide","cond","nativeSelector","customPseudos","part","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","filterSingle","matchs","combine","bit","node1","op","divided","single","currentBit","founds","found","currentItems","finder","ancestor","byId","findAll","capitalRE","propMap","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","valHooks","option","select","selectedIndex","max","optionSet","attrName","_store","confirm","store","_attributeData","_setData","dataAttrName","camelName","_getData","cleanData","txt","textContent","hooks","value1","datax","dataName","aria","pluck","property","removeAttr","removeAttribute","removeData","names","removeProp","isQ","some","every","rquickExpr","wrapper_node_operation","oldValueFunc","argType","wrapper_map","wrapper_selector","wrapper_selector_until","util","wrapper_every_act","wrapper_value","newValue","NodeList","ready","rootQuery","toArray","size","excludes","parents","parentsUntil","pushStack","elms","prevObject","replaceWith","newContent","wrap","htmlIsFunction","wrapAll","firstElementChild","wrapInner","toggle","setting","css","show","hide","prevAll","nextAll","detach","hover","fnOver","fnOut","mouseenter","mouseleave","appendTo","prependTo","insertAfter","replaceAll","original","elems","insert","scrollParent","includeHidden","excludeStaticParent","overflowRegex","andSelf","addBack","eventType","place","addContent","content","disableSelection","preventDefault","enableSelection","flow","isBlockNode","plugin","returnValue","plugins","instantiate","wraps","wrapper_some_chk","wrapper_every_act_firstArgFunc","newArg1","wrapper_name_value","VisualElement","_elm","velm","batch","action","HTMLElement","_delegator","ignoreProperties","eventMethods","stopImmediatePropagation","stopPropagation","readyRE","compatible","isDefaultPrevented","sourceMethod","NativeEventCtors","NativeEvents","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","abort","change","selectionchange","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","textInput","touchstart","touchmove","touchend","load","resize","scroll","unload","wheel","bubbles","cancelable","namespace","getEventCtor","createProxy","originalEvent","specialEvents","focusinSupported","realEvent","handlers","EventBindings","_target","_event","_bindings","bindings","binding","_listener","domEvt","_args","isImmediatePropagationStopped","currentTarget","liveFired","related","relatedTarget","addEventListener","removing","removeEventListener","EventsHandler","_handler","register","specialEvent","bindingEvent","bindType","bindEventName","unregister","findHandler","readyState","keyCodeLookup","backspace","comma","delete","down","enter","home","left","page_down","page_up","period","right","space","tab","up","eventer","transitionEnd","delegateType","shortcuts","registry","run","shortcut","metaKey","ctrlKey","ctrl","alt","altKey","shiftKey","keyCode","charCode","pattern","shortcutKey","regKey","special","stop","evented","Event","dispatchEvent","delegateMethodNames","maybeAddPx","cssNumber","column-count","columns","font-weight","line-height","opacity","z-index","zoom","classReCache","classRE","svg","baseVal","elementDisplay","getStyles","view","opener","styler","autocssfix","cssHooks","addClass","re","computedStyle","getPropertyValue","removeProperty","cssText","hasClass","isInvisible","removeClass","display","defaultDisplay","toggleClass","replaceClass","newClass","oldClass","cachedScrollbarWidth","px","scrollbarWidth","w1","w2","innerDiv","clientWidth","borderExtents","top","bottom","s","borderLeftWidth","borderTopWidth","borderRightWidth","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","clientSize","dimension","width","height","clientHeight","isBorderBox","bex","pex","paddingExtents","getDocumentSize","scrollWidth","scrollHeight","marginLeft","marginTop","marginRight","marginBottom","marginSize","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","pageXOffset","pageYOffset","relativeRect","scrollLeft","hasScrollLeft","scrollTo","scrollY","scrollTop","hasScrollTop","scrollX","innerWidth","innerHeight","geom","contentRect","cs","fullCover","hor","vert","vertical","horizontal","marginRect","pageRect","round","scrollIntoView","align","x","y","parentWidth","parentHeight","parentElm","pos","rootElm","offsetLeft","offsetTop","getOffset","abs","rhorizontal","rvertical","roffset","rposition","rpercent","getOffsets","offsets","parseCss","positions","fit","newOverRight","within","withinOffset","outerWidth","collisionPosLeft","collisionPosition","overLeft","overRight","collisionWidth","newOverBottom","outerHeight","collisionPosTop","overTop","overBottom","collisionHeight","flip","newOverLeft","myOffset","my","elemWidth","atOffset","at","targetWidth","newOverTop","elemHeight","targetHeight","flipfit","posit","targetOffset","basePosition","dimensions","of","withinElement","hasOffset","msize","scrollInfo","overflowX","overflowY","hasOverflowX","getScrollInfo","collision","pageY","pageX","horizontalOffset","verticalOffset","using","dir","feedback","important","Dimension","m","margin","cb","mb","animationName","animationDuration","animationTiming","transitionProperty","transitionDuration","transitionTiming","transitionDelay","animationEnd","supportedTransforms","cssReset","animate","properties","duration","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","easing","complete","fx","speeds","normal","eace","clientLeft","scrollToTop","speed","scale","scrollFrom","freq","interval","setInterval","clearInterval","fadeTo","fadeIn","fadeOut","slideDown","visibility","overflow","slideUp","queue","fast","slow","emulateTransitionEnd","called","fadeToggle","ceasing","allback","slideToggle","throb","timer","time","throbber","overlayDiv","zIndex","overlay","textNode","update","nodeValue","toogle","elmx","pluginKlasses","pluginName","pair","instanceDataName","pluginInstance","destroy","pluginKlass","Plugin","_initOptions","ctors","_destroy","_delay","instance","curOption","_setOptions","_setOption","getUID","domNode","shortcutName","extfn","shortcutter","args2","colors","trimLeft","trimRight","math","mathRound","mathMin","min","mathMax","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","burntsienna","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","hexNames","o","flipped","rgbToRgb","g","bound01","hslToRgb","h","hue2rgb","q","t","hsvToRgb","floor","f","mod","boundAlpha","isOnePointZero","processPercent","isPercentage","parseIntFromHex","pad2","convertToPercentage","convertHexToDecimal","CSS_UNIT","PERMISSIVE_MATCH3","PERMISSIVE_MATCH4","matchers","rgb","rgba","hsl","hsla","hsv","hsva","hex3","hex6","hex8","stringInputToObject","color","named","inputToRGB","ok","substr","rgbToHsl","rgbToHsv","rgbToHex","allow3Char","hex","rgbaToHex","clamp01","tinyCounter","mathRandom","Color","opts","_originalInput","_r","_g","_b","_a","_roundA","_format","_gradientType","gradientType","_ok","_tc_id","isDark","getBrightness","isLight","getOriginalInput","getFormat","getAlpha","toRgb","setAlpha","toHsv","toHsvString","toHsl","toHslString","toHex","toHexString","toHex8","toHex8String","toRgbString","toPercentageRgb","toPercentageRgbString","toName","toFilter","secondColor","hex8String","secondHex8String","formatSet","formattedString","hasAlpha","needsAlphaFormat","_applyModification","lighten","brighten","darken","desaturate","saturate","greyscale","spin","_applyCombination","analogous","complement","monochromatic","splitcomplement","triad","tetrad","amount","hue","slices","modification","fromRatio","newColor","equals","color1","color2","mix","rgb1","rgb2","readability","brightnessA","brightnessB","colorDiff","brightness","isReadable","mostReadable","baseColor","colorList","bestColor","bestScore","bestIsReadable","readable","score","onmove","onstart","onstop","dragging","maxHeight","maxWidth","hasTouch","duringDragEvents","prevent","move","documentMode","t0","touches","dragX","dragY","which","draggable","defaultOpts","beforeShow","flat","showInput","allowEmpty","showButtons","clickoutFiresChange","showInitial","showPalette","showPaletteOnly","hideAfterPaletteSelect","togglePaletteOnly","showSelectionPalette","localStorageKey","maxSelectionSize","cancelText","chooseText","togglePaletteMoreText","togglePaletteLessText","clearText","noColorSelectedText","preferredFormat","containerClassName","replacerClassName","showAlpha","theme","palette","selectionPalette","pickers","replaceInput","markup","gradientFix","paletteTemplate","tiny","swatchStyle","ColorPicker","callbackContext","callbacks","instanceOptions","isDragging","dragWidth","dragHeight","dragHelperHeight","slideHeight","alphaWidth","alphaSlideHelperWidth","slideHelperHeight","currentHue","currentSaturation","currentValue","currentAlpha","paletteArray","paletteLookup","draggingClass","shiftMovementDirection","boundElement","pickerContainer","dragger","dragHelper","slider","slideHelper","alphaSliderInner","alphaSlider","alphaSlideHelper","paletteContainer","initialColorContainer","cancelButton","clearButton","chooseButton","toggleButton","isInput","isInputTypeColor","inputTypeColorSupport","shouldReplace","replacer","offsetElement","previewElement","initialColor","colorOnShow","currentPreferredFormat","applyOptions","updateSelectionPaletteFromStorage","localStorage","oldPalette","addColorToSelectionPalette","drawPalette","currentColor","unique","getUniqueSelectionPalette","drawInitial","initial","dragStart","dragStop","setFromTextInput","updateOriginalInput","hideAll","onkeydown","clickout","updateUI","revert","ignoreFormatChange","newHsv","updateHelperLocations","flatColor","realColor","displayColor","realHex","realRgb","realAlpha","gradient","alphaX","slideY","fireCallback","picker","dpWidth","dpHeight","inputHeight","docElem","viewWidth","viewHeight","disable","oldDragX","oldDragY","furtherFromX","setValue","paletteElementClick","ignore","paletteEvent","initialize","spect","optionName","optionValue","enable","coord","dataID","loadOpts","localization","palettes","colorPicker","extra","Drag","gradx","oRoot","minX","maxX","minY","maxY","bSwapHorzRef","bSwapVertRef","fXMapper","fYMapper","onmousedown","hmode","vmode","xMapper","yMapper","onDragStart","onDragEnd","onDrag","current_slider_id","fixE","lastMouseX","clientX","lastMouseY","clientY","minMouseX","maxMouseX","minMouseY","maxMouseY","onmousemove","onmouseup","update_style_array","apply_style","panel","get_style_value","gx","get_rgb_obj","cp","nx","ny","ey","ex","layerX","offsetX","layerY","offsetY","ele","_options","targets","sliders","direction","code_shown","styles","rand_RGB","rand_pos","slider_ids","slider_index","shape","slider_hovered","jQ_present","load_jQ","add_event","evt","evt_func","event_function","attachEvent","get_random_position","get_random_rgb","R","G","B","update_target","v_len","apply_default_styles","container_width","A","style_str","suffix","load_info","set_colorpicker","log","add_slider","k","delta","containment","axis","clr","generate_options","generate_radial_options","generate_linear_options","load_gradx","option_str","$this","center","Gradienter"],"mappings":"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","file":"../skylark-domx-gradienter-all.js","sourcesContent":["define('skylark-langx-ns/_attach',[],function(){\r\n    return  function attach(obj1,path,obj2) {\r\n        if (typeof path == \"string\") {\r\n            path = path.split(\".\");//[path]\r\n        };\r\n        var length = path.length,\r\n            ns=obj1,\r\n            i=0,\r\n            name = path[i++];\r\n\r\n        while (i < length) {\r\n            ns = ns[name] = ns[name] || {};\r\n            name = path[i++];\r\n        }\r\n\r\n        return ns[name] = obj2;\r\n    }\r\n});\ndefine('skylark-langx-ns/ns',[\r\n    \"./_attach\"\r\n], function(_attach) {\r\n    var skylark = {\r\n    \tattach : function(path,obj) {\r\n    \t\treturn _attach(skylark,path,obj);\r\n    \t}\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-langx-ns/main',[\r\n\t\"./ns\"\r\n],function(skylark){\r\n\treturn skylark;\r\n});\ndefine('skylark-langx-ns', ['skylark-langx-ns/main'], function (main) { return main; });\n\ndefine('skylark-langx/skylark',[\r\n    \"skylark-langx-ns\"\r\n], function(ns) {\r\n\treturn ns;\r\n});\r\n\ndefine('skylark-langx-types/types',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n    var nativeIsArray = Array.isArray, \r\n        toString = {}.toString;\r\n    \r\n    var type = (function() {\r\n        var class2type = {};\r\n\r\n        // Populate the class2type map\r\n        \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split(\" \").forEach(function(name) {\r\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n        });\r\n\r\n        return function type(obj) {\r\n            return obj == null ? String(obj) :\r\n                class2type[toString.call(obj)] || \"object\";\r\n        };\r\n    })();\r\n\r\n \r\n    var  isArray = nativeIsArray || function(obj) {\r\n        return object && object.constructor === Array;\r\n    };\r\n\r\n\r\n    /**\r\n     * Checks if `value` is array-like. A value is considered array-like if it's\r\n     * not a function/string/element and has a `value.length` that's an integer greater than or\r\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\r\n     *\r\n     * @category Lang\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\r\n     * @example\r\n     *\r\n     * isArrayLike([1, 2, 3])\r\n     * // => true\r\n     *\r\n     * isArrayLike(document.body.children)\r\n     * // => false\r\n     *\r\n     * isArrayLike('abc')\r\n     * // => true\r\n     *\r\n     * isArrayLike(Function)\r\n     * // => false\r\n     */    \r\n    function isArrayLike(obj) {\r\n        return !isString(obj) && !isHtmlNode(obj) && typeof obj.length == 'number' && !isFunction(obj);\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is classified as a boolean primitive or object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\r\n     * @example\r\n     *\r\n     * isBoolean(false)\r\n     * // => true\r\n     *\r\n     * isBoolean(null)\r\n     * // => false\r\n     */\r\n    function isBoolean(obj) {\r\n       return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\r\n       //return typeof(obj) === \"boolean\";\r\n    }\r\n\r\n    function isDefined(obj) {\r\n        return typeof obj !== 'undefined';\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\r\n    }\r\n\r\n   // Is a given value a DOM element?\r\n    function isElement(obj) {\r\n        return !!(obj && obj.nodeType === 1);\r\n    }   \r\n\r\n    function isEmptyObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n            if (obj[name] !== null) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    /**\r\n     * Checks if `value` is classified as a `Function` object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\r\n     * @example\r\n     *\r\n     * isFunction(parseInt)\r\n     * // => true\r\n     *\r\n     * isFunction(/abc/)\r\n     * // => false\r\n     */\r\n    function isFunction(value) {\r\n        return type(value) == \"function\";\r\n    }\r\n\r\n\r\n\r\n    function isHtmlNode(obj) {\r\n        return obj && obj.nodeType; // obj instanceof Node; //Consider the elements in IFRAME\r\n    }\r\n\r\n    function isInstanceOf( /*Object*/ value, /*Type*/ type) {\r\n        //Tests whether the value is an instance of a type.\r\n        if (value === undefined) {\r\n            return false;\r\n        } else if (value === null || type == Object) {\r\n            return true;\r\n        } else if (typeof value === \"number\") {\r\n            return type === Number;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else if (typeof value === \"boolean\") {\r\n            return type === Boolean;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else {\r\n            return (value instanceof type) || (value && value.isInstanceOf ? value.isInstanceOf(type) : false);\r\n        }\r\n    }\r\n\r\n    function isNull(obj) {\r\n        return obj === null;\r\n    }\r\n\r\n    function isNumber(obj) {\r\n        return typeof obj == 'number';\r\n    }\r\n\r\n    function isObject(obj) {\r\n        var type = typeof obj;\r\n        return type === 'function' || type === 'object' && !!obj;        \r\n        //return type(obj) == \"object\";\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return obj && obj == obj.window;\r\n    }\r\n\r\n    function isSameOrigin(href) {\r\n        if (href) {\r\n            var origin = location.protocol + '//' + location.hostname;\r\n            if (location.port) {\r\n                origin += ':' + location.port;\r\n            }\r\n            return href.startsWith(origin);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is classified as a `Symbol` primitive or object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\r\n     * @example\r\n     *\r\n     * _.isSymbol(Symbol.iterator);\r\n     * // => true\r\n     *\r\n     * _.isSymbol('abc');\r\n     * // => false\r\n     */\r\n    function isSymbol(value) {\r\n      return typeof value == 'symbol' ||\r\n        (isObjectLike(value) && objectToString.call(value) == symbolTag);\r\n    }\r\n\r\n    // Is a given variable undefined?\r\n    function isUndefined(obj) {\r\n        return obj === void 0;\r\n    }\r\n\r\n    return skylark.attach(\"langx.types\",{\r\n\r\n        isArray: isArray,\r\n\r\n        isArrayLike: isArrayLike,\r\n\r\n        isBoolean: isBoolean,\r\n\r\n        isDefined: isDefined,\r\n\r\n        isDocument: isDocument,\r\n\r\n        isElement,\r\n\r\n        isEmpty : isEmptyObject,\r\n\r\n        isEmptyObject: isEmptyObject,\r\n\r\n        isFunction: isFunction,\r\n\r\n        isHtmlNode: isHtmlNode,\r\n\r\n        isNaN : function (obj) {\r\n            return isNaN(obj);\r\n        },\r\n\r\n        isNull: isNull,\r\n\r\n\r\n        isNumber: isNumber,\r\n\r\n        isNumeric: isNumber,\r\n\r\n        isObject: isObject,\r\n\r\n        isPlainObject: isPlainObject,\r\n\r\n        isString: isString,\r\n\r\n        isSameOrigin: isSameOrigin,\r\n\r\n        isSymbol : isSymbol,\r\n\r\n        isUndefined: isUndefined,\r\n\r\n        isWindow: isWindow,\r\n\r\n        type: type\r\n    });\r\n\r\n});\ndefine('skylark-langx-types/main',[\r\n\t\"./types\"\r\n],function(types){\r\n\treturn types;\r\n});\ndefine('skylark-langx-types', ['skylark-langx-types/main'], function (main) { return main; });\n\ndefine('skylark-langx-numbers/numbers',[\r\n    \"skylark-langx-ns\",\r\n    \"skylark-langx-types\"\r\n],function(skylark,types){\r\n\tvar isObject = types.isObject,\r\n\t\tisSymbol = types.isSymbol;\r\n\r\n\tvar INFINITY = 1 / 0,\r\n\t    MAX_SAFE_INTEGER = 9007199254740991,\r\n\t    MAX_INTEGER = 1.7976931348623157e+308,\r\n\t    NAN = 0 / 0;\r\n\r\n\t/** Used to match leading and trailing whitespace. */\r\n\tvar reTrim = /^\\s+|\\s+$/g;\r\n\r\n\t/** Used to detect bad signed hexadecimal string values. */\r\n\tvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\r\n\r\n\t/** Used to detect binary string values. */\r\n\tvar reIsBinary = /^0b[01]+$/i;\r\n\r\n\t/** Used to detect octal string values. */\r\n\tvar reIsOctal = /^0o[0-7]+$/i;\r\n\r\n\t/** Used to detect unsigned integer values. */\r\n\tvar reIsUint = /^(?:0|[1-9]\\d*)$/;\r\n\r\n\t/** Built-in method references without a dependency on `root`. */\r\n\tvar freeParseInt = parseInt;\r\n\r\n\t/**\r\n\t * Converts `value` to a finite number.\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @since 4.12.0\r\n\t * @category Lang\r\n\t * @param {*} value The value to convert.\r\n\t * @returns {number} Returns the converted number.\r\n\t * @example\r\n\t *\r\n\t * _.toFinite(3.2);\r\n\t * // => 3.2\r\n\t *\r\n\t * _.toFinite(Number.MIN_VALUE);\r\n\t * // => 5e-324\r\n\t *\r\n\t * _.toFinite(Infinity);\r\n\t * // => 1.7976931348623157e+308\r\n\t *\r\n\t * _.toFinite('3.2');\r\n\t * // => 3.2\r\n\t */\r\n\tfunction toFinite(value) {\r\n\t  if (!value) {\r\n\t    return value === 0 ? value : 0;\r\n\t  }\r\n\t  value = toNumber(value);\r\n\t  if (value === INFINITY || value === -INFINITY) {\r\n\t    var sign = (value < 0 ? -1 : 1);\r\n\t    return sign * MAX_INTEGER;\r\n\t  }\r\n\t  return value === value ? value : 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts `value` to an integer.\r\n\t *\r\n\t * **Note:** This method is loosely based on\r\n\t * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @param {*} value The value to convert.\r\n\t * @returns {number} Returns the converted integer.\r\n\t * @example\r\n\t *\r\n\t * _.toInteger(3.2);\r\n\t * // => 3\r\n\t *\r\n\t * _.toInteger(Number.MIN_VALUE);\r\n\t * // => 0\r\n\t *\r\n\t * _.toInteger(Infinity);\r\n\t * // => 1.7976931348623157e+308\r\n\t *\r\n\t * _.toInteger('3.2');\r\n\t * // => 3\r\n\t */\r\n\tfunction toInteger(value) {\r\n\t  var result = toFinite(value),\r\n\t      remainder = result % 1;\r\n\r\n\t  return result === result ? (remainder ? result - remainder : result) : 0;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Converts `value` to a number.\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @since 4.0.0\r\n\t * @category Lang\r\n\t * @param {*} value The value to process.\r\n\t * @returns {number} Returns the number.\r\n\t * @example\r\n\t *\r\n\t * _.toNumber(3.2);\r\n\t * // => 3.2\r\n\t *\r\n\t * _.toNumber(Number.MIN_VALUE);\r\n\t * // => 5e-324\r\n\t *\r\n\t * _.toNumber(Infinity);\r\n\t * // => Infinity\r\n\t *\r\n\t * _.toNumber('3.2');\r\n\t * // => 3.2\r\n\t */\r\n\tfunction toNumber(value) {\r\n\t  if (typeof value == 'number') {\r\n\t    return value;\r\n\t  }\r\n\t  if (isSymbol(value)) {\r\n\t    return NAN;\r\n\t  }\r\n\t  if (isObject(value)) {\r\n\t    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\r\n\t    value = isObject(other) ? (other + '') : other;\r\n\t  }\r\n\t  if (typeof value != 'string') {\r\n\t    return value === 0 ? value : +value;\r\n\t  }\r\n\t  value = value.replace(reTrim, '');\r\n\t  var isBinary = reIsBinary.test(value);\r\n\t  return (isBinary || reIsOctal.test(value))\r\n\t    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\r\n\t    : (reIsBadHex.test(value) ? NAN : +value);\r\n\t}\r\n\r\n\treturn  skylark.attach(\"langx.numbers\",{\r\n\t\ttoFinite : toFinite,\r\n\t\ttoNumber : toNumber,\r\n\t\ttoInteger : toInteger\r\n\t});\r\n});\ndefine('skylark-langx-numbers/main',[\r\n\t\"./numbers\"\r\n],function(numbers){\r\n\treturn numbers;\r\n});\ndefine('skylark-langx-numbers', ['skylark-langx-numbers/main'], function (main) { return main; });\n\ndefine('skylark-langx-objects/objects',[\r\n    \"skylark-langx-ns/ns\",\r\n    \"skylark-langx-ns/_attach\",\r\n\t\"skylark-langx-types\",\r\n    \"skylark-langx-numbers\"\r\n],function(skylark,_attach,types,numbers){\r\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty,\r\n        slice = Array.prototype.slice,\r\n        isBoolean = types.isBoolean,\r\n        isFunction = types.isFunction,\r\n\t\tisObject = types.isObject,\r\n\t\tisPlainObject = types.isPlainObject,\r\n\t\tisArray = types.isArray,\r\n        isArrayLike = types.isArrayLike,\r\n        isString = types.isString,\r\n        toInteger = numbers.toInteger;\r\n\r\n     // An internal function for creating assigner functions.\r\n    function createAssigner(keysFunc, defaults) {\r\n        return function(obj) {\r\n          var length = arguments.length;\r\n          if (defaults) obj = Object(obj);  \r\n          if (length < 2 || obj == null) return obj;\r\n          for (var index = 1; index < length; index++) {\r\n            var source = arguments[index],\r\n                keys = keysFunc(source),\r\n                l = keys.length;\r\n            for (var i = 0; i < l; i++) {\r\n              var key = keys[i];\r\n              if (!defaults || obj[key] === void 0) obj[key] = source[key];\r\n            }\r\n          }\r\n          return obj;\r\n       };\r\n    }\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    var eq, deepEq;\r\n    var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\r\n\r\n    eq = function(a, b, aStack, bStack) {\r\n        // Identical objects are equal. `0 === -0`, but they aren't identical.\r\n        // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n        if (a === b) return a !== 0 || 1 / a === 1 / b;\r\n        // `null` or `undefined` only equal to itself (strict comparison).\r\n        if (a == null || b == null) return false;\r\n        // `NaN`s are equivalent, but non-reflexive.\r\n        if (a !== a) return b !== b;\r\n        // Exhaust primitive checks\r\n        var type = typeof a;\r\n        if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\r\n        return deepEq(a, b, aStack, bStack);\r\n    };\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    deepEq = function(a, b, aStack, bStack) {\r\n        // Unwrap any wrapped objects.\r\n        //if (a instanceof _) a = a._wrapped;\r\n        //if (b instanceof _) b = b._wrapped;\r\n        // Compare `[[Class]]` names.\r\n        var className = toString.call(a);\r\n        if (className !== toString.call(b)) return false;\r\n        switch (className) {\r\n            // Strings, numbers, regular expressions, dates, and booleans are compared by value.\r\n            case '[object RegExp]':\r\n            // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\r\n            case '[object String]':\r\n                // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n                // equivalent to `new String(\"5\")`.\r\n                return '' + a === '' + b;\r\n            case '[object Number]':\r\n                // `NaN`s are equivalent, but non-reflexive.\r\n                // Object(NaN) is equivalent to NaN.\r\n                if (+a !== +a) return +b !== +b;\r\n                // An `egal` comparison is performed for other numeric values.\r\n                return +a === 0 ? 1 / +a === 1 / b : +a === +b;\r\n            case '[object Date]':\r\n            case '[object Boolean]':\r\n                // Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n                // millisecond representations. Note that invalid dates with millisecond representations\r\n                // of `NaN` are not equivalent.\r\n                return +a === +b;\r\n            case '[object Symbol]':\r\n                return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\r\n        }\r\n\r\n        var areArrays = className === '[object Array]';\r\n        if (!areArrays) {\r\n            if (typeof a != 'object' || typeof b != 'object') return false;\r\n            // Objects with different constructors are not equivalent, but `Object`s or `Array`s\r\n            // from different frames are.\r\n            var aCtor = a.constructor, bCtor = b.constructor;\r\n            if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\r\n                               isFunction(bCtor) && bCtor instanceof bCtor)\r\n                          && ('constructor' in a && 'constructor' in b)) {\r\n                return false;\r\n            }\r\n        }\r\n        // Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n\r\n        // Initializing stack of traversed objects.\r\n        // It's done here since we only need them for objects and arrays comparison.\r\n        aStack = aStack || [];\r\n        bStack = bStack || [];\r\n        var length = aStack.length;\r\n        while (length--) {\r\n            // Linear search. Performance is inversely proportional to the number of\r\n            // unique nested structures.\r\n            if (aStack[length] === a) return bStack[length] === b;\r\n        }\r\n\r\n        // Add the first object to the stack of traversed objects.\r\n        aStack.push(a);\r\n        bStack.push(b);\r\n\r\n        // Recursively compare objects and arrays.\r\n        if (areArrays) {\r\n            // Compare array lengths to determine if a deep comparison is necessary.\r\n            length = a.length;\r\n            if (length !== b.length) return false;\r\n            // Deep compare the contents, ignoring non-numeric properties.\r\n            while (length--) {\r\n                if (!eq(a[length], b[length], aStack, bStack)) return false;\r\n            }\r\n        } else {\r\n            // Deep compare objects.\r\n            var keys = Object.keys(a), key;\r\n            length = keys.length;\r\n            // Ensure that both objects contain the same number of properties before comparing deep equality.\r\n            if (Object.keys(b).length !== length) return false;\r\n            while (length--) {\r\n                // Deep compare each member\r\n                key = keys[length];\r\n                if (!(b[key]!==undefined && eq(a[key], b[key], aStack, bStack))) return false;\r\n            }\r\n        }\r\n        // Remove the first object from the stack of traversed objects.\r\n        aStack.pop();\r\n        bStack.pop();\r\n        return true;\r\n    };\r\n\r\n    // Retrieve all the property names of an object.\r\n    function allKeys(obj) {\r\n        if (!isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function each(obj, callback) {\r\n        var length, key, i, undef, value;\r\n\r\n        if (obj) {\r\n            length = obj.length;\r\n\r\n            if (length === undef) {\r\n                // Loop object items\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        value = obj[key];\r\n                        if (callback.call(value, key, value) === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Loop array items\r\n                for (i = 0; i < length; i++) {\r\n                    value = obj[i];\r\n                    if (callback.call(value, i, value) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function extend(target) {\r\n        var deep, args = slice.call(arguments, 1);\r\n        if (typeof target == 'boolean') {\r\n            deep = target\r\n            target = args.shift()\r\n        }\r\n        if (args.length == 0) {\r\n            args = [target];\r\n            target = this;\r\n        }\r\n        args.forEach(function(arg) {\r\n            mixin(target, arg, deep);\r\n        });\r\n        return target;\r\n    }\r\n\r\n    // Retrieve the names of an object's own properties.\r\n    // Delegates to **ECMAScript 5**'s native `Object.keys`.\r\n    function keys(obj) {\r\n        if (isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) if (has(obj, key)) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function has(obj, path) {\r\n        if (!isArray(path)) {\r\n            return obj != null && hasOwnProperty.call(obj, path);\r\n        }\r\n        var length = path.length;\r\n        for (var i = 0; i < length; i++) {\r\n            var key = path[i];\r\n            if (obj == null || !hasOwnProperty.call(obj, key)) {\r\n                return false;\r\n            }\r\n            obj = obj[key];\r\n        }\r\n        return !!length;\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\r\n     * checked for a substring of `value`, otherwise\r\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\r\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\r\n     * the offset from the end of `collection`.\r\n     *\r\n     * @static\r\n     * @memberOf _\r\n     * @since 0.1.0\r\n     * @category Collection\r\n     * @param {Array|Object|string} collection The collection to inspect.\r\n     * @param {*} value The value to search for.\r\n     * @param {number} [fromIndex=0] The index to search from.\r\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\r\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\r\n     * @example\r\n     *\r\n     * _.includes([1, 2, 3], 1);\r\n     * // => true\r\n     *\r\n     * _.includes([1, 2, 3], 1, 2);\r\n     * // => false\r\n     *\r\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\r\n     * // => true\r\n     *\r\n     * _.includes('abcd', 'bc');\r\n     * // => true\r\n     */\r\n    function includes(collection, value, fromIndex, guard) {\r\n      collection = isArrayLike(collection) ? collection : values(collection);\r\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\r\n\r\n      var length = collection.length;\r\n      if (fromIndex < 0) {\r\n        fromIndex = nativeMax(length + fromIndex, 0);\r\n      }\r\n      return isString(collection)\r\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\r\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\r\n    }\r\n\r\n\r\n   // Perform a deep comparison to check if two objects are equal.\r\n    function isEqual(a, b) {\r\n        return eq(a, b);\r\n    }\r\n\r\n    // Returns whether an object has a given set of `key:value` pairs.\r\n    function isMatch(object, attrs) {\r\n        var keys = keys(attrs), length = keys.length;\r\n        if (object == null) return !length;\r\n        var obj = Object(object);\r\n        for (var i = 0; i < length; i++) {\r\n          var key = keys[i];\r\n          if (attrs[key] !== obj[key] || !(key in obj)) return false;\r\n        }\r\n        return true;\r\n    }    \r\n\r\n    function _mixin(target, source, deep, safe) {\r\n        for (var key in source) {\r\n            //if (!source.hasOwnProperty(key)) {\r\n            //    continue;\r\n            //}\r\n            if (safe && target[key] !== undefined) {\r\n                continue;\r\n            }\r\n            if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n                if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\r\n                    target[key] = {};\r\n                }\r\n                if (isArray(source[key]) && !isArray(target[key])) {\r\n                    target[key] = [];\r\n                }\r\n                _mixin(target[key], source[key], deep, safe);\r\n            } else if (source[key] !== undefined) {\r\n                target[key] = source[key]\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function _parseMixinArgs(args) {\r\n        var params = slice.call(arguments, 0),\r\n            target = params.shift(),\r\n            deep = false;\r\n        if (isBoolean(params[params.length - 1])) {\r\n            deep = params.pop();\r\n        }\r\n\r\n        return {\r\n            target: target,\r\n            sources: params,\r\n            deep: deep\r\n        };\r\n    }\r\n\r\n    function mixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, false);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n   // Return a copy of the object without the blacklisted properties.\r\n    function omit(obj, prop1,prop2) {\r\n        if (!obj) {\r\n            return null;\r\n        }\r\n        var result = mixin({},obj);\r\n        for(var i=1;i<arguments.length;i++) {\r\n            var pn = arguments[i];\r\n            if (pn in obj) {\r\n                delete result[pn];\r\n            }\r\n        }\r\n        return result;\r\n\r\n    }\r\n\r\n   // Return a copy of the object only containing the whitelisted properties.\r\n    function pick(obj,prop1,prop2) {\r\n        if (!obj) {\r\n            return null;\r\n        }\r\n        var result = {};\r\n        for(var i=1;i<arguments.length;i++) {\r\n            var pn = arguments[i];\r\n            if (pn in obj) {\r\n                result[pn] = obj[pn];\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function removeItem(items, item) {\r\n        if (isArray(items)) {\r\n            var idx = items.indexOf(item);\r\n            if (idx != -1) {\r\n                items.splice(idx, 1);\r\n            }\r\n        } else if (isPlainObject(items)) {\r\n            for (var key in items) {\r\n                if (items[key] == item) {\r\n                    delete items[key];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function result(obj, path, fallback) {\r\n        if (!isArray(path)) {\r\n            path = path.split(\".\");//[path]\r\n        };\r\n        var length = path.length;\r\n        if (!length) {\r\n          return isFunction(fallback) ? fallback.call(obj) : fallback;\r\n        }\r\n        for (var i = 0; i < length; i++) {\r\n          var prop = obj == null ? void 0 : obj[path[i]];\r\n          if (prop === void 0) {\r\n            prop = fallback;\r\n            i = length; // Ensure we don't continue iterating.\r\n          }\r\n          obj = isFunction(prop) ? prop.call(obj) : prop;\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    function safeMixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, true);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    // Retrieve the values of an object's properties.\r\n    function values(obj) {\r\n        var keys = allKeys(obj);\r\n        var length = keys.length;\r\n        var values = Array(length);\r\n        for (var i = 0; i < length; i++) {\r\n            values[i] = obj[keys[i]];\r\n        }\r\n        return values;\r\n    }\r\n\r\n    function clone( /*anything*/ src,checkCloneMethod) {\r\n        var copy;\r\n        if (src === undefined || src === null) {\r\n            copy = src;\r\n        } else if (checkCloneMethod && src.clone) {\r\n            copy = src.clone();\r\n        } else if (isArray(src)) {\r\n            copy = [];\r\n            for (var i = 0; i < src.length; i++) {\r\n                copy.push(clone(src[i]));\r\n            }\r\n        } else if (isPlainObject(src)) {\r\n            copy = {};\r\n            for (var key in src) {\r\n                copy[key] = clone(src[key]);\r\n            }\r\n        } else {\r\n            copy = src;\r\n        }\r\n\r\n        return copy;\r\n\r\n    }\r\n\r\n    return skylark.attach(\"langx.objects\",{\r\n        allKeys: allKeys,\r\n\r\n        attach : _attach,\r\n\r\n        clone: clone,\r\n\r\n        defaults : createAssigner(allKeys, true),\r\n\r\n        each : each,\r\n\r\n        extend : extend,\r\n\r\n        has: has,\r\n\r\n        isEqual: isEqual,   \r\n\r\n        includes: includes,\r\n\r\n        isMatch: isMatch,\r\n\r\n        keys: keys,\r\n\r\n        mixin: mixin,\r\n\r\n        omit: omit,\r\n\r\n        pick: pick,\r\n\r\n        removeItem: removeItem,\r\n\r\n        result : result,\r\n        \r\n        safeMixin: safeMixin,\r\n\r\n        values: values\r\n    });\r\n\r\n\r\n});\ndefine('skylark-langx-objects/main',[\r\n\t\"./objects\"\r\n],function(objects){\r\n\treturn objects;\r\n});\ndefine('skylark-langx-objects', ['skylark-langx-objects/main'], function (main) { return main; });\n\ndefine('skylark-langx-arrays/arrays',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\"\r\n],function(skylark,types,objects){\r\n  var filter = Array.prototype.filter,\r\n      find = Array.prototype.find,\r\n    isArrayLike = types.isArrayLike;\r\n\r\n    /**\r\n     * The base implementation of `_.findIndex` and `_.findLastIndex` without\r\n     * support for iteratee shorthands.\r\n     *\r\n     * @param {Array} array The array to inspect.\r\n     * @param {Function} predicate The function invoked per iteration.\r\n     * @param {number} fromIndex The index to search from.\r\n     * @param {boolean} [fromRight] Specify iterating from right to left.\r\n     * @returns {number} Returns the index of the matched value, else `-1`.\r\n     */\r\n    function baseFindIndex(array, predicate, fromIndex, fromRight) {\r\n      var length = array.length,\r\n          index = fromIndex + (fromRight ? 1 : -1);\r\n\r\n      while ((fromRight ? index-- : ++index < length)) {\r\n        if (predicate(array[index], index, array)) {\r\n          return index;\r\n        }\r\n      }\r\n      return -1;\r\n    }\r\n\r\n    /**\r\n     * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\r\n     *\r\n     * @param {Array} array The array to inspect.\r\n     * @param {*} value The value to search for.\r\n     * @param {number} fromIndex The index to search from.\r\n     * @returns {number} Returns the index of the matched value, else `-1`.\r\n     */\r\n    function baseIndexOf(array, value, fromIndex) {\r\n      if (value !== value) {\r\n        return baseFindIndex(array, baseIsNaN, fromIndex);\r\n      }\r\n      var index = fromIndex - 1,\r\n          length = array.length;\r\n\r\n      while (++index < length) {\r\n        if (array[index] === value) {\r\n          return index;\r\n        }\r\n      }\r\n      return -1;\r\n    }\r\n\r\n    /**\r\n     * The base implementation of `isNaN` without support for number objects.\r\n     *\r\n     * @private\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\r\n     */\r\n    function baseIsNaN(value) {\r\n      return value !== value;\r\n    }\r\n\r\n\r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n\r\n    function filter2(array,func) {\r\n      return filter.call(array,func);\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0; i < array.length; i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j < item.length; j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        objects.each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item);\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n       if (isArrayLike(obj) ) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n      }\r\n\r\n      // array of single index\r\n      return [ obj ];             \r\n    }\r\n\r\n\r\n    function forEach (arr, fn) {\r\n      if (arr.forEach) return arr.forEach(fn)\r\n      for (var i = 0; i < arr.length; i++) fn(arr[i], i);\r\n    }\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n\r\n    function merge( first, second ) {\r\n      var l = second.length,\r\n          i = first.length,\r\n          j = 0;\r\n\r\n      if ( typeof l === \"number\" ) {\r\n        for ( ; j < l; j++ ) {\r\n          first[ i++ ] = second[ j ];\r\n        }\r\n      } else {\r\n        while ( second[j] !== undefined ) {\r\n          first[ i++ ] = second[ j++ ];\r\n        }\r\n      }\r\n\r\n      first.length = i;\r\n\r\n      return first;\r\n    }\r\n\r\n    function reduce(array,callback,initialValue) {\r\n        return Array.prototype.reduce.call(array,callback,initialValue);\r\n    }\r\n\r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    function find2(array,func) {\r\n      return find.call(array,func);\r\n    }\r\n\r\n    return skylark.attach(\"langx.arrays\",{\r\n        baseFindIndex: baseFindIndex,\r\n\r\n        baseIndexOf : baseIndexOf,\r\n        \r\n        compact: compact,\r\n\r\n        first : function(items,n) {\r\n            if (n) {\r\n                return items.slice(0,n);\r\n            } else {\r\n                return items[0];\r\n            }\r\n        },\r\n\r\n        filter : filter2,\r\n\r\n        find : find2,\r\n        \r\n        flatten: flatten,\r\n\r\n        grep: grep,\r\n\r\n        inArray: inArray,\r\n\r\n        makeArray: makeArray,\r\n\r\n        merge : merge,\r\n\r\n        forEach : forEach,\r\n\r\n        map : map,\r\n        \r\n        reduce : reduce,\r\n\r\n        uniq : uniq\r\n\r\n    });\r\n});\ndefine('skylark-langx-arrays/main',[\r\n\t\"./arrays\"\r\n],function(arrays){\r\n\treturn arrays;\r\n});\ndefine('skylark-langx-arrays', ['skylark-langx-arrays/main'], function (main) { return main; });\n\ndefine('skylark-langx/arrays',[\r\n\t\"skylark-langx-arrays\"\r\n],function(arrays){\r\n  return arrays;\r\n});\ndefine('skylark-langx-klass/klass',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-arrays\",\r\n],function(skylark,types,objects,arrays){\r\n    var uniq = arrays.uniq,\r\n        has = objects.has,\r\n        mixin = objects.mixin,\r\n        isArray = types.isArray,\r\n        isDefined = types.isDefined;\r\n\r\n/* for reference \r\n function klass(props,parent) {\r\n    var ctor = function(){\r\n        this._construct();\r\n    };\r\n    ctor.prototype = props;\r\n    if (parent) {\r\n        ctor._proto_ = parent;\r\n        props.__proto__ = parent.prototype;\r\n    }\r\n    return ctor;\r\n}\r\n\r\n// Type some JavaScript code here.\r\nlet animal = klass({\r\n  _construct(){\r\n      this.name = this.name + \",hi\";\r\n  },\r\n    \r\n  name: \"Animal\",\r\n  eat() {         // [[HomeObject]] == animal\r\n    alert(`${this.name} eats.`);\r\n  }\r\n    \r\n    \r\n});\r\n\r\n\r\nlet rabbit = klass({\r\n  name: \"Rabbit\",\r\n  _construct(){\r\n      super._construct();\r\n  },\r\n  eat() {         // [[HomeObject]] == rabbit\r\n    super.eat();\r\n  }\r\n},animal);\r\n\r\nlet longEar = klass({\r\n  name: \"Long Ear\",\r\n  eat() {         // [[HomeObject]] == longEar\r\n    super.eat();\r\n  }\r\n},rabbit);\r\n*/\r\n    \r\n    function inherit(ctor, base) {\r\n        var f = function() {};\r\n        f.prototype = base.prototype;\r\n\r\n        ctor.prototype = new f();\r\n    }\r\n\r\n    var f1 = function() {\r\n        function extendClass(ctor, props, options) {\r\n            // Copy the properties to the prototype of the class.\r\n            var proto = ctor.prototype,\r\n                _super = ctor.superclass.prototype,\r\n                noOverrided = options && options.noOverrided,\r\n                overrides = options && options.overrides || {};\r\n\r\n            for (var name in props) {\r\n                if (name === \"constructor\") {\r\n                    continue;\r\n                }\r\n\r\n                // Check if we're overwriting an existing function\r\n                var prop = props[name];\r\n                if (typeof props[name] == \"function\") {\r\n                    proto[name] =  !prop._constructor && !noOverrided && typeof _super[name] == \"function\" ?\r\n                          (function(name, fn, superFn) {\r\n                            return function() {\r\n                                var tmp = this.overrided;\r\n\r\n                                // Add a new ._super() method that is the same method\r\n                                // but on the super-class\r\n                                this.overrided = superFn;\r\n\r\n                                // The method only need to be bound temporarily, so we\r\n                                // remove it when we're done executing\r\n                                var ret = fn.apply(this, arguments);\r\n\r\n                                this.overrided = tmp;\r\n\r\n                                return ret;\r\n                            };\r\n                        })(name, prop, _super[name]) :\r\n                        prop;\r\n                } else if (types.isPlainObject(prop) && prop!==null && (prop.get)) {\r\n                    Object.defineProperty(proto,name,prop);\r\n                } else {\r\n                    proto[name] = prop;\r\n                }\r\n            }\r\n            return ctor;\r\n        }\r\n\r\n        function serialMixins(ctor,mixins) {\r\n            var result = [];\r\n\r\n            mixins.forEach(function(mixin){\r\n                if (has(mixin,\"__mixins__\")) {\r\n                     throw new Error(\"nested mixins\");\r\n                }\r\n                var clss = [];\r\n                while (mixin) {\r\n                    clss.unshift(mixin);\r\n                    mixin = mixin.superclass;\r\n                }\r\n                result = result.concat(clss);\r\n            });\r\n\r\n            result = uniq(result);\r\n\r\n            result = result.filter(function(mixin){\r\n                var cls = ctor;\r\n                while (cls) {\r\n                    if (mixin === cls) {\r\n                        return false;\r\n                    }\r\n                    if (has(cls,\"__mixins__\")) {\r\n                        var clsMixines = cls[\"__mixins__\"];\r\n                        for (var i=0; i<clsMixines.length;i++) {\r\n                            if (clsMixines[i]===mixin) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                    cls = cls.superclass;\r\n                }\r\n                return true;\r\n            });\r\n\r\n            if (result.length>0) {\r\n                return result;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        function mergeMixins(ctor,mixins) {\r\n            var newCtor =ctor;\r\n            for (var i=0;i<mixins.length;i++) {\r\n                var xtor = new Function();\r\n                xtor.prototype = Object.create(newCtor.prototype);\r\n                xtor.__proto__ = newCtor;\r\n                xtor.superclass = null;\r\n                mixin(xtor.prototype,mixins[i].prototype);\r\n                xtor.prototype.__mixin__ = mixins[i];\r\n                newCtor = xtor;\r\n            }\r\n\r\n            return newCtor;\r\n        }\r\n\r\n        function _constructor ()  {\r\n            if (this._construct) {\r\n                return this._construct.apply(this, arguments);\r\n            } else  if (this.init) {\r\n                return this.init.apply(this, arguments);\r\n            }\r\n        }\r\n\r\n        return function createClass(props, parent, mixins,options) {\r\n            if (isArray(parent)) {\r\n                options = mixins;\r\n                mixins = parent;\r\n                parent = null;\r\n            }\r\n            parent = parent || Object;\r\n\r\n            if (isDefined(mixins) && !isArray(mixins)) {\r\n                options = mixins;\r\n                mixins = false;\r\n            }\r\n\r\n            var innerParent = parent;\r\n\r\n            if (mixins) {\r\n                mixins = serialMixins(innerParent,mixins);\r\n            }\r\n\r\n            if (mixins) {\r\n                innerParent = mergeMixins(innerParent,mixins);\r\n            }\r\n\r\n            var klassName = props.klassName || \"\",\r\n                ctor = new Function(\r\n                    \"return function \" + klassName + \"() {\" +\r\n                    \"var inst = this,\" +\r\n                    \" ctor = arguments.callee;\" +\r\n                    \"if (!(inst instanceof ctor)) {\" +\r\n                    \"inst = Object.create(ctor.prototype);\" +\r\n                    \"}\" +\r\n                    \"return ctor._constructor.apply(inst, arguments) || inst;\" + \r\n                    \"}\"\r\n                )();\r\n\r\n\r\n            // Populate our constructed prototype object\r\n            ctor.prototype = Object.create(innerParent.prototype);\r\n\r\n            // Enforce the constructor to be what we expect\r\n            ctor.prototype.constructor = ctor;\r\n            ctor.superclass = parent;\r\n\r\n            // And make this class extendable\r\n            ctor.__proto__ = innerParent;\r\n\r\n\r\n            if (!ctor._constructor) {\r\n                ctor._constructor = _constructor;\r\n            } \r\n\r\n            if (mixins) {\r\n                ctor.__mixins__ = mixins;\r\n            }\r\n\r\n            if (!ctor.partial) {\r\n                ctor.partial = function(props, options) {\r\n                    return extendClass(this, props, options);\r\n                };\r\n            }\r\n            if (!ctor.inherit) {\r\n                ctor.inherit = function(props, mixins,options) {\r\n                    return createClass(props, this, mixins,options);\r\n                };\r\n            }\r\n\r\n            ctor.partial(props, options);\r\n\r\n            return ctor;\r\n        };\r\n    }\r\n\r\n    var createClass = f1();\r\n\r\n    return skylark.attach(\"langx.klass\",createClass);\r\n});\ndefine('skylark-langx-klass/main',[\r\n\t\"./klass\"\r\n],function(klass){\r\n\treturn klass;\r\n});\ndefine('skylark-langx-klass', ['skylark-langx-klass/main'], function (main) { return main; });\n\ndefine('skylark-langx/klass',[\r\n    \"skylark-langx-klass\"\r\n],function(klass){\r\n    return klass;\r\n});\ndefine('skylark-langx/ArrayStore',[\r\n    \"./klass\"\r\n],function(klass){\r\n    var SimpleQueryEngine = function(query, options){\r\n        // summary:\r\n        //      Simple query engine that matches using filter functions, named filter\r\n        //      functions or objects by name-value on a query object hash\r\n        //\r\n        // description:\r\n        //      The SimpleQueryEngine provides a way of getting a QueryResults through\r\n        //      the use of a simple object hash as a filter.  The hash will be used to\r\n        //      match properties on data objects with the corresponding value given. In\r\n        //      other words, only exact matches will be returned.\r\n        //\r\n        //      This function can be used as a template for more complex query engines;\r\n        //      for example, an engine can be created that accepts an object hash that\r\n        //      contains filtering functions, or a string that gets evaluated, etc.\r\n        //\r\n        //      When creating a new dojo.store, simply set the store's queryEngine\r\n        //      field as a reference to this function.\r\n        //\r\n        // query: Object\r\n        //      An object hash with fields that may match fields of items in the store.\r\n        //      Values in the hash will be compared by normal == operator, but regular expressions\r\n        //      or any object that provides a test() method are also supported and can be\r\n        //      used to match strings by more complex expressions\r\n        //      (and then the regex's or object's test() method will be used to match values).\r\n        //\r\n        // options: dojo/store/api/Store.QueryOptions?\r\n        //      An object that contains optional information such as sort, start, and count.\r\n        //\r\n        // returns: Function\r\n        //      A function that caches the passed query under the field \"matches\".  See any\r\n        //      of the \"query\" methods on dojo.stores.\r\n        //\r\n        // example:\r\n        //      Define a store with a reference to this engine, and set up a query method.\r\n        //\r\n        //  |   var myStore = function(options){\r\n        //  |       //  ...more properties here\r\n        //  |       this.queryEngine = SimpleQueryEngine;\r\n        //  |       //  define our query method\r\n        //  |       this.query = function(query, options){\r\n        //  |           return QueryResults(this.queryEngine(query, options)(this.data));\r\n        //  |       };\r\n        //  |   };\r\n\r\n        // create our matching query function\r\n        switch(typeof query){\r\n            default:\r\n                throw new Error(\"Can not query with a \" + typeof query);\r\n            case \"object\": case \"undefined\":\r\n                var queryObject = query;\r\n                query = function(object){\r\n                    for(var key in queryObject){\r\n                        var required = queryObject[key];\r\n                        if(required && required.test){\r\n                            // an object can provide a test method, which makes it work with regex\r\n                            if(!required.test(object[key], object)){\r\n                                return false;\r\n                            }\r\n                        }else if(required != object[key]){\r\n                            return false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                };\r\n                break;\r\n            case \"string\":\r\n                // named query\r\n                if(!this[query]){\r\n                    throw new Error(\"No filter function \" + query + \" was found in store\");\r\n                }\r\n                query = this[query];\r\n                // fall through\r\n            case \"function\":\r\n                // fall through\r\n        }\r\n        \r\n        function filter(arr, callback, thisObject){\r\n            // summary:\r\n            //      Returns a new Array with those items from arr that match the\r\n            //      condition implemented by callback.\r\n            // arr: Array\r\n            //      the array to iterate over.\r\n            // callback: Function|String\r\n            //      a function that is invoked with three arguments (item,\r\n            //      index, array). The return of this function is expected to\r\n            //      be a boolean which determines whether the passed-in item\r\n            //      will be included in the returned array.\r\n            // thisObject: Object?\r\n            //      may be used to scope the call to callback\r\n            // returns: Array\r\n            // description:\r\n            //      This function corresponds to the JavaScript 1.6 Array.filter() method, with one difference: when\r\n            //      run over sparse arrays, this implementation passes the \"holes\" in the sparse array to\r\n            //      the callback function with a value of undefined. JavaScript 1.6's filter skips the holes in the sparse array.\r\n            //      For more details, see:\r\n            //      https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter\r\n            // example:\r\n            //  | // returns [2, 3, 4]\r\n            //  | array.filter([1, 2, 3, 4], function(item){ return item>1; });\r\n\r\n            // TODO: do we need \"Ctr\" here like in map()?\r\n            var i = 0, l = arr && arr.length || 0, out = [], value;\r\n            if(l && typeof arr == \"string\") arr = arr.split(\"\");\r\n            if(typeof callback == \"string\") callback = cache[callback] || buildFn(callback);\r\n            if(thisObject){\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback.call(thisObject, value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }else{\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback(value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }\r\n            return out; // Array\r\n        }\r\n\r\n        function execute(array){\r\n            // execute the whole query, first we filter\r\n            var results = filter(array, query);\r\n            // next we sort\r\n            var sortSet = options && options.sort;\r\n            if(sortSet){\r\n                results.sort(typeof sortSet == \"function\" ? sortSet : function(a, b){\r\n                    for(var sort, i=0; sort = sortSet[i]; i++){\r\n                        var aValue = a[sort.attribute];\r\n                        var bValue = b[sort.attribute];\r\n                        // valueOf enables proper comparison of dates\r\n                        aValue = aValue != null ? aValue.valueOf() : aValue;\r\n                        bValue = bValue != null ? bValue.valueOf() : bValue;\r\n                        if (aValue != bValue){\r\n                            // modified by lwf 2016/07/09\r\n                            //return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                            return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                        }\r\n                    }\r\n                    return 0;\r\n                });\r\n            }\r\n            // now we paginate\r\n            if(options && (options.start || options.count)){\r\n                var total = results.length;\r\n                results = results.slice(options.start || 0, (options.start || 0) + (options.count || Infinity));\r\n                results.total = total;\r\n            }\r\n            return results;\r\n        }\r\n        execute.matches = query;\r\n        return execute;\r\n    };\r\n\r\n    var QueryResults = function(results){\r\n        // summary:\r\n        //      A function that wraps the results of a store query with additional\r\n        //      methods.\r\n        // description:\r\n        //      QueryResults is a basic wrapper that allows for array-like iteration\r\n        //      over any kind of returned data from a query.  While the simplest store\r\n        //      will return a plain array of data, other stores may return deferreds or\r\n        //      promises; this wrapper makes sure that *all* results can be treated\r\n        //      the same.\r\n        //\r\n        //      Additional methods include `forEach`, `filter` and `map`.\r\n        // results: Array|dojo/promise/Promise\r\n        //      The result set as an array, or a promise for an array.\r\n        // returns:\r\n        //      An array-like object that can be used for iterating over.\r\n        // example:\r\n        //      Query a store and iterate over the results.\r\n        //\r\n        //  |   store.query({ prime: true }).forEach(function(item){\r\n        //  |       //  do something\r\n        //  |   });\r\n\r\n        if(!results){\r\n            return results;\r\n        }\r\n\r\n        var isPromise = !!results.then;\r\n        // if it is a promise it may be frozen\r\n        if(isPromise){\r\n            results = Object.delegate(results);\r\n        }\r\n        function addIterativeMethod(method){\r\n            // Always add the iterative methods so a QueryResults is\r\n            // returned whether the environment is ES3 or ES5\r\n            results[method] = function(){\r\n                var args = arguments;\r\n                var result = Deferred.when(results, function(results){\r\n                    //Array.prototype.unshift.call(args, results);\r\n                    return QueryResults(Array.prototype[method].apply(results, args));\r\n                });\r\n                // forEach should only return the result of when()\r\n                // when we're wrapping a promise\r\n                if(method !== \"forEach\" || isPromise){\r\n                    return result;\r\n                }\r\n            };\r\n        }\r\n\r\n        addIterativeMethod(\"forEach\");\r\n        addIterativeMethod(\"filter\");\r\n        addIterativeMethod(\"map\");\r\n        if(results.total == null){\r\n            results.total = Deferred.when(results, function(results){\r\n                return results.length;\r\n            });\r\n        }\r\n        return results; // Object\r\n    };\r\n\r\n    var ArrayStore = klass({\r\n        \"klassName\": \"ArrayStore\",\r\n\r\n        \"queryEngine\": SimpleQueryEngine,\r\n        \r\n        \"idProperty\": \"id\",\r\n\r\n\r\n        get: function(id){\r\n            // summary:\r\n            //      Retrieves an object by its identity\r\n            // id: Number\r\n            //      The identity to use to lookup the object\r\n            // returns: Object\r\n            //      The object in the store that matches the given id.\r\n            return this.data[this.index[id]];\r\n        },\r\n\r\n        getIdentity: function(object){\r\n            return object[this.idProperty];\r\n        },\r\n\r\n        put: function(object, options){\r\n            var data = this.data,\r\n                index = this.index,\r\n                idProperty = this.idProperty;\r\n            var id = object[idProperty] = (options && \"id\" in options) ? options.id : idProperty in object ? object[idProperty] : Math.random();\r\n            if(id in index){\r\n                // object exists\r\n                if(options && options.overwrite === false){\r\n                    throw new Error(\"Object already exists\");\r\n                }\r\n                // replace the entry in data\r\n                data[index[id]] = object;\r\n            }else{\r\n                // add the new object\r\n                index[id] = data.push(object) - 1;\r\n            }\r\n            return id;\r\n        },\r\n\r\n        add: function(object, options){\r\n            (options = options || {}).overwrite = false;\r\n            // call put with overwrite being false\r\n            return this.put(object, options);\r\n        },\r\n\r\n        remove: function(id){\r\n            // summary:\r\n            //      Deletes an object by its identity\r\n            // id: Number\r\n            //      The identity to use to delete the object\r\n            // returns: Boolean\r\n            //      Returns true if an object was removed, falsy (undefined) if no object matched the id\r\n            var index = this.index;\r\n            var data = this.data;\r\n            if(id in index){\r\n                data.splice(index[id], 1);\r\n                // now we have to reindex\r\n                this.setData(data);\r\n                return true;\r\n            }\r\n        },\r\n        query: function(query, options){\r\n            // summary:\r\n            //      Queries the store for objects.\r\n            // query: Object\r\n            //      The query to use for retrieving objects from the store.\r\n            // options: dojo/store/api/Store.QueryOptions?\r\n            //      The optional arguments to apply to the resultset.\r\n            // returns: dojo/store/api/Store.QueryResults\r\n            //      The results of the query, extended with iterative methods.\r\n            //\r\n            // example:\r\n            //      Given the following store:\r\n            //\r\n            //  |   var store = new Memory({\r\n            //  |       data: [\r\n            //  |           {id: 1, name: \"one\", prime: false },\r\n            //  |           {id: 2, name: \"two\", even: true, prime: true},\r\n            //  |           {id: 3, name: \"three\", prime: true},\r\n            //  |           {id: 4, name: \"four\", even: true, prime: false},\r\n            //  |           {id: 5, name: \"five\", prime: true}\r\n            //  |       ]\r\n            //  |   });\r\n            //\r\n            //  ...find all items where \"prime\" is true:\r\n            //\r\n            //  |   var results = store.query({ prime: true });\r\n            //\r\n            //  ...or find all items where \"even\" is true:\r\n            //\r\n            //  |   var results = store.query({ even: true });\r\n            return QueryResults(this.queryEngine(query, options)(this.data));\r\n        },\r\n\r\n        setData: function(data){\r\n            // summary:\r\n            //      Sets the given data as the source for this store, and indexes it\r\n            // data: Object[]\r\n            //      An array of objects to use as the source of data.\r\n            if(data.items){\r\n                // just for convenience with the data format IFRS expects\r\n                this.idProperty = data.identifier || this.idProperty;\r\n                data = this.data = data.items;\r\n            }else{\r\n                this.data = data;\r\n            }\r\n            this.index = {};\r\n            for(var i = 0, l = data.length; i < l; i++){\r\n                this.index[data[i][this.idProperty]] = i;\r\n            }\r\n        },\r\n\r\n        init: function(options) {\r\n            for(var i in options){\r\n                this[i] = options[i];\r\n            }\r\n            this.setData(this.data || []);\r\n        }\r\n\r\n    });\r\n\r\n\treturn ArrayStore;\r\n});\ndefine('skylark-langx-aspect/aspect',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n\r\n  var undefined, nextId = 0;\r\n    function advise(dispatcher, type, advice, receiveArguments){\r\n        var previous = dispatcher[type];\r\n        var around = type == \"around\";\r\n        var signal;\r\n        if(around){\r\n            var advised = advice(function(){\r\n                return previous.advice(this, arguments);\r\n            });\r\n            signal = {\r\n                remove: function(){\r\n                    if(advised){\r\n                        advised = dispatcher = advice = null;\r\n                    }\r\n                },\r\n                advice: function(target, args){\r\n                    return advised ?\r\n                        advised.apply(target, args) :  // called the advised function\r\n                        previous.advice(target, args); // cancelled, skip to next one\r\n                }\r\n            };\r\n        }else{\r\n            // create the remove handler\r\n            signal = {\r\n                remove: function(){\r\n                    if(signal.advice){\r\n                        var previous = signal.previous;\r\n                        var next = signal.next;\r\n                        if(!next && !previous){\r\n                            delete dispatcher[type];\r\n                        }else{\r\n                            if(previous){\r\n                                previous.next = next;\r\n                            }else{\r\n                                dispatcher[type] = next;\r\n                            }\r\n                            if(next){\r\n                                next.previous = previous;\r\n                            }\r\n                        }\r\n\r\n                        // remove the advice to signal that this signal has been removed\r\n                        dispatcher = advice = signal.advice = null;\r\n                    }\r\n                },\r\n                id: nextId++,\r\n                advice: advice,\r\n                receiveArguments: receiveArguments\r\n            };\r\n        }\r\n        if(previous && !around){\r\n            if(type == \"after\"){\r\n                // add the listener to the end of the list\r\n                // note that we had to change this loop a little bit to workaround a bizarre IE10 JIT bug\r\n                while(previous.next && (previous = previous.next)){}\r\n                previous.next = signal;\r\n                signal.previous = previous;\r\n            }else if(type == \"before\"){\r\n                // add to beginning\r\n                dispatcher[type] = signal;\r\n                signal.next = previous;\r\n                previous.previous = signal;\r\n            }\r\n        }else{\r\n            // around or first one just replaces\r\n            dispatcher[type] = signal;\r\n        }\r\n        return signal;\r\n    }\r\n    function aspect(type){\r\n        return function(target, methodName, advice, receiveArguments){\r\n            var existing = target[methodName], dispatcher;\r\n            if(!existing || existing.target != target){\r\n                // no dispatcher in place\r\n                target[methodName] = dispatcher = function(){\r\n                    var executionId = nextId;\r\n                    // before advice\r\n                    var args = arguments;\r\n                    var before = dispatcher.before;\r\n                    while(before){\r\n                        args = before.advice.apply(this, args) || args;\r\n                        before = before.next;\r\n                    }\r\n                    // around advice\r\n                    if(dispatcher.around){\r\n                        var results = dispatcher.around.advice(this, args);\r\n                    }\r\n                    // after advice\r\n                    var after = dispatcher.after;\r\n                    while(after && after.id < executionId){\r\n                        if(after.receiveArguments){\r\n                            var newResults = after.advice.apply(this, args);\r\n                            // change the return value only if a new value was returned\r\n                            results = newResults === undefined ? results : newResults;\r\n                        }else{\r\n                            results = after.advice.call(this, results, args);\r\n                        }\r\n                        after = after.next;\r\n                    }\r\n                    return results;\r\n                };\r\n                if(existing){\r\n                    dispatcher.around = {advice: function(target, args){\r\n                        return existing.apply(target, args);\r\n                    }};\r\n                }\r\n                dispatcher.target = target;\r\n            }\r\n            var results = advise((dispatcher || existing), type, advice, receiveArguments);\r\n            advice = null;\r\n            return results;\r\n        };\r\n    }\r\n\r\n    return skylark.attach(\"langx.aspect\",{\r\n        after: aspect(\"after\"),\r\n \r\n        around: aspect(\"around\"),\r\n        \r\n        before: aspect(\"before\")\r\n    });\r\n});\ndefine('skylark-langx-aspect/main',[\r\n\t\"./aspect\"\r\n],function(aspect){\r\n\treturn aspect;\r\n});\ndefine('skylark-langx-aspect', ['skylark-langx-aspect/main'], function (main) { return main; });\n\ndefine('skylark-langx/aspect',[\r\n    \"skylark-langx-aspect\"\r\n],function(aspect){\r\n  return aspect;\r\n});\ndefine('skylark-langx-funcs/funcs',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\"\r\n],function(skylark,types,objects){\r\n\tvar mixin = objects.mixin,\r\n        slice = Array.prototype.slice,\r\n        isFunction = types.isFunction,\r\n        isString = types.isString;\r\n\r\n    function defer(fn) {\r\n        if (requestAnimationFrame) {\r\n            requestAnimationFrame(fn);\r\n        } else {\r\n            setTimeoutout(fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function noop() {\r\n    }\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n    function debounce(fn, wait) {\r\n        var timeout;\r\n        return function () {\r\n            var context = this, args = arguments;\r\n            var later = function () {\r\n                timeout = null;\r\n                fn.apply(context, args);\r\n            };\r\n            if (timeout) clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n   \r\n    var delegate = (function() {\r\n        // boodman/crockford delegation w/ cornford optimization\r\n        function TMP() {}\r\n        return function(obj, props) {\r\n            TMP.prototype = obj;\r\n            var tmp = new TMP();\r\n            TMP.prototype = null;\r\n            if (props) {\r\n                mixin(tmp, props);\r\n            }\r\n            return tmp; // Object\r\n        };\r\n    })();\r\n\r\n\r\n    // By default, Underscore uses ERB-style template delimiters, change the\r\n    // following template settings to use alternative delimiters.\r\n    var templateSettings = {\r\n        evaluate: /<%([\\s\\S]+?)%>/g,\r\n        interpolate: /<%=([\\s\\S]+?)%>/g,\r\n        escape: /<%-([\\s\\S]+?)%>/g\r\n    };\r\n\r\n    // When customizing `templateSettings`, if you don't want to define an\r\n    // interpolation, evaluation or escaping regex, we need one that is\r\n    // guaranteed not to match.\r\n    var noMatch = /(.)^/;\r\n\r\n\r\n    // Certain characters need to be escaped so that they can be put into a\r\n    // string literal.\r\n    var escapes = {\r\n      \"'\":      \"'\",\r\n      '\\\\':     '\\\\',\r\n      '\\r':     'r',\r\n      '\\n':     'n',\r\n      '\\t':     't',\r\n      '\\u2028': 'u2028',\r\n      '\\u2029': 'u2029'\r\n    };\r\n\r\n    var escaper = /\\\\|'|\\r|\\n|\\t|\\u2028|\\u2029/g;\r\n\r\n\r\n    function template(text, data, settings) {\r\n        var render;\r\n        settings = objects.defaults({}, settings,templateSettings);\r\n\r\n        // Combine delimiters into one regular expression via alternation.\r\n        var matcher = RegExp([\r\n          (settings.escape || noMatch).source,\r\n          (settings.interpolate || noMatch).source,\r\n          (settings.evaluate || noMatch).source\r\n        ].join('|') + '|$', 'g');\r\n\r\n        // Compile the template source, escaping string literals appropriately.\r\n        var index = 0;\r\n        var source = \"__p+='\";\r\n        text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\r\n          source += text.slice(index, offset)\r\n              .replace(escaper, function(match) { return '\\\\' + escapes[match]; });\r\n\r\n          if (escape) {\r\n            source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\r\n          }\r\n          if (interpolate) {\r\n            source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\r\n          }\r\n          if (evaluate) {\r\n            source += \"';\\n\" + evaluate + \"\\n__p+='\";\r\n          }\r\n          index = offset + match.length;\r\n          return match;\r\n        });\r\n        source += \"';\\n\";\r\n\r\n        // If a variable is not specified, place data values in local scope.\r\n        if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\r\n\r\n        source = \"var __t,__p='',__j=Array.prototype.join,\" +\r\n          \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\r\n          source + 'return __p;\\n';\r\n\r\n        try {\r\n          render = new Function(settings.variable || 'obj', '_', source);\r\n        } catch (e) {\r\n          e.source = source;\r\n          throw e;\r\n        }\r\n\r\n        if (data) {\r\n          return render(data,this)\r\n        }\r\n        var template = proxy(function(data) {\r\n          return render.call(this, data,this);\r\n        },this);\r\n\r\n        // Provide the compiled source as a convenience for precompilation.\r\n        var argument = settings.variable || 'obj';\r\n        template.source = 'function(' + argument + '){\\n' + source + '}';\r\n\r\n        return template;\r\n    }\r\n\r\n\r\n    /**\r\n     * Creates a function that negates the result of the predicate `func`. The\r\n     * `func` predicate is invoked with the `this` binding and arguments of the\r\n     * created function.\r\n     * @category Function\r\n     * @param {Function} predicate The predicate to negate.\r\n     * @returns {Function} Returns the new negated function.\r\n     * @example\r\n     *\r\n     * function isEven(n) {\r\n     *   return n % 2 == 0\r\n     * }\r\n     *\r\n     * filter([1, 2, 3, 4, 5, 6], negate(isEven))\r\n     * // => [1, 3, 5]\r\n     */\r\n    function negate(predicate) {\r\n      if (typeof predicate !== 'function') {\r\n        throw new TypeError('Expected a function')\r\n      }\r\n      return function(...args) {\r\n        return !predicate.apply(this, args)\r\n      }\r\n    }\r\n\r\n\r\n    return skylark.attach(\"langx.funcs\",{\r\n        bind : proxy,\r\n        \r\n        debounce: debounce,\r\n\r\n        delegate: delegate,\r\n\r\n        defer: defer,\r\n\r\n        negate: negate,\r\n\r\n        noop : noop,\r\n\r\n        proxy: proxy,\r\n\r\n        returnTrue: function() {\r\n            return true;\r\n        },\r\n\r\n        returnFalse: function() {\r\n            return false;\r\n        },\r\n\r\n        templateSettings : templateSettings,\r\n        template : template\r\n    });\r\n});\ndefine('skylark-langx-funcs/main',[\r\n\t\"./funcs\"\r\n],function(funcs){\r\n\treturn funcs;\r\n});\ndefine('skylark-langx-funcs', ['skylark-langx-funcs/main'], function (main) { return main; });\n\ndefine('skylark-langx-async/Deferred',[\r\n    \"skylark-langx-arrays\",\r\n\t\"skylark-langx-funcs\",\r\n    \"skylark-langx-objects\"\r\n],function(arrays,funcs,objects){\r\n    \"use strict\";\r\n\r\n    var slice = Array.prototype.slice,\r\n        proxy = funcs.proxy,\r\n        makeArray = arrays.makeArray,\r\n        result = objects.result,\r\n        mixin = objects.mixin;\r\n\r\n    mixin(Promise.prototype,{\r\n        always: function(handler) {\r\n            //this.done(handler);\r\n            //this.fail(handler);\r\n            this.then(handler,handler);\r\n            return this;\r\n        },\r\n        done : function() {\r\n            for (var i = 0;i<arguments.length;i++) {\r\n                this.then(arguments[i]);\r\n            }\r\n            return this;\r\n        },\r\n        fail : function(handler) { \r\n            //return mixin(Promise.prototype.catch.call(this,handler),added);\r\n            //return this.then(null,handler);\r\n            this.catch(handler);\r\n            return this;\r\n         }\r\n    });\r\n\r\n\r\n    var Deferred = function() {\r\n        var self = this,\r\n            p = this.promise = makePromise2(new Promise(function(resolve, reject) {\r\n                self._resolve = resolve;\r\n                self._reject = reject;\r\n            }));\r\n\r\n        //wrapPromise(p,self);\r\n\r\n        //this[PGLISTENERS] = [];\r\n        //this[PGNOTIFIES] = [];\r\n\r\n        //this.resolve = Deferred.prototype.resolve.bind(this);\r\n        //this.reject = Deferred.prototype.reject.bind(this);\r\n        //this.progress = Deferred.prototype.progress.bind(this);\r\n\r\n    };\r\n\r\n   \r\n    function makePromise2(promise) {\r\n        // Don't modify any promise that has been already modified.\r\n        if (promise.isResolved) return promise;\r\n\r\n        // Set initial state\r\n        var isPending = true;\r\n        var isRejected = false;\r\n        var isResolved = false;\r\n\r\n        // Observe the promise, saving the fulfillment in a closure scope.\r\n        var result = promise.then(\r\n            function(v) {\r\n                isResolved = true;\r\n                isPending = false;\r\n                return v; \r\n            }, \r\n            function(e) {\r\n                isRejected = true;\r\n                isPending = false;\r\n                throw e; \r\n            }\r\n        );\r\n\r\n        result.isResolved = function() { return isResolved; };\r\n        result.isPending = function() { return isPending; };\r\n        result.isRejected = function() { return isRejected; };\r\n\r\n        result.state = function() {\r\n            if (isResolved) {\r\n                return 'resolved';\r\n            }\r\n            if (isRejected) {\r\n                return 'rejected';\r\n            }\r\n            return 'pending';\r\n        };\r\n\r\n        var notified = [],\r\n            listeners = [];\r\n\r\n          \r\n        result.then = function(onResolved,onRejected,onProgress) {\r\n            if (onProgress) {\r\n                this.progress(onProgress);\r\n            }\r\n            return makePromise2(Promise.prototype.then.call(this,\r\n                onResolved && function(args) {\r\n                    if (args && args.__ctx__ !== undefined) {\r\n                        return onResolved.apply(args.__ctx__,args);\r\n                    } else {\r\n                        return onResolved(args);\r\n                    }\r\n                },\r\n                onRejected && function(args){\r\n                    if (args && args.__ctx__ !== undefined) {\r\n                        return onRejected.apply(args.__ctx__,args);\r\n                    } else {\r\n                        return onRejected(args);\r\n                    }\r\n                }\r\n            ));\r\n        };\r\n\r\n        result.progress = function(handler) {\r\n            notified.forEach(function (value) {\r\n                handler(value);\r\n            });\r\n            listeners.push(handler);\r\n            return this;\r\n        };\r\n\r\n        result.pipe = result.then;\r\n\r\n        result.notify = function(value) {\r\n            try {\r\n                notified.push(value);\r\n\r\n                return listeners.forEach(function (listener) {\r\n                    return listener(value);\r\n                });\r\n            } catch (error) {\r\n            this.reject(error);\r\n            }\r\n            return this;\r\n        };\r\n\r\n        return result;\r\n    }\r\n\r\n \r\n    Deferred.prototype.resolve = function(value) {\r\n        var args = slice.call(arguments);\r\n        return this.resolveWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.resolveWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._resolve(args);\r\n        this._resolved = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.notify = function(value) {\r\n        var p = result(this,\"promise\");\r\n        p.notify(value);\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        var args = slice.call(arguments);\r\n        return this.rejectWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.rejectWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._reject(args);\r\n        this._rejected = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.isResolved = function() {\r\n        var p = result(this,\"promise\");\r\n        return p.isResolved();\r\n    };\r\n\r\n    Deferred.prototype.isRejected = function() {\r\n        var p = result(this,\"promise\");\r\n        return p.isRejected();\r\n    };\r\n\r\n    Deferred.prototype.state = function() {\r\n        var p = result(this,\"promise\");\r\n        return p.state();\r\n    };\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        var p = result(this,\"promise\");\r\n        return p.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.prototype.progress = function(progback){\r\n        var p = result(this,\"promise\");\r\n        return p.progress(progback);\r\n    };\r\n   \r\n    Deferred.prototype.catch = function(errback) {\r\n        var p = result(this,\"promise\");\r\n        return p.catch(errback);\r\n    };\r\n\r\n\r\n    Deferred.prototype.always  = function() {\r\n        var p = result(this,\"promise\");\r\n        p.always.apply(p,arguments);\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.done  = function() {\r\n        var p = result(this,\"promise\");\r\n        p.done.apply(p,arguments);\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.fail = function(errback) {\r\n        var p = result(this,\"promise\");\r\n        p.fail(errback);\r\n        return this;\r\n    };\r\n\r\n\r\n    Deferred.all = function(array) {\r\n        //return wrapPromise(Promise.all(array));\r\n        var d = new Deferred();\r\n        Promise.all(array).then(d.resolve.bind(d),d.reject.bind(d));\r\n        return result(d,\"promise\");\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return makePromise2(Promise.race(array));\r\n    };\r\n\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n        } else if (!nativePromise) {\r\n            var deferred = new Deferred(valueOrPromise.cancel);\r\n            valueOrPromise.then(proxy(deferred.resolve,deferred), proxy(deferred.reject,deferred), deferred.notify);\r\n            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve.apply(d,arguments);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n\r\n    Deferred.promise = function(callback) {\r\n        var d = new Deferred();\r\n\r\n        callback(d.resolve.bind(d),d.reject.bind(d),d.progress.bind(d));\r\n\r\n        return d.promise;\r\n    };\r\n\r\n    return Deferred;\r\n});\ndefine('skylark-langx-async/async',[\r\n    \"skylark-langx-ns\",\r\n    \"skylark-langx-objects\",\r\n    \"./Deferred\"\r\n],function(skylark,objects,Deferred){\r\n    var each = objects.each;\r\n    \r\n    var async = {\r\n        Deferred : Deferred,\r\n\r\n        parallel : function(arr,args,ctx) {\r\n            var rets = [];\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            each(arr,function(i,func){\r\n                rets.push(func.apply(ctx,args));\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        series : function(arr,args,ctx) {\r\n            var rets = [],\r\n                d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolve();\r\n            each(arr,function(i,func){\r\n                p = p.then(function(){\r\n                    return func.apply(ctx,args);\r\n                });\r\n                rets.push(p);\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        waterful : function(arr,args,ctx) {\r\n            var d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolveWith(ctx,args);\r\n\r\n            each(arr,function(i,func){\r\n                p = p.then(func);\r\n            });\r\n            return p;\r\n        }\r\n    };\r\n\r\n\treturn skylark.attach(\"langx.async\",async);\t\r\n});\ndefine('skylark-langx-async/main',[\r\n\t\"./async\"\r\n],function(async){\r\n\treturn async;\r\n});\ndefine('skylark-langx-async', ['skylark-langx-async/main'], function (main) { return main; });\n\ndefine('skylark-langx/async',[\r\n    \"skylark-langx-async\"\r\n],function(async){\r\n    return async;\r\n});\ndefine('skylark-langx-datetimes/datetimes',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n     function parseMilliSeconds(str) {\r\n\r\n        var strs = str.split(' ');\r\n        var number = parseInt(strs[0]);\r\n\r\n        if (isNaN(number)){\r\n            return 0;\r\n        }\r\n\r\n        var min = 60000 * 60;\r\n\r\n        switch (strs[1].trim().replace(/\\./g, '')) {\r\n            case 'minutes':\r\n            case 'minute':\r\n            case 'min':\r\n            case 'mm':\r\n            case 'm':\r\n                return 60000 * number;\r\n            case 'hours':\r\n            case 'hour':\r\n            case 'HH':\r\n            case 'hh':\r\n            case 'h':\r\n            case 'H':\r\n                return min * number;\r\n            case 'seconds':\r\n            case 'second':\r\n            case 'sec':\r\n            case 'ss':\r\n            case 's':\r\n                return 1000 * number;\r\n            case 'days':\r\n            case 'day':\r\n            case 'DD':\r\n            case 'dd':\r\n            case 'd':\r\n                return (min * 24) * number;\r\n            case 'months':\r\n            case 'month':\r\n            case 'MM':\r\n            case 'M':\r\n                return (min * 24 * 28) * number;\r\n            case 'weeks':\r\n            case 'week':\r\n            case 'W':\r\n            case 'w':\r\n                return (min * 24 * 7) * number;\r\n            case 'years':\r\n            case 'year':\r\n            case 'yyyy':\r\n            case 'yy':\r\n            case 'y':\r\n                return (min * 24 * 365) * number;\r\n            default:\r\n                return 0;\r\n        }\r\n    };\r\n\t\r\n\treturn skylark.attach(\"langx.datetimes\",{\r\n\t\tparseMilliSeconds\r\n\t});\r\n});\ndefine('skylark-langx-datetimes/main',[\r\n\t\"./datetimes\"\r\n],function(datetimes){\r\n\treturn datetimes;\r\n});\ndefine('skylark-langx-datetimes', ['skylark-langx-datetimes/main'], function (main) { return main; });\n\ndefine('skylark-langx/datetimes',[\r\n    \"skylark-langx-datetimes\"\r\n],function(datetimes){\r\n    return datetimes;\r\n});\ndefine('skylark-langx/Deferred',[\r\n    \"skylark-langx-async/Deferred\"\r\n],function(Deferred){\r\n    return Deferred;\r\n});\ndefine('skylark-langx-emitter/Emitter',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-arrays\",\r\n  \"skylark-langx-klass\"\r\n],function(skylark,types,objects,arrays,klass){\r\n    var slice = Array.prototype.slice,\r\n        compact = arrays.compact,\r\n        isDefined = types.isDefined,\r\n        isPlainObject = types.isPlainObject,\r\n        isFunction = types.isFunction,\r\n        isString = types.isString,\r\n        isEmptyObject = types.isEmptyObject,\r\n        mixin = objects.mixin,\r\n        safeMixin = objects.safeMixin;\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            name: segs[0],\r\n            ns: segs.slice(1).join(\" \")\r\n        };\r\n    }\r\n\r\n    var Emitter = klass({\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(event) {\r\n                var parsed = parse(event),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    ns : ns,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        emit: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new CustomEvent(e);\r\n            }\r\n\r\n            Object.defineProperty(e,\"target\",{\r\n                value : this\r\n            });\r\n\r\n            var args = slice.call(arguments, 1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var parsed = parse(eventName),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                var listeners = self._hub[name];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    var listener = listeners[i];\r\n                    if (ns && (!listener.ns ||  !listener.ns.startsWith(ns))) {\r\n                        continue;\r\n                    }\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                obj.one(event, callback, this);\r\n            } else {\r\n                obj.on(event, callback, this);\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event, callback) {\r\n            return this.listenTo(obj, event, callback, 1);\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(event) {\r\n                var parsed = parse(event),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                var evts = _hub[name];\r\n\r\n                if (evts) {\r\n                    var liveEvents = [];\r\n\r\n                    if (callback || ns) {\r\n                        for (var i = 0, len = evts.length; i < len; i++) {\r\n                            \r\n                            if (callback && evts[i].fn !== callback && evts[i].fn._ !== callback) {\r\n                                liveEvents.push(evts[i]);\r\n                                continue;\r\n                            } \r\n\r\n                            if (ns && (!evts[i].ns || evts[i].ns.indexOf(ns)!=0)) {\r\n                                liveEvents.push(evts[i]);\r\n                                continue;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (liveEvents.length) {\r\n                        _hub[name] = liveEvents;\r\n                    } else {\r\n                        delete _hub[name];\r\n                    }\r\n\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    var listeningEvent = listeningEvents[eventName];\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        trigger  : function() {\r\n            return this.emit.apply(this,arguments);\r\n        }\r\n    });\r\n\r\n    Emitter.createEvent = function (type,props) {\r\n        var e = new CustomEvent(type,props);\r\n        return safeMixin(e, props);\r\n    };\r\n\r\n    return skylark.attach(\"langx.Emitter\",Emitter);\r\n\r\n});\ndefine('skylark-langx-emitter/Evented',[\r\n  \"skylark-langx-ns/ns\",\r\n\t\"./Emitter\"\r\n],function(skylark,Emitter){\r\n\treturn skylark.attach(\"langx.Evented\",Emitter);\r\n});\ndefine('skylark-langx-emitter/main',[\r\n\t\"./Emitter\",\r\n\t\"./Evented\"\r\n],function(Emitter){\r\n\treturn Emitter;\r\n});\ndefine('skylark-langx-emitter', ['skylark-langx-emitter/main'], function (main) { return main; });\n\ndefine('skylark-langx/Emitter',[\r\n    \"skylark-langx-emitter\"\r\n],function(Evented){\r\n    return Evented;\r\n});\ndefine('skylark-langx/Evented',[\r\n    \"skylark-langx-emitter\"\r\n],function(Evented){\r\n    return Evented;\r\n});\ndefine('skylark-langx/funcs',[\r\n    \"skylark-langx-funcs\"\r\n],function(funcs){\r\n    return funcs;\r\n});\ndefine('skylark-langx-hoster/hoster',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n\t// The javascript host environment, brower and nodejs are supported.\r\n\tvar hoster = {\r\n\t\t\"isBrowser\" : true, // default\r\n\t\t\"isNode\" : null,\r\n\t\t\"global\" : this,\r\n\t\t\"browser\" : null,\r\n\t\t\"node\" : null\r\n\t};\r\n\r\n\tif (typeof process == \"object\" && process.versions && process.versions.node && process.versions.v8) {\r\n\t\thoster.isNode = true;\r\n\t\thoster.isBrowser = false;\r\n\t}\r\n\r\n\thoster.global = (function(){\r\n\t\tif (typeof global !== 'undefined' && typeof global !== 'function') {\r\n\t\t\t// global spec defines a reference to the global object called 'global'\r\n\t\t\t// https://github.com/tc39/proposal-global\r\n\t\t\t// `global` is also defined in NodeJS\r\n\t\t\treturn global;\r\n\t\t} else if (typeof window !== 'undefined') {\r\n\t\t\t// window is defined in browsers\r\n\t\t\treturn window;\r\n\t\t}\r\n\t\telse if (typeof self !== 'undefined') {\r\n\t\t\t// self is defined in WebWorkers\r\n\t\t\treturn self;\r\n\t\t}\r\n\t\treturn this;\r\n\t})();\r\n\r\n\tvar _document = null;\r\n\r\n\tObject.defineProperty(hoster,\"document\",function(){\r\n\t\tif (!_document) {\r\n\t\t\tvar w = typeof window === 'undefined' ? require('html-element') : window;\r\n\t\t\t_document = w.document;\r\n\t\t}\r\n\r\n\t\treturn _document;\r\n\t});\r\n\r\n\tif (hoster.isBrowser) {\r\n\t    function uaMatch( ua ) {\r\n\t\t    ua = ua.toLowerCase();\r\n\r\n\t\t    var match = /(chrome)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(webkit)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(opera)(?:.*version|)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(msie) ([\\w.]+)/.exec( ua ) ||\r\n\t\t      ua.indexOf('compatible') < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec( ua ) ||\r\n\t\t      [];\r\n\r\n\t\t    return {\r\n\t\t      browser: match[ 1 ] || '',\r\n\t\t      version: match[ 2 ] || '0'\r\n\t\t    };\r\n\t  \t};\r\n\r\n\t    var matched = uaMatch( navigator.userAgent );\r\n\r\n\t    var browser = hoster.browser = {};\r\n\r\n\t    if ( matched.browser ) {\r\n\t      browser[ matched.browser ] = true;\r\n\t      browser.version = matched.version;\r\n\t    }\r\n\r\n\t    // Chrome is Webkit, but Webkit is also Safari.\r\n\t    if ( browser.chrome ) {\r\n\t      browser.webkit = true;\r\n\t    } else if ( browser.webkit ) {\r\n\t      browser.safari = true;\r\n\t    }\r\n\t}\r\n\r\n\treturn  skylark.attach(\"langx.hoster\",hoster);\r\n});\ndefine('skylark-langx-hoster/main',[\r\n\t\"./hoster\"\r\n],function(hoster){\r\n\treturn hoster;\r\n});\ndefine('skylark-langx-hoster', ['skylark-langx-hoster/main'], function (main) { return main; });\n\ndefine('skylark-langx/hoster',[\r\n\t\"skylark-langx-hoster\"\r\n],function(hoster){\r\n\treturn hoster;\r\n});\ndefine('skylark-langx/numbers',[\r\n\t\"skylark-langx-numbers\"\r\n],function(numbers){\r\n\treturn numbers;\r\n});\ndefine('skylark-langx/objects',[\r\n    \"skylark-langx-objects\"\r\n],function(objects){\r\n    return objects;\r\n});\ndefine('skylark-langx-strings/strings',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n    // add default escape function for escaping HTML entities\r\n    var escapeCharMap = Object.freeze({\r\n        '&': '&amp;',\r\n        '<': '&lt;',\r\n        '>': '&gt;',\r\n        '\"': '&quot;',\r\n        \"'\": '&#x27;',\r\n        '`': '&#x60;',\r\n        '=': '&#x3D;',\r\n    });\r\n    function replaceChar(c) {\r\n        return escapeCharMap[c];\r\n    }\r\n    var escapeChars = /[&<>\"'`=]/g;\r\n\r\n\r\n     /*\r\n     * Converts camel case into dashes.\r\n     * @param {String} str\r\n     * @return {String}\r\n     * @exapmle marginTop -> margin-top\r\n     */\r\n    function dasherize(str) {\r\n        return str.replace(/::/g, '/')\r\n            .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\r\n            .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\r\n            .replace(/_/g, '-')\r\n            .toLowerCase();\r\n    }\r\n\r\n    function deserializeValue(value) {\r\n        try {\r\n            return value ?\r\n                value == \"true\" ||\r\n                (value == \"false\" ? false :\r\n                    value == \"null\" ? null :\r\n                    +value + \"\" == value ? +value :\r\n                    /^[\\[\\{]/.test(value) ? JSON.parse(value) :\r\n                    value) : value;\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    function escapeHTML(str) {\r\n        if (str == null) {\r\n            return '';\r\n        }\r\n        if (!str) {\r\n            return String(str);\r\n        }\r\n\r\n        return str.toString().replace(escapeChars, replaceChar);\r\n    }\r\n\r\n    function generateUUID() {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n            var r = Math.random() * 16 | 0;\r\n            var v = c === 'x' ? r : ((r & 0x3) | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    }\r\n\r\n    function trim(str) {\r\n        return str == null ? \"\" : String.prototype.trim.call(str);\r\n    }\r\n\r\n    function substitute( /*String*/ template,\r\n        /*Object|Array*/\r\n        map,\r\n        /*Function?*/\r\n        transform,\r\n        /*Object?*/\r\n        thisObject) {\r\n        // summary:\r\n        //    Performs parameterized substitutions on a string. Throws an\r\n        //    exception if any parameter is unmatched.\r\n        // template:\r\n        //    a string with expressions in the form `${key}` to be replaced or\r\n        //    `${key:format}` which specifies a format function. keys are case-sensitive.\r\n        // map:\r\n        //    hash to search for substitutions\r\n        // transform:\r\n        //    a function to process all parameters before substitution takes\r\n\r\n\r\n        thisObject = thisObject || window;\r\n        transform = transform ?\r\n            proxy(thisObject, transform) : function(v) {\r\n                return v;\r\n            };\r\n\r\n        function getObject(key, map) {\r\n            if (key.match(/\\./)) {\r\n                var retVal,\r\n                    getValue = function(keys, obj) {\r\n                        var _k = keys.pop();\r\n                        if (_k) {\r\n                            if (!obj[_k]) return null;\r\n                            return getValue(keys, retVal = obj[_k]);\r\n                        } else {\r\n                            return retVal;\r\n                        }\r\n                    };\r\n                return getValue(key.split(\".\").reverse(), map);\r\n            } else {\r\n                return map[key];\r\n            }\r\n        }\r\n\r\n        return template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\r\n            function(match, key, format) {\r\n                var value = getObject(key, map);\r\n                if (format) {\r\n                    value = getObject(format, thisObject).call(thisObject, value, key);\r\n                }\r\n                return transform(value, key).toString();\r\n            }); // String\r\n    }\r\n\r\n    var idCounter = 0;\r\n    function uniqueId (prefix) {\r\n        var id = ++idCounter + '';\r\n        return prefix ? prefix + id : id;\r\n    }\r\n\r\n\r\n    /**\r\n     * https://github.com/cho45/micro-template.js\r\n     * (c) cho45 http://cho45.github.com/mit-license\r\n     */\r\n    function template (id, data) {\r\n\r\n        function include(name, args) {\r\n            var stash = {};\r\n            for (var key in template.context.stash) if (template.context.stash.hasOwnProperty(key)) {\r\n                stash[key] = template.context.stash[key];\r\n            }\r\n            if (args) for (var key in args) if (args.hasOwnProperty(key)) {\r\n                stash[key] = args[key];\r\n            }\r\n            var context = template.context;\r\n            context.ret += template(name, stash);\r\n            template.context = context;\r\n        }\r\n\r\n        function wrapper(name, fun) {\r\n            var current = template.context.ret;\r\n            template.context.ret = '';\r\n            fun.apply(template.context);\r\n            var content = template.context.ret;\r\n            var orig_content = template.context.stash.content;\r\n            template.context.stash.content = content;\r\n            template.context.ret = current + template(name, template.context.stash);\r\n            template.context.stash.content = orig_content;\r\n        }\r\n\r\n        var me = arguments.callee;\r\n        if (!me.cache[id]) me.cache[id] = (function () {\r\n            var name = id, string = /^[\\w\\-]+$/.test(id) ? me.get(id): (name = 'template(string)', id); // no warnings\r\n            var line = 1, body = (\r\n                \"try { \" +\r\n                    (me.variable ?  \"var \" + me.variable + \" = this.stash;\" : \"with (this.stash) { \") +\r\n                        \"this.ret += '\"  +\r\n                        string.\r\n                            replace(/<%/g, '\\x11').replace(/%>/g, '\\x13'). // if you want other tag, just edit this line\r\n                            replace(/'(?![^\\x11\\x13]+?\\x13)/g, '\\\\x27').\r\n                            replace(/^\\s*|\\s*$/g, '').\r\n                            replace(/\\n|\\r\\n/g, function () { return \"';\\nthis.line = \" + (++line) + \"; this.ret += '\\\\n\" }).\r\n                            replace(/\\x11=raw(.+?)\\x13/g, \"' + ($1) + '\").\r\n                            replace(/\\x11=(.+?)\\x13/g, \"' + this.escapeHTML($1) + '\").\r\n                            replace(/\\x11(.+?)\\x13/g, \"'; $1; this.ret += '\") +\r\n                    \"'; \" + (me.variable ? \"\" : \"}\") + \"return this.ret;\" +\r\n                \"} catch (e) { throw 'TemplateError: ' + e + ' (on \" + name + \"' + ' line ' + this.line + ')'; } \" +\r\n                \"//@ sourceURL=\" + name + \"\\n\" // source map\r\n            ).replace(/this\\.ret \\+= '';/g, '');\r\n            var func = new Function(body);\r\n            var map  = { '&' : '&amp;', '<' : '&lt;', '>' : '&gt;', '\\x22' : '&#x22;', '\\x27' : '&#x27;' };\r\n            var escapeHTML = function (string) { return (''+string).replace(/[&<>\\'\\\"]/g, function (_) { return map[_] }) };\r\n            return function (stash) { return func.call(me.context = { escapeHTML: escapeHTML, line: 1, ret : '', stash: stash }) };\r\n        })();\r\n        return data ? me.cache[id](data) : me.cache[id];\r\n    }\r\n\r\n    template.cache = {};\r\n    \r\n\r\n    template.get = function (id) {\r\n        return document.getElementById(id).innerHTML;\r\n    };\r\n\r\n    function rtrim(str) {\r\n        return str.replace(/\\s+$/g, '');\r\n    }\r\n\r\n    // Slugify a string\r\n    function slugify(str) {\r\n        str = str.replace(/^\\s+|\\s+$/g, '');\r\n\r\n        // Make the string lowercase\r\n        str = str.toLowerCase();\r\n\r\n        // Remove accents, swap ñ for n, etc\r\n        var from = \"ÁÄÂÀÃÅČÇĆĎÉĚËÈÊẼĔȆÍÌÎÏŇÑÓÖÒÔÕØŘŔŠŤÚŮÜÙÛÝŸŽáäâàãåčçćďéěëèêẽĕȇíìîïňñóöòôõøðřŕšťúůüùûýÿžþÞĐđßÆa·/_,:;\";\r\n        var to   = \"AAAAAACCCDEEEEEEEEIIIINNOOOOOORRSTUUUUUYYZaaaaaacccdeeeeeeeeiiiinnooooooorrstuuuuuyyzbBDdBAa------\";\r\n        for (var i=0, l=from.length ; i<l ; i++) {\r\n            str = str.replace(new RegExp(from.charAt(i), 'g'), to.charAt(i));\r\n        }\r\n\r\n        // Remove invalid chars\r\n        //str = str.replace(/[^a-z0-9 -]/g, '') \r\n        // Collapse whitespace and replace by -\r\n        str = str.replace(/\\s+/g, '-') \r\n        // Collapse dashes\r\n        .replace(/-+/g, '-'); \r\n\r\n        return str;\r\n    }    \r\n\r\n    // return boolean if string 'true' or string 'false', or if a parsable string which is a number\r\n    // also supports JSON object and/or arrays parsing\r\n    function toType(str) {\r\n        var type = typeof str;\r\n        if (type !== 'string') {\r\n            return str;\r\n        }\r\n        var nb = parseFloat(str);\r\n        if (!isNaN(nb) && isFinite(str)) {\r\n            return nb;\r\n        }\r\n        if (str === 'false') {\r\n            return false;\r\n        }\r\n        if (str === 'true') {\r\n            return true;\r\n        }\r\n\r\n        try {\r\n            str = JSON.parse(str);\r\n        } catch (e) {}\r\n\r\n        return str;\r\n    }\r\n\r\n\treturn skylark.attach(\"langx.strings\",{\r\n        camelCase: function(str) {\r\n            return str.replace(/-([\\da-z])/g, function(a) {\r\n                return a.toUpperCase().replace('-', '');\r\n            });\r\n        },\r\n\r\n        dasherize: dasherize,\r\n\r\n        deserializeValue: deserializeValue,\r\n\r\n        escapeHTML : escapeHTML,\r\n\r\n        generateUUID : generateUUID,\r\n\r\n        lowerFirst: function(str) {\r\n            return str.charAt(0).toLowerCase() + str.slice(1);\r\n        },\r\n\r\n        rtrim : rtrim,\r\n\r\n        serializeValue: function(value) {\r\n            return JSON.stringify(value)\r\n        },\r\n\r\n\r\n        substitute: substitute,\r\n\r\n        slugify : slugify,\r\n\r\n        //template : template,\r\n\r\n        trim: trim,\r\n\r\n        uniqueId: uniqueId,\r\n\r\n        upperFirst: function(str) {\r\n            return str.charAt(0).toUpperCase() + str.slice(1);\r\n        }\r\n\t}) ; \r\n\r\n});\ndefine('skylark-langx-strings/base64',[\r\n\t\"./strings\"\r\n],function(strings) {\r\n\r\n\t// private property\r\n\tconst _keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\n\r\n\t// private method for UTF-8 encoding\r\n\tfunction _utf8_encode(string) {\r\n\t\tstring = string.replace(/\\r\\n/g,\"\\n\");\r\n\t\tvar utftext = \"\";\r\n\r\n\t\tfor (var n = 0; n < string.length; n++) {\r\n\r\n\t\t\tvar c = string.charCodeAt(n);\r\n\r\n\t\t\tif (c < 128) {\r\n\t\t\t\tutftext += String.fromCharCode(c);\r\n\t\t\t}\r\n\t\t\telse if((c > 127) && (c < 2048)) {\r\n\t\t\t\tutftext += String.fromCharCode((c >> 6) | 192);\r\n\t\t\t\tutftext += String.fromCharCode((c & 63) | 128);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tutftext += String.fromCharCode((c >> 12) | 224);\r\n\t\t\t\tutftext += String.fromCharCode(((c >> 6) & 63) | 128);\r\n\t\t\t\tutftext += String.fromCharCode((c & 63) | 128);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn utftext;\r\n\t}\r\n\r\n\t// private method for UTF-8 decoding\r\n\tfunction _utf8_decode(utftext) {\r\n\t\tvar string = \"\";\r\n\t\tvar i = 0;\r\n\t\tvar c = c1 = c2 = 0;\r\n\r\n\t\twhile ( i < utftext.length ) {\r\n\r\n\t\t\tc = utftext.charCodeAt(i);\r\n\r\n\t\t\tif (c < 128) {\r\n\t\t\t\tstring += String.fromCharCode(c);\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t\telse if((c > 191) && (c < 224)) {\r\n\t\t\t\tc2 = utftext.charCodeAt(i+1);\r\n\t\t\t\tstring += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\r\n\t\t\t\ti += 2;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tc2 = utftext.charCodeAt(i+1);\r\n\t\t\t\tc3 = utftext.charCodeAt(i+2);\r\n\t\t\t\tstring += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\r\n\t\t\t\ti += 3;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn string;\r\n\t}\r\n\r\n\t// public method for encoding\r\n\tfunction encode(input, binary) {\r\n\t\tbinary = (binary != null) ? binary : false;\r\n\t\tvar output = \"\";\r\n\t\tvar chr1, chr2, chr3, enc1, enc2, enc3, enc4;\r\n\t\tvar i = 0;\r\n\r\n\t\tif (!binary)\r\n\t\t{\r\n\t\t\tinput = _utf8_encode(input);\r\n\t\t}\r\n\r\n\t\twhile (i < input.length) {\r\n\r\n\t\t\tchr1 = input.charCodeAt(i++);\r\n\t\t\tchr2 = input.charCodeAt(i++);\r\n\t\t\tchr3 = input.charCodeAt(i++);\r\n\r\n\t\t\tenc1 = chr1 >> 2;\r\n\t\t\tenc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\r\n\t\t\tenc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\r\n\t\t\tenc4 = chr3 & 63;\r\n\r\n\t\t\tif (isNaN(chr2)) {\r\n\t\t\t\tenc3 = enc4 = 64;\r\n\t\t\t} else if (isNaN(chr3)) {\r\n\t\t\t\tenc4 = 64;\r\n\t\t\t}\r\n\r\n\t\t\toutput = output +\r\n\t\t\tthis._keyStr.charAt(enc1) + this._keyStr.charAt(enc2) +\r\n\t\t\tthis._keyStr.charAt(enc3) + this._keyStr.charAt(enc4);\r\n\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\t// public method for decoding\r\n\tfunction decode(input, binary) {\r\n\t\tbinary = (binary != null) ? binary : false;\r\n\t\tvar output = \"\";\r\n\t\tvar chr1, chr2, chr3;\r\n\t\tvar enc1, enc2, enc3, enc4;\r\n\t\tvar i = 0;\r\n\r\n\t\tinput = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\r\n\r\n\t\twhile (i < input.length) {\r\n\r\n\t\t\tenc1 = this._keyStr.indexOf(input.charAt(i++));\r\n\t\t\tenc2 = this._keyStr.indexOf(input.charAt(i++));\r\n\t\t\tenc3 = this._keyStr.indexOf(input.charAt(i++));\r\n\t\t\tenc4 = this._keyStr.indexOf(input.charAt(i++));\r\n\r\n\t\t\tchr1 = (enc1 << 2) | (enc2 >> 4);\r\n\t\t\tchr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\r\n\t\t\tchr3 = ((enc3 & 3) << 6) | enc4;\r\n\r\n\t\t\toutput = output + String.fromCharCode(chr1);\r\n\r\n\t\t\tif (enc3 != 64) {\r\n\t\t\t\toutput = output + String.fromCharCode(chr2);\r\n\t\t\t}\r\n\t\t\tif (enc4 != 64) {\r\n\t\t\t\toutput = output + String.fromCharCode(chr3);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif (!binary) {\r\n\t\t\toutput = _utf8_decode(output);\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\r\n\t}\r\n\r\n\r\n\treturn strings.base64 = {\r\n\t\tdecode,\r\n\t\tencode\r\n\t};\r\n\t\r\n});\ndefine('skylark-langx-strings/main',[\r\n\t\"./strings\",\r\n\t\"./base64\"\r\n],function(strings){\r\n\treturn strings;\r\n});\ndefine('skylark-langx-strings', ['skylark-langx-strings/main'], function (main) { return main; });\n\ndefine('skylark-langx/strings',[\r\n    \"skylark-langx-strings\"\r\n],function(strings){\r\n    return strings;\r\n});\ndefine('skylark-langx/Stateful',[\r\n\t\"./Evented\",\r\n  \"./strings\",\r\n  \"./objects\"\r\n],function(Evented,strings,objects){\r\n    var isEqual = objects.isEqual,\r\n        mixin = objects.mixin,\r\n        result = objects.result,\r\n        isEmptyObject = objects.isEmptyObject,\r\n        clone = objects.clone,\r\n        uniqueId = strings.uniqueId;\r\n\r\n    var Stateful = Evented.inherit({\r\n        _construct : function(attributes, options) {\r\n            var attrs = attributes || {};\r\n            options || (options = {});\r\n            this.cid = uniqueId(this.cidPrefix);\r\n            this.attributes = {};\r\n            if (options.collection) this.collection = options.collection;\r\n            if (options.parse) attrs = this.parse(attrs, options) || {};\r\n            var defaults = result(this, 'defaults');\r\n            attrs = mixin({}, defaults, attrs);\r\n            this.set(attrs, options);\r\n            this.changed = {};\r\n        },\r\n\r\n        // A hash of attributes whose current and previous value differ.\r\n        changed: null,\r\n\r\n        // The value returned during the last failed validation.\r\n        validationError: null,\r\n\r\n        // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\r\n        // CouchDB users may want to set this to `\"_id\"`.\r\n        idAttribute: 'id',\r\n\r\n        // The prefix is used to create the client id which is used to identify models locally.\r\n        // You may want to override this if you're experiencing name clashes with model ids.\r\n        cidPrefix: 'c',\r\n\r\n\r\n        // Return a copy of the model's `attributes` object.\r\n        toJSON: function(options) {\r\n          return clone(this.attributes);\r\n        },\r\n\r\n\r\n        // Get the value of an attribute.\r\n        get: function(attr) {\r\n          return this.attributes[attr];\r\n        },\r\n\r\n        // Returns `true` if the attribute contains a value that is not null\r\n        // or undefined.\r\n        has: function(attr) {\r\n          return this.get(attr) != null;\r\n        },\r\n\r\n        // Set a hash of model attributes on the object, firing `\"change\"`. This is\r\n        // the core primitive operation of a model, updating the data and notifying\r\n        // anyone who needs to know about the change in state. The heart of the beast.\r\n        set: function(key, val, options) {\r\n          if (key == null) return this;\r\n\r\n          // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n          var attrs;\r\n          if (typeof key === 'object') {\r\n            attrs = key;\r\n            options = val;\r\n          } else {\r\n            (attrs = {})[key] = val;\r\n          }\r\n\r\n          options || (options = {});\r\n\r\n          // Run validation.\r\n          if (!this._validate(attrs, options)) return false;\r\n\r\n          // Extract attributes and options.\r\n          var unset      = options.unset;\r\n          var silent     = options.silent;\r\n          var changes    = [];\r\n          var changing   = this._changing;\r\n          this._changing = true;\r\n\r\n          if (!changing) {\r\n            this._previousAttributes = clone(this.attributes);\r\n            this.changed = {};\r\n          }\r\n\r\n          var current = this.attributes;\r\n          var changed = this.changed;\r\n          var prev    = this._previousAttributes;\r\n\r\n          // For each `set` attribute, update or delete the current value.\r\n          for (var attr in attrs) {\r\n            val = attrs[attr];\r\n            if (!isEqual(current[attr], val)) changes.push(attr);\r\n            if (!isEqual(prev[attr], val)) {\r\n              changed[attr] = val;\r\n            } else {\r\n              delete changed[attr];\r\n            }\r\n            unset ? delete current[attr] : current[attr] = val;\r\n          }\r\n\r\n          // Update the `id`.\r\n          if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\r\n\r\n          // Trigger all relevant attribute changes.\r\n          if (!silent) {\r\n            if (changes.length) this._pending = options;\r\n            for (var i = 0; i < changes.length; i++) {\r\n              this.trigger('change:' + changes[i], this, current[changes[i]], options);\r\n            }\r\n          }\r\n\r\n          // You might be wondering why there's a `while` loop here. Changes can\r\n          // be recursively nested within `\"change\"` events.\r\n          if (changing) return this;\r\n          if (!silent) {\r\n            while (this._pending) {\r\n              options = this._pending;\r\n              this._pending = false;\r\n              this.trigger('change', this, options);\r\n            }\r\n          }\r\n          this._pending = false;\r\n          this._changing = false;\r\n          return this;\r\n        },\r\n\r\n        // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\r\n        // if the attribute doesn't exist.\r\n        unset: function(attr, options) {\r\n          return this.set(attr, void 0, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Clear all attributes on the model, firing `\"change\"`.\r\n        clear: function(options) {\r\n          var attrs = {};\r\n          for (var key in this.attributes) attrs[key] = void 0;\r\n          return this.set(attrs, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Determine if the model has changed since the last `\"change\"` event.\r\n        // If you specify an attribute name, determine if that attribute has changed.\r\n        hasChanged: function(attr) {\r\n          if (attr == null) return !isEmptyObject(this.changed);\r\n          return this.changed[attr] !== undefined;\r\n        },\r\n\r\n        // Return an object containing all the attributes that have changed, or\r\n        // false if there are no changed attributes. Useful for determining what\r\n        // parts of a view need to be updated and/or what attributes need to be\r\n        // persisted to the server. Unset attributes will be set to undefined.\r\n        // You can also pass an attributes object to diff against the model,\r\n        // determining if there *would be* a change.\r\n        changedAttributes: function(diff) {\r\n          if (!diff) return this.hasChanged() ? clone(this.changed) : false;\r\n          var old = this._changing ? this._previousAttributes : this.attributes;\r\n          var changed = {};\r\n          for (var attr in diff) {\r\n            var val = diff[attr];\r\n            if (isEqual(old[attr], val)) continue;\r\n            changed[attr] = val;\r\n          }\r\n          return !isEmptyObject(changed) ? changed : false;\r\n        },\r\n\r\n        // Get the previous value of an attribute, recorded at the time the last\r\n        // `\"change\"` event was fired.\r\n        previous: function(attr) {\r\n          if (attr == null || !this._previousAttributes) return null;\r\n          return this._previousAttributes[attr];\r\n        },\r\n\r\n        // Get all of the attributes of the model at the time of the previous\r\n        // `\"change\"` event.\r\n        previousAttributes: function() {\r\n          return clone(this._previousAttributes);\r\n        },\r\n\r\n        // Create a new model with identical attributes to this one.\r\n        clone: function() {\r\n          return new this.constructor(this.attributes);\r\n        },\r\n\r\n        // A model is new if it has never been saved to the server, and lacks an id.\r\n        isNew: function() {\r\n          return !this.has(this.idAttribute);\r\n        },\r\n\r\n        // Check if the model is currently in a valid state.\r\n        isValid: function(options) {\r\n          return this._validate({}, mixin({}, options, {validate: true}));\r\n        },\r\n\r\n        // Run validation against the next complete set of model attributes,\r\n        // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\r\n        _validate: function(attrs, options) {\r\n          if (!options.validate || !this.validate) return true;\r\n          attrs = mixin({}, this.attributes, attrs);\r\n          var error = this.validationError = this.validate(attrs, options) || null;\r\n          if (!error) return true;\r\n          this.trigger('invalid', this, error, mixin(options, {validationError: error}));\r\n          return false;\r\n        }\r\n    });\r\n\r\n\treturn Stateful;\r\n});\ndefine('skylark-langx-topic/topic',[\r\n\t\"skylark-langx-ns\",\r\n\t\"skylark-langx-emitter/Evented\"\r\n],function(skylark,Evented){\r\n\tvar hub = new Evented();\r\n\r\n\treturn skylark.attach(\"langx.topic\",{\r\n\t    publish: function(name, arg1,argn) {\r\n\t        var data = [].slice.call(arguments, 1);\r\n\r\n\t        return hub.trigger({\r\n\t            type : name,\r\n\t            data : data\r\n\t        });\r\n\t    },\r\n\r\n        subscribe: function(name, listener,ctx) {\r\n        \tvar handler = function(e){\r\n                listener.apply(ctx,e.data);\r\n            };\r\n            hub.on(name, handler);\r\n            return {\r\n            \tremove : function(){\r\n            \t\thub.off(name,handler);\r\n            \t}\r\n            }\r\n\r\n        }\r\n\r\n\t});\r\n});\ndefine('skylark-langx-topic/main',[\r\n\t\"./topic\"\r\n],function(topic){\r\n\treturn topic;\r\n});\ndefine('skylark-langx-topic', ['skylark-langx-topic/main'], function (main) { return main; });\n\ndefine('skylark-langx/topic',[\r\n\t\"skylark-langx-topic\"\r\n],function(topic){\r\n\treturn topic;\r\n});\ndefine('skylark-langx/types',[\r\n    \"skylark-langx-types\"\r\n],function(types){\r\n    return types;\r\n});\ndefine('skylark-langx/langx',[\r\n    \"./skylark\",\r\n    \"./arrays\",\r\n    \"./ArrayStore\",\r\n    \"./aspect\",\r\n    \"./async\",\r\n    \"./datetimes\",\r\n    \"./Deferred\",\r\n    \"./Emitter\",\r\n    \"./Evented\",\r\n    \"./funcs\",\r\n    \"./hoster\",\r\n    \"./klass\",\r\n    \"./numbers\",\r\n    \"./objects\",\r\n    \"./Stateful\",\r\n    \"./strings\",\r\n    \"./topic\",\r\n    \"./types\"\r\n], function(skylark,arrays,ArrayStore,aspect,async,datetimes,Deferred,Emitter,Evented,funcs,hoster,klass,numbers,objects,Stateful,strings,topic,types) {\r\n    \"use strict\";\r\n    var toString = {}.toString,\r\n        concat = Array.prototype.concat,\r\n        indexOf = Array.prototype.indexOf,\r\n        slice = Array.prototype.slice,\r\n        filter = Array.prototype.filter,\r\n        mixin = objects.mixin,\r\n        safeMixin = objects.safeMixin,\r\n        isFunction = types.isFunction;\r\n\r\n\r\n    function funcArg(context, arg, idx, payload) {\r\n        return isFunction(arg) ? arg.call(context, idx, payload) : arg;\r\n    }\r\n\r\n    function getQueryParams(url) {\r\n        var url = url || window.location.href,\r\n            segs = url.split(\"?\"),\r\n            params = {};\r\n\r\n        if (segs.length > 1) {\r\n            segs[1].split(\"&\").forEach(function(queryParam) {\r\n                var nv = queryParam.split('=');\r\n                params[nv[0]] = nv[1];\r\n            });\r\n        }\r\n        return params;\r\n    }\r\n\r\n\r\n    function toPixel(value) {\r\n        // style values can be floats, client code may want\r\n        // to round for integer pixels.\r\n        return parseFloat(value) || 0;\r\n    }\r\n\r\n\r\n    var _uid = 1;\r\n\r\n    function uid(obj) {\r\n        return obj._uid || (obj._uid = _uid++);\r\n    }\r\n\r\n    function langx() {\r\n        return langx;\r\n    }\r\n\r\n    mixin(langx, {\r\n        createEvent : Emitter.createEvent,\r\n\r\n        funcArg: funcArg,\r\n\r\n        getQueryParams: getQueryParams,\r\n\r\n        toPixel: toPixel,\r\n\r\n        uid: uid,\r\n\r\n        URL: typeof window !== \"undefined\" ? window.URL || window.webkitURL : null\r\n\r\n    });\r\n\r\n\r\n    mixin(langx, arrays,aspect,datetimes,funcs,numbers,objects,strings,types,{\r\n        ArrayStore : ArrayStore,\r\n\r\n        async : async,\r\n        \r\n        Deferred: Deferred,\r\n\r\n        Emitter: Emitter,\r\n\r\n        Evented: Evented,\r\n\r\n        hoster : hoster,\r\n\r\n        klass : klass,\r\n       \r\n        Stateful: Stateful,\r\n\r\n        topic : topic\r\n    });\r\n\r\n    return skylark.langx = langx;\r\n});\ndefine('skylark-domx-browser/browser',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\"\r\n], function(skylark,langx) {\r\n    \"use strict\";\r\n\r\n    var browser = langx.hoster.browser;\r\n \r\n    var checkedCssProperties = {\r\n            \"transitionproperty\": \"TransitionProperty\",\r\n        },\r\n        transEndEventNames = {\r\n          WebkitTransition : 'webkitTransitionEnd',\r\n          MozTransition    : 'transitionend',\r\n          OTransition      : 'oTransitionEnd otransitionend',\r\n          transition       : 'transitionend'\r\n        },\r\n        transEndEventName = null;\r\n\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n                          testEl.mozMatchesSelector ||\r\n                          testEl.oMatchesSelector ||\r\n                          testEl.matchesSelector,\r\n\r\n        requestFullScreen = testEl.requestFullscreen || \r\n                            testEl.webkitRequestFullscreen || \r\n                            testEl.mozRequestFullScreen || \r\n                            testEl.msRequestFullscreen,\r\n\r\n        exitFullScreen =  document.exitFullscreen ||\r\n                          document.webkitCancelFullScreen ||\r\n                          document.mozCancelFullScreen ||\r\n                          document.msExitFullscreen,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n            if (transEndEventNames[name]) {\r\n              transEndEventName = transEndEventNames[name];\r\n            }\r\n        }\r\n    }\r\n\r\n    if (!transEndEventName) {\r\n        if (testStyle[\"transition\"] !== undefined) {\r\n            transEndEventName = transEndEventNames[\"transition\"];\r\n        }\r\n    }\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        isIE : !!/msie/i.exec( window.navigator.userAgent ),\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        requestFullScreen : requestFullScreen,\r\n\r\n        exitFullscreen : requestFullScreen,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {\r\n\r\n        }\r\n\r\n    });\r\n\r\n    if  (transEndEventName) {\r\n        browser.support.transition = {\r\n            end : transEndEventName\r\n        };\r\n    }\r\n\r\n    testEl = null;\r\n\r\n    return skylark.attach(\"domx.browser\",browser);\r\n});\r\n\ndefine('skylark-domx-browser/main',[\r\n\t\"./browser\"\r\n],function(browser){\r\n\treturn browser;\r\n});\ndefine('skylark-domx-browser', ['skylark-domx-browser/main'], function (main) { return main; });\n\ndefine('skylark-domx-noder/noder',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\"\r\n], function(skylark, langx, browser) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n\r\n    function activeElement(doc) {\r\n        doc = doc || document;\r\n        var el;\r\n\r\n        // Support: IE 9 only\r\n        // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\r\n        try {\r\n            el = doc.activeElement;\r\n        } catch ( error ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 9 - 11 only\r\n        // IE may return null instead of an element\r\n        // Interestingly, this only seems to occur when NOT in an iframe\r\n        if ( !el ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 11 only\r\n        // IE11 returns a seemingly empty object in some cases when accessing\r\n        // document.activeElement from an <iframe>\r\n        if ( !el.nodeName ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        return el;\r\n    };\r\n\r\n    function enhancePlaceContent(placing,node) {\r\n        if (langx.isFunction(placing)) {\r\n            return placing.apply(node,[]);\r\n        }\r\n        if (langx.isArrayLike(placing)) {\r\n            var neddsFlattern;\r\n            for (var i=0;i<placing.length;i++) {\r\n                if (langx.isFunction(placing[i])) {\r\n                    placing[i] = placing[i].apply(node,[]);\r\n                    if (langx.isArrayLike(placing[i])) {\r\n                        neddsFlattern = true;\r\n                    }\r\n                }\r\n            }\r\n            if (neddsFlattern) {\r\n                placing = langx.flatten(placing);\r\n            }\r\n        }\r\n        return placing;\r\n    }\r\n    function after(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Get the children of the specified node, including text and comment nodes.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    /*   \r\n     * Create a element and set attributes on it.\r\n     * @param {HTMLElement} tag\r\n     * @param {props} props\r\n     * @param } parent\r\n     */\r\n    function createElement(tag, props, parent) {\r\n        var node;\r\n\r\n        if (/svg/i.test(tag)) {\r\n            node = document.createElementNS(\"http://www.w3.org/2000/svg\", tag)\r\n        } else {\r\n            node = document.createElement(tag);\r\n        }\r\n\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent, node);\r\n        }\r\n        return node;\r\n    }\r\n\r\nfunction removeSelfClosingTags(xml) {\r\n    var split = xml.split(\"/>\");\r\n    var newXml = \"\";\r\n    for (var i = 0; i < split.length - 1;i++) {\r\n        var edsplit = split[i].split(\"<\");\r\n        newXml += split[i] + \"></\" + edsplit[edsplit.length - 1].split(\" \")[0] + \">\";\r\n    }\r\n    return newXml + split[split.length-1];\r\n}\r\n\r\n    /*   \r\n     * Create a DocumentFragment from the HTML fragment.\r\n     * @param {String} html\r\n     */\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = removeSelfClosingTags(\"\" + html);\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    /*   \r\n     * Create a deep copy of the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {Boolean} deep\r\n     */\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node .\r\n     * @param {String} node\r\n     * @param {Node} child\r\n     */\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    /*   \r\n     * Create a new Text node.\r\n     * @param {String} text\r\n     * @param {Node} child\r\n     */\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    /*   \r\n     * Get the current document object.\r\n     */\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    /*   \r\n     * Remove all child nodes of the set of matched elements from the DOM.\r\n     * @param {Object} node\r\n     */\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    var fulledEl = null;\r\n\r\n    function fullScreen(el) {\r\n        if (el === false) {\r\n            browser.exitFullScreen.apply(document);\r\n        } else if (el) {\r\n            browser.requestFullScreen.apply(el);\r\n            fulledEl = el;\r\n        } else {\r\n            return (\r\n                document.fullscreenElement ||\r\n                document.webkitFullscreenElement ||\r\n                document.mozFullScreenElement ||\r\n                document.msFullscreenElement\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    // Selectors\r\n    function focusable( element, hasTabindex ) {\r\n        var map, mapName, img, focusableIfVisible, fieldset,\r\n            nodeName = element.nodeName.toLowerCase();\r\n\r\n        if ( \"area\" === nodeName ) {\r\n            map = element.parentNode;\r\n            mapName = map.name;\r\n            if ( !element.href || !mapName || map.nodeName.toLowerCase() !== \"map\" ) {\r\n                return false;\r\n            }\r\n            img = $( \"img[usemap='#\" + mapName + \"']\" );\r\n            return img.length > 0 && img.is( \":visible\" );\r\n        }\r\n\r\n        if ( /^(input|select|textarea|button|object)$/.test( nodeName ) ) {\r\n            focusableIfVisible = !element.disabled;\r\n\r\n            if ( focusableIfVisible ) {\r\n\r\n                // Form controls within a disabled fieldset are disabled.\r\n                // However, controls within the fieldset's legend do not get disabled.\r\n                // Since controls generally aren't placed inside legends, we skip\r\n                // this portion of the check.\r\n                fieldset = $( element ).closest( \"fieldset\" )[ 0 ];\r\n                if ( fieldset ) {\r\n                    focusableIfVisible = !fieldset.disabled;\r\n                }\r\n            }\r\n        } else if ( \"a\" === nodeName ) {\r\n            focusableIfVisible = element.href || hasTabindex;\r\n        } else {\r\n            focusableIfVisible = hasTabindex;\r\n        }\r\n\r\n        return focusableIfVisible && $( element ).is( \":visible\" ) && visible( $( element ) );\r\n    };\r\n\r\n\r\n   var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi;\r\n \r\n    /*   \r\n     * Get the HTML contents of the first element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} html\r\n     */\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html)) {\r\n                html = html.replace( rxhtmlTag, \"<$1></$2>\" );\r\n            }\r\n            if (langx.isString(html) || langx.isNumber(html)) {               \r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isChildOf(node, parent, directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a document.\r\n     * @param {Node} node\r\n     */\r\n    function isDocument(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is in the document\r\n     * @param {Node} node\r\n     */\r\n    function isInDocument(node) {\r\n      return (node === document.body) ? true : document.body.contains(node);\r\n    }        \r\n\r\n    var blockNodes = [\"div\", \"p\", \"ul\", \"ol\", \"li\", \"blockquote\", \"hr\", \"pre\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"table\"];\r\n\r\n    function isBlockNode(node) {\r\n        if (!node || node.nodeType === 3) {\r\n          return false;\r\n        }\r\n        return new RegExp(\"^(\" + (blockNodes.join('|')) + \")$\").test(node.nodeName.toLowerCase());\r\n    }\r\n\r\n    function isActive (elem) {\r\n            return elem === document.activeElement && (elem.type || elem.href);\r\n    }\r\n\r\n    /*   \r\n     * Get the owner document object for the specified element.\r\n     * @param {Node} elm\r\n     */\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return doc.defaultView || doc.parentWindow;\r\n    }\r\n\r\n    /*   \r\n     * insert one or more nodes as the first children of the specified node.\r\n     * @param {Node} node\r\n     * @param {Node or ArrayLike} placing\r\n     * @param {Boolean Optional} copyByClone\r\n     */\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && document.defaultView.getComputedStyle(parent).position == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    /*   \r\n     * Remove the set of matched elements from the DOM.\r\n     * @param {Node} node\r\n     */\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n                node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\", e);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function removeChild(node,children) {\r\n        if (!langx.isArrayLike(children)) {\r\n            children = [children];\r\n        }\r\n        for (var i=0;i<children.length;i++) {\r\n            node.removeChild(children[i]);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollParent( elm, includeHidden ) {\r\n        var position = document.defaultView.getComputedStyle(elm).position,\r\n            excludeStaticParent = position === \"absolute\",\r\n            overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n            scrollParent = this.parents().filter( function() {\r\n                var parent = $( this );\r\n                if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                    return false;\r\n                }\r\n                return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                    parent.css( \"overflow-x\" ) );\r\n            } ).eq( 0 );\r\n\r\n        return position === \"fixed\" || !scrollParent.length ?\r\n            $( this[ 0 ].ownerDocument || document ) :\r\n            scrollParent;\r\n    };\r\n\r\n\r\n    function reflow(elm) {\r\n        if (el == null) {\r\n          elm = document;\r\n        }\r\n        elm.offsetHeight;\r\n\r\n        return this;      \r\n    }\r\n\r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {Node} node\r\n     * @param {Node} oldNode\r\n     */\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n\r\n    function selectable(elem, selectable) {\r\n        if (elem === undefined || elem.style === undefined)\r\n            return;\r\n        elem.onselectstart = selectable ? function () {\r\n            return false;\r\n        } : function () {\r\n        };\r\n        elem.style.MozUserSelect = selectable ? 'auto' : 'none';\r\n        elem.style.KhtmlUserSelect = selectable ? 'auto' : 'none';\r\n        elem.unselectable = selectable ? 'on' : 'off';\r\n    }\r\n\r\n    /*   \r\n     * traverse the specified node and its descendants, perform the callback function on each\r\n     * @param {Node} node\r\n     * @param {Function} fn\r\n     */\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} node\r\n     */\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around each element in the set of matched elements.\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around the content of each element in the set of matched\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Remove the parents of the set of matched elements from the DOM, leaving the matched\r\n     * @param {Node} node\r\n     */\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        active  : activeElement,\r\n\r\n        after: after,\r\n\r\n        append: append,\r\n\r\n        before: before,\r\n\r\n        blur : function(el) {\r\n            el.blur();\r\n        },\r\n\r\n        body: function() {\r\n            return document.body;\r\n        },\r\n\r\n        clone: clone,\r\n\r\n        contains: contains,\r\n\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n     \r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        fullScreen: fullScreen,\r\n\r\n        focusable: focusable,\r\n\r\n        html: html,\r\n\r\n        isActive,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDocument: isDocument,\r\n\r\n        isInDocument: isInDocument,\r\n\r\n        isWindow: langx.isWindow,\r\n\r\n        nodeName : nodeName,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow: ownerWindow,\r\n\r\n        prepend: prepend,\r\n\r\n        reflow: reflow,\r\n\r\n        remove: remove,\r\n\r\n        removeChild : removeChild,\r\n\r\n        replace: replace,\r\n\r\n        selectable,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.attach(\"domx.noder\" , noder);\r\n});\ndefine('skylark-domx-noder/main',[\r\n\t\"./noder\"\r\n],function(noder){\r\n\treturn noder;\r\n});\ndefine('skylark-domx-noder', ['skylark-domx-noder/main'], function (main) { return main; });\n\ndefine('skylark-domx-finder/finder',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-noder\"\r\n], function(skylark, langx, browser, noder) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        rinputs = /^(?:input|select|textarea|button)$/i,\r\n        rheader = /^h\\d$/i,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    var pseudos = local.pseudos = {\r\n        // custom pseudos\r\n        \"button\": function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === \"button\" || name === \"button\";\r\n        },\r\n\r\n        'checked': function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        'contains': function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        'eq': function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'even': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 0;\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        'focusable': function( elm ) {\r\n            return noder.focusable(elm, elm.tabindex != null );\r\n        },\r\n\r\n        'first': function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        'gt': function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        'has': function(elm, idx, nodes, sel) {\r\n            return find(elm, sel);\r\n        },\r\n\r\n        // Element/input types\r\n        \"header\": function(elem) {\r\n            return rheader.test(elem.nodeName);\r\n        },\r\n\r\n        'hidden': function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        \"input\": function(elem) {\r\n            return rinputs.test(elem.nodeName);\r\n        },\r\n\r\n        'last': function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        'lt': function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        'not': function(elm, idx, nodes, sel) {\r\n            return !matches(elm, sel);\r\n        },\r\n\r\n        'odd': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 1;\r\n        },\r\n\r\n        /*   \r\n         * Get the parent of each element in the current set of matched elements.\r\n         * @param {Object} elm\r\n         */\r\n        'parent': function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        'selected': function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        'tabbable': function(elm) {\r\n            var tabIndex = elm.tabindex,\r\n                hasTabindex = tabIndex != null;\r\n            return ( !hasTabindex || tabIndex >= 0 ) && noder.focusable( element, hasTabindex );\r\n        },\r\n\r\n        'text': function(elm) {\r\n            return elm.type === \"text\";\r\n        },\r\n\r\n        'visible': function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        },\r\n        'empty': function(elm) {\r\n            return !elm.hasChildNodes();\r\n        }\r\n    };\r\n\r\n    [\"first\", \"eq\", \"last\"].forEach(function(item) {\r\n        pseudos[item].isArrayFilter = true;\r\n    });\r\n\r\n\r\n\r\n    pseudos[\"nth\"] = pseudos[\"eq\"];\r\n\r\n    function createInputPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === type;\r\n        };\r\n    }\r\n\r\n    function createButtonPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return (name === \"input\" || name === \"button\") && elem.type === type;\r\n        };\r\n    }\r\n\r\n    // Add button/input type pseudos\r\n    for (i in {\r\n        radio: true,\r\n        checkbox: true,\r\n        file: true,\r\n        password: true,\r\n        image: true\r\n    }) {\r\n        pseudos[i] = createInputPseudo(i);\r\n    }\r\n    for (i in {\r\n        submit: true,\r\n        reset: true\r\n    }) {\r\n        pseudos[i] = createButtonPseudo(i);\r\n    }\r\n\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value) + \"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            if (tag !== \"*\") {\r\n                nativeSelector = tag.toUpperCase() + nativeSelector;\r\n            }\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes, arrayFilte) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos,\r\n\r\n            i, part, cls, pseudo;\r\n\r\n        if (!arrayFilte) {\r\n            if (tag = cond.tag) {\r\n                var nodeName = node.nodeName.toUpperCase();\r\n                if (tag == '*') {\r\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n                } else {\r\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n                }\r\n            }\r\n\r\n            if (id = cond.id) {\r\n                if (node.getAttribute('id') != id) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (classes = cond.classes) {\r\n                for (i = classes.length; i--;) {\r\n                    cls = node.getAttribute('class');\r\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\r\n                }\r\n            }\r\n\r\n            if (attributes = cond.attributes) {\r\n                for (i = attributes.length; i--;) {\r\n                    part = attributes[i];\r\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\r\n                        if (!pseudo(node, idx, nodes, part.value)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            parsed = selector;\r\n        }\r\n\r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i,\r\n            currentExpression;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node, exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    local.filterSingle = function(nodes, exp) {\r\n        var matchs = filter.call(nodes, function(node, idx) {\r\n            return local.check(node, exp, idx, nodes, false);\r\n        });\r\n\r\n        matchs = filter.call(matchs, function(node, idx) {\r\n            return local.check(node, exp, idx, matchs, true);\r\n        });\r\n        return matchs;\r\n    };\r\n\r\n    local.filter = function(nodes, selector) {\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            return local.filterSingle(nodes, selector);\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            i,\r\n            currentExpression,\r\n            ret = [];\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n\r\n                var matchs = local.filterSingle(nodes, exp);\r\n\r\n                ret = langx.uniq(ret.concat(matchs));\r\n            } else {\r\n                throw new Error(\"not supported selector:\" + selector);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n\r\n    };\r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, false)\r\n                        });\r\n\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, true)\r\n                        });\r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n    /*\r\n     * Get the nearest ancestor of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the ancestors of the specitied element , optionally filtered by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestors(node, selector, root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while ((node = node.parentNode) && (node.nodeType !== 9)) {\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (langx.isArrayLike(root)) {\r\n                    if (langx.inArray(node,root)>-1) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n            if (!selector || matches(node, selector)) {\r\n              ret.push(node); \r\n            }\r\n        }\r\n\r\n        //if (selector) {\r\n        //    ret = local.filter(ret, selector);\r\n        //}\r\n        return ret;\r\n    }\r\n\r\n\r\n    /*\r\n     * Returns a element by its ID.\r\n     * @param {string} id\r\n     */\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    /*\r\n     * Get the children of the specified element , optionally filtered by a selector.\r\n     * @param {string} node\r\n     * @param {String optionlly} selector\r\n     */\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    /*\r\n     * Get the decendant of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the nearest decendent of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the descendants of each element in the current set of matched elements, filtered by a selector, jQuery object, or element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function find(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        if (matches(elm, selector)) {\r\n            return elm;\r\n        } else {\r\n            return descendant(elm, selector);\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the findAll of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function findAll(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        return descendants(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the first child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String} first\r\n     */\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the last child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String } last\r\n     */\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Check the specified element against a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm, selector) > -1;\r\n        } else if (langx.isPlainObject(selector)) {\r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Get the nearest next sibing of the specitied element , optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional} adjacent\r\n     */\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the next siblings of the specified element , optional filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Get the parent element of the specified element. if a selector is provided, it retrieves the parent element only if it matches that selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get hte nearest previous sibling of the specified element ,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional } adjacent\r\n     */\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get all preceding siblings of each element in the set of matched elements, optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Selects all sibling elements that follow after the “prev” element, have the same parent, and match the filtering “siblings” selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling,\r\n\r\n        previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return skylark.attach(\"domx.finder\", finder);\r\n});\ndefine('skylark-domx-finder/main',[\r\n\t\"./finder\"\r\n],function(finder){\r\n\r\n\treturn finder;\r\n});\ndefine('skylark-domx-finder', ['skylark-domx-finder/main'], function (main) { return main; });\n\ndefine('skylark-domx-data/data',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-noder\"\r\n], function(skylark, langx, finder,noder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n\r\n    // Strip and collapse whitespace according to HTML spec\r\n    function stripAndCollapse( value ) {\r\n      var tokens = value.match( /[^\\x20\\t\\r\\n\\f]+/g ) || [];\r\n      return tokens.join( \" \" );\r\n    }\r\n\r\n\r\n    var valHooks = {\r\n      option: {\r\n        get: function( elem ) {\r\n          var val = elem.getAttribute( \"value\" );\r\n          return val != null ?  val :  stripAndCollapse(text( elem ) );\r\n        }\r\n      },\r\n      select: {\r\n        get: function( elem ) {\r\n          var value, option, i,\r\n            options = elem.options,\r\n            index = elem.selectedIndex,\r\n            one = elem.type === \"select-one\",\r\n            values = one ? null : [],\r\n            max = one ? index + 1 : options.length;\r\n\r\n          if ( index < 0 ) {\r\n            i = max;\r\n\r\n          } else {\r\n            i = one ? index : 0;\r\n          }\r\n\r\n          // Loop through all the selected options\r\n          for ( ; i < max; i++ ) {\r\n            option = options[ i ];\r\n\r\n            if ( option.selected &&\r\n\r\n                // Don't return options that are disabled or in a disabled optgroup\r\n                !option.disabled &&\r\n                ( !option.parentNode.disabled ||\r\n                  !noder.nodeName( option.parentNode, \"optgroup\" ) ) ) {\r\n\r\n              // Get the specific value for the option\r\n              value = val(option);\r\n\r\n              // We don't need an array for one selects\r\n              if ( one ) {\r\n                return value;\r\n              }\r\n\r\n              // Multi-Selects return an array\r\n              values.push( value );\r\n            }\r\n          }\r\n\r\n          return values;\r\n        },\r\n\r\n        set: function( elem, value ) {\r\n          var optionSet, option,\r\n            options = elem.options,\r\n            values = langx.makeArray( value ),\r\n            i = options.length;\r\n\r\n          while ( i-- ) {\r\n            option = options[ i ];\r\n\r\n            /* eslint-disable no-cond-assign */\r\n\r\n            if ( option.selected =\r\n              langx.inArray( valHooks.option.get( option ), values ) > -1\r\n            ) {\r\n              optionSet = true;\r\n            }\r\n\r\n            /* eslint-enable no-cond-assign */\r\n          }\r\n\r\n          // Force browsers to behave consistently when non-matching value is set\r\n          if ( !optionSet ) {\r\n            elem.selectedIndex = -1;\r\n          }\r\n          return values;\r\n        }\r\n      }\r\n    };\r\n\r\n\r\n    // Radios and checkboxes getter/setter\r\n    langx.each( [ \"radio\", \"checkbox\" ], function() {\r\n      valHooks[ this ] = {\r\n        set: function( elem, value ) {\r\n          if ( langx.isArray( value ) ) {\r\n            return ( elem.checked = langx.inArray( val(elem), value ) > -1 );\r\n          }\r\n        }\r\n      };\r\n    });\r\n\r\n\r\n\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function aria(elm, name, value) {\r\n        return this.attr(elm, \"aria-\" + name, value);\r\n    }\r\n\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return elm.getAttribute ? elm.getAttribute(name) : elm[name];\r\n            }\r\n        } else {\r\n            elm.setAttribute ? elm.setAttribute(name, value) : elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    /*\r\n     *  Read all \"data-*\" attributes from a node\r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    /*\r\n     * xxx\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    } \r\n    /*\r\n     * Remove from the element all items that have not yet been run. \r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function cleanData(elm) {\r\n        if (elm[\"_$_store\"]) {\r\n            delete elm[\"_$_store\"];\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Remove a previously-stored piece of data. \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function removeData(elm, names) {\r\n        if (names) {\r\n            if (langx.isString(names)) {\r\n                names = names.split(/\\s+/);\r\n            }\r\n            var store = _store(elm, true);\r\n            names.forEach(function(name) {\r\n                delete store[name];\r\n            });            \r\n        } else {\r\n            cleanData(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * xxx \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    /*\r\n     * Get or set the value of an property for the specified element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * remove Attributes  \r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n\r\n    /*\r\n     * Remove the value of a property for the first element in the set of matched elements or set one or more properties for every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Get the combined text contents of each element in the set of matched elements, including their descendants, or set the text contents of the matched elements.  \r\n     * @param {Object} elm  \r\n     * @param {String} txt\r\n     */\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Get the current value of the first element in the set of matched elements or set the value of every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} value\r\n     */\r\n    function val(elm, value) {\r\n        var hooks = valHooks[ elm.type ] || valHooks[ elm.nodeName.toLowerCase() ];\r\n        if (value === undefined) {\r\n/*\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                if (/input|textarea/i.test(elm.tagName)) {\r\n                  return elm.value;\r\n                }\r\n                return text(elm);\r\n            }\r\n*/\r\n\r\n          if ( hooks &&  \"get\" in hooks &&  ( ret = hooks.get( elm, \"value\" ) ) !== undefined ) {\r\n            return ret;\r\n          }\r\n\r\n          ret = elm.value;\r\n\r\n          // Handle most common string cases\r\n          if ( typeof ret === \"string\" ) {\r\n            return ret.replace( /\\r/g, \"\" );\r\n          }\r\n\r\n          // Handle cases where value is null/undef or number\r\n          return ret == null ? \"\" : ret;\r\n\r\n        } else {\r\n/*          \r\n            if (/input|textarea/i.test(elm.tagName)) {\r\n              elm.value = value;\r\n            } else {\r\n              text(elm,value);\r\n            }\r\n            return this;\r\n*/\r\n          // Treat null/undefined as \"\"; convert numbers to string\r\n          if ( value == null ) {\r\n            value = \"\";\r\n\r\n          } else if ( typeof value === \"number\" ) {\r\n            value += \"\";\r\n\r\n          } else if ( langx.isArray( value ) ) {\r\n            value = langx.map( value, function( value1 ) {\r\n              return value1 == null ? \"\" : value1 + \"\";\r\n            } );\r\n          }\r\n\r\n          // If set returns undefined, fall back to normal setting\r\n          if ( !hooks || !( \"set\" in hooks ) || hooks.set( elm, value, \"value\" ) === undefined ) {\r\n            elm.value = value;\r\n          }\r\n        }      \r\n    }\r\n\r\n\r\n    finder.pseudos.data = function( elem, i, match,dataName ) {\r\n        return !!data( elem, dataName || match[3]);\r\n    };\r\n   \r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        aria: aria,\r\n\r\n        attr: attr,\r\n\r\n        cleanData: cleanData,\r\n\r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val,\r\n\r\n        valHooks : valHooks\r\n    });\r\n\r\n    return skylark.attach(\"domx.data\", datax);\r\n});\ndefine('skylark-domx-query/query',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-finder\"\r\n], function(skylark, langx, noder, finder) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        indexOf = Array.prototype.indexOf,\r\n        sort = Array.prototype.sort,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_node_operation(func, context, oldValueFunc) {\r\n        return function(html) {\r\n            var argType, nodes = langx.map(arguments, function(arg) {\r\n                argType = type(arg)\r\n                return argType == \"function\" || argType == \"object\" || argType == \"array\" || arg == null ?\r\n                    arg : noder.createFragment(arg)\r\n            });\r\n            if (nodes.length < 1) {\r\n                return this\r\n            }\r\n            this.each(function(idx) {\r\n                func.apply(context, [this, nodes, idx > 0]);\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = langx.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return query(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                } else {\r\n                    return [];\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            //if (selector === undefined) { //TODO : needs confirm?\r\n            //    selector = util;\r\n            //    util = undefined;\r\n            //}\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) { // TODO\r\n                //if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                //} else {\r\n                //    return [];\r\n                //}\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx,node) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, newArg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this;\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem,name,newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        if (langx.isString(context)) {\r\n                            context = finder.find(context);\r\n                        }\r\n\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (selector !== window && isArrayLike(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    });\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                $.ready(function() {\r\n                    selector($);\r\n                });\r\n                return rootQuery;\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        },rootQuery = $(document);\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n            length : 0,\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            forEach: function() {\r\n                return forEach.apply(this,arguments);\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            indexOf: function() {\r\n                return indexOf.apply(this,arguments);\r\n            },\r\n\r\n            sort : function() {\r\n                return sort.apply(this,arguments);\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            //remove: wrapper_every_act(noder.remove, noder),\r\n            remove : function(selector) {\r\n                if (selector) {\r\n                    return this.find(selector).remove();\r\n                }\r\n                this.each(function(i,node){\r\n                    noder.remove(node);\r\n                });\r\n                return this;\r\n            },\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                if (this.length > 0) {\r\n                    var self = this;\r\n                    if (langx.isString(selector)) {\r\n                        return some.call(self,function(elem) {\r\n                            return finder.matches(elem, selector);\r\n                        });\r\n                    } else if (langx.isArrayLike(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return langx.inArray(elem, selector) > -1;\r\n                        });\r\n                    } else if (langx.isHtmlNode(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return elem ==  selector;\r\n                        });\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            \r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx,node) {\r\n                        if (!selector.call(this, idx,node)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            html: wrapper_value(noder.html, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            pushStack : function(elms) {\r\n                var ret = $(elms);\r\n                ret.prevObject = this;\r\n                return ret;\r\n            },\r\n            \r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(html) {\r\n                /*\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index,node) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index,node) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n                */\r\n                var htmlIsFunction = typeof html === \"function\";\r\n\r\n                return this.each( function( i ) {\r\n                    $( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );\r\n                } );                \r\n            },\r\n\r\n            wrapAll: function(html) {\r\n                /*\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n                */\r\n                var wrap;\r\n\r\n                if ( this[ 0 ] ) {\r\n                    if ( typeof html === \"function\" ) {\r\n                        html = html.call( this[ 0 ] );\r\n                    }\r\n\r\n                    // The elements to wrap the target around\r\n                    wrap = $( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\r\n\r\n                    if ( this[ 0 ].parentNode ) {\r\n                        wrap.insertBefore( this[ 0 ] );\r\n                    }\r\n\r\n                    wrap.map( function() {\r\n                        var elem = this;\r\n\r\n                        while ( elem.firstElementChild ) {\r\n                            elem = elem.firstElementChild;\r\n                        }\r\n\r\n                        return elem;\r\n                    } ).append( this );\r\n                }\r\n\r\n                return this;\r\n\r\n            },\r\n\r\n            wrapInner: function(html) {\r\n                /*\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index,node) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index,node) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n                */\r\n                if ( typeof html === \"function\" ) {\r\n                    return this.each( function( i ) {\r\n                        $( this ).wrapInner( html.call( this, i ) );\r\n                    } );\r\n                }\r\n\r\n                return this.each( function() {\r\n                    var self = $( this ),\r\n                        contents = self.contents();\r\n\r\n                    if ( contents.length ) {\r\n                        contents.wrapAll( html );\r\n\r\n                    } else {\r\n                        self.append( html );\r\n                    }\r\n                } );\r\n\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                /*\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n                */\r\n                this.parent(selector).not(\"body\").each( function() {\r\n                    $(this).replaceWith(this.childNodes);\r\n                });\r\n                return this;\r\n\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSiblings, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            }\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n        $.fn.hover = function(fnOver, fnOut) {\r\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n        };\r\n\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n\r\n        langx.each( {\r\n            appendTo: \"append\",\r\n            prependTo: \"prepend\",\r\n            insertBefore: \"before\",\r\n            insertAfter: \"after\",\r\n            replaceAll: \"replaceWith\"\r\n        }, function( name, original ) {\r\n            $.fn[ name ] = function( selector ) {\r\n                var elems,\r\n                    ret = [],\r\n                    insert = $( selector ),\r\n                    last = insert.length - 1,\r\n                    i = 0;\r\n\r\n                for ( ; i <= last; i++ ) {\r\n                    elems = i === last ? this : this.clone( true );\r\n                    $( insert[ i ] )[ original ]( elems );\r\n\r\n                    // Support: Android <=4.0 only, PhantomJS 1 only\r\n                    // .get() because push.apply(_, arraylike) throws on ancient WebKit\r\n                    push.apply( ret, elems.get() );\r\n                }\r\n\r\n                return this.pushStack( ret );\r\n            };\r\n        } );\r\n\r\n/*\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceAll = function(selector) {\r\n            $(selector).replaceWith(this);\r\n            return this;\r\n        };\r\n*/\r\n        return $;\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.scrollParent = function( includeHidden ) {\r\n            var position = this.css( \"position\" ),\r\n                excludeStaticParent = position === \"absolute\",\r\n                overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n                scrollParent = this.parents().filter( function() {\r\n                    var parent = $( this );\r\n                    if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                        return false;\r\n                    }\r\n                    return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                        parent.css( \"overflow-x\" ) );\r\n                } ).eq( 0 );\r\n\r\n            return position === \"fixed\" || !scrollParent.length ?\r\n                $( this[ 0 ].ownerDocument || document ) :\r\n                scrollParent;\r\n        };\r\n\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings,prev,prevAll,next,nextAll'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n\r\n\r\n        $.fn.disableSelection = ( function() {\r\n            var eventType = \"onselectstart\" in document.createElement( \"div\" ) ?\r\n                \"selectstart\" :\r\n                \"mousedown\";\r\n\r\n            return function() {\r\n                return this.on( eventType + \".ui-disableSelection\", function( event ) {\r\n                    event.preventDefault();\r\n                } );\r\n            };\r\n        } )();\r\n\r\n        $.fn.enableSelection = function() {\r\n            return this.off( \".ui-disableSelection\" );\r\n        };\r\n\r\n        $.fn.reflow = function() {\r\n            return noder.flow(this[0]);\r\n        };\r\n\r\n        $.fn.isBlockNode = function() {\r\n            return noder.isBlockNode(this[0]);\r\n        };\r\n       \r\n\r\n    })(query);\r\n\r\n    query.fn.plugin = function(name,options) {\r\n        var args = slice.call( arguments, 1 ),\r\n            self = this,\r\n            returnValue = this;\r\n\r\n        this.each(function(){\r\n            returnValue = plugins.instantiate.apply(self,[this,name].concat(args));\r\n        });\r\n        return returnValue;\r\n    };\r\n\r\n\r\n    query.wraps = {\r\n        wrapper_node_operation,\r\n        wrapper_map,\r\n        wrapper_value,\r\n        wrapper_selector,\r\n        wrapper_some_chk,\r\n        wrapper_selector_until,\r\n        wrapper_every_act_firstArgFunc,\r\n        wrapper_every_act,\r\n        wrapper_name_value\r\n\r\n    };\r\n\r\n    return skylark.attach(\"domx.query\", query);\r\n\r\n});\ndefine('skylark-domx-query/main',[\r\n\t\"./query\"\r\n],function(query){\r\n\treturn query;\r\n});\ndefine('skylark-domx-query', ['skylark-domx-query/main'], function (main) { return main; });\n\ndefine('skylark-domx-velm/velm',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-query\"\r\n], function(skylark, langx, noder, finder, $) {\r\n    var map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n    /*\r\n     * VisualElement is a skylark class type wrapping a visule dom node,\r\n     * provides a number of prototype methods and supports chain calls.\r\n     */\r\n    var VisualElement = langx.klass({\r\n        klassName: \"VisualElement\",\r\n\r\n        \"_construct\": function(node) {\r\n            if (langx.isString(node)) {\r\n                if (node.charAt(0) === \"<\") {\r\n                    //html\r\n                    node = noder.createFragment(node)[0];\r\n                } else {\r\n                    // id\r\n                    node = document.getElementById(node);\r\n                }\r\n            }\r\n            this._elm = node;\r\n        }\r\n    });\r\n\r\n    VisualElement.prototype.$ = VisualElement.prototype.query = function(selector) {\r\n        return $(selector,this._elm);\r\n    };\r\n\r\n    VisualElement.prototype.elm = function() {\r\n        return this._elm;\r\n    };\r\n\r\n    /*\r\n     * the VisualElement object wrapping document.body\r\n     */\r\n    var root = new VisualElement(document.body),\r\n        velm = function(node) {\r\n            if (node) {\r\n                return new VisualElement(node);\r\n            } else {\r\n                return root;\r\n            }\r\n        };\r\n    /*\r\n     * Extend VisualElement prototype with wrapping the specified methods.\r\n     * @param {ArrayLike} fn\r\n     * @param {Object} context\r\n     */\r\n    function _delegator(fn, context) {\r\n        return function() {\r\n            var self = this,\r\n                elem = self._elm,\r\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\r\n\r\n            if (ret) {\r\n                if (ret === context) {\r\n                    return self;\r\n                } else {\r\n                    if (ret instanceof HTMLElement) {\r\n                        ret = new VisualElement(ret);\r\n                    } else if (langx.isArrayLike(ret)) {\r\n                        ret = map.call(ret, function(el) {\r\n                            if (el instanceof HTMLElement) {\r\n                                return new VisualElement(el);\r\n                            } else {\r\n                                return el;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n    }\r\n\r\n    langx.mixin(velm, {\r\n        batch: function(nodes, action, args) {\r\n            nodes.forEach(function(node) {\r\n                var elm = (node instanceof VisualElement) ? node : velm(node);\r\n                elm[action].apply(elm, args);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        root: new VisualElement(document.body),\r\n\r\n        VisualElement: VisualElement,\r\n\r\n        partial: function(name, fn) {\r\n            var props = {};\r\n\r\n            props[name] = fn;\r\n\r\n            VisualElement.partial(props);\r\n        },\r\n\r\n        delegate: function(names, context) {\r\n            var props = {};\r\n\r\n            names.forEach(function(name) {\r\n                props[name] = _delegator(context[name], context);\r\n            });\r\n\r\n            VisualElement.partial(props);\r\n        }\r\n    });\r\n\r\n    // from ./finder\r\n    velm.delegate([\r\n        \"ancestor\",\r\n        \"ancestors\",\r\n        \"children\",\r\n        \"descendant\",\r\n        \"find\",\r\n        \"findAll\",\r\n        \"firstChild\",\r\n        \"lastChild\",\r\n        \"matches\",\r\n        \"nextSibling\",\r\n        \"nextSiblings\",\r\n        \"parent\",\r\n        \"previousSibling\",\r\n        \"previousSiblings\",\r\n        \"siblings\"\r\n    ], finder);\r\n\r\n    /*\r\n     * find a dom element matched by the specified selector.\r\n     * @param {String} selector\r\n     */\r\n    velm.find = function(selector) {\r\n        if (selector === \"body\") {\r\n            return this.root;\r\n        } else {\r\n            return this.root.descendant(selector);\r\n        }\r\n    };\r\n\r\n\r\n    // from ./noder\r\n    velm.delegate([\r\n        \"after\",\r\n        \"append\",\r\n        \"before\",\r\n        \"clone\",\r\n        \"contains\",\r\n        \"contents\",\r\n        \"empty\",\r\n        \"html\",\r\n        \"isChildOf\",\r\n        \"isDocument\",\r\n        \"isInDocument\",\r\n        \"isWindow\",\r\n        \"ownerDoc\",\r\n        \"prepend\",\r\n        \"remove\",\r\n        \"removeChild\",\r\n        \"replace\",\r\n        \"reverse\",\r\n        \"throb\",\r\n        \"traverse\",\r\n        \"wrapper\",\r\n        \"wrapperInner\",\r\n        \"unwrap\"\r\n    ], noder);\r\n\r\n\r\n    return skylark.attach(\"domx.velm\", velm);\r\n});\ndefine('skylark-domx-velm/main',[\r\n\t\"./velm\"\r\n],function(velm){\r\n\treturn velm;\r\n});\ndefine('skylark-domx-velm', ['skylark-domx-velm/main'], function (main) { return main; });\n\ndefine('skylark-domx-data/main',[\r\n    \"./data\",\r\n    \"skylark-domx-velm\",\r\n    \"skylark-domx-query\"    \r\n],function(data,velm,$){\r\n    // from ./data\r\n    velm.delegate([\r\n        \"attr\",\r\n        \"data\",\r\n        \"prop\",\r\n        \"removeAttr\",\r\n        \"removeData\",\r\n        \"text\",\r\n        \"val\"\r\n    ], data);\r\n\r\n    $.fn.text = $.wraps.wrapper_value(data.text, data, data.text);\r\n\r\n    $.fn.attr = $.wraps.wrapper_name_value(data.attr, data, data.attr);\r\n\r\n    $.fn.removeAttr = $.wraps.wrapper_every_act(data.removeAttr, data);\r\n\r\n    $.fn.prop = $.wraps.wrapper_name_value(data.prop, data, data.prop);\r\n\r\n    $.fn.removeProp = $.wraps.wrapper_every_act(data.removeProp, data);\r\n\r\n    $.fn.data = $.wraps.wrapper_name_value(data.data, data);\r\n\r\n    $.fn.removeData = $.wraps.wrapper_every_act(data.removeData);\r\n\r\n    $.fn.val = $.wraps.wrapper_value(data.val, data, data.val);\r\n\r\n\r\n    return data;\r\n});\ndefine('skylark-domx-data', ['skylark-domx-data/main'], function (main) { return main; });\n\ndefine('skylark-domx-eventer/eventer',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-data\"\r\n], function(skylark, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n\r\n    var NativeEventCtors = [\r\n            window[\"CustomEvent\"], // 0 default\r\n            window[\"CompositionEvent\"], // 1\r\n            window[\"DragEvent\"], // 2\r\n            window[\"Event\"], // 3\r\n            window[\"FocusEvent\"], // 4\r\n            window[\"KeyboardEvent\"], // 5\r\n            window[\"MessageEvent\"], // 6\r\n            window[\"MouseEvent\"], // 7\r\n            window[\"MouseScrollEvent\"], // 8\r\n            window[\"MouseWheelEvent\"], // 9\r\n            window[\"MutationEvent\"], // 10\r\n            window[\"ProgressEvent\"], // 11\r\n            window[\"TextEvent\"], // 12\r\n            window[\"TouchEvent\"], // 13\r\n            window[\"UIEvent\"], // 14\r\n            window[\"WheelEvent\"], // 15\r\n            window[\"ClipboardEvent\"] // 16\r\n        ],\r\n        NativeEvents = {\r\n            \"compositionstart\": 1, // CompositionEvent\r\n            \"compositionend\": 1, // CompositionEvent\r\n            \"compositionupdate\": 1, // CompositionEvent\r\n\r\n            \"beforecopy\": 16, // ClipboardEvent\r\n            \"beforecut\": 16, // ClipboardEvent\r\n            \"beforepaste\": 16, // ClipboardEvent\r\n            \"copy\": 16, // ClipboardEvent\r\n            \"cut\": 16, // ClipboardEvent\r\n            \"paste\": 16, // ClipboardEvent\r\n\r\n            \"drag\": 2, // DragEvent\r\n            \"dragend\": 2, // DragEvent\r\n            \"dragenter\": 2, // DragEvent\r\n            \"dragexit\": 2, // DragEvent\r\n            \"dragleave\": 2, // DragEvent\r\n            \"dragover\": 2, // DragEvent\r\n            \"dragstart\": 2, // DragEvent\r\n            \"drop\": 2, // DragEvent\r\n\r\n            \"abort\": 3, // Event\r\n            \"change\": 3, // Event\r\n            \"error\": 3, // Event\r\n            \"selectionchange\": 3, // Event\r\n            \"submit\": 3, // Event\r\n            \"reset\": 3, // Event\r\n\r\n            \"focus\": 4, // FocusEvent\r\n            \"blur\": 4, // FocusEvent\r\n            \"focusin\": 4, // FocusEvent\r\n            \"focusout\": 4, // FocusEvent\r\n\r\n            \"keydown\": 5, // KeyboardEvent\r\n            \"keypress\": 5, // KeyboardEvent\r\n            \"keyup\": 5, // KeyboardEvent\r\n\r\n            \"message\": 6, // MessageEvent\r\n\r\n            \"click\": 7, // MouseEvent\r\n            \"contextmenu\": 7, // MouseEvent\r\n            \"dblclick\": 7, // MouseEvent\r\n            \"mousedown\": 7, // MouseEvent\r\n            \"mouseup\": 7, // MouseEvent\r\n            \"mousemove\": 7, // MouseEvent\r\n            \"mouseover\": 7, // MouseEvent\r\n            \"mouseout\": 7, // MouseEvent\r\n            \"mouseenter\": 7, // MouseEvent\r\n            \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n            \"textInput\": 12, // TextEvent\r\n\r\n            \"touchstart\": 13, // TouchEvent\r\n            \"touchmove\": 13, // TouchEvent\r\n            \"touchend\": 13, // TouchEvent\r\n\r\n            \"load\": 14, // UIEvent\r\n            \"resize\": 14, // UIEvent\r\n            \"select\": 14, // UIEvent\r\n            \"scroll\": 14, // UIEvent\r\n            \"unload\": 14, // UIEvent,\r\n\r\n            \"wheel\": 15 // WheelEvent\r\n        };\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return NativeEventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type || {};\r\n                type = props.type || \"\";\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(src, props) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: src\r\n            };\r\n        for (key in src) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && src[key] !== undefined) {\r\n                proxy[key] = src[key];\r\n            }\r\n        }\r\n        if (props) {\r\n            langx.mixin(proxy, props);\r\n        }\r\n        return compatible(proxy, src);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings, function(idx, binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns && options.ns.indexOf(ns) === -1) {\r\n                                return;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            var originalEvent = self._event;\r\n                            if (originalEvent in hover) {\r\n                                var related = e.relatedTarget;\r\n                                if (related && (related === match || noder.contains(match, related))) {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n                    /*\r\n                                        if (event in hover) {\r\n                                            var l = self._listener;\r\n                                            self._listener = function(e) {\r\n                                                var related = e.relatedTarget;\r\n                                                if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                                    return l.apply(this, arguments);\r\n                                                }\r\n                                            }\r\n                                        }\r\n                    */\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                if (event) {\r\n                    var listener = events[event];\r\n\r\n                    if (listener) {\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                } else {\r\n                    //remove all events\r\n                    for (event in events) {\r\n                        var listener = events[event];\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    /*   \r\n     * Remove an event handler for one or more events from the specified element.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional } selector\r\n     * @param {Function} callback\r\n     */\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach an event handler function for one or more events to the selected elements.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     * @param {Boolean　Optional} one\r\n     */\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach a handler to an event for the elements. The handler is executed at most once per \r\n     * @param {HTMLElement} elm  \r\n     * @param {String} event\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     */\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Prevents propagation and clobbers the default action of the passed event. The same as calling event.preventDefault() and event.stopPropagation(). \r\n     * @param {String} event\r\n     */\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Execute all handlers and behaviors attached to the matched elements for the given event  \r\n     * @param {String} evented\r\n     * @param {String} type\r\n     * @param {Array or PlainObject } args\r\n     */\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        var fn = (evented.dispatchEvent || evented.trigger);\r\n        if (fn) {\r\n            fn.call(evented, e);\r\n        } else {\r\n            console.warn(\"The evented parameter is not a eventable object\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n    /*   \r\n     * Specify a function to execute when the DOM is fully loaded.  \r\n     * @param {Function} callback\r\n     */\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            langx.defer(callback);\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"backspace\": 8,\r\n        \"comma\": 188,\r\n        \"delete\": 46,\r\n        \"down\": 40,\r\n        \"end\": 35,\r\n        \"enter\": 13,\r\n        \"escape\": 27,\r\n        \"home\": 36,\r\n        \"left\": 37,\r\n        \"page_down\": 34,\r\n        \"page_up\": 33,\r\n        \"period\": 190,\r\n        \"right\": 39,\r\n        \"space\": 32,\r\n        \"tab\": 9,\r\n        \"up\": 38\r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    if (browser.support.transition) {\r\n        specialEvents.transitionEnd = {\r\n//          handle: function (e) {\r\n//            if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)\r\n//          },\r\n          bindType: browser.support.transition.end,\r\n          delegateType: browser.support.transition.end\r\n        }        \r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        NativeEvents : NativeEvents,\r\n        \r\n        create: createEvent,\r\n\r\n        keys: keyCodeLookup,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special: specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    each(NativeEvents,function(name){\r\n        eventer[name] = function(elm,selector,data,callback) {\r\n            if (arguments.length>1) {\r\n                return this.on(elm,name,selector,data,callback);\r\n            } else {\r\n                if (name == \"focus\") {\r\n                    if (elm.focus) {\r\n                        elm.focus();\r\n                    }\r\n                } else if (name == \"blur\") {\r\n                    if (elm.blur) {\r\n                        elm.blur();\r\n                    }\r\n                } else if (name == \"click\") {\r\n                    if (elm.click) {\r\n                        elm.click();\r\n                    }\r\n                } else {\r\n                    this.trigger(elm,name);\r\n                }\r\n\r\n                return this;\r\n            }\r\n        };\r\n    });\r\n\r\n    return skylark.attach(\"domx.eventer\",eventer);\r\n});\ndefine('skylark-domx-eventer/main',[\r\n    \"skylark-langx/langx\",\r\n    \"./eventer\",\r\n    \"skylark-domx-velm\",\r\n    \"skylark-domx-query\"        \r\n],function(langx,eventer,velm,$){\r\n\r\n    var delegateMethodNames = [\r\n        \"off\",\r\n        \"on\",\r\n        \"one\",\r\n        \"trigger\"\r\n    ];\r\n\r\n    langx.each(eventer.NativeEvents,function(name){\r\n        delegateMethodNames.push(name);\r\n    });\r\n\r\n    // from ./eventer\r\n    velm.delegate(delegateMethodNames, eventer);\r\n\r\n    langx.each(delegateMethodNames,function(i,name){\r\n        $.fn[name] = $.wraps.wrapper_every_act(eventer[name],eventer);\r\n    });\r\n\r\n\r\n    /*\r\n    $.fn.on = $.wraps.wrapper_every_act(eventer.on, eventer);\r\n\r\n    $.fn.off = $.wraps.wrapper_every_act(eventer.off, eventer);\r\n\r\n    $.fn.trigger = $.wraps.wrapper_every_act(eventer.trigger, eventer);\r\n\r\n    ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n        'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n        'change select keydown keypress keyup error transitionEnd').split(' ').forEach(function(event) {\r\n        $.fn[event] = $.wraps.wrapper_every_act(eventer[event],eventer);\r\n    });\r\n\r\n    $.fn.one = function(event, selector, data, callback) {\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = null;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = null;\r\n        }\r\n\r\n        return this.on(event, selector, data, callback, 1)\r\n    }; \r\n    */\r\n\r\n    $.ready = eventer.ready;\r\n\r\n    return eventer;\r\n});\ndefine('skylark-domx-eventer', ['skylark-domx-eventer/main'], function (main) { return main; });\n\ndefine('skylark-domx-styler/styler',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\"\r\n], function(skylark, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} value\r\n     */\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n    function disabled(elm, value ) {\r\n        if (arguments.length < 2) {\r\n            return !!this.dom.disabled;\r\n        }\r\n\r\n        elm.disabled = value;\r\n\r\n        return this;\r\n    }\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getStyles(element).getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n    /*\r\n     * Display the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    /*\r\n     * Hide the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n\r\n    function getStyles( elem ) {\r\n\r\n        // Support: IE <=11 only, Firefox <=30 (#15098, #14150)\r\n        // IE throws on elements created in popups\r\n        // FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\r\n        var view = elem.ownerDocument.defaultView;\r\n\r\n        if ( !view || !view.opener ) {\r\n            view = window;\r\n        }\r\n\r\n        return view.getComputedStyle( elem);\r\n    }\r\n\r\n\r\n    /*\r\n     * Get the value of a computed style property for the first element in the set of matched elements or set one or more CSS properties for every matched element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} property\r\n     * @param {Any} value\r\n     */\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getStyles(elm)\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(dasherize(property))\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(dasherize(prop)))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Determine whether any of the matched elements are assigned the given class.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    /*\r\n     * Remove a single class, multiple classes, or all classes from each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm, \"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Add or remove one or more classes from the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     * @param {} when\r\n     */\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: false,\r\n        cssHooks: {\r\n\r\n        },\r\n\r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        disabled : disabled,        \r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return skylark.attach(\"domx.styler\", styler);\r\n});\ndefine('skylark-domx-styler/main',[\r\n\t\"./styler\",\r\n\t\"skylark-domx-velm\",\r\n\t\"skylark-domx-query\"\t\r\n],function(styler,velm,$){\r\n\t\r\n    // from ./styler\r\n    velm.delegate([\r\n        \"addClass\",\r\n        \"className\",\r\n        \"css\",\r\n        \"hasClass\",\r\n        \"hide\",\r\n        \"isInvisible\",\r\n        \"removeClass\",\r\n        \"show\",\r\n        \"toggleClass\"\r\n    ], styler);\r\n\r\n    // properties\r\n\r\n    var properties = [ 'position', 'left', 'top', 'right', 'bottom', 'width', 'height', 'border', 'borderLeft',\r\n    'borderTop', 'borderRight', 'borderBottom', 'borderColor', 'display', 'overflow', 'margin', 'marginLeft', 'marginTop', 'marginRight', 'marginBottom', 'padding', 'paddingLeft', 'paddingTop', 'paddingRight', 'paddingBottom', 'color',\r\n    'background', 'backgroundColor', 'opacity', 'fontSize', 'fontWeight', 'textAlign', 'textDecoration', 'textTransform', 'cursor', 'zIndex' ];\r\n\r\n    properties.forEach( function ( property ) {\r\n\r\n        var method = property;\r\n\r\n        velm.VisualElement.prototype[method ] = function (value) {\r\n\r\n            this.css( property, value );\r\n\r\n            return this;\r\n\r\n        };\r\n\r\n    });\r\n\r\n\r\n    $.fn.style = $.wraps.wrapper_name_value(styler.css, styler);\r\n\r\n    $.fn.css = $.wraps.wrapper_name_value(styler.css, styler);\r\n\r\n    //hasClass(name)\r\n    $.fn.hasClass = $.wraps.wrapper_some_chk(styler.hasClass, styler);\r\n\r\n    //addClass(name)\r\n    $.fn.addClass = $.wraps.wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className);\r\n\r\n    //removeClass(name)\r\n    $.fn.removeClass = $.wraps.wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className);\r\n\r\n    //toogleClass(name,when)\r\n    $.fn.toggleClass = $.wraps.wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className);\r\n\r\n    $.fn.replaceClass = function(newClass, oldClass) {\r\n        this.removeClass(oldClass);\r\n        this.addClass(newClass);\r\n        return this;\r\n    };\r\n\r\n    $.fn.replaceClass = function(newClass, oldClass) {\r\n        this.removeClass(oldClass);\r\n        this.addClass(newClass);\r\n        return this;\r\n    };\r\n        \r\n\treturn styler;\r\n});\ndefine('skylark-domx-styler', ['skylark-domx-styler/main'], function (main) { return main; });\n\ndefine('skylark-domx-geom/geom',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-styler\"\r\n], function(skylark, langx, noder, styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel,\r\n        offsetParent = noder.offsetParent,\r\n        cachedScrollbarWidth;\r\n\r\n    function scrollbarWidth() {\r\n        if (cachedScrollbarWidth !== undefined) {\r\n            return cachedScrollbarWidth;\r\n        }\r\n        var w1, w2,\r\n            div = noder.createFragment(\"<div style=\" +\r\n                \"'display:block;position:absolute;width:200px;height:200px;overflow:hidden;'>\" +\r\n                \"<div style='height:300px;width:auto;'></div></div>\")[0],\r\n            innerDiv = div.childNodes[0];\r\n\r\n        noder.append(document.body, div);\r\n\r\n        w1 = innerDiv.offsetWidth;\r\n\r\n        styler.css(div, \"overflow\", \"scroll\");\r\n\r\n        w2 = innerDiv.offsetWidth;\r\n\r\n        if (w1 === w2) {\r\n            w2 = div[0].clientWidth;\r\n        }\r\n\r\n        noder.remove(div);\r\n\r\n        return (cachedScrollbarWidth = w1 - w2);\r\n    }\r\n    /*\r\n     * Get the widths of each border of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function borderExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth, elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    /*\r\n     * Get or set the viewport position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the viewport rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the height of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the size of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get or set the width of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the rect of the specified element content box.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n\r\n    function fullCover(elem, hor, vert) {\r\n        let vertical = vert;\r\n        let horizontal = hor;\r\n        if (langx.isUndefined(horizontal)) {\r\n            horizontal = true;\r\n        }\r\n        if (langx.isUndefined(vertical)) {\r\n            vertical = true;\r\n        }\r\n        elem.style.position = 'absolute';\r\n        if (horizontal) {\r\n            elem.style.left = 0;\r\n            elem.style.right = 0;\r\n        }\r\n        if (vertical) {\r\n            elem.style.top = 0;\r\n            elem.style.bottom = 0;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLDocument} doc\r\n     */\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each margin of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function marginExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n\r\n    function marginRect(elm) {\r\n        var obj = relativeRect(elm),\r\n            me = marginExtents(elm);\r\n\r\n        return {\r\n            left: obj.left,\r\n            top: obj.top,\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n\r\n    function marginSize(elm) {\r\n        var obj = size(elm),\r\n            me = marginExtents(elm);\r\n\r\n        return {\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each padding of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function paddingExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the position of the specified element border box , relative to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the rect of the specified element border box , relatived to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Scroll the specified element into view.\r\n     * @param {HTMLElement} elm\r\n     * @param {} align\r\n     */\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n    /*\r\n     * Get or set the current horizontal position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollLeft(elm, value) {\r\n        if (elm.nodeType === 9) {\r\n            elm = elm.defaultView;\r\n        }\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or the current vertical position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollTop(elm, value) {\r\n        if (elm.nodeType === 9) {\r\n            elm = elm.defaultView;\r\n        }\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject}dimension\r\n     */\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined && props.width !== \"\" && props.width !== null) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined && props.height !== \"\" && props.height !== null) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        fullCover,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        marginRect: marginRect,\r\n\r\n        marginSize: marginSize,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollbarWidth: scrollbarWidth,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    ( function() {\r\n        var max = Math.max,\r\n            abs = Math.abs,\r\n            rhorizontal = /left|center|right/,\r\n            rvertical = /top|center|bottom/,\r\n            roffset = /[\\+\\-]\\d+(\\.[\\d]+)?%?/,\r\n            rposition = /^\\w+/,\r\n            rpercent = /%$/;\r\n\r\n        function getOffsets( offsets, width, height ) {\r\n            return [\r\n                parseFloat( offsets[ 0 ] ) * ( rpercent.test( offsets[ 0 ] ) ? width / 100 : 1 ),\r\n                parseFloat( offsets[ 1 ] ) * ( rpercent.test( offsets[ 1 ] ) ? height / 100 : 1 )\r\n            ];\r\n        }\r\n\r\n        function parseCss( element, property ) {\r\n            return parseInt( styler.css( element, property ), 10 ) || 0;\r\n        }\r\n\r\n        function getDimensions( raw ) {\r\n            if ( raw.nodeType === 9 ) {\r\n                return {\r\n                    size: size(raw),\r\n                    offset: { top: 0, left: 0 }\r\n                };\r\n            }\r\n            if ( noder.isWindow( raw ) ) {\r\n                return {\r\n                    size: size(raw),\r\n                    offset: { \r\n                        top: scrollTop(raw), \r\n                        left: scrollLeft(raw) \r\n                    }\r\n                };\r\n            }\r\n            if ( raw.preventDefault ) {\r\n                return {\r\n                    size : {\r\n                        width: 0,\r\n                        height: 0\r\n                    },\r\n                    offset: { \r\n                        top: raw.pageY, \r\n                        left: raw.pageX \r\n                    }\r\n                };\r\n            }\r\n            return {\r\n                size: size(raw),\r\n                offset: pagePosition(raw)\r\n            };\r\n        }\r\n\r\n        function getScrollInfo( within ) {\r\n            var overflowX = within.isWindow || within.isDocument ? \"\" :\r\n                    styler.css(within.element,\"overflow-x\" ),\r\n                overflowY = within.isWindow || within.isDocument ? \"\" :\r\n                    styler.css(within.element,\"overflow-y\" ),\r\n                hasOverflowX = overflowX === \"scroll\" ||\r\n                    ( overflowX === \"auto\" && within.width < scrollWidth(within.element) ),\r\n                hasOverflowY = overflowY === \"scroll\" ||\r\n                    ( overflowY === \"auto\" && within.height < scrollHeight(within.element));\r\n            return {\r\n                width: hasOverflowY ? scrollbarWidth() : 0,\r\n                height: hasOverflowX ? scrollbarWidth() : 0\r\n            };\r\n        }\r\n\r\n        function getWithinInfo( element ) {\r\n            var withinElement = element || window,\r\n                isWindow = noder.isWindow( withinElement),\r\n                isDocument = !!withinElement && withinElement.nodeType === 9,\r\n                hasOffset = !isWindow && !isDocument,\r\n                msize = marginSize(withinElement);\r\n            return {\r\n                element: withinElement,\r\n                isWindow: isWindow,\r\n                isDocument: isDocument,\r\n                offset: hasOffset ? pagePosition(element) : { left: 0, top: 0 },\r\n                scrollLeft: scrollLeft(withinElement),\r\n                scrollTop: scrollTop(withinElement),\r\n                width: msize.width,\r\n                height: msize.height\r\n            };\r\n        }\r\n\r\n        function posit(elm,options ) {\r\n            // Make a copy, we don't want to modify arguments\r\n            options = langx.extend( {}, options );\r\n\r\n            var atOffset, targetWidth, targetHeight, targetOffset, basePosition, dimensions,\r\n                target = options.of,\r\n                within = getWithinInfo( options.within ),\r\n                scrollInfo = getScrollInfo( within ),\r\n                collision = ( options.collision || \"flip\" ).split( \" \" ),\r\n                offsets = {};\r\n\r\n            dimensions = getDimensions( target );\r\n            if ( target.preventDefault ) {\r\n\r\n                // Force left top to allow flipping\r\n                options.at = \"left top\";\r\n            }\r\n            targetWidth = dimensions.size.width;\r\n            targetHeight = dimensions.size.height;\r\n            targetOffset = dimensions.offset;\r\n\r\n            // Clone to reuse original targetOffset later\r\n            basePosition = langx.extend( {}, targetOffset );\r\n\r\n            // Force my and at to have valid horizontal and vertical positions\r\n            // if a value is missing or invalid, it will be converted to center\r\n            langx.each( [ \"my\", \"at\" ], function() {\r\n                var pos = ( options[ this ] || \"\" ).split( \" \" ),\r\n                    horizontalOffset,\r\n                    verticalOffset;\r\n\r\n                if ( pos.length === 1 ) {\r\n                    pos = rhorizontal.test( pos[ 0 ] ) ?\r\n                        pos.concat( [ \"center\" ] ) :\r\n                        rvertical.test( pos[ 0 ] ) ?\r\n                            [ \"center\" ].concat( pos ) :\r\n                            [ \"center\", \"center\" ];\r\n                }\r\n                pos[ 0 ] = rhorizontal.test( pos[ 0 ] ) ? pos[ 0 ] : \"center\";\r\n                pos[ 1 ] = rvertical.test( pos[ 1 ] ) ? pos[ 1 ] : \"center\";\r\n\r\n                // Calculate offsets\r\n                horizontalOffset = roffset.exec( pos[ 0 ] );\r\n                verticalOffset = roffset.exec( pos[ 1 ] );\r\n                offsets[ this ] = [\r\n                    horizontalOffset ? horizontalOffset[ 0 ] : 0,\r\n                    verticalOffset ? verticalOffset[ 0 ] : 0\r\n                ];\r\n\r\n                // Reduce to just the positions without the offsets\r\n                options[ this ] = [\r\n                    rposition.exec( pos[ 0 ] )[ 0 ],\r\n                    rposition.exec( pos[ 1 ] )[ 0 ]\r\n                ];\r\n            } );\r\n\r\n            // Normalize collision option\r\n            if ( collision.length === 1 ) {\r\n                collision[ 1 ] = collision[ 0 ];\r\n            }\r\n\r\n            if ( options.at[ 0 ] === \"right\" ) {\r\n                basePosition.left += targetWidth;\r\n            } else if ( options.at[ 0 ] === \"center\" ) {\r\n                basePosition.left += targetWidth / 2;\r\n            }\r\n\r\n            if ( options.at[ 1 ] === \"bottom\" ) {\r\n                basePosition.top += targetHeight;\r\n            } else if ( options.at[ 1 ] === \"center\" ) {\r\n                basePosition.top += targetHeight / 2;\r\n            }\r\n\r\n            atOffset = getOffsets( offsets.at, targetWidth, targetHeight );\r\n            basePosition.left += atOffset[ 0 ];\r\n            basePosition.top += atOffset[ 1 ];\r\n\r\n            return ( function(elem) {\r\n                var collisionPosition, using,\r\n                    msize = marginSize(elem),\r\n                    elemWidth = msize.width,\r\n                    elemHeight = msize.height,\r\n                    marginLeft = parseCss( elem, \"marginLeft\" ),\r\n                    marginTop = parseCss( elem, \"marginTop\" ),\r\n                    collisionWidth = elemWidth + marginLeft + parseCss( elem, \"marginRight\" ) +\r\n                        scrollInfo.width,\r\n                    collisionHeight = elemHeight + marginTop + parseCss( elem, \"marginBottom\" ) +\r\n                        scrollInfo.height,\r\n                    position = langx.extend( {}, basePosition ),\r\n                    myOffset = getOffsets( offsets.my, msize.width, msize.height);\r\n\r\n                if ( options.my[ 0 ] === \"right\" ) {\r\n                    position.left -= elemWidth;\r\n                } else if ( options.my[ 0 ] === \"center\" ) {\r\n                    position.left -= elemWidth / 2;\r\n                }\r\n\r\n                if ( options.my[ 1 ] === \"bottom\" ) {\r\n                    position.top -= elemHeight;\r\n                } else if ( options.my[ 1 ] === \"center\" ) {\r\n                    position.top -= elemHeight / 2;\r\n                }\r\n\r\n                position.left += myOffset[ 0 ];\r\n                position.top += myOffset[ 1 ];\r\n\r\n                collisionPosition = {\r\n                    marginLeft: marginLeft,\r\n                    marginTop: marginTop\r\n                };\r\n\r\n                langx.each( [ \"left\", \"top\" ], function( i, dir ) {\r\n                    if ( positions[ collision[ i ] ] ) {\r\n                        positions[ collision[ i ] ][ dir ]( position, {\r\n                            targetWidth: targetWidth,\r\n                            targetHeight: targetHeight,\r\n                            elemWidth: elemWidth,\r\n                            elemHeight: elemHeight,\r\n                            collisionPosition: collisionPosition,\r\n                            collisionWidth: collisionWidth,\r\n                            collisionHeight: collisionHeight,\r\n                            offset: [ atOffset[ 0 ] + myOffset[ 0 ], atOffset [ 1 ] + myOffset[ 1 ] ],\r\n                            my: options.my,\r\n                            at: options.at,\r\n                            within: within,\r\n                            elem: elem\r\n                        } );\r\n                    }\r\n                } );\r\n\r\n                if ( options.using ) {\r\n\r\n                    // Adds feedback as second argument to using callback, if present\r\n                    using = function( props ) {\r\n                        var left = targetOffset.left - position.left,\r\n                            right = left + targetWidth - elemWidth,\r\n                            top = targetOffset.top - position.top,\r\n                            bottom = top + targetHeight - elemHeight,\r\n                            feedback = {\r\n                                target: {\r\n                                    element: target,\r\n                                    left: targetOffset.left,\r\n                                    top: targetOffset.top,\r\n                                    width: targetWidth,\r\n                                    height: targetHeight\r\n                                },\r\n                                element: {\r\n                                    element: elem,\r\n                                    left: position.left,\r\n                                    top: position.top,\r\n                                    width: elemWidth,\r\n                                    height: elemHeight\r\n                                },\r\n                                horizontal: right < 0 ? \"left\" : left > 0 ? \"right\" : \"center\",\r\n                                vertical: bottom < 0 ? \"top\" : top > 0 ? \"bottom\" : \"middle\"\r\n                            };\r\n                        if ( targetWidth < elemWidth && abs( left + right ) < targetWidth ) {\r\n                            feedback.horizontal = \"center\";\r\n                        }\r\n                        if ( targetHeight < elemHeight && abs( top + bottom ) < targetHeight ) {\r\n                            feedback.vertical = \"middle\";\r\n                        }\r\n                        if ( max( abs( left ), abs( right ) ) > max( abs( top ), abs( bottom ) ) ) {\r\n                            feedback.important = \"horizontal\";\r\n                        } else {\r\n                            feedback.important = \"vertical\";\r\n                        }\r\n                        options.using.call( this, props, feedback );\r\n                    };\r\n                }\r\n\r\n                pagePosition(elem, langx.extend( position, { using: using } ));\r\n            })(elm);\r\n        }\r\n\r\n        var positions = {\r\n            fit: {\r\n                left: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.isWindow ? within.scrollLeft : within.offset.left,\r\n                        outerWidth = within.width,\r\n                        collisionPosLeft = position.left - data.collisionPosition.marginLeft,\r\n                        overLeft = withinOffset - collisionPosLeft,\r\n                        overRight = collisionPosLeft + data.collisionWidth - outerWidth - withinOffset,\r\n                        newOverRight;\r\n\r\n                    // Element is wider than within\r\n                    if ( data.collisionWidth > outerWidth ) {\r\n\r\n                        // Element is initially over the left side of within\r\n                        if ( overLeft > 0 && overRight <= 0 ) {\r\n                            newOverRight = position.left + overLeft + data.collisionWidth - outerWidth -\r\n                                withinOffset;\r\n                            position.left += overLeft - newOverRight;\r\n\r\n                        // Element is initially over right side of within\r\n                        } else if ( overRight > 0 && overLeft <= 0 ) {\r\n                            position.left = withinOffset;\r\n\r\n                        // Element is initially over both left and right sides of within\r\n                        } else {\r\n                            if ( overLeft > overRight ) {\r\n                                position.left = withinOffset + outerWidth - data.collisionWidth;\r\n                            } else {\r\n                                position.left = withinOffset;\r\n                            }\r\n                        }\r\n\r\n                    // Too far left -> align with left edge\r\n                    } else if ( overLeft > 0 ) {\r\n                        position.left += overLeft;\r\n\r\n                    // Too far right -> align with right edge\r\n                    } else if ( overRight > 0 ) {\r\n                        position.left -= overRight;\r\n\r\n                    // Adjust based on position and margin\r\n                    } else {\r\n                        position.left = max( position.left - collisionPosLeft, position.left );\r\n                    }\r\n                },\r\n                top: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.isWindow ? within.scrollTop : within.offset.top,\r\n                        outerHeight = data.within.height,\r\n                        collisionPosTop = position.top - data.collisionPosition.marginTop,\r\n                        overTop = withinOffset - collisionPosTop,\r\n                        overBottom = collisionPosTop + data.collisionHeight - outerHeight - withinOffset,\r\n                        newOverBottom;\r\n\r\n                    // Element is taller than within\r\n                    if ( data.collisionHeight > outerHeight ) {\r\n\r\n                        // Element is initially over the top of within\r\n                        if ( overTop > 0 && overBottom <= 0 ) {\r\n                            newOverBottom = position.top + overTop + data.collisionHeight - outerHeight -\r\n                                withinOffset;\r\n                            position.top += overTop - newOverBottom;\r\n\r\n                        // Element is initially over bottom of within\r\n                        } else if ( overBottom > 0 && overTop <= 0 ) {\r\n                            position.top = withinOffset;\r\n\r\n                        // Element is initially over both top and bottom of within\r\n                        } else {\r\n                            if ( overTop > overBottom ) {\r\n                                position.top = withinOffset + outerHeight - data.collisionHeight;\r\n                            } else {\r\n                                position.top = withinOffset;\r\n                            }\r\n                        }\r\n\r\n                    // Too far up -> align with top\r\n                    } else if ( overTop > 0 ) {\r\n                        position.top += overTop;\r\n\r\n                    // Too far down -> align with bottom edge\r\n                    } else if ( overBottom > 0 ) {\r\n                        position.top -= overBottom;\r\n\r\n                    // Adjust based on position and margin\r\n                    } else {\r\n                        position.top = max( position.top - collisionPosTop, position.top );\r\n                    }\r\n                }\r\n            },\r\n            flip: {\r\n                left: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.offset.left + within.scrollLeft,\r\n                        outerWidth = within.width,\r\n                        offsetLeft = within.isWindow ? within.scrollLeft : within.offset.left,\r\n                        collisionPosLeft = position.left - data.collisionPosition.marginLeft,\r\n                        overLeft = collisionPosLeft - offsetLeft,\r\n                        overRight = collisionPosLeft + data.collisionWidth - outerWidth - offsetLeft,\r\n                        myOffset = data.my[ 0 ] === \"left\" ?\r\n                            -data.elemWidth :\r\n                            data.my[ 0 ] === \"right\" ?\r\n                                data.elemWidth :\r\n                                0,\r\n                        atOffset = data.at[ 0 ] === \"left\" ?\r\n                            data.targetWidth :\r\n                            data.at[ 0 ] === \"right\" ?\r\n                                -data.targetWidth :\r\n                                0,\r\n                        offset = -2 * data.offset[ 0 ],\r\n                        newOverRight,\r\n                        newOverLeft;\r\n\r\n                    if ( overLeft < 0 ) {\r\n                        newOverRight = position.left + myOffset + atOffset + offset + data.collisionWidth -\r\n                            outerWidth - withinOffset;\r\n                        if ( newOverRight < 0 || newOverRight < abs( overLeft ) ) {\r\n                            position.left += myOffset + atOffset + offset;\r\n                        }\r\n                    } else if ( overRight > 0 ) {\r\n                        newOverLeft = position.left - data.collisionPosition.marginLeft + myOffset +\r\n                            atOffset + offset - offsetLeft;\r\n                        if ( newOverLeft > 0 || abs( newOverLeft ) < overRight ) {\r\n                            position.left += myOffset + atOffset + offset;\r\n                        }\r\n                    }\r\n                },\r\n                top: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.offset.top + within.scrollTop,\r\n                        outerHeight = within.height,\r\n                        offsetTop = within.isWindow ? within.scrollTop : within.offset.top,\r\n                        collisionPosTop = position.top - data.collisionPosition.marginTop,\r\n                        overTop = collisionPosTop - offsetTop,\r\n                        overBottom = collisionPosTop + data.collisionHeight - outerHeight - offsetTop,\r\n                        top = data.my[ 1 ] === \"top\",\r\n                        myOffset = top ?\r\n                            -data.elemHeight :\r\n                            data.my[ 1 ] === \"bottom\" ?\r\n                                data.elemHeight :\r\n                                0,\r\n                        atOffset = data.at[ 1 ] === \"top\" ?\r\n                            data.targetHeight :\r\n                            data.at[ 1 ] === \"bottom\" ?\r\n                                -data.targetHeight :\r\n                                0,\r\n                        offset = -2 * data.offset[ 1 ],\r\n                        newOverTop,\r\n                        newOverBottom;\r\n                    if ( overTop < 0 ) {\r\n                        newOverBottom = position.top + myOffset + atOffset + offset + data.collisionHeight -\r\n                            outerHeight - withinOffset;\r\n                        if ( newOverBottom < 0 || newOverBottom < abs( overTop ) ) {\r\n                            position.top += myOffset + atOffset + offset;\r\n                        }\r\n                    } else if ( overBottom > 0 ) {\r\n                        newOverTop = position.top - data.collisionPosition.marginTop + myOffset + atOffset +\r\n                            offset - offsetTop;\r\n                        if ( newOverTop > 0 || abs( newOverTop ) < overBottom ) {\r\n                            position.top += myOffset + atOffset + offset;\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            flipfit: {\r\n                left: function() {\r\n                    positions.flip.left.apply( this, arguments );\r\n                    positions.fit.left.apply( this, arguments );\r\n                },\r\n                top: function() {\r\n                    positions.flip.top.apply( this, arguments );\r\n                    positions.fit.top.apply( this, arguments );\r\n                }\r\n            }\r\n        };\r\n\r\n        geom.posit = posit;\r\n    })();\r\n\r\n    return skylark.attach(\"domx.geom\", geom);\r\n});\ndefine('skylark-domx-geom/main',[\r\n    \"skylark-langx/langx\",\r\n    \"./geom\",\r\n    \"skylark-domx-velm\",\r\n    \"skylark-domx-query\"        \r\n],function(langx,geom,velm,$){\r\n   // from ./geom\r\n    velm.delegate([\r\n        \"borderExtents\",\r\n        \"boundingPosition\",\r\n        \"boundingRect\",\r\n        \"clientHeight\",\r\n        \"clientSize\",\r\n        \"clientWidth\",\r\n        \"contentRect\",\r\n        \"height\",\r\n        \"marginExtents\",\r\n        \"offsetParent\",\r\n        \"paddingExtents\",\r\n        \"pagePosition\",\r\n        \"pageRect\",\r\n        \"relativePosition\",\r\n        \"relativeRect\",\r\n        \"scrollIntoView\",\r\n        \"scrollLeft\",\r\n        \"scrollTop\",\r\n        \"size\",\r\n        \"width\"\r\n    ], geom);\r\n\r\n    $.fn.offset = $.wraps.wrapper_value(geom.pagePosition, geom, geom.pagePosition);\r\n\r\n    $.fn.scrollTop = $.wraps.wrapper_value(geom.scrollTop, geom);\r\n\r\n    $.fn.scrollLeft = $.wraps.wrapper_value(geom.scrollLeft, geom);\r\n\r\n    $.fn.position =  function(options) {\r\n        if (!this.length) {\r\n            return this;\r\n        }\r\n\r\n        if (options) {\r\n            if (options.of && options.of.length) {\r\n                options = langx.clone(options);\r\n                options.of = options.of[0];\r\n            }\r\n            return this.each( function() {\r\n                geom.posit(this,options);\r\n            });\r\n        } else {\r\n            var elem = this[0];\r\n\r\n            return geom.relativePosition(elem);\r\n\r\n        }             \r\n    };\r\n\r\n    $.fn.offsetParent = $.wraps.wrapper_map(geom.offsetParent, geom);\r\n\r\n\r\n    $.fn.size = $.wraps.wrapper_value(geom.size, geom);\r\n\r\n    $.fn.width = $.wraps.wrapper_value(geom.width, geom, geom.width);\r\n\r\n    $.fn.height = $.wraps.wrapper_value(geom.height, geom, geom.height);\r\n\r\n    $.fn.clientSize = $.wraps.wrapper_value(geom.clientSize, geom.clientSize);\r\n    \r\n    ['width', 'height'].forEach(function(dimension) {\r\n        var offset, Dimension = dimension.replace(/./, function(m) {\r\n            return m[0].toUpperCase()\r\n        });\r\n\r\n        $.fn['outer' + Dimension] = function(margin, value) {\r\n            if (arguments.length) {\r\n                if (typeof margin !== 'boolean') {\r\n                    value = margin;\r\n                    margin = false;\r\n                }\r\n            } else {\r\n                margin = false;\r\n                value = undefined;\r\n            }\r\n\r\n            if (value === undefined) {\r\n                var el = this[0];\r\n                if (!el) {\r\n                    return undefined;\r\n                }\r\n                var cb = geom.size(el);\r\n                if (margin) {\r\n                    var me = geom.marginExtents(el);\r\n                    cb.width = cb.width + me.left + me.right;\r\n                    cb.height = cb.height + me.top + me.bottom;\r\n                }\r\n                return dimension === \"width\" ? cb.width : cb.height;\r\n            } else {\r\n                return this.each(function(idx, el) {\r\n                    var mb = {};\r\n                    var me = geom.marginExtents(el);\r\n                    if (dimension === \"width\") {\r\n                        mb.width = value;\r\n                        if (margin) {\r\n                            mb.width = mb.width - me.left - me.right\r\n                        }\r\n                    } else {\r\n                        mb.height = value;\r\n                        if (margin) {\r\n                            mb.height = mb.height - me.top - me.bottom;\r\n                        }\r\n                    }\r\n                    geom.size(el, mb);\r\n                })\r\n\r\n            }\r\n        };\r\n    })\r\n\r\n    $.fn.innerWidth = $.wraps.wrapper_value(geom.clientWidth, geom, geom.clientWidth);\r\n\r\n    $.fn.innerHeight = $.wraps.wrapper_value(geom.clientHeight, geom, geom.clientHeight);\r\n\r\n    return geom;\r\n});\ndefine('skylark-domx-geom', ['skylark-domx-geom/main'], function (main) { return main; });\n\ndefine('skylark-domx-fx/fx',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-eventer\"\r\n], function(skylark, langx, browser, noder, geom, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    /*   \r\n     * Perform a custom animation of a set of CSS properties.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} properties\r\n     * @param {String} ease\r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     * @param {Number or String} delay\r\n     */\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false,\r\n            resetClipAuto = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                var v = properties[key];\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + v + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    if (key == \"clip\" && langx.isPlainObject(v)) {\r\n                        cssValues[key] = \"rect(\" + v.top+\"px,\"+ v.right +\"px,\"+ v.bottom +\"px,\"+ v.left+\"px)\";\r\n                        if (styler.css(elm,\"clip\") == \"auto\") {\r\n                            var size = geom.size(elm);\r\n                            styler.css(elm,\"clip\",\"rect(\"+\"0px,\"+ size.width +\"px,\"+ size.height +\"px,\"+\"0px)\");  \r\n                            resetClipAuto = true;\r\n                        }\r\n\r\n                    } else {\r\n                        cssValues[key] = v;\r\n                    }\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            if (resetClipAuto) {\r\n //               styler.css(elm,\"clip\",\"auto\");\r\n            }\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Hide an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Set the vertical position of the scroll bar for an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} pos\r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Adjust the opacity of an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Number or String} opacity\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display an element by fading them to opaque.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide an element by fading them to transparent.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            opacity = styler.css(elm,\"opacity\"),\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.css(elm,\"opacity\",opacity);\r\n            styler.hide(elm);\r\n            if (complete) {\r\n                complete.call(elm);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element by animating its opacity.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} ceasing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeToggle(elm, speed, ceasing, allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing, callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideDown(elm, duration, callback) {\r\n\r\n        // get the element position to restore it then\r\n        var position = styler.css(elm, 'position');\r\n\r\n        // show element if it is hidden\r\n        show(elm);\r\n\r\n        // place it so it displays as usually but hidden\r\n        styler.css(elm, {\r\n            position: 'absolute',\r\n            visibility: 'hidden'\r\n        });\r\n\r\n        // get naturally height, margin, padding\r\n        var marginTop = styler.css(elm, 'margin-top');\r\n        var marginBottom = styler.css(elm, 'margin-bottom');\r\n        var paddingTop = styler.css(elm, 'padding-top');\r\n        var paddingBottom = styler.css(elm, 'padding-bottom');\r\n        var height = styler.css(elm, 'height');\r\n\r\n        // set initial css for animation\r\n        styler.css(elm, {\r\n            position: position,\r\n            visibility: 'visible',\r\n            overflow: 'hidden',\r\n            height: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n\r\n        // animate to gotten height, margin and padding\r\n        animate(elm, {\r\n            height: height,\r\n            marginTop: marginTop,\r\n            marginBottom: marginBottom,\r\n            paddingTop: paddingTop,\r\n            paddingBottom: paddingBottom\r\n        }, {\r\n            duration: duration,\r\n            complete: function() {\r\n                if (callback) {\r\n                    callback.apply(elm);\r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideUp(elm, duration, callback) {\r\n        // active the function only if the element is visible\r\n        if (geom.height(elm) > 0) {\r\n\r\n            // get the element position to restore it then\r\n            var position = styler.css(elm, 'position');\r\n\r\n            // get the element height, margin and padding to restore them then\r\n            var height = styler.css(elm, 'height');\r\n            var marginTop = styler.css(elm, 'margin-top');\r\n            var marginBottom = styler.css(elm, 'margin-bottom');\r\n            var paddingTop = styler.css(elm, 'padding-top');\r\n            var paddingBottom = styler.css(elm, 'padding-bottom');\r\n\r\n            // set initial css for animation\r\n            styler.css(elm, {\r\n                visibility: 'visible',\r\n                overflow: 'hidden',\r\n                height: height,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                paddingTop: paddingTop,\r\n                paddingBottom: paddingBottom\r\n            });\r\n\r\n            // animate element height, margin and padding to zero\r\n            animate(elm, {\r\n                height: 0,\r\n                marginTop: 0,\r\n                marginBottom: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0\r\n            }, {\r\n                // callback : restore the element position, height, margin and padding to original values\r\n                duration: duration,\r\n                queue: false,\r\n                complete: function() {\r\n                    hide(elm);\r\n                    styler.css(elm, {\r\n                        visibility: 'visible',\r\n                        overflow: 'hidden',\r\n                        height: height,\r\n                        marginTop: marginTop,\r\n                        marginBottom: marginBottom,\r\n                        paddingTop: paddingTop,\r\n                        paddingBottom: paddingBottom\r\n                    });\r\n                    if (callback) {\r\n                        callback.apply(elm);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display or hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideToggle(elm, duration, callback) {\r\n\r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm, duration, callback);\r\n        }\r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm, duration, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function emulateTransitionEnd(elm,duration) {\r\n        var called = false;\r\n        eventer.one(elm,'transitionEnd', function () { \r\n            called = true;\r\n        })\r\n        var callback = function () { \r\n            if (!called) {\r\n                eventer.trigger(elm,browser.support.transition.end) \r\n            }\r\n        };\r\n        setTimeout(callback, duration);\r\n        \r\n        return this;\r\n    } \r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     * @param {Node} params\r\n     */\r\n    function overlay(elm, params) {\r\n        var overlayDiv = noder.createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n    \r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {HTMLElement} elm\r\n     * @param {Node} params\r\n     */\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n\r\n            throbber = noder.createElement(\"div\", {\r\n                \"class\": params.className || \"throbber\"\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                \"class\": 'overlay fade'\r\n            }),\r\n            throb = noder.createElement(\"div\", {\r\n                \"class\": \"throb\"\r\n            }),\r\n            textNode = noder.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    noder.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        if (params.style) {\r\n            styler.css(throbber,params.style);\r\n        }\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate,\r\n        emulateTransitionEnd,\r\n        fadeIn,\r\n        fadeOut,\r\n        fadeTo,\r\n        fadeToggle,\r\n        hide,\r\n        scrollToTop,\r\n\r\n        slideDown,\r\n        slideToggle,\r\n        slideUp,\r\n        show,\r\n        throb,\r\n        toggle\r\n    });\r\n\r\n    return skylark.attach(\"domx.fx\", fx);\r\n});\ndefine('skylark-domx-fx/main',[\r\n\t\"./fx\",\r\n\t\"skylark-domx-velm\",\r\n\t\"skylark-domx-query\"\t\r\n],function(fx,velm,$){\r\n    // from ./fx\r\n    velm.delegate([\r\n        \"animate\",\r\n        \"emulateTransitionEnd\",\r\n        \"fadeIn\",\r\n        \"fadeOut\",\r\n        \"fadeTo\",\r\n        \"fadeToggle\",\r\n        \"hide\",\r\n        \"scrollToTop\",\r\n        \"slideDown\",\r\n        \"slideToggle\",\r\n        \"slideUp\",\r\n        \"show\",\r\n        \"toggle\"\r\n    ], fx);\r\n\r\n    $.fn.hide =  $.wraps.wrapper_every_act(fx.hide, fx);\r\n\r\n    $.fn.animate = $.wraps.wrapper_every_act(fx.animate, fx);\r\n    $.fn.emulateTransitionEnd = $.wraps.wrapper_every_act(fx.emulateTransitionEnd, fx);\r\n\r\n    $.fn.show = $.wraps.wrapper_every_act(fx.show, fx);\r\n    $.fn.hide = $.wraps.wrapper_every_act(fx.hide, fx);\r\n    $.fn.toogle = $.wraps.wrapper_every_act(fx.toogle, fx);\r\n    $.fn.fadeTo = $.wraps.wrapper_every_act(fx.fadeTo, fx);\r\n    $.fn.fadeIn = $.wraps.wrapper_every_act(fx.fadeIn, fx);\r\n    $.fn.fadeOut = $.wraps.wrapper_every_act(fx.fadeOut, fx);\r\n    $.fn.fadeToggle = $.wraps.wrapper_every_act(fx.fadeToggle, fx);\r\n\r\n    $.fn.slideDown = $.wraps.wrapper_every_act(fx.slideDown, fx);\r\n    $.fn.slideToggle = $.wraps.wrapper_every_act(fx.slideToggle, fx);\r\n    $.fn.slideUp = $.wraps.wrapper_every_act(fx.slideUp, fx);\r\n\r\n\treturn fx;\r\n});\ndefine('skylark-domx-fx', ['skylark-domx-fx/main'], function (main) { return main; });\n\ndefine('skylark-domx-plugins/plugins',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-data\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-fx\",\r\n    \"skylark-domx-query\",\r\n    \"skylark-domx-velm\"\r\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx, $, elmx) {\r\n    \"use strict\";\r\n\r\n    var slice = Array.prototype.slice,\r\n        concat = Array.prototype.concat,\r\n        pluginKlasses = {},\r\n        shortcuts = {};\r\n\r\n    /*\r\n     * Create or get or destory a plugin instance assocated with the element.\r\n     */\r\n    function instantiate(elm,pluginName,options) {\r\n        var pair = pluginName.split(\":\"),\r\n            instanceDataName = pair[1];\r\n        pluginName = pair[0];\r\n\r\n        if (!instanceDataName) {\r\n            instanceDataName = pluginName;\r\n        }\r\n\r\n        var pluginInstance = datax.data( elm, instanceDataName );\r\n\r\n        if (options === \"instance\") {\r\n            return pluginInstance;\r\n        } else if (options === \"destroy\") {\r\n            if (!pluginInstance) {\r\n                throw new Error (\"The plugin instance is not existed\");\r\n            }\r\n            pluginInstance.destroy();\r\n            datax.removeData( elm, pluginName);\r\n            pluginInstance = undefined;\r\n        } else {\r\n            if (!pluginInstance) {\r\n                if (options !== undefined && typeof options !== \"object\") {\r\n                    throw new Error (\"The options must be a plain object\");\r\n                }\r\n                var pluginKlass = pluginKlasses[pluginName]; \r\n                pluginInstance = new pluginKlass(elm,options);\r\n                datax.data( elm, instanceDataName,pluginInstance );\r\n            } else if (options) {\r\n                pluginInstance.reset(options);\r\n            }\r\n        }\r\n\r\n        return pluginInstance;\r\n    }\r\n\r\n\r\n    function shortcutter(pluginName,extfn) {\r\n       /*\r\n        * Create or get or destory a plugin instance assocated with the element,\r\n        * and also you can execute the plugin method directory;\r\n        */\r\n        return function (elm,options) {\r\n            var  plugin = instantiate(elm, pluginName,\"instance\");\r\n            if ( options === \"instance\" ) {\r\n              return plugin || null;\r\n            }\r\n\r\n            if (!plugin) {\r\n                plugin = instantiate(elm, pluginName,typeof options == 'object' && options || {});\r\n                if (typeof options != \"string\") {\r\n                  return this;\r\n                }\r\n            } \r\n            if (options) {\r\n                var args = slice.call(arguments,1); //2\r\n                if (extfn) {\r\n                    return extfn.apply(plugin,args);\r\n                } else {\r\n                    if (typeof options == 'string') {\r\n                        var methodName = options;\r\n\r\n                        if ( !plugin ) {\r\n                            throw new Error( \"cannot call methods on \" + pluginName +\r\n                                \" prior to initialization; \" +\r\n                                \"attempted to call method '\" + methodName + \"'\" );\r\n                        }\r\n\r\n                        if ( !langx.isFunction( plugin[ methodName ] ) || methodName.charAt( 0 ) === \"_\" ) {\r\n                            throw new Error( \"no such method '\" + methodName + \"' for \" + pluginName +\r\n                                \" plugin instance\" );\r\n                        }\r\n\r\n                        var ret = plugin[methodName].apply(plugin,args);\r\n                        if (ret == plugin) {\r\n                          ret = undefined;\r\n                        }\r\n\r\n                        return ret;\r\n                    }                \r\n                }                \r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Register a plugin type\r\n     */\r\n    function register( pluginKlass,shortcutName,instanceDataName,extfn) {\r\n        var pluginName = pluginKlass.prototype.pluginName;\r\n        \r\n        pluginKlasses[pluginName] = pluginKlass;\r\n\r\n        if (shortcutName) {\r\n            if (instanceDataName && langx.isFunction(instanceDataName)) {\r\n                extfn = instanceDataName;\r\n                instanceDataName = null;\r\n            } \r\n            if (instanceDataName) {\r\n                pluginName = pluginName + \":\" + instanceDataName;\r\n            }\r\n\r\n            var shortcut = shortcuts[shortcutName] = shortcutter(pluginName,extfn);\r\n                \r\n            $.fn[shortcutName] = function(options) {\r\n                var returnValue = this;\r\n\r\n                if ( !this.length && options === \"instance\" ) {\r\n                  returnValue = undefined;\r\n                } else {\r\n                  var args = slice.call(arguments);\r\n                  this.each(function () {\r\n                    var args2 = slice.call(args);\r\n                    args2.unshift(this);\r\n                    var  ret  = shortcut.apply(undefined,args2);\r\n                    if (ret !== undefined) {\r\n                        returnValue = ret;\r\n                    }\r\n                  });\r\n                }\r\n\r\n                return returnValue;\r\n            };\r\n\r\n            elmx.partial(shortcutName,function(options) {\r\n                var  ret  = shortcut(this._elm,options);\r\n                if (ret === undefined) {\r\n                    ret = this;\r\n                }\r\n                return ret;\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n \r\n    var Plugin =   langx.Evented.inherit({\r\n        klassName: \"Plugin\",\r\n\r\n        _construct : function(elm,options) {\r\n           this._elm = elm;\r\n           this._initOptions(options);\r\n        },\r\n\r\n        _initOptions : function(options) {\r\n          var ctor = this.constructor,\r\n              cache = ctor.cache = ctor.cache || {},\r\n              defaults = cache.defaults;\r\n          if (!defaults) {\r\n            var  ctors = [];\r\n            do {\r\n              ctors.unshift(ctor);\r\n              if (ctor === Plugin) {\r\n                break;\r\n              }\r\n              ctor = ctor.superclass;\r\n            } while (ctor);\r\n\r\n            defaults = cache.defaults = {};\r\n            for (var i=0;i<ctors.length;i++) {\r\n              ctor = ctors[i];\r\n              if (ctor.prototype.hasOwnProperty(\"options\")) {\r\n                langx.mixin(defaults,ctor.prototype.options,true);\r\n              }\r\n              if (ctor.hasOwnProperty(\"options\")) {\r\n                langx.mixin(defaults,ctor.options,true);\r\n              }\r\n            }\r\n          }\r\n          Object.defineProperty(this,\"options\",{\r\n            value :langx.mixin({},defaults,options,true)\r\n          });\r\n\r\n          //return this.options = langx.mixin({},defaults,options);\r\n          return this.options;\r\n        },\r\n\r\n\r\n        destroy: function() {\r\n            var that = this;\r\n\r\n            this._destroy();\r\n            // We can probably remove the unbind calls in 2.0\r\n            // all event bindings should go through this._on()\r\n            datax.removeData(this._elm,this.pluginName );\r\n        },\r\n\r\n        _destroy: langx.noop,\r\n\r\n        _delay: function( handler, delay ) {\r\n            function handlerProxy() {\r\n                return ( typeof handler === \"string\" ? instance[ handler ] : handler )\r\n                    .apply( instance, arguments );\r\n            }\r\n            var instance = this;\r\n            return setTimeout( handlerProxy, delay || 0 );\r\n        },\r\n\r\n        option: function( key, value ) {\r\n            var options = key;\r\n            var parts;\r\n            var curOption;\r\n            var i;\r\n\r\n            if ( arguments.length === 0 ) {\r\n\r\n                // Don't return a reference to the internal hash\r\n                return langx.mixin( {}, this.options );\r\n            }\r\n\r\n            if ( typeof key === \"string\" ) {\r\n\r\n                // Handle nested keys, e.g., \"foo.bar\" => { foo: { bar: ___ } }\r\n                options = {};\r\n                parts = key.split( \".\" );\r\n                key = parts.shift();\r\n                if ( parts.length ) {\r\n                    curOption = options[ key ] = langx.mixin( {}, this.options[ key ] );\r\n                    for ( i = 0; i < parts.length - 1; i++ ) {\r\n                        curOption[ parts[ i ] ] = curOption[ parts[ i ] ] || {};\r\n                        curOption = curOption[ parts[ i ] ];\r\n                    }\r\n                    key = parts.pop();\r\n                    if ( arguments.length === 1 ) {\r\n                        return curOption[ key ] === undefined ? null : curOption[ key ];\r\n                    }\r\n                    curOption[ key ] = value;\r\n                } else {\r\n                    if ( arguments.length === 1 ) {\r\n                        return this.options[ key ] === undefined ? null : this.options[ key ];\r\n                    }\r\n                    options[ key ] = value;\r\n                }\r\n            }\r\n\r\n            this._setOptions( options );\r\n\r\n            return this;\r\n        },\r\n\r\n        _setOptions: function( options ) {\r\n            var key;\r\n\r\n            for ( key in options ) {\r\n                this._setOption( key, options[ key ] );\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        _setOption: function( key, value ) {\r\n\r\n            this.options[ key ] = value;\r\n\r\n            return this;\r\n        },\r\n\r\n        getUID : function (prefix) {\r\n            prefix = prefix || \"plugin\";\r\n            do prefix += ~~(Math.random() * 1000000)\r\n            while (document.getElementById(prefix))\r\n            return prefix;\r\n        },\r\n\r\n        elm : function() {\r\n            return this._elm;\r\n        }\r\n\r\n    });\r\n\r\n    $.fn.plugin = function(name,options) {\r\n        var args = slice.call( arguments, 1 ),\r\n            self = this,\r\n            returnValue = this;\r\n\r\n        this.each(function(){\r\n            returnValue = instantiate.apply(self,[this,name].concat(args));\r\n        });\r\n        return returnValue;\r\n    };\r\n\r\n    elmx.partial(\"plugin\",function(name,options) {\r\n        var args = slice.call( arguments, 1 );\r\n        return instantiate.apply(this,[this.domNode,name].concat(args));\r\n    }); \r\n\r\n\r\n    function plugins() {\r\n        return plugins;\r\n    }\r\n     \r\n    langx.mixin(plugins, {\r\n        instantiate,\r\n        Plugin,\r\n        register,\r\n        shortcuts\r\n    });\r\n\r\n    return  skylark.attach(\"domx.plugins\",plugins);\r\n});\ndefine('skylark-domx-plugins/main',[\r\n\t\"./plugins\"\r\n],function(plugins){\r\n\treturn plugins;\r\n});\ndefine('skylark-domx-plugins', ['skylark-domx-plugins/main'], function (main) { return main; });\n\ndefine('skylark-data-color/colors',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\"\r\n],function(skylark,langx) {\r\n    /*\r\n     * This module uses the following open source code:\r\n     *   TinyColor v1.1.2\r\n     *     https://github.com/bgrins/TinyColor\r\n     *     Brian Grinstead, MIT License\r\n     */\r\n\r\n    var colors = skylark.colors =  skylark.colors || {};\r\n\r\n    var trimLeft = /^[\\s,#]+/,\r\n        trimRight = /\\s+$/,\r\n        math = Math,\r\n        mathRound = math.round,\r\n        mathMin = math.min,\r\n        mathMax = math.max,\r\n        mathRandom = math.random;\r\n\r\n\r\n     // Big List of Colors\r\n    // ------------------\r\n    // <http://www.w3.org/TR/css3-color/#svg-color>\r\n    var names = colors.names = {\r\n        aliceblue: \"f0f8ff\",\r\n        antiquewhite: \"faebd7\",\r\n        aqua: \"0ff\",\r\n        aquamarine: \"7fffd4\",\r\n        azure: \"f0ffff\",\r\n        beige: \"f5f5dc\",\r\n        bisque: \"ffe4c4\",\r\n        black: \"000\",\r\n        blanchedalmond: \"ffebcd\",\r\n        blue: \"00f\",\r\n        blueviolet: \"8a2be2\",\r\n        brown: \"a52a2a\",\r\n        burlywood: \"deb887\",\r\n        burntsienna: \"ea7e5d\",\r\n        cadetblue: \"5f9ea0\",\r\n        chartreuse: \"7fff00\",\r\n        chocolate: \"d2691e\",\r\n        coral: \"ff7f50\",\r\n        cornflowerblue: \"6495ed\",\r\n        cornsilk: \"fff8dc\",\r\n        crimson: \"dc143c\",\r\n        cyan: \"0ff\",\r\n        darkblue: \"00008b\",\r\n        darkcyan: \"008b8b\",\r\n        darkgoldenrod: \"b8860b\",\r\n        darkgray: \"a9a9a9\",\r\n        darkgreen: \"006400\",\r\n        darkgrey: \"a9a9a9\",\r\n        darkkhaki: \"bdb76b\",\r\n        darkmagenta: \"8b008b\",\r\n        darkolivegreen: \"556b2f\",\r\n        darkorange: \"ff8c00\",\r\n        darkorchid: \"9932cc\",\r\n        darkred: \"8b0000\",\r\n        darksalmon: \"e9967a\",\r\n        darkseagreen: \"8fbc8f\",\r\n        darkslateblue: \"483d8b\",\r\n        darkslategray: \"2f4f4f\",\r\n        darkslategrey: \"2f4f4f\",\r\n        darkturquoise: \"00ced1\",\r\n        darkviolet: \"9400d3\",\r\n        deeppink: \"ff1493\",\r\n        deepskyblue: \"00bfff\",\r\n        dimgray: \"696969\",\r\n        dimgrey: \"696969\",\r\n        dodgerblue: \"1e90ff\",\r\n        firebrick: \"b22222\",\r\n        floralwhite: \"fffaf0\",\r\n        forestgreen: \"228b22\",\r\n        fuchsia: \"f0f\",\r\n        gainsboro: \"dcdcdc\",\r\n        ghostwhite: \"f8f8ff\",\r\n        gold: \"ffd700\",\r\n        goldenrod: \"daa520\",\r\n        gray: \"808080\",\r\n        green: \"008000\",\r\n        greenyellow: \"adff2f\",\r\n        grey: \"808080\",\r\n        honeydew: \"f0fff0\",\r\n        hotpink: \"ff69b4\",\r\n        indianred: \"cd5c5c\",\r\n        indigo: \"4b0082\",\r\n        ivory: \"fffff0\",\r\n        khaki: \"f0e68c\",\r\n        lavender: \"e6e6fa\",\r\n        lavenderblush: \"fff0f5\",\r\n        lawngreen: \"7cfc00\",\r\n        lemonchiffon: \"fffacd\",\r\n        lightblue: \"add8e6\",\r\n        lightcoral: \"f08080\",\r\n        lightcyan: \"e0ffff\",\r\n        lightgoldenrodyellow: \"fafad2\",\r\n        lightgray: \"d3d3d3\",\r\n        lightgreen: \"90ee90\",\r\n        lightgrey: \"d3d3d3\",\r\n        lightpink: \"ffb6c1\",\r\n        lightsalmon: \"ffa07a\",\r\n        lightseagreen: \"20b2aa\",\r\n        lightskyblue: \"87cefa\",\r\n        lightslategray: \"789\",\r\n        lightslategrey: \"789\",\r\n        lightsteelblue: \"b0c4de\",\r\n        lightyellow: \"ffffe0\",\r\n        lime: \"0f0\",\r\n        limegreen: \"32cd32\",\r\n        linen: \"faf0e6\",\r\n        magenta: \"f0f\",\r\n        maroon: \"800000\",\r\n        mediumaquamarine: \"66cdaa\",\r\n        mediumblue: \"0000cd\",\r\n        mediumorchid: \"ba55d3\",\r\n        mediumpurple: \"9370db\",\r\n        mediumseagreen: \"3cb371\",\r\n        mediumslateblue: \"7b68ee\",\r\n        mediumspringgreen: \"00fa9a\",\r\n        mediumturquoise: \"48d1cc\",\r\n        mediumvioletred: \"c71585\",\r\n        midnightblue: \"191970\",\r\n        mintcream: \"f5fffa\",\r\n        mistyrose: \"ffe4e1\",\r\n        moccasin: \"ffe4b5\",\r\n        navajowhite: \"ffdead\",\r\n        navy: \"000080\",\r\n        oldlace: \"fdf5e6\",\r\n        olive: \"808000\",\r\n        olivedrab: \"6b8e23\",\r\n        orange: \"ffa500\",\r\n        orangered: \"ff4500\",\r\n        orchid: \"da70d6\",\r\n        palegoldenrod: \"eee8aa\",\r\n        palegreen: \"98fb98\",\r\n        paleturquoise: \"afeeee\",\r\n        palevioletred: \"db7093\",\r\n        papayawhip: \"ffefd5\",\r\n        peachpuff: \"ffdab9\",\r\n        peru: \"cd853f\",\r\n        pink: \"ffc0cb\",\r\n        plum: \"dda0dd\",\r\n        powderblue: \"b0e0e6\",\r\n        purple: \"800080\",\r\n        rebeccapurple: \"663399\",\r\n        red: \"f00\",\r\n        rosybrown: \"bc8f8f\",\r\n        royalblue: \"4169e1\",\r\n        saddlebrown: \"8b4513\",\r\n        salmon: \"fa8072\",\r\n        sandybrown: \"f4a460\",\r\n        seagreen: \"2e8b57\",\r\n        seashell: \"fff5ee\",\r\n        sienna: \"a0522d\",\r\n        silver: \"c0c0c0\",\r\n        skyblue: \"87ceeb\",\r\n        slateblue: \"6a5acd\",\r\n        slategray: \"708090\",\r\n        slategrey: \"708090\",\r\n        snow: \"fffafa\",\r\n        springgreen: \"00ff7f\",\r\n        steelblue: \"4682b4\",\r\n        tan: \"d2b48c\",\r\n        teal: \"008080\",\r\n        thistle: \"d8bfd8\",\r\n        tomato: \"ff6347\",\r\n        turquoise: \"40e0d0\",\r\n        violet: \"ee82ee\",\r\n        wheat: \"f5deb3\",\r\n        white: \"fff\",\r\n        whitesmoke: \"f5f5f5\",\r\n        yellow: \"ff0\",\r\n        yellowgreen: \"9acd32\"\r\n    };\r\n\r\n    // Make it easy to access colors via `hexNames[hex]`\r\n    var hexNames = colors.hexNames = flip(names);\r\n\r\n\r\n    // Utilities\r\n    // ---------\r\n\r\n    // `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`\r\n    function flip(o) {\r\n        var flipped = { };\r\n        for (var i in o) {\r\n            if (o.hasOwnProperty(i)) {\r\n                flipped[o[i]] = i;\r\n            }\r\n        }\r\n        return flipped;\r\n    }\r\n       \r\n\r\n\r\n    // Given a string or object, convert that input to RGB\r\n    // Possible string inputs:\r\n    //\r\n    //     \"red\"\r\n    //     \"#f00\" or \"f00\"\r\n    //     \"#ff0000\" or \"ff0000\"\r\n    //     \"#ff000000\" or \"ff000000\"\r\n    //     \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\r\n    //     \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\r\n    //     \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\r\n    //     \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\r\n    //     \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\r\n    //     \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\r\n    //     \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\r\n    //\r\n    function inputToRGB(color) {\r\n\r\n        var rgb = { r: 0, g: 0, b: 0 };\r\n        var a = 1;\r\n        var ok = false;\r\n        var format = false;\r\n\r\n        if (typeof color == \"string\") {\r\n            color = stringInputToObject(color);\r\n        }\r\n\r\n        if (typeof color == \"object\") {\r\n            if (color.hasOwnProperty(\"r\") && color.hasOwnProperty(\"g\") && color.hasOwnProperty(\"b\")) {\r\n                rgb = rgbToRgb(color.r, color.g, color.b);\r\n                ok = true;\r\n                format = String(color.r).substr(-1) === \"%\" ? \"prgb\" : \"rgb\";\r\n            }\r\n            else if (color.hasOwnProperty(\"h\") && color.hasOwnProperty(\"s\") && color.hasOwnProperty(\"v\")) {\r\n                color.s = convertToPercentage(color.s);\r\n                color.v = convertToPercentage(color.v);\r\n                rgb = hsvToRgb(color.h, color.s, color.v);\r\n                ok = true;\r\n                format = \"hsv\";\r\n            }\r\n            else if (color.hasOwnProperty(\"h\") && color.hasOwnProperty(\"s\") && color.hasOwnProperty(\"l\")) {\r\n                color.s = convertToPercentage(color.s);\r\n                color.l = convertToPercentage(color.l);\r\n                rgb = hslToRgb(color.h, color.s, color.l);\r\n                ok = true;\r\n                format = \"hsl\";\r\n            }\r\n\r\n            if (color.hasOwnProperty(\"a\")) {\r\n                a = color.a;\r\n            }\r\n        }\r\n\r\n        a = boundAlpha(a);\r\n\r\n        return {\r\n            ok: ok,\r\n            format: color.format || format,\r\n            r: mathMin(255, mathMax(rgb.r, 0)),\r\n            g: mathMin(255, mathMax(rgb.g, 0)),\r\n            b: mathMin(255, mathMax(rgb.b, 0)),\r\n            a: a\r\n        };\r\n    }\r\n\r\n\r\n    // Conversion Functions\r\n    // --------------------\r\n\r\n    // `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\r\n    // <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\r\n\r\n    // `rgbToRgb`\r\n    // Handle bounds / percentage checking to conform to CSS color spec\r\n    // <http://www.w3.org/TR/css3-color/>\r\n    // *Assumes:* r, g, b in [0, 255] or [0, 1]\r\n    // *Returns:* { r, g, b } in [0, 255]\r\n    function rgbToRgb(r, g, b){\r\n        return {\r\n            r: bound01(r, 255) * 255,\r\n            g: bound01(g, 255) * 255,\r\n            b: bound01(b, 255) * 255\r\n        };\r\n    }\r\n\r\n    // `rgbToHsl`\r\n    // Converts an RGB color value to HSL.\r\n    // *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\r\n    // *Returns:* { h, s, l } in [0,1]\r\n    function rgbToHsl(r, g, b) {\r\n\r\n        r = bound01(r, 255);\r\n        g = bound01(g, 255);\r\n        b = bound01(b, 255);\r\n\r\n        var max = mathMax(r, g, b), min = mathMin(r, g, b);\r\n        var h, s, l = (max + min) / 2;\r\n\r\n        if(max == min) {\r\n            h = s = 0; // achromatic\r\n        }\r\n        else {\r\n            var d = max - min;\r\n            s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n            switch(max) {\r\n                case r: h = (g - b) / d + (g < b ? 6 : 0); break;\r\n                case g: h = (b - r) / d + 2; break;\r\n                case b: h = (r - g) / d + 4; break;\r\n            }\r\n\r\n            h /= 6;\r\n        }\r\n\r\n        return { h: h, s: s, l: l };\r\n    }\r\n\r\n    // `hslToRgb`\r\n    // Converts an HSL color value to RGB.\r\n    // *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\r\n    // *Returns:* { r, g, b } in the set [0, 255]\r\n    function hslToRgb(h, s, l) {\r\n        var r, g, b;\r\n\r\n        h = bound01(h, 360);\r\n        s = bound01(s, 100);\r\n        l = bound01(l, 100);\r\n\r\n        function hue2rgb(p, q, t) {\r\n            if(t < 0) t += 1;\r\n            if(t > 1) t -= 1;\r\n            if(t < 1/6) return p + (q - p) * 6 * t;\r\n            if(t < 1/2) return q;\r\n            if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\r\n            return p;\r\n        }\r\n\r\n        if(s === 0) {\r\n            r = g = b = l; // achromatic\r\n        }\r\n        else {\r\n            var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n            var p = 2 * l - q;\r\n            r = hue2rgb(p, q, h + 1/3);\r\n            g = hue2rgb(p, q, h);\r\n            b = hue2rgb(p, q, h - 1/3);\r\n        }\r\n\r\n        return { r: r * 255, g: g * 255, b: b * 255 };\r\n    }\r\n\r\n    // `rgbToHsv`\r\n    // Converts an RGB color value to HSV\r\n    // *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\r\n    // *Returns:* { h, s, v } in [0,1]\r\n    function rgbToHsv(r, g, b) {\r\n\r\n        r = bound01(r, 255);\r\n        g = bound01(g, 255);\r\n        b = bound01(b, 255);\r\n\r\n        var max = mathMax(r, g, b), min = mathMin(r, g, b);\r\n        var h, s, v = max;\r\n\r\n        var d = max - min;\r\n        s = max === 0 ? 0 : d / max;\r\n\r\n        if(max == min) {\r\n            h = 0; // achromatic\r\n        }\r\n        else {\r\n            switch(max) {\r\n                case r: h = (g - b) / d + (g < b ? 6 : 0); break;\r\n                case g: h = (b - r) / d + 2; break;\r\n                case b: h = (r - g) / d + 4; break;\r\n            }\r\n            h /= 6;\r\n        }\r\n        return { h: h, s: s, v: v };\r\n    }\r\n\r\n    // `hsvToRgb`\r\n    // Converts an HSV color value to RGB.\r\n    // *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\r\n    // *Returns:* { r, g, b } in the set [0, 255]\r\n     function hsvToRgb(h, s, v) {\r\n\r\n        h = bound01(h, 360) * 6;\r\n        s = bound01(s, 100);\r\n        v = bound01(v, 100);\r\n\r\n        var i = math.floor(h),\r\n            f = h - i,\r\n            p = v * (1 - s),\r\n            q = v * (1 - f * s),\r\n            t = v * (1 - (1 - f) * s),\r\n            mod = i % 6,\r\n            r = [v, q, p, p, t, v][mod],\r\n            g = [t, v, v, q, p, p][mod],\r\n            b = [p, p, t, v, v, q][mod];\r\n\r\n        return { r: r * 255, g: g * 255, b: b * 255 };\r\n    }\r\n\r\n    // `rgbToHex`\r\n    // Converts an RGB color to hex\r\n    // Assumes r, g, and b are contained in the set [0, 255]\r\n    // Returns a 3 or 6 character hex\r\n    function rgbToHex(r, g, b, allow3Char) {\r\n\r\n        var hex = [\r\n            pad2(mathRound(r).toString(16)),\r\n            pad2(mathRound(g).toString(16)),\r\n            pad2(mathRound(b).toString(16))\r\n        ];\r\n\r\n        // Return a 3 character hex if possible\r\n        if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {\r\n            return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\r\n        }\r\n\r\n        return hex.join(\"\");\r\n    }\r\n\r\n    // `rgbaToHex`\r\n    // Converts an RGBA color plus alpha transparency to hex\r\n    // Assumes r, g, b and a are contained in the set [0, 255]\r\n    // Returns an 8 character hex\r\n    function rgbaToHex(r, g, b, a) {\r\n\r\n        var hex = [\r\n            pad2(convertDecimalToHex(a)),\r\n            pad2(mathRound(r).toString(16)),\r\n            pad2(mathRound(g).toString(16)),\r\n            pad2(mathRound(b).toString(16))\r\n        ];\r\n\r\n        return hex.join(\"\");\r\n    }\r\n\r\n\r\n\r\n    // Return a valid alpha value [0,1] with all invalid values being set to 1\r\n    function boundAlpha(a) {\r\n        a = parseFloat(a);\r\n\r\n        if (isNaN(a) || a < 0 || a > 1) {\r\n            a = 1;\r\n        }\r\n\r\n        return a;\r\n    }\r\n\r\n    // Take input from [0, n] and return it as [0, 1]\r\n    function bound01(n, max) {\r\n        if (isOnePointZero(n)) { n = \"100%\"; }\r\n\r\n        var processPercent = isPercentage(n);\r\n        n = mathMin(max, mathMax(0, parseFloat(n)));\r\n\r\n        // Automatically convert percentage into number\r\n        if (processPercent) {\r\n            n = parseInt(n * max, 10) / 100;\r\n        }\r\n\r\n        // Handle floating point rounding errors\r\n        if ((math.abs(n - max) < 0.000001)) {\r\n            return 1;\r\n        }\r\n\r\n        // Convert into [0, 1] range if it isn't already\r\n        return (n % max) / parseFloat(max);\r\n    }\r\n\r\n    // Force a number between 0 and 1\r\n    function clamp01(val) {\r\n        return mathMin(1, mathMax(0, val));\r\n    }\r\n\r\n    // Parse a base-16 hex value into a base-10 integer\r\n    function parseIntFromHex(val) {\r\n        return parseInt(val, 16);\r\n    }\r\n\r\n    // Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\r\n    // <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\r\n    function isOnePointZero(n) {\r\n        return typeof n == \"string\" && n.indexOf('.') != -1 && parseFloat(n) === 1;\r\n    }\r\n\r\n    // Check to see if string passed in is a percentage\r\n    function isPercentage(n) {\r\n        return typeof n === \"string\" && n.indexOf('%') != -1;\r\n    }\r\n\r\n    // Force a hex value to have 2 characters\r\n    function pad2(c) {\r\n        return c.length == 1 ? '0' + c : '' + c;\r\n    }\r\n\r\n    // Replace a decimal with it's percentage value\r\n    function convertToPercentage(n) {\r\n        if (n <= 1) {\r\n            n = (n * 100) + \"%\";\r\n        }\r\n\r\n        return n;\r\n    }\r\n\r\n    // Converts a decimal to a hex value\r\n    function convertDecimalToHex(d) {\r\n        return Math.round(parseFloat(d) * 255).toString(16);\r\n    }\r\n    // Converts a hex value to a decimal\r\n    function convertHexToDecimal(h) {\r\n        return (parseIntFromHex(h) / 255);\r\n    }\r\n\r\n    var matchers = (function() {\r\n\r\n        // <http://www.w3.org/TR/css3-values/#integers>\r\n        var CSS_INTEGER = \"[-\\\\+]?\\\\d+%?\";\r\n\r\n        // <http://www.w3.org/TR/css3-values/#number-value>\r\n        var CSS_NUMBER = \"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\";\r\n\r\n        // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\r\n        var CSS_UNIT = \"(?:\" + CSS_NUMBER + \")|(?:\" + CSS_INTEGER + \")\";\r\n\r\n        // Actual matching.\r\n        // Parentheses and commas are optional, but not required.\r\n        // Whitespace can take the place of commas or opening paren\r\n        var PERMISSIVE_MATCH3 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\r\n        var PERMISSIVE_MATCH4 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\r\n\r\n        return {\r\n            rgb: new RegExp(\"rgb\" + PERMISSIVE_MATCH3),\r\n            rgba: new RegExp(\"rgba\" + PERMISSIVE_MATCH4),\r\n            hsl: new RegExp(\"hsl\" + PERMISSIVE_MATCH3),\r\n            hsla: new RegExp(\"hsla\" + PERMISSIVE_MATCH4),\r\n            hsv: new RegExp(\"hsv\" + PERMISSIVE_MATCH3),\r\n            hsva: new RegExp(\"hsva\" + PERMISSIVE_MATCH4),\r\n            hex3: /^([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\r\n            hex6: /^([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\r\n            hex8: /^([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\r\n        };\r\n    })();\r\n\r\n    // `stringInputToObject`\r\n    // Permissive string parsing.  Take in a number of formats, and output an object\r\n    // based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\r\n    function stringInputToObject(color) {\r\n\r\n        color = color.replace(trimLeft,'').replace(trimRight, '').toLowerCase();\r\n        var named = false;\r\n        if (names[color]) {\r\n            color = names[color];\r\n            named = true;\r\n        }\r\n        else if (color == 'transparent') {\r\n            return { r: 0, g: 0, b: 0, a: 0, format: \"name\" };\r\n        }\r\n\r\n        // Try to match string input using regular expressions.\r\n        // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\r\n        // Just return an object and let the conversion functions handle that.\r\n        // This way the result will be the same whether the tinycolor is initialized with string or object.\r\n        var match;\r\n        if ((match = matchers.rgb.exec(color))) {\r\n            return { r: match[1], g: match[2], b: match[3] };\r\n        }\r\n        if ((match = matchers.rgba.exec(color))) {\r\n            return { r: match[1], g: match[2], b: match[3], a: match[4] };\r\n        }\r\n        if ((match = matchers.hsl.exec(color))) {\r\n            return { h: match[1], s: match[2], l: match[3] };\r\n        }\r\n        if ((match = matchers.hsla.exec(color))) {\r\n            return { h: match[1], s: match[2], l: match[3], a: match[4] };\r\n        }\r\n        if ((match = matchers.hsv.exec(color))) {\r\n            return { h: match[1], s: match[2], v: match[3] };\r\n        }\r\n        if ((match = matchers.hsva.exec(color))) {\r\n            return { h: match[1], s: match[2], v: match[3], a: match[4] };\r\n        }\r\n        if ((match = matchers.hex8.exec(color))) {\r\n            return {\r\n                a: convertHexToDecimal(match[1]),\r\n                r: parseIntFromHex(match[2]),\r\n                g: parseIntFromHex(match[3]),\r\n                b: parseIntFromHex(match[4]),\r\n                format: named ? \"name\" : \"hex8\"\r\n            };\r\n        }\r\n        if ((match = matchers.hex6.exec(color))) {\r\n            return {\r\n                r: parseIntFromHex(match[1]),\r\n                g: parseIntFromHex(match[2]),\r\n                b: parseIntFromHex(match[3]),\r\n                format: named ? \"name\" : \"hex\"\r\n            };\r\n        }\r\n        if ((match = matchers.hex3.exec(color))) {\r\n            return {\r\n                r: parseIntFromHex(match[1] + '' + match[1]),\r\n                g: parseIntFromHex(match[2] + '' + match[2]),\r\n                b: parseIntFromHex(match[3] + '' + match[3]),\r\n                format: named ? \"name\" : \"hex\"\r\n            };\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    langx.mixin(colors,{\r\n        inputToRGB : inputToRGB,\r\n        rgbToRgb : rgbToRgb,\r\n        rgbToHsl : rgbToHsl,\r\n        hslToRgb : hslToRgb,\r\n        rgbToHsv : rgbToHsv,\r\n        hsvToRgb : hsvToRgb,\r\n        rgbToHex : rgbToHex,\r\n        rgbaToHex : rgbaToHex,\r\n        boundAlpha : boundAlpha,\r\n        bound01 : bound01,\r\n        clamp01 : clamp01,\r\n        parseIntFromHex : parseIntFromHex,\r\n        isOnePointZero : isOnePointZero,\r\n        isPercentage : isPercentage,\r\n        pad2 : pad2,\r\n        convertToPercentage : convertToPercentage,\r\n        convertHexToDecimal : convertHexToDecimal,\r\n        stringInputToObject : stringInputToObject\r\n\r\n    });\r\n\r\n    return skylark.attach(\"data.colors\",colors);\r\n\r\n});\r\n\ndefine('skylark-data-color/Color',[\r\n    \"skylark-langx/langx\",\r\n    \"./colors\"\r\n],function(langx,colors) {\r\n    /*\r\n     * This module uses the following open source code:\r\n     *   TinyColor v1.1.2\r\n     *     https://github.com/bgrins/TinyColor\r\n     *     Brian Grinstead, MIT License\r\n     */\r\n\r\n    var inputToRGB = colors.inputToRGB,\r\n        rgbToRgb = colors.rgbToRgb,\r\n        rgbToHsl = colors.rgbToHsl,\r\n        hslToRgb = colors.hslToRgb,\r\n        rgbToHsv = colors.rgbToHsv,\r\n        rgbToHex = colors.rgbToHex,\r\n        rgbaToHex = colors.rgbaToHex,\r\n        boundAlpha = colors.boundAlpha,\r\n        bound01 = colors.bound01,\r\n        clamp01 = colors.clamp01,\r\n        parseIntFromHex = colors.parseIntFromHex,\r\n        isOnePointZero = colors.isOnePointZero,\r\n        isPercentage = colors.isPercentage,\r\n        pad2 = colors.pad2,\r\n        convertToPercentage = colors.convertToPercentage,\r\n        convertHexToDecimal = colors.convertHexToDecimal,\r\n        stringInputToObject = colors.stringInputToObject,\r\n        hexNames = colors.hexNames;\r\n\r\n    var tinyCounter = 0,\r\n        math = Math,\r\n        mathRound = math.round,\r\n        mathMin = math.min,\r\n        mathMax = math.max,\r\n        mathRandom = math.random;\r\n\r\n\tvar Color = colors.Color = langx.klass({\r\n\t\tinit : function(color, opts) {\r\n\t        color = (color) ? color : '';\r\n    \t    opts = opts || { };\r\n\r\n\t        // If input is already a Color, return itself\r\n\t        if (color instanceof Color) {\r\n\t           return color;\r\n\t        }\r\n\r\n\t        var rgb = inputToRGB(color);\r\n\t        this._originalInput = color,\r\n\t        this._r = rgb.r,\r\n\t        this._g = rgb.g,\r\n\t        this._b = rgb.b,\r\n\t        this._a = rgb.a,\r\n\t        this._roundA = mathRound(1000 * this._a) / 1000,\r\n\t        this._format = opts.format || rgb.format;\r\n\t        this._gradientType = opts.gradientType;\r\n\r\n\t        // Don't let the range of [0,255] come back in [0,1].\r\n\t        // Potentially lose a little bit of precision here, but will fix issues where\r\n\t        // .5 gets interpreted as half of the total, instead of half of 1\r\n\t        // If it was supposed to be 128, this was already taken care of by `inputToRgb`\r\n\t        if (this._r < 1) { this._r = mathRound(this._r); }\r\n\t        if (this._g < 1) { this._g = mathRound(this._g); }\r\n\t        if (this._b < 1) { this._b = mathRound(this._b); }\r\n\r\n\t        this._ok = rgb.ok;\r\n\t        this._tc_id = tinyCounter++;\r\n\t    },\r\n\r\n        isDark: function() {\r\n            return this.getBrightness() < 128;\r\n        },\r\n        isLight: function() {\r\n            return !this.isDark();\r\n        },\r\n        isValid: function() {\r\n            return this._ok;\r\n        },\r\n        getOriginalInput: function() {\r\n          return this._originalInput;\r\n        },\r\n        getFormat: function() {\r\n            return this._format;\r\n        },\r\n        getAlpha: function() {\r\n            return this._a;\r\n        },\r\n        getBrightness: function() {\r\n            var rgb = this.toRgb();\r\n            return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\r\n        },\r\n        setAlpha: function(value) {\r\n            this._a = boundAlpha(value);\r\n            this._roundA = mathRound(1000 * this._a) / 1000;\r\n            return this;\r\n        },\r\n        toHsv: function() {\r\n            var hsv = rgbToHsv(this._r, this._g, this._b);\r\n            return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this._a };\r\n        },\r\n        toHsvString: function() {\r\n            var hsv = rgbToHsv(this._r, this._g, this._b);\r\n            var h = mathRound(hsv.h * 360), s = mathRound(hsv.s * 100), v = mathRound(hsv.v * 100);\r\n            return (this._a == 1) ?\r\n              \"hsv(\"  + h + \", \" + s + \"%, \" + v + \"%)\" :\r\n              \"hsva(\" + h + \", \" + s + \"%, \" + v + \"%, \"+ this._roundA + \")\";\r\n        },\r\n        toHsl: function() {\r\n            var hsl = rgbToHsl(this._r, this._g, this._b);\r\n            return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this._a };\r\n        },\r\n        toHslString: function() {\r\n            var hsl = rgbToHsl(this._r, this._g, this._b);\r\n            var h = mathRound(hsl.h * 360), s = mathRound(hsl.s * 100), l = mathRound(hsl.l * 100);\r\n            return (this._a == 1) ?\r\n              \"hsl(\"  + h + \", \" + s + \"%, \" + l + \"%)\" :\r\n              \"hsla(\" + h + \", \" + s + \"%, \" + l + \"%, \"+ this._roundA + \")\";\r\n        },\r\n        toHex: function(allow3Char) {\r\n            return rgbToHex(this._r, this._g, this._b, allow3Char);\r\n        },\r\n        toHexString: function(allow3Char) {\r\n            return '#' + this.toHex(allow3Char);\r\n        },\r\n        toHex8: function() {\r\n            return rgbaToHex(this._r, this._g, this._b, this._a);\r\n        },\r\n        toHex8String: function() {\r\n            return '#' + this.toHex8();\r\n        },\r\n        toRgb: function() {\r\n            return { r: mathRound(this._r), g: mathRound(this._g), b: mathRound(this._b), a: this._a };\r\n        },\r\n        toRgbString: function() {\r\n            return (this._a == 1) ?\r\n              \"rgb(\"  + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \")\" :\r\n              \"rgba(\" + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \", \" + this._roundA + \")\";\r\n        },\r\n        toPercentageRgb: function() {\r\n            return { r: mathRound(bound01(this._r, 255) * 100) + \"%\", g: mathRound(bound01(this._g, 255) * 100) + \"%\", b: mathRound(bound01(this._b, 255) * 100) + \"%\", a: this._a };\r\n        },\r\n        toPercentageRgbString: function() {\r\n            return (this._a == 1) ?\r\n              \"rgb(\"  + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%)\" :\r\n              \"rgba(\" + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%, \" + this._roundA + \")\";\r\n        },\r\n        toName: function() {\r\n            if (this._a === 0) {\r\n                return \"transparent\";\r\n            }\r\n\r\n            if (this._a < 1) {\r\n                return false;\r\n            }\r\n\r\n            return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;\r\n        },\r\n        toFilter: function(secondColor) {\r\n            var hex8String = '#' + rgbaToHex(this._r, this._g, this._b, this._a);\r\n            var secondHex8String = hex8String;\r\n            var gradientType = this._gradientType ? \"GradientType = 1, \" : \"\";\r\n\r\n            if (secondColor) {\r\n                var s = Color(secondColor);\r\n                secondHex8String = s.toHex8String();\r\n            }\r\n\r\n            return \"progid:DXImageTransform.Microsoft.gradient(\"+gradientType+\"startColorstr=\"+hex8String+\",endColorstr=\"+secondHex8String+\")\";\r\n        },\r\n        toString: function(format) {\r\n            var formatSet = !!format;\r\n            format = format || this._format;\r\n\r\n            var formattedString = false;\r\n            var hasAlpha = this._a < 1 && this._a >= 0;\r\n            var needsAlphaFormat = !formatSet && hasAlpha && (format === \"hex\" || format === \"hex6\" || format === \"hex3\" || format === \"name\");\r\n\r\n            if (needsAlphaFormat) {\r\n                // Special case for \"transparent\", all other non-alpha formats\r\n                // will return rgba when there is transparency.\r\n                if (format === \"name\" && this._a === 0) {\r\n                    return this.toName();\r\n                }\r\n                return this.toRgbString();\r\n            }\r\n            if (format === \"rgb\") {\r\n                formattedString = this.toRgbString();\r\n            }\r\n            if (format === \"prgb\") {\r\n                formattedString = this.toPercentageRgbString();\r\n            }\r\n            if (format === \"hex\" || format === \"hex6\") {\r\n                formattedString = this.toHexString();\r\n            }\r\n            if (format === \"hex3\") {\r\n                formattedString = this.toHexString(true);\r\n            }\r\n            if (format === \"hex8\") {\r\n                formattedString = this.toHex8String();\r\n            }\r\n            if (format === \"name\") {\r\n                formattedString = this.toName();\r\n            }\r\n            if (format === \"hsl\") {\r\n                formattedString = this.toHslString();\r\n            }\r\n            if (format === \"hsv\") {\r\n                formattedString = this.toHsvString();\r\n            }\r\n\r\n            return formattedString || this.toHexString();\r\n        },\r\n\r\n        _applyModification: function(fn, args) {\r\n            var color = fn.apply(null, [this].concat([].slice.call(args)));\r\n            this._r = color._r;\r\n            this._g = color._g;\r\n            this._b = color._b;\r\n            this.setAlpha(color._a);\r\n            return this;\r\n        },\r\n        lighten: function() {\r\n            return this._applyModification(lighten, arguments);\r\n        },\r\n        brighten: function() {\r\n            return this._applyModification(brighten, arguments);\r\n        },\r\n        darken: function() {\r\n            return this._applyModification(darken, arguments);\r\n        },\r\n        desaturate: function() {\r\n            return this._applyModification(desaturate, arguments);\r\n        },\r\n        saturate: function() {\r\n            return this._applyModification(saturate, arguments);\r\n        },\r\n        greyscale: function() {\r\n            return this._applyModification(greyscale, arguments);\r\n        },\r\n        spin: function() {\r\n            return this._applyModification(spin, arguments);\r\n        },\r\n\r\n        _applyCombination: function(fn, args) {\r\n            return fn.apply(null, [this].concat([].slice.call(args)));\r\n        },\r\n        analogous: function() {\r\n            return this._applyCombination(analogous, arguments);\r\n        },\r\n        complement: function() {\r\n            return this._applyCombination(complement, arguments);\r\n        },\r\n        monochromatic: function() {\r\n            return this._applyCombination(monochromatic, arguments);\r\n        },\r\n        splitcomplement: function() {\r\n            return this._applyCombination(splitcomplement, arguments);\r\n        },\r\n        triad: function() {\r\n            return this._applyCombination(triad, arguments);\r\n        },\r\n        tetrad: function() {\r\n            return this._applyCombination(tetrad, arguments);\r\n        }\r\n\t});\r\n\r\n\r\n\r\n    // If input is an object, force 1 into \"1.0\" to handle ratios properly\r\n    // String input requires \"1.0\" as input, so 1 will be treated as 1\r\n    Color.fromRatio = function(color, opts) {\r\n        if (typeof color == \"object\") {\r\n            var newColor = {};\r\n            for (var i in color) {\r\n                if (color.hasOwnProperty(i)) {\r\n                    if (i === \"a\") {\r\n                        newColor[i] = color[i];\r\n                    }\r\n                    else {\r\n                        newColor[i] = convertToPercentage(color[i]);\r\n                    }\r\n                }\r\n            }\r\n            color = newColor;\r\n        }\r\n\r\n        return Color(color, opts);\r\n    };\r\n\r\n    // `equals`\r\n    // Can be called with any Color input\r\n    Color.equals = function (color1, color2) {\r\n        if (!color1 || !color2) { return false; }\r\n        return Color(color1).toRgbString() == Color(color2).toRgbString();\r\n    };\r\n    \r\n    Color.random = function() {\r\n        return Color.fromRatio({\r\n            r: mathRandom(),\r\n            g: mathRandom(),\r\n            b: mathRandom()\r\n        });\r\n    };\r\n\r\n   // Modification Functions\r\n    // ----------------------\r\n    // Thanks to less.js for some of the basics here\r\n    // <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>\r\n\r\n    function desaturate(color, amount) {\r\n        amount = (amount === 0) ? 0 : (amount || 10);\r\n        var hsl = Color(color).toHsl();\r\n        hsl.s -= amount / 100;\r\n        hsl.s = clamp01(hsl.s);\r\n        return Color(hsl);\r\n    }\r\n\r\n    function saturate(color, amount) {\r\n        amount = (amount === 0) ? 0 : (amount || 10);\r\n        var hsl = Color(color).toHsl();\r\n        hsl.s += amount / 100;\r\n        hsl.s = clamp01(hsl.s);\r\n        return Color(hsl);\r\n    }\r\n\r\n    function greyscale(color) {\r\n        return Color(color).desaturate(100);\r\n    }\r\n\r\n    function lighten (color, amount) {\r\n        amount = (amount === 0) ? 0 : (amount || 10);\r\n        var hsl = Color(color).toHsl();\r\n        hsl.l += amount / 100;\r\n        hsl.l = clamp01(hsl.l);\r\n        return Color(hsl);\r\n    }\r\n\r\n    function brighten(color, amount) {\r\n        amount = (amount === 0) ? 0 : (amount || 10);\r\n        var rgb = Color(color).toRgb();\r\n        rgb.r = mathMax(0, mathMin(255, rgb.r - mathRound(255 * - (amount / 100))));\r\n        rgb.g = mathMax(0, mathMin(255, rgb.g - mathRound(255 * - (amount / 100))));\r\n        rgb.b = mathMax(0, mathMin(255, rgb.b - mathRound(255 * - (amount / 100))));\r\n        return Color(rgb);\r\n    }\r\n\r\n    function darken (color, amount) {\r\n        amount = (amount === 0) ? 0 : (amount || 10);\r\n        var hsl = Color(color).toHsl();\r\n        hsl.l -= amount / 100;\r\n        hsl.l = clamp01(hsl.l);\r\n        return Color(hsl);\r\n    }\r\n\r\n    // Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\r\n    // Values outside of this range will be wrapped into this range.\r\n    function spin(color, amount) {\r\n        var hsl = Color(color).toHsl();\r\n        var hue = (mathRound(hsl.h) + amount) % 360;\r\n        hsl.h = hue < 0 ? 360 + hue : hue;\r\n        return Color(hsl);\r\n    }\r\n\r\n    // Combination Functions\r\n    // ---------------------\r\n    // Thanks to jQuery xColor for some of the ideas behind these\r\n    // <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>\r\n\r\n    function complement(color) {\r\n        var hsl = Color(color).toHsl();\r\n        hsl.h = (hsl.h + 180) % 360;\r\n        return Color(hsl);\r\n    }\r\n\r\n    function triad(color) {\r\n        var hsl = Color(color).toHsl();\r\n        var h = hsl.h;\r\n        return [\r\n            Color(color),\r\n            Color({ h: (h + 120) % 360, s: hsl.s, l: hsl.l }),\r\n            Color({ h: (h + 240) % 360, s: hsl.s, l: hsl.l })\r\n        ];\r\n    }\r\n\r\n    function tetrad(color) {\r\n        var hsl = Color(color).toHsl();\r\n        var h = hsl.h;\r\n        return [\r\n            Color(color),\r\n            Color({ h: (h + 90) % 360, s: hsl.s, l: hsl.l }),\r\n            Color({ h: (h + 180) % 360, s: hsl.s, l: hsl.l }),\r\n            Color({ h: (h + 270) % 360, s: hsl.s, l: hsl.l })\r\n        ];\r\n    }\r\n\r\n    function splitcomplement(color) {\r\n        var hsl = Color(color).toHsl();\r\n        var h = hsl.h;\r\n        return [\r\n            Color(color),\r\n            Color({ h: (h + 72) % 360, s: hsl.s, l: hsl.l}),\r\n            Color({ h: (h + 216) % 360, s: hsl.s, l: hsl.l})\r\n        ];\r\n    }\r\n\r\n    function analogous(color, results, slices) {\r\n        results = results || 6;\r\n        slices = slices || 30;\r\n\r\n        var hsl = Color(color).toHsl();\r\n        var part = 360 / slices;\r\n        var ret = [Color(color)];\r\n\r\n        for (hsl.h = ((hsl.h - (part * results >> 1)) + 720) % 360; --results; ) {\r\n            hsl.h = (hsl.h + part) % 360;\r\n            ret.push(Color(hsl));\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function monochromatic(color, results) {\r\n        results = results || 6;\r\n        var hsv = Color(color).toHsv();\r\n        var h = hsv.h, s = hsv.s, v = hsv.v;\r\n        var ret = [];\r\n        var modification = 1 / results;\r\n\r\n        while (results--) {\r\n            ret.push(Color({ h: h, s: s, v: v}));\r\n            v = (v + modification) % 1;\r\n        }\r\n\r\n        return ret;\r\n    }\r\n\r\n    // Utility Functions\r\n    // ---------------------\r\n\r\n    Color.mix = function(color1, color2, amount) {\r\n        amount = (amount === 0) ? 0 : (amount || 50);\r\n\r\n        var rgb1 = Color(color1).toRgb();\r\n        var rgb2 = Color(color2).toRgb();\r\n\r\n        var p = amount / 100;\r\n        var w = p * 2 - 1;\r\n        var a = rgb2.a - rgb1.a;\r\n\r\n        var w1;\r\n\r\n        if (w * a == -1) {\r\n            w1 = w;\r\n        } else {\r\n            w1 = (w + a) / (1 + w * a);\r\n        }\r\n\r\n        w1 = (w1 + 1) / 2;\r\n\r\n        var w2 = 1 - w1;\r\n\r\n        var rgba = {\r\n            r: rgb2.r * w1 + rgb1.r * w2,\r\n            g: rgb2.g * w1 + rgb1.g * w2,\r\n            b: rgb2.b * w1 + rgb1.b * w2,\r\n            a: rgb2.a * p  + rgb1.a * (1 - p)\r\n        };\r\n\r\n        return Color(rgba);\r\n    };\r\n\r\n\r\n    // Readability Functions\r\n    // ---------------------\r\n    // <http://www.w3.org/TR/AERT#color-contrast>\r\n\r\n    // `readability`\r\n    // Analyze the 2 colors and returns an object with the following properties:\r\n    //    `brightness`: difference in brightness between the two colors\r\n    //    `color`: difference in color/hue between the two colors\r\n    Color.readability = function(color1, color2) {\r\n        var c1 = Color(color1);\r\n        var c2 = Color(color2);\r\n        var rgb1 = c1.toRgb();\r\n        var rgb2 = c2.toRgb();\r\n        var brightnessA = c1.getBrightness();\r\n        var brightnessB = c2.getBrightness();\r\n        var colorDiff = (\r\n            Math.max(rgb1.r, rgb2.r) - Math.min(rgb1.r, rgb2.r) +\r\n            Math.max(rgb1.g, rgb2.g) - Math.min(rgb1.g, rgb2.g) +\r\n            Math.max(rgb1.b, rgb2.b) - Math.min(rgb1.b, rgb2.b)\r\n        );\r\n\r\n        return {\r\n            brightness: Math.abs(brightnessA - brightnessB),\r\n            color: colorDiff\r\n        };\r\n    };\r\n\r\n    // `readable`\r\n    // http://www.w3.org/TR/AERT#color-contrast\r\n    // Ensure that foreground and background color combinations provide sufficient contrast.\r\n    // *Example*\r\n    //    Color.isReadable(\"#000\", \"#111\") => false\r\n    Color.isReadable = function(color1, color2) {\r\n        var readability = Color.readability(color1, color2);\r\n        return readability.brightness > 125 && readability.color > 500;\r\n    };\r\n\r\n    // `mostReadable`\r\n    // Given a base color and a list of possible foreground or background\r\n    // colors for that base, returns the most readable color.\r\n    // *Example*\r\n    //    Color.mostReadable(\"#123\", [\"#fff\", \"#000\"]) => \"#000\"\r\n    Color.mostReadable = function(baseColor, colorList) {\r\n        var bestColor = null;\r\n        var bestScore = 0;\r\n        var bestIsReadable = false;\r\n        for (var i=0; i < colorList.length; i++) {\r\n\r\n            // We normalize both around the \"acceptable\" breaking point,\r\n            // but rank brightness constrast higher than hue.\r\n\r\n            var readability = Color.readability(baseColor, colorList[i]);\r\n            var readable = readability.brightness > 125 && readability.color > 500;\r\n            var score = 3 * (readability.brightness / 125) + (readability.color / 500);\r\n\r\n            if ((readable && ! bestIsReadable) ||\r\n                (readable && bestIsReadable && score > bestScore) ||\r\n                ((! readable) && (! bestIsReadable) && score > bestScore)) {\r\n                bestIsReadable = readable;\r\n                bestScore = score;\r\n                bestColor = Color(colorList[i]);\r\n            }\r\n        }\r\n        return bestColor;\r\n    };\r\n\r\n\r\n\treturn Color;\r\n});\r\n\ndefine('skylark-domx-colorpicker/draggable',[\r\n   \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-query\"\r\n],function(skylark, langx, browser, noder, eventer,finder, $) {\r\n    /**\r\n    * Lightweight drag helper.  Handles containment within the element, so that\r\n    * when dragging, the x is within [0,element.width] and y is within [0,element.height]\r\n    */\r\n    function draggable(element, onmove, onstart, onstop) {\r\n        onmove = onmove || function () { };\r\n        onstart = onstart || function () { };\r\n        onstop = onstop || function () { };\r\n        var doc = document;\r\n        var dragging = false;\r\n        var offset = {};\r\n        var maxHeight = 0;\r\n        var maxWidth = 0;\r\n        var hasTouch = ('ontouchstart' in window);\r\n\r\n        var duringDragEvents = {};\r\n        duringDragEvents[\"selectstart\"] = prevent;\r\n        duringDragEvents[\"dragstart\"] = prevent;\r\n        duringDragEvents[\"touchmove mousemove\"] = move;\r\n        duringDragEvents[\"touchend mouseup\"] = stop;\r\n\r\n        function prevent(e) {\r\n            if (e.stopPropagation) {\r\n                e.stopPropagation();\r\n            }\r\n            if (e.preventDefault) {\r\n                e.preventDefault();\r\n            }\r\n            e.returnValue = false;\r\n        }\r\n\r\n        function move(e) {\r\n            if (dragging) {\r\n                // Mouseup happened outside of window\r\n                if (browser.isIE && doc.documentMode < 9 && !e.button) {\r\n                    return stop();\r\n                }\r\n\r\n                var t0 = e.originalEvent && e.originalEvent.touches && e.originalEvent.touches[0];\r\n                var pageX = t0 && t0.pageX || e.pageX;\r\n                var pageY = t0 && t0.pageY || e.pageY;\r\n\r\n                var dragX = Math.max(0, Math.min(pageX - offset.left, maxWidth));\r\n                var dragY = Math.max(0, Math.min(pageY - offset.top, maxHeight));\r\n\r\n                if (hasTouch) {\r\n                    // Stop scrolling in iOS\r\n                    prevent(e);\r\n                }\r\n\r\n                onmove.apply(element, [dragX, dragY, e]);\r\n            }\r\n        }\r\n\r\n        function start(e) {\r\n            var rightclick = (e.which) ? (e.which == 3) : (e.button == 2);\r\n\r\n            if (!rightclick && !dragging) {\r\n                if (onstart.apply(element, arguments) !== false) {\r\n                    dragging = true;\r\n                    maxHeight = $(element).height();\r\n                    maxWidth = $(element).width();\r\n                    offset = $(element).offset();\r\n\r\n                    $(doc).on(duringDragEvents);\r\n                    $(doc.body).addClass(\"sp-dragging\");\r\n\r\n                    move(e);\r\n\r\n                    prevent(e);\r\n                }\r\n            }\r\n        }\r\n\r\n        function stop() {\r\n            if (dragging) {\r\n                $(doc).off(duringDragEvents);\r\n                $(doc.body).removeClass(\"sp-dragging\");\r\n\r\n                // Wait a tick before notifying observers to allow the click event\r\n                // to fire in Chrome.\r\n                setTimeout(function() {\r\n                    onstop.apply(element, arguments);\r\n                }, 0);\r\n            }\r\n            dragging = false;\r\n        }\r\n\r\n        $(element).on(\"touchstart mousedown\", start);\r\n    }\r\n\t\r\n\treturn draggable;\r\n});\ndefine('skylark-domx-colorpicker/ColorPicker',[\r\n   \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-query\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-fx\",\r\n    \"skylark-data-color/colors\",\r\n    \"skylark-data-color/Color\",\r\n    \"./draggable\"\r\n],function(skylark, langx, browser, noder, finder, $,eventer, styler,fx,colors, Color,draggable) {\r\n    \"use strict\";\r\n\r\n    var noop = langx.noop;\r\n\r\n    var defaultOpts = {\r\n\r\n        // Callbacks\r\n        beforeShow: noop,\r\n        move: noop,\r\n        change: noop,\r\n        show: noop,\r\n        hide: noop,\r\n\r\n        // Options\r\n        color: false,\r\n        flat: false,\r\n        showInput: false,\r\n        allowEmpty: false,\r\n        showButtons: true,\r\n        clickoutFiresChange: true,\r\n        showInitial: false,\r\n        showPalette: false,\r\n        showPaletteOnly: false,\r\n        hideAfterPaletteSelect: false,\r\n        togglePaletteOnly: false,\r\n        showSelectionPalette: true,\r\n        localStorageKey: false,\r\n        appendTo: \"body\",\r\n        maxSelectionSize: 7,\r\n        cancelText: \"cancel\",\r\n        chooseText: \"choose\",\r\n        togglePaletteMoreText: \"more\",\r\n        togglePaletteLessText: \"less\",\r\n        clearText: \"Clear Color Selection\",\r\n        noColorSelectedText: \"No Color Selected\",\r\n        preferredFormat: false,\r\n        className: \"\", // Deprecated - use containerClassName and replacerClassName instead.\r\n        containerClassName: \"\",\r\n        replacerClassName: \"\",\r\n        showAlpha: false,\r\n        theme: \"sp-light\",\r\n        palette: [[\"#ffffff\", \"#000000\", \"#ff0000\", \"#ff8000\", \"#ffff00\", \"#008000\", \"#0000ff\", \"#4b0082\", \"#9400d3\"]],\r\n        selectionPalette: [],\r\n        disabled: false,\r\n        offset: null\r\n    },\r\n    pickers = [],\r\n    replaceInput = [\r\n        \"<div class='sp-replacer'>\",\r\n            \"<div class='sp-preview'><div class='sp-preview-inner'></div></div>\",\r\n            \"<div class='sp-dd'>&#9660;</div>\",\r\n        \"</div>\"\r\n    ].join(''),\r\n    \r\n    markup = (function () {\r\n\r\n        // IE7-10 does not support gradients with multiple stops, so we need to simulate\r\n        //  that for the rainbow slider with 8 divs that each have a single gradient\r\n        var gradientFix = \"\";\r\n        if (browser.isIE) {\r\n            for (var i = 1; i <= 6; i++) {\r\n                gradientFix += \"<div class='sp-\" + i + \"'></div>\";\r\n            }\r\n        }\r\n\r\n        return [\r\n            \"<div class='sp-container sp-hidden'>\",\r\n                \"<div class='sp-palette-container'>\",\r\n                    \"<div class='sp-palette sp-thumb sp-cf'></div>\",\r\n                    \"<div class='sp-palette-button-container sp-cf'>\",\r\n                        \"<button type='button' class='sp-palette-toggle'></button>\",\r\n                    \"</div>\",\r\n                \"</div>\",\r\n                \"<div class='sp-picker-container'>\",\r\n                    \"<div class='sp-top sp-cf'>\",\r\n                        \"<div class='sp-fill'></div>\",\r\n                        \"<div class='sp-top-inner'>\",\r\n                            \"<div class='sp-color'>\",\r\n                                \"<div class='sp-sat'>\",\r\n                                    \"<div class='sp-val'>\",\r\n                                        \"<div class='sp-dragger'></div>\",\r\n                                    \"</div>\",\r\n                                \"</div>\",\r\n                            \"</div>\",\r\n                            \"<div class='sp-clear sp-clear-display'>\",\r\n                            \"</div>\",\r\n                            \"<div class='sp-hue'>\",\r\n                                \"<div class='sp-slider'></div>\",\r\n                                gradientFix,\r\n                            \"</div>\",\r\n                        \"</div>\",\r\n                        \"<div class='sp-alpha'><div class='sp-alpha-inner'><div class='sp-alpha-handle'></div></div></div>\",\r\n                    \"</div>\",\r\n                    \"<div class='sp-input-container sp-cf'>\",\r\n                        \"<input class='sp-input' type='text' spellcheck='false'  />\",\r\n                    \"</div>\",\r\n                    \"<div class='sp-initial sp-thumb sp-cf'></div>\",\r\n                    \"<div class='sp-button-container sp-cf'>\",\r\n                        \"<a class='sp-cancel' href='#'></a>\",\r\n                        \"<button type='button' class='sp-choose'></button>\",\r\n                    \"</div>\",\r\n                \"</div>\",\r\n            \"</div>\"\r\n        ].join(\"\");\r\n    })();\r\n\r\n    function paletteTemplate (p, color, className, opts) {\r\n        var html = [];\r\n        for (var i = 0; i < p.length; i++) {\r\n            var current = p[i];\r\n            if(current) {\r\n                var tiny = colors.Color(current);\r\n                var c = tiny.toHsl().l < 0.5 ? \"sp-thumb-el sp-thumb-dark\" : \"sp-thumb-el sp-thumb-light\";\r\n                c += (Color.equals(color, current)) ? \" sp-thumb-active\" : \"\";\r\n                var formattedString = tiny.toString(opts.preferredFormat || \"rgb\");\r\n                var swatchStyle = \"background-color:\" + tiny.toRgbString();\r\n                html.push('<span title=\"' + formattedString + '\" data-color=\"' + tiny.toRgbString() + '\" class=\"' + c + '\"><span class=\"sp-thumb-inner\" style=\"' + swatchStyle + ';\" /></span>');\r\n            } else {\r\n                var cls = 'sp-clear-display';\r\n                html.push($('<div />')\r\n                    .append($('<span data-color=\"\" style=\"background-color:transparent;\" class=\"' + cls + '\"></span>')\r\n                        .attr('title', opts.noColorSelectedText)\r\n                    )\r\n                    .html()\r\n                );\r\n            }\r\n        }\r\n        return \"<div class='sp-cf \" + className + \"'>\" + html.join('') + \"</div>\";\r\n    }\r\n\r\n    function hideAll() {\r\n        for (var i = 0; i < pickers.length; i++) {\r\n            if (pickers[i]) {\r\n                pickers[i].hide();\r\n            }\r\n        }\r\n    }\r\n\r\n    function instanceOptions(o, callbackContext) {\r\n        var opts = langx.mixin({}, defaultOpts, o);\r\n        opts.callbacks = {\r\n            'move': bind(opts.move, callbackContext),\r\n            'change': bind(opts.change, callbackContext),\r\n            'show': bind(opts.show, callbackContext),\r\n            'hide': bind(opts.hide, callbackContext),\r\n            'beforeShow': bind(opts.beforeShow, callbackContext)\r\n        };\r\n\r\n        return opts;\r\n    }\r\n\r\n\r\n\r\n    var ColorPicker = langx.Evented.inherit({\r\n        klassName : \"ColorPicker\",\r\n\r\n        init:function (element, o) {\r\n\r\n            var opts = instanceOptions(o, element),\r\n                flat = opts.flat,\r\n                showSelectionPalette = opts.showSelectionPalette,\r\n                localStorageKey = opts.localStorageKey,\r\n                theme = opts.theme,\r\n                callbacks = opts.callbacks,\r\n                resize = langx.debounce(reflow, 10),\r\n                visible = false,\r\n                isDragging = false,\r\n                dragWidth = 0,\r\n                dragHeight = 0,\r\n                dragHelperHeight = 0,\r\n                slideHeight = 0,\r\n                slideWidth = 0,\r\n                alphaWidth = 0,\r\n                alphaSlideHelperWidth = 0,\r\n                slideHelperHeight = 0,\r\n                currentHue = 0,\r\n                currentSaturation = 0,\r\n                currentValue = 0,\r\n                currentAlpha = 1,\r\n                palette = [],\r\n                paletteArray = [],\r\n                paletteLookup = {},\r\n                selectionPalette = opts.selectionPalette.slice(0),\r\n                maxSelectionSize = opts.maxSelectionSize,\r\n                draggingClass = \"sp-dragging\",\r\n                shiftMovementDirection = null;\r\n\r\n            var doc = element.ownerDocument,\r\n                body = doc.body,\r\n                boundElement = $(element),\r\n                disabled = false,\r\n                container = $(markup, doc).addClass(theme),\r\n                pickerContainer = container.find(\".sp-picker-container\"),\r\n                dragger = container.find(\".sp-color\"),\r\n                dragHelper = container.find(\".sp-dragger\"),\r\n                slider = container.find(\".sp-hue\"),\r\n                slideHelper = container.find(\".sp-slider\"),\r\n                alphaSliderInner = container.find(\".sp-alpha-inner\"),\r\n                alphaSlider = container.find(\".sp-alpha\"),\r\n                alphaSlideHelper = container.find(\".sp-alpha-handle\"),\r\n                textInput = container.find(\".sp-input\"),\r\n                paletteContainer = container.find(\".sp-palette\"),\r\n                initialColorContainer = container.find(\".sp-initial\"),\r\n                cancelButton = container.find(\".sp-cancel\"),\r\n                clearButton = container.find(\".sp-clear\"),\r\n                chooseButton = container.find(\".sp-choose\"),\r\n                toggleButton = container.find(\".sp-palette-toggle\"),\r\n                isInput = boundElement.is(\"input\"),\r\n                isInputTypeColor = isInput && boundElement.attr(\"type\") === \"color\" && inputTypeColorSupport(),\r\n                shouldReplace = isInput && !flat,\r\n                replacer = (shouldReplace) ? $(replaceInput).addClass(theme).addClass(opts.className).addClass(opts.replacerClassName) : $([]),\r\n                offsetElement = (shouldReplace) ? replacer : boundElement,\r\n                previewElement = replacer.find(\".sp-preview-inner\"),\r\n                initialColor = opts.color || (isInput && boundElement.val()),\r\n                colorOnShow = false,\r\n                currentPreferredFormat = opts.preferredFormat,\r\n                clickoutFiresChange = !opts.showButtons || opts.clickoutFiresChange,\r\n                isEmpty = !initialColor,\r\n                allowEmpty = opts.allowEmpty && !isInputTypeColor;\r\n\r\n            function applyOptions() {\r\n\r\n                if (opts.showPaletteOnly) {\r\n                    opts.showPalette = true;\r\n                }\r\n\r\n                toggleButton.text(opts.showPaletteOnly ? opts.togglePaletteMoreText : opts.togglePaletteLessText);\r\n\r\n                if (opts.palette) {\r\n                    palette = opts.palette.slice(0);\r\n                    paletteArray = langx.isArray(palette[0]) ? palette : [palette];\r\n                    paletteLookup = {};\r\n                    for (var i = 0; i < paletteArray.length; i++) {\r\n                        for (var j = 0; j < paletteArray[i].length; j++) {\r\n                            var rgb = Color(paletteArray[i][j]).toRgbString();\r\n                            paletteLookup[rgb] = true;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                container.toggleClass(\"sp-flat\", flat);\r\n                container.toggleClass(\"sp-input-disabled\", !opts.showInput);\r\n                container.toggleClass(\"sp-alpha-enabled\", opts.showAlpha);\r\n                container.toggleClass(\"sp-clear-enabled\", allowEmpty);\r\n                container.toggleClass(\"sp-buttons-disabled\", !opts.showButtons);\r\n                container.toggleClass(\"sp-palette-buttons-disabled\", !opts.togglePaletteOnly);\r\n                container.toggleClass(\"sp-palette-disabled\", !opts.showPalette);\r\n                container.toggleClass(\"sp-palette-only\", opts.showPaletteOnly);\r\n                container.toggleClass(\"sp-initial-disabled\", !opts.showInitial);\r\n                container.addClass(opts.className).addClass(opts.containerClassName);\r\n\r\n                reflow();\r\n            }\r\n\r\n            function initialize() {\r\n\r\n                if (browser.isIE) {\r\n                    container.find(\"*:not(input)\").attr(\"unselectable\", \"on\");\r\n                }\r\n\r\n                applyOptions();\r\n\r\n                if (shouldReplace) {\r\n                    boundElement.after(replacer).hide();\r\n                }\r\n\r\n                if (!allowEmpty) {\r\n                    clearButton.hide();\r\n                }\r\n\r\n                if (flat) {\r\n                    boundElement.after(container).hide();\r\n                }\r\n                else {\r\n\r\n                    var appendTo = opts.appendTo === \"parent\" ? boundElement.parent() : $(opts.appendTo);\r\n                    if (appendTo.length !== 1) {\r\n                        appendTo = $(\"body\");\r\n                    }\r\n\r\n                    appendTo.append(container);\r\n                }\r\n\r\n                updateSelectionPaletteFromStorage();\r\n\r\n                offsetElement.on(\"click.ColorPicker touchstart.ColorPicker\", function (e) {\r\n                    if (!disabled) {\r\n                        toggle();\r\n                    }\r\n\r\n                    e.stopPropagation();\r\n\r\n                    if (!$(e.target).is(\"input\")) {\r\n                        e.preventDefault();\r\n                    }\r\n                });\r\n\r\n                if(boundElement.is(\":disabled\") || (opts.disabled === true)) {\r\n                    disable();\r\n                }\r\n\r\n                // Prevent clicks from bubbling up to document.  This would cause it to be hidden.\r\n                container.click(stopPropagation);\r\n\r\n                // Handle user typed input\r\n                textInput.change(setFromTextInput);\r\n                textInput.on(\"paste\", function () {\r\n                    setTimeout(setFromTextInput, 1);\r\n                });\r\n                textInput.keydown(function (e) { if (e.keyCode == 13) { setFromTextInput(); } });\r\n\r\n                cancelButton.text(opts.cancelText);\r\n                cancelButton.on(\"click.ColorPicker\", function (e) {\r\n                    e.stopPropagation();\r\n                    e.preventDefault();\r\n                    revert();\r\n                    hide();\r\n                });\r\n\r\n                clearButton.attr(\"title\", opts.clearText);\r\n                clearButton.on(\"click.ColorPicker\", function (e) {\r\n                    e.stopPropagation();\r\n                    e.preventDefault();\r\n                    isEmpty = true;\r\n                    move();\r\n\r\n                    if(flat) {\r\n                        //for the flat style, this is a change event\r\n                        updateOriginalInput(true);\r\n                    }\r\n                });\r\n\r\n                chooseButton.text(opts.chooseText);\r\n                chooseButton.on(\"click.ColorPicker\", function (e) {\r\n                    e.stopPropagation();\r\n                    e.preventDefault();\r\n\r\n                    if (browser.isIE && textInput.is(\":focus\")) {\r\n                        textInput.trigger('change');\r\n                    }\r\n\r\n                    if (isValid()) {\r\n                        updateOriginalInput(true);\r\n                        hide();\r\n                    }\r\n                });\r\n\r\n                toggleButton.text(opts.showPaletteOnly ? opts.togglePaletteMoreText : opts.togglePaletteLessText);\r\n                toggleButton.on(\"click.spectrum\", function (e) {\r\n                    e.stopPropagation();\r\n                    e.preventDefault();\r\n\r\n                    opts.showPaletteOnly = !opts.showPaletteOnly;\r\n\r\n                    // To make sure the Picker area is drawn on the right, next to the\r\n                    // Palette area (and not below the palette), first move the Palette\r\n                    // to the left to make space for the picker, plus 5px extra.\r\n                    // The 'applyOptions' function puts the whole container back into place\r\n                    // and takes care of the button-text and the sp-palette-only CSS class.\r\n                    if (!opts.showPaletteOnly && !flat) {\r\n                        container.css('left', '-=' + (pickerContainer.outerWidth(true) + 5));\r\n                    }\r\n                    applyOptions();\r\n                });\r\n\r\n                draggable(alphaSlider, function (dragX, dragY, e) {\r\n                    currentAlpha = (dragX / alphaWidth);\r\n                    isEmpty = false;\r\n                    if (e.shiftKey) {\r\n                        currentAlpha = Math.round(currentAlpha * 10) / 10;\r\n                    }\r\n\r\n                    move();\r\n                }, dragStart, dragStop);\r\n\r\n                draggable(slider, function (dragX, dragY) {\r\n                    currentHue = parseFloat(dragY / slideHeight);\r\n                    isEmpty = false;\r\n                    if (!opts.showAlpha) {\r\n                        currentAlpha = 1;\r\n                    }\r\n                    move();\r\n                }, dragStart, dragStop);\r\n\r\n                draggable(dragger, function (dragX, dragY, e) {\r\n\r\n                    // shift+drag should snap the movement to either the x or y axis.\r\n                    if (!e.shiftKey) {\r\n                        shiftMovementDirection = null;\r\n                    }\r\n                    else if (!shiftMovementDirection) {\r\n                        var oldDragX = currentSaturation * dragWidth;\r\n                        var oldDragY = dragHeight - (currentValue * dragHeight);\r\n                        var furtherFromX = Math.abs(dragX - oldDragX) > Math.abs(dragY - oldDragY);\r\n\r\n                        shiftMovementDirection = furtherFromX ? \"x\" : \"y\";\r\n                    }\r\n\r\n                    var setSaturation = !shiftMovementDirection || shiftMovementDirection === \"x\";\r\n                    var setValue = !shiftMovementDirection || shiftMovementDirection === \"y\";\r\n\r\n                    if (setSaturation) {\r\n                        currentSaturation = parseFloat(dragX / dragWidth);\r\n                    }\r\n                    if (setValue) {\r\n                        currentValue = parseFloat((dragHeight - dragY) / dragHeight);\r\n                    }\r\n\r\n                    isEmpty = false;\r\n                    if (!opts.showAlpha) {\r\n                        currentAlpha = 1;\r\n                    }\r\n\r\n                    move();\r\n\r\n                }, dragStart, dragStop);\r\n\r\n                if (!!initialColor) {\r\n                    set(initialColor);\r\n\r\n                    // In case color was black - update the preview UI and set the format\r\n                    // since the set function will not run (default color is black).\r\n                    updateUI();\r\n                    currentPreferredFormat = opts.preferredFormat || Color(initialColor).format;\r\n\r\n                    addColorToSelectionPalette(initialColor);\r\n                }\r\n                else {\r\n                    updateUI();\r\n                }\r\n\r\n                if (flat) {\r\n                    show();\r\n                }\r\n\r\n                function paletteElementClick(e) {\r\n                    if (e.data && e.data.ignore) {\r\n                        set($(e.target).closest(\".sp-thumb-el\").data(\"color\"));\r\n                        move();\r\n                    }\r\n                    else {\r\n                        set($(e.target).closest(\".sp-thumb-el\").data(\"color\"));\r\n                        move();\r\n\r\n                        // If the picker is going to close immediately, a palette selection\r\n                        // is a change.  Otherwise, it's a move only.\r\n                        if (opts.hideAfterPaletteSelect) {\r\n                            updateOriginalInput(true);\r\n                            hide();\r\n                        } else {\r\n                            updateOriginalInput();\r\n                        }\r\n                    }\r\n\r\n                    return false;\r\n                }\r\n\r\n                var paletteEvent = browser.isIE ? \"mousedown.ColorPicker\" : \"click.ColorPicker touchstart.ColorPicker\";\r\n                paletteContainer.on(paletteEvent, \".sp-thumb-el\", paletteElementClick);\r\n                initialColorContainer.on(paletteEvent, \".sp-thumb-el:nth-child(1)\", { ignore: true }, paletteElementClick);\r\n            }\r\n\r\n            function updateSelectionPaletteFromStorage() {\r\n\r\n                if (localStorageKey && window.localStorage) {\r\n\r\n                    // Migrate old palettes over to new format.  May want to remove this eventually.\r\n                    try {\r\n                        var oldPalette = window.localStorage[localStorageKey].split(\",#\");\r\n                        if (oldPalette.length > 1) {\r\n                            delete window.localStorage[localStorageKey];\r\n                            langx.each(oldPalette, function(i, c) {\r\n                                 addColorToSelectionPalette(c);\r\n                            });\r\n                        }\r\n                    }\r\n                    catch(e) { }\r\n\r\n                    try {\r\n                        selectionPalette = window.localStorage[localStorageKey].split(\";\");\r\n                    }\r\n                    catch (e) { }\r\n                }\r\n            }\r\n\r\n            function addColorToSelectionPalette(color) {\r\n                if (showSelectionPalette) {\r\n                    var rgb = Color(color).toRgbString();\r\n                    if (!paletteLookup[rgb] && langx.inArray(rgb, selectionPalette) === -1) {\r\n                        selectionPalette.push(rgb);\r\n                        while(selectionPalette.length > maxSelectionSize) {\r\n                            selectionPalette.shift();\r\n                        }\r\n                    }\r\n\r\n                    if (localStorageKey && window.localStorage) {\r\n                        try {\r\n                            window.localStorage[localStorageKey] = selectionPalette.join(\";\");\r\n                        }\r\n                        catch(e) { }\r\n                    }\r\n                }\r\n            }\r\n\r\n            function getUniqueSelectionPalette() {\r\n                var unique = [];\r\n                if (opts.showPalette) {\r\n                    for (var i = 0; i < selectionPalette.length; i++) {\r\n                        var rgb = Color(selectionPalette[i]).toRgbString();\r\n\r\n                        if (!paletteLookup[rgb]) {\r\n                            unique.push(selectionPalette[i]);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return unique.reverse().slice(0, opts.maxSelectionSize);\r\n            }\r\n\r\n            function drawPalette() {\r\n\r\n                var currentColor = get();\r\n\r\n                var html = langx.map(paletteArray, function (palette, i) {\r\n                    return paletteTemplate(palette, currentColor, \"sp-palette-row sp-palette-row-\" + i, opts);\r\n                });\r\n\r\n                updateSelectionPaletteFromStorage();\r\n\r\n                if (selectionPalette) {\r\n                    html.push(paletteTemplate(getUniqueSelectionPalette(), currentColor, \"sp-palette-row sp-palette-row-selection\", opts));\r\n                }\r\n\r\n                paletteContainer.html(html.join(\"\"));\r\n            }\r\n\r\n            function drawInitial() {\r\n                if (opts.showInitial) {\r\n                    var initial = colorOnShow;\r\n                    var current = get();\r\n                    initialColorContainer.html(paletteTemplate([initial, current], current, \"sp-palette-row-initial\", opts));\r\n                }\r\n            }\r\n\r\n            function dragStart() {\r\n                if (dragHeight <= 0 || dragWidth <= 0 || slideHeight <= 0) {\r\n                    reflow();\r\n                }\r\n                isDragging = true;\r\n                container.addClass(draggingClass);\r\n                shiftMovementDirection = null;\r\n                boundElement.trigger('dragstart.ColorPicker', [ get() ]);\r\n            }\r\n\r\n            function dragStop() {\r\n                isDragging = false;\r\n                container.removeClass(draggingClass);\r\n                boundElement.trigger('dragstop.ColorPicker', [ get() ]);\r\n            }\r\n\r\n            function setFromTextInput() {\r\n\r\n                var value = textInput.val();\r\n\r\n                if ((value === null || value === \"\") && allowEmpty) {\r\n                    set(null);\r\n                    move();\r\n                    updateOriginalInput();\r\n                }\r\n                else {\r\n                    var tiny = Color(value);\r\n                    if (tiny.isValid()) {\r\n                        set(tiny);\r\n                        move();\r\n                        updateOriginalInput();\r\n                    }\r\n                    else {\r\n                        textInput.addClass(\"sp-validation-error\");\r\n                    }\r\n                }\r\n            }\r\n\r\n            function toggle() {\r\n                if (visible) {\r\n                    hide();\r\n                }\r\n                else {\r\n                    show();\r\n                }\r\n            }\r\n\r\n            function show() {\r\n                var event = eventer.create('beforeShow.ColorPicker');\r\n\r\n                if (visible) {\r\n                    reflow();\r\n                    return;\r\n                }\r\n\r\n                boundElement.trigger(event, [ get() ]);\r\n\r\n                if (callbacks.beforeShow(get()) === false || event.isDefaultPrevented()) {\r\n                    return;\r\n                }\r\n\r\n                hideAll();\r\n                visible = true;\r\n\r\n                $(doc).on(\"keydown.ColorPicker\", onkeydown);\r\n                $(doc).on(\"click.ColorPicker\", clickout);\r\n                $(window).on(\"resize.ColorPicker\", resize);\r\n                replacer.addClass(\"sp-active\");\r\n                container.removeClass(\"sp-hidden\");\r\n\r\n                reflow();\r\n                updateUI();\r\n\r\n                colorOnShow = get();\r\n\r\n                drawInitial();\r\n                callbacks.show(colorOnShow);\r\n                boundElement.trigger('show.ColorPicker', [ colorOnShow ]);\r\n            }\r\n\r\n            function onkeydown(e) {\r\n                // Close on ESC\r\n                if (e.keyCode === 27) {\r\n                    hide();\r\n                }\r\n            }\r\n\r\n            function clickout(e) {\r\n                // Return on right click.\r\n                if (e.button == 2) { return; }\r\n\r\n                // If a drag event was happening during the mouseup, don't hide\r\n                // on click.\r\n                if (isDragging) { return; }\r\n\r\n                if (clickoutFiresChange) {\r\n                    updateOriginalInput(true);\r\n                }\r\n                else {\r\n                    revert();\r\n                }\r\n                hide();\r\n            }\r\n\r\n            function hide() {\r\n                // Return if hiding is unnecessary\r\n                if (!visible || flat) { return; }\r\n                visible = false;\r\n\r\n                $(doc).off(\"keydown.ColorPicker\", onkeydown);\r\n                $(doc).off(\"click.ColorPicker\", clickout);\r\n                $(window).off(\"resize.ColorPicker\", resize);\r\n\r\n                replacer.removeClass(\"sp-active\");\r\n                container.addClass(\"sp-hidden\");\r\n\r\n                callbacks.hide(get());\r\n                boundElement.trigger('hide.ColorPicker', [ get() ]);\r\n            }\r\n\r\n            function revert() {\r\n                set(colorOnShow, true);\r\n                updateOriginalInput(true);\r\n            }\r\n\r\n            function set(color, ignoreFormatChange) {\r\n                if (Color.equals(color, get())) {\r\n                    // Update UI just in case a validation error needs\r\n                    // to be cleared.\r\n                    updateUI();\r\n                    return;\r\n                }\r\n\r\n                var newColor, newHsv;\r\n                if (!color && allowEmpty) {\r\n                    isEmpty = true;\r\n                } else {\r\n                    isEmpty = false;\r\n                    newColor = colors.Color(color);\r\n                    newHsv = newColor.toHsv();\r\n\r\n                    currentHue = (newHsv.h % 360) / 360;\r\n                    currentSaturation = newHsv.s;\r\n                    currentValue = newHsv.v;\r\n                    currentAlpha = newHsv.a;\r\n                }\r\n                updateUI();\r\n\r\n                if (newColor && newColor.isValid() && !ignoreFormatChange) {\r\n                    currentPreferredFormat = opts.preferredFormat || newColor.getFormat();\r\n                }\r\n            }\r\n\r\n            function get(opts) {\r\n                opts = opts || { };\r\n\r\n                if (allowEmpty && isEmpty) {\r\n                    return null;\r\n                }\r\n\r\n                return Color.fromRatio({\r\n                    h: currentHue,\r\n                    s: currentSaturation,\r\n                    v: currentValue,\r\n                    a: Math.round(currentAlpha * 1000) / 1000\r\n                }, { format: opts.format || currentPreferredFormat });\r\n            }\r\n\r\n            function isValid() {\r\n                return !textInput.hasClass(\"sp-validation-error\");\r\n            }\r\n\r\n            function move() {\r\n                updateUI();\r\n\r\n                callbacks.move(get());\r\n                boundElement.trigger('move.ColorPicker', [ get() ]);\r\n            }\r\n\r\n            function updateUI() {\r\n\r\n                textInput.removeClass(\"sp-validation-error\");\r\n\r\n                updateHelperLocations();\r\n\r\n                // Update dragger background color (gradients take care of saturation and value).\r\n                var flatColor = Color.fromRatio({ h: currentHue, s: 1, v: 1 });\r\n                dragger.css(\"background-color\", flatColor.toHexString());\r\n\r\n                // Get a format that alpha will be included in (hex and names ignore alpha)\r\n                var format = currentPreferredFormat;\r\n                if (currentAlpha < 1 && !(currentAlpha === 0 && format === \"name\")) {\r\n                    if (format === \"hex\" || format === \"hex3\" || format === \"hex6\" || format === \"name\") {\r\n                        format = \"rgb\";\r\n                    }\r\n                }\r\n\r\n                var realColor = get({ format: format }),\r\n                    displayColor = '';\r\n\r\n                 //reset background info for preview element\r\n                previewElement.removeClass(\"sp-clear-display\");\r\n                previewElement.css('background-color', 'transparent');\r\n\r\n                if (!realColor && allowEmpty) {\r\n                    // Update the replaced elements background with icon indicating no color selection\r\n                    previewElement.addClass(\"sp-clear-display\");\r\n                }\r\n                else {\r\n                    var realHex = realColor.toHexString(),\r\n                        realRgb = realColor.toRgbString();\r\n\r\n                    // Update the replaced elements background color (with actual selected color)\r\n                    previewElement.css(\"background-color\", realRgb);\r\n\r\n                    if (opts.showAlpha) {\r\n                        var rgb = realColor.toRgb();\r\n                        rgb.a = 0;\r\n                        var realAlpha = Color(rgb).toRgbString();\r\n                        var gradient = \"linear-gradient(left, \" + realAlpha + \", \" + realHex + \")\";\r\n\r\n                        if (browser.isIE) {\r\n                            alphaSliderInner.css(\"filter\", Color(realAlpha).toFilter({ gradientType: 1 }, realHex));\r\n                        }\r\n                        else {\r\n                            alphaSliderInner.css(\"background\", \"-webkit-\" + gradient);\r\n                            alphaSliderInner.css(\"background\", \"-moz-\" + gradient);\r\n                            alphaSliderInner.css(\"background\", \"-ms-\" + gradient);\r\n                            // Use current syntax gradient on unprefixed property.\r\n                            alphaSliderInner.css(\"background\",\r\n                                \"linear-gradient(to right, \" + realAlpha + \", \" + realHex + \")\");\r\n                        }\r\n                    }\r\n\r\n                    displayColor = realColor.toString(format);\r\n                }\r\n\r\n                // Update the text entry input as it changes happen\r\n                if (opts.showInput) {\r\n                    textInput.val(displayColor);\r\n                }\r\n\r\n                if (opts.showPalette) {\r\n                    drawPalette();\r\n                }\r\n\r\n                drawInitial();\r\n            }\r\n\r\n            function updateHelperLocations() {\r\n                var s = currentSaturation;\r\n                var v = currentValue;\r\n\r\n                if(allowEmpty && isEmpty) {\r\n                    //if selected color is empty, hide the helpers\r\n                    alphaSlideHelper.hide();\r\n                    slideHelper.hide();\r\n                    dragHelper.hide();\r\n                }\r\n                else {\r\n                    //make sure helpers are visible\r\n                    alphaSlideHelper.show();\r\n                    slideHelper.show();\r\n                    dragHelper.show();\r\n\r\n                    // Where to show the little circle in that displays your current selected color\r\n                    var dragX = s * dragWidth;\r\n                    var dragY = dragHeight - (v * dragHeight);\r\n                    dragX = Math.max(\r\n                        -dragHelperHeight,\r\n                        Math.min(dragWidth - dragHelperHeight, dragX - dragHelperHeight)\r\n                    );\r\n                    dragY = Math.max(\r\n                        -dragHelperHeight,\r\n                        Math.min(dragHeight - dragHelperHeight, dragY - dragHelperHeight)\r\n                    );\r\n                    dragHelper.css({\r\n                        \"top\": dragY + \"px\",\r\n                        \"left\": dragX + \"px\"\r\n                    });\r\n\r\n                    var alphaX = currentAlpha * alphaWidth;\r\n                    alphaSlideHelper.css({\r\n                        \"left\": (alphaX - (alphaSlideHelperWidth / 2)) + \"px\"\r\n                    });\r\n\r\n                    // Where to show the bar that displays your current selected hue\r\n                    var slideY = (currentHue) * slideHeight;\r\n                    slideHelper.css({\r\n                        \"top\": (slideY - slideHelperHeight) + \"px\"\r\n                    });\r\n                }\r\n            }\r\n\r\n            function updateOriginalInput(fireCallback) {\r\n                var color = get(),\r\n                    displayColor = '',\r\n                    hasChanged = !Color.equals(color, colorOnShow);\r\n\r\n                if (color) {\r\n                    displayColor = color.toString(currentPreferredFormat);\r\n                    // Update the selection palette with the current color\r\n                    addColorToSelectionPalette(color);\r\n                }\r\n\r\n                if (isInput) {\r\n                    boundElement.val(displayColor);\r\n                }\r\n\r\n                if (fireCallback && hasChanged) {\r\n                    callbacks.change(color);\r\n                    boundElement.trigger('change', [ color ]);\r\n                }\r\n            }\r\n\r\n            function reflow() {\r\n                if (!visible) {\r\n                    return; // Calculations would be useless and wouldn't be reliable anyways\r\n                }\r\n                dragWidth = dragger.width();\r\n                dragHeight = dragger.height();\r\n                dragHelperHeight = dragHelper.height();\r\n                slideWidth = slider.width();\r\n                slideHeight = slider.height();\r\n                slideHelperHeight = slideHelper.height();\r\n                alphaWidth = alphaSlider.width();\r\n                alphaSlideHelperWidth = alphaSlideHelper.width();\r\n\r\n                if (!flat) {\r\n                    container.css(\"position\", \"absolute\");\r\n                    if (opts.offset) {\r\n                        container.offset(opts.offset);\r\n                    } else {\r\n                        container.offset(getOffset(container, offsetElement));\r\n                    }\r\n                }\r\n\r\n                updateHelperLocations();\r\n\r\n                if (opts.showPalette) {\r\n                    drawPalette();\r\n                }\r\n\r\n                boundElement.trigger('reflow.ColorPicker');\r\n            }\r\n\r\n            function destroy() {\r\n                boundElement.show();\r\n                offsetElement.off(\"click.ColorPicker touchstart.ColorPicker\");\r\n                container.remove();\r\n                replacer.remove();\r\n                pickers[spect.id] = null;\r\n            }\r\n\r\n            function option(optionName, optionValue) {\r\n                if (optionName === undefined) {\r\n                    return langx.mixin({}, opts);\r\n                }\r\n                if (optionValue === undefined) {\r\n                    return opts[optionName];\r\n                }\r\n\r\n                opts[optionName] = optionValue;\r\n\r\n                if (optionName === \"preferredFormat\") {\r\n                    currentPreferredFormat = opts.preferredFormat;\r\n                }\r\n                applyOptions();\r\n            }\r\n\r\n            function enable() {\r\n                disabled = false;\r\n                boundElement.attr(\"disabled\", false);\r\n                offsetElement.removeClass(\"sp-disabled\");\r\n            }\r\n\r\n            function disable() {\r\n                hide();\r\n                disabled = true;\r\n                boundElement.attr(\"disabled\", true);\r\n                offsetElement.addClass(\"sp-disabled\");\r\n            }\r\n\r\n            function setOffset(coord) {\r\n                opts.offset = coord;\r\n                reflow();\r\n            }\r\n\r\n            initialize();\r\n\r\n            var spect = {\r\n                show: show,\r\n                hide: hide,\r\n                toggle: toggle,\r\n                reflow: reflow,\r\n                option: option,\r\n                enable: enable,\r\n                disable: disable,\r\n                offset: setOffset,\r\n                set: function (c) {\r\n                    set(c);\r\n                    updateOriginalInput();\r\n                },\r\n                get: get,\r\n                destroy: destroy,\r\n                container: container\r\n            };\r\n\r\n            spect.id = pickers.push(spect) - 1;\r\n\r\n            return spect;\r\n        }\r\n    });\r\n\r\n\r\n    /**\r\n    * checkOffset - get the offset below/above and left/right element depending on screen position\r\n    * Thanks https://github.com/jquery/jquery-ui/blob/master/ui/jquery.ui.datepicker.js\r\n    */\r\n    function getOffset(picker, input) {\r\n        var extraY = 0;\r\n        var dpWidth = picker.outerWidth();\r\n        var dpHeight = picker.outerHeight();\r\n        var inputHeight = input.outerHeight();\r\n        var doc = picker[0].ownerDocument;\r\n        var docElem = doc.documentElement;\r\n        var viewWidth = docElem.clientWidth + $(doc).scrollLeft();\r\n        var viewHeight = docElem.clientHeight + $(doc).scrollTop();\r\n        var offset = input.offset();\r\n        var offsetLeft = offset.left;\r\n        var offsetTop = offset.top;\r\n\r\n        offsetTop += inputHeight;\r\n\r\n        offsetLeft -=\r\n            Math.min(offsetLeft, (offsetLeft + dpWidth > viewWidth && viewWidth > dpWidth) ?\r\n            Math.abs(offsetLeft + dpWidth - viewWidth) : 0);\r\n\r\n        offsetTop -=\r\n            Math.min(offsetTop, ((offsetTop + dpHeight > viewHeight && viewHeight > dpHeight) ?\r\n            Math.abs(dpHeight + inputHeight - extraY) : extraY));\r\n\r\n        return {\r\n            top: offsetTop,\r\n            bottom: offset.bottom,\r\n            left: offsetLeft,\r\n            right: offset.right,\r\n            width: offset.width,\r\n            height: offset.height\r\n        };\r\n    }\r\n\r\n    /**\r\n    * stopPropagation - makes the code only doing this a little easier to read in line\r\n    */\r\n    function stopPropagation(e) {\r\n        e.stopPropagation();\r\n    }\r\n\r\n    /**\r\n    * Create a function bound to a given object\r\n    * Thanks to underscore.js\r\n    */\r\n    function bind(func, obj) {\r\n        var slice = Array.prototype.slice;\r\n        var args = slice.call(arguments, 2);\r\n        return function () {\r\n            return func.apply(obj, args.concat(slice.call(arguments)));\r\n        };\r\n    }\r\n\r\n\r\n    /**\r\n    * Define a query plugin\r\n    */\r\n    var dataID = \"ColorPicker.id\";\r\n    \r\n    function Plugin(opts, extra) {\r\n\r\n        if (typeof opts == \"string\") {\r\n\r\n            var returnValue = this;\r\n            var args = Array.prototype.slice.call( arguments, 1 );\r\n\r\n            this.each(function () {\r\n                var spect = pickers[$(this).data(dataID)];\r\n                if (spect) {\r\n                    var method = spect[opts];\r\n                    if (!method) {\r\n                        throw new Error( \"skylark-ui-colorpicker: no such method: '\" + opts + \"'\" );\r\n                    }\r\n\r\n                    if (opts == \"get\") {\r\n                        returnValue = spect.get();\r\n                    }\r\n                    else if (opts == \"container\") {\r\n                        returnValue = spect.container;\r\n                    }\r\n                    else if (opts == \"option\") {\r\n                        returnValue = spect.option.apply(spect, args);\r\n                    }\r\n                    else if (opts == \"destroy\") {\r\n                        spect.destroy();\r\n                        $(this).removeData(dataID);\r\n                    }\r\n                    else {\r\n                        method.apply(spect, args);\r\n                    }\r\n                }\r\n            });\r\n\r\n            return returnValue;\r\n        }\r\n\r\n        // Initializing a new instance of ColorPicker\r\n        return this.colorPicker(\"destroy\").each(function () {\r\n            var options = langx.mixin({}, $(this).data(), opts);\r\n            var spect = ColorPicker(this, options);\r\n            $(this).data(dataID, spect.id);\r\n        });\r\n    }\r\n\r\n    ColorPicker.load = true;\r\n    ColorPicker.loadOpts = {};\r\n    ColorPicker.draggable = draggable;\r\n    ColorPicker.defaults = defaultOpts;\r\n\r\n    ColorPicker.localization = { };\r\n    ColorPicker.palettes = { };\r\n\r\n    $.fn.colorPicker = Plugin;\r\n\r\n    return skylark.attach(\"domx.ColorPicker\",ColorPicker);\r\n\r\n});\r\n\ndefine('skylark-domx-gradienter/Drag',[],function() {\r\n    /**************************************************\r\n     * dom-drag.js\r\n     * 09.25.2001\r\n     * www.youngpup.net\r\n     **************************************************\r\n     * 10.28.2001 - fixed minor bug where events\r\n     * sometimes fired off the handle, not the root.\r\n     **************************************************/\r\n\r\n    var Drag = {\r\n\r\n        obj : null,\r\n\r\n        gradx : null,\r\n\r\n        init : function(o, oRoot, minX, maxX, minY, maxY, bSwapHorzRef, bSwapVertRef, fXMapper, fYMapper)\r\n        {\r\n            o.onmousedown\t= Drag.start;\r\n\r\n            o.hmode\t\t\t= bSwapHorzRef ? false : true ;\r\n            o.vmode\t\t\t= bSwapVertRef ? false : true ;\r\n\r\n            o.root = oRoot && oRoot != null ? oRoot : o ;\r\n\r\n            if (o.hmode  && isNaN(parseInt(o.root.style.left  ))) o.root.style.left   = \"0px\";\r\n           //if (o.vmode  && isNaN(parseInt(o.root.style.top   ))) o.root.style.top    = \"0px\";\r\n            if (!o.hmode && isNaN(parseInt(o.root.style.right ))) o.root.style.right  = \"0px\";\r\n           // if (!o.vmode && isNaN(parseInt(o.root.style.bottom))) o.root.style.bottom = \"0px\";\r\n\r\n            o.minX\t= typeof minX != 'undefined' ? minX : null;\r\n            o.minY\t= typeof minY != 'undefined' ? minY : null;\r\n            o.maxX\t= typeof maxX != 'undefined' ? maxX : null;\r\n            o.maxY\t= typeof maxY != 'undefined' ? maxY : null;\r\n\r\n            o.xMapper = fXMapper ? fXMapper : null;\r\n            o.yMapper = fYMapper ? fYMapper : null;\r\n\r\n            o.root.onDragStart\t= new Function();\r\n            o.root.onDragEnd\t= new Function();\r\n            o.root.onDrag\t\t= new Function();\r\n        },\r\n\r\n        start : function(e)\r\n        {\r\n            Drag.gradx.current_slider_id = \"#\"+this.id;\r\n\r\n            var o = Drag.obj = this;\r\n            e = Drag.fixE(e);\r\n            var y = parseInt(o.vmode ? o.root.style.top  : o.root.style.bottom);\r\n            var x = parseInt(o.hmode ? o.root.style.left : o.root.style.right );\r\n            o.root.onDragStart(x, y);\r\n\r\n            o.lastMouseX\t= e.clientX;\r\n            o.lastMouseY\t= e.clientY;\r\n\r\n            if (o.hmode) {\r\n                if (o.minX != null)\to.minMouseX\t= e.clientX - x + o.minX;\r\n                if (o.maxX != null)\to.maxMouseX\t= o.minMouseX + o.maxX - o.minX;\r\n            } else {\r\n                if (o.minX != null) o.maxMouseX = -o.minX + e.clientX + x;\r\n                if (o.maxX != null) o.minMouseX = -o.maxX + e.clientX + x;\r\n            }\r\n\r\n            if (o.vmode) {\r\n                if (o.minY != null)\to.minMouseY\t= e.clientY - y + o.minY;\r\n                if (o.maxY != null)\to.maxMouseY\t= o.minMouseY + o.maxY - o.minY;\r\n            }\r\n            else {\r\n                if (o.minY != null) o.maxMouseY = -o.minY + e.clientY + y;\r\n                if (o.maxY != null) o.minMouseY = -o.maxY + e.clientY + y;\r\n            }\r\n\r\n            document.onmousemove\t= Drag.drag;\r\n            document.onmouseup\t= Drag.end;\r\n\r\n            return false;\r\n        },\r\n\r\n        drag : function(e)\r\n        {\r\n            e = Drag.fixE(e);\r\n            var o = Drag.obj;\r\n\r\n            Drag.gradx.update_style_array();\r\n            Drag.gradx.apply_style(Drag.gradx.panel, Drag.gradx.get_style_value());\r\n            var left = Drag.gradx.gx(\"#\"+o.id).css(\"left\");\r\n\r\n\r\n            if(parseInt(left) > 60 && parseInt(left) < 390) {\r\n                Drag.gradx.gx(\"#gradx_slider_info\") //info element cached before\r\n                .css(\"left\",left)\r\n                .show();\r\n                         \r\n            }/*else {\r\n                if(parseInt(left) > 120) {\r\n                    left = \"272px\";\r\n                }else{\r\n                    left = \"120px\";\r\n                }\r\n                    \r\n                gradx.gx(\"#gradx_slider_info\") //info element cached before\r\n                .css(\"left\",left)\r\n                .show();\r\n                     \r\n            }*/\r\n             var color = Drag.gradx.gx(\"#\"+o.id).css(\"backgroundColor\");\r\n            //but what happens if @color is not in RGB ? :(\r\n            var rgb = Drag.gradx.get_rgb_obj(color);\r\n            Drag.gradx.cp.colorPicker(\"set\",rgb);\r\n\r\n\r\n            var ey\t= e.clientY;\r\n            var ex\t= e.clientX;\r\n            var y = parseInt(o.vmode ? o.root.style.top  : o.root.style.bottom);\r\n            var x = parseInt(o.hmode ? o.root.style.left : o.root.style.right );\r\n            var nx, ny;\r\n\r\n            if (o.minX != null) ex = o.hmode ? Math.max(ex, o.minMouseX) : Math.min(ex, o.maxMouseX);\r\n            if (o.maxX != null) ex = o.hmode ? Math.min(ex, o.maxMouseX) : Math.max(ex, o.minMouseX);\r\n            if (o.minY != null) ey = o.vmode ? Math.max(ey, o.minMouseY) : Math.min(ey, o.maxMouseY);\r\n            if (o.maxY != null) ey = o.vmode ? Math.min(ey, o.maxMouseY) : Math.max(ey, o.minMouseY);\r\n\r\n            nx = x + ((ex - o.lastMouseX) * (o.hmode ? 1 : -1));\r\n            ny = y + ((ey - o.lastMouseY) * (o.vmode ? 1 : -1));\r\n\r\n            if (o.xMapper)\t\tnx = o.xMapper(y)\r\n            else if (o.yMapper)\tny = o.yMapper(x)\r\n\r\n            Drag.obj.root.style[o.hmode ? \"left\" : \"right\"] = nx + \"px\";\r\n            //Drag.obj.root.style[o.vmode ? \"top\" : \"bottom\"] = ny + \"px\";\r\n            Drag.obj.lastMouseX\t= ex;\r\n            Drag.obj.lastMouseY\t= ey;\r\n\r\n            Drag.obj.root.onDrag(nx, ny);\r\n            return false;\r\n        },\r\n\r\n        end : function()\r\n        {\r\n            document.onmousemove = null;\r\n            document.onmouseup   = null;\r\n            Drag.obj.root.onDragEnd(\tparseInt(Drag.obj.root.style[Drag.obj.hmode ? \"left\" : \"right\"]), \r\n                parseInt(Drag.obj.root.style[Drag.obj.vmode ? \"top\" : \"bottom\"]));\r\n            Drag.obj = null;\r\n        },\r\n\r\n        fixE : function(e)\r\n        {\r\n            if (typeof e == 'undefined') e = window.event;\r\n            if (typeof e.layerX == 'undefined') e.layerX = e.offsetX;\r\n            if (typeof e.layerY == 'undefined') e.layerY = e.offsetY;\r\n            return e;\r\n        }\r\n    };\r\n\r\n    return Drag;\r\n});\ndefine('skylark-domx-gradienter/Gradienter',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-query\",\r\n    \"skylark-domx-plugins\",    \r\n    \"skylark-data-color/colors\",\r\n    \"skylark-data-color/Color\",\r\n    \"skylark-domx-colorpicker/ColorPicker\",\r\n    \"./Drag\"\r\n],function(skylark, langx, browser, noder, eventer,finder, $, plugins,colors, Color, ColorPicker,Drag) {\r\n\r\n\r\n    /*\r\n     *\r\n     * SAMPLE USAGE DETAILS :\r\n     * \r\n     * sliders structure :\r\n     *\r\n     * [\r\n     *  {\r\n     *     color: \"COLOR\",\r\n     *     position: \"POSITION\" //0 to 100 without % symbol\r\n     *  },\r\n     *  {\r\n     *     ....\r\n     *     ....\r\n     *  },\r\n     *  ....\r\n     * ]\r\n     *\r\n     */\r\n\r\n    'use strict';\r\n\r\n    //make me jquery UI  independent\r\n    if (typeof $.fn.draggable === \"undefined\") {\r\n\r\n        $.fn.draggable = function() {\r\n            //console.log(this);\r\n            var ele = document.getElementById(this.attr(\"id\"));\r\n            ele.style.top = \"121px\";\r\n            Drag.init(ele, null, 26, 426, 86, 86);\r\n            return this;\r\n        };\r\n\r\n\r\n    }\r\n\r\n\r\n    var gradX  = function(id, _options) {\r\n\r\n\r\n        var options = {\r\n            targets: [], //[element selector] -> array\r\n            sliders: [],\r\n            direction: 'left',\r\n            //if linear left | top | right | bottom\r\n            //if radial left | center | right , top | center | bottom \r\n            type: 'linear', //linear | circle | ellipse\r\n            code_shown: false, //false | true\r\n            change: function(sliders, styles) {\r\n                //nothing to do here by default\r\n            }\r\n        },\r\n    \t\r\n        //make global\t\r\n        gradx = Drag.gradx = {\r\n            rand_RGB: [],\r\n            rand_pos: [],\r\n            id: null,\r\n            slider_ids: [],\r\n            slider_index: 0, //global index for sliders\r\n            sliders: [], //contains styles of each slider\r\n            direction: \"left\", //direction of gradient or position of centre in case of radial gradients\r\n            type: \"linear\", //linear or radial\r\n            shape: \"cover\", //radial gradient size\r\n            slider_hovered: [],\r\n            jQ_present: true,\r\n            code_shown: false,\r\n            load_jQ: function() {\r\n\r\n                //handle any library conflicts here\r\n                this.gx = $;\r\n            },\r\n            //very lazy to replace this by jQuery\r\n            add_event: function(el, evt, evt_func) {\r\n                add_event(el, evt, evt_func);\r\n            },\r\n            get_random_position: function() {\r\n                var pos;\r\n\r\n                do {\r\n                    pos = parseInt(Math.random() * 100);\r\n                }\r\n                while (this.rand_pos.indexOf(pos) > -1);\r\n\r\n                this.rand_pos.push(pos);\r\n                return pos;\r\n\r\n            },\r\n            get_random_rgb: function() {\r\n\r\n                var R, G, B, color;\r\n\r\n                do {\r\n                    R = parseInt(Math.random() * 255);\r\n                    G = parseInt(Math.random() * 255);\r\n                    B = parseInt(Math.random() * 255);\r\n\r\n                    color = \"rgb(\" + R + \", \" + G + \", \" + B + \")\";\r\n                }\r\n                while (this.rand_RGB.indexOf(color) > -1);\r\n\r\n                this.rand_RGB.push(color);\r\n                return color;\r\n\r\n            },\r\n            //if target element is specified the target's style (background) is updated\r\n            update_target: function(values) {\r\n\r\n                if (this.targets.length > 0) {\r\n                    //target elements exist\r\n\r\n                    var i, j, ele, len = this.targets.length, v_len = values.length;\r\n                    for (i = 0; i < len; i++) {\r\n                        ele = gradx.gx(this.targets[i]);\r\n\r\n                        for (j = 0; j < v_len; j++) {\r\n                            ele.css(\"background-image\", values[j]);\r\n                        }\r\n\r\n                    }\r\n                }\r\n            },\r\n            //apply styles on fly\r\n            apply_style: function(ele, value) {\r\n\r\n                var type = 'linear';\r\n\r\n                if (gradx.type != 'linear') {\r\n                    type = 'radial';\r\n                }\r\n\r\n                if (value.indexOf(this.direction) > -1) {\r\n                    //add cross-browser compatibility\r\n                    var values = [\r\n                        \"-webkit-\" + type + \"-gradient(\" + value + \")\",\r\n                        \"-moz-\" + type + \"-gradient(\" + value + \")\",\r\n                        \"-ms-\" + type + \"-gradient(\" + value + \")\",\r\n                        \"-o-\" + type + \"-gradient(\" + value + \")\",\r\n                        type + \"-gradient(\" + value + \")\"\r\n                    ];\r\n                } else {\r\n                    //normal color\r\n                    values = [value];\r\n                }\r\n\r\n\r\n\r\n                var len = values.length, css = '';\r\n\r\n                while (len > 0) {\r\n                    len--;\r\n                    ele.css(\"background\", values[len]);\r\n                    css += \"background: \" + values[len] + \";\\n\";\r\n                }\r\n\r\n                //call the userdefined change function\r\n                this.change(this.sliders, values);\r\n                this.update_target(values);\r\n\r\n\r\n                gradx.gx('#gradx_code').html(css);\r\n\r\n            },\r\n            //on load\r\n            apply_default_styles: function() {\r\n                this.update_style_array()\r\n                var value = this.get_style_value();\r\n                this.apply_style(this.panel, value);\r\n            },\r\n            //update the slider_values[] while dragging\r\n            update_style_array: function() {\r\n\r\n                this.sliders = [];\r\n\r\n                var len = gradx.slider_ids.length,\r\n                        i, offset, position, id;\r\n\r\n                for (i = 0; i < len; i++) {\r\n                    id = \"#\" + gradx.slider_ids[i];\r\n                    offset = parseInt(gradx.gx(id).css(\"left\"));\r\n                    position = parseInt((offset / gradx.container_width) * 100);\r\n                    position -= 6; //TODO: find why this is required\r\n                    gradx.sliders.push([gradx.gx(id).css(\"background-color\"), position]);\r\n\r\n                }\r\n\r\n                this.sliders.sort(function(A, B) {\r\n                    if (A[1] > B[1])\r\n                        return 1;\r\n                    else\r\n                        return -1;\r\n                });\r\n            },\r\n            //creates the complete css background value to later apply style\r\n            get_style_value: function() {\r\n\r\n                var len = gradx.slider_ids.length;\r\n\r\n                if (len === 1) {\r\n                    //since only one slider , so simple background\r\n\r\n                    style_str = this.sliders[0][0];\r\n                } else {\r\n                    var style_str = \"\", suffix = \"\";\r\n                    for (var i = 0; i < len; i++) {\r\n                        if (this.sliders[i][1] == \"\") {\r\n                            style_str += suffix + (this.sliders[i][0]);\r\n\r\n                        } else {\r\n                            if (this.sliders[i][1] > 100) {\r\n                                this.sliders[i][1] = 100;\r\n                            }\r\n                            style_str += suffix + (this.sliders[i][0] + \" \" + this.sliders[i][1] + \"%\");\r\n\r\n                        }\r\n                        suffix = \" , \"; //add , from next iteration\r\n                    }\r\n\r\n                    if (this.type == 'linear') {\r\n                        //direction, [color stoppers]\r\n                        style_str = this.direction + \" , \" + style_str; //add direction for gradient\r\n                    } else {\r\n                        //position, type size, [color stoppers]\r\n                        style_str = this.direction + \" , \" + this.type + \" \" + this.shape + \" , \" + style_str;\r\n                    }\r\n                }\r\n\r\n                return style_str;\r\n            },\r\n            //@input rgb string rgb(<red>,<green>,<blue>)\r\n            //@output rgb object of form { r: <red> , g: <green> , b : <blue>}\r\n            get_rgb_obj: function(rgb) {\r\n\r\n                //rgb(r,g,b)\r\n                rgb = rgb.split(\"(\");\r\n                //r,g,b)\r\n                rgb = rgb[1];\r\n                //r g b)\r\n                rgb = rgb.split(\",\");\r\n\r\n                return {\r\n                    r: parseInt(rgb[0]),\r\n                    g: parseInt(rgb[1]),\r\n                    b: parseInt(rgb[2])\r\n                };\r\n\r\n            },\r\n            load_info: function(ele) {\r\n                var id = \"#\" + ele.id;\r\n                this.current_slider_id = id;\r\n                //check if current clicked element is an slider\r\n                if (this.slider_ids.indexOf(ele.id) > -1) { //javascript does not has # in its id\r\n\r\n                    var color = gradx.gx(id).css(\"backgroundColor\");\r\n                    //but what happens if @color is not in RGB ? :(\r\n                    var rgb = this.get_rgb_obj(color);\r\n\r\n                    var left = gradx.gx(id).css(\"left\");\r\n                    if (parseInt(left) > 26 && parseInt(left) < 426) {\r\n                        gradx.gx(\"#gradx_slider_info\") //info element cached before\r\n                                .css(\"left\", left)\r\n                                .show();\r\n\r\n                    } \r\n                    \r\n                    this.set_colorpicker(rgb);\r\n                    console.log(rgb);\r\n                }\r\n\r\n            },\r\n            //add slider\r\n            add_slider: function(sliders) {\r\n\r\n\r\n                var id, slider, k, position, value, delta;\r\n\r\n\r\n                if (sliders.length === 0) {\r\n                    sliders = [//default sliders\r\n                        {\r\n                            color: gradx.get_random_rgb(),\r\n                            position: gradx.get_random_position() //x percent of gradient panel(400px)\r\n                        },\r\n                        {\r\n                            color: gradx.get_random_rgb(),\r\n                            position: gradx.get_random_position()\r\n                        }\r\n                    ];\r\n\r\n                }\r\n\r\n\r\n                var obj = sliders;\r\n\r\n                for (k in obj) {\r\n\r\n                    if (typeof obj[k].position === \"undefined\")\r\n                        break;\r\n\r\n                    //convert % to px based on containers width\r\n                    var delta = 26; //range: 26px tp 426px\r\n                    position = parseInt((obj[k].position * this.container_width) / 100) + delta + \"px\";\r\n\r\n                    id = \"gradx_slider_\" + (this.slider_index); //create an id for this slider\r\n                    this.sliders.push(\r\n                            [\r\n                                obj[k].color,\r\n                                obj[k].position\r\n                            ]\r\n                            );\r\n\r\n                    this.slider_ids.push(id); //for reference wrt to id\r\n\r\n                    slider = \"<div class='gradx_slider' id='\" + id + \"'></div>\";\r\n                    gradx.gx(\"#gradx_start_sliders_\" + this.id).append(slider);\r\n\r\n                    gradx.gx('#' + id).css(\"backgroundColor\", obj[k].color).css(\"left\", position);\r\n                    this.slider_index++;\r\n                }\r\n\r\n                for (var i = 0, len = this.slider_ids.length; i < len; i++) {\r\n\r\n                    gradx.gx('#' + this.slider_ids[i]).draggable({\r\n                        containment: 'parent',\r\n                        axis: 'x',\r\n                        start: function() {\r\n                            if (gradx.jQ_present)\r\n                                gradx.current_slider_id = \"#\" + gradx.gx(this).attr(\"id\"); //got full jQuery power here !\r\n                        },\r\n                        drag: function() {\r\n\r\n                            gradx.update_style_array();\r\n                            gradx.apply_style(gradx.panel, gradx.get_style_value());\r\n                            var left = gradx.gx(gradx.current_slider_id).css(\"left\");\r\n\r\n\r\n                            if (parseInt(left) > 26 && parseInt(left) < 426) {\r\n                                gradx.gx(\"#gradx_slider_info\") //info element cached before\r\n                                        .css(\"left\", left)\r\n                                        .show();\r\n\r\n                            } /*else {\r\n                             if (parseInt(left) > 120) {\r\n                             left = \"272px\";\r\n                             } else {\r\n                             left = \"120px\";\r\n                             }\r\n                             \r\n                             gradx.gx(\"#gradx_slider_info\") //info element cached before\r\n                             .css(\"left\", left)\r\n                             .show();\r\n                             \r\n                             }*/\r\n                            var color = gradx.gx(gradx.current_slider_id).css(\"backgroundColor\");\r\n                            //but what happens if @color is not in RGB ? :(\r\n                            var rgb = gradx.get_rgb_obj(color);\r\n                            gradx.cp.colorPicker(\"set\", rgb);\r\n\r\n                        }\r\n\r\n                    }).click(function() {\r\n                        gradx.load_info(this);\r\n                        return false;\r\n                    });\r\n                }\r\n\r\n\r\n            },\r\n            set_colorpicker: function(clr) {\r\n                gradx.cp.colorPicker({\r\n                    move: function(color) {\r\n                        if (gradx.current_slider_id != false) {\r\n                            var rgba = color.toRgbString();\r\n                            gradx.gx(gradx.current_slider_id).css('background-color', rgba);\r\n                            gradx.update_style_array();\r\n                            gradx.apply_style(gradx.panel, gradx.get_style_value());\r\n                        }\r\n                    },\r\n                    change: function() {\r\n                        gradx.gx(\"#gradx_slider_info\").hide();\r\n                    },\r\n                    flat: true,\r\n                    showAlpha: true,\r\n                    color: clr,\r\n                    clickoutFiresChange: true,\r\n                    showInput: true,\r\n                    showButtons: false\r\n\r\n                });\r\n            },\r\n            generate_options: function(options) {\r\n\r\n                var len = options.length,\r\n                        name, state,\r\n                        str = '';\r\n\r\n                for (var i = 0; i < len; i++) {\r\n\r\n                    name = options[i].split(\" \");\r\n\r\n                    name = name[0];\r\n\r\n                    if (i < 2) {\r\n                        state = name[1];\r\n                    } else {\r\n                        state = '';\r\n                    }\r\n\r\n                    name = name.replace(\"-\", \" \");\r\n\r\n                    str += '<option value=' + options[i] + ' ' + state + '>' + name + '</option>';\r\n\r\n                }\r\n\r\n                return str;\r\n            },\r\n            generate_radial_options: function() {\r\n\r\n                var options;\r\n                options = [\"horizontal-center disabled\", \"center selected\", \"left\", \"right\"];\r\n                gradx.gx('#gradx_gradient_subtype').html(gradx.generate_options(options));\r\n\r\n                options = [\"vertical-center disabled\", \"center selected\", \"top\", \"bottom\"];\r\n                gradx.gx('#gradx_gradient_subtype2').html(gradx.generate_options(options)).show();\r\n\r\n            },\r\n            generate_linear_options: function() {\r\n\r\n                var options;\r\n                options = [\"horizontal-center disabled\", \"left selected\", \"right\", \"top\", \"bottom\"];\r\n                gradx.gx('#gradx_gradient_subtype').html(gradx.generate_options(options));\r\n\r\n                gradx.gx('#gradx_gradient_subtype2').hide();\r\n\r\n            },\r\n            destroy: function() {\r\n                var options = {\r\n                    targets: [], //[element selector] -> array\r\n                    sliders: [],\r\n                    direction: 'left',\r\n                    //if linear left | top | right | bottom\r\n                    //if radial left | center | right , top | center | bottom \r\n                    type: 'linear', //linear | circle | ellipse\r\n                    code_shown: false, //false | true\r\n                    change: function(sliders, styles) {\r\n                        //nothing to do here by default\r\n                    }\r\n                };\r\n\r\n                for (var k in options) {\r\n                    gradx[k] = options[k];\r\n                }\r\n            },\r\n            load_gradx: function(id, sliders) {\r\n                this.me = gradx.gx(id);\r\n                this.id = id.replace(\"#\", \"\");\r\n                id = this.id;\r\n                this.current_slider_id = false;\r\n                var html = \"<div class='gradx'>\\n\"+\r\n                            \"<div id='gradx_add_slider' class='gradx_add_slider gradx_btn'><i class='icon icon-add'></i>add</div>\\n\"+\r\n                            \"<div class='gradx_slectboxes'>\\n\"+\r\n                            \"<select id='gradx_gradient_type' class='gradx_gradient_type'>\\n\"+\r\n                            \"    <option value='linear'>Linear</option>\\n\"+\r\n                            \"    <option value='circle'>Radial - Circle</option>\\n\"+\r\n                            \"    <option value='ellipse'>Radial - Ellipse</option>\\n\"+\r\n                            \"</select>\\n\"+\r\n                            \"<select id='gradx_gradient_subtype' class='gradx_gradient_type'>\\n\"+\r\n                            \"    <option id='gradx_gradient_subtype_desc' value='gradient-direction' disabled>gradient direction</option>\\n\"+\r\n                            \"    <option value='left' selected>Left</option>\\n\"+\r\n                            \"    <option value='right'>Right</option>\\n\"+\r\n                            \"    <option value='top'>Top</option>\\n\"+\r\n                            \"    <option value='bottom'>Bottom</option>\\n\"+\r\n                            \"</select>\\n\"+\r\n                            \"<select id='gradx_gradient_subtype2' class='gradx_gradient_type gradx_hide'>\\n\"+\r\n                            \"</select>\\n\"+\r\n                            \"<select id='gradx_radial_gradient_size' class='gradx_gradient_type gradx_hide'>\\n\"+\r\n                            \"</select>\\n\"+\r\n                            \"</div>\\n\"+\r\n                            \"<div class='gradx_container' id='gradx_\" + id + \"'>\\n\"+\r\n                            \"    <div id='gradx_stop_sliders_\" + id + \"'></div>\\n\"+\r\n                            \"    <div class='gradx_panel' id='gradx_panel_\" + id + \"'></div>\\n\"+\r\n                            \"    <div class='gradx_start_sliders' id='gradx_start_sliders_\" + id + \"'>\\n\"+\r\n                            \"        <div class='cp-default' id='gradx_slider_info'>\\n\"+\r\n                            \"            <div id='gradx_slider_controls'>\\n\"+\r\n                            \"                <div id='gradx_delete_slider' class='gradx_btn'><i class='icon icon-remove'></i>delete</div>\\n\"+\r\n                            \"            </div>\\n\"+\r\n                            \"            <div id='gradx_slider_content'></div>\\n\"+\r\n                            \"        </div> \\n\"+\r\n                            \"    </div>\\n\"+\r\n                            \"</div>\\n\"+\r\n                            \"<div id='gradx_show_code' class='gradx_show_code gradx_btn'><i class='icon icon-file-css'></i><span>show the code</span></div>\\n\"+\r\n                            \"<div id='gradx_show_presets' style='display:none' class='gradx_show_presets gradx_btn'><i class='icon icon-preset'></i><span>show presets</span></div>\\n\"+\r\n                            \"<textarea class='gradx_code' id='gradx_code'></textarea>\\n\"+\r\n                        \"</div>\";\r\n\r\n                this.me.html(html);\r\n\r\n\r\n                //generates html to select the different gradient sizes\r\n                // *only available for radial gradients\r\n                var gradient_size_val = [\"gradient-size disabled\", \"closest-side selected\", \"closest-corner\", \"farthest-side\", \"farthest-corner\", \"contain\", \"cover\"],\r\n                        option_str = '';\r\n\r\n\r\n                option_str = gradx.generate_options(gradient_size_val);\r\n\r\n                gradx.gx('#gradx_radial_gradient_size').html(option_str);\r\n\r\n\r\n                //cache divs for fast reference\r\n\r\n                this.container = gradx.gx(\"#gradx_\" + id);\r\n                this.panel = gradx.gx(\"#gradx_panel_\" + id);\r\n                //.hide();\r\n                //this.info.hide();\r\n                this.container_width = 400 //HARDCODE;\r\n                this.add_slider(sliders);\r\n\r\n\r\n                gradx.add_event(document, 'click', function() {\r\n    //            if(!gradx.jQ_present){\r\n                    if (!gradx.slider_hovered[id]) {\r\n                        gradx.gx(\"#gradx_slider_info\").hide();\r\n                        return false;\r\n                    }\r\n                });\r\n\r\n\r\n\r\n                gradx.gx('#gradx_add_slider').click(function() {\r\n                    gradx.add_slider([\r\n                        {\r\n                            color: gradx.get_random_rgb(),\r\n                            position: gradx.get_random_position() //no % symbol\r\n                        }\r\n                    ]);\r\n                    gradx.update_style_array();\r\n                    gradx.apply_style(gradx.panel, gradx.get_style_value());//(where,style)\r\n\r\n                });\r\n\r\n                //cache the element\r\n                gradx.cp = gradx.gx('#gradx_slider_content');\r\n\r\n                //call the colorpicker plugin\r\n                gradx.set_colorpicker(\"blue\");\r\n\r\n                gradx.gx('#gradx_delete_slider').click(function() {\r\n                    gradx.gx(gradx.current_slider_id).remove();\r\n                    gradx.gx(\"#gradx_slider_info\").hide();\r\n                    var id = gradx.current_slider_id.replace(\"#\", \"\");\r\n\r\n                    //remove all references from array for current deleted slider\r\n\r\n                    for (var i = 0; i < gradx.slider_ids.length; i++) {\r\n                        if (gradx.slider_ids[i] == id) {\r\n                            gradx.slider_ids.splice(i, 1);\r\n                        }\r\n                    }\r\n\r\n                    //apply modified style after removing the slider\r\n                    gradx.update_style_array();\r\n                    gradx.apply_style(gradx.panel, gradx.get_style_value());\r\n\r\n                    gradx.current_slider_id = false; //no slider is selected\r\n\r\n                });\r\n\r\n                gradx.gx('#gradx_code').focus(function() {\r\n                    var $this = gradx.gx(this);\r\n                    $this.select();\r\n\r\n                    // Work around Chrome's little problem\r\n                    $this.mouseup(function() {\r\n                        // Prevent further mouseup intervention\r\n                        $this.off(\"mouseup\");\r\n                        return false;\r\n                    });\r\n                });\r\n\r\n                gradx.gx('#gradx_gradient_type').change(function() {\r\n\r\n                    var type = gradx.gx(this).val(), options, option_str = '';\r\n\r\n                    if (type !== \"linear\") {\r\n                        //gradx.gx('#gradx_radial_gradient_size').show();\r\n\r\n                        gradx.generate_radial_options();\r\n                    } else {\r\n\r\n                        gradx.generate_linear_options();\r\n                        gradx.gx('#gradx_gradient_subtype').val(\"left\");\r\n                    }\r\n\r\n                    gradx.type = type;\r\n                    gradx.direction = gradx.gx('#gradx_gradient_subtype').val();\r\n                    gradx.apply_style(gradx.panel, gradx.get_style_value());//(where,style)\r\n                });\r\n\r\n                //change type onload userdefined\r\n                if (this.type !== \"linear\") {\r\n                    gradx.gx('#gradx_gradient_type').val(this.type);\r\n                    gradx.generate_radial_options();\r\n\r\n                    var h, v;\r\n\r\n                    if (this.direction !== 'left') {\r\n                        //user has passed his own direction\r\n                        var center;\r\n                        if (this.direction.indexOf(\",\") > -1) {\r\n                            center = this.direction.split(\",\");\r\n                        } else {\r\n                            //tolerate user mistakes\r\n                            center = this.direction.split(\" \");\r\n                        }\r\n\r\n                        h = center[0];\r\n                        v = center[1];\r\n\r\n                        //update the center points in the corr. select boxes\r\n                        gradx.gx('#gradx_gradient_subtype').val(h);\r\n                        gradx.gx('#gradx_gradient_subtype2').val(v);\r\n                    } else {\r\n                        var h = gradx.gx('#gradx_gradient_subtype').val();\r\n                        var v = gradx.gx('#gradx_gradient_subtype2').val();\r\n                    }\r\n\r\n                    gradx.direction = h + \" \" + v;\r\n                    gradx.apply_style(gradx.panel, gradx.get_style_value());//(where,style)\r\n                } else {\r\n\r\n                    //change direction if not left\r\n                    if (this.direction !== 'left') {\r\n                        gradx.gx('#gradx_gradient_subtype').val(this.direction);\r\n                    }\r\n                }\r\n\r\n                gradx.gx('#gradx_gradient_subtype').change(function() {\r\n\r\n                    if (gradx.type === 'linear') {\r\n                        gradx.direction = gradx.gx(this).val();\r\n                    } else {\r\n                        var h = gradx.gx(this).val();\r\n                        var v = gradx.gx('#gradx_gradient_subtype2').val();\r\n                        gradx.direction = h + \" \" + v;\r\n                    }\r\n                    gradx.apply_style(gradx.panel, gradx.get_style_value());//(where,style)\r\n\r\n                });\r\n\r\n                gradx.gx('#gradx_gradient_subtype2').change(function() {\r\n\r\n                    var h = gradx.gx('#gradx_gradient_subtype').val();\r\n                    var v = gradx.gx(this).val();\r\n                    gradx.direction = h + \" \" + v;\r\n                    gradx.apply_style(gradx.panel, gradx.get_style_value());//(where,style)\r\n\r\n                });\r\n\r\n                //not visible\r\n                gradx.gx('#gradx_radial_gradient_size').change(function() {\r\n                    gradx.shape = gradx.gx(this).val();\r\n                    gradx.apply_style(gradx.panel, gradx.get_style_value());//(where,style)\r\n\r\n                });\r\n\r\n                gradx.gx('#gradx_show_code').click(function() {\r\n\r\n                    if (gradx.code_shown) {\r\n                        //hide it\r\n\r\n                        gradx.code_shown = false;\r\n                        gradx.gx('#gradx_show_code span').text(\"show the code\");\r\n                        gradx.gx(\"#gradx_code\").hide();\r\n                    }\r\n                    else {\r\n                        //show it\r\n\r\n                        gradx.gx('#gradx_show_code span').text(\"hide the code\");\r\n                        gradx.gx(\"#gradx_code\").show();\r\n                        gradx.code_shown = true;\r\n                    }\r\n                });\r\n\r\n                //show or hide onload\r\n                if (gradx.code_shown) {\r\n                    //show it\r\n\r\n                    gradx.gx('#gradx_show_code span').text(\"hide the code\");\r\n                    gradx.gx(\"#gradx_code\").show();\r\n\r\n                }\r\n\r\n                gradx.add_event(document.getElementById('gradx_slider_info'), 'mouseout', function() {\r\n                    gradx.slider_hovered[id] = false;\r\n                });\r\n                gradx.add_event(document.getElementById('gradx_slider_info'), 'mouseover', function() {\r\n                    gradx.slider_hovered[id] = true;\r\n\r\n                });\r\n\r\n            }\r\n\r\n\r\n\r\n\r\n        };\r\n\r\n\r\n\r\n        function  add_event(element, event, event_function)\r\n        {\r\n            if (element.attachEvent) //Internet Explorer\r\n                element.attachEvent(\"on\" + event, function() {\r\n                    event_function.call(element);\r\n                });\r\n            else if (element.addEventListener) //Firefox & company\r\n                element.addEventListener(event, event_function, false); //don't need the 'call' trick because in FF everything already works in the right way\r\n        }\r\n        ;\r\n\r\n\r\n\r\n        //load jQuery library into gradx.gx\r\n        gradx.load_jQ();\r\n\r\n\r\n        /* merge _options into options */\r\n        langx.mixin(options, _options);\r\n\r\n        //apply options to gradx object\r\n\r\n        for (var k in options) {\r\n\r\n            //load the options into gradx object\r\n            gradx[k] = options[k];\r\n\r\n        }\r\n\r\n        gradx.load_gradx(id, gradx.sliders);\r\n        gradx.apply_default_styles();\r\n\r\n\r\n    };\r\n\r\n    return skylark.attach(\"domx.Gradienter\",gradX);\r\n});\ndefine('skylark-domx-gradienter/main',[\r\n    \"./Gradienter\",\r\n], function(Gradienter) {\r\n    return Gradienter;\r\n});\r\n\ndefine('skylark-domx-gradienter', ['skylark-domx-gradienter/main'], function (main) { return main; });\n\n"]}