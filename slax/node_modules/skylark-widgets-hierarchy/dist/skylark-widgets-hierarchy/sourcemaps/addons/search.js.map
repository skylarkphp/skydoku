{"version":3,"sources":["addons/search.js"],"names":["define","langx","browser","eventer","noder","geom","$","jstree","plugins","search","defaults","ajax","fuzzy","case_sensitive","show_only_matches","show_only_matches_children","close_opened_onclear","search_leaves_only","search_callback","options","parent","this","bind","call","_data","str","dom","res","opn","som","smc","hdn","element","on","proxy","e","data","length","i","j","k","l","m","_model","p","state","hidden","push","concat","parents","children_d","vakata","array_remove_item","array_unique","root","hide_all","show_node","redraw","skip_async","inside","append","trim","toString","clear_search","get_node","id","s","settings","a","f","r","undefined","isFunction","d","_load_nodes","isArray","extend","lastRequest","abort","fail","core","last_error","error","plugin","reason","JSON","stringify","done","caseSensitive","each","ii","v","text","loaded","children","isMatch","open_node","add","querySelectorAll","map","indexOf","substr","replace","idregex","join","addClass","trigger","nodes","close_node","removeClass","redraw_node","obj","deep","callback","force_render","apply","arguments","inArray","tmp","childNodes","className","pattern","txt","toLowerCase","matchmask","pattern_alphabet","match_bitapScore","MATCH_LOCATION","location","MATCH_DISTANCE","distance","MATCH_THRESHOLD","threshold","patternLen","mask","charAt","x","accuracy","proximity","Math","abs","score","binMin","binMid","lastRd","start","finish","rd","charMatch","textLen","scoreThreshold","bestLoc","binMax","locations","min","lastIndexOf","floor","max","Array"],"mappings":"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","file":"../../addons/search.js","sourcesContent":["define([\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"../Hierarchy\"\r\n],function(langx,browser,eventer,noder,geom,$,jstree){\r\n\r\n\t\"use strict\";\r\n\r\n\tif($.jstree.plugins.search) { return; }\r\n\r\n\t/**\r\n\t * stores all defaults for the search plugin\r\n\t * @name $.jstree.defaults.search\r\n\t * @plugin search\r\n\t */\r\n\t$.jstree.defaults.search = {\r\n\t\t/**\r\n\t\t * a jQuery-like AJAX config, which jstree uses if a server should be queried for results.\r\n\t\t *\r\n\t\t * A `str` (which is the search string) parameter will be added with the request, an optional `inside` parameter will be added if the search is limited to a node id. The expected result is a JSON array with nodes that need to be opened so that matching nodes will be revealed.\r\n\t\t * Leave this setting as `false` to not query the server. You can also set this to a function, which will be invoked in the instance's scope and receive 3 parameters - the search string, the callback to call with the array of nodes to load, and the optional node ID to limit the search to\r\n\t\t * @name $.jstree.defaults.search.ajax\r\n\t\t * @plugin search\r\n\t\t */\r\n\t\tajax : false,\r\n\t\t/**\r\n\t\t * Indicates if the search should be fuzzy or not (should `chnd3` match `child node 3`). Default is `false`.\r\n\t\t * @name $.jstree.defaults.search.fuzzy\r\n\t\t * @plugin search\r\n\t\t */\r\n\t\tfuzzy : false,\r\n\t\t/**\r\n\t\t * Indicates if the search should be case sensitive. Default is `false`.\r\n\t\t * @name $.jstree.defaults.search.case_sensitive\r\n\t\t * @plugin search\r\n\t\t */\r\n\t\tcase_sensitive : false,\r\n\t\t/**\r\n\t\t * Indicates if the tree should be filtered (by default) to show only matching nodes (keep in mind this can be a heavy on large trees in old browsers).\r\n\t\t * This setting can be changed at runtime when calling the search method. Default is `false`.\r\n\t\t * @name $.jstree.defaults.search.show_only_matches\r\n\t\t * @plugin search\r\n\t\t */\r\n\t\tshow_only_matches : false,\r\n\t\t/**\r\n\t\t * Indicates if the children of matched element are shown (when show_only_matches is true)\r\n\t\t * This setting can be changed at runtime when calling the search method. Default is `false`.\r\n\t\t * @name $.jstree.defaults.search.show_only_matches_children\r\n\t\t * @plugin search\r\n\t\t */\r\n\t\tshow_only_matches_children : false,\r\n\t\t/**\r\n\t\t * Indicates if all nodes opened to reveal the search result, should be closed when the search is cleared or a new search is performed. Default is `true`.\r\n\t\t * @name $.jstree.defaults.search.close_opened_onclear\r\n\t\t * @plugin search\r\n\t\t */\r\n\t\tclose_opened_onclear : true,\r\n\t\t/**\r\n\t\t * Indicates if only leaf nodes should be included in search results. Default is `false`.\r\n\t\t * @name $.jstree.defaults.search.search_leaves_only\r\n\t\t * @plugin search\r\n\t\t */\r\n\t\tsearch_leaves_only : false,\r\n\t\t/**\r\n\t\t * If set to a function it wil be called in the instance's scope with two arguments - search string and node (where node will be every node in the structure, so use with caution).\r\n\t\t * If the function returns a truthy value the node will be considered a match (it might not be displayed if search_only_leaves is set to true and the node is not a leaf). Default is `false`.\r\n\t\t * @name $.jstree.defaults.search.search_callback\r\n\t\t * @plugin search\r\n\t\t */\r\n\t\tsearch_callback : false\r\n\t};\r\n\r\n\t$.jstree.plugins.search = function (options, parent) {\r\n\t\tthis.bind = function () {\r\n\t\t\tparent.bind.call(this);\r\n\r\n\t\t\tthis._data.search.str = \"\";\r\n\t\t\tthis._data.search.dom = $();\r\n\t\t\tthis._data.search.res = [];\r\n\t\t\tthis._data.search.opn = [];\r\n\t\t\tthis._data.search.som = false;\r\n\t\t\tthis._data.search.smc = false;\r\n\t\t\tthis._data.search.hdn = [];\r\n\r\n\t\t\tthis.element\r\n\t\t\t\t.on(\"search.jstree\", $.proxy(function (e, data) {\r\n\t\t\t\t\t\tif(this._data.search.som && data.res.length) {\r\n\t\t\t\t\t\t\tvar m = this._model.data, i, j, p = [], k, l;\r\n\t\t\t\t\t\t\tfor(i = 0, j = data.res.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\tif(m[data.res[i]] && !m[data.res[i]].state.hidden) {\r\n\t\t\t\t\t\t\t\t\tp.push(data.res[i]);\r\n\t\t\t\t\t\t\t\t\tp = p.concat(m[data.res[i]].parents);\r\n\t\t\t\t\t\t\t\t\tif(this._data.search.smc) {\r\n\t\t\t\t\t\t\t\t\t\tfor (k = 0, l = m[data.res[i]].children_d.length; k < l; k++) {\r\n\t\t\t\t\t\t\t\t\t\t\tif (m[m[data.res[i]].children_d[k]] && !m[m[data.res[i]].children_d[k]].state.hidden) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tp.push(m[data.res[i]].children_d[k]);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tp = $.vakata.array_remove_item($.vakata.array_unique(p), $.jstree.root);\r\n\t\t\t\t\t\t\tthis._data.search.hdn = this.hide_all(true);\r\n\t\t\t\t\t\t\tthis.show_node(p, true);\r\n\t\t\t\t\t\t\tthis.redraw(true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"clear_search.jstree\", $.proxy(function (e, data) {\r\n\t\t\t\t\t\tif(this._data.search.som && data.res.length) {\r\n\t\t\t\t\t\t\tthis.show_node(this._data.search.hdn, true);\r\n\t\t\t\t\t\t\tthis.redraw(true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this));\r\n\t\t};\r\n\t\t/**\r\n\t\t * used to search the tree nodes for a given string\r\n\t\t * @name search(str [, skip_async])\r\n\t\t * @param {String} str the search string\r\n\t\t * @param {Boolean} skip_async if set to true server will not be queried even if configured\r\n\t\t * @param {Boolean} show_only_matches if set to true only matching nodes will be shown (keep in mind this can be very slow on large trees or old browsers)\r\n\t\t * @param {mixed} inside an optional node to whose children to limit the search\r\n\t\t * @param {Boolean} append if set to true the results of this search are appended to the previous search\r\n\t\t * @plugin search\r\n\t\t * @trigger search.jstree\r\n\t\t */\r\n\t\tthis.search = function (str, skip_async, show_only_matches, inside, append, show_only_matches_children) {\r\n\t\t\tif(str === false || $.trim(str.toString()) === \"\") {\r\n\t\t\t\treturn this.clear_search();\r\n\t\t\t}\r\n\t\t\tinside = this.get_node(inside);\r\n\t\t\tinside = inside && inside.id ? inside.id : null;\r\n\t\t\tstr = str.toString();\r\n\t\t\tvar s = this.settings.search,\r\n\t\t\t\ta = s.ajax ? s.ajax : false,\r\n\t\t\t\tm = this._model.data,\r\n\t\t\t\tf = null,\r\n\t\t\t\tr = [],\r\n\t\t\t\tp = [], i, j;\r\n\t\t\tif(this._data.search.res.length && !append) {\r\n\t\t\t\tthis.clear_search();\r\n\t\t\t}\r\n\t\t\tif(show_only_matches === undefined) {\r\n\t\t\t\tshow_only_matches = s.show_only_matches;\r\n\t\t\t}\r\n\t\t\tif(show_only_matches_children === undefined) {\r\n\t\t\t\tshow_only_matches_children = s.show_only_matches_children;\r\n\t\t\t}\r\n\t\t\tif(!skip_async && a !== false) {\r\n\t\t\t\tif($.isFunction(a)) {\r\n\t\t\t\t\treturn a.call(this, str, $.proxy(function (d) {\r\n\t\t\t\t\t\t\tif(d && d.d) { d = d.d; }\r\n\t\t\t\t\t\t\tthis._load_nodes(!$.isArray(d) ? [] : $.vakata.array_unique(d), function () {\r\n\t\t\t\t\t\t\t\tthis.search(str, true, show_only_matches, inside, append, show_only_matches_children);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}, this), inside);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\ta = $.extend({}, a);\r\n\t\t\t\t\tif(!a.data) { a.data = {}; }\r\n\t\t\t\t\ta.data.str = str;\r\n\t\t\t\t\tif(inside) {\r\n\t\t\t\t\t\ta.data.inside = inside;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (this._data.search.lastRequest) {\r\n\t\t\t\t\t\tthis._data.search.lastRequest.abort();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._data.search.lastRequest = $.ajax(a)\r\n\t\t\t\t\t\t.fail($.proxy(function () {\r\n\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'ajax', 'plugin' : 'search', 'id' : 'search_01', 'reason' : 'Could not load search parents', 'data' : JSON.stringify(a) };\r\n\t\t\t\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\r\n\t\t\t\t\t\t}, this))\r\n\t\t\t\t\t\t.done($.proxy(function (d) {\r\n\t\t\t\t\t\t\tif(d && d.d) { d = d.d; }\r\n\t\t\t\t\t\t\tthis._load_nodes(!$.isArray(d) ? [] : $.vakata.array_unique(d), function () {\r\n\t\t\t\t\t\t\t\tthis.search(str, true, show_only_matches, inside, append, show_only_matches_children);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}, this));\r\n\t\t\t\t\treturn this._data.search.lastRequest;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(!append) {\r\n\t\t\t\tthis._data.search.str = str;\r\n\t\t\t\tthis._data.search.dom = $();\r\n\t\t\t\tthis._data.search.res = [];\r\n\t\t\t\tthis._data.search.opn = [];\r\n\t\t\t\tthis._data.search.som = show_only_matches;\r\n\t\t\t\tthis._data.search.smc = show_only_matches_children;\r\n\t\t\t}\r\n\r\n\t\t\tf = new $.vakata.search(str, true, { caseSensitive : s.case_sensitive, fuzzy : s.fuzzy });\r\n\t\t\t$.each(m[inside ? inside : $.jstree.root].children_d, function (ii, i) {\r\n\t\t\t\tvar v = m[i];\r\n\t\t\t\tif(v.text && !v.state.hidden && (!s.search_leaves_only || (v.state.loaded && v.children.length === 0)) && ( (s.search_callback && s.search_callback.call(this, str, v)) || (!s.search_callback && f.search(v.text).isMatch) ) ) {\r\n\t\t\t\t\tr.push(i);\r\n\t\t\t\t\tp = p.concat(v.parents);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif(r.length) {\r\n\t\t\t\tp = $.vakata.array_unique(p);\r\n\t\t\t\tfor(i = 0, j = p.length; i < j; i++) {\r\n\t\t\t\t\tif(p[i] !== $.jstree.root && m[p[i]] && this.open_node(p[i], null, 0) === true) {\r\n\t\t\t\t\t\tthis._data.search.opn.push(p[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(!append) {\r\n\t\t\t\t\tthis._data.search.dom = $(this.element[0].querySelectorAll('#' + $.map(r, function (v) { return \"0123456789\".indexOf(v[0]) !== -1 ? '\\\\3' + v[0] + ' ' + v.substr(1).replace($.jstree.idregex,'\\\\$&') : v.replace($.jstree.idregex,'\\\\$&'); }).join(', #')));\r\n\t\t\t\t\tthis._data.search.res = r;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._data.search.dom = this._data.search.dom.add($(this.element[0].querySelectorAll('#' + $.map(r, function (v) { return \"0123456789\".indexOf(v[0]) !== -1 ? '\\\\3' + v[0] + ' ' + v.substr(1).replace($.jstree.idregex,'\\\\$&') : v.replace($.jstree.idregex,'\\\\$&'); }).join(', #'))));\r\n\t\t\t\t\tthis._data.search.res = $.vakata.array_unique(this._data.search.res.concat(r));\r\n\t\t\t\t}\r\n\t\t\t\tthis._data.search.dom.children(\".jstree-anchor\").addClass('jstree-search');\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * triggered after search is complete\r\n\t\t\t * @event\r\n\t\t\t * @name search.jstree\r\n\t\t\t * @param {jQuery} nodes a jQuery collection of matching nodes\r\n\t\t\t * @param {String} str the search string\r\n\t\t\t * @param {Array} res a collection of objects represeing the matching nodes\r\n\t\t\t * @plugin search\r\n\t\t\t */\r\n\t\t\tthis.trigger('search', { nodes : this._data.search.dom, str : str, res : this._data.search.res, show_only_matches : show_only_matches });\r\n\t\t};\r\n\t\t/**\r\n\t\t * used to clear the last search (removes classes and shows all nodes if filtering is on)\r\n\t\t * @name clear_search()\r\n\t\t * @plugin search\r\n\t\t * @trigger clear_search.jstree\r\n\t\t */\r\n\t\tthis.clear_search = function () {\r\n\t\t\tif(this.settings.search.close_opened_onclear) {\r\n\t\t\t\tthis.close_node(this._data.search.opn, 0);\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * triggered after search is complete\r\n\t\t\t * @event\r\n\t\t\t * @name clear_search.jstree\r\n\t\t\t * @param {jQuery} nodes a jQuery collection of matching nodes (the result from the last search)\r\n\t\t\t * @param {String} str the search string (the last search string)\r\n\t\t\t * @param {Array} res a collection of objects represeing the matching nodes (the result from the last search)\r\n\t\t\t * @plugin search\r\n\t\t\t */\r\n\t\t\tthis.trigger('clear_search', { 'nodes' : this._data.search.dom, str : this._data.search.str, res : this._data.search.res });\r\n\t\t\tif(this._data.search.res.length) {\r\n\t\t\t\tthis._data.search.dom = $(this.element[0].querySelectorAll('#' + $.map(this._data.search.res, function (v) {\r\n\t\t\t\t\treturn \"0123456789\".indexOf(v[0]) !== -1 ? '\\\\3' + v[0] + ' ' + v.substr(1).replace($.jstree.idregex,'\\\\$&') : v.replace($.jstree.idregex,'\\\\$&');\r\n\t\t\t\t}).join(', #')));\r\n\t\t\t\tthis._data.search.dom.children(\".jstree-anchor\").removeClass(\"jstree-search\");\r\n\t\t\t}\r\n\t\t\tthis._data.search.str = \"\";\r\n\t\t\tthis._data.search.res = [];\r\n\t\t\tthis._data.search.opn = [];\r\n\t\t\tthis._data.search.dom = $();\r\n\t\t};\r\n\r\n\t\tthis.redraw_node = function(obj, deep, callback, force_render) {\r\n\t\t\tobj = parent.redraw_node.apply(this, arguments);\r\n\t\t\tif(obj) {\r\n\t\t\t\tif($.inArray(obj.id, this._data.search.res) !== -1) {\r\n\t\t\t\t\tvar i, j, tmp = null;\r\n\t\t\t\t\tfor(i = 0, j = obj.childNodes.length; i < j; i++) {\r\n\t\t\t\t\t\tif(obj.childNodes[i] && obj.childNodes[i].className && obj.childNodes[i].className.indexOf(\"jstree-anchor\") !== -1) {\r\n\t\t\t\t\t\t\ttmp = obj.childNodes[i];\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(tmp) {\r\n\t\t\t\t\t\ttmp.className += ' jstree-search';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn obj;\r\n\t\t};\r\n\t};\r\n\r\n\t// helpers\r\n\t(function ($) {\r\n\t\t// from http://kiro.me/projects/fuse.html\r\n\t\t$.vakata.search = function(pattern, txt, options) {\r\n\t\t\toptions = options || {};\r\n\t\t\toptions = $.extend({}, $.vakata.search.defaults, options);\r\n\t\t\tif(options.fuzzy !== false) {\r\n\t\t\t\toptions.fuzzy = true;\r\n\t\t\t}\r\n\t\t\tpattern = options.caseSensitive ? pattern : pattern.toLowerCase();\r\n\t\t\tvar MATCH_LOCATION\t= options.location,\r\n\t\t\t\tMATCH_DISTANCE\t= options.distance,\r\n\t\t\t\tMATCH_THRESHOLD\t= options.threshold,\r\n\t\t\t\tpatternLen = pattern.length,\r\n\t\t\t\tmatchmask, pattern_alphabet, match_bitapScore, search;\r\n\t\t\tif(patternLen > 32) {\r\n\t\t\t\toptions.fuzzy = false;\r\n\t\t\t}\r\n\t\t\tif(options.fuzzy) {\r\n\t\t\t\tmatchmask = 1 << (patternLen - 1);\r\n\t\t\t\tpattern_alphabet = (function () {\r\n\t\t\t\t\tvar mask = {},\r\n\t\t\t\t\t\ti = 0;\r\n\t\t\t\t\tfor (i = 0; i < patternLen; i++) {\r\n\t\t\t\t\t\tmask[pattern.charAt(i)] = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor (i = 0; i < patternLen; i++) {\r\n\t\t\t\t\t\tmask[pattern.charAt(i)] |= 1 << (patternLen - i - 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn mask;\r\n\t\t\t\t}());\r\n\t\t\t\tmatch_bitapScore = function (e, x) {\r\n\t\t\t\t\tvar accuracy = e / patternLen,\r\n\t\t\t\t\t\tproximity = Math.abs(MATCH_LOCATION - x);\r\n\t\t\t\t\tif(!MATCH_DISTANCE) {\r\n\t\t\t\t\t\treturn proximity ? 1.0 : accuracy;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn accuracy + (proximity / MATCH_DISTANCE);\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\tsearch = function (text) {\r\n\t\t\t\ttext = options.caseSensitive ? text : text.toLowerCase();\r\n\t\t\t\tif(pattern === text || text.indexOf(pattern) !== -1) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tisMatch: true,\r\n\t\t\t\t\t\tscore: 0\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\tif(!options.fuzzy) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tisMatch: false,\r\n\t\t\t\t\t\tscore: 1\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\tvar i, j,\r\n\t\t\t\t\ttextLen = text.length,\r\n\t\t\t\t\tscoreThreshold = MATCH_THRESHOLD,\r\n\t\t\t\t\tbestLoc = text.indexOf(pattern, MATCH_LOCATION),\r\n\t\t\t\t\tbinMin, binMid,\r\n\t\t\t\t\tbinMax = patternLen + textLen,\r\n\t\t\t\t\tlastRd, start, finish, rd, charMatch,\r\n\t\t\t\t\tscore = 1,\r\n\t\t\t\t\tlocations = [];\r\n\t\t\t\tif (bestLoc !== -1) {\r\n\t\t\t\t\tscoreThreshold = Math.min(match_bitapScore(0, bestLoc), scoreThreshold);\r\n\t\t\t\t\tbestLoc = text.lastIndexOf(pattern, MATCH_LOCATION + patternLen);\r\n\t\t\t\t\tif (bestLoc !== -1) {\r\n\t\t\t\t\t\tscoreThreshold = Math.min(match_bitapScore(0, bestLoc), scoreThreshold);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbestLoc = -1;\r\n\t\t\t\tfor (i = 0; i < patternLen; i++) {\r\n\t\t\t\t\tbinMin = 0;\r\n\t\t\t\t\tbinMid = binMax;\r\n\t\t\t\t\twhile (binMin < binMid) {\r\n\t\t\t\t\t\tif (match_bitapScore(i, MATCH_LOCATION + binMid) <= scoreThreshold) {\r\n\t\t\t\t\t\t\tbinMin = binMid;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tbinMax = binMid;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbinMid = Math.floor((binMax - binMin) / 2 + binMin);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbinMax = binMid;\r\n\t\t\t\t\tstart = Math.max(1, MATCH_LOCATION - binMid + 1);\r\n\t\t\t\t\tfinish = Math.min(MATCH_LOCATION + binMid, textLen) + patternLen;\r\n\t\t\t\t\trd = new Array(finish + 2);\r\n\t\t\t\t\trd[finish + 1] = (1 << i) - 1;\r\n\t\t\t\t\tfor (j = finish; j >= start; j--) {\r\n\t\t\t\t\t\tcharMatch = pattern_alphabet[text.charAt(j - 1)];\r\n\t\t\t\t\t\tif (i === 0) {\r\n\t\t\t\t\t\t\trd[j] = ((rd[j + 1] << 1) | 1) & charMatch;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\trd[j] = ((rd[j + 1] << 1) | 1) & charMatch | (((lastRd[j + 1] | lastRd[j]) << 1) | 1) | lastRd[j + 1];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (rd[j] & matchmask) {\r\n\t\t\t\t\t\t\tscore = match_bitapScore(i, j - 1);\r\n\t\t\t\t\t\t\tif (score <= scoreThreshold) {\r\n\t\t\t\t\t\t\t\tscoreThreshold = score;\r\n\t\t\t\t\t\t\t\tbestLoc = j - 1;\r\n\t\t\t\t\t\t\t\tlocations.push(bestLoc);\r\n\t\t\t\t\t\t\t\tif (bestLoc > MATCH_LOCATION) {\r\n\t\t\t\t\t\t\t\t\tstart = Math.max(1, 2 * MATCH_LOCATION - bestLoc);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (match_bitapScore(i + 1, MATCH_LOCATION) > scoreThreshold) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlastRd = rd;\r\n\t\t\t\t}\r\n\t\t\t\treturn {\r\n\t\t\t\t\tisMatch: bestLoc >= 0,\r\n\t\t\t\t\tscore: score\r\n\t\t\t\t};\r\n\t\t\t};\r\n\t\t\treturn txt === true ? { 'search' : search } : search(txt);\r\n\t\t};\r\n\t\t$.vakata.search.defaults = {\r\n\t\t\tlocation : 0,\r\n\t\t\tdistance : 100,\r\n\t\t\tthreshold : 0.6,\r\n\t\t\tfuzzy : false,\r\n\t\t\tcaseSensitive : false\r\n\t\t};\r\n\t}($));\r\n\r\n\t// include the search plugin by default\r\n\t// $.jstree.defaults.plugins.push(\"search\");\r\n\r\n\treturn $;\r\n\t\r\n});\r\n"]}