{"version":3,"sources":["addons/checkbox.js"],"names":["define","langx","browser","eventer","noder","geom","$","jstree","plugins","checkbox","_i","document","createElement","className","setAttribute","defaults","visible","three_state","whole_node","keep_selected_style","cascade","tie_selection","cascade_to_disabled","cascade_to_hidden","options","parent","this","bind","call","_data","uto","selected","settings","element","on","proxy","addClass","indexOf","clearTimeout","setTimeout","_undetermined","e","data","i","j","m","_model","dpc","nodes","length","state","checked","original","push","c","k","l","tmp","p","chd","s","t","concat","children_d","children","vakata","array_unique","id","root","get_node","attr","obj","node","par","sel","cur","selectedIds","_cascade_new_checked_state","temp","hasOwnProperty","undetermined","allIds","filter","parents","removeClass","is_multi","old_par","old_parent","new_par","array_remove_item","get_undetermined","full","o","tt","r","undefined","find","not","each","tmp2","loaded","redraw_node","deep","is_callback","force_render","apply","arguments","icon","childNodes","cloneNode","checkbox_disabled","insertBefore","show_checkboxes","core","themes","checkboxes","get_container_ul","hide_checkboxes","toggle_checkboxes","is_undetermined","d","inArray","disable_checkbox","t1","t2","dom","isArray","slice","trigger","enable_checkbox","activate_node","target","hasClass","ctrlKey","is_disabled","is_checked","uncheck_node","check_node","checkedState","selectedChildIds","selectedNodeIds","selectedChildrenIds","disabled","hidden","get_checked_descendants","childId","self","_id","select_node","event","deselect_node","check_all","select_all","redraw","uncheck_all","deselect_all","is_selected","get_checked","get_selected","map","get_top_checked","get_top_selected","get_bottom_checked","get_bottom_selected","load_node","callback","get_state","set_state","res","_this","v","refresh","skip_loading","forget_state"],"mappings":"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","file":"../../addons/checkbox.js","sourcesContent":["define([\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"../Hierarchy\"\r\n],function(langx,browser,eventer,noder,geom,$,jstree){\r\n\t\"use strict\";\r\n\r\n\tif($.jstree.plugins.checkbox) { return; }\r\n\r\n\tvar _i = document.createElement('I');\r\n\t_i.className = 'jstree-icon jstree-checkbox';\r\n\t_i.setAttribute('role', 'presentation');\r\n\t/**\r\n\t * stores all defaults for the checkbox plugin\r\n\t * @name $.jstree.defaults.checkbox\r\n\t * @plugin checkbox\r\n\t */\r\n\t$.jstree.defaults.checkbox = {\r\n\t\t/**\r\n\t\t * a boolean indicating if checkboxes should be visible (can be changed at a later time using `show_checkboxes()` and `hide_checkboxes`). Defaults to `true`.\r\n\t\t * @name $.jstree.defaults.checkbox.visible\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tvisible\t\t\t\t: true,\r\n\t\t/**\r\n\t\t * a boolean indicating if checkboxes should cascade down and have an undetermined state. Defaults to `true`.\r\n\t\t * @name $.jstree.defaults.checkbox.three_state\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthree_state\t\t\t: true,\r\n\t\t/**\r\n\t\t * a boolean indicating if clicking anywhere on the node should act as clicking on the checkbox. Defaults to `true`.\r\n\t\t * @name $.jstree.defaults.checkbox.whole_node\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\twhole_node\t\t\t: true,\r\n\t\t/**\r\n\t\t * a boolean indicating if the selected style of a node should be kept, or removed. Defaults to `true`.\r\n\t\t * @name $.jstree.defaults.checkbox.keep_selected_style\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tkeep_selected_style\t: true,\r\n\t\t/**\r\n\t\t * This setting controls how cascading and undetermined nodes are applied.\r\n\t\t * If 'up' is in the string - cascading up is enabled, if 'down' is in the string - cascading down is enabled, if 'undetermined' is in the string - undetermined nodes will be used.\r\n\t\t * If `three_state` is set to `true` this setting is automatically set to 'up+down+undetermined'. Defaults to ''.\r\n\t\t * @name $.jstree.defaults.checkbox.cascade\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tcascade\t\t\t\t: '',\r\n\t\t/**\r\n\t\t * This setting controls if checkbox are bound to the general tree selection or to an internal array maintained by the checkbox plugin. Defaults to `true`, only set to `false` if you know exactly what you are doing.\r\n\t\t * @name $.jstree.defaults.checkbox.tie_selection\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\ttie_selection\t\t: true,\r\n\r\n\t\t/**\r\n\t\t * This setting controls if cascading down affects disabled checkboxes\r\n\t\t * @name $.jstree.defaults.checkbox.cascade_to_disabled\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tcascade_to_disabled : true,\r\n\r\n\t\t/**\r\n\t\t * This setting controls if cascading down affects hidden checkboxes\r\n\t\t * @name $.jstree.defaults.checkbox.cascade_to_hidden\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tcascade_to_hidden : true\r\n\t};\r\n\t$.jstree.plugins.checkbox = function (options, parent) {\r\n\t\tthis.bind = function () {\r\n\t\t\tparent.bind.call(this);\r\n\t\t\tthis._data.checkbox.uto = false;\r\n\t\t\tthis._data.checkbox.selected = [];\r\n\t\t\tif(this.settings.checkbox.three_state) {\r\n\t\t\t\tthis.settings.checkbox.cascade = 'up+down+undetermined';\r\n\t\t\t}\r\n\t\t\tthis.element\r\n\t\t\t\t.on(\"init.jstree\", $.proxy(function () {\r\n\t\t\t\t\t\tthis._data.checkbox.visible = this.settings.checkbox.visible;\r\n\t\t\t\t\t\tif(!this.settings.checkbox.keep_selected_style) {\r\n\t\t\t\t\t\t\tthis.element.addClass('jstree-checkbox-no-clicked');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(this.settings.checkbox.tie_selection) {\r\n\t\t\t\t\t\t\tthis.element.addClass('jstree-checkbox-selection');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"loading.jstree\", $.proxy(function () {\r\n\t\t\t\t\t\tthis[ this._data.checkbox.visible ? 'show_checkboxes' : 'hide_checkboxes' ]();\r\n\t\t\t\t\t}, this));\r\n\t\t\tif(this.settings.checkbox.cascade.indexOf('undetermined') !== -1) {\r\n\t\t\t\tthis.element\r\n\t\t\t\t\t.on('changed.jstree uncheck_node.jstree check_node.jstree uncheck_all.jstree check_all.jstree move_node.jstree copy_node.jstree redraw.jstree open_node.jstree', $.proxy(function () {\r\n\t\t\t\t\t\t\t// only if undetermined is in setting\r\n\t\t\t\t\t\t\tif(this._data.checkbox.uto) { clearTimeout(this._data.checkbox.uto); }\r\n\t\t\t\t\t\t\tthis._data.checkbox.uto = setTimeout($.proxy(this._undetermined, this), 50);\r\n\t\t\t\t\t\t}, this));\r\n\t\t\t}\r\n\t\t\tif(!this.settings.checkbox.tie_selection) {\r\n\t\t\t\tthis.element\r\n\t\t\t\t\t.on('model.jstree', $.proxy(function (e, data) {\r\n\t\t\t\t\t\tvar m = this._model.data,\r\n\t\t\t\t\t\t\tp = m[data.parent],\r\n\t\t\t\t\t\t\tdpc = data.nodes,\r\n\t\t\t\t\t\t\ti, j;\r\n\t\t\t\t\t\tfor(i = 0, j = dpc.length; i < j; i++) {\r\n\t\t\t\t\t\t\tm[dpc[i]].state.checked = m[dpc[i]].state.checked || (m[dpc[i]].original && m[dpc[i]].original.state && m[dpc[i]].original.state.checked);\r\n\t\t\t\t\t\t\tif(m[dpc[i]].state.checked) {\r\n\t\t\t\t\t\t\t\tthis._data.checkbox.selected.push(dpc[i]);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this));\r\n\t\t\t}\r\n\t\t\tif(this.settings.checkbox.cascade.indexOf('up') !== -1 || this.settings.checkbox.cascade.indexOf('down') !== -1) {\r\n\t\t\t\tthis.element\r\n\t\t\t\t\t.on('model.jstree', $.proxy(function (e, data) {\r\n\t\t\t\t\t\t\tvar m = this._model.data,\r\n\t\t\t\t\t\t\t\tp = m[data.parent],\r\n\t\t\t\t\t\t\t\tdpc = data.nodes,\r\n\t\t\t\t\t\t\t\tchd = [],\r\n\t\t\t\t\t\t\t\tc, i, j, k, l, tmp, s = this.settings.checkbox.cascade, t = this.settings.checkbox.tie_selection;\r\n\r\n\t\t\t\t\t\t\tif(s.indexOf('down') !== -1) {\r\n\t\t\t\t\t\t\t\t// apply down\r\n\t\t\t\t\t\t\t\tif(p.state[ t ? 'selected' : 'checked' ]) {\r\n\t\t\t\t\t\t\t\t\tfor(i = 0, j = dpc.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\t\tm[dpc[i]].state[ t ? 'selected' : 'checked' ] = true;\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected = this._data[ t ? 'core' : 'checkbox' ].selected.concat(dpc);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tfor(i = 0, j = dpc.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\t\tif(m[dpc[i]].state[ t ? 'selected' : 'checked' ]) {\r\n\t\t\t\t\t\t\t\t\t\t\tfor(k = 0, l = m[dpc[i]].children_d.length; k < l; k++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tm[m[dpc[i]].children_d[k]].state[ t ? 'selected' : 'checked' ] = true;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected = this._data[ t ? 'core' : 'checkbox' ].selected.concat(m[dpc[i]].children_d);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif(s.indexOf('up') !== -1) {\r\n\t\t\t\t\t\t\t\t// apply up\r\n\t\t\t\t\t\t\t\tfor(i = 0, j = p.children_d.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\tif(!m[p.children_d[i]].children.length) {\r\n\t\t\t\t\t\t\t\t\t\tchd.push(m[p.children_d[i]].parent);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tchd = $.vakata.array_unique(chd);\r\n\t\t\t\t\t\t\t\tfor(k = 0, l = chd.length; k < l; k++) {\r\n\t\t\t\t\t\t\t\t\tp = m[chd[k]];\r\n\t\t\t\t\t\t\t\t\twhile(p && p.id !== $.jstree.root) {\r\n\t\t\t\t\t\t\t\t\t\tc = 0;\r\n\t\t\t\t\t\t\t\t\t\tfor(i = 0, j = p.children.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\t\t\tc += m[p.children[i]].state[ t ? 'selected' : 'checked' ];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tif(c === j) {\r\n\t\t\t\t\t\t\t\t\t\t\tp.state[ t ? 'selected' : 'checked' ] = true;\r\n\t\t\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected.push(p.id);\r\n\t\t\t\t\t\t\t\t\t\t\ttmp = this.get_node(p, true);\r\n\t\t\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\r\n\t\t\t\t\t\t\t\t\t\t\t\ttmp.attr('aria-selected', true).children('.jstree-anchor').addClass( t ? 'jstree-clicked' : 'jstree-checked');\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tp = this.get_node(p.parent);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected = $.vakata.array_unique(this._data[ t ? 'core' : 'checkbox' ].selected);\r\n\t\t\t\t\t\t}, this))\r\n\t\t\t\t\t.on(this.settings.checkbox.tie_selection ? 'select_node.jstree' : 'check_node.jstree', $.proxy(function (e, data) {\r\n\t\t\t\t\t\t\tvar self = this,\r\n\t\t\t\t\t\t\t\tobj = data.node,\r\n\t\t\t\t\t\t\t\tm = this._model.data,\r\n\t\t\t\t\t\t\t\tpar = this.get_node(obj.parent),\r\n\t\t\t\t\t\t\t\ti, j, c, tmp, s = this.settings.checkbox.cascade, t = this.settings.checkbox.tie_selection,\r\n\t\t\t\t\t\t\t\tsel = {}, cur = this._data[ t ? 'core' : 'checkbox' ].selected;\r\n\r\n\t\t\t\t\t\t\tfor (i = 0, j = cur.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\tsel[cur[i]] = true;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// apply down\r\n\t\t\t\t\t\t\tif(s.indexOf('down') !== -1) {\r\n\t\t\t\t\t\t\t\t//this._data[ t ? 'core' : 'checkbox' ].selected = $.vakata.array_unique(this._data[ t ? 'core' : 'checkbox' ].selected.concat(obj.children_d));\r\n\t\t\t\t\t\t\t\tvar selectedIds = this._cascade_new_checked_state(obj.id, true);\r\n\t\t\t\t\t\t\t\tvar temp = obj.children_d.concat(obj.id);\r\n\t\t\t\t\t\t\t\tfor (i = 0, j = temp.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\tif (selectedIds.indexOf(temp[i]) > -1) {\r\n\t\t\t\t\t\t\t\t\t\tsel[temp[i]] = true;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tdelete sel[temp[i]];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// apply up\r\n\t\t\t\t\t\t\tif(s.indexOf('up') !== -1) {\r\n\t\t\t\t\t\t\t\twhile(par && par.id !== $.jstree.root) {\r\n\t\t\t\t\t\t\t\t\tc = 0;\r\n\t\t\t\t\t\t\t\t\tfor(i = 0, j = par.children.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\t\tc += m[par.children[i]].state[ t ? 'selected' : 'checked' ];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tif(c === j) {\r\n\t\t\t\t\t\t\t\t\t\tpar.state[ t ? 'selected' : 'checked' ] = true;\r\n\t\t\t\t\t\t\t\t\t\tsel[par.id] = true;\r\n\t\t\t\t\t\t\t\t\t\t//this._data[ t ? 'core' : 'checkbox' ].selected.push(par.id);\r\n\t\t\t\t\t\t\t\t\t\ttmp = this.get_node(par, true);\r\n\t\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\r\n\t\t\t\t\t\t\t\t\t\t\ttmp.attr('aria-selected', true).children('.jstree-anchor').addClass(t ? 'jstree-clicked' : 'jstree-checked');\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tpar = this.get_node(par.parent);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tcur = [];\r\n\t\t\t\t\t\t\tfor (i in sel) {\r\n\t\t\t\t\t\t\t\tif (sel.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\t\tcur.push(i);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected = cur;\r\n\t\t\t\t\t\t}, this))\r\n\t\t\t\t\t.on(this.settings.checkbox.tie_selection ? 'deselect_all.jstree' : 'uncheck_all.jstree', $.proxy(function (e, data) {\r\n\t\t\t\t\t\t\tvar obj = this.get_node($.jstree.root),\r\n\t\t\t\t\t\t\t\tm = this._model.data,\r\n\t\t\t\t\t\t\t\ti, j, tmp;\r\n\t\t\t\t\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\ttmp = m[obj.children_d[i]];\r\n\t\t\t\t\t\t\t\tif(tmp && tmp.original && tmp.original.state && tmp.original.state.undetermined) {\r\n\t\t\t\t\t\t\t\t\ttmp.original.state.undetermined = false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, this))\r\n\t\t\t\t\t.on(this.settings.checkbox.tie_selection ? 'deselect_node.jstree' : 'uncheck_node.jstree', $.proxy(function (e, data) {\r\n\t\t\t\t\t\t\tvar self = this,\r\n\t\t\t\t\t\t\t\tobj = data.node,\r\n\t\t\t\t\t\t\t\tdom = this.get_node(obj, true),\r\n\t\t\t\t\t\t\t\ti, j, tmp, s = this.settings.checkbox.cascade, t = this.settings.checkbox.tie_selection,\r\n\t\t\t\t\t\t\t\tcur = this._data[ t ? 'core' : 'checkbox' ].selected, sel = {},\r\n\t\t\t\t\t\t\t\tstillSelectedIds = [],\r\n\t\t\t\t\t\t\t\tallIds = obj.children_d.concat(obj.id);\r\n\r\n\t\t\t\t\t\t\t// apply down\r\n\t\t\t\t\t\t\tif(s.indexOf('down') !== -1) {\r\n\t\t\t\t\t\t\t\tvar selectedIds = this._cascade_new_checked_state(obj.id, false);\r\n\r\n\t\t\t\t\t\t\t\tcur = cur.filter(function(id) {\r\n\t\t\t\t\t\t\t\t\treturn allIds.indexOf(id) === -1 || selectedIds.indexOf(id) > -1;\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// only apply up if cascade up is enabled and if this node is not selected\r\n\t\t\t\t\t\t\t// (if all child nodes are disabled and cascade_to_disabled === false then this node will till be selected).\r\n\t\t\t\t\t\t\tif(s.indexOf('up') !== -1 && cur.indexOf(obj.id) === -1) {\r\n\t\t\t\t\t\t\t\tfor(i = 0, j = obj.parents.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\ttmp = this._model.data[obj.parents[i]];\r\n\t\t\t\t\t\t\t\t\ttmp.state[ t ? 'selected' : 'checked' ] = false;\r\n\t\t\t\t\t\t\t\t\tif(tmp && tmp.original && tmp.original.state && tmp.original.state.undetermined) {\r\n\t\t\t\t\t\t\t\t\t\ttmp.original.state.undetermined = false;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\ttmp = this.get_node(obj.parents[i], true);\r\n\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\r\n\t\t\t\t\t\t\t\t\t\ttmp.attr('aria-selected', false).children('.jstree-anchor').removeClass(t ? 'jstree-clicked' : 'jstree-checked');\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tcur = cur.filter(function(id) {\r\n\t\t\t\t\t\t\t\t\treturn obj.parents.indexOf(id) === -1;\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected = cur;\r\n\t\t\t\t\t\t}, this));\r\n\t\t\t}\r\n\t\t\tif(this.settings.checkbox.cascade.indexOf('up') !== -1) {\r\n\t\t\t\tthis.element\r\n\t\t\t\t\t.on('delete_node.jstree', $.proxy(function (e, data) {\r\n\t\t\t\t\t\t\t// apply up (whole handler)\r\n\t\t\t\t\t\t\tvar p = this.get_node(data.parent),\r\n\t\t\t\t\t\t\t\tm = this._model.data,\r\n\t\t\t\t\t\t\t\ti, j, c, tmp, t = this.settings.checkbox.tie_selection;\r\n\t\t\t\t\t\t\twhile(p && p.id !== $.jstree.root && !p.state[ t ? 'selected' : 'checked' ]) {\r\n\t\t\t\t\t\t\t\tc = 0;\r\n\t\t\t\t\t\t\t\tfor(i = 0, j = p.children.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\tc += m[p.children[i]].state[ t ? 'selected' : 'checked' ];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif(j > 0 && c === j) {\r\n\t\t\t\t\t\t\t\t\tp.state[ t ? 'selected' : 'checked' ] = true;\r\n\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected.push(p.id);\r\n\t\t\t\t\t\t\t\t\ttmp = this.get_node(p, true);\r\n\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\r\n\t\t\t\t\t\t\t\t\t\ttmp.attr('aria-selected', true).children('.jstree-anchor').addClass(t ? 'jstree-clicked' : 'jstree-checked');\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tp = this.get_node(p.parent);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, this))\r\n\t\t\t\t\t.on('move_node.jstree', $.proxy(function (e, data) {\r\n\t\t\t\t\t\t\t// apply up (whole handler)\r\n\t\t\t\t\t\t\tvar is_multi = data.is_multi,\r\n\t\t\t\t\t\t\t\told_par = data.old_parent,\r\n\t\t\t\t\t\t\t\tnew_par = this.get_node(data.parent),\r\n\t\t\t\t\t\t\t\tm = this._model.data,\r\n\t\t\t\t\t\t\t\tp, c, i, j, tmp, t = this.settings.checkbox.tie_selection;\r\n\t\t\t\t\t\t\tif(!is_multi) {\r\n\t\t\t\t\t\t\t\tp = this.get_node(old_par);\r\n\t\t\t\t\t\t\t\twhile(p && p.id !== $.jstree.root && !p.state[ t ? 'selected' : 'checked' ]) {\r\n\t\t\t\t\t\t\t\t\tc = 0;\r\n\t\t\t\t\t\t\t\t\tfor(i = 0, j = p.children.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\t\tc += m[p.children[i]].state[ t ? 'selected' : 'checked' ];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tif(j > 0 && c === j) {\r\n\t\t\t\t\t\t\t\t\t\tp.state[ t ? 'selected' : 'checked' ] = true;\r\n\t\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected.push(p.id);\r\n\t\t\t\t\t\t\t\t\t\ttmp = this.get_node(p, true);\r\n\t\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\r\n\t\t\t\t\t\t\t\t\t\t\ttmp.attr('aria-selected', true).children('.jstree-anchor').addClass(t ? 'jstree-clicked' : 'jstree-checked');\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tp = this.get_node(p.parent);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tp = new_par;\r\n\t\t\t\t\t\t\twhile(p && p.id !== $.jstree.root) {\r\n\t\t\t\t\t\t\t\tc = 0;\r\n\t\t\t\t\t\t\t\tfor(i = 0, j = p.children.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\tc += m[p.children[i]].state[ t ? 'selected' : 'checked' ];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif(c === j) {\r\n\t\t\t\t\t\t\t\t\tif(!p.state[ t ? 'selected' : 'checked' ]) {\r\n\t\t\t\t\t\t\t\t\t\tp.state[ t ? 'selected' : 'checked' ] = true;\r\n\t\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected.push(p.id);\r\n\t\t\t\t\t\t\t\t\t\ttmp = this.get_node(p, true);\r\n\t\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\r\n\t\t\t\t\t\t\t\t\t\t\ttmp.attr('aria-selected', true).children('.jstree-anchor').addClass(t ? 'jstree-clicked' : 'jstree-checked');\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tif(p.state[ t ? 'selected' : 'checked' ]) {\r\n\t\t\t\t\t\t\t\t\t\tp.state[ t ? 'selected' : 'checked' ] = false;\r\n\t\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected = $.vakata.array_remove_item(this._data[ t ? 'core' : 'checkbox' ].selected, p.id);\r\n\t\t\t\t\t\t\t\t\t\ttmp = this.get_node(p, true);\r\n\t\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\r\n\t\t\t\t\t\t\t\t\t\t\ttmp.attr('aria-selected', false).children('.jstree-anchor').removeClass(t ? 'jstree-clicked' : 'jstree-checked');\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tp = this.get_node(p.parent);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, this));\r\n\t\t\t}\r\n\t\t};\r\n\t\t/**\r\n\t\t * get an array of all nodes whose state is \"undetermined\"\r\n\t\t * @name get_undetermined([full])\r\n\t\t * @param  {boolean} full: if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\r\n\t\t * @return {Array}\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.get_undetermined = function (full) {\r\n\t\t\tif (this.settings.checkbox.cascade.indexOf('undetermined') === -1) {\r\n\t\t\t\treturn [];\r\n\t\t\t}\r\n\t\t\tvar i, j, k, l, o = {}, m = this._model.data, t = this.settings.checkbox.tie_selection, s = this._data[ t ? 'core' : 'checkbox' ].selected, p = [], tt = this, r = [];\r\n\t\t\tfor(i = 0, j = s.length; i < j; i++) {\r\n\t\t\t\tif(m[s[i]] && m[s[i]].parents) {\r\n\t\t\t\t\tfor(k = 0, l = m[s[i]].parents.length; k < l; k++) {\r\n\t\t\t\t\t\tif(o[m[s[i]].parents[k]] !== undefined) {\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(m[s[i]].parents[k] !== $.jstree.root) {\r\n\t\t\t\t\t\t\to[m[s[i]].parents[k]] = true;\r\n\t\t\t\t\t\t\tp.push(m[s[i]].parents[k]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// attempt for server side undetermined state\r\n\t\t\tthis.element.find('.jstree-closed').not(':has(.jstree-children)')\r\n\t\t\t\t.each(function () {\r\n\t\t\t\t\tvar tmp = tt.get_node(this), tmp2;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(!tmp) { return; }\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(!tmp.state.loaded) {\r\n\t\t\t\t\t\tif(tmp.original && tmp.original.state && tmp.original.state.undetermined && tmp.original.state.undetermined === true) {\r\n\t\t\t\t\t\t\tif(o[tmp.id] === undefined && tmp.id !== $.jstree.root) {\r\n\t\t\t\t\t\t\t\to[tmp.id] = true;\r\n\t\t\t\t\t\t\t\tp.push(tmp.id);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tfor(k = 0, l = tmp.parents.length; k < l; k++) {\r\n\t\t\t\t\t\t\t\tif(o[tmp.parents[k]] === undefined && tmp.parents[k] !== $.jstree.root) {\r\n\t\t\t\t\t\t\t\t\to[tmp.parents[k]] = true;\r\n\t\t\t\t\t\t\t\t\tp.push(tmp.parents[k]);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tfor(i = 0, j = tmp.children_d.length; i < j; i++) {\r\n\t\t\t\t\t\t\ttmp2 = m[tmp.children_d[i]];\r\n\t\t\t\t\t\t\tif(!tmp2.state.loaded && tmp2.original && tmp2.original.state && tmp2.original.state.undetermined && tmp2.original.state.undetermined === true) {\r\n\t\t\t\t\t\t\t\tif(o[tmp2.id] === undefined && tmp2.id !== $.jstree.root) {\r\n\t\t\t\t\t\t\t\t\to[tmp2.id] = true;\r\n\t\t\t\t\t\t\t\t\tp.push(tmp2.id);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tfor(k = 0, l = tmp2.parents.length; k < l; k++) {\r\n\t\t\t\t\t\t\t\t\tif(o[tmp2.parents[k]] === undefined && tmp2.parents[k] !== $.jstree.root) {\r\n\t\t\t\t\t\t\t\t\t\to[tmp2.parents[k]] = true;\r\n\t\t\t\t\t\t\t\t\t\tp.push(tmp2.parents[k]);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\tfor (i = 0, j = p.length; i < j; i++) {\r\n\t\t\t\tif(!m[p[i]].state[ t ? 'selected' : 'checked' ]) {\r\n\t\t\t\t\tr.push(full ? m[p[i]] : p[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn r;\r\n\t\t};\r\n\t\t/**\r\n\t\t * set the undetermined state where and if necessary. Used internally.\r\n\t\t * @private\r\n\t\t * @name _undetermined()\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis._undetermined = function () {\r\n\t\t\tif(this.element === null) { return; }\r\n\t\t\tvar p = this.get_undetermined(false), i, j, s;\r\n\r\n\t\t\tthis.element.find('.jstree-undetermined').removeClass('jstree-undetermined');\r\n\t\t\tfor (i = 0, j = p.length; i < j; i++) {\r\n\t\t\t\ts = this.get_node(p[i], true);\r\n\t\t\t\tif(s && s.length) {\r\n\t\t\t\t\ts.children('.jstree-anchor').children('.jstree-checkbox').addClass('jstree-undetermined');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tthis.redraw_node = function(obj, deep, is_callback, force_render) {\r\n\t\t\tobj = parent.redraw_node.apply(this, arguments);\r\n\t\t\tif(obj) {\r\n\t\t\t\tvar i, j, tmp = null, icon = null;\r\n\t\t\t\tfor(i = 0, j = obj.childNodes.length; i < j; i++) {\r\n\t\t\t\t\tif(obj.childNodes[i] && obj.childNodes[i].className && obj.childNodes[i].className.indexOf(\"jstree-anchor\") !== -1) {\r\n\t\t\t\t\t\ttmp = obj.childNodes[i];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(tmp) {\r\n\t\t\t\t\tif(!this.settings.checkbox.tie_selection && this._model.data[obj.id].state.checked) { tmp.className += ' jstree-checked'; }\r\n\t\t\t\t\ticon = _i.cloneNode(false);\r\n\t\t\t\t\tif(this._model.data[obj.id].state.checkbox_disabled) { icon.className += ' jstree-checkbox-disabled'; }\r\n\t\t\t\t\ttmp.insertBefore(icon, tmp.childNodes[0]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(!is_callback && this.settings.checkbox.cascade.indexOf('undetermined') !== -1) {\r\n\t\t\t\tif(this._data.checkbox.uto) { clearTimeout(this._data.checkbox.uto); }\r\n\t\t\t\tthis._data.checkbox.uto = setTimeout($.proxy(this._undetermined, this), 50);\r\n\t\t\t}\r\n\t\t\treturn obj;\r\n\t\t};\r\n\t\t/**\r\n\t\t * show the node checkbox icons\r\n\t\t * @name show_checkboxes()\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.show_checkboxes = function () { this._data.core.themes.checkboxes = true; this.get_container_ul().removeClass(\"jstree-no-checkboxes\"); };\r\n\t\t/**\r\n\t\t * hide the node checkbox icons\r\n\t\t * @name hide_checkboxes()\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.hide_checkboxes = function () { this._data.core.themes.checkboxes = false; this.get_container_ul().addClass(\"jstree-no-checkboxes\"); };\r\n\t\t/**\r\n\t\t * toggle the node icons\r\n\t\t * @name toggle_checkboxes()\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.toggle_checkboxes = function () { if(this._data.core.themes.checkboxes) { this.hide_checkboxes(); } else { this.show_checkboxes(); } };\r\n\t\t/**\r\n\t\t * checks if a node is in an undetermined state\r\n\t\t * @name is_undetermined(obj)\r\n\t\t * @param  {mixed} obj\r\n\t\t * @return {Boolean}\r\n\t\t */\r\n\t\tthis.is_undetermined = function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tvar s = this.settings.checkbox.cascade, i, j, t = this.settings.checkbox.tie_selection, d = this._data[ t ? 'core' : 'checkbox' ].selected, m = this._model.data;\r\n\t\t\tif(!obj || obj.state[ t ? 'selected' : 'checked' ] === true || s.indexOf('undetermined') === -1 || (s.indexOf('down') === -1 && s.indexOf('up') === -1)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(!obj.state.loaded && obj.original.state.undetermined === true) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\r\n\t\t\t\tif($.inArray(obj.children_d[i], d) !== -1 || (!m[obj.children_d[i]].state.loaded && m[obj.children_d[i]].original.state.undetermined)) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\t\t/**\r\n\t\t * disable a node's checkbox\r\n\t\t * @name disable_checkbox(obj)\r\n\t\t * @param {mixed} obj an array can be used too\r\n\t\t * @trigger disable_checkbox.jstree\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.disable_checkbox = function (obj) {\r\n\t\t\tvar t1, t2, dom;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.disable_checkbox(obj[t1]);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tdom = this.get_node(obj, true);\r\n\t\t\tif(!obj.state.checkbox_disabled) {\r\n\t\t\t\tobj.state.checkbox_disabled = true;\r\n\t\t\t\tif(dom && dom.length) {\r\n\t\t\t\t\tdom.children('.jstree-anchor').children('.jstree-checkbox').addClass('jstree-checkbox-disabled');\r\n\t\t\t\t}\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when an node's checkbox is disabled\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name disable_checkbox.jstree\r\n\t\t\t\t * @param {Object} node\r\n\t\t\t\t * @plugin checkbox\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('disable_checkbox', { 'node' : obj });\r\n\t\t\t}\r\n\t\t};\r\n\t\t/**\r\n\t\t * enable a node's checkbox\r\n\t\t * @name disable_checkbox(obj)\r\n\t\t * @param {mixed} obj an array can be used too\r\n\t\t * @trigger enable_checkbox.jstree\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.enable_checkbox = function (obj) {\r\n\t\t\tvar t1, t2, dom;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.enable_checkbox(obj[t1]);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tdom = this.get_node(obj, true);\r\n\t\t\tif(obj.state.checkbox_disabled) {\r\n\t\t\t\tobj.state.checkbox_disabled = false;\r\n\t\t\t\tif(dom && dom.length) {\r\n\t\t\t\t\tdom.children('.jstree-anchor').children('.jstree-checkbox').removeClass('jstree-checkbox-disabled');\r\n\t\t\t\t}\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when an node's checkbox is enabled\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name enable_checkbox.jstree\r\n\t\t\t\t * @param {Object} node\r\n\t\t\t\t * @plugin checkbox\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('enable_checkbox', { 'node' : obj });\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.activate_node = function (obj, e) {\r\n\t\t\tif($(e.target).hasClass('jstree-checkbox-disabled')) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(this.settings.checkbox.tie_selection && (this.settings.checkbox.whole_node || $(e.target).hasClass('jstree-checkbox'))) {\r\n\t\t\t\te.ctrlKey = true;\r\n\t\t\t}\r\n\t\t\tif(this.settings.checkbox.tie_selection || (!this.settings.checkbox.whole_node && !$(e.target).hasClass('jstree-checkbox'))) {\r\n\t\t\t\treturn parent.activate_node.call(this, obj, e);\r\n\t\t\t}\r\n\t\t\tif(this.is_disabled(obj)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(this.is_checked(obj)) {\r\n\t\t\t\tthis.uncheck_node(obj, e);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.check_node(obj, e);\r\n\t\t\t}\r\n\t\t\tthis.trigger('activate_node', { 'node' : this.get_node(obj) });\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Cascades checked state to a node and all its descendants. This function does NOT affect hidden and disabled nodes (or their descendants).\r\n\t\t * However if these unaffected nodes are already selected their ids will be included in the returned array.\r\n\t\t * @private\r\n\t\t * @param {string} id the node ID\r\n\t\t * @param {bool} checkedState should the nodes be checked or not\r\n\t\t * @returns {Array} Array of all node id's (in this tree branch) that are checked.\r\n\t\t */\r\n\t\tthis._cascade_new_checked_state = function (id, checkedState) {\r\n\t\t\tvar self = this;\r\n\t\t\tvar t = this.settings.checkbox.tie_selection;\r\n\t\t\tvar node = this._model.data[id];\r\n\t\t\tvar selectedNodeIds = [];\r\n\t\t\tvar selectedChildrenIds = [], i, j, selectedChildIds;\r\n\r\n\t\t\tif (\r\n\t\t\t\t(this.settings.checkbox.cascade_to_disabled || !node.state.disabled) &&\r\n\t\t\t\t(this.settings.checkbox.cascade_to_hidden || !node.state.hidden)\r\n\t\t\t) {\r\n\t\t\t\t//First try and check/uncheck the children\r\n\t\t\t\tif (node.children) {\r\n\t\t\t\t\tfor (i = 0, j = node.children.length; i < j; i++) {\r\n\t\t\t\t\t\tvar childId = node.children[i];\r\n\t\t\t\t\t\tselectedChildIds = self._cascade_new_checked_state(childId, checkedState);\r\n\t\t\t\t\t\tselectedNodeIds = selectedNodeIds.concat(selectedChildIds);\r\n\t\t\t\t\t\tif (selectedChildIds.indexOf(childId) > -1) {\r\n\t\t\t\t\t\t\tselectedChildrenIds.push(childId);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar dom = self.get_node(node, true);\r\n\r\n\t\t\t\t//A node's state is undetermined if some but not all of it's children are checked/selected .\r\n\t\t\t\tvar undetermined = selectedChildrenIds.length > 0 && selectedChildrenIds.length < node.children.length;\r\n\r\n\t\t\t\tif(node.original && node.original.state && node.original.state.undetermined) {\r\n\t\t\t\t\tnode.original.state.undetermined = undetermined;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//If a node is undetermined then remove selected class\r\n\t\t\t\tif (undetermined) {\r\n\t\t\t\t\tnode.state[ t ? 'selected' : 'checked' ] = false;\r\n\t\t\t\t\tdom.attr('aria-selected', false).children('.jstree-anchor').removeClass(t ? 'jstree-clicked' : 'jstree-checked');\r\n\t\t\t\t}\r\n\t\t\t\t//Otherwise, if the checkedState === true (i.e. the node is being checked now) and all of the node's children are checked (if it has any children),\r\n\t\t\t\t//check the node and style it correctly.\r\n\t\t\t\telse if (checkedState && selectedChildrenIds.length === node.children.length) {\r\n\t\t\t\t\tnode.state[ t ? 'selected' : 'checked' ] = checkedState;\r\n\t\t\t\t\tselectedNodeIds.push(node.id);\r\n\r\n\t\t\t\t\tdom.attr('aria-selected', true).children('.jstree-anchor').addClass(t ? 'jstree-clicked' : 'jstree-checked');\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tnode.state[ t ? 'selected' : 'checked' ] = false;\r\n\t\t\t\t\tdom.attr('aria-selected', false).children('.jstree-anchor').removeClass(t ? 'jstree-clicked' : 'jstree-checked');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tselectedChildIds = this.get_checked_descendants(id);\r\n\r\n\t\t\t\tif (node.state[ t ? 'selected' : 'checked' ]) {\r\n\t\t\t\t\tselectedChildIds.push(node.id);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tselectedNodeIds = selectedNodeIds.concat(selectedChildIds);\r\n\t\t\t}\r\n\r\n\t\t\treturn selectedNodeIds;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Gets ids of nodes selected in branch (of tree) specified by id (does not include the node specified by id)\r\n\t\t * @name get_checked_descendants(obj)\r\n\t\t * @param {string} id the node ID\r\n\t\t * @return {Array} array of IDs\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.get_checked_descendants = function (id) {\r\n\t\t\tvar self = this;\r\n\t\t\tvar t = self.settings.checkbox.tie_selection;\r\n\t\t\tvar node = self._model.data[id];\r\n\r\n\t\t\treturn node.children_d.filter(function(_id) {\r\n\t\t\t\treturn self._model.data[_id].state[ t ? 'selected' : 'checked' ];\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * check a node (only if tie_selection in checkbox settings is false, otherwise select_node will be called internally)\r\n\t\t * @name check_node(obj)\r\n\t\t * @param {mixed} obj an array can be used to check multiple nodes\r\n\t\t * @trigger check_node.jstree\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.check_node = function (obj, e) {\r\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.select_node(obj, false, true, e); }\r\n\t\t\tvar dom, t1, t2, th;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.check_node(obj[t1], e);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tdom = this.get_node(obj, true);\r\n\t\t\tif(!obj.state.checked) {\r\n\t\t\t\tobj.state.checked = true;\r\n\t\t\t\tthis._data.checkbox.selected.push(obj.id);\r\n\t\t\t\tif(dom && dom.length) {\r\n\t\t\t\t\tdom.children('.jstree-anchor').addClass('jstree-checked');\r\n\t\t\t\t}\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when an node is checked (only if tie_selection in checkbox settings is false)\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name check_node.jstree\r\n\t\t\t\t * @param {Object} node\r\n\t\t\t\t * @param {Array} selected the current selection\r\n\t\t\t\t * @param {Object} event the event (if any) that triggered this check_node\r\n\t\t\t\t * @plugin checkbox\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('check_node', { 'node' : obj, 'selected' : this._data.checkbox.selected, 'event' : e });\r\n\t\t\t}\r\n\t\t};\r\n\t\t/**\r\n\t\t * uncheck a node (only if tie_selection in checkbox settings is false, otherwise deselect_node will be called internally)\r\n\t\t * @name uncheck_node(obj)\r\n\t\t * @param {mixed} obj an array can be used to uncheck multiple nodes\r\n\t\t * @trigger uncheck_node.jstree\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.uncheck_node = function (obj, e) {\r\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.deselect_node(obj, false, e); }\r\n\t\t\tvar t1, t2, dom;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.uncheck_node(obj[t1], e);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tdom = this.get_node(obj, true);\r\n\t\t\tif(obj.state.checked) {\r\n\t\t\t\tobj.state.checked = false;\r\n\t\t\t\tthis._data.checkbox.selected = $.vakata.array_remove_item(this._data.checkbox.selected, obj.id);\r\n\t\t\t\tif(dom.length) {\r\n\t\t\t\t\tdom.children('.jstree-anchor').removeClass('jstree-checked');\r\n\t\t\t\t}\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when an node is unchecked (only if tie_selection in checkbox settings is false)\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name uncheck_node.jstree\r\n\t\t\t\t * @param {Object} node\r\n\t\t\t\t * @param {Array} selected the current selection\r\n\t\t\t\t * @param {Object} event the event (if any) that triggered this uncheck_node\r\n\t\t\t\t * @plugin checkbox\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('uncheck_node', { 'node' : obj, 'selected' : this._data.checkbox.selected, 'event' : e });\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t/**\r\n\t\t * checks all nodes in the tree (only if tie_selection in checkbox settings is false, otherwise select_all will be called internally)\r\n\t\t * @name check_all()\r\n\t\t * @trigger check_all.jstree, changed.jstree\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.check_all = function () {\r\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.select_all(); }\r\n\t\t\tvar tmp = this._data.checkbox.selected.concat([]), i, j;\r\n\t\t\tthis._data.checkbox.selected = this._model.data[$.jstree.root].children_d.concat();\r\n\t\t\tfor(i = 0, j = this._data.checkbox.selected.length; i < j; i++) {\r\n\t\t\t\tif(this._model.data[this._data.checkbox.selected[i]]) {\r\n\t\t\t\t\tthis._model.data[this._data.checkbox.selected[i]].state.checked = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.redraw(true);\r\n\t\t\t/**\r\n\t\t\t * triggered when all nodes are checked (only if tie_selection in checkbox settings is false)\r\n\t\t\t * @event\r\n\t\t\t * @name check_all.jstree\r\n\t\t\t * @param {Array} selected the current selection\r\n\t\t\t * @plugin checkbox\r\n\t\t\t */\r\n\t\t\tthis.trigger('check_all', { 'selected' : this._data.checkbox.selected });\r\n\t\t};\r\n\t\t/**\r\n\t\t * uncheck all checked nodes (only if tie_selection in checkbox settings is false, otherwise deselect_all will be called internally)\r\n\t\t * @name uncheck_all()\r\n\t\t * @trigger uncheck_all.jstree\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.uncheck_all = function () {\r\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.deselect_all(); }\r\n\t\t\tvar tmp = this._data.checkbox.selected.concat([]), i, j;\r\n\t\t\tfor(i = 0, j = this._data.checkbox.selected.length; i < j; i++) {\r\n\t\t\t\tif(this._model.data[this._data.checkbox.selected[i]]) {\r\n\t\t\t\t\tthis._model.data[this._data.checkbox.selected[i]].state.checked = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._data.checkbox.selected = [];\r\n\t\t\tthis.element.find('.jstree-checked').removeClass('jstree-checked');\r\n\t\t\t/**\r\n\t\t\t * triggered when all nodes are unchecked (only if tie_selection in checkbox settings is false)\r\n\t\t\t * @event\r\n\t\t\t * @name uncheck_all.jstree\r\n\t\t\t * @param {Object} node the previous selection\r\n\t\t\t * @param {Array} selected the current selection\r\n\t\t\t * @plugin checkbox\r\n\t\t\t */\r\n\t\t\tthis.trigger('uncheck_all', { 'selected' : this._data.checkbox.selected, 'node' : tmp });\r\n\t\t};\r\n\t\t/**\r\n\t\t * checks if a node is checked (if tie_selection is on in the settings this function will return the same as is_selected)\r\n\t\t * @name is_checked(obj)\r\n\t\t * @param  {mixed}  obj\r\n\t\t * @return {Boolean}\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.is_checked = function (obj) {\r\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.is_selected(obj); }\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\r\n\t\t\treturn obj.state.checked;\r\n\t\t};\r\n\t\t/**\r\n\t\t * get an array of all checked nodes (if tie_selection is on in the settings this function will return the same as get_selected)\r\n\t\t * @name get_checked([full])\r\n\t\t * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\r\n\t\t * @return {Array}\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.get_checked = function (full) {\r\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.get_selected(full); }\r\n\t\t\treturn full ? $.map(this._data.checkbox.selected, $.proxy(function (i) { return this.get_node(i); }, this)) : this._data.checkbox.selected;\r\n\t\t};\r\n\t\t/**\r\n\t\t * get an array of all top level checked nodes (ignoring children of checked nodes) (if tie_selection is on in the settings this function will return the same as get_top_selected)\r\n\t\t * @name get_top_checked([full])\r\n\t\t * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\r\n\t\t * @return {Array}\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.get_top_checked = function (full) {\r\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.get_top_selected(full); }\r\n\t\t\tvar tmp = this.get_checked(true),\r\n\t\t\t\tobj = {}, i, j, k, l;\r\n\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\r\n\t\t\t\tobj[tmp[i].id] = tmp[i];\r\n\t\t\t}\r\n\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\r\n\t\t\t\tfor(k = 0, l = tmp[i].children_d.length; k < l; k++) {\r\n\t\t\t\t\tif(obj[tmp[i].children_d[k]]) {\r\n\t\t\t\t\t\tdelete obj[tmp[i].children_d[k]];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ttmp = [];\r\n\t\t\tfor(i in obj) {\r\n\t\t\t\tif(obj.hasOwnProperty(i)) {\r\n\t\t\t\t\ttmp.push(i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn full ? $.map(tmp, $.proxy(function (i) { return this.get_node(i); }, this)) : tmp;\r\n\t\t};\r\n\t\t/**\r\n\t\t * get an array of all bottom level checked nodes (ignoring selected parents) (if tie_selection is on in the settings this function will return the same as get_bottom_selected)\r\n\t\t * @name get_bottom_checked([full])\r\n\t\t * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\r\n\t\t * @return {Array}\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.get_bottom_checked = function (full) {\r\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.get_bottom_selected(full); }\r\n\t\t\tvar tmp = this.get_checked(true),\r\n\t\t\t\tobj = [], i, j;\r\n\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\r\n\t\t\t\tif(!tmp[i].children.length) {\r\n\t\t\t\t\tobj.push(tmp[i].id);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn full ? $.map(obj, $.proxy(function (i) { return this.get_node(i); }, this)) : obj;\r\n\t\t};\r\n\t\tthis.load_node = function (obj, callback) {\r\n\t\t\tvar k, l, i, j, c, tmp;\r\n\t\t\tif(!$.isArray(obj) && !this.settings.checkbox.tie_selection) {\r\n\t\t\t\ttmp = this.get_node(obj);\r\n\t\t\t\tif(tmp && tmp.state.loaded) {\r\n\t\t\t\t\tfor(k = 0, l = tmp.children_d.length; k < l; k++) {\r\n\t\t\t\t\t\tif(this._model.data[tmp.children_d[k]].state.checked) {\r\n\t\t\t\t\t\t\tc = true;\r\n\t\t\t\t\t\t\tthis._data.checkbox.selected = $.vakata.array_remove_item(this._data.checkbox.selected, tmp.children_d[k]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn parent.load_node.apply(this, arguments);\r\n\t\t};\r\n\t\tthis.get_state = function () {\r\n\t\t\tvar state = parent.get_state.apply(this, arguments);\r\n\t\t\tif(this.settings.checkbox.tie_selection) { return state; }\r\n\t\t\tstate.checkbox = this._data.checkbox.selected.slice();\r\n\t\t\treturn state;\r\n\t\t};\r\n\t\tthis.set_state = function (state, callback) {\r\n\t\t\tvar res = parent.set_state.apply(this, arguments);\r\n\t\t\tif(res && state.checkbox) {\r\n\t\t\t\tif(!this.settings.checkbox.tie_selection) {\r\n\t\t\t\t\tthis.uncheck_all();\r\n\t\t\t\t\tvar _this = this;\r\n\t\t\t\t\t$.each(state.checkbox, function (i, v) {\r\n\t\t\t\t\t\t_this.check_node(v);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tdelete state.checkbox;\r\n\t\t\t\tthis.set_state(state, callback);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn res;\r\n\t\t};\r\n\t\tthis.refresh = function (skip_loading, forget_state) {\r\n\t\t\tif(!this.settings.checkbox.tie_selection) {\r\n\t\t\t\tthis._data.checkbox.selected = [];\r\n\t\t\t}\r\n\t\t\treturn parent.refresh.apply(this, arguments);\r\n\t\t};\r\n\t};\r\n\r\n\t// include the checkbox plugin by default\r\n\t// $.jstree.defaults.plugins.push(\"checkbox\");\r\n\r\n\treturn $;\r\n});\r\n"]}