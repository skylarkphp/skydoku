{"version":3,"sources":["skylark-widgets-hierarchy-all.js"],"names":["define","obj1","path","obj2","split","length","ns","i","name","_attach","skylark","attach","obj","main","class2type","nativeIsArray","Array","isArray","toString","type","forEach","toLowerCase","String","call","object","constructor","isEmptyObject","isFunction","value","isHtmlNode","nodeType","isNumber","isObject","isString","isWindow","window","isArrayLike","isBoolean","isDefined","isDocument","DOCUMENT_NODE","isElement","isEmpty","isNaN","isNull","isNumeric","isPlainObject","Object","getPrototypeOf","prototype","isSameOrigin","href","origin","location","protocol","hostname","port","startsWith","isSymbol","isObjectLike","objectToString","symbolTag","isUndefined","types","INFINITY","MAX_INTEGER","NAN","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","toFinite","toNumber","sign","other","valueOf","replace","isBinary","test","slice","toInteger","result","remainder","numbers","eq","deepEq","hasOwnProperty","keysFunc","defaults","SymbolProto","Symbol","allKeys","keys","key","push","has","_mixin","target","source","deep","safe","undefined","_parseMixinArgs","args","params","arguments","shift","pop","sources","mixin","apply","this","values","a","b","aStack","bStack","className","areArrays","aCtor","bCtor","clone","src","checkCloneMethod","copy","index","l","each","callback","undef","extend","arg","isEqual","includes","collection","fromIndex","guard","nativeMax","indexOf","baseIndexOf","isMatch","attrs","omit","prop1","prop2","pn","pick","removeItem","items","item","idx","splice","fallback","prop","safeMixin","objects","filter","find","baseFindIndex","array","predicate","fromRight","baseIsNaN","flatten","j","compact","first","n","func","grep","out","inArray","makeArray","offset","startWith","concat","merge","second","arr","fn","map","elements","reduce","initialValue","uniq","arrays","createClass","_constructor","_construct","init","props","parent","mixins","options","innerParent","ctor","Error","clss","unshift","superclass","cls","clsMixines","serialMixins","newCtor","xtor","Function","create","__proto__","__mixin__","mergeMixins","klassName","__mixins__","partial","proto","_super","noOverrided","overrides","superFn","tmp","overrided","ret","defineProperty","extendClass","inherit","f1","klass","QueryResults","results","isPromise","then","addIterativeMethod","method","Deferred","when","delegate","total","ArrayStore","queryEngine","query","queryObject","required","execute","thisObject","cache","buildFn","sortSet","sort","aValue","attribute","bValue","descending","start","count","Infinity","matches","idProperty","get","id","data","getIdentity","put","Math","random","overwrite","add","remove","setData","identifier","nextId","aspect","methodName","advice","receiveArguments","dispatcher","existing","executionId","before","next","around","after","newResults","signal","previous","advised","advise","proxy","context","TypeError","TMP","templateSettings","evaluate","interpolate","escape","noMatch","escapes","'","\\","\r","\n","\t"," "," ","escaper","bind","debounce","wait","timeout","clearTimeout","setTimeout","defer","requestAnimationFrame","setTimeoutout","negate","noop","returnTrue","returnFalse","template","text","settings","render","matcher","RegExp","join","match","variable","e","argument","funcs","Promise","always","handler","done","fail","catch","self","promise","makePromise2","resolve","reject","_resolve","_reject","isResolved","isPending","isRejected","v","state","notified","listeners","onResolved","onRejected","onProgress","progress","__ctx__","pipe","notify","listener","error","resolveWith","_resolved","p","reason","rejectWith","_rejected","errback","progback","all","d","race","valueOrPromise","receivedPromise","nativePromise","deferred","cancel","err","immediate","async","parallel","ctx","rets","series","waterful","parseMilliSeconds","str","strs","number","trim","datetimes","eventMethods","preventDefault","stopImmediatePropagation","stopPropagation","compatible","event","isDefaultPrevented","sourceMethod","Event","CustomEvent","[object Object]","super","parse","segs","Emitter","on","events","selector","one","_hub","parsed","emit","eventName","len","reCompact","isImmediatePropagationStopped","listened","evtArr","_events","listenTo","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","listenToOnce","off","evts","liveEvents","_","unlistenTo","trigger","createEvent","Evented","hoster","isBrowser","isNode","global","browser","node","process","versions","v8","_document","w","require","document","matched","ua","exec","version","uaMatch","navigator","userAgent","chrome","webkit","safari","escapeCharMap","freeze","&","<",">","\"","`","=","replaceChar","c","escapeChars","idCounter","string","line","body","escapeHTML","me","callee","stash","getElementById","innerHTML","camelCase","toUpperCase","dasherize","deserializeValue","JSON","generateUUID","r","lowerFirst","charAt","rtrim","serializeValue","stringify","substitute","transform","getObject","retVal","getValue","_k","reverse","format","slugify","from","uniqueId","prefix","upperFirst","strings","base64","decode","input","binary","chr1","chr2","chr3","enc1","enc2","enc3","enc4","output","_keyStr","fromCharCode","utftext","c1","c2","charCodeAt","c3","_utf8_decode","encode","_utf8_encode","Stateful","attributes","cid","cidPrefix","set","changed","validationError","idAttribute","toJSON","attr","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","_pending","clear","hasChanged","changedAttributes","diff","old","previousAttributes","isNew","isValid","validate","hub","publish","arg1","argn","subscribe","topic","_uid","langx","funcArg","payload","getQueryParams","url","queryParam","nv","toPixel","parseFloat","uid","URL","webkitURL","vendorPrefix","vendorPrefixRE","transEndEventNames","WebkitTransition","MozTransition","OTransition","transition","transEndEventName","css3PropPrefix","css3EventPrefix","cssStyles","cssProps","vendorPrefixesRE","testEl","createElement","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","requestFullScreen","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","testStyle","exitFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen","style","cssPropName","isIE","normalizeStyleProperty","normalizeCssProperty","normalizeCssEvent","support","end","fragmentRE","singleTagRE","div","table","tableBody","tableRow","containers","tr","tbody","thead","tfoot","td","th","*","rootNodeRE","ensureNodes","nodes","copyByClone","cloneNode","nodeName","elm","chkName","enhancePlaceContent","placing","neddsFlattern","append","parentNode","appendChild","tag","createElementNS","setAttribute","rxhtmlTag","isChildOf","directly","documentElement","contains","ownerDoc","ownerDocument","noder","active","doc","el","activeElement","refNode","nextSibling","insertBefore","blur","getAttribs","setAttrib","getAttrib","child","contents","contentDocument","childNodes","createFragment","html","$1","container","xml","newXml","edsplit","removeSelfClosingTags","dom","removeChild","createTextNode","empty","hasChildNodes","firstChild","fullScreen","exitFullScreen","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","focusable","element","hasTabindex","mapName","img","focusableIfVisible","fieldset","$","is","disabled","closest","visible","isActive","elem","isInDocument","offsetParent","defaultView","getComputedStyle","position","ownerWindow","parentWindow","prepend","reflow","offsetHeight","console","warn","children","oldNode","replaceChild","selectable","onselectstart","MozUserSelect","KhtmlUserSelect","unselectable","traverse","wrapper","wrapperNode","wrapperInner","unwrap","isDoc","local","nativeMatchesSelector","separatorIndex","combinatorIndex","reversed","reverseCache","reUnescape","expression","isReversed","Slick","currentCache","expressions","raw","regexp","parser","reverseCombinator","combinator","exp","last","parts","cexp","escapeRegExp","rawMatch","separator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","currentSeparator","currentParsed","classList","classes","pseudos","operator","rinputs","rheader","parseSelector","button","checked","enabled","even","focus","tabindex","gt","sel","header","hidden","lt","not","odd","selected","tabbable","tabIndex","offsetWidth","createInputPseudo","createButtonPseudo","isArrayFilter","radio","checkbox","file","password","image","submit","reset","ancestors","root","rootIsSelector","descendants","querySelectorAll","matchError","descendant","querySelector","lastChild","previousSibling","check","adjacent","nextSiblings","previousSiblings","siblings","divide","cond","nativeSelector","customPseudos","part","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","filterSingle","matchs","combine","bit","node1","op","divided","single","currentBit","founds","found","currentItems","finder","ancestor","byId","findAll","isQ","some","every","rquickExpr","wrapper_node_operation","oldValueFunc","argType","wrapper_map","wrapper_selector","wrapper_selector_until","util","wrapper_every_act","wrapper_value","newValue","NodeList","ready","rootQuery","toArray","size","excludes","parents","parentsUntil","pluck","property","pushStack","elms","prevObject","replaceWith","newContent","wrap","htmlIsFunction","wrapAll","firstElementChild","wrapInner","toggle","setting","css","show","hide","prevAll","nextAll","detach","hover","fnOver","fnOut","mouseenter","mouseleave","appendTo","prependTo","insertAfter","replaceAll","original","elems","insert","scrollParent","includeHidden","excludeStaticParent","overflowRegex","andSelf","addBack","eventType","place","addContent","content","disableSelection","enableSelection","flow","isBlockNode","plugin","returnValue","plugins","instantiate","wraps","wrapper_some_chk","wrapper_every_act_firstArgFunc","newArg1","wrapper_name_value","capitalRE","propMap","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","valHooks","option","select","selectedIndex","max","optionSet","attrName","_store","confirm","store","_attributeData","_setData","dataAttrName","camelName","_getData","cleanData","txt","textContent","hooks","value1","datax","dataName","aria","removeAttr","removeAttribute","removeData","names","removeProp","VisualElement","_elm","velm","batch","action","HTMLElement","_delegator","ignoreProperties","readyRE","NativeEventCtors","NativeEvents","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","abort","change","selectionchange","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","textInput","touchstart","touchmove","touchend","load","resize","scroll","unload","wheel","bubbles","cancelable","namespace","getEventCtor","createProxy","originalEvent","specialEvents","focusinSupported","realEvent","handlers","EventBindings","_target","_event","_bindings","bindings","binding","_listener","domEvt","_args","currentTarget","liveFired","related","relatedTarget","addEventListener","removing","removeEventListener","EventsHandler","_handler","register","specialEvent","bindingEvent","bindType","bindEventName","unregister","findHandler","readyState","keyCodeLookup","backspace","comma","delete","down","enter","home","left","page_down","page_up","period","right","space","tab","up","eventer","transitionEnd","delegateType","shortcuts","registry","run","shortcut","metaKey","ctrlKey","ctrl","alt","altKey","shiftKey","keyCode","charCode","pattern","shortcutKey","regKey","special","stop","evented","dispatchEvent","delegateMethodNames","maybeAddPx","cssNumber","column-count","columns","font-weight","line-height","opacity","z-index","zoom","classReCache","classRE","svg","baseVal","elementDisplay","getStyles","view","opener","styler","autocssfix","cssHooks","addClass","re","computedStyle","getPropertyValue","removeProperty","cssText","hasClass","isInvisible","removeClass","display","defaultDisplay","toggleClass","replaceClass","newClass","oldClass","cachedScrollbarWidth","px","scrollbarWidth","w1","w2","innerDiv","clientWidth","borderExtents","top","bottom","s","borderLeftWidth","borderTopWidth","borderRightWidth","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","clientSize","dimension","width","height","clientHeight","isBorderBox","bex","pex","paddingExtents","getDocumentSize","scrollWidth","scrollHeight","marginLeft","marginTop","marginRight","marginBottom","marginSize","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","pageXOffset","pageYOffset","relativeRect","scrollLeft","hasScrollLeft","scrollTo","scrollY","scrollTop","hasScrollTop","scrollX","innerWidth","innerHeight","geom","contentRect","cs","fullCover","hor","vert","vertical","horizontal","marginRect","pageRect","round","scrollIntoView","align","x","y","parentWidth","parentHeight","parentElm","pos","rootElm","offsetLeft","offsetTop","getOffset","abs","rhorizontal","rvertical","roffset","rposition","rpercent","getOffsets","offsets","parseCss","positions","fit","newOverRight","within","withinOffset","outerWidth","collisionPosLeft","collisionPosition","overLeft","overRight","collisionWidth","newOverBottom","outerHeight","collisionPosTop","overTop","overBottom","collisionHeight","flip","newOverLeft","myOffset","my","elemWidth","atOffset","at","targetWidth","newOverTop","elemHeight","targetHeight","flipfit","posit","targetOffset","basePosition","dimensions","of","withinElement","hasOffset","msize","scrollInfo","overflowX","overflowY","hasOverflowX","getScrollInfo","collision","pageY","pageX","horizontalOffset","verticalOffset","using","dir","feedback","important","Dimension","m","margin","cb","mb","jstree","instance_counter","ccp_node","ccp_mode","ccp_inst","themes_loaded","idregex","Tree","destroy","reference","needle","ignore","inst","_model","is_method","instance","core","check_callback","animation","multiple","themes","dots","icons","ellipsis","stripes","variant","responsive","expand_selected_onload","worker","force_text","dblclick_toggle","loaded_state","restore_focus","keyboard","ctrl-space","is_open","close_node","o","get_parent","get_node","get_prev_dom","is_closed","open_node","_firstChild","get_next_dom","open_all","get_container_ul","f2","edit","deco","opts","Child","_data","_id","_cnt","_wrk","last_error","working","worker_queue","focused","opt","k","force_full_redraw","redraw_timeout","default_state","loaded","opened","children_d","rtl","original_container_html","nodeValue","get_string","li_height","_create_prototype_node","load_node","keep_html","revokeObjectURL","teardown","_temp1","_temp2","_node","_kbevent_to_func","8","9","13","19","27","32","33","34","35","36","37","38","39","40","44","45","46","96","97","98","99","100","101","102","103","104","105","-13","112","113","114","115","116","117","118","119","120","121","122","123","144","145","16","17","18","48","49","50","51","52","53","54","55","56","57","59","61","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","107","109","110","186","187","188","189","190","191","192","219","220","221","222","111","106","173","which","kb","unbind","word","tout","was_click","selection","getSelection","removeAllRanges","collapse","Date","toggle_node","activate_node","f","status","vakata","array_unique","chr","col","ind","set_theme","set_theme_variant","act","hover_node","dehover_node","ev","get_container","_nextSibling","_previousSibling","as_dom","ex","get_path","glue","ids","get_text","strict","get_children_dom","is_parent","is_loaded","is_loading","loading","is_leaf","_load_nodes","array_filter","failed","_load_node","has_children","is_callback","force_reload","load_all","to_load","t","notTextOrCommentNode","parseHTML","Xhr","request","getResponseHeader","_append_json_data","_append_html_data","xhr","_node_changed","dat","par","chd","dpc","_parse_model_from_html","redraw","force_processing","df","t_id","t_cnt","rslt","parse_flat","ps","tid","icon","li_attr","a_attr","parse_nest","cnt","mod","postMessage","Blob","Worker","createObjectURL","onmessage","terminate","_parse_model_from_flat_json","_parse_model_from_json","_redraw","fe","redraw_node","full","draw_children","force_render","last_sibling","substr","backgroundImage","backgroundPosition","backgroundSize","t1","t2","slideDown","ok","_open_to","slideUp","original_obj","_this","close_all","is_disabled","enable_node","disable_node","is_hidden","hide_node","skip_redraw","show_node","hide_all","show_all","last_clicked","deselect_node","select_node","is_selected","deselect_all","supress_event","prevent_open","array_remove_item","select_all","old_selection","get_selected","get_top_selected","get_bottom_selected","get_state","open","set_state","initial_selection","refresh","skip_loading","forget_state","refresh_node","set_id","new","set_text","get_json","flat","get_icon","no_data","no_state","no_li_attr","no_a_attr","no_id","no_children","create_node","rename_node","delete_node","lft","array_remove","chk","more","chc","is_multi","functions","move_node","old_par","old_pos","new_par","old_ins","copy_node","is_foreign","old_parent","old_position","old_instance","new_instance","get_buffer","mode","can_paste","clear_buffer","default_text","h1","h2","visibility","padding","border","box-sizing","lineHeight","min","fontFamily","fontSize","fontWeight","fontStyle","fontStretch","fontVariant","letterSpacing","wordSpacing","theme_name","theme_url","theme","get_theme","variant_name","get_theme_variant","show_stripes","hide_stripes","toggle_stripes","show_dots","hide_dots","toggle_dots","show_icons","hide_icons","toggle_icons","show_ellipsis","hide_ellipsis","toggle_ellipsis","set_icon","hide_icon","show_icon","search","fuzzy","caseSensitive","MATCH_LOCATION","MATCH_DISTANCE","distance","MATCH_THRESHOLD","threshold","patternLen","matchmask","pattern_alphabet","mask","match_bitapScore","accuracy","proximity","score","binMin","binMid","lastRd","finish","rd","charMatch","textLen","scoreThreshold","bestLoc","binMax","locations","lastIndexOf","floor","with_values","deselected","_i","three_state","whole_node","keep_selected_style","cascade","tie_selection","cascade_to_disabled","cascade_to_hidden","uto","_undetermined","cur","selectedIds","_cascade_new_checked_state","temp","undetermined","allIds","get_undetermined","tt","tmp2","checkbox_disabled","show_checkboxes","checkboxes","hide_checkboxes","toggle_checkboxes","is_undetermined","disable_checkbox","enable_checkbox","is_checked","uncheck_node","check_node","checkedState","selectedChildIds","selectedNodeIds","selectedChildrenIds","get_checked_descendants","childId","check_all","uncheck_all","get_checked","get_top_checked","get_bottom_checked","res","conditionalselect","right_to_left","popup","Menu","$el","_options","hide_onmouseleave","to","_show_submenu","_execute","_parse","_trigger","event_name","position_x","position_y","_disabled","sep","separator_before","_class","title","label","shortcut_label","submenu","separator_after","xl","h","dw","dh","is_visible","menu","show_at_node","new_node","rename","ccp","ey","last_ts","cto","show_contextmenu","changedTouches","clientX","clientY","_show_contextmenu","drg","dnd","open_timeout","is_draggable","check_while_dragging","always_copy","inside_pos","drag_selection","touch","large_drop_target","large_drag_target","use_html5","mlt","helper","lastmv","laster","lastev","opento","marker","isDifferentNode","pr","ip","tm","is_copy","ins","ref","rel","z","dataTransfer","dropEffect","_get","_clean","strip","vakata_dnd","is_down","is_drag","helper_w","init_x","init_y","scroll_l","scroll_t","scroll_e","scroll_i","is_touch","scroll_speed","scroll_proximity","helper_left","helper_top","threshold_touch","clearInterval","_scroll","init_only","setInterval","elementFromPoint","touchAction","msTouchAction","zIndex","wh","ww","dt","dl","ht","hl","massload","toLoad","ajax","case_sensitive","show_only_matches","show_only_matches_children","close_opened_onclear","search_leaves_only","search_callback","opn","som","smc","hdn","skip_async","inside","clear_search","lastRequest","ii","ttl","preserve_loaded","save_state","restore_state","st","sec","storage","clear_state","del","localStorage","setItem","getItem","BLANKRE","IDREGEX","styled","generateCellId","tree","escapeId","getIds","findDataCell","scope","cellId","isClickedSep","toResize","oldMouseX","newMouseX","htmlstripre","copyData","fromtree","totree","recurse","findLastClosedNode","getCellData","grid","_guid","s4","substring","_initialize","_initialized","gs","_gridSettings","treeClass","columnWidth","defaultConf","*display","*+display","isThemeroller","themeroller","treeWidthDiff","resizable","draggable","stateful","indent","sortOrder","sortAsc","caseInsensitive","fixedHeader","gridcontextmenu","treecol","gridcols","cols","columnSearch","_edit","ceil","rootid","msie","appVersion","gridWrapper","midWrapper","defaultSort","bigger","colrefs","caseInsensitiveSort","localeCompare","nodeA","nodeB","valueA","valueB","ui","sortable","axis","handle","searchColumn","searchObj","validatedSearchObj","columnIndex","column","columnValue","searchSettings","omniSearchCallback","searchValue","_detachColumns","_prepare_grid","_reattachColumns","removeNodes","_hideOrShowTree","_hide_grid","_prepare_headers","q","anchorHeight","_hover_node","nodesToShow","endTime","that","startTime","getTime","holdingCells","cells","_domManipulation","time","newtree","oldtree","gw","gridparent","_clean_grid","cl","ccl","coluuid","defaultWidth","classAdd","hasHeaders","conf","headerClass","columnClass","minWidth","maxWidth","bound","currentTree","colNum","oldPrevHeaderInner","oldPrevColWidth","newPrevColWidth","clickedSep","newWidth","symbol","rootNode","mw","oldNodes","_hideOrShowNode","lenj","getHoldingCells","hc","grid_hide_column","grid_show_column","wcl","valClass","wideValClass","span","paddingleft","gridCellName","gridCellParentId","gridCellParent","gridCellPrev","gridCellPrevId","gridCellNext","gridCellNextId","gridCellChild","gridCellChildId","highlightSearch","isClicked","objData","cellClickHandler","sourceName","cellRightClickHandler","hoverInHandler","jsTreeInstance","hoverOutHandler","lid","peers","rendered","renderATitle","cellClass","wideCellClass","images","valueClass","valueClassPrefix","wideValueClass","wideValueClassPrefix","toRen","overflow-y","default","_delete_ids","get_rules","max_children","valid_children","max_depth","get_type","rules","set_type","old_type","old_icon","unique","trim_whitespace","duplicate","counter","wholerow"],"mappings":"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","file":"../skylark-widgets-hierarchy-all.js","sourcesContent":["define('skylark-langx-ns/_attach',[],function(){\r\n    return  function attach(obj1,path,obj2) {\r\n        if (typeof path == \"string\") {\r\n            path = path.split(\".\");//[path]\r\n        };\r\n        var length = path.length,\r\n            ns=obj1,\r\n            i=0,\r\n            name = path[i++];\r\n\r\n        while (i < length) {\r\n            ns = ns[name] = ns[name] || {};\r\n            name = path[i++];\r\n        }\r\n\r\n        return ns[name] = obj2;\r\n    }\r\n});\ndefine('skylark-langx-ns/ns',[\r\n    \"./_attach\"\r\n], function(_attach) {\r\n    var skylark = {\r\n    \tattach : function(path,obj) {\r\n    \t\treturn _attach(skylark,path,obj);\r\n    \t}\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-langx-ns/main',[\r\n\t\"./ns\"\r\n],function(skylark){\r\n\treturn skylark;\r\n});\ndefine('skylark-langx-ns', ['skylark-langx-ns/main'], function (main) { return main; });\n\ndefine('skylark-langx/skylark',[\r\n    \"skylark-langx-ns\"\r\n], function(ns) {\r\n\treturn ns;\r\n});\r\n\ndefine('skylark-langx-types/types',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n    var nativeIsArray = Array.isArray, \r\n        toString = {}.toString;\r\n    \r\n    var type = (function() {\r\n        var class2type = {};\r\n\r\n        // Populate the class2type map\r\n        \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split(\" \").forEach(function(name) {\r\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n        });\r\n\r\n        return function type(obj) {\r\n            return obj == null ? String(obj) :\r\n                class2type[toString.call(obj)] || \"object\";\r\n        };\r\n    })();\r\n\r\n \r\n    var  isArray = nativeIsArray || function(obj) {\r\n        return object && object.constructor === Array;\r\n    };\r\n\r\n\r\n    /**\r\n     * Checks if `value` is array-like. A value is considered array-like if it's\r\n     * not a function/string/element and has a `value.length` that's an integer greater than or\r\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\r\n     *\r\n     * @category Lang\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\r\n     * @example\r\n     *\r\n     * isArrayLike([1, 2, 3])\r\n     * // => true\r\n     *\r\n     * isArrayLike(document.body.children)\r\n     * // => false\r\n     *\r\n     * isArrayLike('abc')\r\n     * // => true\r\n     *\r\n     * isArrayLike(Function)\r\n     * // => false\r\n     */    \r\n    function isArrayLike(obj) {\r\n        return !isString(obj) && !isHtmlNode(obj) && typeof obj.length == 'number' && !isFunction(obj);\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is classified as a boolean primitive or object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\r\n     * @example\r\n     *\r\n     * isBoolean(false)\r\n     * // => true\r\n     *\r\n     * isBoolean(null)\r\n     * // => false\r\n     */\r\n    function isBoolean(obj) {\r\n       return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\r\n       //return typeof(obj) === \"boolean\";\r\n    }\r\n\r\n    function isDefined(obj) {\r\n        return typeof obj !== 'undefined';\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\r\n    }\r\n\r\n   // Is a given value a DOM element?\r\n    function isElement(obj) {\r\n        return !!(obj && obj.nodeType === 1);\r\n    }   \r\n\r\n    function isEmptyObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n            if (obj[name] !== null) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    /**\r\n     * Checks if `value` is classified as a `Function` object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\r\n     * @example\r\n     *\r\n     * isFunction(parseInt)\r\n     * // => true\r\n     *\r\n     * isFunction(/abc/)\r\n     * // => false\r\n     */\r\n    function isFunction(value) {\r\n        return type(value) == \"function\";\r\n    }\r\n\r\n\r\n\r\n    function isHtmlNode(obj) {\r\n        return obj && obj.nodeType; // obj instanceof Node; //Consider the elements in IFRAME\r\n    }\r\n\r\n    function isInstanceOf( /*Object*/ value, /*Type*/ type) {\r\n        //Tests whether the value is an instance of a type.\r\n        if (value === undefined) {\r\n            return false;\r\n        } else if (value === null || type == Object) {\r\n            return true;\r\n        } else if (typeof value === \"number\") {\r\n            return type === Number;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else if (typeof value === \"boolean\") {\r\n            return type === Boolean;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else {\r\n            return (value instanceof type) || (value && value.isInstanceOf ? value.isInstanceOf(type) : false);\r\n        }\r\n    }\r\n\r\n    function isNull(obj) {\r\n        return obj === null;\r\n    }\r\n\r\n    function isNumber(obj) {\r\n        return typeof obj == 'number';\r\n    }\r\n\r\n    function isObject(obj) {\r\n        var type = typeof obj;\r\n        return type === 'function' || type === 'object' && !!obj;        \r\n        //return type(obj) == \"object\";\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return obj && obj == obj.window;\r\n    }\r\n\r\n    function isSameOrigin(href) {\r\n        if (href) {\r\n            var origin = location.protocol + '//' + location.hostname;\r\n            if (location.port) {\r\n                origin += ':' + location.port;\r\n            }\r\n            return href.startsWith(origin);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is classified as a `Symbol` primitive or object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\r\n     * @example\r\n     *\r\n     * _.isSymbol(Symbol.iterator);\r\n     * // => true\r\n     *\r\n     * _.isSymbol('abc');\r\n     * // => false\r\n     */\r\n    function isSymbol(value) {\r\n      return typeof value == 'symbol' ||\r\n        (isObjectLike(value) && objectToString.call(value) == symbolTag);\r\n    }\r\n\r\n    // Is a given variable undefined?\r\n    function isUndefined(obj) {\r\n        return obj === void 0;\r\n    }\r\n\r\n    return skylark.attach(\"langx.types\",{\r\n\r\n        isArray: isArray,\r\n\r\n        isArrayLike: isArrayLike,\r\n\r\n        isBoolean: isBoolean,\r\n\r\n        isDefined: isDefined,\r\n\r\n        isDocument: isDocument,\r\n\r\n        isElement,\r\n\r\n        isEmpty : isEmptyObject,\r\n\r\n        isEmptyObject: isEmptyObject,\r\n\r\n        isFunction: isFunction,\r\n\r\n        isHtmlNode: isHtmlNode,\r\n\r\n        isNaN : function (obj) {\r\n            return isNaN(obj);\r\n        },\r\n\r\n        isNull: isNull,\r\n\r\n\r\n        isNumber: isNumber,\r\n\r\n        isNumeric: isNumber,\r\n\r\n        isObject: isObject,\r\n\r\n        isPlainObject: isPlainObject,\r\n\r\n        isString: isString,\r\n\r\n        isSameOrigin: isSameOrigin,\r\n\r\n        isSymbol : isSymbol,\r\n\r\n        isUndefined: isUndefined,\r\n\r\n        isWindow: isWindow,\r\n\r\n        type: type\r\n    });\r\n\r\n});\ndefine('skylark-langx-types/main',[\r\n\t\"./types\"\r\n],function(types){\r\n\treturn types;\r\n});\ndefine('skylark-langx-types', ['skylark-langx-types/main'], function (main) { return main; });\n\ndefine('skylark-langx-numbers/numbers',[\r\n    \"skylark-langx-ns\",\r\n    \"skylark-langx-types\"\r\n],function(skylark,types){\r\n\tvar isObject = types.isObject,\r\n\t\tisSymbol = types.isSymbol;\r\n\r\n\tvar INFINITY = 1 / 0,\r\n\t    MAX_SAFE_INTEGER = 9007199254740991,\r\n\t    MAX_INTEGER = 1.7976931348623157e+308,\r\n\t    NAN = 0 / 0;\r\n\r\n\t/** Used to match leading and trailing whitespace. */\r\n\tvar reTrim = /^\\s+|\\s+$/g;\r\n\r\n\t/** Used to detect bad signed hexadecimal string values. */\r\n\tvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\r\n\r\n\t/** Used to detect binary string values. */\r\n\tvar reIsBinary = /^0b[01]+$/i;\r\n\r\n\t/** Used to detect octal string values. */\r\n\tvar reIsOctal = /^0o[0-7]+$/i;\r\n\r\n\t/** Used to detect unsigned integer values. */\r\n\tvar reIsUint = /^(?:0|[1-9]\\d*)$/;\r\n\r\n\t/** Built-in method references without a dependency on `root`. */\r\n\tvar freeParseInt = parseInt;\r\n\r\n\t/**\r\n\t * Converts `value` to a finite number.\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @since 4.12.0\r\n\t * @category Lang\r\n\t * @param {*} value The value to convert.\r\n\t * @returns {number} Returns the converted number.\r\n\t * @example\r\n\t *\r\n\t * _.toFinite(3.2);\r\n\t * // => 3.2\r\n\t *\r\n\t * _.toFinite(Number.MIN_VALUE);\r\n\t * // => 5e-324\r\n\t *\r\n\t * _.toFinite(Infinity);\r\n\t * // => 1.7976931348623157e+308\r\n\t *\r\n\t * _.toFinite('3.2');\r\n\t * // => 3.2\r\n\t */\r\n\tfunction toFinite(value) {\r\n\t  if (!value) {\r\n\t    return value === 0 ? value : 0;\r\n\t  }\r\n\t  value = toNumber(value);\r\n\t  if (value === INFINITY || value === -INFINITY) {\r\n\t    var sign = (value < 0 ? -1 : 1);\r\n\t    return sign * MAX_INTEGER;\r\n\t  }\r\n\t  return value === value ? value : 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts `value` to an integer.\r\n\t *\r\n\t * **Note:** This method is loosely based on\r\n\t * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @param {*} value The value to convert.\r\n\t * @returns {number} Returns the converted integer.\r\n\t * @example\r\n\t *\r\n\t * _.toInteger(3.2);\r\n\t * // => 3\r\n\t *\r\n\t * _.toInteger(Number.MIN_VALUE);\r\n\t * // => 0\r\n\t *\r\n\t * _.toInteger(Infinity);\r\n\t * // => 1.7976931348623157e+308\r\n\t *\r\n\t * _.toInteger('3.2');\r\n\t * // => 3\r\n\t */\r\n\tfunction toInteger(value) {\r\n\t  var result = toFinite(value),\r\n\t      remainder = result % 1;\r\n\r\n\t  return result === result ? (remainder ? result - remainder : result) : 0;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Converts `value` to a number.\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @since 4.0.0\r\n\t * @category Lang\r\n\t * @param {*} value The value to process.\r\n\t * @returns {number} Returns the number.\r\n\t * @example\r\n\t *\r\n\t * _.toNumber(3.2);\r\n\t * // => 3.2\r\n\t *\r\n\t * _.toNumber(Number.MIN_VALUE);\r\n\t * // => 5e-324\r\n\t *\r\n\t * _.toNumber(Infinity);\r\n\t * // => Infinity\r\n\t *\r\n\t * _.toNumber('3.2');\r\n\t * // => 3.2\r\n\t */\r\n\tfunction toNumber(value) {\r\n\t  if (typeof value == 'number') {\r\n\t    return value;\r\n\t  }\r\n\t  if (isSymbol(value)) {\r\n\t    return NAN;\r\n\t  }\r\n\t  if (isObject(value)) {\r\n\t    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\r\n\t    value = isObject(other) ? (other + '') : other;\r\n\t  }\r\n\t  if (typeof value != 'string') {\r\n\t    return value === 0 ? value : +value;\r\n\t  }\r\n\t  value = value.replace(reTrim, '');\r\n\t  var isBinary = reIsBinary.test(value);\r\n\t  return (isBinary || reIsOctal.test(value))\r\n\t    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\r\n\t    : (reIsBadHex.test(value) ? NAN : +value);\r\n\t}\r\n\r\n\treturn  skylark.attach(\"langx.numbers\",{\r\n\t\ttoFinite : toFinite,\r\n\t\ttoNumber : toNumber,\r\n\t\ttoInteger : toInteger\r\n\t});\r\n});\ndefine('skylark-langx-numbers/main',[\r\n\t\"./numbers\"\r\n],function(numbers){\r\n\treturn numbers;\r\n});\ndefine('skylark-langx-numbers', ['skylark-langx-numbers/main'], function (main) { return main; });\n\ndefine('skylark-langx-objects/objects',[\r\n    \"skylark-langx-ns/ns\",\r\n    \"skylark-langx-ns/_attach\",\r\n\t\"skylark-langx-types\",\r\n    \"skylark-langx-numbers\"\r\n],function(skylark,_attach,types,numbers){\r\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty,\r\n        slice = Array.prototype.slice,\r\n        isBoolean = types.isBoolean,\r\n        isFunction = types.isFunction,\r\n\t\tisObject = types.isObject,\r\n\t\tisPlainObject = types.isPlainObject,\r\n\t\tisArray = types.isArray,\r\n        isArrayLike = types.isArrayLike,\r\n        isString = types.isString,\r\n        toInteger = numbers.toInteger;\r\n\r\n     // An internal function for creating assigner functions.\r\n    function createAssigner(keysFunc, defaults) {\r\n        return function(obj) {\r\n          var length = arguments.length;\r\n          if (defaults) obj = Object(obj);  \r\n          if (length < 2 || obj == null) return obj;\r\n          for (var index = 1; index < length; index++) {\r\n            var source = arguments[index],\r\n                keys = keysFunc(source),\r\n                l = keys.length;\r\n            for (var i = 0; i < l; i++) {\r\n              var key = keys[i];\r\n              if (!defaults || obj[key] === void 0) obj[key] = source[key];\r\n            }\r\n          }\r\n          return obj;\r\n       };\r\n    }\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    var eq, deepEq;\r\n    var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\r\n\r\n    eq = function(a, b, aStack, bStack) {\r\n        // Identical objects are equal. `0 === -0`, but they aren't identical.\r\n        // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n        if (a === b) return a !== 0 || 1 / a === 1 / b;\r\n        // `null` or `undefined` only equal to itself (strict comparison).\r\n        if (a == null || b == null) return false;\r\n        // `NaN`s are equivalent, but non-reflexive.\r\n        if (a !== a) return b !== b;\r\n        // Exhaust primitive checks\r\n        var type = typeof a;\r\n        if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\r\n        return deepEq(a, b, aStack, bStack);\r\n    };\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    deepEq = function(a, b, aStack, bStack) {\r\n        // Unwrap any wrapped objects.\r\n        //if (a instanceof _) a = a._wrapped;\r\n        //if (b instanceof _) b = b._wrapped;\r\n        // Compare `[[Class]]` names.\r\n        var className = toString.call(a);\r\n        if (className !== toString.call(b)) return false;\r\n        switch (className) {\r\n            // Strings, numbers, regular expressions, dates, and booleans are compared by value.\r\n            case '[object RegExp]':\r\n            // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\r\n            case '[object String]':\r\n                // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n                // equivalent to `new String(\"5\")`.\r\n                return '' + a === '' + b;\r\n            case '[object Number]':\r\n                // `NaN`s are equivalent, but non-reflexive.\r\n                // Object(NaN) is equivalent to NaN.\r\n                if (+a !== +a) return +b !== +b;\r\n                // An `egal` comparison is performed for other numeric values.\r\n                return +a === 0 ? 1 / +a === 1 / b : +a === +b;\r\n            case '[object Date]':\r\n            case '[object Boolean]':\r\n                // Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n                // millisecond representations. Note that invalid dates with millisecond representations\r\n                // of `NaN` are not equivalent.\r\n                return +a === +b;\r\n            case '[object Symbol]':\r\n                return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\r\n        }\r\n\r\n        var areArrays = className === '[object Array]';\r\n        if (!areArrays) {\r\n            if (typeof a != 'object' || typeof b != 'object') return false;\r\n            // Objects with different constructors are not equivalent, but `Object`s or `Array`s\r\n            // from different frames are.\r\n            var aCtor = a.constructor, bCtor = b.constructor;\r\n            if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\r\n                               isFunction(bCtor) && bCtor instanceof bCtor)\r\n                          && ('constructor' in a && 'constructor' in b)) {\r\n                return false;\r\n            }\r\n        }\r\n        // Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n\r\n        // Initializing stack of traversed objects.\r\n        // It's done here since we only need them for objects and arrays comparison.\r\n        aStack = aStack || [];\r\n        bStack = bStack || [];\r\n        var length = aStack.length;\r\n        while (length--) {\r\n            // Linear search. Performance is inversely proportional to the number of\r\n            // unique nested structures.\r\n            if (aStack[length] === a) return bStack[length] === b;\r\n        }\r\n\r\n        // Add the first object to the stack of traversed objects.\r\n        aStack.push(a);\r\n        bStack.push(b);\r\n\r\n        // Recursively compare objects and arrays.\r\n        if (areArrays) {\r\n            // Compare array lengths to determine if a deep comparison is necessary.\r\n            length = a.length;\r\n            if (length !== b.length) return false;\r\n            // Deep compare the contents, ignoring non-numeric properties.\r\n            while (length--) {\r\n                if (!eq(a[length], b[length], aStack, bStack)) return false;\r\n            }\r\n        } else {\r\n            // Deep compare objects.\r\n            var keys = Object.keys(a), key;\r\n            length = keys.length;\r\n            // Ensure that both objects contain the same number of properties before comparing deep equality.\r\n            if (Object.keys(b).length !== length) return false;\r\n            while (length--) {\r\n                // Deep compare each member\r\n                key = keys[length];\r\n                if (!(b[key]!==undefined && eq(a[key], b[key], aStack, bStack))) return false;\r\n            }\r\n        }\r\n        // Remove the first object from the stack of traversed objects.\r\n        aStack.pop();\r\n        bStack.pop();\r\n        return true;\r\n    };\r\n\r\n    // Retrieve all the property names of an object.\r\n    function allKeys(obj) {\r\n        if (!isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function each(obj, callback) {\r\n        var length, key, i, undef, value;\r\n\r\n        if (obj) {\r\n            length = obj.length;\r\n\r\n            if (length === undef) {\r\n                // Loop object items\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        value = obj[key];\r\n                        if (callback.call(value, key, value) === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Loop array items\r\n                for (i = 0; i < length; i++) {\r\n                    value = obj[i];\r\n                    if (callback.call(value, i, value) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function extend(target) {\r\n        var deep, args = slice.call(arguments, 1);\r\n        if (typeof target == 'boolean') {\r\n            deep = target\r\n            target = args.shift()\r\n        }\r\n        if (args.length == 0) {\r\n            args = [target];\r\n            target = this;\r\n        }\r\n        args.forEach(function(arg) {\r\n            mixin(target, arg, deep);\r\n        });\r\n        return target;\r\n    }\r\n\r\n    // Retrieve the names of an object's own properties.\r\n    // Delegates to **ECMAScript 5**'s native `Object.keys`.\r\n    function keys(obj) {\r\n        if (isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) if (has(obj, key)) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function has(obj, path) {\r\n        if (!isArray(path)) {\r\n            return obj != null && hasOwnProperty.call(obj, path);\r\n        }\r\n        var length = path.length;\r\n        for (var i = 0; i < length; i++) {\r\n            var key = path[i];\r\n            if (obj == null || !hasOwnProperty.call(obj, key)) {\r\n                return false;\r\n            }\r\n            obj = obj[key];\r\n        }\r\n        return !!length;\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\r\n     * checked for a substring of `value`, otherwise\r\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\r\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\r\n     * the offset from the end of `collection`.\r\n     *\r\n     * @static\r\n     * @memberOf _\r\n     * @since 0.1.0\r\n     * @category Collection\r\n     * @param {Array|Object|string} collection The collection to inspect.\r\n     * @param {*} value The value to search for.\r\n     * @param {number} [fromIndex=0] The index to search from.\r\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\r\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\r\n     * @example\r\n     *\r\n     * _.includes([1, 2, 3], 1);\r\n     * // => true\r\n     *\r\n     * _.includes([1, 2, 3], 1, 2);\r\n     * // => false\r\n     *\r\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\r\n     * // => true\r\n     *\r\n     * _.includes('abcd', 'bc');\r\n     * // => true\r\n     */\r\n    function includes(collection, value, fromIndex, guard) {\r\n      collection = isArrayLike(collection) ? collection : values(collection);\r\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\r\n\r\n      var length = collection.length;\r\n      if (fromIndex < 0) {\r\n        fromIndex = nativeMax(length + fromIndex, 0);\r\n      }\r\n      return isString(collection)\r\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\r\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\r\n    }\r\n\r\n\r\n   // Perform a deep comparison to check if two objects are equal.\r\n    function isEqual(a, b) {\r\n        return eq(a, b);\r\n    }\r\n\r\n    // Returns whether an object has a given set of `key:value` pairs.\r\n    function isMatch(object, attrs) {\r\n        var keys = keys(attrs), length = keys.length;\r\n        if (object == null) return !length;\r\n        var obj = Object(object);\r\n        for (var i = 0; i < length; i++) {\r\n          var key = keys[i];\r\n          if (attrs[key] !== obj[key] || !(key in obj)) return false;\r\n        }\r\n        return true;\r\n    }    \r\n\r\n    function _mixin(target, source, deep, safe) {\r\n        for (var key in source) {\r\n            //if (!source.hasOwnProperty(key)) {\r\n            //    continue;\r\n            //}\r\n            if (safe && target[key] !== undefined) {\r\n                continue;\r\n            }\r\n            if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n                if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\r\n                    target[key] = {};\r\n                }\r\n                if (isArray(source[key]) && !isArray(target[key])) {\r\n                    target[key] = [];\r\n                }\r\n                _mixin(target[key], source[key], deep, safe);\r\n            } else if (source[key] !== undefined) {\r\n                target[key] = source[key]\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function _parseMixinArgs(args) {\r\n        var params = slice.call(arguments, 0),\r\n            target = params.shift(),\r\n            deep = false;\r\n        if (isBoolean(params[params.length - 1])) {\r\n            deep = params.pop();\r\n        }\r\n\r\n        return {\r\n            target: target,\r\n            sources: params,\r\n            deep: deep\r\n        };\r\n    }\r\n\r\n    function mixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, false);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n   // Return a copy of the object without the blacklisted properties.\r\n    function omit(obj, prop1,prop2) {\r\n        if (!obj) {\r\n            return null;\r\n        }\r\n        var result = mixin({},obj);\r\n        for(var i=1;i<arguments.length;i++) {\r\n            var pn = arguments[i];\r\n            if (pn in obj) {\r\n                delete result[pn];\r\n            }\r\n        }\r\n        return result;\r\n\r\n    }\r\n\r\n   // Return a copy of the object only containing the whitelisted properties.\r\n    function pick(obj,prop1,prop2) {\r\n        if (!obj) {\r\n            return null;\r\n        }\r\n        var result = {};\r\n        for(var i=1;i<arguments.length;i++) {\r\n            var pn = arguments[i];\r\n            if (pn in obj) {\r\n                result[pn] = obj[pn];\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function removeItem(items, item) {\r\n        if (isArray(items)) {\r\n            var idx = items.indexOf(item);\r\n            if (idx != -1) {\r\n                items.splice(idx, 1);\r\n            }\r\n        } else if (isPlainObject(items)) {\r\n            for (var key in items) {\r\n                if (items[key] == item) {\r\n                    delete items[key];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function result(obj, path, fallback) {\r\n        if (!isArray(path)) {\r\n            path = path.split(\".\");//[path]\r\n        };\r\n        var length = path.length;\r\n        if (!length) {\r\n          return isFunction(fallback) ? fallback.call(obj) : fallback;\r\n        }\r\n        for (var i = 0; i < length; i++) {\r\n          var prop = obj == null ? void 0 : obj[path[i]];\r\n          if (prop === void 0) {\r\n            prop = fallback;\r\n            i = length; // Ensure we don't continue iterating.\r\n          }\r\n          obj = isFunction(prop) ? prop.call(obj) : prop;\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    function safeMixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, true);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    // Retrieve the values of an object's properties.\r\n    function values(obj) {\r\n        var keys = allKeys(obj);\r\n        var length = keys.length;\r\n        var values = Array(length);\r\n        for (var i = 0; i < length; i++) {\r\n            values[i] = obj[keys[i]];\r\n        }\r\n        return values;\r\n    }\r\n\r\n    function clone( /*anything*/ src,checkCloneMethod) {\r\n        var copy;\r\n        if (src === undefined || src === null) {\r\n            copy = src;\r\n        } else if (checkCloneMethod && src.clone) {\r\n            copy = src.clone();\r\n        } else if (isArray(src)) {\r\n            copy = [];\r\n            for (var i = 0; i < src.length; i++) {\r\n                copy.push(clone(src[i]));\r\n            }\r\n        } else if (isPlainObject(src)) {\r\n            copy = {};\r\n            for (var key in src) {\r\n                copy[key] = clone(src[key]);\r\n            }\r\n        } else {\r\n            copy = src;\r\n        }\r\n\r\n        return copy;\r\n\r\n    }\r\n\r\n    return skylark.attach(\"langx.objects\",{\r\n        allKeys: allKeys,\r\n\r\n        attach : _attach,\r\n\r\n        clone: clone,\r\n\r\n        defaults : createAssigner(allKeys, true),\r\n\r\n        each : each,\r\n\r\n        extend : extend,\r\n\r\n        has: has,\r\n\r\n        isEqual: isEqual,   \r\n\r\n        includes: includes,\r\n\r\n        isMatch: isMatch,\r\n\r\n        keys: keys,\r\n\r\n        mixin: mixin,\r\n\r\n        omit: omit,\r\n\r\n        pick: pick,\r\n\r\n        removeItem: removeItem,\r\n\r\n        result : result,\r\n        \r\n        safeMixin: safeMixin,\r\n\r\n        values: values\r\n    });\r\n\r\n\r\n});\ndefine('skylark-langx-objects/main',[\r\n\t\"./objects\"\r\n],function(objects){\r\n\treturn objects;\r\n});\ndefine('skylark-langx-objects', ['skylark-langx-objects/main'], function (main) { return main; });\n\ndefine('skylark-langx-arrays/arrays',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\"\r\n],function(skylark,types,objects){\r\n  var filter = Array.prototype.filter,\r\n      find = Array.prototype.find,\r\n    isArrayLike = types.isArrayLike;\r\n\r\n    /**\r\n     * The base implementation of `_.findIndex` and `_.findLastIndex` without\r\n     * support for iteratee shorthands.\r\n     *\r\n     * @param {Array} array The array to inspect.\r\n     * @param {Function} predicate The function invoked per iteration.\r\n     * @param {number} fromIndex The index to search from.\r\n     * @param {boolean} [fromRight] Specify iterating from right to left.\r\n     * @returns {number} Returns the index of the matched value, else `-1`.\r\n     */\r\n    function baseFindIndex(array, predicate, fromIndex, fromRight) {\r\n      var length = array.length,\r\n          index = fromIndex + (fromRight ? 1 : -1);\r\n\r\n      while ((fromRight ? index-- : ++index < length)) {\r\n        if (predicate(array[index], index, array)) {\r\n          return index;\r\n        }\r\n      }\r\n      return -1;\r\n    }\r\n\r\n    /**\r\n     * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\r\n     *\r\n     * @param {Array} array The array to inspect.\r\n     * @param {*} value The value to search for.\r\n     * @param {number} fromIndex The index to search from.\r\n     * @returns {number} Returns the index of the matched value, else `-1`.\r\n     */\r\n    function baseIndexOf(array, value, fromIndex) {\r\n      if (value !== value) {\r\n        return baseFindIndex(array, baseIsNaN, fromIndex);\r\n      }\r\n      var index = fromIndex - 1,\r\n          length = array.length;\r\n\r\n      while (++index < length) {\r\n        if (array[index] === value) {\r\n          return index;\r\n        }\r\n      }\r\n      return -1;\r\n    }\r\n\r\n    /**\r\n     * The base implementation of `isNaN` without support for number objects.\r\n     *\r\n     * @private\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\r\n     */\r\n    function baseIsNaN(value) {\r\n      return value !== value;\r\n    }\r\n\r\n\r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n\r\n    function filter2(array,func) {\r\n      return filter.call(array,func);\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0; i < array.length; i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j < item.length; j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        objects.each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item);\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n       if (isArrayLike(obj) ) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n      }\r\n\r\n      // array of single index\r\n      return [ obj ];             \r\n    }\r\n\r\n\r\n    function forEach (arr, fn) {\r\n      if (arr.forEach) return arr.forEach(fn)\r\n      for (var i = 0; i < arr.length; i++) fn(arr[i], i);\r\n    }\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n\r\n    function merge( first, second ) {\r\n      var l = second.length,\r\n          i = first.length,\r\n          j = 0;\r\n\r\n      if ( typeof l === \"number\" ) {\r\n        for ( ; j < l; j++ ) {\r\n          first[ i++ ] = second[ j ];\r\n        }\r\n      } else {\r\n        while ( second[j] !== undefined ) {\r\n          first[ i++ ] = second[ j++ ];\r\n        }\r\n      }\r\n\r\n      first.length = i;\r\n\r\n      return first;\r\n    }\r\n\r\n    function reduce(array,callback,initialValue) {\r\n        return Array.prototype.reduce.call(array,callback,initialValue);\r\n    }\r\n\r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    function find2(array,func) {\r\n      return find.call(array,func);\r\n    }\r\n\r\n    return skylark.attach(\"langx.arrays\",{\r\n        baseFindIndex: baseFindIndex,\r\n\r\n        baseIndexOf : baseIndexOf,\r\n        \r\n        compact: compact,\r\n\r\n        first : function(items,n) {\r\n            if (n) {\r\n                return items.slice(0,n);\r\n            } else {\r\n                return items[0];\r\n            }\r\n        },\r\n\r\n        filter : filter2,\r\n\r\n        find : find2,\r\n        \r\n        flatten: flatten,\r\n\r\n        grep: grep,\r\n\r\n        inArray: inArray,\r\n\r\n        makeArray: makeArray,\r\n\r\n        merge : merge,\r\n\r\n        forEach : forEach,\r\n\r\n        map : map,\r\n        \r\n        reduce : reduce,\r\n\r\n        uniq : uniq\r\n\r\n    });\r\n});\ndefine('skylark-langx-arrays/main',[\r\n\t\"./arrays\"\r\n],function(arrays){\r\n\treturn arrays;\r\n});\ndefine('skylark-langx-arrays', ['skylark-langx-arrays/main'], function (main) { return main; });\n\ndefine('skylark-langx/arrays',[\r\n\t\"skylark-langx-arrays\"\r\n],function(arrays){\r\n  return arrays;\r\n});\ndefine('skylark-langx-klass/klass',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-arrays\",\r\n],function(skylark,types,objects,arrays){\r\n    var uniq = arrays.uniq,\r\n        has = objects.has,\r\n        mixin = objects.mixin,\r\n        isArray = types.isArray,\r\n        isDefined = types.isDefined;\r\n\r\n/* for reference \r\n function klass(props,parent) {\r\n    var ctor = function(){\r\n        this._construct();\r\n    };\r\n    ctor.prototype = props;\r\n    if (parent) {\r\n        ctor._proto_ = parent;\r\n        props.__proto__ = parent.prototype;\r\n    }\r\n    return ctor;\r\n}\r\n\r\n// Type some JavaScript code here.\r\nlet animal = klass({\r\n  _construct(){\r\n      this.name = this.name + \",hi\";\r\n  },\r\n    \r\n  name: \"Animal\",\r\n  eat() {         // [[HomeObject]] == animal\r\n    alert(`${this.name} eats.`);\r\n  }\r\n    \r\n    \r\n});\r\n\r\n\r\nlet rabbit = klass({\r\n  name: \"Rabbit\",\r\n  _construct(){\r\n      super._construct();\r\n  },\r\n  eat() {         // [[HomeObject]] == rabbit\r\n    super.eat();\r\n  }\r\n},animal);\r\n\r\nlet longEar = klass({\r\n  name: \"Long Ear\",\r\n  eat() {         // [[HomeObject]] == longEar\r\n    super.eat();\r\n  }\r\n},rabbit);\r\n*/\r\n    \r\n    function inherit(ctor, base) {\r\n        var f = function() {};\r\n        f.prototype = base.prototype;\r\n\r\n        ctor.prototype = new f();\r\n    }\r\n\r\n    var f1 = function() {\r\n        function extendClass(ctor, props, options) {\r\n            // Copy the properties to the prototype of the class.\r\n            var proto = ctor.prototype,\r\n                _super = ctor.superclass.prototype,\r\n                noOverrided = options && options.noOverrided,\r\n                overrides = options && options.overrides || {};\r\n\r\n            for (var name in props) {\r\n                if (name === \"constructor\") {\r\n                    continue;\r\n                }\r\n\r\n                // Check if we're overwriting an existing function\r\n                var prop = props[name];\r\n                if (typeof props[name] == \"function\") {\r\n                    proto[name] =  !prop._constructor && !noOverrided && typeof _super[name] == \"function\" ?\r\n                          (function(name, fn, superFn) {\r\n                            return function() {\r\n                                var tmp = this.overrided;\r\n\r\n                                // Add a new ._super() method that is the same method\r\n                                // but on the super-class\r\n                                this.overrided = superFn;\r\n\r\n                                // The method only need to be bound temporarily, so we\r\n                                // remove it when we're done executing\r\n                                var ret = fn.apply(this, arguments);\r\n\r\n                                this.overrided = tmp;\r\n\r\n                                return ret;\r\n                            };\r\n                        })(name, prop, _super[name]) :\r\n                        prop;\r\n                } else if (types.isPlainObject(prop) && prop!==null && (prop.get)) {\r\n                    Object.defineProperty(proto,name,prop);\r\n                } else {\r\n                    proto[name] = prop;\r\n                }\r\n            }\r\n            return ctor;\r\n        }\r\n\r\n        function serialMixins(ctor,mixins) {\r\n            var result = [];\r\n\r\n            mixins.forEach(function(mixin){\r\n                if (has(mixin,\"__mixins__\")) {\r\n                     throw new Error(\"nested mixins\");\r\n                }\r\n                var clss = [];\r\n                while (mixin) {\r\n                    clss.unshift(mixin);\r\n                    mixin = mixin.superclass;\r\n                }\r\n                result = result.concat(clss);\r\n            });\r\n\r\n            result = uniq(result);\r\n\r\n            result = result.filter(function(mixin){\r\n                var cls = ctor;\r\n                while (cls) {\r\n                    if (mixin === cls) {\r\n                        return false;\r\n                    }\r\n                    if (has(cls,\"__mixins__\")) {\r\n                        var clsMixines = cls[\"__mixins__\"];\r\n                        for (var i=0; i<clsMixines.length;i++) {\r\n                            if (clsMixines[i]===mixin) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                    cls = cls.superclass;\r\n                }\r\n                return true;\r\n            });\r\n\r\n            if (result.length>0) {\r\n                return result;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        function mergeMixins(ctor,mixins) {\r\n            var newCtor =ctor;\r\n            for (var i=0;i<mixins.length;i++) {\r\n                var xtor = new Function();\r\n                xtor.prototype = Object.create(newCtor.prototype);\r\n                xtor.__proto__ = newCtor;\r\n                xtor.superclass = null;\r\n                mixin(xtor.prototype,mixins[i].prototype);\r\n                xtor.prototype.__mixin__ = mixins[i];\r\n                newCtor = xtor;\r\n            }\r\n\r\n            return newCtor;\r\n        }\r\n\r\n        function _constructor ()  {\r\n            if (this._construct) {\r\n                return this._construct.apply(this, arguments);\r\n            } else  if (this.init) {\r\n                return this.init.apply(this, arguments);\r\n            }\r\n        }\r\n\r\n        return function createClass(props, parent, mixins,options) {\r\n            if (isArray(parent)) {\r\n                options = mixins;\r\n                mixins = parent;\r\n                parent = null;\r\n            }\r\n            parent = parent || Object;\r\n\r\n            if (isDefined(mixins) && !isArray(mixins)) {\r\n                options = mixins;\r\n                mixins = false;\r\n            }\r\n\r\n            var innerParent = parent;\r\n\r\n            if (mixins) {\r\n                mixins = serialMixins(innerParent,mixins);\r\n            }\r\n\r\n            if (mixins) {\r\n                innerParent = mergeMixins(innerParent,mixins);\r\n            }\r\n\r\n            var klassName = props.klassName || \"\",\r\n                ctor = new Function(\r\n                    \"return function \" + klassName + \"() {\" +\r\n                    \"var inst = this,\" +\r\n                    \" ctor = arguments.callee;\" +\r\n                    \"if (!(inst instanceof ctor)) {\" +\r\n                    \"inst = Object.create(ctor.prototype);\" +\r\n                    \"}\" +\r\n                    \"return ctor._constructor.apply(inst, arguments) || inst;\" + \r\n                    \"}\"\r\n                )();\r\n\r\n\r\n            // Populate our constructed prototype object\r\n            ctor.prototype = Object.create(innerParent.prototype);\r\n\r\n            // Enforce the constructor to be what we expect\r\n            ctor.prototype.constructor = ctor;\r\n            ctor.superclass = parent;\r\n\r\n            // And make this class extendable\r\n            ctor.__proto__ = innerParent;\r\n\r\n\r\n            if (!ctor._constructor) {\r\n                ctor._constructor = _constructor;\r\n            } \r\n\r\n            if (mixins) {\r\n                ctor.__mixins__ = mixins;\r\n            }\r\n\r\n            if (!ctor.partial) {\r\n                ctor.partial = function(props, options) {\r\n                    return extendClass(this, props, options);\r\n                };\r\n            }\r\n            if (!ctor.inherit) {\r\n                ctor.inherit = function(props, mixins,options) {\r\n                    return createClass(props, this, mixins,options);\r\n                };\r\n            }\r\n\r\n            ctor.partial(props, options);\r\n\r\n            return ctor;\r\n        };\r\n    }\r\n\r\n    var createClass = f1();\r\n\r\n    return skylark.attach(\"langx.klass\",createClass);\r\n});\ndefine('skylark-langx-klass/main',[\r\n\t\"./klass\"\r\n],function(klass){\r\n\treturn klass;\r\n});\ndefine('skylark-langx-klass', ['skylark-langx-klass/main'], function (main) { return main; });\n\ndefine('skylark-langx/klass',[\r\n    \"skylark-langx-klass\"\r\n],function(klass){\r\n    return klass;\r\n});\ndefine('skylark-langx/ArrayStore',[\r\n    \"./klass\"\r\n],function(klass){\r\n    var SimpleQueryEngine = function(query, options){\r\n        // summary:\r\n        //      Simple query engine that matches using filter functions, named filter\r\n        //      functions or objects by name-value on a query object hash\r\n        //\r\n        // description:\r\n        //      The SimpleQueryEngine provides a way of getting a QueryResults through\r\n        //      the use of a simple object hash as a filter.  The hash will be used to\r\n        //      match properties on data objects with the corresponding value given. In\r\n        //      other words, only exact matches will be returned.\r\n        //\r\n        //      This function can be used as a template for more complex query engines;\r\n        //      for example, an engine can be created that accepts an object hash that\r\n        //      contains filtering functions, or a string that gets evaluated, etc.\r\n        //\r\n        //      When creating a new dojo.store, simply set the store's queryEngine\r\n        //      field as a reference to this function.\r\n        //\r\n        // query: Object\r\n        //      An object hash with fields that may match fields of items in the store.\r\n        //      Values in the hash will be compared by normal == operator, but regular expressions\r\n        //      or any object that provides a test() method are also supported and can be\r\n        //      used to match strings by more complex expressions\r\n        //      (and then the regex's or object's test() method will be used to match values).\r\n        //\r\n        // options: dojo/store/api/Store.QueryOptions?\r\n        //      An object that contains optional information such as sort, start, and count.\r\n        //\r\n        // returns: Function\r\n        //      A function that caches the passed query under the field \"matches\".  See any\r\n        //      of the \"query\" methods on dojo.stores.\r\n        //\r\n        // example:\r\n        //      Define a store with a reference to this engine, and set up a query method.\r\n        //\r\n        //  |   var myStore = function(options){\r\n        //  |       //  ...more properties here\r\n        //  |       this.queryEngine = SimpleQueryEngine;\r\n        //  |       //  define our query method\r\n        //  |       this.query = function(query, options){\r\n        //  |           return QueryResults(this.queryEngine(query, options)(this.data));\r\n        //  |       };\r\n        //  |   };\r\n\r\n        // create our matching query function\r\n        switch(typeof query){\r\n            default:\r\n                throw new Error(\"Can not query with a \" + typeof query);\r\n            case \"object\": case \"undefined\":\r\n                var queryObject = query;\r\n                query = function(object){\r\n                    for(var key in queryObject){\r\n                        var required = queryObject[key];\r\n                        if(required && required.test){\r\n                            // an object can provide a test method, which makes it work with regex\r\n                            if(!required.test(object[key], object)){\r\n                                return false;\r\n                            }\r\n                        }else if(required != object[key]){\r\n                            return false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                };\r\n                break;\r\n            case \"string\":\r\n                // named query\r\n                if(!this[query]){\r\n                    throw new Error(\"No filter function \" + query + \" was found in store\");\r\n                }\r\n                query = this[query];\r\n                // fall through\r\n            case \"function\":\r\n                // fall through\r\n        }\r\n        \r\n        function filter(arr, callback, thisObject){\r\n            // summary:\r\n            //      Returns a new Array with those items from arr that match the\r\n            //      condition implemented by callback.\r\n            // arr: Array\r\n            //      the array to iterate over.\r\n            // callback: Function|String\r\n            //      a function that is invoked with three arguments (item,\r\n            //      index, array). The return of this function is expected to\r\n            //      be a boolean which determines whether the passed-in item\r\n            //      will be included in the returned array.\r\n            // thisObject: Object?\r\n            //      may be used to scope the call to callback\r\n            // returns: Array\r\n            // description:\r\n            //      This function corresponds to the JavaScript 1.6 Array.filter() method, with one difference: when\r\n            //      run over sparse arrays, this implementation passes the \"holes\" in the sparse array to\r\n            //      the callback function with a value of undefined. JavaScript 1.6's filter skips the holes in the sparse array.\r\n            //      For more details, see:\r\n            //      https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter\r\n            // example:\r\n            //  | // returns [2, 3, 4]\r\n            //  | array.filter([1, 2, 3, 4], function(item){ return item>1; });\r\n\r\n            // TODO: do we need \"Ctr\" here like in map()?\r\n            var i = 0, l = arr && arr.length || 0, out = [], value;\r\n            if(l && typeof arr == \"string\") arr = arr.split(\"\");\r\n            if(typeof callback == \"string\") callback = cache[callback] || buildFn(callback);\r\n            if(thisObject){\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback.call(thisObject, value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }else{\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback(value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }\r\n            return out; // Array\r\n        }\r\n\r\n        function execute(array){\r\n            // execute the whole query, first we filter\r\n            var results = filter(array, query);\r\n            // next we sort\r\n            var sortSet = options && options.sort;\r\n            if(sortSet){\r\n                results.sort(typeof sortSet == \"function\" ? sortSet : function(a, b){\r\n                    for(var sort, i=0; sort = sortSet[i]; i++){\r\n                        var aValue = a[sort.attribute];\r\n                        var bValue = b[sort.attribute];\r\n                        // valueOf enables proper comparison of dates\r\n                        aValue = aValue != null ? aValue.valueOf() : aValue;\r\n                        bValue = bValue != null ? bValue.valueOf() : bValue;\r\n                        if (aValue != bValue){\r\n                            // modified by lwf 2016/07/09\r\n                            //return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                            return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                        }\r\n                    }\r\n                    return 0;\r\n                });\r\n            }\r\n            // now we paginate\r\n            if(options && (options.start || options.count)){\r\n                var total = results.length;\r\n                results = results.slice(options.start || 0, (options.start || 0) + (options.count || Infinity));\r\n                results.total = total;\r\n            }\r\n            return results;\r\n        }\r\n        execute.matches = query;\r\n        return execute;\r\n    };\r\n\r\n    var QueryResults = function(results){\r\n        // summary:\r\n        //      A function that wraps the results of a store query with additional\r\n        //      methods.\r\n        // description:\r\n        //      QueryResults is a basic wrapper that allows for array-like iteration\r\n        //      over any kind of returned data from a query.  While the simplest store\r\n        //      will return a plain array of data, other stores may return deferreds or\r\n        //      promises; this wrapper makes sure that *all* results can be treated\r\n        //      the same.\r\n        //\r\n        //      Additional methods include `forEach`, `filter` and `map`.\r\n        // results: Array|dojo/promise/Promise\r\n        //      The result set as an array, or a promise for an array.\r\n        // returns:\r\n        //      An array-like object that can be used for iterating over.\r\n        // example:\r\n        //      Query a store and iterate over the results.\r\n        //\r\n        //  |   store.query({ prime: true }).forEach(function(item){\r\n        //  |       //  do something\r\n        //  |   });\r\n\r\n        if(!results){\r\n            return results;\r\n        }\r\n\r\n        var isPromise = !!results.then;\r\n        // if it is a promise it may be frozen\r\n        if(isPromise){\r\n            results = Object.delegate(results);\r\n        }\r\n        function addIterativeMethod(method){\r\n            // Always add the iterative methods so a QueryResults is\r\n            // returned whether the environment is ES3 or ES5\r\n            results[method] = function(){\r\n                var args = arguments;\r\n                var result = Deferred.when(results, function(results){\r\n                    //Array.prototype.unshift.call(args, results);\r\n                    return QueryResults(Array.prototype[method].apply(results, args));\r\n                });\r\n                // forEach should only return the result of when()\r\n                // when we're wrapping a promise\r\n                if(method !== \"forEach\" || isPromise){\r\n                    return result;\r\n                }\r\n            };\r\n        }\r\n\r\n        addIterativeMethod(\"forEach\");\r\n        addIterativeMethod(\"filter\");\r\n        addIterativeMethod(\"map\");\r\n        if(results.total == null){\r\n            results.total = Deferred.when(results, function(results){\r\n                return results.length;\r\n            });\r\n        }\r\n        return results; // Object\r\n    };\r\n\r\n    var ArrayStore = klass({\r\n        \"klassName\": \"ArrayStore\",\r\n\r\n        \"queryEngine\": SimpleQueryEngine,\r\n        \r\n        \"idProperty\": \"id\",\r\n\r\n\r\n        get: function(id){\r\n            // summary:\r\n            //      Retrieves an object by its identity\r\n            // id: Number\r\n            //      The identity to use to lookup the object\r\n            // returns: Object\r\n            //      The object in the store that matches the given id.\r\n            return this.data[this.index[id]];\r\n        },\r\n\r\n        getIdentity: function(object){\r\n            return object[this.idProperty];\r\n        },\r\n\r\n        put: function(object, options){\r\n            var data = this.data,\r\n                index = this.index,\r\n                idProperty = this.idProperty;\r\n            var id = object[idProperty] = (options && \"id\" in options) ? options.id : idProperty in object ? object[idProperty] : Math.random();\r\n            if(id in index){\r\n                // object exists\r\n                if(options && options.overwrite === false){\r\n                    throw new Error(\"Object already exists\");\r\n                }\r\n                // replace the entry in data\r\n                data[index[id]] = object;\r\n            }else{\r\n                // add the new object\r\n                index[id] = data.push(object) - 1;\r\n            }\r\n            return id;\r\n        },\r\n\r\n        add: function(object, options){\r\n            (options = options || {}).overwrite = false;\r\n            // call put with overwrite being false\r\n            return this.put(object, options);\r\n        },\r\n\r\n        remove: function(id){\r\n            // summary:\r\n            //      Deletes an object by its identity\r\n            // id: Number\r\n            //      The identity to use to delete the object\r\n            // returns: Boolean\r\n            //      Returns true if an object was removed, falsy (undefined) if no object matched the id\r\n            var index = this.index;\r\n            var data = this.data;\r\n            if(id in index){\r\n                data.splice(index[id], 1);\r\n                // now we have to reindex\r\n                this.setData(data);\r\n                return true;\r\n            }\r\n        },\r\n        query: function(query, options){\r\n            // summary:\r\n            //      Queries the store for objects.\r\n            // query: Object\r\n            //      The query to use for retrieving objects from the store.\r\n            // options: dojo/store/api/Store.QueryOptions?\r\n            //      The optional arguments to apply to the resultset.\r\n            // returns: dojo/store/api/Store.QueryResults\r\n            //      The results of the query, extended with iterative methods.\r\n            //\r\n            // example:\r\n            //      Given the following store:\r\n            //\r\n            //  |   var store = new Memory({\r\n            //  |       data: [\r\n            //  |           {id: 1, name: \"one\", prime: false },\r\n            //  |           {id: 2, name: \"two\", even: true, prime: true},\r\n            //  |           {id: 3, name: \"three\", prime: true},\r\n            //  |           {id: 4, name: \"four\", even: true, prime: false},\r\n            //  |           {id: 5, name: \"five\", prime: true}\r\n            //  |       ]\r\n            //  |   });\r\n            //\r\n            //  ...find all items where \"prime\" is true:\r\n            //\r\n            //  |   var results = store.query({ prime: true });\r\n            //\r\n            //  ...or find all items where \"even\" is true:\r\n            //\r\n            //  |   var results = store.query({ even: true });\r\n            return QueryResults(this.queryEngine(query, options)(this.data));\r\n        },\r\n\r\n        setData: function(data){\r\n            // summary:\r\n            //      Sets the given data as the source for this store, and indexes it\r\n            // data: Object[]\r\n            //      An array of objects to use as the source of data.\r\n            if(data.items){\r\n                // just for convenience with the data format IFRS expects\r\n                this.idProperty = data.identifier || this.idProperty;\r\n                data = this.data = data.items;\r\n            }else{\r\n                this.data = data;\r\n            }\r\n            this.index = {};\r\n            for(var i = 0, l = data.length; i < l; i++){\r\n                this.index[data[i][this.idProperty]] = i;\r\n            }\r\n        },\r\n\r\n        init: function(options) {\r\n            for(var i in options){\r\n                this[i] = options[i];\r\n            }\r\n            this.setData(this.data || []);\r\n        }\r\n\r\n    });\r\n\r\n\treturn ArrayStore;\r\n});\ndefine('skylark-langx-aspect/aspect',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n\r\n  var undefined, nextId = 0;\r\n    function advise(dispatcher, type, advice, receiveArguments){\r\n        var previous = dispatcher[type];\r\n        var around = type == \"around\";\r\n        var signal;\r\n        if(around){\r\n            var advised = advice(function(){\r\n                return previous.advice(this, arguments);\r\n            });\r\n            signal = {\r\n                remove: function(){\r\n                    if(advised){\r\n                        advised = dispatcher = advice = null;\r\n                    }\r\n                },\r\n                advice: function(target, args){\r\n                    return advised ?\r\n                        advised.apply(target, args) :  // called the advised function\r\n                        previous.advice(target, args); // cancelled, skip to next one\r\n                }\r\n            };\r\n        }else{\r\n            // create the remove handler\r\n            signal = {\r\n                remove: function(){\r\n                    if(signal.advice){\r\n                        var previous = signal.previous;\r\n                        var next = signal.next;\r\n                        if(!next && !previous){\r\n                            delete dispatcher[type];\r\n                        }else{\r\n                            if(previous){\r\n                                previous.next = next;\r\n                            }else{\r\n                                dispatcher[type] = next;\r\n                            }\r\n                            if(next){\r\n                                next.previous = previous;\r\n                            }\r\n                        }\r\n\r\n                        // remove the advice to signal that this signal has been removed\r\n                        dispatcher = advice = signal.advice = null;\r\n                    }\r\n                },\r\n                id: nextId++,\r\n                advice: advice,\r\n                receiveArguments: receiveArguments\r\n            };\r\n        }\r\n        if(previous && !around){\r\n            if(type == \"after\"){\r\n                // add the listener to the end of the list\r\n                // note that we had to change this loop a little bit to workaround a bizarre IE10 JIT bug\r\n                while(previous.next && (previous = previous.next)){}\r\n                previous.next = signal;\r\n                signal.previous = previous;\r\n            }else if(type == \"before\"){\r\n                // add to beginning\r\n                dispatcher[type] = signal;\r\n                signal.next = previous;\r\n                previous.previous = signal;\r\n            }\r\n        }else{\r\n            // around or first one just replaces\r\n            dispatcher[type] = signal;\r\n        }\r\n        return signal;\r\n    }\r\n    function aspect(type){\r\n        return function(target, methodName, advice, receiveArguments){\r\n            var existing = target[methodName], dispatcher;\r\n            if(!existing || existing.target != target){\r\n                // no dispatcher in place\r\n                target[methodName] = dispatcher = function(){\r\n                    var executionId = nextId;\r\n                    // before advice\r\n                    var args = arguments;\r\n                    var before = dispatcher.before;\r\n                    while(before){\r\n                        args = before.advice.apply(this, args) || args;\r\n                        before = before.next;\r\n                    }\r\n                    // around advice\r\n                    if(dispatcher.around){\r\n                        var results = dispatcher.around.advice(this, args);\r\n                    }\r\n                    // after advice\r\n                    var after = dispatcher.after;\r\n                    while(after && after.id < executionId){\r\n                        if(after.receiveArguments){\r\n                            var newResults = after.advice.apply(this, args);\r\n                            // change the return value only if a new value was returned\r\n                            results = newResults === undefined ? results : newResults;\r\n                        }else{\r\n                            results = after.advice.call(this, results, args);\r\n                        }\r\n                        after = after.next;\r\n                    }\r\n                    return results;\r\n                };\r\n                if(existing){\r\n                    dispatcher.around = {advice: function(target, args){\r\n                        return existing.apply(target, args);\r\n                    }};\r\n                }\r\n                dispatcher.target = target;\r\n            }\r\n            var results = advise((dispatcher || existing), type, advice, receiveArguments);\r\n            advice = null;\r\n            return results;\r\n        };\r\n    }\r\n\r\n    return skylark.attach(\"langx.aspect\",{\r\n        after: aspect(\"after\"),\r\n \r\n        around: aspect(\"around\"),\r\n        \r\n        before: aspect(\"before\")\r\n    });\r\n});\ndefine('skylark-langx-aspect/main',[\r\n\t\"./aspect\"\r\n],function(aspect){\r\n\treturn aspect;\r\n});\ndefine('skylark-langx-aspect', ['skylark-langx-aspect/main'], function (main) { return main; });\n\ndefine('skylark-langx/aspect',[\r\n    \"skylark-langx-aspect\"\r\n],function(aspect){\r\n  return aspect;\r\n});\ndefine('skylark-langx-funcs/funcs',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\"\r\n],function(skylark,types,objects){\r\n\tvar mixin = objects.mixin,\r\n        slice = Array.prototype.slice,\r\n        isFunction = types.isFunction,\r\n        isString = types.isString;\r\n\r\n    function defer(fn) {\r\n        if (requestAnimationFrame) {\r\n            requestAnimationFrame(fn);\r\n        } else {\r\n            setTimeoutout(fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function noop() {\r\n    }\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n    function debounce(fn, wait) {\r\n        var timeout;\r\n        return function () {\r\n            var context = this, args = arguments;\r\n            var later = function () {\r\n                timeout = null;\r\n                fn.apply(context, args);\r\n            };\r\n            if (timeout) clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n   \r\n    var delegate = (function() {\r\n        // boodman/crockford delegation w/ cornford optimization\r\n        function TMP() {}\r\n        return function(obj, props) {\r\n            TMP.prototype = obj;\r\n            var tmp = new TMP();\r\n            TMP.prototype = null;\r\n            if (props) {\r\n                mixin(tmp, props);\r\n            }\r\n            return tmp; // Object\r\n        };\r\n    })();\r\n\r\n\r\n    // By default, Underscore uses ERB-style template delimiters, change the\r\n    // following template settings to use alternative delimiters.\r\n    var templateSettings = {\r\n        evaluate: /<%([\\s\\S]+?)%>/g,\r\n        interpolate: /<%=([\\s\\S]+?)%>/g,\r\n        escape: /<%-([\\s\\S]+?)%>/g\r\n    };\r\n\r\n    // When customizing `templateSettings`, if you don't want to define an\r\n    // interpolation, evaluation or escaping regex, we need one that is\r\n    // guaranteed not to match.\r\n    var noMatch = /(.)^/;\r\n\r\n\r\n    // Certain characters need to be escaped so that they can be put into a\r\n    // string literal.\r\n    var escapes = {\r\n      \"'\":      \"'\",\r\n      '\\\\':     '\\\\',\r\n      '\\r':     'r',\r\n      '\\n':     'n',\r\n      '\\t':     't',\r\n      '\\u2028': 'u2028',\r\n      '\\u2029': 'u2029'\r\n    };\r\n\r\n    var escaper = /\\\\|'|\\r|\\n|\\t|\\u2028|\\u2029/g;\r\n\r\n\r\n    function template(text, data, settings) {\r\n        var render;\r\n        settings = objects.defaults({}, settings,templateSettings);\r\n\r\n        // Combine delimiters into one regular expression via alternation.\r\n        var matcher = RegExp([\r\n          (settings.escape || noMatch).source,\r\n          (settings.interpolate || noMatch).source,\r\n          (settings.evaluate || noMatch).source\r\n        ].join('|') + '|$', 'g');\r\n\r\n        // Compile the template source, escaping string literals appropriately.\r\n        var index = 0;\r\n        var source = \"__p+='\";\r\n        text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\r\n          source += text.slice(index, offset)\r\n              .replace(escaper, function(match) { return '\\\\' + escapes[match]; });\r\n\r\n          if (escape) {\r\n            source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\r\n          }\r\n          if (interpolate) {\r\n            source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\r\n          }\r\n          if (evaluate) {\r\n            source += \"';\\n\" + evaluate + \"\\n__p+='\";\r\n          }\r\n          index = offset + match.length;\r\n          return match;\r\n        });\r\n        source += \"';\\n\";\r\n\r\n        // If a variable is not specified, place data values in local scope.\r\n        if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\r\n\r\n        source = \"var __t,__p='',__j=Array.prototype.join,\" +\r\n          \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\r\n          source + 'return __p;\\n';\r\n\r\n        try {\r\n          render = new Function(settings.variable || 'obj', '_', source);\r\n        } catch (e) {\r\n          e.source = source;\r\n          throw e;\r\n        }\r\n\r\n        if (data) {\r\n          return render(data,this)\r\n        }\r\n        var template = proxy(function(data) {\r\n          return render.call(this, data,this);\r\n        },this);\r\n\r\n        // Provide the compiled source as a convenience for precompilation.\r\n        var argument = settings.variable || 'obj';\r\n        template.source = 'function(' + argument + '){\\n' + source + '}';\r\n\r\n        return template;\r\n    }\r\n\r\n\r\n    /**\r\n     * Creates a function that negates the result of the predicate `func`. The\r\n     * `func` predicate is invoked with the `this` binding and arguments of the\r\n     * created function.\r\n     * @category Function\r\n     * @param {Function} predicate The predicate to negate.\r\n     * @returns {Function} Returns the new negated function.\r\n     * @example\r\n     *\r\n     * function isEven(n) {\r\n     *   return n % 2 == 0\r\n     * }\r\n     *\r\n     * filter([1, 2, 3, 4, 5, 6], negate(isEven))\r\n     * // => [1, 3, 5]\r\n     */\r\n    function negate(predicate) {\r\n      if (typeof predicate !== 'function') {\r\n        throw new TypeError('Expected a function')\r\n      }\r\n      return function(...args) {\r\n        return !predicate.apply(this, args)\r\n      }\r\n    }\r\n\r\n\r\n    return skylark.attach(\"langx.funcs\",{\r\n        bind : proxy,\r\n        \r\n        debounce: debounce,\r\n\r\n        delegate: delegate,\r\n\r\n        defer: defer,\r\n\r\n        negate: negate,\r\n\r\n        noop : noop,\r\n\r\n        proxy: proxy,\r\n\r\n        returnTrue: function() {\r\n            return true;\r\n        },\r\n\r\n        returnFalse: function() {\r\n            return false;\r\n        },\r\n\r\n        templateSettings : templateSettings,\r\n        template : template\r\n    });\r\n});\ndefine('skylark-langx-funcs/main',[\r\n\t\"./funcs\"\r\n],function(funcs){\r\n\treturn funcs;\r\n});\ndefine('skylark-langx-funcs', ['skylark-langx-funcs/main'], function (main) { return main; });\n\ndefine('skylark-langx-async/Deferred',[\r\n    \"skylark-langx-arrays\",\r\n\t\"skylark-langx-funcs\",\r\n    \"skylark-langx-objects\"\r\n],function(arrays,funcs,objects){\r\n    \"use strict\";\r\n\r\n    var slice = Array.prototype.slice,\r\n        proxy = funcs.proxy,\r\n        makeArray = arrays.makeArray,\r\n        result = objects.result,\r\n        mixin = objects.mixin;\r\n\r\n    mixin(Promise.prototype,{\r\n        always: function(handler) {\r\n            //this.done(handler);\r\n            //this.fail(handler);\r\n            this.then(handler,handler);\r\n            return this;\r\n        },\r\n        done : function() {\r\n            for (var i = 0;i<arguments.length;i++) {\r\n                this.then(arguments[i]);\r\n            }\r\n            return this;\r\n        },\r\n        fail : function(handler) { \r\n            //return mixin(Promise.prototype.catch.call(this,handler),added);\r\n            //return this.then(null,handler);\r\n            this.catch(handler);\r\n            return this;\r\n         }\r\n    });\r\n\r\n\r\n    var Deferred = function() {\r\n        var self = this,\r\n            p = this.promise = makePromise2(new Promise(function(resolve, reject) {\r\n                self._resolve = resolve;\r\n                self._reject = reject;\r\n            }));\r\n\r\n        //wrapPromise(p,self);\r\n\r\n        //this[PGLISTENERS] = [];\r\n        //this[PGNOTIFIES] = [];\r\n\r\n        //this.resolve = Deferred.prototype.resolve.bind(this);\r\n        //this.reject = Deferred.prototype.reject.bind(this);\r\n        //this.progress = Deferred.prototype.progress.bind(this);\r\n\r\n    };\r\n\r\n   \r\n    function makePromise2(promise) {\r\n        // Don't modify any promise that has been already modified.\r\n        if (promise.isResolved) return promise;\r\n\r\n        // Set initial state\r\n        var isPending = true;\r\n        var isRejected = false;\r\n        var isResolved = false;\r\n\r\n        // Observe the promise, saving the fulfillment in a closure scope.\r\n        var result = promise.then(\r\n            function(v) {\r\n                isResolved = true;\r\n                isPending = false;\r\n                return v; \r\n            }, \r\n            function(e) {\r\n                isRejected = true;\r\n                isPending = false;\r\n                throw e; \r\n            }\r\n        );\r\n\r\n        result.isResolved = function() { return isResolved; };\r\n        result.isPending = function() { return isPending; };\r\n        result.isRejected = function() { return isRejected; };\r\n\r\n        result.state = function() {\r\n            if (isResolved) {\r\n                return 'resolved';\r\n            }\r\n            if (isRejected) {\r\n                return 'rejected';\r\n            }\r\n            return 'pending';\r\n        };\r\n\r\n        var notified = [],\r\n            listeners = [];\r\n\r\n          \r\n        result.then = function(onResolved,onRejected,onProgress) {\r\n            if (onProgress) {\r\n                this.progress(onProgress);\r\n            }\r\n            return makePromise2(Promise.prototype.then.call(this,\r\n                onResolved && function(args) {\r\n                    if (args && args.__ctx__ !== undefined) {\r\n                        return onResolved.apply(args.__ctx__,args);\r\n                    } else {\r\n                        return onResolved(args);\r\n                    }\r\n                },\r\n                onRejected && function(args){\r\n                    if (args && args.__ctx__ !== undefined) {\r\n                        return onRejected.apply(args.__ctx__,args);\r\n                    } else {\r\n                        return onRejected(args);\r\n                    }\r\n                }\r\n            ));\r\n        };\r\n\r\n        result.progress = function(handler) {\r\n            notified.forEach(function (value) {\r\n                handler(value);\r\n            });\r\n            listeners.push(handler);\r\n            return this;\r\n        };\r\n\r\n        result.pipe = result.then;\r\n\r\n        result.notify = function(value) {\r\n            try {\r\n                notified.push(value);\r\n\r\n                return listeners.forEach(function (listener) {\r\n                    return listener(value);\r\n                });\r\n            } catch (error) {\r\n            this.reject(error);\r\n            }\r\n            return this;\r\n        };\r\n\r\n        return result;\r\n    }\r\n\r\n \r\n    Deferred.prototype.resolve = function(value) {\r\n        var args = slice.call(arguments);\r\n        return this.resolveWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.resolveWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._resolve(args);\r\n        this._resolved = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.notify = function(value) {\r\n        var p = result(this,\"promise\");\r\n        p.notify(value);\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        var args = slice.call(arguments);\r\n        return this.rejectWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.rejectWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._reject(args);\r\n        this._rejected = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.isResolved = function() {\r\n        var p = result(this,\"promise\");\r\n        return p.isResolved();\r\n    };\r\n\r\n    Deferred.prototype.isRejected = function() {\r\n        var p = result(this,\"promise\");\r\n        return p.isRejected();\r\n    };\r\n\r\n    Deferred.prototype.state = function() {\r\n        var p = result(this,\"promise\");\r\n        return p.state();\r\n    };\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        var p = result(this,\"promise\");\r\n        return p.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.prototype.progress = function(progback){\r\n        var p = result(this,\"promise\");\r\n        return p.progress(progback);\r\n    };\r\n   \r\n    Deferred.prototype.catch = function(errback) {\r\n        var p = result(this,\"promise\");\r\n        return p.catch(errback);\r\n    };\r\n\r\n\r\n    Deferred.prototype.always  = function() {\r\n        var p = result(this,\"promise\");\r\n        p.always.apply(p,arguments);\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.done  = function() {\r\n        var p = result(this,\"promise\");\r\n        p.done.apply(p,arguments);\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.fail = function(errback) {\r\n        var p = result(this,\"promise\");\r\n        p.fail(errback);\r\n        return this;\r\n    };\r\n\r\n\r\n    Deferred.all = function(array) {\r\n        //return wrapPromise(Promise.all(array));\r\n        var d = new Deferred();\r\n        Promise.all(array).then(d.resolve.bind(d),d.reject.bind(d));\r\n        return result(d,\"promise\");\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return makePromise2(Promise.race(array));\r\n    };\r\n\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n        } else if (!nativePromise) {\r\n            var deferred = new Deferred(valueOrPromise.cancel);\r\n            valueOrPromise.then(proxy(deferred.resolve,deferred), proxy(deferred.reject,deferred), deferred.notify);\r\n            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve.apply(d,arguments);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n\r\n    Deferred.promise = function(callback) {\r\n        var d = new Deferred();\r\n\r\n        callback(d.resolve.bind(d),d.reject.bind(d),d.progress.bind(d));\r\n\r\n        return d.promise;\r\n    };\r\n\r\n    return Deferred;\r\n});\ndefine('skylark-langx-async/async',[\r\n    \"skylark-langx-ns\",\r\n    \"skylark-langx-objects\",\r\n    \"./Deferred\"\r\n],function(skylark,objects,Deferred){\r\n    var each = objects.each;\r\n    \r\n    var async = {\r\n        Deferred : Deferred,\r\n\r\n        parallel : function(arr,args,ctx) {\r\n            var rets = [];\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            each(arr,function(i,func){\r\n                rets.push(func.apply(ctx,args));\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        series : function(arr,args,ctx) {\r\n            var rets = [],\r\n                d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolve();\r\n            each(arr,function(i,func){\r\n                p = p.then(function(){\r\n                    return func.apply(ctx,args);\r\n                });\r\n                rets.push(p);\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        waterful : function(arr,args,ctx) {\r\n            var d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolveWith(ctx,args);\r\n\r\n            each(arr,function(i,func){\r\n                p = p.then(func);\r\n            });\r\n            return p;\r\n        }\r\n    };\r\n\r\n\treturn skylark.attach(\"langx.async\",async);\t\r\n});\ndefine('skylark-langx-async/main',[\r\n\t\"./async\"\r\n],function(async){\r\n\treturn async;\r\n});\ndefine('skylark-langx-async', ['skylark-langx-async/main'], function (main) { return main; });\n\ndefine('skylark-langx/async',[\r\n    \"skylark-langx-async\"\r\n],function(async){\r\n    return async;\r\n});\ndefine('skylark-langx-datetimes/datetimes',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n     function parseMilliSeconds(str) {\r\n\r\n        var strs = str.split(' ');\r\n        var number = parseInt(strs[0]);\r\n\r\n        if (isNaN(number)){\r\n            return 0;\r\n        }\r\n\r\n        var min = 60000 * 60;\r\n\r\n        switch (strs[1].trim().replace(/\\./g, '')) {\r\n            case 'minutes':\r\n            case 'minute':\r\n            case 'min':\r\n            case 'mm':\r\n            case 'm':\r\n                return 60000 * number;\r\n            case 'hours':\r\n            case 'hour':\r\n            case 'HH':\r\n            case 'hh':\r\n            case 'h':\r\n            case 'H':\r\n                return min * number;\r\n            case 'seconds':\r\n            case 'second':\r\n            case 'sec':\r\n            case 'ss':\r\n            case 's':\r\n                return 1000 * number;\r\n            case 'days':\r\n            case 'day':\r\n            case 'DD':\r\n            case 'dd':\r\n            case 'd':\r\n                return (min * 24) * number;\r\n            case 'months':\r\n            case 'month':\r\n            case 'MM':\r\n            case 'M':\r\n                return (min * 24 * 28) * number;\r\n            case 'weeks':\r\n            case 'week':\r\n            case 'W':\r\n            case 'w':\r\n                return (min * 24 * 7) * number;\r\n            case 'years':\r\n            case 'year':\r\n            case 'yyyy':\r\n            case 'yy':\r\n            case 'y':\r\n                return (min * 24 * 365) * number;\r\n            default:\r\n                return 0;\r\n        }\r\n    };\r\n\t\r\n\treturn skylark.attach(\"langx.datetimes\",{\r\n\t\tparseMilliSeconds\r\n\t});\r\n});\ndefine('skylark-langx-datetimes/main',[\r\n\t\"./datetimes\"\r\n],function(datetimes){\r\n\treturn datetimes;\r\n});\ndefine('skylark-langx-datetimes', ['skylark-langx-datetimes/main'], function (main) { return main; });\n\ndefine('skylark-langx/datetimes',[\r\n    \"skylark-langx-datetimes\"\r\n],function(datetimes){\r\n    return datetimes;\r\n});\ndefine('skylark-langx/Deferred',[\r\n    \"skylark-langx-async/Deferred\"\r\n],function(Deferred){\r\n    return Deferred;\r\n});\ndefine('skylark-langx-emitter/Event',[\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-funcs\",\r\n  \"skylark-langx-klass\",\r\n],function(objects,funcs,klass){\r\n    var eventMethods = {\r\n        preventDefault: \"isDefaultPrevented\",\r\n        stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n        stopPropagation: \"isPropagationStopped\"\r\n     };\r\n        \r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            objects.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = funcs.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = funcs.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n\r\n    /*\r\n    var Event = klass({\r\n        _construct : function(type,props) {\r\n            CustomEvent.call(this,type.props);\r\n            objects.safeMixin(this, props);\r\n            compatible(this);\r\n        }\r\n    },CustomEvent);\r\n    */\r\n\r\n    class Event extends CustomEvent {\r\n        constructor(type,props) {\r\n            super(type,props);\r\n            objects.safeMixin(this, props);\r\n            compatible(this);\r\n        } \r\n    }\r\n\r\n\r\n    Event.compatible = compatible;\r\n\r\n    return Event;\r\n    \r\n});\ndefine('skylark-langx-emitter/Emitter',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-arrays\",\r\n  \"skylark-langx-klass\",\r\n  \"./Event\"\r\n],function(skylark,types,objects,arrays,klass,Event){\r\n    var slice = Array.prototype.slice,\r\n        compact = arrays.compact,\r\n        isDefined = types.isDefined,\r\n        isPlainObject = types.isPlainObject,\r\n        isFunction = types.isFunction,\r\n        isString = types.isString,\r\n        isEmptyObject = types.isEmptyObject,\r\n        mixin = objects.mixin,\r\n        safeMixin = objects.safeMixin;\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            name: segs[0],\r\n            ns: segs.slice(1).join(\" \")\r\n        };\r\n    }\r\n\r\n    var Emitter = klass({\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(event) {\r\n                var parsed = parse(event),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    ns : ns,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        emit: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new Event(e); //new CustomEvent(e);\r\n            }\r\n\r\n            Object.defineProperty(e,\"target\",{\r\n                value : this\r\n            });\r\n\r\n            var args = slice.call(arguments, 1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var parsed = parse(eventName),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                var listeners = self._hub[name];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                        return this;\r\n                    }\r\n                    var listener = listeners[i];\r\n                    if (ns && (!listener.ns ||  !listener.ns.startsWith(ns))) {\r\n                        continue;\r\n                    }\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                obj.one(event, callback, this);\r\n            } else {\r\n                obj.on(event, callback, this);\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event, callback) {\r\n            return this.listenTo(obj, event, callback, 1);\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(event) {\r\n                var parsed = parse(event),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                var evts = _hub[name];\r\n\r\n                if (evts) {\r\n                    var liveEvents = [];\r\n\r\n                    if (callback || ns) {\r\n                        for (var i = 0, len = evts.length; i < len; i++) {\r\n                            \r\n                            if (callback && evts[i].fn !== callback && evts[i].fn._ !== callback) {\r\n                                liveEvents.push(evts[i]);\r\n                                continue;\r\n                            } \r\n\r\n                            if (ns && (!evts[i].ns || evts[i].ns.indexOf(ns)!=0)) {\r\n                                liveEvents.push(evts[i]);\r\n                                continue;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (liveEvents.length) {\r\n                        _hub[name] = liveEvents;\r\n                    } else {\r\n                        delete _hub[name];\r\n                    }\r\n\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    var listeningEvent = listeningEvents[eventName];\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        trigger  : function() {\r\n            return this.emit.apply(this,arguments);\r\n        }\r\n    });\r\n\r\n    Emitter.createEvent = function (type,props) {\r\n        //var e = new CustomEvent(type,props);\r\n        //return safeMixin(e, props);\r\n        return new Event(type,props);\r\n    };\r\n\r\n    Emitter.Event = Event;\r\n\r\n    return skylark.attach(\"langx.Emitter\",Emitter);\r\n\r\n});\ndefine('skylark-langx-emitter/Evented',[\r\n  \"skylark-langx-ns/ns\",\r\n\t\"./Emitter\"\r\n],function(skylark,Emitter){\r\n\treturn skylark.attach(\"langx.Evented\",Emitter);\r\n});\ndefine('skylark-langx-emitter/main',[\r\n\t\"./Emitter\",\r\n\t\"./Evented\"\r\n],function(Emitter){\r\n\treturn Emitter;\r\n});\ndefine('skylark-langx-emitter', ['skylark-langx-emitter/main'], function (main) { return main; });\n\ndefine('skylark-langx/Emitter',[\r\n    \"skylark-langx-emitter\"\r\n],function(Evented){\r\n    return Evented;\r\n});\ndefine('skylark-langx/Evented',[\r\n    \"skylark-langx-emitter\"\r\n],function(Evented){\r\n    return Evented;\r\n});\ndefine('skylark-langx/funcs',[\r\n    \"skylark-langx-funcs\"\r\n],function(funcs){\r\n    return funcs;\r\n});\ndefine('skylark-langx-hoster/hoster',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n\t// The javascript host environment, brower and nodejs are supported.\r\n\tvar hoster = {\r\n\t\t\"isBrowser\" : true, // default\r\n\t\t\"isNode\" : null,\r\n\t\t\"global\" : this,\r\n\t\t\"browser\" : null,\r\n\t\t\"node\" : null\r\n\t};\r\n\r\n\tif (typeof process == \"object\" && process.versions && process.versions.node && process.versions.v8) {\r\n\t\thoster.isNode = true;\r\n\t\thoster.isBrowser = false;\r\n\t}\r\n\r\n\thoster.global = (function(){\r\n\t\tif (typeof global !== 'undefined' && typeof global !== 'function') {\r\n\t\t\t// global spec defines a reference to the global object called 'global'\r\n\t\t\t// https://github.com/tc39/proposal-global\r\n\t\t\t// `global` is also defined in NodeJS\r\n\t\t\treturn global;\r\n\t\t} else if (typeof window !== 'undefined') {\r\n\t\t\t// window is defined in browsers\r\n\t\t\treturn window;\r\n\t\t}\r\n\t\telse if (typeof self !== 'undefined') {\r\n\t\t\t// self is defined in WebWorkers\r\n\t\t\treturn self;\r\n\t\t}\r\n\t\treturn this;\r\n\t})();\r\n\r\n\tvar _document = null;\r\n\r\n\tObject.defineProperty(hoster,\"document\",function(){\r\n\t\tif (!_document) {\r\n\t\t\tvar w = typeof window === 'undefined' ? require('html-element') : window;\r\n\t\t\t_document = w.document;\r\n\t\t}\r\n\r\n\t\treturn _document;\r\n\t});\r\n\r\n\tif (hoster.isBrowser) {\r\n\t    function uaMatch( ua ) {\r\n\t\t    ua = ua.toLowerCase();\r\n\r\n\t\t    var match = /(chrome)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(webkit)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(opera)(?:.*version|)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(msie) ([\\w.]+)/.exec( ua ) ||\r\n\t\t      ua.indexOf('compatible') < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec( ua ) ||\r\n\t\t      [];\r\n\r\n\t\t    return {\r\n\t\t      browser: match[ 1 ] || '',\r\n\t\t      version: match[ 2 ] || '0'\r\n\t\t    };\r\n\t  \t};\r\n\r\n\t    var matched = uaMatch( navigator.userAgent );\r\n\r\n\t    var browser = hoster.browser = {};\r\n\r\n\t    if ( matched.browser ) {\r\n\t      browser[ matched.browser ] = true;\r\n\t      browser.version = matched.version;\r\n\t    }\r\n\r\n\t    // Chrome is Webkit, but Webkit is also Safari.\r\n\t    if ( browser.chrome ) {\r\n\t      browser.webkit = true;\r\n\t    } else if ( browser.webkit ) {\r\n\t      browser.safari = true;\r\n\t    }\r\n\t}\r\n\r\n\treturn  skylark.attach(\"langx.hoster\",hoster);\r\n});\ndefine('skylark-langx-hoster/main',[\r\n\t\"./hoster\"\r\n],function(hoster){\r\n\treturn hoster;\r\n});\ndefine('skylark-langx-hoster', ['skylark-langx-hoster/main'], function (main) { return main; });\n\ndefine('skylark-langx/hoster',[\r\n\t\"skylark-langx-hoster\"\r\n],function(hoster){\r\n\treturn hoster;\r\n});\ndefine('skylark-langx/numbers',[\r\n\t\"skylark-langx-numbers\"\r\n],function(numbers){\r\n\treturn numbers;\r\n});\ndefine('skylark-langx/objects',[\r\n    \"skylark-langx-objects\"\r\n],function(objects){\r\n    return objects;\r\n});\ndefine('skylark-langx-strings/strings',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n    // add default escape function for escaping HTML entities\r\n    var escapeCharMap = Object.freeze({\r\n        '&': '&amp;',\r\n        '<': '&lt;',\r\n        '>': '&gt;',\r\n        '\"': '&quot;',\r\n        \"'\": '&#x27;',\r\n        '`': '&#x60;',\r\n        '=': '&#x3D;',\r\n    });\r\n    function replaceChar(c) {\r\n        return escapeCharMap[c];\r\n    }\r\n    var escapeChars = /[&<>\"'`=]/g;\r\n\r\n\r\n     /*\r\n     * Converts camel case into dashes.\r\n     * @param {String} str\r\n     * @return {String}\r\n     * @exapmle marginTop -> margin-top\r\n     */\r\n    function dasherize(str) {\r\n        return str.replace(/::/g, '/')\r\n            .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\r\n            .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\r\n            .replace(/_/g, '-')\r\n            .toLowerCase();\r\n    }\r\n\r\n    function deserializeValue(value) {\r\n        try {\r\n            return value ?\r\n                value == \"true\" ||\r\n                (value == \"false\" ? false :\r\n                    value == \"null\" ? null :\r\n                    +value + \"\" == value ? +value :\r\n                    /^[\\[\\{]/.test(value) ? JSON.parse(value) :\r\n                    value) : value;\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    function escapeHTML(str) {\r\n        if (str == null) {\r\n            return '';\r\n        }\r\n        if (!str) {\r\n            return String(str);\r\n        }\r\n\r\n        return str.toString().replace(escapeChars, replaceChar);\r\n    }\r\n\r\n    function generateUUID() {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n            var r = Math.random() * 16 | 0;\r\n            var v = c === 'x' ? r : ((r & 0x3) | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    }\r\n\r\n    function trim(str) {\r\n        return str == null ? \"\" : String.prototype.trim.call(str);\r\n    }\r\n\r\n    function substitute( /*String*/ template,\r\n        /*Object|Array*/\r\n        map,\r\n        /*Function?*/\r\n        transform,\r\n        /*Object?*/\r\n        thisObject) {\r\n        // summary:\r\n        //    Performs parameterized substitutions on a string. Throws an\r\n        //    exception if any parameter is unmatched.\r\n        // template:\r\n        //    a string with expressions in the form `${key}` to be replaced or\r\n        //    `${key:format}` which specifies a format function. keys are case-sensitive.\r\n        // map:\r\n        //    hash to search for substitutions\r\n        // transform:\r\n        //    a function to process all parameters before substitution takes\r\n\r\n\r\n        thisObject = thisObject || window;\r\n        transform = transform ?\r\n            proxy(thisObject, transform) : function(v) {\r\n                return v;\r\n            };\r\n\r\n        function getObject(key, map) {\r\n            if (key.match(/\\./)) {\r\n                var retVal,\r\n                    getValue = function(keys, obj) {\r\n                        var _k = keys.pop();\r\n                        if (_k) {\r\n                            if (!obj[_k]) return null;\r\n                            return getValue(keys, retVal = obj[_k]);\r\n                        } else {\r\n                            return retVal;\r\n                        }\r\n                    };\r\n                return getValue(key.split(\".\").reverse(), map);\r\n            } else {\r\n                return map[key];\r\n            }\r\n        }\r\n\r\n        return template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\r\n            function(match, key, format) {\r\n                var value = getObject(key, map);\r\n                if (format) {\r\n                    value = getObject(format, thisObject).call(thisObject, value, key);\r\n                }\r\n                return transform(value, key).toString();\r\n            }); // String\r\n    }\r\n\r\n    var idCounter = 0;\r\n    function uniqueId (prefix) {\r\n        var id = ++idCounter + '';\r\n        return prefix ? prefix + id : id;\r\n    }\r\n\r\n\r\n    /**\r\n     * https://github.com/cho45/micro-template.js\r\n     * (c) cho45 http://cho45.github.com/mit-license\r\n     */\r\n    function template (id, data) {\r\n\r\n        function include(name, args) {\r\n            var stash = {};\r\n            for (var key in template.context.stash) if (template.context.stash.hasOwnProperty(key)) {\r\n                stash[key] = template.context.stash[key];\r\n            }\r\n            if (args) for (var key in args) if (args.hasOwnProperty(key)) {\r\n                stash[key] = args[key];\r\n            }\r\n            var context = template.context;\r\n            context.ret += template(name, stash);\r\n            template.context = context;\r\n        }\r\n\r\n        function wrapper(name, fun) {\r\n            var current = template.context.ret;\r\n            template.context.ret = '';\r\n            fun.apply(template.context);\r\n            var content = template.context.ret;\r\n            var orig_content = template.context.stash.content;\r\n            template.context.stash.content = content;\r\n            template.context.ret = current + template(name, template.context.stash);\r\n            template.context.stash.content = orig_content;\r\n        }\r\n\r\n        var me = arguments.callee;\r\n        if (!me.cache[id]) me.cache[id] = (function () {\r\n            var name = id, string = /^[\\w\\-]+$/.test(id) ? me.get(id): (name = 'template(string)', id); // no warnings\r\n            var line = 1, body = (\r\n                \"try { \" +\r\n                    (me.variable ?  \"var \" + me.variable + \" = this.stash;\" : \"with (this.stash) { \") +\r\n                        \"this.ret += '\"  +\r\n                        string.\r\n                            replace(/<%/g, '\\x11').replace(/%>/g, '\\x13'). // if you want other tag, just edit this line\r\n                            replace(/'(?![^\\x11\\x13]+?\\x13)/g, '\\\\x27').\r\n                            replace(/^\\s*|\\s*$/g, '').\r\n                            replace(/\\n|\\r\\n/g, function () { return \"';\\nthis.line = \" + (++line) + \"; this.ret += '\\\\n\" }).\r\n                            replace(/\\x11=raw(.+?)\\x13/g, \"' + ($1) + '\").\r\n                            replace(/\\x11=(.+?)\\x13/g, \"' + this.escapeHTML($1) + '\").\r\n                            replace(/\\x11(.+?)\\x13/g, \"'; $1; this.ret += '\") +\r\n                    \"'; \" + (me.variable ? \"\" : \"}\") + \"return this.ret;\" +\r\n                \"} catch (e) { throw 'TemplateError: ' + e + ' (on \" + name + \"' + ' line ' + this.line + ')'; } \" +\r\n                \"//@ sourceURL=\" + name + \"\\n\" // source map\r\n            ).replace(/this\\.ret \\+= '';/g, '');\r\n            var func = new Function(body);\r\n            var map  = { '&' : '&amp;', '<' : '&lt;', '>' : '&gt;', '\\x22' : '&#x22;', '\\x27' : '&#x27;' };\r\n            var escapeHTML = function (string) { return (''+string).replace(/[&<>\\'\\\"]/g, function (_) { return map[_] }) };\r\n            return function (stash) { return func.call(me.context = { escapeHTML: escapeHTML, line: 1, ret : '', stash: stash }) };\r\n        })();\r\n        return data ? me.cache[id](data) : me.cache[id];\r\n    }\r\n\r\n    template.cache = {};\r\n    \r\n\r\n    template.get = function (id) {\r\n        return document.getElementById(id).innerHTML;\r\n    };\r\n\r\n    function rtrim(str) {\r\n        return str.replace(/\\s+$/g, '');\r\n    }\r\n\r\n    // Slugify a string\r\n    function slugify(str) {\r\n        str = str.replace(/^\\s+|\\s+$/g, '');\r\n\r\n        // Make the string lowercase\r\n        str = str.toLowerCase();\r\n\r\n        // Remove accents, swap ñ for n, etc\r\n        var from = \"ÁÄÂÀÃÅČÇĆĎÉĚËÈÊẼĔȆÍÌÎÏŇÑÓÖÒÔÕØŘŔŠŤÚŮÜÙÛÝŸŽáäâàãåčçćďéěëèêẽĕȇíìîïňñóöòôõøðřŕšťúůüùûýÿžþÞĐđßÆa·/_,:;\";\r\n        var to   = \"AAAAAACCCDEEEEEEEEIIIINNOOOOOORRSTUUUUUYYZaaaaaacccdeeeeeeeeiiiinnooooooorrstuuuuuyyzbBDdBAa------\";\r\n        for (var i=0, l=from.length ; i<l ; i++) {\r\n            str = str.replace(new RegExp(from.charAt(i), 'g'), to.charAt(i));\r\n        }\r\n\r\n        // Remove invalid chars\r\n        //str = str.replace(/[^a-z0-9 -]/g, '') \r\n        // Collapse whitespace and replace by -\r\n        str = str.replace(/\\s+/g, '-') \r\n        // Collapse dashes\r\n        .replace(/-+/g, '-'); \r\n\r\n        return str;\r\n    }    \r\n\r\n    // return boolean if string 'true' or string 'false', or if a parsable string which is a number\r\n    // also supports JSON object and/or arrays parsing\r\n    function toType(str) {\r\n        var type = typeof str;\r\n        if (type !== 'string') {\r\n            return str;\r\n        }\r\n        var nb = parseFloat(str);\r\n        if (!isNaN(nb) && isFinite(str)) {\r\n            return nb;\r\n        }\r\n        if (str === 'false') {\r\n            return false;\r\n        }\r\n        if (str === 'true') {\r\n            return true;\r\n        }\r\n\r\n        try {\r\n            str = JSON.parse(str);\r\n        } catch (e) {}\r\n\r\n        return str;\r\n    }\r\n\r\n\treturn skylark.attach(\"langx.strings\",{\r\n        camelCase: function(str) {\r\n            return str.replace(/-([\\da-z])/g, function(a) {\r\n                return a.toUpperCase().replace('-', '');\r\n            });\r\n        },\r\n\r\n        dasherize: dasherize,\r\n\r\n        deserializeValue: deserializeValue,\r\n\r\n        escapeHTML : escapeHTML,\r\n\r\n        generateUUID : generateUUID,\r\n\r\n        lowerFirst: function(str) {\r\n            return str.charAt(0).toLowerCase() + str.slice(1);\r\n        },\r\n\r\n        rtrim : rtrim,\r\n\r\n        serializeValue: function(value) {\r\n            return JSON.stringify(value)\r\n        },\r\n\r\n\r\n        substitute: substitute,\r\n\r\n        slugify : slugify,\r\n\r\n        //template : template,\r\n\r\n        trim: trim,\r\n\r\n        uniqueId: uniqueId,\r\n\r\n        upperFirst: function(str) {\r\n            return str.charAt(0).toUpperCase() + str.slice(1);\r\n        }\r\n\t}) ; \r\n\r\n});\ndefine('skylark-langx-strings/base64',[\r\n\t\"./strings\"\r\n],function(strings) {\r\n\r\n\t// private property\r\n\tconst _keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\n\r\n\t// private method for UTF-8 encoding\r\n\tfunction _utf8_encode(string) {\r\n\t\tstring = string.replace(/\\r\\n/g,\"\\n\");\r\n\t\tvar utftext = \"\";\r\n\r\n\t\tfor (var n = 0; n < string.length; n++) {\r\n\r\n\t\t\tvar c = string.charCodeAt(n);\r\n\r\n\t\t\tif (c < 128) {\r\n\t\t\t\tutftext += String.fromCharCode(c);\r\n\t\t\t}\r\n\t\t\telse if((c > 127) && (c < 2048)) {\r\n\t\t\t\tutftext += String.fromCharCode((c >> 6) | 192);\r\n\t\t\t\tutftext += String.fromCharCode((c & 63) | 128);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tutftext += String.fromCharCode((c >> 12) | 224);\r\n\t\t\t\tutftext += String.fromCharCode(((c >> 6) & 63) | 128);\r\n\t\t\t\tutftext += String.fromCharCode((c & 63) | 128);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn utftext;\r\n\t}\r\n\r\n\t// private method for UTF-8 decoding\r\n\tfunction _utf8_decode(utftext) {\r\n\t\tvar string = \"\";\r\n\t\tvar i = 0;\r\n\t\tvar c = c1 = c2 = 0;\r\n\r\n\t\twhile ( i < utftext.length ) {\r\n\r\n\t\t\tc = utftext.charCodeAt(i);\r\n\r\n\t\t\tif (c < 128) {\r\n\t\t\t\tstring += String.fromCharCode(c);\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t\telse if((c > 191) && (c < 224)) {\r\n\t\t\t\tc2 = utftext.charCodeAt(i+1);\r\n\t\t\t\tstring += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\r\n\t\t\t\ti += 2;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tc2 = utftext.charCodeAt(i+1);\r\n\t\t\t\tc3 = utftext.charCodeAt(i+2);\r\n\t\t\t\tstring += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\r\n\t\t\t\ti += 3;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn string;\r\n\t}\r\n\r\n\t// public method for encoding\r\n\tfunction encode(input, binary) {\r\n\t\tbinary = (binary != null) ? binary : false;\r\n\t\tvar output = \"\";\r\n\t\tvar chr1, chr2, chr3, enc1, enc2, enc3, enc4;\r\n\t\tvar i = 0;\r\n\r\n\t\tif (!binary)\r\n\t\t{\r\n\t\t\tinput = _utf8_encode(input);\r\n\t\t}\r\n\r\n\t\twhile (i < input.length) {\r\n\r\n\t\t\tchr1 = input.charCodeAt(i++);\r\n\t\t\tchr2 = input.charCodeAt(i++);\r\n\t\t\tchr3 = input.charCodeAt(i++);\r\n\r\n\t\t\tenc1 = chr1 >> 2;\r\n\t\t\tenc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\r\n\t\t\tenc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\r\n\t\t\tenc4 = chr3 & 63;\r\n\r\n\t\t\tif (isNaN(chr2)) {\r\n\t\t\t\tenc3 = enc4 = 64;\r\n\t\t\t} else if (isNaN(chr3)) {\r\n\t\t\t\tenc4 = 64;\r\n\t\t\t}\r\n\r\n\t\t\toutput = output +\r\n\t\t\tthis._keyStr.charAt(enc1) + this._keyStr.charAt(enc2) +\r\n\t\t\tthis._keyStr.charAt(enc3) + this._keyStr.charAt(enc4);\r\n\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\t// public method for decoding\r\n\tfunction decode(input, binary) {\r\n\t\tbinary = (binary != null) ? binary : false;\r\n\t\tvar output = \"\";\r\n\t\tvar chr1, chr2, chr3;\r\n\t\tvar enc1, enc2, enc3, enc4;\r\n\t\tvar i = 0;\r\n\r\n\t\tinput = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\r\n\r\n\t\twhile (i < input.length) {\r\n\r\n\t\t\tenc1 = this._keyStr.indexOf(input.charAt(i++));\r\n\t\t\tenc2 = this._keyStr.indexOf(input.charAt(i++));\r\n\t\t\tenc3 = this._keyStr.indexOf(input.charAt(i++));\r\n\t\t\tenc4 = this._keyStr.indexOf(input.charAt(i++));\r\n\r\n\t\t\tchr1 = (enc1 << 2) | (enc2 >> 4);\r\n\t\t\tchr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\r\n\t\t\tchr3 = ((enc3 & 3) << 6) | enc4;\r\n\r\n\t\t\toutput = output + String.fromCharCode(chr1);\r\n\r\n\t\t\tif (enc3 != 64) {\r\n\t\t\t\toutput = output + String.fromCharCode(chr2);\r\n\t\t\t}\r\n\t\t\tif (enc4 != 64) {\r\n\t\t\t\toutput = output + String.fromCharCode(chr3);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif (!binary) {\r\n\t\t\toutput = _utf8_decode(output);\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\r\n\t}\r\n\r\n\r\n\treturn strings.base64 = {\r\n\t\tdecode,\r\n\t\tencode\r\n\t};\r\n\t\r\n});\ndefine('skylark-langx-strings/main',[\r\n\t\"./strings\",\r\n\t\"./base64\"\r\n],function(strings){\r\n\treturn strings;\r\n});\ndefine('skylark-langx-strings', ['skylark-langx-strings/main'], function (main) { return main; });\n\ndefine('skylark-langx/strings',[\r\n    \"skylark-langx-strings\"\r\n],function(strings){\r\n    return strings;\r\n});\ndefine('skylark-langx/Stateful',[\r\n\t\"./Evented\",\r\n  \"./strings\",\r\n  \"./objects\"\r\n],function(Evented,strings,objects){\r\n    var isEqual = objects.isEqual,\r\n        mixin = objects.mixin,\r\n        result = objects.result,\r\n        isEmptyObject = objects.isEmptyObject,\r\n        clone = objects.clone,\r\n        uniqueId = strings.uniqueId;\r\n\r\n    var Stateful = Evented.inherit({\r\n        _construct : function(attributes, options) {\r\n            var attrs = attributes || {};\r\n            options || (options = {});\r\n            this.cid = uniqueId(this.cidPrefix);\r\n            this.attributes = {};\r\n            if (options.collection) this.collection = options.collection;\r\n            if (options.parse) attrs = this.parse(attrs, options) || {};\r\n            var defaults = result(this, 'defaults');\r\n            attrs = mixin({}, defaults, attrs);\r\n            this.set(attrs, options);\r\n            this.changed = {};\r\n        },\r\n\r\n        // A hash of attributes whose current and previous value differ.\r\n        changed: null,\r\n\r\n        // The value returned during the last failed validation.\r\n        validationError: null,\r\n\r\n        // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\r\n        // CouchDB users may want to set this to `\"_id\"`.\r\n        idAttribute: 'id',\r\n\r\n        // The prefix is used to create the client id which is used to identify models locally.\r\n        // You may want to override this if you're experiencing name clashes with model ids.\r\n        cidPrefix: 'c',\r\n\r\n\r\n        // Return a copy of the model's `attributes` object.\r\n        toJSON: function(options) {\r\n          return clone(this.attributes);\r\n        },\r\n\r\n\r\n        // Get the value of an attribute.\r\n        get: function(attr) {\r\n          return this.attributes[attr];\r\n        },\r\n\r\n        // Returns `true` if the attribute contains a value that is not null\r\n        // or undefined.\r\n        has: function(attr) {\r\n          return this.get(attr) != null;\r\n        },\r\n\r\n        // Set a hash of model attributes on the object, firing `\"change\"`. This is\r\n        // the core primitive operation of a model, updating the data and notifying\r\n        // anyone who needs to know about the change in state. The heart of the beast.\r\n        set: function(key, val, options) {\r\n          if (key == null) return this;\r\n\r\n          // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n          var attrs;\r\n          if (typeof key === 'object') {\r\n            attrs = key;\r\n            options = val;\r\n          } else {\r\n            (attrs = {})[key] = val;\r\n          }\r\n\r\n          options || (options = {});\r\n\r\n          // Run validation.\r\n          if (!this._validate(attrs, options)) return false;\r\n\r\n          // Extract attributes and options.\r\n          var unset      = options.unset;\r\n          var silent     = options.silent;\r\n          var changes    = [];\r\n          var changing   = this._changing;\r\n          this._changing = true;\r\n\r\n          if (!changing) {\r\n            this._previousAttributes = clone(this.attributes);\r\n            this.changed = {};\r\n          }\r\n\r\n          var current = this.attributes;\r\n          var changed = this.changed;\r\n          var prev    = this._previousAttributes;\r\n\r\n          // For each `set` attribute, update or delete the current value.\r\n          for (var attr in attrs) {\r\n            val = attrs[attr];\r\n            if (!isEqual(current[attr], val)) changes.push(attr);\r\n            if (!isEqual(prev[attr], val)) {\r\n              changed[attr] = val;\r\n            } else {\r\n              delete changed[attr];\r\n            }\r\n            unset ? delete current[attr] : current[attr] = val;\r\n          }\r\n\r\n          // Update the `id`.\r\n          if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\r\n\r\n          // Trigger all relevant attribute changes.\r\n          if (!silent) {\r\n            if (changes.length) this._pending = options;\r\n            for (var i = 0; i < changes.length; i++) {\r\n              this.trigger('change:' + changes[i], this, current[changes[i]], options);\r\n            }\r\n          }\r\n\r\n          // You might be wondering why there's a `while` loop here. Changes can\r\n          // be recursively nested within `\"change\"` events.\r\n          if (changing) return this;\r\n          if (!silent) {\r\n            while (this._pending) {\r\n              options = this._pending;\r\n              this._pending = false;\r\n              this.trigger('change', this, options);\r\n            }\r\n          }\r\n          this._pending = false;\r\n          this._changing = false;\r\n          return this;\r\n        },\r\n\r\n        // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\r\n        // if the attribute doesn't exist.\r\n        unset: function(attr, options) {\r\n          return this.set(attr, void 0, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Clear all attributes on the model, firing `\"change\"`.\r\n        clear: function(options) {\r\n          var attrs = {};\r\n          for (var key in this.attributes) attrs[key] = void 0;\r\n          return this.set(attrs, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Determine if the model has changed since the last `\"change\"` event.\r\n        // If you specify an attribute name, determine if that attribute has changed.\r\n        hasChanged: function(attr) {\r\n          if (attr == null) return !isEmptyObject(this.changed);\r\n          return this.changed[attr] !== undefined;\r\n        },\r\n\r\n        // Return an object containing all the attributes that have changed, or\r\n        // false if there are no changed attributes. Useful for determining what\r\n        // parts of a view need to be updated and/or what attributes need to be\r\n        // persisted to the server. Unset attributes will be set to undefined.\r\n        // You can also pass an attributes object to diff against the model,\r\n        // determining if there *would be* a change.\r\n        changedAttributes: function(diff) {\r\n          if (!diff) return this.hasChanged() ? clone(this.changed) : false;\r\n          var old = this._changing ? this._previousAttributes : this.attributes;\r\n          var changed = {};\r\n          for (var attr in diff) {\r\n            var val = diff[attr];\r\n            if (isEqual(old[attr], val)) continue;\r\n            changed[attr] = val;\r\n          }\r\n          return !isEmptyObject(changed) ? changed : false;\r\n        },\r\n\r\n        // Get the previous value of an attribute, recorded at the time the last\r\n        // `\"change\"` event was fired.\r\n        previous: function(attr) {\r\n          if (attr == null || !this._previousAttributes) return null;\r\n          return this._previousAttributes[attr];\r\n        },\r\n\r\n        // Get all of the attributes of the model at the time of the previous\r\n        // `\"change\"` event.\r\n        previousAttributes: function() {\r\n          return clone(this._previousAttributes);\r\n        },\r\n\r\n        // Create a new model with identical attributes to this one.\r\n        clone: function() {\r\n          return new this.constructor(this.attributes);\r\n        },\r\n\r\n        // A model is new if it has never been saved to the server, and lacks an id.\r\n        isNew: function() {\r\n          return !this.has(this.idAttribute);\r\n        },\r\n\r\n        // Check if the model is currently in a valid state.\r\n        isValid: function(options) {\r\n          return this._validate({}, mixin({}, options, {validate: true}));\r\n        },\r\n\r\n        // Run validation against the next complete set of model attributes,\r\n        // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\r\n        _validate: function(attrs, options) {\r\n          if (!options.validate || !this.validate) return true;\r\n          attrs = mixin({}, this.attributes, attrs);\r\n          var error = this.validationError = this.validate(attrs, options) || null;\r\n          if (!error) return true;\r\n          this.trigger('invalid', this, error, mixin(options, {validationError: error}));\r\n          return false;\r\n        }\r\n    });\r\n\r\n\treturn Stateful;\r\n});\ndefine('skylark-langx-topic/topic',[\r\n\t\"skylark-langx-ns\",\r\n\t\"skylark-langx-emitter/Evented\"\r\n],function(skylark,Evented){\r\n\tvar hub = new Evented();\r\n\r\n\treturn skylark.attach(\"langx.topic\",{\r\n\t    publish: function(name, arg1,argn) {\r\n\t        var data = [].slice.call(arguments, 1);\r\n\r\n\t        return hub.trigger({\r\n\t            type : name,\r\n\t            data : data\r\n\t        });\r\n\t    },\r\n\r\n        subscribe: function(name, listener,ctx) {\r\n        \tvar handler = function(e){\r\n                listener.apply(ctx,e.data);\r\n            };\r\n            hub.on(name, handler);\r\n            return {\r\n            \tremove : function(){\r\n            \t\thub.off(name,handler);\r\n            \t}\r\n            }\r\n\r\n        }\r\n\r\n\t});\r\n});\ndefine('skylark-langx-topic/main',[\r\n\t\"./topic\"\r\n],function(topic){\r\n\treturn topic;\r\n});\ndefine('skylark-langx-topic', ['skylark-langx-topic/main'], function (main) { return main; });\n\ndefine('skylark-langx/topic',[\r\n\t\"skylark-langx-topic\"\r\n],function(topic){\r\n\treturn topic;\r\n});\ndefine('skylark-langx/types',[\r\n    \"skylark-langx-types\"\r\n],function(types){\r\n    return types;\r\n});\ndefine('skylark-langx/langx',[\r\n    \"./skylark\",\r\n    \"./arrays\",\r\n    \"./ArrayStore\",\r\n    \"./aspect\",\r\n    \"./async\",\r\n    \"./datetimes\",\r\n    \"./Deferred\",\r\n    \"./Emitter\",\r\n    \"./Evented\",\r\n    \"./funcs\",\r\n    \"./hoster\",\r\n    \"./klass\",\r\n    \"./numbers\",\r\n    \"./objects\",\r\n    \"./Stateful\",\r\n    \"./strings\",\r\n    \"./topic\",\r\n    \"./types\"\r\n], function(skylark,arrays,ArrayStore,aspect,async,datetimes,Deferred,Emitter,Evented,funcs,hoster,klass,numbers,objects,Stateful,strings,topic,types) {\r\n    \"use strict\";\r\n    var toString = {}.toString,\r\n        concat = Array.prototype.concat,\r\n        indexOf = Array.prototype.indexOf,\r\n        slice = Array.prototype.slice,\r\n        filter = Array.prototype.filter,\r\n        mixin = objects.mixin,\r\n        safeMixin = objects.safeMixin,\r\n        isFunction = types.isFunction;\r\n\r\n\r\n    function funcArg(context, arg, idx, payload) {\r\n        return isFunction(arg) ? arg.call(context, idx, payload) : arg;\r\n    }\r\n\r\n    function getQueryParams(url) {\r\n        var url = url || window.location.href,\r\n            segs = url.split(\"?\"),\r\n            params = {};\r\n\r\n        if (segs.length > 1) {\r\n            segs[1].split(\"&\").forEach(function(queryParam) {\r\n                var nv = queryParam.split('=');\r\n                params[nv[0]] = nv[1];\r\n            });\r\n        }\r\n        return params;\r\n    }\r\n\r\n\r\n    function toPixel(value) {\r\n        // style values can be floats, client code may want\r\n        // to round for integer pixels.\r\n        return parseFloat(value) || 0;\r\n    }\r\n\r\n\r\n    var _uid = 1;\r\n\r\n    function uid(obj) {\r\n        return obj._uid || (obj._uid = _uid++);\r\n    }\r\n\r\n    function langx() {\r\n        return langx;\r\n    }\r\n\r\n    mixin(langx, {\r\n        createEvent : Emitter.createEvent,\r\n\r\n        funcArg: funcArg,\r\n\r\n        getQueryParams: getQueryParams,\r\n\r\n        toPixel: toPixel,\r\n\r\n        uid: uid,\r\n\r\n        URL: typeof window !== \"undefined\" ? window.URL || window.webkitURL : null\r\n\r\n    });\r\n\r\n\r\n    mixin(langx, arrays,aspect,datetimes,funcs,numbers,objects,strings,types,{\r\n        ArrayStore : ArrayStore,\r\n\r\n        async : async,\r\n        \r\n        Deferred: Deferred,\r\n\r\n        Emitter: Emitter,\r\n\r\n        Evented: Evented,\r\n\r\n        hoster : hoster,\r\n\r\n        klass : klass,\r\n       \r\n        Stateful: Stateful,\r\n\r\n        topic : topic\r\n    });\r\n\r\n    return skylark.langx = langx;\r\n});\ndefine('skylark-domx-browser/browser',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\"\r\n], function(skylark,langx) {\r\n    \"use strict\";\r\n\r\n    var browser = langx.hoster.browser;\r\n \r\n    var checkedCssProperties = {\r\n            \"transitionproperty\": \"TransitionProperty\",\r\n        },\r\n        transEndEventNames = {\r\n          WebkitTransition : 'webkitTransitionEnd',\r\n          MozTransition    : 'transitionend',\r\n          OTransition      : 'oTransitionEnd otransitionend',\r\n          transition       : 'transitionend'\r\n        },\r\n        transEndEventName = null;\r\n\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n                          testEl.mozMatchesSelector ||\r\n                          testEl.oMatchesSelector ||\r\n                          testEl.matchesSelector,\r\n\r\n        requestFullScreen = testEl.requestFullscreen || \r\n                            testEl.webkitRequestFullscreen || \r\n                            testEl.mozRequestFullScreen || \r\n                            testEl.msRequestFullscreen,\r\n\r\n        exitFullScreen =  document.exitFullscreen ||\r\n                          document.webkitCancelFullScreen ||\r\n                          document.mozCancelFullScreen ||\r\n                          document.msExitFullscreen,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n            if (transEndEventNames[name]) {\r\n              transEndEventName = transEndEventNames[name];\r\n            }\r\n        }\r\n    }\r\n\r\n    if (!transEndEventName) {\r\n        if (testStyle[\"transition\"] !== undefined) {\r\n            transEndEventName = transEndEventNames[\"transition\"];\r\n        }\r\n    }\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        isIE : !!/msie/i.exec( window.navigator.userAgent ),\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        requestFullScreen : requestFullScreen,\r\n\r\n        exitFullscreen : requestFullScreen,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {\r\n\r\n        }\r\n\r\n    });\r\n\r\n    if  (transEndEventName) {\r\n        browser.support.transition = {\r\n            end : transEndEventName\r\n        };\r\n    }\r\n\r\n    testEl = null;\r\n\r\n    return skylark.attach(\"domx.browser\",browser);\r\n});\r\n\ndefine('skylark-domx-browser/main',[\r\n\t\"./browser\"\r\n],function(browser){\r\n\treturn browser;\r\n});\ndefine('skylark-domx-browser', ['skylark-domx-browser/main'], function (main) { return main; });\n\ndefine('skylark-domx-noder/noder',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\"\r\n], function(skylark, langx, browser) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n\r\n    function activeElement(doc) {\r\n        doc = doc || document;\r\n        var el;\r\n\r\n        // Support: IE 9 only\r\n        // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\r\n        try {\r\n            el = doc.activeElement;\r\n        } catch ( error ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 9 - 11 only\r\n        // IE may return null instead of an element\r\n        // Interestingly, this only seems to occur when NOT in an iframe\r\n        if ( !el ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 11 only\r\n        // IE11 returns a seemingly empty object in some cases when accessing\r\n        // document.activeElement from an <iframe>\r\n        if ( !el.nodeName ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        return el;\r\n    };\r\n\r\n    function enhancePlaceContent(placing,node) {\r\n        if (langx.isFunction(placing)) {\r\n            return placing.apply(node,[]);\r\n        }\r\n        if (langx.isArrayLike(placing)) {\r\n            var neddsFlattern;\r\n            for (var i=0;i<placing.length;i++) {\r\n                if (langx.isFunction(placing[i])) {\r\n                    placing[i] = placing[i].apply(node,[]);\r\n                    if (langx.isArrayLike(placing[i])) {\r\n                        neddsFlattern = true;\r\n                    }\r\n                }\r\n            }\r\n            if (neddsFlattern) {\r\n                placing = langx.flatten(placing);\r\n            }\r\n        }\r\n        return placing;\r\n    }\r\n    function after(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Get the children of the specified node, including text and comment nodes.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    /*   \r\n     * Create a element and set attributes on it.\r\n     * @param {HTMLElement} tag\r\n     * @param {props} props\r\n     * @param } parent\r\n     */\r\n    function createElement(tag, props, parent) {\r\n        var node;\r\n\r\n        if (/svg/i.test(tag)) {\r\n            node = document.createElementNS(\"http://www.w3.org/2000/svg\", tag)\r\n        } else {\r\n            node = document.createElement(tag);\r\n        }\r\n\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent, node);\r\n        }\r\n        return node;\r\n    }\r\n\r\nfunction removeSelfClosingTags(xml) {\r\n    var split = xml.split(\"/>\");\r\n    var newXml = \"\";\r\n    for (var i = 0; i < split.length - 1;i++) {\r\n        var edsplit = split[i].split(\"<\");\r\n        newXml += split[i] + \"></\" + edsplit[edsplit.length - 1].split(\" \")[0] + \">\";\r\n    }\r\n    return newXml + split[split.length-1];\r\n}\r\n\r\n    /*   \r\n     * Create a DocumentFragment from the HTML fragment.\r\n     * @param {String} html\r\n     */\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = removeSelfClosingTags(\"\" + html);\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    /*   \r\n     * Create a deep copy of the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {Boolean} deep\r\n     */\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node .\r\n     * @param {String} node\r\n     * @param {Node} child\r\n     */\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    /*   \r\n     * Create a new Text node.\r\n     * @param {String} text\r\n     * @param {Node} child\r\n     */\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    /*   \r\n     * Get the current document object.\r\n     */\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    /*   \r\n     * Remove all child nodes of the set of matched elements from the DOM.\r\n     * @param {Object} node\r\n     */\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    var fulledEl = null;\r\n\r\n    function fullScreen(el) {\r\n        if (el === false) {\r\n            browser.exitFullScreen.apply(document);\r\n        } else if (el) {\r\n            browser.requestFullScreen.apply(el);\r\n            fulledEl = el;\r\n        } else {\r\n            return (\r\n                document.fullscreenElement ||\r\n                document.webkitFullscreenElement ||\r\n                document.mozFullScreenElement ||\r\n                document.msFullscreenElement\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    // Selectors\r\n    function focusable( element, hasTabindex ) {\r\n        var map, mapName, img, focusableIfVisible, fieldset,\r\n            nodeName = element.nodeName.toLowerCase();\r\n\r\n        if ( \"area\" === nodeName ) {\r\n            map = element.parentNode;\r\n            mapName = map.name;\r\n            if ( !element.href || !mapName || map.nodeName.toLowerCase() !== \"map\" ) {\r\n                return false;\r\n            }\r\n            img = $( \"img[usemap='#\" + mapName + \"']\" );\r\n            return img.length > 0 && img.is( \":visible\" );\r\n        }\r\n\r\n        if ( /^(input|select|textarea|button|object)$/.test( nodeName ) ) {\r\n            focusableIfVisible = !element.disabled;\r\n\r\n            if ( focusableIfVisible ) {\r\n\r\n                // Form controls within a disabled fieldset are disabled.\r\n                // However, controls within the fieldset's legend do not get disabled.\r\n                // Since controls generally aren't placed inside legends, we skip\r\n                // this portion of the check.\r\n                fieldset = $( element ).closest( \"fieldset\" )[ 0 ];\r\n                if ( fieldset ) {\r\n                    focusableIfVisible = !fieldset.disabled;\r\n                }\r\n            }\r\n        } else if ( \"a\" === nodeName ) {\r\n            focusableIfVisible = element.href || hasTabindex;\r\n        } else {\r\n            focusableIfVisible = hasTabindex;\r\n        }\r\n\r\n        return focusableIfVisible && $( element ).is( \":visible\" ) && visible( $( element ) );\r\n    };\r\n\r\n\r\n   var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi;\r\n \r\n    /*   \r\n     * Get the HTML contents of the first element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} html\r\n     */\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html)) {\r\n                html = html.replace( rxhtmlTag, \"<$1></$2>\" );\r\n            }\r\n            if (langx.isString(html) || langx.isNumber(html)) {               \r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isChildOf(node, parent, directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a document.\r\n     * @param {Node} node\r\n     */\r\n    function isDocument(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is in the document\r\n     * @param {Node} node\r\n     */\r\n    function isInDocument(node) {\r\n      return (node === document.body) ? true : document.body.contains(node);\r\n    }        \r\n\r\n    var blockNodes = [\"div\", \"p\", \"ul\", \"ol\", \"li\", \"blockquote\", \"hr\", \"pre\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"table\"];\r\n\r\n    function isBlockNode(node) {\r\n        if (!node || node.nodeType === 3) {\r\n          return false;\r\n        }\r\n        return new RegExp(\"^(\" + (blockNodes.join('|')) + \")$\").test(node.nodeName.toLowerCase());\r\n    }\r\n\r\n    function isActive (elem) {\r\n            return elem === document.activeElement && (elem.type || elem.href);\r\n    }\r\n\r\n    /*   \r\n     * Get the owner document object for the specified element.\r\n     * @param {Node} elm\r\n     */\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return doc.defaultView || doc.parentWindow;\r\n    }\r\n\r\n    /*   \r\n     * insert one or more nodes as the first children of the specified node.\r\n     * @param {Node} node\r\n     * @param {Node or ArrayLike} placing\r\n     * @param {Boolean Optional} copyByClone\r\n     */\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && document.defaultView.getComputedStyle(parent).position == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    /*   \r\n     * Remove the set of matched elements from the DOM.\r\n     * @param {Node} node\r\n     */\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n                node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\", e);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function removeChild(node,children) {\r\n        if (!langx.isArrayLike(children)) {\r\n            children = [children];\r\n        }\r\n        for (var i=0;i<children.length;i++) {\r\n            node.removeChild(children[i]);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollParent( elm, includeHidden ) {\r\n        var position = document.defaultView.getComputedStyle(elm).position,\r\n            excludeStaticParent = position === \"absolute\",\r\n            overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n            scrollParent = this.parents().filter( function() {\r\n                var parent = $( this );\r\n                if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                    return false;\r\n                }\r\n                return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                    parent.css( \"overflow-x\" ) );\r\n            } ).eq( 0 );\r\n\r\n        return position === \"fixed\" || !scrollParent.length ?\r\n            $( this[ 0 ].ownerDocument || document ) :\r\n            scrollParent;\r\n    };\r\n\r\n\r\n    function reflow(elm) {\r\n        if (el == null) {\r\n          elm = document;\r\n        }\r\n        elm.offsetHeight;\r\n\r\n        return this;      \r\n    }\r\n\r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {Node} node\r\n     * @param {Node} oldNode\r\n     */\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n\r\n    function selectable(elem, selectable) {\r\n        if (elem === undefined || elem.style === undefined)\r\n            return;\r\n        elem.onselectstart = selectable ? function () {\r\n            return false;\r\n        } : function () {\r\n        };\r\n        elem.style.MozUserSelect = selectable ? 'auto' : 'none';\r\n        elem.style.KhtmlUserSelect = selectable ? 'auto' : 'none';\r\n        elem.unselectable = selectable ? 'on' : 'off';\r\n    }\r\n\r\n    /*   \r\n     * traverse the specified node and its descendants, perform the callback function on each\r\n     * @param {Node} node\r\n     * @param {Function} fn\r\n     */\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} node\r\n     */\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around each element in the set of matched elements.\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around the content of each element in the set of matched\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Remove the parents of the set of matched elements from the DOM, leaving the matched\r\n     * @param {Node} node\r\n     */\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        active  : activeElement,\r\n\r\n        after: after,\r\n\r\n        append: append,\r\n\r\n        before: before,\r\n\r\n        blur : function(el) {\r\n            el.blur();\r\n        },\r\n\r\n        body: function() {\r\n            return document.body;\r\n        },\r\n\r\n        clone: clone,\r\n\r\n        contains: contains,\r\n\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n     \r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        fullScreen: fullScreen,\r\n\r\n        focusable: focusable,\r\n\r\n        html: html,\r\n\r\n        isActive,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDocument: isDocument,\r\n\r\n        isInDocument: isInDocument,\r\n\r\n        isWindow: langx.isWindow,\r\n\r\n        nodeName : nodeName,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow: ownerWindow,\r\n\r\n        prepend: prepend,\r\n\r\n        reflow: reflow,\r\n\r\n        remove: remove,\r\n\r\n        removeChild : removeChild,\r\n\r\n        replace: replace,\r\n\r\n        selectable,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.attach(\"domx.noder\" , noder);\r\n});\ndefine('skylark-domx-noder/main',[\r\n\t\"./noder\"\r\n],function(noder){\r\n\treturn noder;\r\n});\ndefine('skylark-domx-noder', ['skylark-domx-noder/main'], function (main) { return main; });\n\ndefine('skylark-domx-finder/finder',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-noder\"\r\n], function(skylark, langx, browser, noder) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        rinputs = /^(?:input|select|textarea|button)$/i,\r\n        rheader = /^h\\d$/i,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    var pseudos = local.pseudos = {\r\n        // custom pseudos\r\n        \"button\": function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === \"button\" || name === \"button\";\r\n        },\r\n\r\n        'checked': function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        'contains': function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        'eq': function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'even': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 0;\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        'focusable': function( elm ) {\r\n            return noder.focusable(elm, elm.tabindex != null );\r\n        },\r\n\r\n        'first': function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        'gt': function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        'has': function(elm, idx, nodes, sel) {\r\n            return find(elm, sel);\r\n        },\r\n\r\n        // Element/input types\r\n        \"header\": function(elem) {\r\n            return rheader.test(elem.nodeName);\r\n        },\r\n\r\n        'hidden': function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        \"input\": function(elem) {\r\n            return rinputs.test(elem.nodeName);\r\n        },\r\n\r\n        'last': function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        'lt': function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        'not': function(elm, idx, nodes, sel) {\r\n            return !matches(elm, sel);\r\n        },\r\n\r\n        'odd': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 1;\r\n        },\r\n\r\n        /*   \r\n         * Get the parent of each element in the current set of matched elements.\r\n         * @param {Object} elm\r\n         */\r\n        'parent': function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        'selected': function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        'tabbable': function(elm) {\r\n            var tabIndex = elm.tabindex,\r\n                hasTabindex = tabIndex != null;\r\n            return ( !hasTabindex || tabIndex >= 0 ) && noder.focusable( element, hasTabindex );\r\n        },\r\n\r\n        'text': function(elm) {\r\n            return elm.type === \"text\";\r\n        },\r\n\r\n        'visible': function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        },\r\n        'empty': function(elm) {\r\n            return !elm.hasChildNodes();\r\n        }\r\n    };\r\n\r\n    [\"first\", \"eq\", \"last\"].forEach(function(item) {\r\n        pseudos[item].isArrayFilter = true;\r\n    });\r\n\r\n\r\n\r\n    pseudos[\"nth\"] = pseudos[\"eq\"];\r\n\r\n    function createInputPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === type;\r\n        };\r\n    }\r\n\r\n    function createButtonPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return (name === \"input\" || name === \"button\") && elem.type === type;\r\n        };\r\n    }\r\n\r\n    // Add button/input type pseudos\r\n    for (i in {\r\n        radio: true,\r\n        checkbox: true,\r\n        file: true,\r\n        password: true,\r\n        image: true\r\n    }) {\r\n        pseudos[i] = createInputPseudo(i);\r\n    }\r\n    for (i in {\r\n        submit: true,\r\n        reset: true\r\n    }) {\r\n        pseudos[i] = createButtonPseudo(i);\r\n    }\r\n\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value) + \"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            if (tag !== \"*\") {\r\n                nativeSelector = tag.toUpperCase() + nativeSelector;\r\n            }\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes, arrayFilte) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos,\r\n\r\n            i, part, cls, pseudo;\r\n\r\n        if (!arrayFilte) {\r\n            if (tag = cond.tag) {\r\n                var nodeName = node.nodeName.toUpperCase();\r\n                if (tag == '*') {\r\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n                } else {\r\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n                }\r\n            }\r\n\r\n            if (id = cond.id) {\r\n                if (node.getAttribute('id') != id) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (classes = cond.classes) {\r\n                for (i = classes.length; i--;) {\r\n                    cls = node.getAttribute('class');\r\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\r\n                }\r\n            }\r\n\r\n            if (attributes = cond.attributes) {\r\n                for (i = attributes.length; i--;) {\r\n                    part = attributes[i];\r\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\r\n                        if (!pseudo(node, idx, nodes, part.value)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            parsed = selector;\r\n        }\r\n\r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i,\r\n            currentExpression;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node, exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    local.filterSingle = function(nodes, exp) {\r\n        var matchs = filter.call(nodes, function(node, idx) {\r\n            return local.check(node, exp, idx, nodes, false);\r\n        });\r\n\r\n        matchs = filter.call(matchs, function(node, idx) {\r\n            return local.check(node, exp, idx, matchs, true);\r\n        });\r\n        return matchs;\r\n    };\r\n\r\n    local.filter = function(nodes, selector) {\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            return local.filterSingle(nodes, selector);\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            i,\r\n            currentExpression,\r\n            ret = [];\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n\r\n                var matchs = local.filterSingle(nodes, exp);\r\n\r\n                ret = langx.uniq(ret.concat(matchs));\r\n            } else {\r\n                throw new Error(\"not supported selector:\" + selector);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n\r\n    };\r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, false)\r\n                        });\r\n\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, true)\r\n                        });\r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n    /*\r\n     * Get the nearest ancestor of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the ancestors of the specitied element , optionally filtered by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestors(node, selector, root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while ((node = node.parentNode) && (node.nodeType !== 9)) {\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (langx.isArrayLike(root)) {\r\n                    if (langx.inArray(node,root)>-1) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n            if (!selector || matches(node, selector)) {\r\n              ret.push(node); \r\n            }\r\n        }\r\n\r\n        //if (selector) {\r\n        //    ret = local.filter(ret, selector);\r\n        //}\r\n        return ret;\r\n    }\r\n\r\n\r\n    /*\r\n     * Returns a element by its ID.\r\n     * @param {string} id\r\n     */\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    /*\r\n     * Get the children of the specified element , optionally filtered by a selector.\r\n     * @param {string} node\r\n     * @param {String optionlly} selector\r\n     */\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    /*\r\n     * Get the decendant of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the nearest decendent of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the descendants of each element in the current set of matched elements, filtered by a selector, jQuery object, or element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function find(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        if (matches(elm, selector)) {\r\n            return elm;\r\n        } else {\r\n            return descendant(elm, selector);\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the findAll of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function findAll(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        return descendants(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the first child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String} first\r\n     */\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the last child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String } last\r\n     */\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Check the specified element against a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm, selector) > -1;\r\n        } else if (langx.isPlainObject(selector)) {\r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Get the nearest next sibing of the specitied element , optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional} adjacent\r\n     */\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the next siblings of the specified element , optional filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Get the parent element of the specified element. if a selector is provided, it retrieves the parent element only if it matches that selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get hte nearest previous sibling of the specified element ,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional } adjacent\r\n     */\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get all preceding siblings of each element in the set of matched elements, optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Selects all sibling elements that follow after the “prev” element, have the same parent, and match the filtering “siblings” selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling,\r\n\r\n        previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return skylark.attach(\"domx.finder\", finder);\r\n});\ndefine('skylark-domx-finder/main',[\r\n\t\"./finder\"\r\n],function(finder){\r\n\r\n\treturn finder;\r\n});\ndefine('skylark-domx-finder', ['skylark-domx-finder/main'], function (main) { return main; });\n\ndefine('skylark-domx-query/query',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-finder\"\r\n], function(skylark, langx, noder, finder) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        indexOf = Array.prototype.indexOf,\r\n        sort = Array.prototype.sort,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_node_operation(func, context, oldValueFunc) {\r\n        return function(html) {\r\n            var argType, nodes = langx.map(arguments, function(arg) {\r\n                argType = type(arg)\r\n                return argType == \"function\" || argType == \"object\" || argType == \"array\" || arg == null ?\r\n                    arg : noder.createFragment(arg)\r\n            });\r\n            if (nodes.length < 1) {\r\n                return this\r\n            }\r\n            this.each(function(idx) {\r\n                func.apply(context, [this, nodes, idx > 0]);\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = langx.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return query(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                } else {\r\n                    return [];\r\n                }\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            //if (selector === undefined) { //TODO : needs confirm?\r\n            //    selector = util;\r\n            //    util = undefined;\r\n            //}\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) { // TODO\r\n                //if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                //} else {\r\n                //    return [];\r\n                //}\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx,node) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, newArg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this;\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem,name,newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        if (langx.isString(context)) {\r\n                            context = finder.find(context);\r\n                        }\r\n\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (selector !== window && isArrayLike(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    });\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                $.ready(function() {\r\n                    selector($);\r\n                });\r\n                return rootQuery;\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        },rootQuery = $(document);\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n            length : 0,\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            forEach: function() {\r\n                return forEach.apply(this,arguments);\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            indexOf: function() {\r\n                return indexOf.apply(this,arguments);\r\n            },\r\n\r\n            sort : function() {\r\n                return sort.apply(this,arguments);\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            //remove: wrapper_every_act(noder.remove, noder),\r\n            remove : function(selector) {\r\n                if (selector) {\r\n                    return this.find(selector).remove();\r\n                }\r\n                this.each(function(i,node){\r\n                    noder.remove(node);\r\n                });\r\n                return this;\r\n            },\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                if (this.length > 0) {\r\n                    var self = this;\r\n                    if (langx.isString(selector)) {\r\n                        return some.call(self,function(elem) {\r\n                            return finder.matches(elem, selector);\r\n                        });\r\n                    } else if (langx.isArrayLike(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return langx.inArray(elem, selector) > -1;\r\n                        });\r\n                    } else if (langx.isHtmlNode(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return elem ==  selector;\r\n                        });\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            \r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx,node) {\r\n                        if (!selector.call(this, idx,node)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            html: wrapper_value(noder.html, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            pushStack : function(elms) {\r\n                var ret = $(elms);\r\n                ret.prevObject = this;\r\n                return ret;\r\n            },\r\n            \r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(html) {\r\n                /*\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index,node) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index,node) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n                */\r\n                var htmlIsFunction = typeof html === \"function\";\r\n\r\n                return this.each( function( i ) {\r\n                    $( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );\r\n                } );                \r\n            },\r\n\r\n            wrapAll: function(html) {\r\n                /*\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n                */\r\n                var wrap;\r\n\r\n                if ( this[ 0 ] ) {\r\n                    if ( typeof html === \"function\" ) {\r\n                        html = html.call( this[ 0 ] );\r\n                    }\r\n\r\n                    // The elements to wrap the target around\r\n                    wrap = $( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\r\n\r\n                    if ( this[ 0 ].parentNode ) {\r\n                        wrap.insertBefore( this[ 0 ] );\r\n                    }\r\n\r\n                    wrap.map( function() {\r\n                        var elem = this;\r\n\r\n                        while ( elem.firstElementChild ) {\r\n                            elem = elem.firstElementChild;\r\n                        }\r\n\r\n                        return elem;\r\n                    } ).append( this );\r\n                }\r\n\r\n                return this;\r\n\r\n            },\r\n\r\n            wrapInner: function(html) {\r\n                /*\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index,node) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index,node) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n                */\r\n                if ( typeof html === \"function\" ) {\r\n                    return this.each( function( i ) {\r\n                        $( this ).wrapInner( html.call( this, i ) );\r\n                    } );\r\n                }\r\n\r\n                return this.each( function() {\r\n                    var self = $( this ),\r\n                        contents = self.contents();\r\n\r\n                    if ( contents.length ) {\r\n                        contents.wrapAll( html );\r\n\r\n                    } else {\r\n                        self.append( html );\r\n                    }\r\n                } );\r\n\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                /*\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n                */\r\n                this.parent(selector).not(\"body\").each( function() {\r\n                    $(this).replaceWith(this.childNodes);\r\n                });\r\n                return this;\r\n\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSiblings, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            }\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n        $.fn.hover = function(fnOver, fnOut) {\r\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n        };\r\n\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n\r\n        langx.each( {\r\n            appendTo: \"append\",\r\n            prependTo: \"prepend\",\r\n            insertBefore: \"before\",\r\n            insertAfter: \"after\",\r\n            replaceAll: \"replaceWith\"\r\n        }, function( name, original ) {\r\n            $.fn[ name ] = function( selector ) {\r\n                var elems,\r\n                    ret = [],\r\n                    insert = $( selector ),\r\n                    last = insert.length - 1,\r\n                    i = 0;\r\n\r\n                for ( ; i <= last; i++ ) {\r\n                    elems = i === last ? this : this.clone( true );\r\n                    $( insert[ i ] )[ original ]( elems );\r\n\r\n                    // Support: Android <=4.0 only, PhantomJS 1 only\r\n                    // .get() because push.apply(_, arraylike) throws on ancient WebKit\r\n                    push.apply( ret, elems.get() );\r\n                }\r\n\r\n                return this.pushStack( ret );\r\n            };\r\n        } );\r\n\r\n/*\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceAll = function(selector) {\r\n            $(selector).replaceWith(this);\r\n            return this;\r\n        };\r\n*/\r\n        return $;\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.scrollParent = function( includeHidden ) {\r\n            var position = this.css( \"position\" ),\r\n                excludeStaticParent = position === \"absolute\",\r\n                overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n                scrollParent = this.parents().filter( function() {\r\n                    var parent = $( this );\r\n                    if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                        return false;\r\n                    }\r\n                    return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                        parent.css( \"overflow-x\" ) );\r\n                } ).eq( 0 );\r\n\r\n            return position === \"fixed\" || !scrollParent.length ?\r\n                $( this[ 0 ].ownerDocument || document ) :\r\n                scrollParent;\r\n        };\r\n\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings,prev,prevAll,next,nextAll'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n\r\n\r\n        $.fn.disableSelection = ( function() {\r\n            var eventType = \"onselectstart\" in document.createElement( \"div\" ) ?\r\n                \"selectstart\" :\r\n                \"mousedown\";\r\n\r\n            return function() {\r\n                return this.on( eventType + \".ui-disableSelection\", function( event ) {\r\n                    event.preventDefault();\r\n                } );\r\n            };\r\n        } )();\r\n\r\n        $.fn.enableSelection = function() {\r\n            return this.off( \".ui-disableSelection\" );\r\n        };\r\n\r\n        $.fn.reflow = function() {\r\n            return noder.flow(this[0]);\r\n        };\r\n\r\n        $.fn.isBlockNode = function() {\r\n            return noder.isBlockNode(this[0]);\r\n        };\r\n       \r\n\r\n    })(query);\r\n\r\n    query.fn.plugin = function(name,options) {\r\n        var args = slice.call( arguments, 1 ),\r\n            self = this,\r\n            returnValue = this;\r\n\r\n        this.each(function(){\r\n            returnValue = plugins.instantiate.apply(self,[this,name].concat(args));\r\n        });\r\n        return returnValue;\r\n    };\r\n\r\n\r\n    query.wraps = {\r\n        wrapper_node_operation,\r\n        wrapper_map,\r\n        wrapper_value,\r\n        wrapper_selector,\r\n        wrapper_some_chk,\r\n        wrapper_selector_until,\r\n        wrapper_every_act_firstArgFunc,\r\n        wrapper_every_act,\r\n        wrapper_name_value\r\n\r\n    };\r\n\r\n    return skylark.attach(\"domx.query\", query);\r\n\r\n});\ndefine('skylark-domx-query/main',[\r\n\t\"./query\"\r\n],function(query){\r\n\treturn query;\r\n});\ndefine('skylark-domx-query', ['skylark-domx-query/main'], function (main) { return main; });\n\ndefine('skylark-domx-data/data',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-noder\"\r\n], function(skylark, langx, finder,noder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n\r\n    // Strip and collapse whitespace according to HTML spec\r\n    function stripAndCollapse( value ) {\r\n      var tokens = value.match( /[^\\x20\\t\\r\\n\\f]+/g ) || [];\r\n      return tokens.join( \" \" );\r\n    }\r\n\r\n\r\n    var valHooks = {\r\n      option: {\r\n        get: function( elem ) {\r\n          var val = elem.getAttribute( \"value\" );\r\n          return val != null ?  val :  stripAndCollapse(text( elem ) );\r\n        }\r\n      },\r\n      select: {\r\n        get: function( elem ) {\r\n          var value, option, i,\r\n            options = elem.options,\r\n            index = elem.selectedIndex,\r\n            one = elem.type === \"select-one\",\r\n            values = one ? null : [],\r\n            max = one ? index + 1 : options.length;\r\n\r\n          if ( index < 0 ) {\r\n            i = max;\r\n\r\n          } else {\r\n            i = one ? index : 0;\r\n          }\r\n\r\n          // Loop through all the selected options\r\n          for ( ; i < max; i++ ) {\r\n            option = options[ i ];\r\n\r\n            if ( option.selected &&\r\n\r\n                // Don't return options that are disabled or in a disabled optgroup\r\n                !option.disabled &&\r\n                ( !option.parentNode.disabled ||\r\n                  !noder.nodeName( option.parentNode, \"optgroup\" ) ) ) {\r\n\r\n              // Get the specific value for the option\r\n              value = val(option);\r\n\r\n              // We don't need an array for one selects\r\n              if ( one ) {\r\n                return value;\r\n              }\r\n\r\n              // Multi-Selects return an array\r\n              values.push( value );\r\n            }\r\n          }\r\n\r\n          return values;\r\n        },\r\n\r\n        set: function( elem, value ) {\r\n          var optionSet, option,\r\n            options = elem.options,\r\n            values = langx.makeArray( value ),\r\n            i = options.length;\r\n\r\n          while ( i-- ) {\r\n            option = options[ i ];\r\n\r\n            /* eslint-disable no-cond-assign */\r\n\r\n            if ( option.selected =\r\n              langx.inArray( valHooks.option.get( option ), values ) > -1\r\n            ) {\r\n              optionSet = true;\r\n            }\r\n\r\n            /* eslint-enable no-cond-assign */\r\n          }\r\n\r\n          // Force browsers to behave consistently when non-matching value is set\r\n          if ( !optionSet ) {\r\n            elem.selectedIndex = -1;\r\n          }\r\n          return values;\r\n        }\r\n      }\r\n    };\r\n\r\n\r\n    // Radios and checkboxes getter/setter\r\n    langx.each( [ \"radio\", \"checkbox\" ], function() {\r\n      valHooks[ this ] = {\r\n        set: function( elem, value ) {\r\n          if ( langx.isArray( value ) ) {\r\n            return ( elem.checked = langx.inArray( val(elem), value ) > -1 );\r\n          }\r\n        }\r\n      };\r\n    });\r\n\r\n\r\n\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function aria(elm, name, value) {\r\n        return this.attr(elm, \"aria-\" + name, value);\r\n    }\r\n\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return elm.getAttribute ? elm.getAttribute(name) : elm[name];\r\n            }\r\n        } else {\r\n            elm.setAttribute ? elm.setAttribute(name, value) : elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    /*\r\n     *  Read all \"data-*\" attributes from a node\r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    /*\r\n     * xxx\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    } \r\n    /*\r\n     * Remove from the element all items that have not yet been run. \r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function cleanData(elm) {\r\n        if (elm[\"_$_store\"]) {\r\n            delete elm[\"_$_store\"];\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Remove a previously-stored piece of data. \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function removeData(elm, names) {\r\n        if (names) {\r\n            if (langx.isString(names)) {\r\n                names = names.split(/\\s+/);\r\n            }\r\n            var store = _store(elm, true);\r\n            names.forEach(function(name) {\r\n                delete store[name];\r\n            });            \r\n        } else {\r\n            cleanData(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * xxx \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    /*\r\n     * Get or set the value of an property for the specified element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * remove Attributes  \r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n\r\n    /*\r\n     * Remove the value of a property for the first element in the set of matched elements or set one or more properties for every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Get the combined text contents of each element in the set of matched elements, including their descendants, or set the text contents of the matched elements.  \r\n     * @param {Object} elm  \r\n     * @param {String} txt\r\n     */\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Get the current value of the first element in the set of matched elements or set the value of every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} value\r\n     */\r\n    function val(elm, value) {\r\n        var hooks = valHooks[ elm.type ] || valHooks[ elm.nodeName.toLowerCase() ];\r\n        if (value === undefined) {\r\n/*\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                if (/input|textarea/i.test(elm.tagName)) {\r\n                  return elm.value;\r\n                }\r\n                return text(elm);\r\n            }\r\n*/\r\n\r\n          if ( hooks &&  \"get\" in hooks &&  ( ret = hooks.get( elm, \"value\" ) ) !== undefined ) {\r\n            return ret;\r\n          }\r\n\r\n          ret = elm.value;\r\n\r\n          // Handle most common string cases\r\n          if ( typeof ret === \"string\" ) {\r\n            return ret.replace( /\\r/g, \"\" );\r\n          }\r\n\r\n          // Handle cases where value is null/undef or number\r\n          return ret == null ? \"\" : ret;\r\n\r\n        } else {\r\n/*          \r\n            if (/input|textarea/i.test(elm.tagName)) {\r\n              elm.value = value;\r\n            } else {\r\n              text(elm,value);\r\n            }\r\n            return this;\r\n*/\r\n          // Treat null/undefined as \"\"; convert numbers to string\r\n          if ( value == null ) {\r\n            value = \"\";\r\n\r\n          } else if ( typeof value === \"number\" ) {\r\n            value += \"\";\r\n\r\n          } else if ( langx.isArray( value ) ) {\r\n            value = langx.map( value, function( value1 ) {\r\n              return value1 == null ? \"\" : value1 + \"\";\r\n            } );\r\n          }\r\n\r\n          // If set returns undefined, fall back to normal setting\r\n          if ( !hooks || !( \"set\" in hooks ) || hooks.set( elm, value, \"value\" ) === undefined ) {\r\n            elm.value = value;\r\n          }\r\n        }      \r\n    }\r\n\r\n\r\n    finder.pseudos.data = function( elem, i, match,dataName ) {\r\n        return !!data( elem, dataName || match[3]);\r\n    };\r\n   \r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        aria: aria,\r\n\r\n        attr: attr,\r\n\r\n        cleanData: cleanData,\r\n\r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val,\r\n\r\n        valHooks : valHooks\r\n    });\r\n\r\n    return skylark.attach(\"domx.data\", datax);\r\n});\ndefine('skylark-domx-velm/velm',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-query\"\r\n], function(skylark, langx, noder, finder, $) {\r\n    var map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n    /*\r\n     * VisualElement is a skylark class type wrapping a visule dom node,\r\n     * provides a number of prototype methods and supports chain calls.\r\n     */\r\n    var VisualElement = langx.klass({\r\n        klassName: \"VisualElement\",\r\n\r\n        \"_construct\": function(node) {\r\n            if (langx.isString(node)) {\r\n                if (node.charAt(0) === \"<\") {\r\n                    //html\r\n                    node = noder.createFragment(node)[0];\r\n                } else {\r\n                    // id\r\n                    node = document.getElementById(node);\r\n                }\r\n            }\r\n            this._elm = node;\r\n        }\r\n    });\r\n\r\n    VisualElement.prototype.$ = VisualElement.prototype.query = function(selector) {\r\n        return $(selector,this._elm);\r\n    };\r\n\r\n    VisualElement.prototype.elm = function() {\r\n        return this._elm;\r\n    };\r\n\r\n    /*\r\n     * the VisualElement object wrapping document.body\r\n     */\r\n    var root = new VisualElement(document.body),\r\n        velm = function(node) {\r\n            if (node) {\r\n                return new VisualElement(node);\r\n            } else {\r\n                return root;\r\n            }\r\n        };\r\n    /*\r\n     * Extend VisualElement prototype with wrapping the specified methods.\r\n     * @param {ArrayLike} fn\r\n     * @param {Object} context\r\n     */\r\n    function _delegator(fn, context) {\r\n        return function() {\r\n            var self = this,\r\n                elem = self._elm,\r\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\r\n\r\n            if (ret) {\r\n                if (ret === context) {\r\n                    return self;\r\n                } else {\r\n                    if (ret instanceof HTMLElement) {\r\n                        ret = new VisualElement(ret);\r\n                    } else if (langx.isArrayLike(ret)) {\r\n                        ret = map.call(ret, function(el) {\r\n                            if (el instanceof HTMLElement) {\r\n                                return new VisualElement(el);\r\n                            } else {\r\n                                return el;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n    }\r\n\r\n    langx.mixin(velm, {\r\n        batch: function(nodes, action, args) {\r\n            nodes.forEach(function(node) {\r\n                var elm = (node instanceof VisualElement) ? node : velm(node);\r\n                elm[action].apply(elm, args);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        root: new VisualElement(document.body),\r\n\r\n        VisualElement: VisualElement,\r\n\r\n        partial: function(name, fn) {\r\n            var props = {};\r\n\r\n            props[name] = fn;\r\n\r\n            VisualElement.partial(props);\r\n        },\r\n\r\n        delegate: function(names, context) {\r\n            var props = {};\r\n\r\n            names.forEach(function(name) {\r\n                props[name] = _delegator(context[name], context);\r\n            });\r\n\r\n            VisualElement.partial(props);\r\n        }\r\n    });\r\n\r\n    // from ./finder\r\n    velm.delegate([\r\n        \"ancestor\",\r\n        \"ancestors\",\r\n        \"children\",\r\n        \"descendant\",\r\n        \"find\",\r\n        \"findAll\",\r\n        \"firstChild\",\r\n        \"lastChild\",\r\n        \"matches\",\r\n        \"nextSibling\",\r\n        \"nextSiblings\",\r\n        \"parent\",\r\n        \"previousSibling\",\r\n        \"previousSiblings\",\r\n        \"siblings\"\r\n    ], finder);\r\n\r\n    /*\r\n     * find a dom element matched by the specified selector.\r\n     * @param {String} selector\r\n     */\r\n    velm.find = function(selector) {\r\n        if (selector === \"body\") {\r\n            return this.root;\r\n        } else {\r\n            return this.root.descendant(selector);\r\n        }\r\n    };\r\n\r\n\r\n    // from ./noder\r\n    velm.delegate([\r\n        \"after\",\r\n        \"append\",\r\n        \"before\",\r\n        \"clone\",\r\n        \"contains\",\r\n        \"contents\",\r\n        \"empty\",\r\n        \"html\",\r\n        \"isChildOf\",\r\n        \"isDocument\",\r\n        \"isInDocument\",\r\n        \"isWindow\",\r\n        \"ownerDoc\",\r\n        \"prepend\",\r\n        \"remove\",\r\n        \"removeChild\",\r\n        \"replace\",\r\n        \"reverse\",\r\n        \"throb\",\r\n        \"traverse\",\r\n        \"wrapper\",\r\n        \"wrapperInner\",\r\n        \"unwrap\"\r\n    ], noder);\r\n\r\n\r\n    return skylark.attach(\"domx.velm\", velm);\r\n});\ndefine('skylark-domx-velm/main',[\r\n\t\"./velm\"\r\n],function(velm){\r\n\treturn velm;\r\n});\ndefine('skylark-domx-velm', ['skylark-domx-velm/main'], function (main) { return main; });\n\ndefine('skylark-domx-data/main',[\r\n    \"./data\",\r\n    \"skylark-domx-velm\",\r\n    \"skylark-domx-query\"    \r\n],function(data,velm,$){\r\n    // from ./data\r\n    velm.delegate([\r\n        \"attr\",\r\n        \"data\",\r\n        \"prop\",\r\n        \"removeAttr\",\r\n        \"removeData\",\r\n        \"text\",\r\n        \"val\"\r\n    ], data);\r\n\r\n    $.fn.text = $.wraps.wrapper_value(data.text, data, data.text);\r\n\r\n    $.fn.attr = $.wraps.wrapper_name_value(data.attr, data, data.attr);\r\n\r\n    $.fn.removeAttr = $.wraps.wrapper_every_act(data.removeAttr, data);\r\n\r\n    $.fn.prop = $.wraps.wrapper_name_value(data.prop, data, data.prop);\r\n\r\n    $.fn.removeProp = $.wraps.wrapper_every_act(data.removeProp, data);\r\n\r\n    $.fn.data = $.wraps.wrapper_name_value(data.data, data);\r\n\r\n    $.fn.removeData = $.wraps.wrapper_every_act(data.removeData);\r\n\r\n    $.fn.val = $.wraps.wrapper_value(data.val, data, data.val);\r\n\r\n\r\n    return data;\r\n});\ndefine('skylark-domx-data', ['skylark-domx-data/main'], function (main) { return main; });\n\ndefine('skylark-domx-eventer/eventer',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-data\"\r\n], function(skylark, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n\r\n    var NativeEventCtors = [\r\n            window[\"CustomEvent\"], // 0 default\r\n            window[\"CompositionEvent\"], // 1\r\n            window[\"DragEvent\"], // 2\r\n            window[\"Event\"], // 3\r\n            window[\"FocusEvent\"], // 4\r\n            window[\"KeyboardEvent\"], // 5\r\n            window[\"MessageEvent\"], // 6\r\n            window[\"MouseEvent\"], // 7\r\n            window[\"MouseScrollEvent\"], // 8\r\n            window[\"MouseWheelEvent\"], // 9\r\n            window[\"MutationEvent\"], // 10\r\n            window[\"ProgressEvent\"], // 11\r\n            window[\"TextEvent\"], // 12\r\n            window[\"TouchEvent\"], // 13\r\n            window[\"UIEvent\"], // 14\r\n            window[\"WheelEvent\"], // 15\r\n            window[\"ClipboardEvent\"] // 16\r\n        ],\r\n        NativeEvents = {\r\n            \"compositionstart\": 1, // CompositionEvent\r\n            \"compositionend\": 1, // CompositionEvent\r\n            \"compositionupdate\": 1, // CompositionEvent\r\n\r\n            \"beforecopy\": 16, // ClipboardEvent\r\n            \"beforecut\": 16, // ClipboardEvent\r\n            \"beforepaste\": 16, // ClipboardEvent\r\n            \"copy\": 16, // ClipboardEvent\r\n            \"cut\": 16, // ClipboardEvent\r\n            \"paste\": 16, // ClipboardEvent\r\n\r\n            \"drag\": 2, // DragEvent\r\n            \"dragend\": 2, // DragEvent\r\n            \"dragenter\": 2, // DragEvent\r\n            \"dragexit\": 2, // DragEvent\r\n            \"dragleave\": 2, // DragEvent\r\n            \"dragover\": 2, // DragEvent\r\n            \"dragstart\": 2, // DragEvent\r\n            \"drop\": 2, // DragEvent\r\n\r\n            \"abort\": 3, // Event\r\n            \"change\": 3, // Event\r\n            \"error\": 3, // Event\r\n            \"selectionchange\": 3, // Event\r\n            \"submit\": 3, // Event\r\n            \"reset\": 3, // Event\r\n\r\n            \"focus\": 4, // FocusEvent\r\n            \"blur\": 4, // FocusEvent\r\n            \"focusin\": 4, // FocusEvent\r\n            \"focusout\": 4, // FocusEvent\r\n\r\n            \"keydown\": 5, // KeyboardEvent\r\n            \"keypress\": 5, // KeyboardEvent\r\n            \"keyup\": 5, // KeyboardEvent\r\n\r\n            \"message\": 6, // MessageEvent\r\n\r\n            \"click\": 7, // MouseEvent\r\n            \"contextmenu\": 7, // MouseEvent\r\n            \"dblclick\": 7, // MouseEvent\r\n            \"mousedown\": 7, // MouseEvent\r\n            \"mouseup\": 7, // MouseEvent\r\n            \"mousemove\": 7, // MouseEvent\r\n            \"mouseover\": 7, // MouseEvent\r\n            \"mouseout\": 7, // MouseEvent\r\n            \"mouseenter\": 7, // MouseEvent\r\n            \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n            \"textInput\": 12, // TextEvent\r\n\r\n            \"touchstart\": 13, // TouchEvent\r\n            \"touchmove\": 13, // TouchEvent\r\n            \"touchend\": 13, // TouchEvent\r\n\r\n            \"load\": 14, // UIEvent\r\n            \"resize\": 14, // UIEvent\r\n            \"select\": 14, // UIEvent\r\n            \"scroll\": 14, // UIEvent\r\n            \"unload\": 14, // UIEvent,\r\n\r\n            \"wheel\": 15 // WheelEvent\r\n        };\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return NativeEventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type || {};\r\n                type = props.type || \"\";\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(src, props) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: src\r\n            };\r\n        for (key in src) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && src[key] !== undefined) {\r\n                proxy[key] = src[key];\r\n            }\r\n        }\r\n        if (props) {\r\n            langx.mixin(proxy, props);\r\n        }\r\n        return compatible(proxy, src);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings, function(idx, binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns && options.ns.indexOf(ns) === -1) {\r\n                                return;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            var originalEvent = self._event;\r\n                            if (originalEvent in hover) {\r\n                                var related = e.relatedTarget;\r\n                                if (related && (related === match || noder.contains(match, related))) {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n                    /*\r\n                                        if (event in hover) {\r\n                                            var l = self._listener;\r\n                                            self._listener = function(e) {\r\n                                                var related = e.relatedTarget;\r\n                                                if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                                    return l.apply(this, arguments);\r\n                                                }\r\n                                            }\r\n                                        }\r\n                    */\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                if (event) {\r\n                    var listener = events[event];\r\n\r\n                    if (listener) {\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                } else {\r\n                    //remove all events\r\n                    for (event in events) {\r\n                        var listener = events[event];\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    /*   \r\n     * Remove an event handler for one or more events from the specified element.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional } selector\r\n     * @param {Function} callback\r\n     */\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach an event handler function for one or more events to the selected elements.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     * @param {Boolean　Optional} one\r\n     */\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach a handler to an event for the elements. The handler is executed at most once per \r\n     * @param {HTMLElement} elm  \r\n     * @param {String} event\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     */\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Prevents propagation and clobbers the default action of the passed event. The same as calling event.preventDefault() and event.stopPropagation(). \r\n     * @param {String} event\r\n     */\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Execute all handlers and behaviors attached to the matched elements for the given event  \r\n     * @param {String} evented\r\n     * @param {String} type\r\n     * @param {Array or PlainObject } args\r\n     */\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        var fn = (evented.dispatchEvent || evented.trigger);\r\n        if (fn) {\r\n            fn.call(evented, e);\r\n        } else {\r\n            console.warn(\"The evented parameter is not a eventable object\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n    /*   \r\n     * Specify a function to execute when the DOM is fully loaded.  \r\n     * @param {Function} callback\r\n     */\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            langx.defer(callback);\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"backspace\": 8,\r\n        \"comma\": 188,\r\n        \"delete\": 46,\r\n        \"down\": 40,\r\n        \"end\": 35,\r\n        \"enter\": 13,\r\n        \"escape\": 27,\r\n        \"home\": 36,\r\n        \"left\": 37,\r\n        \"page_down\": 34,\r\n        \"page_up\": 33,\r\n        \"period\": 190,\r\n        \"right\": 39,\r\n        \"space\": 32,\r\n        \"tab\": 9,\r\n        \"up\": 38\r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    if (browser.support.transition) {\r\n        specialEvents.transitionEnd = {\r\n//          handle: function (e) {\r\n//            if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)\r\n//          },\r\n          bindType: browser.support.transition.end,\r\n          delegateType: browser.support.transition.end\r\n        }        \r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        NativeEvents : NativeEvents,\r\n        \r\n        create: createEvent,\r\n\r\n        keys: keyCodeLookup,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special: specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    each(NativeEvents,function(name){\r\n        eventer[name] = function(elm,selector,data,callback) {\r\n            if (arguments.length>1) {\r\n                return this.on(elm,name,selector,data,callback);\r\n            } else {\r\n                if (name == \"focus\") {\r\n                    if (elm.focus) {\r\n                        elm.focus();\r\n                    }\r\n                } else if (name == \"blur\") {\r\n                    if (elm.blur) {\r\n                        elm.blur();\r\n                    }\r\n                } else if (name == \"click\") {\r\n                    if (elm.click) {\r\n                        elm.click();\r\n                    }\r\n                } else {\r\n                    this.trigger(elm,name);\r\n                }\r\n\r\n                return this;\r\n            }\r\n        };\r\n    });\r\n\r\n    return skylark.attach(\"domx.eventer\",eventer);\r\n});\ndefine('skylark-domx-eventer/main',[\r\n    \"skylark-langx/langx\",\r\n    \"./eventer\",\r\n    \"skylark-domx-velm\",\r\n    \"skylark-domx-query\"        \r\n],function(langx,eventer,velm,$){\r\n\r\n    var delegateMethodNames = [\r\n        \"off\",\r\n        \"on\",\r\n        \"one\",\r\n        \"trigger\"\r\n    ];\r\n\r\n    langx.each(eventer.NativeEvents,function(name){\r\n        delegateMethodNames.push(name);\r\n    });\r\n\r\n    // from ./eventer\r\n    velm.delegate(delegateMethodNames, eventer);\r\n\r\n    langx.each(delegateMethodNames,function(i,name){\r\n        $.fn[name] = $.wraps.wrapper_every_act(eventer[name],eventer);\r\n    });\r\n\r\n\r\n    /*\r\n    $.fn.on = $.wraps.wrapper_every_act(eventer.on, eventer);\r\n\r\n    $.fn.off = $.wraps.wrapper_every_act(eventer.off, eventer);\r\n\r\n    $.fn.trigger = $.wraps.wrapper_every_act(eventer.trigger, eventer);\r\n\r\n    ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n        'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n        'change select keydown keypress keyup error transitionEnd').split(' ').forEach(function(event) {\r\n        $.fn[event] = $.wraps.wrapper_every_act(eventer[event],eventer);\r\n    });\r\n\r\n    $.fn.one = function(event, selector, data, callback) {\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = null;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = null;\r\n        }\r\n\r\n        return this.on(event, selector, data, callback, 1)\r\n    }; \r\n    */\r\n\r\n    $.ready = eventer.ready;\r\n\r\n    return eventer;\r\n});\ndefine('skylark-domx-eventer', ['skylark-domx-eventer/main'], function (main) { return main; });\n\ndefine('skylark-domx-styler/styler',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\"\r\n], function(skylark, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} value\r\n     */\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n    function disabled(elm, value ) {\r\n        if (arguments.length < 2) {\r\n            return !!this.dom.disabled;\r\n        }\r\n\r\n        elm.disabled = value;\r\n\r\n        return this;\r\n    }\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getStyles(element).getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n    /*\r\n     * Display the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    /*\r\n     * Hide the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n\r\n    function getStyles( elem ) {\r\n\r\n        // Support: IE <=11 only, Firefox <=30 (#15098, #14150)\r\n        // IE throws on elements created in popups\r\n        // FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\r\n        var view = elem.ownerDocument.defaultView;\r\n\r\n        if ( !view || !view.opener ) {\r\n            view = window;\r\n        }\r\n\r\n        return view.getComputedStyle( elem);\r\n    }\r\n\r\n\r\n    /*\r\n     * Get the value of a computed style property for the first element in the set of matched elements or set one or more CSS properties for every matched element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} property\r\n     * @param {Any} value\r\n     */\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getStyles(elm)\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(dasherize(property))\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(dasherize(prop)))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Determine whether any of the matched elements are assigned the given class.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    /*\r\n     * Remove a single class, multiple classes, or all classes from each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm, \"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Add or remove one or more classes from the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     * @param {} when\r\n     */\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: false,\r\n        cssHooks: {\r\n\r\n        },\r\n\r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        disabled : disabled,        \r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return skylark.attach(\"domx.styler\", styler);\r\n});\ndefine('skylark-domx-styler/main',[\r\n\t\"./styler\",\r\n\t\"skylark-domx-velm\",\r\n\t\"skylark-domx-query\"\t\r\n],function(styler,velm,$){\r\n\t\r\n    // from ./styler\r\n    velm.delegate([\r\n        \"addClass\",\r\n        \"className\",\r\n        \"css\",\r\n        \"hasClass\",\r\n        \"hide\",\r\n        \"isInvisible\",\r\n        \"removeClass\",\r\n        \"show\",\r\n        \"toggleClass\"\r\n    ], styler);\r\n\r\n    // properties\r\n\r\n    var properties = [ 'position', 'left', 'top', 'right', 'bottom', 'width', 'height', 'border', 'borderLeft',\r\n    'borderTop', 'borderRight', 'borderBottom', 'borderColor', 'display', 'overflow', 'margin', 'marginLeft', 'marginTop', 'marginRight', 'marginBottom', 'padding', 'paddingLeft', 'paddingTop', 'paddingRight', 'paddingBottom', 'color',\r\n    'background', 'backgroundColor', 'opacity', 'fontSize', 'fontWeight', 'textAlign', 'textDecoration', 'textTransform', 'cursor', 'zIndex' ];\r\n\r\n    properties.forEach( function ( property ) {\r\n\r\n        var method = property;\r\n\r\n        velm.VisualElement.prototype[method ] = function (value) {\r\n\r\n            this.css( property, value );\r\n\r\n            return this;\r\n\r\n        };\r\n\r\n    });\r\n\r\n\r\n    $.fn.style = $.wraps.wrapper_name_value(styler.css, styler);\r\n\r\n    $.fn.css = $.wraps.wrapper_name_value(styler.css, styler);\r\n\r\n    //hasClass(name)\r\n    $.fn.hasClass = $.wraps.wrapper_some_chk(styler.hasClass, styler);\r\n\r\n    //addClass(name)\r\n    $.fn.addClass = $.wraps.wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className);\r\n\r\n    //removeClass(name)\r\n    $.fn.removeClass = $.wraps.wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className);\r\n\r\n    //toogleClass(name,when)\r\n    $.fn.toggleClass = $.wraps.wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className);\r\n\r\n    $.fn.replaceClass = function(newClass, oldClass) {\r\n        this.removeClass(oldClass);\r\n        this.addClass(newClass);\r\n        return this;\r\n    };\r\n\r\n    $.fn.replaceClass = function(newClass, oldClass) {\r\n        this.removeClass(oldClass);\r\n        this.addClass(newClass);\r\n        return this;\r\n    };\r\n        \r\n\treturn styler;\r\n});\ndefine('skylark-domx-styler', ['skylark-domx-styler/main'], function (main) { return main; });\n\ndefine('skylark-domx-geom/geom',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-styler\"\r\n], function(skylark, langx, noder, styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel,\r\n        offsetParent = noder.offsetParent,\r\n        cachedScrollbarWidth;\r\n\r\n    function scrollbarWidth() {\r\n        if (cachedScrollbarWidth !== undefined) {\r\n            return cachedScrollbarWidth;\r\n        }\r\n        var w1, w2,\r\n            div = noder.createFragment(\"<div style=\" +\r\n                \"'display:block;position:absolute;width:200px;height:200px;overflow:hidden;'>\" +\r\n                \"<div style='height:300px;width:auto;'></div></div>\")[0],\r\n            innerDiv = div.childNodes[0];\r\n\r\n        noder.append(document.body, div);\r\n\r\n        w1 = innerDiv.offsetWidth;\r\n\r\n        styler.css(div, \"overflow\", \"scroll\");\r\n\r\n        w2 = innerDiv.offsetWidth;\r\n\r\n        if (w1 === w2) {\r\n            w2 = div[0].clientWidth;\r\n        }\r\n\r\n        noder.remove(div);\r\n\r\n        return (cachedScrollbarWidth = w1 - w2);\r\n    }\r\n    /*\r\n     * Get the widths of each border of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function borderExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth, elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    /*\r\n     * Get or set the viewport position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the viewport rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the height of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the size of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get or set the width of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the rect of the specified element content box.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n\r\n    function fullCover(elem, hor, vert) {\r\n        let vertical = vert;\r\n        let horizontal = hor;\r\n        if (langx.isUndefined(horizontal)) {\r\n            horizontal = true;\r\n        }\r\n        if (langx.isUndefined(vertical)) {\r\n            vertical = true;\r\n        }\r\n        elem.style.position = 'absolute';\r\n        if (horizontal) {\r\n            elem.style.left = 0;\r\n            elem.style.right = 0;\r\n        }\r\n        if (vertical) {\r\n            elem.style.top = 0;\r\n            elem.style.bottom = 0;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLDocument} doc\r\n     */\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each margin of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function marginExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n\r\n    function marginRect(elm) {\r\n        var obj = relativeRect(elm),\r\n            me = marginExtents(elm);\r\n\r\n        return {\r\n            left: obj.left,\r\n            top: obj.top,\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n\r\n    function marginSize(elm) {\r\n        var obj = size(elm),\r\n            me = marginExtents(elm);\r\n\r\n        return {\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each padding of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function paddingExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the position of the specified element border box , relative to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the rect of the specified element border box , relatived to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Scroll the specified element into view.\r\n     * @param {HTMLElement} elm\r\n     * @param {} align\r\n     */\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n    /*\r\n     * Get or set the current horizontal position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollLeft(elm, value) {\r\n        if (elm.nodeType === 9) {\r\n            elm = elm.defaultView;\r\n        }\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or the current vertical position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollTop(elm, value) {\r\n        if (elm.nodeType === 9) {\r\n            elm = elm.defaultView;\r\n        }\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject}dimension\r\n     */\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined && props.width !== \"\" && props.width !== null) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined && props.height !== \"\" && props.height !== null) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        fullCover,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        marginRect: marginRect,\r\n\r\n        marginSize: marginSize,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollbarWidth: scrollbarWidth,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    ( function() {\r\n        var max = Math.max,\r\n            abs = Math.abs,\r\n            rhorizontal = /left|center|right/,\r\n            rvertical = /top|center|bottom/,\r\n            roffset = /[\\+\\-]\\d+(\\.[\\d]+)?%?/,\r\n            rposition = /^\\w+/,\r\n            rpercent = /%$/;\r\n\r\n        function getOffsets( offsets, width, height ) {\r\n            return [\r\n                parseFloat( offsets[ 0 ] ) * ( rpercent.test( offsets[ 0 ] ) ? width / 100 : 1 ),\r\n                parseFloat( offsets[ 1 ] ) * ( rpercent.test( offsets[ 1 ] ) ? height / 100 : 1 )\r\n            ];\r\n        }\r\n\r\n        function parseCss( element, property ) {\r\n            return parseInt( styler.css( element, property ), 10 ) || 0;\r\n        }\r\n\r\n        function getDimensions( raw ) {\r\n            if ( raw.nodeType === 9 ) {\r\n                return {\r\n                    size: size(raw),\r\n                    offset: { top: 0, left: 0 }\r\n                };\r\n            }\r\n            if ( noder.isWindow( raw ) ) {\r\n                return {\r\n                    size: size(raw),\r\n                    offset: { \r\n                        top: scrollTop(raw), \r\n                        left: scrollLeft(raw) \r\n                    }\r\n                };\r\n            }\r\n            if ( raw.preventDefault ) {\r\n                return {\r\n                    size : {\r\n                        width: 0,\r\n                        height: 0\r\n                    },\r\n                    offset: { \r\n                        top: raw.pageY, \r\n                        left: raw.pageX \r\n                    }\r\n                };\r\n            }\r\n            return {\r\n                size: size(raw),\r\n                offset: pagePosition(raw)\r\n            };\r\n        }\r\n\r\n        function getScrollInfo( within ) {\r\n            var overflowX = within.isWindow || within.isDocument ? \"\" :\r\n                    styler.css(within.element,\"overflow-x\" ),\r\n                overflowY = within.isWindow || within.isDocument ? \"\" :\r\n                    styler.css(within.element,\"overflow-y\" ),\r\n                hasOverflowX = overflowX === \"scroll\" ||\r\n                    ( overflowX === \"auto\" && within.width < scrollWidth(within.element) ),\r\n                hasOverflowY = overflowY === \"scroll\" ||\r\n                    ( overflowY === \"auto\" && within.height < scrollHeight(within.element));\r\n            return {\r\n                width: hasOverflowY ? scrollbarWidth() : 0,\r\n                height: hasOverflowX ? scrollbarWidth() : 0\r\n            };\r\n        }\r\n\r\n        function getWithinInfo( element ) {\r\n            var withinElement = element || window,\r\n                isWindow = noder.isWindow( withinElement),\r\n                isDocument = !!withinElement && withinElement.nodeType === 9,\r\n                hasOffset = !isWindow && !isDocument,\r\n                msize = marginSize(withinElement);\r\n            return {\r\n                element: withinElement,\r\n                isWindow: isWindow,\r\n                isDocument: isDocument,\r\n                offset: hasOffset ? pagePosition(element) : { left: 0, top: 0 },\r\n                scrollLeft: scrollLeft(withinElement),\r\n                scrollTop: scrollTop(withinElement),\r\n                width: msize.width,\r\n                height: msize.height\r\n            };\r\n        }\r\n\r\n        function posit(elm,options ) {\r\n            // Make a copy, we don't want to modify arguments\r\n            options = langx.extend( {}, options );\r\n\r\n            var atOffset, targetWidth, targetHeight, targetOffset, basePosition, dimensions,\r\n                target = options.of,\r\n                within = getWithinInfo( options.within ),\r\n                scrollInfo = getScrollInfo( within ),\r\n                collision = ( options.collision || \"flip\" ).split( \" \" ),\r\n                offsets = {};\r\n\r\n            dimensions = getDimensions( target );\r\n            if ( target.preventDefault ) {\r\n\r\n                // Force left top to allow flipping\r\n                options.at = \"left top\";\r\n            }\r\n            targetWidth = dimensions.size.width;\r\n            targetHeight = dimensions.size.height;\r\n            targetOffset = dimensions.offset;\r\n\r\n            // Clone to reuse original targetOffset later\r\n            basePosition = langx.extend( {}, targetOffset );\r\n\r\n            // Force my and at to have valid horizontal and vertical positions\r\n            // if a value is missing or invalid, it will be converted to center\r\n            langx.each( [ \"my\", \"at\" ], function() {\r\n                var pos = ( options[ this ] || \"\" ).split( \" \" ),\r\n                    horizontalOffset,\r\n                    verticalOffset;\r\n\r\n                if ( pos.length === 1 ) {\r\n                    pos = rhorizontal.test( pos[ 0 ] ) ?\r\n                        pos.concat( [ \"center\" ] ) :\r\n                        rvertical.test( pos[ 0 ] ) ?\r\n                            [ \"center\" ].concat( pos ) :\r\n                            [ \"center\", \"center\" ];\r\n                }\r\n                pos[ 0 ] = rhorizontal.test( pos[ 0 ] ) ? pos[ 0 ] : \"center\";\r\n                pos[ 1 ] = rvertical.test( pos[ 1 ] ) ? pos[ 1 ] : \"center\";\r\n\r\n                // Calculate offsets\r\n                horizontalOffset = roffset.exec( pos[ 0 ] );\r\n                verticalOffset = roffset.exec( pos[ 1 ] );\r\n                offsets[ this ] = [\r\n                    horizontalOffset ? horizontalOffset[ 0 ] : 0,\r\n                    verticalOffset ? verticalOffset[ 0 ] : 0\r\n                ];\r\n\r\n                // Reduce to just the positions without the offsets\r\n                options[ this ] = [\r\n                    rposition.exec( pos[ 0 ] )[ 0 ],\r\n                    rposition.exec( pos[ 1 ] )[ 0 ]\r\n                ];\r\n            } );\r\n\r\n            // Normalize collision option\r\n            if ( collision.length === 1 ) {\r\n                collision[ 1 ] = collision[ 0 ];\r\n            }\r\n\r\n            if ( options.at[ 0 ] === \"right\" ) {\r\n                basePosition.left += targetWidth;\r\n            } else if ( options.at[ 0 ] === \"center\" ) {\r\n                basePosition.left += targetWidth / 2;\r\n            }\r\n\r\n            if ( options.at[ 1 ] === \"bottom\" ) {\r\n                basePosition.top += targetHeight;\r\n            } else if ( options.at[ 1 ] === \"center\" ) {\r\n                basePosition.top += targetHeight / 2;\r\n            }\r\n\r\n            atOffset = getOffsets( offsets.at, targetWidth, targetHeight );\r\n            basePosition.left += atOffset[ 0 ];\r\n            basePosition.top += atOffset[ 1 ];\r\n\r\n            return ( function(elem) {\r\n                var collisionPosition, using,\r\n                    msize = marginSize(elem),\r\n                    elemWidth = msize.width,\r\n                    elemHeight = msize.height,\r\n                    marginLeft = parseCss( elem, \"marginLeft\" ),\r\n                    marginTop = parseCss( elem, \"marginTop\" ),\r\n                    collisionWidth = elemWidth + marginLeft + parseCss( elem, \"marginRight\" ) +\r\n                        scrollInfo.width,\r\n                    collisionHeight = elemHeight + marginTop + parseCss( elem, \"marginBottom\" ) +\r\n                        scrollInfo.height,\r\n                    position = langx.extend( {}, basePosition ),\r\n                    myOffset = getOffsets( offsets.my, msize.width, msize.height);\r\n\r\n                if ( options.my[ 0 ] === \"right\" ) {\r\n                    position.left -= elemWidth;\r\n                } else if ( options.my[ 0 ] === \"center\" ) {\r\n                    position.left -= elemWidth / 2;\r\n                }\r\n\r\n                if ( options.my[ 1 ] === \"bottom\" ) {\r\n                    position.top -= elemHeight;\r\n                } else if ( options.my[ 1 ] === \"center\" ) {\r\n                    position.top -= elemHeight / 2;\r\n                }\r\n\r\n                position.left += myOffset[ 0 ];\r\n                position.top += myOffset[ 1 ];\r\n\r\n                collisionPosition = {\r\n                    marginLeft: marginLeft,\r\n                    marginTop: marginTop\r\n                };\r\n\r\n                langx.each( [ \"left\", \"top\" ], function( i, dir ) {\r\n                    if ( positions[ collision[ i ] ] ) {\r\n                        positions[ collision[ i ] ][ dir ]( position, {\r\n                            targetWidth: targetWidth,\r\n                            targetHeight: targetHeight,\r\n                            elemWidth: elemWidth,\r\n                            elemHeight: elemHeight,\r\n                            collisionPosition: collisionPosition,\r\n                            collisionWidth: collisionWidth,\r\n                            collisionHeight: collisionHeight,\r\n                            offset: [ atOffset[ 0 ] + myOffset[ 0 ], atOffset [ 1 ] + myOffset[ 1 ] ],\r\n                            my: options.my,\r\n                            at: options.at,\r\n                            within: within,\r\n                            elem: elem\r\n                        } );\r\n                    }\r\n                } );\r\n\r\n                if ( options.using ) {\r\n\r\n                    // Adds feedback as second argument to using callback, if present\r\n                    using = function( props ) {\r\n                        var left = targetOffset.left - position.left,\r\n                            right = left + targetWidth - elemWidth,\r\n                            top = targetOffset.top - position.top,\r\n                            bottom = top + targetHeight - elemHeight,\r\n                            feedback = {\r\n                                target: {\r\n                                    element: target,\r\n                                    left: targetOffset.left,\r\n                                    top: targetOffset.top,\r\n                                    width: targetWidth,\r\n                                    height: targetHeight\r\n                                },\r\n                                element: {\r\n                                    element: elem,\r\n                                    left: position.left,\r\n                                    top: position.top,\r\n                                    width: elemWidth,\r\n                                    height: elemHeight\r\n                                },\r\n                                horizontal: right < 0 ? \"left\" : left > 0 ? \"right\" : \"center\",\r\n                                vertical: bottom < 0 ? \"top\" : top > 0 ? \"bottom\" : \"middle\"\r\n                            };\r\n                        if ( targetWidth < elemWidth && abs( left + right ) < targetWidth ) {\r\n                            feedback.horizontal = \"center\";\r\n                        }\r\n                        if ( targetHeight < elemHeight && abs( top + bottom ) < targetHeight ) {\r\n                            feedback.vertical = \"middle\";\r\n                        }\r\n                        if ( max( abs( left ), abs( right ) ) > max( abs( top ), abs( bottom ) ) ) {\r\n                            feedback.important = \"horizontal\";\r\n                        } else {\r\n                            feedback.important = \"vertical\";\r\n                        }\r\n                        options.using.call( this, props, feedback );\r\n                    };\r\n                }\r\n\r\n                pagePosition(elem, langx.extend( position, { using: using } ));\r\n            })(elm);\r\n        }\r\n\r\n        var positions = {\r\n            fit: {\r\n                left: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.isWindow ? within.scrollLeft : within.offset.left,\r\n                        outerWidth = within.width,\r\n                        collisionPosLeft = position.left - data.collisionPosition.marginLeft,\r\n                        overLeft = withinOffset - collisionPosLeft,\r\n                        overRight = collisionPosLeft + data.collisionWidth - outerWidth - withinOffset,\r\n                        newOverRight;\r\n\r\n                    // Element is wider than within\r\n                    if ( data.collisionWidth > outerWidth ) {\r\n\r\n                        // Element is initially over the left side of within\r\n                        if ( overLeft > 0 && overRight <= 0 ) {\r\n                            newOverRight = position.left + overLeft + data.collisionWidth - outerWidth -\r\n                                withinOffset;\r\n                            position.left += overLeft - newOverRight;\r\n\r\n                        // Element is initially over right side of within\r\n                        } else if ( overRight > 0 && overLeft <= 0 ) {\r\n                            position.left = withinOffset;\r\n\r\n                        // Element is initially over both left and right sides of within\r\n                        } else {\r\n                            if ( overLeft > overRight ) {\r\n                                position.left = withinOffset + outerWidth - data.collisionWidth;\r\n                            } else {\r\n                                position.left = withinOffset;\r\n                            }\r\n                        }\r\n\r\n                    // Too far left -> align with left edge\r\n                    } else if ( overLeft > 0 ) {\r\n                        position.left += overLeft;\r\n\r\n                    // Too far right -> align with right edge\r\n                    } else if ( overRight > 0 ) {\r\n                        position.left -= overRight;\r\n\r\n                    // Adjust based on position and margin\r\n                    } else {\r\n                        position.left = max( position.left - collisionPosLeft, position.left );\r\n                    }\r\n                },\r\n                top: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.isWindow ? within.scrollTop : within.offset.top,\r\n                        outerHeight = data.within.height,\r\n                        collisionPosTop = position.top - data.collisionPosition.marginTop,\r\n                        overTop = withinOffset - collisionPosTop,\r\n                        overBottom = collisionPosTop + data.collisionHeight - outerHeight - withinOffset,\r\n                        newOverBottom;\r\n\r\n                    // Element is taller than within\r\n                    if ( data.collisionHeight > outerHeight ) {\r\n\r\n                        // Element is initially over the top of within\r\n                        if ( overTop > 0 && overBottom <= 0 ) {\r\n                            newOverBottom = position.top + overTop + data.collisionHeight - outerHeight -\r\n                                withinOffset;\r\n                            position.top += overTop - newOverBottom;\r\n\r\n                        // Element is initially over bottom of within\r\n                        } else if ( overBottom > 0 && overTop <= 0 ) {\r\n                            position.top = withinOffset;\r\n\r\n                        // Element is initially over both top and bottom of within\r\n                        } else {\r\n                            if ( overTop > overBottom ) {\r\n                                position.top = withinOffset + outerHeight - data.collisionHeight;\r\n                            } else {\r\n                                position.top = withinOffset;\r\n                            }\r\n                        }\r\n\r\n                    // Too far up -> align with top\r\n                    } else if ( overTop > 0 ) {\r\n                        position.top += overTop;\r\n\r\n                    // Too far down -> align with bottom edge\r\n                    } else if ( overBottom > 0 ) {\r\n                        position.top -= overBottom;\r\n\r\n                    // Adjust based on position and margin\r\n                    } else {\r\n                        position.top = max( position.top - collisionPosTop, position.top );\r\n                    }\r\n                }\r\n            },\r\n            flip: {\r\n                left: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.offset.left + within.scrollLeft,\r\n                        outerWidth = within.width,\r\n                        offsetLeft = within.isWindow ? within.scrollLeft : within.offset.left,\r\n                        collisionPosLeft = position.left - data.collisionPosition.marginLeft,\r\n                        overLeft = collisionPosLeft - offsetLeft,\r\n                        overRight = collisionPosLeft + data.collisionWidth - outerWidth - offsetLeft,\r\n                        myOffset = data.my[ 0 ] === \"left\" ?\r\n                            -data.elemWidth :\r\n                            data.my[ 0 ] === \"right\" ?\r\n                                data.elemWidth :\r\n                                0,\r\n                        atOffset = data.at[ 0 ] === \"left\" ?\r\n                            data.targetWidth :\r\n                            data.at[ 0 ] === \"right\" ?\r\n                                -data.targetWidth :\r\n                                0,\r\n                        offset = -2 * data.offset[ 0 ],\r\n                        newOverRight,\r\n                        newOverLeft;\r\n\r\n                    if ( overLeft < 0 ) {\r\n                        newOverRight = position.left + myOffset + atOffset + offset + data.collisionWidth -\r\n                            outerWidth - withinOffset;\r\n                        if ( newOverRight < 0 || newOverRight < abs( overLeft ) ) {\r\n                            position.left += myOffset + atOffset + offset;\r\n                        }\r\n                    } else if ( overRight > 0 ) {\r\n                        newOverLeft = position.left - data.collisionPosition.marginLeft + myOffset +\r\n                            atOffset + offset - offsetLeft;\r\n                        if ( newOverLeft > 0 || abs( newOverLeft ) < overRight ) {\r\n                            position.left += myOffset + atOffset + offset;\r\n                        }\r\n                    }\r\n                },\r\n                top: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.offset.top + within.scrollTop,\r\n                        outerHeight = within.height,\r\n                        offsetTop = within.isWindow ? within.scrollTop : within.offset.top,\r\n                        collisionPosTop = position.top - data.collisionPosition.marginTop,\r\n                        overTop = collisionPosTop - offsetTop,\r\n                        overBottom = collisionPosTop + data.collisionHeight - outerHeight - offsetTop,\r\n                        top = data.my[ 1 ] === \"top\",\r\n                        myOffset = top ?\r\n                            -data.elemHeight :\r\n                            data.my[ 1 ] === \"bottom\" ?\r\n                                data.elemHeight :\r\n                                0,\r\n                        atOffset = data.at[ 1 ] === \"top\" ?\r\n                            data.targetHeight :\r\n                            data.at[ 1 ] === \"bottom\" ?\r\n                                -data.targetHeight :\r\n                                0,\r\n                        offset = -2 * data.offset[ 1 ],\r\n                        newOverTop,\r\n                        newOverBottom;\r\n                    if ( overTop < 0 ) {\r\n                        newOverBottom = position.top + myOffset + atOffset + offset + data.collisionHeight -\r\n                            outerHeight - withinOffset;\r\n                        if ( newOverBottom < 0 || newOverBottom < abs( overTop ) ) {\r\n                            position.top += myOffset + atOffset + offset;\r\n                        }\r\n                    } else if ( overBottom > 0 ) {\r\n                        newOverTop = position.top - data.collisionPosition.marginTop + myOffset + atOffset +\r\n                            offset - offsetTop;\r\n                        if ( newOverTop > 0 || abs( newOverTop ) < overBottom ) {\r\n                            position.top += myOffset + atOffset + offset;\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            flipfit: {\r\n                left: function() {\r\n                    positions.flip.left.apply( this, arguments );\r\n                    positions.fit.left.apply( this, arguments );\r\n                },\r\n                top: function() {\r\n                    positions.flip.top.apply( this, arguments );\r\n                    positions.fit.top.apply( this, arguments );\r\n                }\r\n            }\r\n        };\r\n\r\n        geom.posit = posit;\r\n    })();\r\n\r\n    return skylark.attach(\"domx.geom\", geom);\r\n});\ndefine('skylark-domx-geom/main',[\r\n    \"skylark-langx/langx\",\r\n    \"./geom\",\r\n    \"skylark-domx-velm\",\r\n    \"skylark-domx-query\"        \r\n],function(langx,geom,velm,$){\r\n   // from ./geom\r\n    velm.delegate([\r\n        \"borderExtents\",\r\n        \"boundingPosition\",\r\n        \"boundingRect\",\r\n        \"clientHeight\",\r\n        \"clientSize\",\r\n        \"clientWidth\",\r\n        \"contentRect\",\r\n        \"height\",\r\n        \"marginExtents\",\r\n        \"offsetParent\",\r\n        \"paddingExtents\",\r\n        \"pagePosition\",\r\n        \"pageRect\",\r\n        \"relativePosition\",\r\n        \"relativeRect\",\r\n        \"scrollIntoView\",\r\n        \"scrollLeft\",\r\n        \"scrollTop\",\r\n        \"size\",\r\n        \"width\"\r\n    ], geom);\r\n\r\n    $.fn.offset = $.wraps.wrapper_value(geom.pagePosition, geom, geom.pagePosition);\r\n\r\n    $.fn.scrollTop = $.wraps.wrapper_value(geom.scrollTop, geom);\r\n\r\n    $.fn.scrollLeft = $.wraps.wrapper_value(geom.scrollLeft, geom);\r\n\r\n    $.fn.position =  function(options) {\r\n        if (!this.length) {\r\n            return this;\r\n        }\r\n\r\n        if (options) {\r\n            if (options.of && options.of.length) {\r\n                options = langx.clone(options);\r\n                options.of = options.of[0];\r\n            }\r\n            return this.each( function() {\r\n                geom.posit(this,options);\r\n            });\r\n        } else {\r\n            var elem = this[0];\r\n\r\n            return geom.relativePosition(elem);\r\n\r\n        }             \r\n    };\r\n\r\n    $.fn.offsetParent = $.wraps.wrapper_map(geom.offsetParent, geom);\r\n\r\n\r\n    $.fn.size = $.wraps.wrapper_value(geom.size, geom);\r\n\r\n    $.fn.width = $.wraps.wrapper_value(geom.width, geom, geom.width);\r\n\r\n    $.fn.height = $.wraps.wrapper_value(geom.height, geom, geom.height);\r\n\r\n    $.fn.clientSize = $.wraps.wrapper_value(geom.clientSize, geom.clientSize);\r\n    \r\n    ['width', 'height'].forEach(function(dimension) {\r\n        var offset, Dimension = dimension.replace(/./, function(m) {\r\n            return m[0].toUpperCase()\r\n        });\r\n\r\n        $.fn['outer' + Dimension] = function(margin, value) {\r\n            if (arguments.length) {\r\n                if (typeof margin !== 'boolean') {\r\n                    value = margin;\r\n                    margin = false;\r\n                }\r\n            } else {\r\n                margin = false;\r\n                value = undefined;\r\n            }\r\n\r\n            if (value === undefined) {\r\n                var el = this[0];\r\n                if (!el) {\r\n                    return undefined;\r\n                }\r\n                var cb = geom.size(el);\r\n                if (margin) {\r\n                    var me = geom.marginExtents(el);\r\n                    cb.width = cb.width + me.left + me.right;\r\n                    cb.height = cb.height + me.top + me.bottom;\r\n                }\r\n                return dimension === \"width\" ? cb.width : cb.height;\r\n            } else {\r\n                return this.each(function(idx, el) {\r\n                    var mb = {};\r\n                    var me = geom.marginExtents(el);\r\n                    if (dimension === \"width\") {\r\n                        mb.width = value;\r\n                        if (margin) {\r\n                            mb.width = mb.width - me.left - me.right\r\n                        }\r\n                    } else {\r\n                        mb.height = value;\r\n                        if (margin) {\r\n                            mb.height = mb.height - me.top - me.bottom;\r\n                        }\r\n                    }\r\n                    geom.size(el, mb);\r\n                })\r\n\r\n            }\r\n        };\r\n    })\r\n\r\n    $.fn.innerWidth = $.wraps.wrapper_value(geom.clientWidth, geom, geom.clientWidth);\r\n\r\n    $.fn.innerHeight = $.wraps.wrapper_value(geom.clientHeight, geom, geom.clientHeight);\r\n\r\n    return geom;\r\n});\ndefine('skylark-domx-geom', ['skylark-domx-geom/main'], function (main) { return main; });\n\ndefine('skylark-widgets-hierarchy/Hierarchy',[\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\"\r\n],function(skylark,langx,browser,eventer,noder,geom,$){\r\n\t\"use strict\";\r\n\r\n\tvar jstree = skylark.jstree =  skylark.jstree || {};\r\n\r\n\tvar ajax = function(options) {\r\n        return langx.Xhr.request(options.url,options);\r\n    };\r\n\t/*\r\n\t$.ajax = $.ajax || function(options) {\r\n        return langx.Xhr.request(options.url,options);\r\n    };\r\n\r\n    $.camelCase = langx.camelCase;\r\n\r\n    $.each = langx.each;\r\n\r\n    $.extend = function(target) {\r\n        var deep, args = Array.prototype.slice.call(arguments, 1);\r\n        if (typeof target == 'boolean') {\r\n            deep = target\r\n            target = args.shift()\r\n        }\r\n        if (args.length == 0) {\r\n            args = [target];\r\n            target = this;\r\n        }\r\n        args.forEach(function(arg) {\r\n        \tlangx.mixin(target, arg, deep);\r\n        });\r\n        return target;\r\n    };\r\n\r\n    $.grep = function(elements, callback) {\r\n        return filter.call(elements, callback)\r\n    };\r\n\r\n    $.isArray = langx.isArray;\r\n    $.isEmptyObject = langx.isEmptyObject;\r\n    $.isFunction = langx.isFunction;\r\n    $.isWindow = langx.isWindow;\r\n    $.isPlainObject = langx.isPlainObject;\r\n\r\n    $.inArray = langx.inArray;\r\n\r\n    $.makeArray = langx.makeArray;\r\n    $.map = langx.map;\r\n\r\n    $.noop = function() {\r\n    };\r\n\r\n    $.parseJSON = window.JSON.parse;\r\n\r\n    $.proxy = langx.proxy;\r\n\r\n    $.trim = langx.trim;\r\n    $.type = langx.type;\r\n\r\n    $.fn.stop = function() {\r\n    \treturn this;\r\n    }\r\n\t*/\r\n\r\n\t/*!\r\n\t * jsTree {{VERSION}}\r\n\t * http://jstree.com/\r\n\t *\r\n\t * Copyright (c) 2014 Ivan Bozhanov (http://vakata.com)\r\n\t *\r\n\t * Licensed same as jquery - under the terms of the MIT License\r\n\t *   http://www.opensource.org/licenses/mit-license.php\r\n\t */\r\n\r\n\t// prevent another load? maybe there is a better way?\r\n\tif($.jstree) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * ### jsTree core functionality\r\n\t */\r\n\r\n\t// internal variables\r\n\tvar instance_counter = 0,\r\n\t\tccp_node = false,\r\n\t\tccp_mode = false,\r\n\t\tccp_inst = false,\r\n\t\tthemes_loaded = [],\r\n\t\tsrc = $('script:last').attr('src'),\r\n\t\tdocument = window.document; // local variable is always faster to access then a global\r\n\r\n\t/**\r\n\t * holds all jstree related functions and variables, including the actual class and methods to create, access and manipulate instances.\r\n\t * @name $.jstree\r\n\t */\r\n\t$.jstree = {\r\n\t\t/**\r\n\t\t * specifies the jstree version in use\r\n\t\t * @name $.jstree.version\r\n\t\t */\r\n\t\tversion : '{{VERSION}}',\r\n\t\t/**\r\n\t\t * holds all the default options used when creating new instances\r\n\t\t * @name $.jstree.defaults\r\n\t\t */\r\n\t\tdefaults : {\r\n\t\t\t/**\r\n\t\t\t * configure which plugins will be active on an instance. Should be an array of strings, where each element is a plugin name. The default is `[]`\r\n\t\t\t * @name $.jstree.defaults.plugins\r\n\t\t\t */\r\n\t\t\tplugins : []\r\n\t\t},\r\n\t\t/**\r\n\t\t * stores all loaded jstree plugins (used internally)\r\n\t\t * @name $.jstree.plugins\r\n\t\t */\r\n\t\tplugins : {},\r\n\t\tpath : src && src.indexOf('/') !== -1 ? src.replace(/\\/[^\\/]+$/,'') : '',\r\n\t\tidregex : /[\\\\:&!^|()\\[\\]<>@*'+~#\";.,=\\- \\/${}%?`]/g,\r\n\t\troot : '#'\r\n\t};\r\n\t\r\n\t/**\r\n\t * creates a jstree instance\r\n\t * @name $.jstree.create(el [, options])\r\n\t * @param {DOMElement|jQuery|String} el the element to create the instance on, can be jQuery extended or a selector\r\n\t * @param {Object} options options for this instance (extends `$.jstree.defaults`)\r\n\t * @return {jsTree} the new instance\r\n\t */\r\n\t$.jstree.create = function (el, options) {\r\n\t\treturn new Tree(el,options);\r\n\t};\r\n\r\n\t/**\r\n\t * remove all traces of jstree from the DOM and destroy all instances\r\n\t * @name $.jstree.destroy()\r\n\t */\r\n\t$.jstree.destroy = function () {\r\n\t\t$('.jstree:jstree').jstree('destroy');\r\n\t\t$(document).off('.jstree');\r\n\t};\r\n\r\n\r\n\t/**\r\n\t * get a reference to an existing instance\r\n\t *\r\n\t * __Examples__\r\n\t *\r\n\t *\t// provided a container with an ID of \"tree\", and a nested node with an ID of \"branch\"\r\n\t *\t// all of there will return the same instance\r\n\t *\t$.jstree.reference('tree');\r\n\t *\t$.jstree.reference('#tree');\r\n\t *\t$.jstree.reference($('#tree'));\r\n\t *\t$.jstree.reference(document.getElementByID('tree'));\r\n\t *\t$.jstree.reference('branch');\r\n\t *\t$.jstree.reference('#branch');\r\n\t *\t$.jstree.reference($('#branch'));\r\n\t *\t$.jstree.reference(document.getElementByID('branch'));\r\n\t *\r\n\t * @name $.jstree.reference(needle)\r\n\t * @param {DOMElement|jQuery|String} needle\r\n\t * @return {jsTree|null} the instance or `null` if not found\r\n\t */\r\n\t$.jstree.reference = function (needle) {\r\n\t\tvar tmp = null,\r\n\t\t\tobj = null;\r\n\t\tif(needle && needle.id && (!needle.tagName || !needle.nodeType)) { needle = needle.id; }\r\n\r\n\t\tif(!obj || !obj.length) {\r\n\t\t\ttry { obj = $(needle); } catch (ignore) { }\r\n\t\t}\r\n\t\tif(!obj || !obj.length) {\r\n\t\t\ttry { obj = $('#' + needle.replace($.jstree.idregex,'\\\\$&')); } catch (ignore) { }\r\n\t\t}\r\n\t\tif(obj && obj.length && (obj = obj.closest('.jstree')).length && (obj = obj.data('jstree'))) {\r\n\t\t\ttmp = obj;\r\n\t\t}\r\n\t\telse {\r\n\t\t\t$('.jstree').each(function () {\r\n\t\t\t\tvar inst = $(this).data('jstree');\r\n\t\t\t\tif(inst && inst._model.data[needle]) {\r\n\t\t\t\t\ttmp = inst;\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn tmp;\r\n\t};\r\n\r\n\t/**\r\n\t * Create an instance, get an instance or invoke a command on a instance.\r\n\t *\r\n\t * If there is no instance associated with the current node a new one is created and `arg` is used to extend `$.jstree.defaults` for this new instance. There would be no return value (chaining is not broken).\r\n\t *\r\n\t * If there is an existing instance and `arg` is a string the command specified by `arg` is executed on the instance, with any additional arguments passed to the function. If the function returns a value it will be returned (chaining could break depending on function).\r\n\t *\r\n\t * If there is an existing instance and `arg` is not a string the instance itself is returned (similar to `$.jstree.reference`).\r\n\t *\r\n\t * In any other case - nothing is returned and chaining is not broken.\r\n\t *\r\n\t * __Examples__\r\n\t *\r\n\t *\t$('#tree1').jstree(); // creates an instance\r\n\t *\t$('#tree2').jstree({ plugins : [] }); // create an instance with some options\r\n\t *\t$('#tree1').jstree('open_node', '#branch_1'); // call a method on an existing instance, passing additional arguments\r\n\t *\t$('#tree2').jstree(); // get an existing instance (or create an instance)\r\n\t *\t$('#tree2').jstree(true); // get an existing instance (will not create new instance)\r\n\t *\t$('#branch_1').jstree().select_node('#branch_1'); // get an instance (using a nested element and call a method)\r\n\t *\r\n\t * @name $().jstree([arg])\r\n\t * @param {String|Object} arg\r\n\t * @return {Mixed}\r\n\t */\r\n\t$.fn.jstree = function (arg) {\r\n\t\t// check for string argument\r\n\t\tvar is_method\t= (typeof arg === 'string'),\r\n\t\t\targs\t\t= Array.prototype.slice.call(arguments, 1),\r\n\t\t\tresult\t\t= null;\r\n\t\tif(arg === true && !this.length) { return false; }\r\n\t\tthis.each(function () {\r\n\t\t\t// get the instance (if there is one) and method (if it exists)\r\n\t\t\tvar instance = $.jstree.reference(this),\r\n\t\t\t\tmethod = is_method && instance ? instance[arg] : null;\r\n\t\t\t// if calling a method, and method is available - execute on the instance\r\n\t\t\tresult = is_method && method ?\r\n\t\t\t\tmethod.apply(instance, args) :\r\n\t\t\t\tnull;\r\n\t\t\t// if there is no instance and no method is being called - create one\r\n\t\t\tif(!instance && !is_method && (arg === undefined || $.isPlainObject(arg))) {\r\n\t\t\t\t$.jstree.create(this, arg);\r\n\t\t\t}\r\n\t\t\t// if there is an instance and no method is called - return the instance\r\n\t\t\tif( (instance && !is_method) || arg === true ) {\r\n\t\t\t\tresult = instance || false;\r\n\t\t\t}\r\n\t\t\t// if there was a method call which returned a result - break and return the value\r\n\t\t\tif(result !== null && result !== undefined) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t});\r\n\t\t// if there was a method call with a valid return value - return that, otherwise continue the chain\r\n\t\treturn result !== null && result !== undefined ?\r\n\t\t\tresult : this;\r\n\t};\r\n\r\n\t/**\r\n\t * stores all defaults for the core\r\n\t * @name $.jstree.defaults.core\r\n\t */\r\n\t$.jstree.defaults.core = {\r\n\t\t/**\r\n\t\t * data configuration\r\n\t\t *\r\n\t\t * If left as `false` the HTML inside the jstree container element is used to populate the tree (that should be an unordered list with list items).\r\n\t\t *\r\n\t\t * You can also pass in a HTML string or a JSON array here.\r\n\t\t *\r\n\t\t * It is possible to pass in a standard jQuery-like AJAX config and jstree will automatically determine if the response is JSON or HTML and use that to populate the tree.\r\n\t\t * In addition to the standard jQuery ajax options here you can suppy functions for `data` and `url`, the functions will be run in the current instance's scope and a param will be passed indicating which node is being loaded, the return value of those functions will be used.\r\n\t\t *\r\n\t\t * The last option is to specify a function, that function will receive the node being loaded as argument and a second param which is a function which should be called with the result.\r\n\t\t *\r\n\t\t * __Examples__\r\n\t\t *\r\n\t\t *\t// AJAX\r\n\t\t *\t$('#tree').jstree({\r\n\t\t *\t\t'core' : {\r\n\t\t *\t\t\t'data' : {\r\n\t\t *\t\t\t\t'url' : '/get/children/',\r\n\t\t *\t\t\t\t'data' : function (node) {\r\n\t\t *\t\t\t\t\treturn { 'id' : node.id };\r\n\t\t *\t\t\t\t}\r\n\t\t *\t\t\t}\r\n\t\t *\t\t});\r\n\t\t *\r\n\t\t *\t// direct data\r\n\t\t *\t$('#tree').jstree({\r\n\t\t *\t\t'core' : {\r\n\t\t *\t\t\t'data' : [\r\n\t\t *\t\t\t\t'Simple root node',\r\n\t\t *\t\t\t\t{\r\n\t\t *\t\t\t\t\t'id' : 'node_2',\r\n\t\t *\t\t\t\t\t'text' : 'Root node with options',\r\n\t\t *\t\t\t\t\t'state' : { 'opened' : true, 'selected' : true },\r\n\t\t *\t\t\t\t\t'children' : [ { 'text' : 'Child 1' }, 'Child 2']\r\n\t\t *\t\t\t\t}\r\n\t\t *\t\t\t]\r\n\t\t *\t\t}\r\n\t\t *\t});\r\n\t\t *\r\n\t\t *\t// function\r\n\t\t *\t$('#tree').jstree({\r\n\t\t *\t\t'core' : {\r\n\t\t *\t\t\t'data' : function (obj, callback) {\r\n\t\t *\t\t\t\tcallback.call(this, ['Root 1', 'Root 2']);\r\n\t\t *\t\t\t}\r\n\t\t *\t\t});\r\n\t\t *\r\n\t\t * @name $.jstree.defaults.core.data\r\n\t\t */\r\n\t\tdata\t\t\t: false,\r\n\t\t/**\r\n\t\t * configure the various strings used throughout the tree\r\n\t\t *\r\n\t\t * You can use an object where the key is the string you need to replace and the value is your replacement.\r\n\t\t * Another option is to specify a function which will be called with an argument of the needed string and should return the replacement.\r\n\t\t * If left as `false` no replacement is made.\r\n\t\t *\r\n\t\t * __Examples__\r\n\t\t *\r\n\t\t *\t$('#tree').jstree({\r\n\t\t *\t\t'core' : {\r\n\t\t *\t\t\t'strings' : {\r\n\t\t *\t\t\t\t'Loading ...' : 'Please wait ...'\r\n\t\t *\t\t\t}\r\n\t\t *\t\t}\r\n\t\t *\t});\r\n\t\t *\r\n\t\t * @name $.jstree.defaults.core.strings\r\n\t\t */\r\n\t\tstrings\t\t\t: false,\r\n\t\t/**\r\n\t\t * determines what happens when a user tries to modify the structure of the tree\r\n\t\t * If left as `false` all operations like create, rename, delete, move or copy are prevented.\r\n\t\t * You can set this to `true` to allow all interactions or use a function to have better control.\r\n\t\t *\r\n\t\t * __Examples__\r\n\t\t *\r\n\t\t *\t$('#tree').jstree({\r\n\t\t *\t\t'core' : {\r\n\t\t *\t\t\t'check_callback' : function (operation, node, node_parent, node_position, more) {\r\n\t\t *\t\t\t\t// operation can be 'create_node', 'rename_node', 'delete_node', 'move_node', 'copy_node' or 'edit'\r\n\t\t *\t\t\t\t// in case of 'rename_node' node_position is filled with the new node name\r\n\t\t *\t\t\t\treturn operation === 'rename_node' ? true : false;\r\n\t\t *\t\t\t}\r\n\t\t *\t\t}\r\n\t\t *\t});\r\n\t\t *\r\n\t\t * @name $.jstree.defaults.core.check_callback\r\n\t\t */\r\n\t\tcheck_callback\t: false,\r\n\t\t/**\r\n\t\t * a callback called with a single object parameter in the instance's scope when something goes wrong (operation prevented, ajax failed, etc)\r\n\t\t * @name $.jstree.defaults.core.error\r\n\t\t */\r\n\t\terror\t\t\t: langx.noop,\r\n\t\t/**\r\n\t\t * the open / close animation duration in milliseconds - set this to `false` to disable the animation (default is `200`)\r\n\t\t * @name $.jstree.defaults.core.animation\r\n\t\t */\r\n\t\tanimation\t\t: 200,\r\n\t\t/**\r\n\t\t * a boolean indicating if multiple nodes can be selected\r\n\t\t * @name $.jstree.defaults.core.multiple\r\n\t\t */\r\n\t\tmultiple\t\t: true,\r\n\t\t/**\r\n\t\t * theme configuration object\r\n\t\t * @name $.jstree.defaults.core.themes\r\n\t\t */\r\n\t\tthemes\t\t\t: {\r\n\t\t\t/**\r\n\t\t\t * the name of the theme to use (if left as `false` the default theme is used)\r\n\t\t\t * @name $.jstree.defaults.core.themes.name\r\n\t\t\t */\r\n\t\t\tname\t\t\t: false,\r\n\t\t\t/**\r\n\t\t\t * the URL of the theme's CSS file, leave this as `false` if you have manually included the theme CSS (recommended). You can set this to `true` too which will try to autoload the theme.\r\n\t\t\t * @name $.jstree.defaults.core.themes.url\r\n\t\t\t */\r\n\t\t\turl\t\t\t\t: false,\r\n\t\t\t/**\r\n\t\t\t * the location of all jstree themes - only used if `url` is set to `true`\r\n\t\t\t * @name $.jstree.defaults.core.themes.dir\r\n\t\t\t */\r\n\t\t\tdir\t\t\t\t: false,\r\n\t\t\t/**\r\n\t\t\t * a boolean indicating if connecting dots are shown\r\n\t\t\t * @name $.jstree.defaults.core.themes.dots\r\n\t\t\t */\r\n\t\t\tdots\t\t\t: true,\r\n\t\t\t/**\r\n\t\t\t * a boolean indicating if node icons are shown\r\n\t\t\t * @name $.jstree.defaults.core.themes.icons\r\n\t\t\t */\r\n\t\t\ticons\t\t\t: true,\r\n\t\t\t/**\r\n\t\t\t * a boolean indicating if node ellipsis should be shown - this only works with a fixed with on the container\r\n\t\t\t * @name $.jstree.defaults.core.themes.ellipsis\r\n\t\t\t */\r\n\t\t\tellipsis\t\t: false,\r\n\t\t\t/**\r\n\t\t\t * a boolean indicating if the tree background is striped\r\n\t\t\t * @name $.jstree.defaults.core.themes.stripes\r\n\t\t\t */\r\n\t\t\tstripes\t\t\t: false,\r\n\t\t\t/**\r\n\t\t\t * a string (or boolean `false`) specifying the theme variant to use (if the theme supports variants)\r\n\t\t\t * @name $.jstree.defaults.core.themes.variant\r\n\t\t\t */\r\n\t\t\tvariant\t\t\t: false,\r\n\t\t\t/**\r\n\t\t\t * a boolean specifying if a reponsive version of the theme should kick in on smaller screens (if the theme supports it). Defaults to `false`.\r\n\t\t\t * @name $.jstree.defaults.core.themes.responsive\r\n\t\t\t */\r\n\t\t\tresponsive\t\t: false\r\n\t\t},\r\n\t\t/**\r\n\t\t * if left as `true` all parents of all selected nodes will be opened once the tree loads (so that all selected nodes are visible to the user)\r\n\t\t * @name $.jstree.defaults.core.expand_selected_onload\r\n\t\t */\r\n\t\texpand_selected_onload : true,\r\n\t\t/**\r\n\t\t * if left as `true` web workers will be used to parse incoming JSON data where possible, so that the UI will not be blocked by large requests. Workers are however about 30% slower. Defaults to `true`\r\n\t\t * @name $.jstree.defaults.core.worker\r\n\t\t */\r\n\t\tworker : true,\r\n\t\t/**\r\n\t\t * Force node text to plain text (and escape HTML). Defaults to `false`\r\n\t\t * @name $.jstree.defaults.core.force_text\r\n\t\t */\r\n\t\tforce_text : false,\r\n\t\t/**\r\n\t\t * Should the node should be toggled if the text is double clicked . Defaults to `true`\r\n\t\t * @name $.jstree.defaults.core.dblclick_toggle\r\n\t\t */\r\n\t\tdblclick_toggle : true,\r\n\t\t/**\r\n\t\t * Should the loaded nodes be part of the state. Defaults to `false`\r\n\t\t * @name $.jstree.defaults.core.loaded_state\r\n\t\t */\r\n\t\tloaded_state : false,\r\n\t\t/**\r\n\t\t * Should the last active node be focused when the tree container is blurred and the focused again. This helps working with screen readers. Defaults to `true`\r\n\t\t * @name $.jstree.defaults.core.restore_focus\r\n\t\t */\r\n\t\trestore_focus : true,\r\n\t\t/**\r\n\t\t * Default keyboard shortcuts (an object where each key is the button name or combo - like 'enter', 'ctrl-space', 'p', etc and the value is the function to execute in the instance's scope)\r\n\t\t * @name $.jstree.defaults.core.keyboard\r\n\t\t */\r\n\t\tkeyboard : {\r\n\t\t\t'ctrl-space': function (e) {\r\n\t\t\t\t// aria defines space only with Ctrl\r\n\t\t\t\te.type = \"click\";\r\n\t\t\t\t$(e.currentTarget).trigger(e);\r\n\t\t\t},\r\n\t\t\t'enter': function (e) {\r\n\t\t\t\t// enter\r\n\t\t\t\te.type = \"click\";\r\n\t\t\t\t$(e.currentTarget).trigger(e);\r\n\t\t\t},\r\n\t\t\t'left': function (e) {\r\n\t\t\t\t// left\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tif(this.is_open(e.currentTarget)) {\r\n\t\t\t\t\tthis.close_node(e.currentTarget);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tvar o = this.get_parent(e.currentTarget);\r\n\t\t\t\t\tif(o && o.id !== $.jstree.root) { this.get_node(o, true).children('.jstree-anchor').focus(); }\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t'up': function (e) {\r\n\t\t\t\t// up\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tvar o = this.get_prev_dom(e.currentTarget);\r\n\t\t\t\tif(o && o.length) { o.children('.jstree-anchor').focus(); }\r\n\t\t\t},\r\n\t\t\t'right': function (e) {\r\n\t\t\t\t// right\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tif(this.is_closed(e.currentTarget)) {\r\n\t\t\t\t\tthis.open_node(e.currentTarget, function (o) { this.get_node(o, true).children('.jstree-anchor').focus(); });\r\n\t\t\t\t}\r\n\t\t\t\telse if (this.is_open(e.currentTarget)) {\r\n\t\t\t\t\tvar o = this.get_node(e.currentTarget, true).children('.jstree-children')[0];\r\n\t\t\t\t\tif(o) { $(this._firstChild(o)).children('.jstree-anchor').focus(); }\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t'down': function (e) {\r\n\t\t\t\t// down\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tvar o = this.get_next_dom(e.currentTarget);\r\n\t\t\t\tif(o && o.length) { o.children('.jstree-anchor').focus(); }\r\n\t\t\t},\r\n\t\t\t'*': function (e) {\r\n\t\t\t\t// aria defines * on numpad as open_all - not very common\r\n\t\t\t\tthis.open_all();\r\n\t\t\t},\r\n\t\t\t'home': function (e) {\r\n\t\t\t\t// home\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tvar o = this._firstChild(this.get_container_ul()[0]);\r\n\t\t\t\tif(o) { $(o).children('.jstree-anchor').filter(':visible').focus(); }\r\n\t\t\t},\r\n\t\t\t'end': function (e) {\r\n\t\t\t\t// end\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tthis.element.find('.jstree-anchor').filter(':visible').last().focus();\r\n\t\t\t},\r\n\t\t\t'f2': function (e) {\r\n\t\t\t\t// f2 - safe to include - if check_callback is false it will fail\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tthis.edit(e.currentTarget);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n    var Tree = jstree.Tree = langx.Evented.inherit({\r\n        klassName: \"Tree\",\r\n\r\n\t\t/**\r\n\t\t * used to decorate an instance with a plugin. Used internally.\r\n\t\t * @private\r\n\t\t * @name plugin(deco [, opts])\r\n\t\t * @param  {String} deco the plugin to decorate with\r\n\t\t * @param  {Object} opts options for the plugin\r\n\t\t * @return {jsTree}\r\n\t\t */\r\n\t\tplugin : function (deco, opts) {\r\n\t\t\tvar Child = $.jstree.plugins[deco];\r\n\t\t\tif(Child) {\r\n\t\t\t\tthis._data[deco] = {};\r\n\t\t\t\tChild.prototype = this;\r\n\t\t\t\treturn new Child(opts, this);\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\t/**\r\n\t\t * initialize the instance. Used internally.\r\n\t\t * @private\r\n\t\t * @name init(el, optons)\r\n\t\t * @param {DOMElement|jQuery|String} el the element we are transforming\r\n\t\t * @param {Object} options options for this instance\r\n\t\t * @trigger init.jstree, loading.jstree, loaded.jstree, ready.jstree, changed.jstree\r\n\t\t */\r\n\t\tinit : function (el, options) {\r\n\t\t\tthis._id = ++instance_counter;\r\n\t\t\tthis._cnt = 0;\r\n\t\t\tthis._wrk = null;\r\n\t\t\tthis._data = {\r\n\t\t\t\tcore : {\r\n\t\t\t\t\tthemes : {\r\n\t\t\t\t\t\tname : false,\r\n\t\t\t\t\t\tdots : false,\r\n\t\t\t\t\t\ticons : false,\r\n\t\t\t\t\t\tellipsis : false\r\n\t\t\t\t\t},\r\n\t\t\t\t\tselected : [],\r\n\t\t\t\t\tlast_error : {},\r\n\t\t\t\t\tworking : false,\r\n\t\t\t\t\tworker_queue : [],\r\n\t\t\t\t\tfocused : null\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tvar  opt = options,\r\n\t\t\t\ttmp = this;\r\n\t\t\toptions = langx.extend(true, {}, $.jstree.defaults, options);\r\n\t\t\tif(opt && opt.plugins) {\r\n\t\t\t\toptions.plugins = opt.plugins;\r\n\t\t\t}\r\n\t\t\tlangx.each(options.plugins, function (i, k) {\r\n\t\t\t\tif(i !== 'core') {\r\n\t\t\t\t\ttmp = tmp.plugin(k, options[k]);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t$(el).data('jstree', tmp);\r\n\r\n\t\t\ttmp._model = {\r\n\t\t\t\tdata : {},\r\n\t\t\t\tchanged : [],\r\n\t\t\t\tforce_full_redraw : false,\r\n\t\t\t\tredraw_timeout : false,\r\n\t\t\t\tdefault_state : {\r\n\t\t\t\t\tloaded : true,\r\n\t\t\t\t\topened : false,\r\n\t\t\t\t\tselected : false,\r\n\t\t\t\t\tdisabled : false\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\ttmp._model.data[$.jstree.root] = {\r\n\t\t\t\tid : $.jstree.root,\r\n\t\t\t\tparent : null,\r\n\t\t\t\tparents : [],\r\n\t\t\t\tchildren : [],\r\n\t\t\t\tchildren_d : [],\r\n\t\t\t\tstate : { loaded : false }\r\n\t\t\t};\r\n\r\n\t\t\ttmp.element = $(el).addClass('jstree jstree-' + tmp._id);\r\n\t\t\ttmp.settings = options;\r\n\r\n\t\t\ttmp._data.core.ready = false;\r\n\t\t\ttmp._data.core.loaded = false;\r\n\t\t\ttmp._data.core.rtl = (tmp.element.css(\"direction\") === \"rtl\");\r\n\t\t\ttmp.element[tmp._data.core.rtl ? 'addClass' : 'removeClass'](\"jstree-rtl\");\r\n\t\t\ttmp.element.attr('role','tree');\r\n\t\t\tif(tmp.settings.core.multiple) {\r\n\t\t\t\ttmp.element.attr('aria-multiselectable', true);\r\n\t\t\t}\r\n\t\t\tif(!tmp.element.attr('tabindex')) {\r\n\t\t\t\ttmp.element.attr('tabindex','0');\r\n\t\t\t}\r\n\r\n\t\t\ttmp.bind();\r\n\t\t\t/**\r\n\t\t\t * triggered after all events are bound\r\n\t\t\t * @event\r\n\t\t\t * @name init.jstree\r\n\t\t\t */\r\n\t\t\ttmp.trigger(\"init\");\r\n\r\n\t\t\ttmp._data.core.original_container_html = tmp.element.find(\" > ul > li\").clone(true);\r\n\t\t\ttmp._data.core.original_container_html\r\n\t\t\t\t.find(\"li\").addBack()\r\n\t\t\t\t.contents().filter(function() {\r\n\t\t\t\t\treturn this.nodeType === 3 && (!this.nodeValue || /^\\s+$/.test(this.nodeValue));\r\n\t\t\t\t})\r\n\t\t\t\t.remove();\r\n\t\t\ttmp.element.html(\"<\"+\"ul class='jstree-container-ul jstree-children' role='group'><\"+\"li id='j\"+tmp._id+\"_loading' class='jstree-initial-node jstree-loading jstree-leaf jstree-last' role='tree-item'><i class='jstree-icon jstree-ocl'></i><\"+\"a class='jstree-anchor' href='#'><i class='jstree-icon jstree-themeicon-hidden'></i>\" + tmp.get_string(\"Loading ...\") + \"</a></li></ul>\");\r\n\t\t\ttmp.element.attr('aria-activedescendant','j' + tmp._id + '_loading');\r\n\t\t\ttmp._data.core.li_height = tmp.get_container_ul().children(\"li\").first().outerHeight() || 24;\r\n\t\t\ttmp._data.core.node = tmp._create_prototype_node();\r\n\t\t\t/**\r\n\t\t\t * triggered after the loading text is shown and before loading starts\r\n\t\t\t * @event\r\n\t\t\t * @name loading.jstree\r\n\t\t\t */\r\n\t\t\ttmp.trigger(\"loading\");\r\n\t\t\ttmp.load_node($.jstree.root);\r\n\t\t\treturn tmp;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * destroy an instance\r\n\t\t * @name destroy()\r\n\t\t * @param  {Boolean} keep_html if not set to `true` the container will be emptied, otherwise the current DOM elements will be kept intact\r\n\t\t */\r\n\t\tdestroy : function (keep_html) {\r\n\t\t\t/**\r\n\t\t\t * triggered before the tree is destroyed\r\n\t\t\t * @event\r\n\t\t\t * @name destroy.jstree\r\n\t\t\t */\r\n\t\t\ttmp.trigger(\"destroy\");\r\n\t\t\tif(this._wrk) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\twindow.URL.revokeObjectURL(this._wrk);\r\n\t\t\t\t\tthis._wrk = null;\r\n\t\t\t\t}\r\n\t\t\t\tcatch (ignore) { }\r\n\t\t\t}\r\n\t\t\tif(!keep_html) { this.element.empty(); }\r\n\t\t\tthis.teardown();\r\n\t\t},\r\n\t\t/**\r\n\t\t * Create a prototype node\r\n\t\t * @name _create_prototype_node()\r\n\t\t * @return {DOMElement}\r\n\t\t */\r\n\t\t_create_prototype_node : function () {\r\n\t\t\tvar _node = document.createElement('LI'), _temp1, _temp2;\r\n\t\t\t_node.setAttribute('role', 'treeitem');\r\n\t\t\t_temp1 = document.createElement('I');\r\n\t\t\t_temp1.className = 'jstree-icon jstree-ocl';\r\n\t\t\t_temp1.setAttribute('role', 'presentation');\r\n\t\t\t_node.appendChild(_temp1);\r\n\t\t\t_temp1 = document.createElement('A');\r\n\t\t\t_temp1.className = 'jstree-anchor';\r\n\t\t\t_temp1.setAttribute('href','#');\r\n\t\t\t_temp1.setAttribute('tabindex','-1');\r\n\t\t\t_temp2 = document.createElement('I');\r\n\t\t\t_temp2.className = 'jstree-icon jstree-themeicon';\r\n\t\t\t_temp2.setAttribute('role', 'presentation');\r\n\t\t\t_temp1.appendChild(_temp2);\r\n\t\t\t_node.appendChild(_temp1);\r\n\t\t\t_temp1 = _temp2 = null;\r\n\r\n\t\t\treturn _node;\r\n\t\t},\r\n\t\t_kbevent_to_func : function (e) {\r\n\t\t\tvar keys = {\r\n\t\t\t\t8: \"Backspace\", 9: \"Tab\", 13: \"Return\", 19: \"Pause\", 27: \"Esc\",\r\n\t\t\t\t32: \"Space\", 33: \"PageUp\", 34: \"PageDown\", 35: \"End\", 36: \"Home\",\r\n\t\t\t\t37: \"Left\", 38: \"Up\", 39: \"Right\", 40: \"Down\", 44: \"Print\", 45: \"Insert\",\r\n\t\t\t\t46: \"Delete\", 96: \"Numpad0\", 97: \"Numpad1\", 98: \"Numpad2\", 99 : \"Numpad3\",\r\n\t\t\t\t100: \"Numpad4\", 101: \"Numpad5\", 102: \"Numpad6\", 103: \"Numpad7\",\r\n\t\t\t\t104: \"Numpad8\", 105: \"Numpad9\", '-13': \"NumpadEnter\", 112: \"F1\",\r\n\t\t\t\t113: \"F2\", 114: \"F3\", 115: \"F4\", 116: \"F5\", 117: \"F6\", 118: \"F7\",\r\n\t\t\t\t119: \"F8\", 120: \"F9\", 121: \"F10\", 122: \"F11\", 123: \"F12\", 144: \"Numlock\",\r\n\t\t\t\t145: \"Scrolllock\", 16: 'Shift', 17: 'Ctrl', 18: 'Alt',\r\n\t\t\t\t48: '0',  49: '1',  50: '2',  51: '3',  52: '4', 53:  '5',\r\n\t\t\t\t54: '6',  55: '7',  56: '8',  57: '9',  59: ';',  61: '=', 65:  'a',\r\n\t\t\t\t66: 'b',  67: 'c',  68: 'd',  69: 'e',  70: 'f',  71: 'g', 72:  'h',\r\n\t\t\t\t73: 'i',  74: 'j',  75: 'k',  76: 'l',  77: 'm',  78: 'n', 79:  'o',\r\n\t\t\t\t80: 'p',  81: 'q',  82: 'r',  83: 's',  84: 't',  85: 'u', 86:  'v',\r\n\t\t\t\t87: 'w',  88: 'x',  89: 'y',  90: 'z', 107: '+', 109: '-', 110: '.',\r\n\t\t\t\t186: ';', 187: '=', 188: ',', 189: '-', 190: '.', 191: '/', 192: '`',\r\n\t\t\t\t219: '[', 220: '\\\\',221: ']', 222: \"'\", 111: '/', 106: '*', 173: '-'\r\n\t\t\t};\r\n\t\t\tvar parts = [];\r\n\t\t\tif (e.ctrlKey) { parts.push('ctrl'); }\r\n\t\t\tif (e.altKey) { parts.push('alt'); }\r\n\t\t\tif (e.shiftKey) { parts.push('shift'); }\r\n\t\t\tparts.push(keys[e.which] || e.which);\r\n\t\t\tparts = parts.sort().join('-').toLowerCase();\r\n\r\n\t\t\tvar kb = this.settings.core.keyboard, i, tmp;\r\n\t\t\tfor (i in kb) {\r\n\t\t\t\tif (kb.hasOwnProperty(i)) {\r\n\t\t\t\t\ttmp = i;\r\n\t\t\t\t\tif (tmp !== '-' && tmp !== '+') {\r\n\t\t\t\t\t\ttmp = tmp.replace('--', '-MINUS').replace('+-', '-MINUS').replace('++', '-PLUS').replace('-+', '-PLUS');\r\n\t\t\t\t\t\ttmp = tmp.split(/-|\\+/).sort().join('-').replace('MINUS', '-').replace('PLUS', '+').toLowerCase();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (tmp === parts) {\r\n\t\t\t\t\t\treturn kb[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\t/**\r\n\t\t * part of the destroying of an instance. Used internally.\r\n\t\t * @private\r\n\t\t * @name teardown()\r\n\t\t */\r\n\t\tteardown : function () {\r\n\t\t\tthis.unbind();\r\n\t\t\tthis.element\r\n\t\t\t\t.removeClass('jstree')\r\n\t\t\t\t.removeData('jstree')\r\n\t\t\t\t.find(\"[class^='jstree']\")\r\n\t\t\t\t\t.addBack()\r\n\t\t\t\t\t.attr(\"class\", function () { return this.className.replace(/jstree[^ ]*|$/ig,''); });\r\n\t\t\tthis.element = null;\r\n\t\t},\r\n\t\t/**\r\n\t\t * bind all events. Used internally.\r\n\t\t * @private\r\n\t\t * @name bind()\r\n\t\t */\r\n\t\tbind : function () {\r\n\t\t\tvar word = '',\r\n\t\t\t\ttout = null,\r\n\t\t\t\twas_click = 0;\r\n\t\t\tthis.element\r\n\t\t\t\t.on(\"dblclick.jstree\", function (e) {\r\n\t\t\t\t\t\tif(e.target.tagName && e.target.tagName.toLowerCase() === \"input\") { return true; }\r\n\t\t\t\t\t\tif(document.selection && document.selection.empty) {\r\n\t\t\t\t\t\t\tdocument.selection.empty();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tif(window.getSelection) {\r\n\t\t\t\t\t\t\t\tvar sel = window.getSelection();\r\n\t\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\t\tsel.removeAllRanges();\r\n\t\t\t\t\t\t\t\t\tsel.collapse();\r\n\t\t\t\t\t\t\t\t} catch (ignore) { }\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t.on(\"mousedown.jstree\", langx.proxy(function (e) {\r\n\t\t\t\t\t\tif(e.target === this.element[0]) {\r\n\t\t\t\t\t\t\te.preventDefault(); // prevent losing focus when clicking scroll arrows (FF, Chrome)\r\n\t\t\t\t\t\t\twas_click = +(new Date()); // ie does not allow to prevent losing focus\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"mousedown.jstree\", \".jstree-ocl\", function (e) {\r\n\t\t\t\t\t\te.preventDefault(); // prevent any node inside from losing focus when clicking the open/close icon\r\n\t\t\t\t\t})\r\n\t\t\t\t.on(\"click.jstree\", \".jstree-ocl\", langx.proxy(function (e) {\r\n\t\t\t\t\t\tthis.toggle_node(e.target);\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"dblclick.jstree\", \".jstree-anchor\", langx.proxy(function (e) {\r\n\t\t\t\t\t\tif(e.target.tagName && e.target.tagName.toLowerCase() === \"input\") { return true; }\r\n\t\t\t\t\t\tif(this.settings.core.dblclick_toggle) {\r\n\t\t\t\t\t\t\tthis.toggle_node(e.target);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"click.jstree\", \".jstree-anchor\", langx.proxy(function (e) {\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\tif(e.currentTarget !== document.activeElement) { $(e.currentTarget).focus(); }\r\n\t\t\t\t\t\tthis.activate_node(e.currentTarget, e);\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on('keydown.jstree', '.jstree-anchor', langx.proxy(function (e) {\r\n\t\t\t\t\t\tif(e.target.tagName && e.target.tagName.toLowerCase() === \"input\") { return true; }\r\n\t\t\t\t\t\tif(this._data.core.rtl) {\r\n\t\t\t\t\t\t\tif(e.which === 37) { e.which = 39; }\r\n\t\t\t\t\t\t\telse if(e.which === 39) { e.which = 37; }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar f = this._kbevent_to_func(e);\r\n\t\t\t\t\t\tif (f) {\r\n\t\t\t\t\t\t\tvar r = f.call(this, e);\r\n\t\t\t\t\t\t\tif (r === false || r === true) {\r\n\t\t\t\t\t\t\t\treturn r;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"load_node.jstree\", langx.proxy(function (e, data) {\r\n\t\t\t\t\t\tif(data.status) {\r\n\t\t\t\t\t\t\tif(data.node.id === $.jstree.root && !this._data.core.loaded) {\r\n\t\t\t\t\t\t\t\tthis._data.core.loaded = true;\r\n\t\t\t\t\t\t\t\tif(this._firstChild(this.get_container_ul()[0])) {\r\n\t\t\t\t\t\t\t\t\tthis.element.attr('aria-activedescendant',this._firstChild(this.get_container_ul()[0]).id);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t\t\t * triggered after the root node is loaded for the first time\r\n\t\t\t\t\t\t\t\t * @event\r\n\t\t\t\t\t\t\t\t * @name loaded.jstree\r\n\t\t\t\t\t\t\t\t */\r\n\t\t\t\t\t\t\t\tthis.trigger(\"loaded\");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(!this._data.core.ready) {\r\n\t\t\t\t\t\t\t\tsetTimeout(langx.proxy(function() {\r\n\t\t\t\t\t\t\t\t\tif(this.element && !this.get_container_ul().find('.jstree-loading').length) {\r\n\t\t\t\t\t\t\t\t\t\tthis._data.core.ready = true;\r\n\t\t\t\t\t\t\t\t\t\tif(this._data.core.selected.length) {\r\n\t\t\t\t\t\t\t\t\t\t\tif(this.settings.core.expand_selected_onload) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tvar tmp = [], i, j;\r\n\t\t\t\t\t\t\t\t\t\t\t\tfor(i = 0, j = this._data.core.selected.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttmp = tmp.concat(this._model.data[this._data.core.selected[i]].parents);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttmp = $.vakata.array_unique(tmp);\r\n\t\t\t\t\t\t\t\t\t\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.open_node(tmp[i], false, 0);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tthis.trigger('changed', { 'action' : 'ready', 'selected' : this._data.core.selected });\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t\t\t\t\t * triggered after all nodes are finished loading\r\n\t\t\t\t\t\t\t\t\t\t * @event\r\n\t\t\t\t\t\t\t\t\t\t * @name ready.jstree\r\n\t\t\t\t\t\t\t\t\t\t */\r\n\t\t\t\t\t\t\t\t\t\tthis.trigger(\"ready\");\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}, this), 0);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t// quick searching when the tree is focused\r\n\t\t\t\t.on('keypress.jstree', langx.proxy(function (e) {\r\n\t\t\t\t\t\tif(e.target.tagName && e.target.tagName.toLowerCase() === \"input\") { return true; }\r\n\t\t\t\t\t\tif(tout) { clearTimeout(tout); }\r\n\t\t\t\t\t\ttout = setTimeout(function () {\r\n\t\t\t\t\t\t\tword = '';\r\n\t\t\t\t\t\t}, 500);\r\n\r\n\t\t\t\t\t\tvar chr = String.fromCharCode(e.which).toLowerCase(),\r\n\t\t\t\t\t\t\tcol = this.element.find('.jstree-anchor').filter(':visible'),\r\n\t\t\t\t\t\t\tind = col.index(document.activeElement) || 0,\r\n\t\t\t\t\t\t\tend = false;\r\n\t\t\t\t\t\tword += chr;\r\n\r\n\t\t\t\t\t\t// match for whole word from current node down (including the current node)\r\n\t\t\t\t\t\tif(word.length > 1) {\r\n\t\t\t\t\t\t\tcol.slice(ind).each(langx.proxy(function (i, v) {\r\n\t\t\t\t\t\t\t\tif($(v).text().toLowerCase().indexOf(word) === 0) {\r\n\t\t\t\t\t\t\t\t\t$(v).focus();\r\n\t\t\t\t\t\t\t\t\tend = true;\r\n\t\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}, this));\r\n\t\t\t\t\t\t\tif(end) { return; }\r\n\r\n\t\t\t\t\t\t\t// match for whole word from the beginning of the tree\r\n\t\t\t\t\t\t\tcol.slice(0, ind).each(langx.proxy(function (i, v) {\r\n\t\t\t\t\t\t\t\tif($(v).text().toLowerCase().indexOf(word) === 0) {\r\n\t\t\t\t\t\t\t\t\t$(v).focus();\r\n\t\t\t\t\t\t\t\t\tend = true;\r\n\t\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}, this));\r\n\t\t\t\t\t\t\tif(end) { return; }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// list nodes that start with that letter (only if word consists of a single char)\r\n\t\t\t\t\t\tif(new RegExp('^' + chr.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&') + '+$').test(word)) {\r\n\t\t\t\t\t\t\t// search for the next node starting with that letter\r\n\t\t\t\t\t\t\tcol.slice(ind + 1).each(langx.proxy(function (i, v) {\r\n\t\t\t\t\t\t\t\tif($(v).text().toLowerCase().charAt(0) === chr) {\r\n\t\t\t\t\t\t\t\t\t$(v).focus();\r\n\t\t\t\t\t\t\t\t\tend = true;\r\n\t\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}, this));\r\n\t\t\t\t\t\t\tif(end) { return; }\r\n\r\n\t\t\t\t\t\t\t// search from the beginning\r\n\t\t\t\t\t\t\tcol.slice(0, ind + 1).each(langx.proxy(function (i, v) {\r\n\t\t\t\t\t\t\t\tif($(v).text().toLowerCase().charAt(0) === chr) {\r\n\t\t\t\t\t\t\t\t\t$(v).focus();\r\n\t\t\t\t\t\t\t\t\tend = true;\r\n\t\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}, this));\r\n\t\t\t\t\t\t\tif(end) { return; }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t// THEME RELATED\r\n\t\t\t\t.on(\"init.jstree\", langx.proxy(function () {\r\n\t\t\t\t\t\tvar s = this.settings.core.themes;\r\n\t\t\t\t\t\tthis._data.core.themes.dots\t\t\t= s.dots;\r\n\t\t\t\t\t\tthis._data.core.themes.stripes\t\t= s.stripes;\r\n\t\t\t\t\t\tthis._data.core.themes.icons\t\t= s.icons;\r\n\t\t\t\t\t\tthis._data.core.themes.ellipsis\t\t= s.ellipsis;\r\n\t\t\t\t\t\tthis.set_theme(s.name || \"default\", s.url);\r\n\t\t\t\t\t\tthis.set_theme_variant(s.variant);\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"loading.jstree\", langx.proxy(function () {\r\n\t\t\t\t\t\tthis[ this._data.core.themes.dots ? \"show_dots\" : \"hide_dots\" ]();\r\n\t\t\t\t\t\tthis[ this._data.core.themes.icons ? \"show_icons\" : \"hide_icons\" ]();\r\n\t\t\t\t\t\tthis[ this._data.core.themes.stripes ? \"show_stripes\" : \"hide_stripes\" ]();\r\n\t\t\t\t\t\tthis[ this._data.core.themes.ellipsis ? \"show_ellipsis\" : \"hide_ellipsis\" ]();\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on('blur.jstree', '.jstree-anchor', langx.proxy(function (e) {\r\n\t\t\t\t\t\tthis._data.core.focused = null;\r\n\t\t\t\t\t\t$(e.currentTarget).filter('.jstree-hovered').mouseleave();\r\n\t\t\t\t\t\tthis.element.attr('tabindex', '0');\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on('focus.jstree', '.jstree-anchor', langx.proxy(function (e) {\r\n\t\t\t\t\t\tvar tmp = this.get_node(e.currentTarget);\r\n\t\t\t\t\t\tif(tmp && tmp.id) {\r\n\t\t\t\t\t\t\tthis._data.core.focused = tmp.id;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.element.find('.jstree-hovered').not(e.currentTarget).mouseleave();\r\n\t\t\t\t\t\t$(e.currentTarget).mouseenter();\r\n\t\t\t\t\t\tthis.element.attr('tabindex', '-1');\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on('focus.jstree', langx.proxy(function () {\r\n\t\t\t\t\t\tif(+(new Date()) - was_click > 500 && !this._data.core.focused && this.settings.core.restore_focus) {\r\n\t\t\t\t\t\t\twas_click = 0;\r\n\t\t\t\t\t\t\tvar act = this.get_node(this.element.attr('aria-activedescendant'), true);\r\n\t\t\t\t\t\t\tif(act) {\r\n\t\t\t\t\t\t\t\tact.find('> .jstree-anchor').focus();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on('mouseenter.jstree', '.jstree-anchor', langx.proxy(function (e) {\r\n\t\t\t\t\t\tthis.hover_node(e.currentTarget);\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on('mouseleave.jstree', '.jstree-anchor', langx.proxy(function (e) {\r\n\t\t\t\t\t\tthis.dehover_node(e.currentTarget);\r\n\t\t\t\t\t}, this));\r\n\t\t},\r\n\t\t/**\r\n\t\t * part of the destroying of an instance. Used internally.\r\n\t\t * @private\r\n\t\t * @name unbind()\r\n\t\t */\r\n\t\tunbind : function () {\r\n\t\t\tthis.element.off('.jstree');\r\n\t\t\t$(document).off('.jstree-' + this._id);\r\n\t\t},\r\n\t\t/**\r\n\t\t * trigger an event. Used internally.\r\n\t\t * @private\r\n\t\t * @name trigger(ev [, data])\r\n\t\t * @param  {String} ev the name of the event to trigger\r\n\t\t * @param  {Object} data additional data to pass with the event\r\n\t\t */\r\n\t\ttrigger : function (ev, data) {\r\n\t\t\tif(!data) {\r\n\t\t\t\tdata = {};\r\n\t\t\t}\r\n\t\t\tdata.instance = this;\r\n\t\t\tthis.element.trigger(ev.replace('.jstree','') + '.jstree', data);\r\n\t\t},\r\n\t\t/**\r\n\t\t * returns the jQuery extended instance container\r\n\t\t * @name get_container()\r\n\t\t * @return {jQuery}\r\n\t\t */\r\n\t\tget_container : function () {\r\n\t\t\treturn this.element;\r\n\t\t},\r\n\t\t/**\r\n\t\t * returns the jQuery extended main UL node inside the instance container. Used internally.\r\n\t\t * @private\r\n\t\t * @name get_container_ul()\r\n\t\t * @return {jQuery}\r\n\t\t */\r\n\t\tget_container_ul : function () {\r\n\t\t\treturn this.element.children(\".jstree-children\").first();\r\n\t\t},\r\n\t\t/**\r\n\t\t * gets string replacements (localization). Used internally.\r\n\t\t * @private\r\n\t\t * @name get_string(key)\r\n\t\t * @param  {String} key\r\n\t\t * @return {String}\r\n\t\t */\r\n\t\tget_string : function (key) {\r\n\t\t\tvar a = this.settings.core.strings;\r\n\t\t\tif(langx.isFunction(a)) { return a.call(this, key); }\r\n\t\t\tif(a && a[key]) { return a[key]; }\r\n\t\t\treturn key;\r\n\t\t},\r\n\t\t/**\r\n\t\t * gets the first child of a DOM node. Used internally.\r\n\t\t * @private\r\n\t\t * @name _firstChild(dom)\r\n\t\t * @param  {DOMElement} dom\r\n\t\t * @return {DOMElement}\r\n\t\t */\r\n\t\t_firstChild : function (dom) {\r\n\t\t\tdom = dom ? dom.firstChild : null;\r\n\t\t\twhile(dom !== null && dom.nodeType !== 1) {\r\n\t\t\t\tdom = dom.nextSibling;\r\n\t\t\t}\r\n\t\t\treturn dom;\r\n\t\t},\r\n\t\t/**\r\n\t\t * gets the next sibling of a DOM node. Used internally.\r\n\t\t * @private\r\n\t\t * @name _nextSibling(dom)\r\n\t\t * @param  {DOMElement} dom\r\n\t\t * @return {DOMElement}\r\n\t\t */\r\n\t\t_nextSibling : function (dom) {\r\n\t\t\tdom = dom ? dom.nextSibling : null;\r\n\t\t\twhile(dom !== null && dom.nodeType !== 1) {\r\n\t\t\t\tdom = dom.nextSibling;\r\n\t\t\t}\r\n\t\t\treturn dom;\r\n\t\t},\r\n\t\t/**\r\n\t\t * gets the previous sibling of a DOM node. Used internally.\r\n\t\t * @private\r\n\t\t * @name _previousSibling(dom)\r\n\t\t * @param  {DOMElement} dom\r\n\t\t * @return {DOMElement}\r\n\t\t */\r\n\t\t_previousSibling : function (dom) {\r\n\t\t\tdom = dom ? dom.previousSibling : null;\r\n\t\t\twhile(dom !== null && dom.nodeType !== 1) {\r\n\t\t\t\tdom = dom.previousSibling;\r\n\t\t\t}\r\n\t\t\treturn dom;\r\n\t\t},\r\n\t\t/**\r\n\t\t * get the JSON representation of a node (or the actual jQuery extended DOM node) by using any input (child DOM element, ID string, selector, etc)\r\n\t\t * @name get_node(obj [, as_dom])\r\n\t\t * @param  {mixed} obj\r\n\t\t * @param  {Boolean} as_dom\r\n\t\t * @return {Object|jQuery}\r\n\t\t */\r\n\t\tget_node : function (obj, as_dom) {\r\n\t\t\tif(obj && obj.id) {\r\n\t\t\t\tobj = obj.id;\r\n\t\t\t}\r\n\t\t\tvar dom;\r\n\t\t\ttry {\r\n\t\t\t\tif(this._model.data[obj]) {\r\n\t\t\t\t\tobj = this._model.data[obj];\r\n\t\t\t\t}\r\n\t\t\t\telse if(typeof obj === \"string\" && this._model.data[obj.replace(/^#/, '')]) {\r\n\t\t\t\t\tobj = this._model.data[obj.replace(/^#/, '')];\r\n\t\t\t\t}\r\n\t\t\t\telse if(typeof obj === \"string\" && (dom = $('#' + obj.replace($.jstree.idregex,'\\\\$&'), this.element)).length && this._model.data[dom.closest('.jstree-node').attr('id')]) {\r\n\t\t\t\t\tobj = this._model.data[dom.closest('.jstree-node').attr('id')];\r\n\t\t\t\t}\r\n\t\t\t\telse if((dom = $(obj, this.element)).length && this._model.data[dom.closest('.jstree-node').attr('id')]) {\r\n\t\t\t\t\tobj = this._model.data[dom.closest('.jstree-node').attr('id')];\r\n\t\t\t\t}\r\n\t\t\t\telse if((dom = $(obj, this.element)).length && dom.hasClass('jstree')) {\r\n\t\t\t\t\tobj = this._model.data[$.jstree.root];\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(as_dom) {\r\n\t\t\t\t\tobj = obj.id === $.jstree.root ? this.element : $('#' + obj.id.replace($.jstree.idregex,'\\\\$&'), this.element);\r\n\t\t\t\t}\r\n\t\t\t\treturn obj;\r\n\t\t\t} catch (ex) { return false; }\r\n\t\t},\r\n\t\t/**\r\n\t\t * get the path to a node, either consisting of node texts, or of node IDs, optionally glued together (otherwise an array)\r\n\t\t * @name get_path(obj [, glue, ids])\r\n\t\t * @param  {mixed} obj the node\r\n\t\t * @param  {String} glue if you want the path as a string - pass the glue here (for example '/'), if a falsy value is supplied here, an array is returned\r\n\t\t * @param  {Boolean} ids if set to true build the path using ID, otherwise node text is used\r\n\t\t * @return {mixed}\r\n\t\t */\r\n\t\tget_path : function (obj, glue, ids) {\r\n\t\t\tobj = obj.parents ? obj : this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root || !obj.parents) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvar i, j, p = [];\r\n\t\t\tp.push(ids ? obj.id : obj.text);\r\n\t\t\tfor(i = 0, j = obj.parents.length; i < j; i++) {\r\n\t\t\t\tp.push(ids ? obj.parents[i] : this.get_text(obj.parents[i]));\r\n\t\t\t}\r\n\t\t\tp = p.reverse().slice(1);\r\n\t\t\treturn glue ? p.join(glue) : p;\r\n\t\t},\r\n\t\t/**\r\n\t\t * get the next visible node that is below the `obj` node. If `strict` is set to `true` only sibling nodes are returned.\r\n\t\t * @name get_next_dom(obj [, strict])\r\n\t\t * @param  {mixed} obj\r\n\t\t * @param  {Boolean} strict\r\n\t\t * @return {jQuery}\r\n\t\t */\r\n\t\tget_next_dom : function (obj, strict) {\r\n\t\t\tvar tmp;\r\n\t\t\tobj = this.get_node(obj, true);\r\n\t\t\tif(obj[0] === this.element[0]) {\r\n\t\t\t\ttmp = this._firstChild(this.get_container_ul()[0]);\r\n\t\t\t\twhile (tmp && tmp.offsetHeight === 0) {\r\n\t\t\t\t\ttmp = this._nextSibling(tmp);\r\n\t\t\t\t}\r\n\t\t\t\treturn tmp ? $(tmp) : false;\r\n\t\t\t}\r\n\t\t\tif(!obj || !obj.length) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(strict) {\r\n\t\t\t\ttmp = obj[0];\r\n\t\t\t\tdo {\r\n\t\t\t\t\ttmp = this._nextSibling(tmp);\r\n\t\t\t\t} while (tmp && tmp.offsetHeight === 0);\r\n\t\t\t\treturn tmp ? $(tmp) : false;\r\n\t\t\t}\r\n\t\t\tif(obj.hasClass(\"jstree-open\")) {\r\n\t\t\t\ttmp = this._firstChild(obj.children('.jstree-children')[0]);\r\n\t\t\t\twhile (tmp && tmp.offsetHeight === 0) {\r\n\t\t\t\t\ttmp = this._nextSibling(tmp);\r\n\t\t\t\t}\r\n\t\t\t\tif(tmp !== null) {\r\n\t\t\t\t\treturn $(tmp);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ttmp = obj[0];\r\n\t\t\tdo {\r\n\t\t\t\ttmp = this._nextSibling(tmp);\r\n\t\t\t} while (tmp && tmp.offsetHeight === 0);\r\n\t\t\tif(tmp !== null) {\r\n\t\t\t\treturn $(tmp);\r\n\t\t\t}\r\n\t\t\treturn obj.parentsUntil(\".jstree\",\".jstree-node\").nextAll(\".jstree-node:visible\").first();\r\n\t\t},\r\n\t\t/**\r\n\t\t * get the previous visible node that is above the `obj` node. If `strict` is set to `true` only sibling nodes are returned.\r\n\t\t * @name get_prev_dom(obj [, strict])\r\n\t\t * @param  {mixed} obj\r\n\t\t * @param  {Boolean} strict\r\n\t\t * @return {jQuery}\r\n\t\t */\r\n\t\tget_prev_dom : function (obj, strict) {\r\n\t\t\tvar tmp;\r\n\t\t\tobj = this.get_node(obj, true);\r\n\t\t\tif(obj[0] === this.element[0]) {\r\n\t\t\t\ttmp = this.get_container_ul()[0].lastChild;\r\n\t\t\t\twhile (tmp && tmp.offsetHeight === 0) {\r\n\t\t\t\t\ttmp = this._previousSibling(tmp);\r\n\t\t\t\t}\r\n\t\t\t\treturn tmp ? $(tmp) : false;\r\n\t\t\t}\r\n\t\t\tif(!obj || !obj.length) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(strict) {\r\n\t\t\t\ttmp = obj[0];\r\n\t\t\t\tdo {\r\n\t\t\t\t\ttmp = this._previousSibling(tmp);\r\n\t\t\t\t} while (tmp && tmp.offsetHeight === 0);\r\n\t\t\t\treturn tmp ? $(tmp) : false;\r\n\t\t\t}\r\n\t\t\ttmp = obj[0];\r\n\t\t\tdo {\r\n\t\t\t\ttmp = this._previousSibling(tmp);\r\n\t\t\t} while (tmp && tmp.offsetHeight === 0);\r\n\t\t\tif(tmp !== null) {\r\n\t\t\t\tobj = $(tmp);\r\n\t\t\t\twhile(obj.hasClass(\"jstree-open\")) {\r\n\t\t\t\t\tobj = obj.children(\".jstree-children\").first().children(\".jstree-node:visible:last\");\r\n\t\t\t\t}\r\n\t\t\t\treturn obj;\r\n\t\t\t}\r\n\t\t\ttmp = obj[0].parentNode.parentNode;\r\n\t\t\treturn tmp && tmp.className && tmp.className.indexOf('jstree-node') !== -1 ? $(tmp) : false;\r\n\t\t},\r\n\t\t/**\r\n\t\t * get the parent ID of a node\r\n\t\t * @name get_parent(obj)\r\n\t\t * @param  {mixed} obj\r\n\t\t * @return {String}\r\n\t\t */\r\n\t\tget_parent : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn obj.parent;\r\n\t\t},\r\n\t\t/**\r\n\t\t * get a jQuery collection of all the children of a node (node must be rendered), returns false on error\r\n\t\t * @name get_children_dom(obj)\r\n\t\t * @param  {mixed} obj\r\n\t\t * @return {jQuery}\r\n\t\t */\r\n\t\tget_children_dom : function (obj) {\r\n\t\t\tobj = this.get_node(obj, true);\r\n\t\t\tif(obj[0] === this.element[0]) {\r\n\t\t\t\treturn this.get_container_ul().children(\".jstree-node\");\r\n\t\t\t}\r\n\t\t\tif(!obj || !obj.length) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn obj.children(\".jstree-children\").children(\".jstree-node\");\r\n\t\t},\r\n\t\t/**\r\n\t\t * checks if a node has children\r\n\t\t * @name is_parent(obj)\r\n\t\t * @param  {mixed} obj\r\n\t\t * @return {Boolean}\r\n\t\t */\r\n\t\tis_parent : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\treturn obj && (obj.state.loaded === false || obj.children.length > 0);\r\n\t\t},\r\n\t\t/**\r\n\t\t * checks if a node is loaded (its children are available)\r\n\t\t * @name is_loaded(obj)\r\n\t\t * @param  {mixed} obj\r\n\t\t * @return {Boolean}\r\n\t\t */\r\n\t\tis_loaded : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\treturn obj && obj.state.loaded;\r\n\t\t},\r\n\t\t/**\r\n\t\t * check if a node is currently loading (fetching children)\r\n\t\t * @name is_loading(obj)\r\n\t\t * @param  {mixed} obj\r\n\t\t * @return {Boolean}\r\n\t\t */\r\n\t\tis_loading : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\treturn obj && obj.state && obj.state.loading;\r\n\t\t},\r\n\t\t/**\r\n\t\t * check if a node is opened\r\n\t\t * @name is_open(obj)\r\n\t\t * @param  {mixed} obj\r\n\t\t * @return {Boolean}\r\n\t\t */\r\n\t\tis_open : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\treturn obj && obj.state.opened;\r\n\t\t},\r\n\t\t/**\r\n\t\t * check if a node is in a closed state\r\n\t\t * @name is_closed(obj)\r\n\t\t * @param  {mixed} obj\r\n\t\t * @return {Boolean}\r\n\t\t */\r\n\t\tis_closed : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\treturn obj && this.is_parent(obj) && !obj.state.opened;\r\n\t\t},\r\n\t\t/**\r\n\t\t * check if a node has no children\r\n\t\t * @name is_leaf(obj)\r\n\t\t * @param  {mixed} obj\r\n\t\t * @return {Boolean}\r\n\t\t */\r\n\t\tis_leaf : function (obj) {\r\n\t\t\treturn !this.is_parent(obj);\r\n\t\t},\r\n\t\t/**\r\n\t\t * loads a node (fetches its children using the `core.data` setting). Multiple nodes can be passed to by using an array.\r\n\t\t * @name load_node(obj [, callback])\r\n\t\t * @param  {mixed} obj\r\n\t\t * @param  {function} callback a function to be executed once loading is complete, the function is executed in the instance's scope and receives two arguments - the node and a boolean status\r\n\t\t * @return {Boolean}\r\n\t\t * @trigger load_node.jstree\r\n\t\t */\r\n\t\tload_node : function (obj, callback) {\r\n\t\t\tvar k, l, i, j, c;\r\n\t\t\tif(langx.isArray(obj)) {\r\n\t\t\t\tthis._load_nodes(obj.slice(), callback);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj) {\r\n\t\t\t\tif(callback) { callback.call(this, obj, false); }\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t// if(obj.state.loading) { } // the node is already loading - just wait for it to load and invoke callback? but if called implicitly it should be loaded again?\r\n\t\t\tif(obj.state.loaded) {\r\n\t\t\t\tobj.state.loaded = false;\r\n\t\t\t\tfor(i = 0, j = obj.parents.length; i < j; i++) {\r\n\t\t\t\t\tthis._model.data[obj.parents[i]].children_d = $.vakata.array_filter(this._model.data[obj.parents[i]].children_d, function (v) {\r\n\t\t\t\t\t\treturn langx.inArray(v, obj.children_d) === -1;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tfor(k = 0, l = obj.children_d.length; k < l; k++) {\r\n\t\t\t\t\tif(this._model.data[obj.children_d[k]].state.selected) {\r\n\t\t\t\t\t\tc = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdelete this._model.data[obj.children_d[k]];\r\n\t\t\t\t}\r\n\t\t\t\tif (c) {\r\n\t\t\t\t\tthis._data.core.selected = $.vakata.array_filter(this._data.core.selected, function (v) {\r\n\t\t\t\t\t\treturn langx.inArray(v, obj.children_d) === -1;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tobj.children = [];\r\n\t\t\t\tobj.children_d = [];\r\n\t\t\t\tif(c) {\r\n\t\t\t\t\tthis.trigger('changed', { 'action' : 'load_node', 'node' : obj, 'selected' : this._data.core.selected });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tobj.state.failed = false;\r\n\t\t\tobj.state.loading = true;\r\n\t\t\tthis.get_node(obj, true).addClass(\"jstree-loading\").attr('aria-busy',true);\r\n\t\t\tthis._load_node(obj, langx.proxy(function (status) {\r\n\t\t\t\tobj = this._model.data[obj.id];\r\n\t\t\t\tobj.state.loading = false;\r\n\t\t\t\tobj.state.loaded = status;\r\n\t\t\t\tobj.state.failed = !obj.state.loaded;\r\n\t\t\t\tvar dom = this.get_node(obj, true), i = 0, j = 0, m = this._model.data, has_children = false;\r\n\t\t\t\tfor(i = 0, j = obj.children.length; i < j; i++) {\r\n\t\t\t\t\tif(m[obj.children[i]] && !m[obj.children[i]].state.hidden) {\r\n\t\t\t\t\t\thas_children = true;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(obj.state.loaded && dom && dom.length) {\r\n\t\t\t\t\tdom.removeClass('jstree-closed jstree-open jstree-leaf');\r\n\t\t\t\t\tif (!has_children) {\r\n\t\t\t\t\t\tdom.addClass('jstree-leaf');\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tif (obj.id !== '#') {\r\n\t\t\t\t\t\t\tdom.addClass(obj.state.opened ? 'jstree-open' : 'jstree-closed');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tdom.removeClass(\"jstree-loading\").attr('aria-busy',false);\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered after a node is loaded\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name load_node.jstree\r\n\t\t\t\t * @param {Object} node the node that was loading\r\n\t\t\t\t * @param {Boolean} status was the node loaded successfully\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('load_node', { \"node\" : obj, \"status\" : status });\r\n\t\t\t\tif(callback) {\r\n\t\t\t\t\tcallback.call(this, obj, status);\r\n\t\t\t\t}\r\n\t\t\t}, this));\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\t/**\r\n\t\t * load an array of nodes (will also load unavailable nodes as soon as the appear in the structure). Used internally.\r\n\t\t * @private\r\n\t\t * @name _load_nodes(nodes [, callback])\r\n\t\t * @param  {array} nodes\r\n\t\t * @param  {function} callback a function to be executed once loading is complete, the function is executed in the instance's scope and receives one argument - the array passed to _load_nodes\r\n\t\t */\r\n\t\t_load_nodes : function (nodes, callback, is_callback, force_reload) {\r\n\t\t\tvar r = true,\r\n\t\t\t\tc = function () { this._load_nodes(nodes, callback, true); },\r\n\t\t\t\tm = this._model.data, i, j, tmp = [];\r\n\t\t\tfor(i = 0, j = nodes.length; i < j; i++) {\r\n\t\t\t\tif(m[nodes[i]] && ( (!m[nodes[i]].state.loaded && !m[nodes[i]].state.failed) || (!is_callback && force_reload) )) {\r\n\t\t\t\t\tif(!this.is_loading(nodes[i])) {\r\n\t\t\t\t\t\tthis.load_node(nodes[i], c);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tr = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(r) {\r\n\t\t\t\tfor(i = 0, j = nodes.length; i < j; i++) {\r\n\t\t\t\t\tif(m[nodes[i]] && m[nodes[i]].state.loaded) {\r\n\t\t\t\t\t\ttmp.push(nodes[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(callback && !callback.done) {\r\n\t\t\t\t\tcallback.call(this, tmp);\r\n\t\t\t\t\tcallback.done = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * loads all unloaded nodes\r\n\t\t * @name load_all([obj, callback])\r\n\t\t * @param {mixed} obj the node to load recursively, omit to load all nodes in the tree\r\n\t\t * @param {function} callback a function to be executed once loading all the nodes is complete,\r\n\t\t * @trigger load_all.jstree\r\n\t\t */\r\n\t\tload_all : function (obj, callback) {\r\n\t\t\tif(!obj) { obj = $.jstree.root; }\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj) { return false; }\r\n\t\t\tvar to_load = [],\r\n\t\t\t\tm = this._model.data,\r\n\t\t\t\tc = m[obj.id].children_d,\r\n\t\t\t\ti, j;\r\n\t\t\tif(obj.state && !obj.state.loaded) {\r\n\t\t\t\tto_load.push(obj.id);\r\n\t\t\t}\r\n\t\t\tfor(i = 0, j = c.length; i < j; i++) {\r\n\t\t\t\tif(m[c[i]] && m[c[i]].state && !m[c[i]].state.loaded) {\r\n\t\t\t\t\tto_load.push(c[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(to_load.length) {\r\n\t\t\t\tthis._load_nodes(to_load, function () {\r\n\t\t\t\t\tthis.load_all(obj, callback);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered after a load_all call completes\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name load_all.jstree\r\n\t\t\t\t * @param {Object} node the recursively loaded node\r\n\t\t\t\t */\r\n\t\t\t\tif(callback) { callback.call(this, obj); }\r\n\t\t\t\tthis.trigger('load_all', { \"node\" : obj });\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * handles the actual loading of a node. Used only internally.\r\n\t\t * @private\r\n\t\t * @name _load_node(obj [, callback])\r\n\t\t * @param  {mixed} obj\r\n\t\t * @param  {function} callback a function to be executed once loading is complete, the function is executed in the instance's scope and receives one argument - a boolean status\r\n\t\t * @return {Boolean}\r\n\t\t */\r\n\t\t_load_node : function (obj, callback) {\r\n\t\t\tvar s = this.settings.core.data, t;\r\n\t\t\tvar notTextOrCommentNode = function notTextOrCommentNode () {\r\n\t\t\t\treturn this.nodeType !== 3 && this.nodeType !== 8;\r\n\t\t\t};\r\n\t\t\t// use original HTML\r\n\t\t\tif(!s) {\r\n\t\t\t\tif(obj.id === $.jstree.root) {\r\n\t\t\t\t\treturn this._append_html_data(obj, this._data.core.original_container_html.clone(true), function (status) {\r\n\t\t\t\t\t\tcallback.call(this, status);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\treturn callback.call(this, false);\r\n\t\t\t\t}\r\n\t\t\t\t// return callback.call(this, obj.id === $.jstree.root ? this._append_html_data(obj, this._data.core.original_container_html.clone(true)) : false);\r\n\t\t\t}\r\n\t\t\tif(langx.isFunction(s)) {\r\n\t\t\t\treturn s.call(this, obj, langx.proxy(function (d) {\r\n\t\t\t\t\tif(d === false) {\r\n\t\t\t\t\t\tcallback.call(this, false);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis[typeof d === 'string' ? '_append_html_data' : '_append_json_data'](obj, typeof d === 'string' ? $(langx.parseHTML(d)).filter(notTextOrCommentNode) : d, function (status) {\r\n\t\t\t\t\t\t\tcallback.call(this, status);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// return d === false ? callback.call(this, false) : callback.call(this, this[typeof d === 'string' ? '_append_html_data' : '_append_json_data'](obj, typeof d === 'string' ? $(d) : d));\r\n\t\t\t\t}, this));\r\n\t\t\t}\r\n\t\t\tif(typeof s === 'object') {\r\n\t\t\t\tif(s.url) {\r\n\t\t\t\t\ts = langx.extend(true, {}, s);\r\n\t\t\t\t\tif(langx.isFunction(s.url)) {\r\n\t\t\t\t\t\ts.url = s.url.call(this, obj);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(langx.isFunction(s.data)) {\r\n\t\t\t\t\t\ts.data = s.data.call(this, obj);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn ajax(s)\r\n\t\t\t\t\t\t.done(langx.proxy(function (d,t,x) {\r\n\t\t\t\t\t\t\t\tvar type = x.getResponseHeader('Content-Type');\r\n\t\t\t\t\t\t\t\tif((type && type.indexOf('json') !== -1) || typeof d === \"object\") {\r\n\t\t\t\t\t\t\t\t\treturn this._append_json_data(obj, d, function (status) { callback.call(this, status); });\r\n\t\t\t\t\t\t\t\t\t//return callback.call(this, this._append_json_data(obj, d));\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif((type && type.indexOf('html') !== -1) || typeof d === \"string\") {\r\n\t\t\t\t\t\t\t\t\treturn this._append_html_data(obj, $(langx.parseHTML(d)).filter(notTextOrCommentNode), function (status) { callback.call(this, status); });\r\n\t\t\t\t\t\t\t\t\t// return callback.call(this, this._append_html_data(obj, $(d)));\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'ajax', 'plugin' : 'core', 'id' : 'core_04', 'reason' : 'Could not load node', 'data' : JSON.stringify({ 'id' : obj.id, 'xhr' : x }) };\r\n\t\t\t\t\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\r\n\t\t\t\t\t\t\t\treturn callback.call(this, false);\r\n\t\t\t\t\t\t\t}, this))\r\n\t\t\t\t\t\t.fail(langx.proxy(function (f) {\r\n\t\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'ajax', 'plugin' : 'core', 'id' : 'core_04', 'reason' : 'Could not load node', 'data' : JSON.stringify({ 'id' : obj.id, 'xhr' : f }) };\r\n\t\t\t\t\t\t\t\tcallback.call(this, false);\r\n\t\t\t\t\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\r\n\t\t\t\t\t\t\t}, this));\r\n\t\t\t\t}\r\n\t\t\t\tif (langx.isArray(s)) {\r\n\t\t\t\t\tt = langx.extend(true, [], s);\r\n\t\t\t\t} else if (langx.isPlainObject(s)) {\r\n\t\t\t\t\tt = langx.extend(true, {}, s);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tt = s;\r\n\t\t\t\t}\r\n\t\t\t\tif(obj.id === $.jstree.root) {\r\n\t\t\t\t\treturn this._append_json_data(obj, t, function (status) {\r\n\t\t\t\t\t\tcallback.call(this, status);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._data.core.last_error = { 'error' : 'nodata', 'plugin' : 'core', 'id' : 'core_05', 'reason' : 'Could not load node', 'data' : JSON.stringify({ 'id' : obj.id }) };\r\n\t\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\r\n\t\t\t\t\treturn callback.call(this, false);\r\n\t\t\t\t}\r\n\t\t\t\t//return callback.call(this, (obj.id === $.jstree.root ? this._append_json_data(obj, t) : false) );\r\n\t\t\t}\r\n\t\t\tif(typeof s === 'string') {\r\n\t\t\t\tif(obj.id === $.jstree.root) {\r\n\t\t\t\t\treturn this._append_html_data(obj, $(langx.parseHTML(s)).filter(notTextOrCommentNode), function (status) {\r\n\t\t\t\t\t\tcallback.call(this, status);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._data.core.last_error = { 'error' : 'nodata', 'plugin' : 'core', 'id' : 'core_06', 'reason' : 'Could not load node', 'data' : JSON.stringify({ 'id' : obj.id }) };\r\n\t\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\r\n\t\t\t\t\treturn callback.call(this, false);\r\n\t\t\t\t}\r\n\t\t\t\t//return callback.call(this, (obj.id === $.jstree.root ? this._append_html_data(obj, $(s)) : false) );\r\n\t\t\t}\r\n\t\t\treturn callback.call(this, false);\r\n\t\t},\r\n\t\t/**\r\n\t\t * adds a node to the list of nodes to redraw. Used only internally.\r\n\t\t * @private\r\n\t\t * @name _node_changed(obj [, callback])\r\n\t\t * @param  {mixed} obj\r\n\t\t */\r\n\t\t_node_changed : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n      if (obj && langx.inArray(obj.id, this._model.changed) === -1) {\r\n\t\t\t\tthis._model.changed.push(obj.id);\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * appends HTML content to the tree. Used internally.\r\n\t\t * @private\r\n\t\t * @name _append_html_data(obj, data)\r\n\t\t * @param  {mixed} obj the node to append to\r\n\t\t * @param  {String} data the HTML string to parse and append\r\n\t\t * @trigger model.jstree, changed.jstree\r\n\t\t */\r\n\t\t_append_html_data : function (dom, data, cb) {\r\n\t\t\tdom = this.get_node(dom);\r\n\t\t\tdom.children = [];\r\n\t\t\tdom.children_d = [];\r\n\t\t\tvar dat = data.is('ul') ? data.children() : data,\r\n\t\t\t\tpar = dom.id,\r\n\t\t\t\tchd = [],\r\n\t\t\t\tdpc = [],\r\n\t\t\t\tm = this._model.data,\r\n\t\t\t\tp = m[par],\r\n\t\t\t\ts = this._data.core.selected.length,\r\n\t\t\t\ttmp, i, j;\r\n\t\t\tdat.each(langx.proxy(function (i, v) {\r\n\t\t\t\ttmp = this._parse_model_from_html($(v), par, p.parents.concat());\r\n\t\t\t\tif(tmp) {\r\n\t\t\t\t\tchd.push(tmp);\r\n\t\t\t\t\tdpc.push(tmp);\r\n\t\t\t\t\tif(m[tmp].children_d.length) {\r\n\t\t\t\t\t\tdpc = dpc.concat(m[tmp].children_d);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}, this));\r\n\t\t\tp.children = chd;\r\n\t\t\tp.children_d = dpc;\r\n\t\t\tfor(i = 0, j = p.parents.length; i < j; i++) {\r\n\t\t\t\tm[p.parents[i]].children_d = m[p.parents[i]].children_d.concat(dpc);\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * triggered when new data is inserted to the tree model\r\n\t\t\t * @event\r\n\t\t\t * @name model.jstree\r\n\t\t\t * @param {Array} nodes an array of node IDs\r\n\t\t\t * @param {String} parent the parent ID of the nodes\r\n\t\t\t */\r\n\t\t\tthis.trigger('model', { \"nodes\" : dpc, 'parent' : par });\r\n\t\t\tif(par !== $.jstree.root) {\r\n\t\t\t\tthis._node_changed(par);\r\n\t\t\t\tthis.redraw();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.get_container_ul().children('.jstree-initial-node').remove();\r\n\t\t\t\tthis.redraw(true);\r\n\t\t\t}\r\n\t\t\tif(this._data.core.selected.length !== s) {\r\n\t\t\t\tthis.trigger('changed', { 'action' : 'model', 'selected' : this._data.core.selected });\r\n\t\t\t}\r\n\t\t\tcb.call(this, true);\r\n\t\t},\r\n\t\t/**\r\n\t\t * appends JSON content to the tree. Used internally.\r\n\t\t * @private\r\n\t\t * @name _append_json_data(obj, data)\r\n\t\t * @param  {mixed} obj the node to append to\r\n\t\t * @param  {String} data the JSON object to parse and append\r\n\t\t * @param  {Boolean} force_processing internal param - do not set\r\n\t\t * @trigger model.jstree, changed.jstree\r\n\t\t */\r\n\t\t_append_json_data : function (dom, data, cb, force_processing) {\r\n\t\t\tif(this.element === null) { return; }\r\n\t\t\tdom = this.get_node(dom);\r\n\t\t\tdom.children = [];\r\n\t\t\tdom.children_d = [];\r\n\t\t\t// *%$@!!!\r\n\t\t\tif(data.d) {\r\n\t\t\t\tdata = data.d;\r\n\t\t\t\tif(typeof data === \"string\") {\r\n\t\t\t\t\tdata = JSON.parse(data);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(!langx.isArray(data)) { data = [data]; }\r\n\t\t\tvar w = null,\r\n\t\t\t\targs = {\r\n\t\t\t\t\t'df'\t: this._model.default_state,\r\n\t\t\t\t\t'dat'\t: data,\r\n\t\t\t\t\t'par'\t: dom.id,\r\n\t\t\t\t\t'm'\t\t: this._model.data,\r\n\t\t\t\t\t't_id'\t: this._id,\r\n\t\t\t\t\t't_cnt'\t: this._cnt,\r\n\t\t\t\t\t'sel'\t: this._data.core.selected\r\n\t\t\t\t},\r\n\t\t\t\tfunc = function (data, undefined) {\r\n\t\t\t\t\tif(data.data) { data = data.data; }\r\n\t\t\t\t\tvar dat = data.dat,\r\n\t\t\t\t\t\tpar = data.par,\r\n\t\t\t\t\t\tchd = [],\r\n\t\t\t\t\t\tdpc = [],\r\n\t\t\t\t\t\tadd = [],\r\n\t\t\t\t\t\tdf = data.df,\r\n\t\t\t\t\t\tt_id = data.t_id,\r\n\t\t\t\t\t\tt_cnt = data.t_cnt,\r\n\t\t\t\t\t\tm = data.m,\r\n\t\t\t\t\t\tp = m[par],\r\n\t\t\t\t\t\tsel = data.sel,\r\n\t\t\t\t\t\ttmp, i, j, rslt,\r\n\t\t\t\t\t\tparse_flat = function (d, p, ps) {\r\n\t\t\t\t\t\t\tif(!ps) { ps = []; }\r\n\t\t\t\t\t\t\telse { ps = ps.concat(); }\r\n\t\t\t\t\t\t\tif(p) { ps.unshift(p); }\r\n\t\t\t\t\t\t\tvar tid = d.id.toString(),\r\n\t\t\t\t\t\t\t\ti, j, c, e,\r\n\t\t\t\t\t\t\t\ttmp = {\r\n\t\t\t\t\t\t\t\t\tid\t\t\t: tid,\r\n\t\t\t\t\t\t\t\t\ttext\t\t: d.text || '',\r\n\t\t\t\t\t\t\t\t\ticon\t\t: d.icon !== undefined ? d.icon : true,\r\n\t\t\t\t\t\t\t\t\tparent\t\t: p,\r\n\t\t\t\t\t\t\t\t\tparents\t\t: ps,\r\n\t\t\t\t\t\t\t\t\tchildren\t: d.children || [],\r\n\t\t\t\t\t\t\t\t\tchildren_d\t: d.children_d || [],\r\n\t\t\t\t\t\t\t\t\tdata\t\t: d.data,\r\n\t\t\t\t\t\t\t\t\tstate\t\t: { },\r\n\t\t\t\t\t\t\t\t\tli_attr\t\t: { id : false },\r\n\t\t\t\t\t\t\t\t\ta_attr\t\t: { href : '#' },\r\n\t\t\t\t\t\t\t\t\toriginal\t: false\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tfor(i in df) {\r\n\t\t\t\t\t\t\t\tif(df.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\t\ttmp.state[i] = df[i];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(d && d.data && d.data.jstree && d.data.jstree.icon) {\r\n\t\t\t\t\t\t\t\ttmp.icon = d.data.jstree.icon;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(tmp.icon === undefined || tmp.icon === null || tmp.icon === \"\") {\r\n\t\t\t\t\t\t\t\ttmp.icon = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(d && d.data) {\r\n\t\t\t\t\t\t\t\ttmp.data = d.data;\r\n\t\t\t\t\t\t\t\tif(d.data.jstree) {\r\n\t\t\t\t\t\t\t\t\tfor(i in d.data.jstree) {\r\n\t\t\t\t\t\t\t\t\t\tif(d.data.jstree.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\t\t\t\ttmp.state[i] = d.data.jstree[i];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(d && typeof d.state === 'object') {\r\n\t\t\t\t\t\t\t\tfor (i in d.state) {\r\n\t\t\t\t\t\t\t\t\tif(d.state.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\t\t\ttmp.state[i] = d.state[i];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(d && typeof d.li_attr === 'object') {\r\n\t\t\t\t\t\t\t\tfor (i in d.li_attr) {\r\n\t\t\t\t\t\t\t\t\tif(d.li_attr.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\t\t\ttmp.li_attr[i] = d.li_attr[i];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(!tmp.li_attr.id) {\r\n\t\t\t\t\t\t\t\ttmp.li_attr.id = tid;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(d && typeof d.a_attr === 'object') {\r\n\t\t\t\t\t\t\t\tfor (i in d.a_attr) {\r\n\t\t\t\t\t\t\t\t\tif(d.a_attr.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\t\t\ttmp.a_attr[i] = d.a_attr[i];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(d && d.children && d.children === true) {\r\n\t\t\t\t\t\t\t\ttmp.state.loaded = false;\r\n\t\t\t\t\t\t\t\ttmp.children = [];\r\n\t\t\t\t\t\t\t\ttmp.children_d = [];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tm[tmp.id] = tmp;\r\n\t\t\t\t\t\t\tfor(i = 0, j = tmp.children.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\tc = parse_flat(m[tmp.children[i]], tmp.id, ps);\r\n\t\t\t\t\t\t\t\te = m[c];\r\n\t\t\t\t\t\t\t\ttmp.children_d.push(c);\r\n\t\t\t\t\t\t\t\tif(e.children_d.length) {\r\n\t\t\t\t\t\t\t\t\ttmp.children_d = tmp.children_d.concat(e.children_d);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tdelete d.data;\r\n\t\t\t\t\t\t\tdelete d.children;\r\n\t\t\t\t\t\t\tm[tmp.id].original = d;\r\n\t\t\t\t\t\t\tif(tmp.state.selected) {\r\n\t\t\t\t\t\t\t\tadd.push(tmp.id);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn tmp.id;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tparse_nest = function (d, p, ps) {\r\n\t\t\t\t\t\t\tif(!ps) { ps = []; }\r\n\t\t\t\t\t\t\telse { ps = ps.concat(); }\r\n\t\t\t\t\t\t\tif(p) { ps.unshift(p); }\r\n\t\t\t\t\t\t\tvar tid = false, i, j, c, e, tmp;\r\n\t\t\t\t\t\t\tdo {\r\n\t\t\t\t\t\t\t\ttid = 'j' + t_id + '_' + (++t_cnt);\r\n\t\t\t\t\t\t\t} while(m[tid]);\r\n\r\n\t\t\t\t\t\t\ttmp = {\r\n\t\t\t\t\t\t\t\tid\t\t\t: false,\r\n\t\t\t\t\t\t\t\ttext\t\t: typeof d === 'string' ? d : '',\r\n\t\t\t\t\t\t\t\ticon\t\t: typeof d === 'object' && d.icon !== undefined ? d.icon : true,\r\n\t\t\t\t\t\t\t\tparent\t\t: p,\r\n\t\t\t\t\t\t\t\tparents\t\t: ps,\r\n\t\t\t\t\t\t\t\tchildren\t: [],\r\n\t\t\t\t\t\t\t\tchildren_d\t: [],\r\n\t\t\t\t\t\t\t\tdata\t\t: null,\r\n\t\t\t\t\t\t\t\tstate\t\t: { },\r\n\t\t\t\t\t\t\t\tli_attr\t\t: { id : false },\r\n\t\t\t\t\t\t\t\ta_attr\t\t: { href : '#' },\r\n\t\t\t\t\t\t\t\toriginal\t: false\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tfor(i in df) {\r\n\t\t\t\t\t\t\t\tif(df.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\t\ttmp.state[i] = df[i];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(d && d.id) { tmp.id = d.id.toString(); }\r\n\t\t\t\t\t\t\tif(d && d.text) { tmp.text = d.text; }\r\n\t\t\t\t\t\t\tif(d && d.data && d.data.jstree && d.data.jstree.icon) {\r\n\t\t\t\t\t\t\t\ttmp.icon = d.data.jstree.icon;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(tmp.icon === undefined || tmp.icon === null || tmp.icon === \"\") {\r\n\t\t\t\t\t\t\t\ttmp.icon = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(d && d.data) {\r\n\t\t\t\t\t\t\t\ttmp.data = d.data;\r\n\t\t\t\t\t\t\t\tif(d.data.jstree) {\r\n\t\t\t\t\t\t\t\t\tfor(i in d.data.jstree) {\r\n\t\t\t\t\t\t\t\t\t\tif(d.data.jstree.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\t\t\t\ttmp.state[i] = d.data.jstree[i];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(d && typeof d.state === 'object') {\r\n\t\t\t\t\t\t\t\tfor (i in d.state) {\r\n\t\t\t\t\t\t\t\t\tif(d.state.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\t\t\ttmp.state[i] = d.state[i];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(d && typeof d.li_attr === 'object') {\r\n\t\t\t\t\t\t\t\tfor (i in d.li_attr) {\r\n\t\t\t\t\t\t\t\t\tif(d.li_attr.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\t\t\ttmp.li_attr[i] = d.li_attr[i];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(tmp.li_attr.id && !tmp.id) {\r\n\t\t\t\t\t\t\t\ttmp.id = tmp.li_attr.id.toString();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(!tmp.id) {\r\n\t\t\t\t\t\t\t\ttmp.id = tid;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(!tmp.li_attr.id) {\r\n\t\t\t\t\t\t\t\ttmp.li_attr.id = tmp.id;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(d && typeof d.a_attr === 'object') {\r\n\t\t\t\t\t\t\t\tfor (i in d.a_attr) {\r\n\t\t\t\t\t\t\t\t\tif(d.a_attr.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\t\t\ttmp.a_attr[i] = d.a_attr[i];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(d && d.children && d.children.length) {\r\n\t\t\t\t\t\t\t\tfor(i = 0, j = d.children.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\tc = parse_nest(d.children[i], tmp.id, ps);\r\n\t\t\t\t\t\t\t\t\te = m[c];\r\n\t\t\t\t\t\t\t\t\ttmp.children.push(c);\r\n\t\t\t\t\t\t\t\t\tif(e.children_d.length) {\r\n\t\t\t\t\t\t\t\t\t\ttmp.children_d = tmp.children_d.concat(e.children_d);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\ttmp.children_d = tmp.children_d.concat(tmp.children);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(d && d.children && d.children === true) {\r\n\t\t\t\t\t\t\t\ttmp.state.loaded = false;\r\n\t\t\t\t\t\t\t\ttmp.children = [];\r\n\t\t\t\t\t\t\t\ttmp.children_d = [];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tdelete d.data;\r\n\t\t\t\t\t\t\tdelete d.children;\r\n\t\t\t\t\t\t\ttmp.original = d;\r\n\t\t\t\t\t\t\tm[tmp.id] = tmp;\r\n\t\t\t\t\t\t\tif(tmp.state.selected) {\r\n\t\t\t\t\t\t\t\tadd.push(tmp.id);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn tmp.id;\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\tif(dat.length && dat[0].id !== undefined && dat[0].parent !== undefined) {\r\n\t\t\t\t\t\t// Flat JSON support (for easy import from DB):\r\n\t\t\t\t\t\t// 1) convert to object (foreach)\r\n\t\t\t\t\t\tfor(i = 0, j = dat.length; i < j; i++) {\r\n\t\t\t\t\t\t\tif(!dat[i].children) {\r\n\t\t\t\t\t\t\t\tdat[i].children = [];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(!dat[i].state) {\r\n\t\t\t\t\t\t\t\tdat[i].state = {};\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tm[dat[i].id.toString()] = dat[i];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// 2) populate children (foreach)\r\n\t\t\t\t\t\tfor(i = 0, j = dat.length; i < j; i++) {\r\n\t\t\t\t\t\t\tif (!m[dat[i].parent.toString()]) {\r\n\t\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'parse', 'plugin' : 'core', 'id' : 'core_07', 'reason' : 'Node with invalid parent', 'data' : JSON.stringify({ 'id' : dat[i].id.toString(), 'parent' : dat[i].parent.toString() }) };\r\n\t\t\t\t\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\r\n\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tm[dat[i].parent.toString()].children.push(dat[i].id.toString());\r\n\t\t\t\t\t\t\t// populate parent.children_d\r\n\t\t\t\t\t\t\tp.children_d.push(dat[i].id.toString());\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// 3) normalize && populate parents and children_d with recursion\r\n\t\t\t\t\t\tfor(i = 0, j = p.children.length; i < j; i++) {\r\n\t\t\t\t\t\t\ttmp = parse_flat(m[p.children[i]], par, p.parents.concat());\r\n\t\t\t\t\t\t\tdpc.push(tmp);\r\n\t\t\t\t\t\t\tif(m[tmp].children_d.length) {\r\n\t\t\t\t\t\t\t\tdpc = dpc.concat(m[tmp].children_d);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfor(i = 0, j = p.parents.length; i < j; i++) {\r\n\t\t\t\t\t\t\tm[p.parents[i]].children_d = m[p.parents[i]].children_d.concat(dpc);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// ?) three_state selection - p.state.selected && t - (if three_state foreach(dat => ch) -> foreach(parents) if(parent.selected) child.selected = true;\r\n\t\t\t\t\t\trslt = {\r\n\t\t\t\t\t\t\t'cnt' : t_cnt,\r\n\t\t\t\t\t\t\t'mod' : m,\r\n\t\t\t\t\t\t\t'sel' : sel,\r\n\t\t\t\t\t\t\t'par' : par,\r\n\t\t\t\t\t\t\t'dpc' : dpc,\r\n\t\t\t\t\t\t\t'add' : add\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tfor(i = 0, j = dat.length; i < j; i++) {\r\n\t\t\t\t\t\t\ttmp = parse_nest(dat[i], par, p.parents.concat());\r\n\t\t\t\t\t\t\tif(tmp) {\r\n\t\t\t\t\t\t\t\tchd.push(tmp);\r\n\t\t\t\t\t\t\t\tdpc.push(tmp);\r\n\t\t\t\t\t\t\t\tif(m[tmp].children_d.length) {\r\n\t\t\t\t\t\t\t\t\tdpc = dpc.concat(m[tmp].children_d);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tp.children = chd;\r\n\t\t\t\t\t\tp.children_d = dpc;\r\n\t\t\t\t\t\tfor(i = 0, j = p.parents.length; i < j; i++) {\r\n\t\t\t\t\t\t\tm[p.parents[i]].children_d = m[p.parents[i]].children_d.concat(dpc);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\trslt = {\r\n\t\t\t\t\t\t\t'cnt' : t_cnt,\r\n\t\t\t\t\t\t\t'mod' : m,\r\n\t\t\t\t\t\t\t'sel' : sel,\r\n\t\t\t\t\t\t\t'par' : par,\r\n\t\t\t\t\t\t\t'dpc' : dpc,\r\n\t\t\t\t\t\t\t'add' : add\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(typeof window === 'undefined' || typeof window.document === 'undefined') {\r\n\t\t\t\t\t\tpostMessage(rslt);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\treturn rslt;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\trslt = function (rslt, worker) {\r\n\t\t\t\t\tif(this.element === null) { return; }\r\n\t\t\t\t\tthis._cnt = rslt.cnt;\r\n\t\t\t\t\tvar i, m = this._model.data;\r\n\t\t\t\t\tfor (i in m) {\r\n\t\t\t\t\t\tif (m.hasOwnProperty(i) && m[i].state && m[i].state.loading && rslt.mod[i]) {\r\n\t\t\t\t\t\t\trslt.mod[i].state.loading = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._model.data = rslt.mod; // breaks the reference in load_node - careful\r\n\r\n\t\t\t\t\tif(worker) {\r\n\t\t\t\t\t\tvar j, a = rslt.add, r = rslt.sel, s = this._data.core.selected.slice();\r\n\t\t\t\t\t\tm = this._model.data;\r\n\t\t\t\t\t\t// if selection was changed while calculating in worker\r\n\t\t\t\t\t\tif(r.length !== s.length || $.vakata.array_unique(r.concat(s)).length !== r.length) {\r\n\t\t\t\t\t\t\t// deselect nodes that are no longer selected\r\n\t\t\t\t\t\t\tfor(i = 0, j = r.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\tif(langx.inArray(r[i], a) === -1 && langx.inArray(r[i], s) === -1) {\r\n\t\t\t\t\t\t\t\t\tm[r[i]].state.selected = false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// select nodes that were selected in the mean time\r\n\t\t\t\t\t\t\tfor(i = 0, j = s.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\tif(langx.inArray(s[i], r) === -1) {\r\n\t\t\t\t\t\t\t\t\tm[s[i]].state.selected = true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(rslt.add.length) {\r\n\t\t\t\t\t\tthis._data.core.selected = this._data.core.selected.concat(rslt.add);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.trigger('model', { \"nodes\" : rslt.dpc, 'parent' : rslt.par });\r\n\r\n\t\t\t\t\tif(rslt.par !== $.jstree.root) {\r\n\t\t\t\t\t\tthis._node_changed(rslt.par);\r\n\t\t\t\t\t\tthis.redraw();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t// this.get_container_ul().children('.jstree-initial-node').remove();\r\n\t\t\t\t\t\tthis.redraw(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(rslt.add.length) {\r\n\t\t\t\t\t\tthis.trigger('changed', { 'action' : 'model', 'selected' : this._data.core.selected });\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcb.call(this, true);\r\n\t\t\t\t};\r\n\t\t\tif(this.settings.core.worker && window.Blob && window.URL && window.Worker) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tif(this._wrk === null) {\r\n\t\t\t\t\t\tthis._wrk = window.URL.createObjectURL(\r\n\t\t\t\t\t\t\tnew window.Blob(\r\n\t\t\t\t\t\t\t\t['self.onmessage = ' + func.toString()],\r\n\t\t\t\t\t\t\t\t{type:\"text/javascript\"}\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(!this._data.core.working || force_processing) {\r\n\t\t\t\t\t\tthis._data.core.working = true;\r\n\t\t\t\t\t\tw = new window.Worker(this._wrk);\r\n\t\t\t\t\t\tw.onmessage = langx.proxy(function (e) {\r\n\t\t\t\t\t\t\trslt.call(this, e.data, true);\r\n\t\t\t\t\t\t\ttry { w.terminate(); w = null; } catch(ignore) { }\r\n\t\t\t\t\t\t\tif(this._data.core.worker_queue.length) {\r\n\t\t\t\t\t\t\t\tthis._append_json_data.apply(this, this._data.core.worker_queue.shift());\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tthis._data.core.working = false;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, this);\r\n\t\t\t\t\t\tif(!args.par) {\r\n\t\t\t\t\t\t\tif(this._data.core.worker_queue.length) {\r\n\t\t\t\t\t\t\t\tthis._append_json_data.apply(this, this._data.core.worker_queue.shift());\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tthis._data.core.working = false;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tw.postMessage(args);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis._data.core.worker_queue.push([dom, data, cb, true]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tcatch(e) {\r\n\t\t\t\t\trslt.call(this, func(args), false);\r\n\t\t\t\t\tif(this._data.core.worker_queue.length) {\r\n\t\t\t\t\t\tthis._append_json_data.apply(this, this._data.core.worker_queue.shift());\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis._data.core.working = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\trslt.call(this, func(args), false);\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * parses a node from a jQuery object and appends them to the in memory tree model. Used internally.\r\n\t\t * @private\r\n\t\t * @name _parse_model_from_html(d [, p, ps])\r\n\t\t * @param  {jQuery} d the jQuery object to parse\r\n\t\t * @param  {String} p the parent ID\r\n\t\t * @param  {Array} ps list of all parents\r\n\t\t * @return {String} the ID of the object added to the model\r\n\t\t */\r\n\t\t_parse_model_from_html : function (d, p, ps) {\r\n\t\t\tif(!ps) { ps = []; }\r\n\t\t\telse { ps = [].concat(ps); }\r\n\t\t\tif(p) { ps.unshift(p); }\r\n\t\t\tvar c, e, m = this._model.data,\r\n\t\t\t\tdata = {\r\n\t\t\t\t\tid\t\t\t: false,\r\n\t\t\t\t\ttext\t\t: false,\r\n\t\t\t\t\ticon\t\t: true,\r\n\t\t\t\t\tparent\t\t: p,\r\n\t\t\t\t\tparents\t\t: ps,\r\n\t\t\t\t\tchildren\t: [],\r\n\t\t\t\t\tchildren_d\t: [],\r\n\t\t\t\t\tdata\t\t: null,\r\n\t\t\t\t\tstate\t\t: { },\r\n\t\t\t\t\tli_attr\t\t: { id : false },\r\n\t\t\t\t\ta_attr\t\t: { href : '#' },\r\n\t\t\t\t\toriginal\t: false\r\n\t\t\t\t}, i, tmp, tid;\r\n\t\t\tfor(i in this._model.default_state) {\r\n\t\t\t\tif(this._model.default_state.hasOwnProperty(i)) {\r\n\t\t\t\t\tdata.state[i] = this._model.default_state[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ttmp = $.vakata.attributes(d, true);\r\n\t\t\tlangx.each(tmp, function (i, v) {\r\n\t\t\t\tv = langx.trim(v);\r\n\t\t\t\tif(!v.length) { return true; }\r\n\t\t\t\tdata.li_attr[i] = v;\r\n\t\t\t\tif(i === 'id') {\r\n\t\t\t\t\tdata.id = v.toString();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\ttmp = d.children('a').first();\r\n\t\t\tif(tmp.length) {\r\n\t\t\t\ttmp = $.vakata.attributes(tmp, true);\r\n\t\t\t\tlangx.each(tmp, function (i, v) {\r\n\t\t\t\t\tv = langx.trim(v);\r\n\t\t\t\t\tif(v.length) {\r\n\t\t\t\t\t\tdata.a_attr[i] = v;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\ttmp = d.children(\"a\").first().length ? d.children(\"a\").first().clone() : d.clone();\r\n\t\t\ttmp.children(\"ins, i, ul\").remove();\r\n\t\t\ttmp = tmp.html();\r\n\t\t\ttmp = $('<div />').html(tmp);\r\n\t\t\tdata.text = this.settings.core.force_text ? tmp.text() : tmp.html();\r\n\t\t\ttmp = d.data();\r\n\t\t\tdata.data = tmp ? langx.extend(true, {}, tmp) : null;\r\n\t\t\tdata.state.opened = d.hasClass('jstree-open');\r\n\t\t\tdata.state.selected = d.children('a').hasClass('jstree-clicked');\r\n\t\t\tdata.state.disabled = d.children('a').hasClass('jstree-disabled');\r\n\t\t\tif(data.data && data.data.jstree) {\r\n\t\t\t\tfor(i in data.data.jstree) {\r\n\t\t\t\t\tif(data.data.jstree.hasOwnProperty(i)) {\r\n\t\t\t\t\t\tdata.state[i] = data.data.jstree[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ttmp = d.children(\"a\").children(\".jstree-themeicon\");\r\n\t\t\tif(tmp.length) {\r\n\t\t\t\tdata.icon = tmp.hasClass('jstree-themeicon-hidden') ? false : tmp.attr('rel');\r\n\t\t\t}\r\n\t\t\tif(data.state.icon !== undefined) {\r\n\t\t\t\tdata.icon = data.state.icon;\r\n\t\t\t}\r\n\t\t\tif(data.icon === undefined || data.icon === null || data.icon === \"\") {\r\n\t\t\t\tdata.icon = true;\r\n\t\t\t}\r\n\t\t\ttmp = d.children(\"ul\").children(\"li\");\r\n\t\t\tdo {\r\n\t\t\t\ttid = 'j' + this._id + '_' + (++this._cnt);\r\n\t\t\t} while(m[tid]);\r\n\t\t\tdata.id = data.li_attr.id ? data.li_attr.id.toString() : tid;\r\n\t\t\tif(tmp.length) {\r\n\t\t\t\ttmp.each(langx.proxy(function (i, v) {\r\n\t\t\t\t\tc = this._parse_model_from_html($(v), data.id, ps);\r\n\t\t\t\t\te = this._model.data[c];\r\n\t\t\t\t\tdata.children.push(c);\r\n\t\t\t\t\tif(e.children_d.length) {\r\n\t\t\t\t\t\tdata.children_d = data.children_d.concat(e.children_d);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, this));\r\n\t\t\t\tdata.children_d = data.children_d.concat(data.children);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif(d.hasClass('jstree-closed')) {\r\n\t\t\t\t\tdata.state.loaded = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(data.li_attr['class']) {\r\n\t\t\t\tdata.li_attr['class'] = data.li_attr['class'].replace('jstree-closed','').replace('jstree-open','');\r\n\t\t\t}\r\n\t\t\tif(data.a_attr['class']) {\r\n\t\t\t\tdata.a_attr['class'] = data.a_attr['class'].replace('jstree-clicked','').replace('jstree-disabled','');\r\n\t\t\t}\r\n\t\t\tm[data.id] = data;\r\n\t\t\tif(data.state.selected) {\r\n\t\t\t\tthis._data.core.selected.push(data.id);\r\n\t\t\t}\r\n\t\t\treturn data.id;\r\n\t\t},\r\n\t\t/**\r\n\t\t * parses a node from a JSON object (used when dealing with flat data, which has no nesting of children, but has id and parent properties) and appends it to the in memory tree model. Used internally.\r\n\t\t * @private\r\n\t\t * @name _parse_model_from_flat_json(d [, p, ps])\r\n\t\t * @param  {Object} d the JSON object to parse\r\n\t\t * @param  {String} p the parent ID\r\n\t\t * @param  {Array} ps list of all parents\r\n\t\t * @return {String} the ID of the object added to the model\r\n\t\t */\r\n\t\t_parse_model_from_flat_json : function (d, p, ps) {\r\n\t\t\tif(!ps) { ps = []; }\r\n\t\t\telse { ps = ps.concat(); }\r\n\t\t\tif(p) { ps.unshift(p); }\r\n\t\t\tvar tid = d.id.toString(),\r\n\t\t\t\tm = this._model.data,\r\n\t\t\t\tdf = this._model.default_state,\r\n\t\t\t\ti, j, c, e,\r\n\t\t\t\ttmp = {\r\n\t\t\t\t\tid\t\t\t: tid,\r\n\t\t\t\t\ttext\t\t: d.text || '',\r\n\t\t\t\t\ticon\t\t: d.icon !== undefined ? d.icon : true,\r\n\t\t\t\t\tparent\t\t: p,\r\n\t\t\t\t\tparents\t\t: ps,\r\n\t\t\t\t\tchildren\t: d.children || [],\r\n\t\t\t\t\tchildren_d\t: d.children_d || [],\r\n\t\t\t\t\tdata\t\t: d.data,\r\n\t\t\t\t\tstate\t\t: { },\r\n\t\t\t\t\tli_attr\t\t: { id : false },\r\n\t\t\t\t\ta_attr\t\t: { href : '#' },\r\n\t\t\t\t\toriginal\t: false\r\n\t\t\t\t};\r\n\t\t\tfor(i in df) {\r\n\t\t\t\tif(df.hasOwnProperty(i)) {\r\n\t\t\t\t\ttmp.state[i] = df[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(d && d.data && d.data.jstree && d.data.jstree.icon) {\r\n\t\t\t\ttmp.icon = d.data.jstree.icon;\r\n\t\t\t}\r\n\t\t\tif(tmp.icon === undefined || tmp.icon === null || tmp.icon === \"\") {\r\n\t\t\t\ttmp.icon = true;\r\n\t\t\t}\r\n\t\t\tif(d && d.data) {\r\n\t\t\t\ttmp.data = d.data;\r\n\t\t\t\tif(d.data.jstree) {\r\n\t\t\t\t\tfor(i in d.data.jstree) {\r\n\t\t\t\t\t\tif(d.data.jstree.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\ttmp.state[i] = d.data.jstree[i];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(d && typeof d.state === 'object') {\r\n\t\t\t\tfor (i in d.state) {\r\n\t\t\t\t\tif(d.state.hasOwnProperty(i)) {\r\n\t\t\t\t\t\ttmp.state[i] = d.state[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(d && typeof d.li_attr === 'object') {\r\n\t\t\t\tfor (i in d.li_attr) {\r\n\t\t\t\t\tif(d.li_attr.hasOwnProperty(i)) {\r\n\t\t\t\t\t\ttmp.li_attr[i] = d.li_attr[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(!tmp.li_attr.id) {\r\n\t\t\t\ttmp.li_attr.id = tid;\r\n\t\t\t}\r\n\t\t\tif(d && typeof d.a_attr === 'object') {\r\n\t\t\t\tfor (i in d.a_attr) {\r\n\t\t\t\t\tif(d.a_attr.hasOwnProperty(i)) {\r\n\t\t\t\t\t\ttmp.a_attr[i] = d.a_attr[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(d && d.children && d.children === true) {\r\n\t\t\t\ttmp.state.loaded = false;\r\n\t\t\t\ttmp.children = [];\r\n\t\t\t\ttmp.children_d = [];\r\n\t\t\t}\r\n\t\t\tm[tmp.id] = tmp;\r\n\t\t\tfor(i = 0, j = tmp.children.length; i < j; i++) {\r\n\t\t\t\tc = this._parse_model_from_flat_json(m[tmp.children[i]], tmp.id, ps);\r\n\t\t\t\te = m[c];\r\n\t\t\t\ttmp.children_d.push(c);\r\n\t\t\t\tif(e.children_d.length) {\r\n\t\t\t\t\ttmp.children_d = tmp.children_d.concat(e.children_d);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tdelete d.data;\r\n\t\t\tdelete d.children;\r\n\t\t\tm[tmp.id].original = d;\r\n\t\t\tif(tmp.state.selected) {\r\n\t\t\t\tthis._data.core.selected.push(tmp.id);\r\n\t\t\t}\r\n\t\t\treturn tmp.id;\r\n\t\t},\r\n\t\t/**\r\n\t\t * parses a node from a JSON object and appends it to the in memory tree model. Used internally.\r\n\t\t * @private\r\n\t\t * @name _parse_model_from_json(d [, p, ps])\r\n\t\t * @param  {Object} d the JSON object to parse\r\n\t\t * @param  {String} p the parent ID\r\n\t\t * @param  {Array} ps list of all parents\r\n\t\t * @return {String} the ID of the object added to the model\r\n\t\t */\r\n\t\t_parse_model_from_json : function (d, p, ps) {\r\n\t\t\tif(!ps) { ps = []; }\r\n\t\t\telse { ps = ps.concat(); }\r\n\t\t\tif(p) { ps.unshift(p); }\r\n\t\t\tvar tid = false, i, j, c, e, m = this._model.data, df = this._model.default_state, tmp;\r\n\t\t\tdo {\r\n\t\t\t\ttid = 'j' + this._id + '_' + (++this._cnt);\r\n\t\t\t} while(m[tid]);\r\n\r\n\t\t\ttmp = {\r\n\t\t\t\tid\t\t\t: false,\r\n\t\t\t\ttext\t\t: typeof d === 'string' ? d : '',\r\n\t\t\t\ticon\t\t: typeof d === 'object' && d.icon !== undefined ? d.icon : true,\r\n\t\t\t\tparent\t\t: p,\r\n\t\t\t\tparents\t\t: ps,\r\n\t\t\t\tchildren\t: [],\r\n\t\t\t\tchildren_d\t: [],\r\n\t\t\t\tdata\t\t: null,\r\n\t\t\t\tstate\t\t: { },\r\n\t\t\t\tli_attr\t\t: { id : false },\r\n\t\t\t\ta_attr\t\t: { href : '#' },\r\n\t\t\t\toriginal\t: false\r\n\t\t\t};\r\n\t\t\tfor(i in df) {\r\n\t\t\t\tif(df.hasOwnProperty(i)) {\r\n\t\t\t\t\ttmp.state[i] = df[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(d && d.id) { tmp.id = d.id.toString(); }\r\n\t\t\tif(d && d.text) { tmp.text = d.text; }\r\n\t\t\tif(d && d.data && d.data.jstree && d.data.jstree.icon) {\r\n\t\t\t\ttmp.icon = d.data.jstree.icon;\r\n\t\t\t}\r\n\t\t\tif(tmp.icon === undefined || tmp.icon === null || tmp.icon === \"\") {\r\n\t\t\t\ttmp.icon = true;\r\n\t\t\t}\r\n\t\t\tif(d && d.data) {\r\n\t\t\t\ttmp.data = d.data;\r\n\t\t\t\tif(d.data.jstree) {\r\n\t\t\t\t\tfor(i in d.data.jstree) {\r\n\t\t\t\t\t\tif(d.data.jstree.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\ttmp.state[i] = d.data.jstree[i];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(d && typeof d.state === 'object') {\r\n\t\t\t\tfor (i in d.state) {\r\n\t\t\t\t\tif(d.state.hasOwnProperty(i)) {\r\n\t\t\t\t\t\ttmp.state[i] = d.state[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(d && typeof d.li_attr === 'object') {\r\n\t\t\t\tfor (i in d.li_attr) {\r\n\t\t\t\t\tif(d.li_attr.hasOwnProperty(i)) {\r\n\t\t\t\t\t\ttmp.li_attr[i] = d.li_attr[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(tmp.li_attr.id && !tmp.id) {\r\n\t\t\t\ttmp.id = tmp.li_attr.id.toString();\r\n\t\t\t}\r\n\t\t\tif(!tmp.id) {\r\n\t\t\t\ttmp.id = tid;\r\n\t\t\t}\r\n\t\t\tif(!tmp.li_attr.id) {\r\n\t\t\t\ttmp.li_attr.id = tmp.id;\r\n\t\t\t}\r\n\t\t\tif(d && typeof d.a_attr === 'object') {\r\n\t\t\t\tfor (i in d.a_attr) {\r\n\t\t\t\t\tif(d.a_attr.hasOwnProperty(i)) {\r\n\t\t\t\t\t\ttmp.a_attr[i] = d.a_attr[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(d && d.children && d.children.length) {\r\n\t\t\t\tfor(i = 0, j = d.children.length; i < j; i++) {\r\n\t\t\t\t\tc = this._parse_model_from_json(d.children[i], tmp.id, ps);\r\n\t\t\t\t\te = m[c];\r\n\t\t\t\t\ttmp.children.push(c);\r\n\t\t\t\t\tif(e.children_d.length) {\r\n\t\t\t\t\t\ttmp.children_d = tmp.children_d.concat(e.children_d);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\ttmp.children_d = tmp.children_d.concat(tmp.children);\r\n\t\t\t}\r\n\t\t\tif(d && d.children && d.children === true) {\r\n\t\t\t\ttmp.state.loaded = false;\r\n\t\t\t\ttmp.children = [];\r\n\t\t\t\ttmp.children_d = [];\r\n\t\t\t}\r\n\t\t\tdelete d.data;\r\n\t\t\tdelete d.children;\r\n\t\t\ttmp.original = d;\r\n\t\t\tm[tmp.id] = tmp;\r\n\t\t\tif(tmp.state.selected) {\r\n\t\t\t\tthis._data.core.selected.push(tmp.id);\r\n\t\t\t}\r\n\t\t\treturn tmp.id;\r\n\t\t},\r\n\t\t/**\r\n\t\t * redraws all nodes that need to be redrawn. Used internally.\r\n\t\t * @private\r\n\t\t * @name _redraw()\r\n\t\t * @trigger redraw.jstree\r\n\t\t */\r\n\t\t_redraw : function () {\r\n\t\t\tvar nodes = this._model.force_full_redraw ? this._model.data[$.jstree.root].children.concat([]) : this._model.changed.concat([]),\r\n\t\t\t\tf = document.createElement('UL'), tmp, i, j, fe = this._data.core.focused;\r\n\t\t\tfor(i = 0, j = nodes.length; i < j; i++) {\r\n\t\t\t\ttmp = this.redraw_node(nodes[i], true, this._model.force_full_redraw);\r\n\t\t\t\tif(tmp && this._model.force_full_redraw) {\r\n\t\t\t\t\tf.appendChild(tmp);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(this._model.force_full_redraw) {\r\n\t\t\t\tf.className = this.get_container_ul()[0].className;\r\n\t\t\t\tf.setAttribute('role','group');\r\n\t\t\t\tthis.element.empty().append(f);\r\n\t\t\t\t//this.get_container_ul()[0].appendChild(f);\r\n\t\t\t}\r\n\t\t\tif(fe !== null) {\r\n\t\t\t\ttmp = this.get_node(fe, true);\r\n\t\t\t\tif(tmp && tmp.length && tmp.children('.jstree-anchor')[0] !== document.activeElement) {\r\n\t\t\t\t\ttmp.children('.jstree-anchor').focus();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._data.core.focused = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._model.force_full_redraw = false;\r\n\t\t\tthis._model.changed = [];\r\n\t\t\t/**\r\n\t\t\t * triggered after nodes are redrawn\r\n\t\t\t * @event\r\n\t\t\t * @name redraw.jstree\r\n\t\t\t * @param {array} nodes the redrawn nodes\r\n\t\t\t */\r\n\t\t\tthis.trigger('redraw', { \"nodes\" : nodes });\r\n\t\t},\r\n\t\t/**\r\n\t\t * redraws all nodes that need to be redrawn or optionally - the whole tree\r\n\t\t * @name redraw([full])\r\n\t\t * @param {Boolean} full if set to `true` all nodes are redrawn.\r\n\t\t */\r\n\t\tredraw : function (full) {\r\n\t\t\tif(full) {\r\n\t\t\t\tthis._model.force_full_redraw = true;\r\n\t\t\t}\r\n\t\t\t//if(this._model.redraw_timeout) {\r\n\t\t\t//\tclearTimeout(this._model.redraw_timeout);\r\n\t\t\t//}\r\n\t\t\t//this._model.redraw_timeout = setTimeout($.proxy(this._redraw, this),0);\r\n\t\t\tthis._redraw();\r\n\t\t},\r\n\t\t/**\r\n\t\t * redraws a single node's children. Used internally.\r\n\t\t * @private\r\n\t\t * @name draw_children(node)\r\n\t\t * @param {mixed} node the node whose children will be redrawn\r\n\t\t */\r\n\t\tdraw_children : function (node) {\r\n\t\t\tvar obj = this.get_node(node),\r\n\t\t\t\ti = false,\r\n\t\t\t\tj = false,\r\n\t\t\t\tk = false,\r\n\t\t\t\td = document;\r\n\t\t\tif(!obj) { return false; }\r\n\t\t\tif(obj.id === $.jstree.root) { return this.redraw(true); }\r\n\t\t\tnode = this.get_node(node, true);\r\n\t\t\tif(!node || !node.length) { return false; } // TODO: quick toggle\r\n\r\n\t\t\tnode.children('.jstree-children').remove();\r\n\t\t\tnode = node[0];\r\n\t\t\tif(obj.children.length && obj.state.loaded) {\r\n\t\t\t\tk = d.createElement('UL');\r\n\t\t\t\tk.setAttribute('role', 'group');\r\n\t\t\t\tk.className = 'jstree-children';\r\n\t\t\t\tfor(i = 0, j = obj.children.length; i < j; i++) {\r\n\t\t\t\t\tk.appendChild(this.redraw_node(obj.children[i], true, true));\r\n\t\t\t\t}\r\n\t\t\t\tnode.appendChild(k);\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * redraws a single node. Used internally.\r\n\t\t * @private\r\n\t\t * @name redraw_node(node, deep, is_callback, force_render)\r\n\t\t * @param {mixed} node the node to redraw\r\n\t\t * @param {Boolean} deep should child nodes be redrawn too\r\n\t\t * @param {Boolean} is_callback is this a recursion call\r\n\t\t * @param {Boolean} force_render should children of closed parents be drawn anyway\r\n\t\t */\r\n\t\tredraw_node : function (node, deep, is_callback, force_render) {\r\n\t\t\tvar obj = this.get_node(node),\r\n\t\t\t\tpar = false,\r\n\t\t\t\tind = false,\r\n\t\t\t\told = false,\r\n\t\t\t\ti = false,\r\n\t\t\t\tj = false,\r\n\t\t\t\tk = false,\r\n\t\t\t\tc = '',\r\n\t\t\t\td = document,\r\n\t\t\t\tm = this._model.data,\r\n\t\t\t\tf = false,\r\n\t\t\t\ts = false,\r\n\t\t\t\ttmp = null,\r\n\t\t\t\tt = 0,\r\n\t\t\t\tl = 0,\r\n\t\t\t\thas_children = false,\r\n\t\t\t\tlast_sibling = false;\r\n\t\t\tif(!obj) { return false; }\r\n\t\t\tif(obj.id === $.jstree.root) {  return this.redraw(true); }\r\n\t\t\tdeep = deep || obj.children.length === 0;\r\n\t\t\tnode = !document.querySelector ? document.getElementById(obj.id) : this.element[0].querySelector('#' + (\"0123456789\".indexOf(obj.id[0]) !== -1 ? '\\\\3' + obj.id[0] + ' ' + obj.id.substr(1).replace($.jstree.idregex,'\\\\$&') : obj.id.replace($.jstree.idregex,'\\\\$&')) ); //, this.element);\r\n\t\t\tif(!node) {\r\n\t\t\t\tdeep = true;\r\n\t\t\t\t//node = d.createElement('LI');\r\n\t\t\t\tif(!is_callback) {\r\n\t\t\t\t\tpar = obj.parent !== $.jstree.root ? $('#' + obj.parent.replace($.jstree.idregex,'\\\\$&'), this.element)[0] : null;\r\n\t\t\t\t\tif(par !== null && (!par || !m[obj.parent].state.opened)) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tind = langx.inArray(obj.id, par === null ? m[$.jstree.root].children : m[obj.parent].children);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tnode = $(node);\r\n\t\t\t\tif(!is_callback) {\r\n\t\t\t\t\tpar = node.parent().parent()[0];\r\n\t\t\t\t\tif(par === this.element[0]) {\r\n\t\t\t\t\t\tpar = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tind = node.index();\r\n\t\t\t\t}\r\n\t\t\t\t// m[obj.id].data = node.data(); // use only node's data, no need to touch jquery storage\r\n\t\t\t\tif(!deep && obj.children.length && !node.children('.jstree-children').length) {\r\n\t\t\t\t\tdeep = true;\r\n\t\t\t\t}\r\n\t\t\t\tif(!deep) {\r\n\t\t\t\t\told = node.children('.jstree-children')[0];\r\n\t\t\t\t}\r\n\t\t\t\tf = node.children('.jstree-anchor')[0] === document.activeElement;\r\n\t\t\t\tnode.remove();\r\n\t\t\t\t//node = d.createElement('LI');\r\n\t\t\t\t//node = node[0];\r\n\t\t\t}\r\n\t\t\tnode = this._data.core.node.cloneNode(true);\r\n\t\t\t// node is DOM, deep is boolean\r\n\r\n\t\t\tc = 'jstree-node ';\r\n\t\t\tfor(i in obj.li_attr) {\r\n\t\t\t\tif(obj.li_attr.hasOwnProperty(i)) {\r\n\t\t\t\t\tif(i === 'id') { continue; }\r\n\t\t\t\t\tif(i !== 'class') {\r\n\t\t\t\t\t\tnode.setAttribute(i, obj.li_attr[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tc += obj.li_attr[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(!obj.a_attr.id) {\r\n\t\t\t\tobj.a_attr.id = obj.id + '_anchor';\r\n\t\t\t}\r\n\t\t\tnode.setAttribute('aria-selected', !!obj.state.selected);\r\n\t\t\tnode.setAttribute('aria-level', obj.parents.length);\r\n\t\t\tnode.setAttribute('aria-labelledby', obj.a_attr.id);\r\n\t\t\tif(obj.state.disabled) {\r\n\t\t\t\tnode.setAttribute('aria-disabled', true);\r\n\t\t\t}\r\n\r\n\t\t\tfor(i = 0, j = obj.children.length; i < j; i++) {\r\n\t\t\t\tif(!m[obj.children[i]].state.hidden) {\r\n\t\t\t\t\thas_children = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(obj.parent !== null && m[obj.parent] && !obj.state.hidden) {\r\n\t\t\t\ti = langx.inArray(obj.id, m[obj.parent].children);\r\n\t\t\t\tlast_sibling = obj.id;\r\n\t\t\t\tif(i !== -1) {\r\n\t\t\t\t\ti++;\r\n\t\t\t\t\tfor(j = m[obj.parent].children.length; i < j; i++) {\r\n\t\t\t\t\t\tif(!m[m[obj.parent].children[i]].state.hidden) {\r\n\t\t\t\t\t\t\tlast_sibling = m[obj.parent].children[i];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(last_sibling !== obj.id) {\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(obj.state.hidden) {\r\n\t\t\t\tc += ' jstree-hidden';\r\n\t\t\t}\r\n\t\t\tif (obj.state.loading) {\r\n\t\t\t\tc += ' jstree-loading';\r\n\t\t\t}\r\n\t\t\tif(obj.state.loaded && !has_children) {\r\n\t\t\t\tc += ' jstree-leaf';\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tc += obj.state.opened && obj.state.loaded ? ' jstree-open' : ' jstree-closed';\r\n\t\t\t\tnode.setAttribute('aria-expanded', (obj.state.opened && obj.state.loaded) );\r\n\t\t\t}\r\n\t\t\tif(last_sibling === obj.id) {\r\n\t\t\t\tc += ' jstree-last';\r\n\t\t\t}\r\n\t\t\tnode.id = obj.id;\r\n\t\t\tnode.className = c;\r\n\t\t\tc = ( obj.state.selected ? ' jstree-clicked' : '') + ( obj.state.disabled ? ' jstree-disabled' : '');\r\n\t\t\tfor(j in obj.a_attr) {\r\n\t\t\t\tif(obj.a_attr.hasOwnProperty(j)) {\r\n\t\t\t\t\tif(j === 'href' && obj.a_attr[j] === '#') { continue; }\r\n\t\t\t\t\tif(j !== 'class') {\r\n\t\t\t\t\t\tnode.childNodes[1].setAttribute(j, obj.a_attr[j]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tc += ' ' + obj.a_attr[j];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(c.length) {\r\n\t\t\t\tnode.childNodes[1].className = 'jstree-anchor ' + c;\r\n\t\t\t}\r\n\t\t\tif((obj.icon && obj.icon !== true) || obj.icon === false) {\r\n\t\t\t\tif(obj.icon === false) {\r\n\t\t\t\t\tnode.childNodes[1].childNodes[0].className += ' jstree-themeicon-hidden';\r\n\t\t\t\t}\r\n\t\t\t\telse if(obj.icon.indexOf('/') === -1 && obj.icon.indexOf('.') === -1) {\r\n\t\t\t\t\tnode.childNodes[1].childNodes[0].className += ' ' + obj.icon + ' jstree-themeicon-custom';\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tnode.childNodes[1].childNodes[0].style.backgroundImage = 'url(\"'+obj.icon+'\")';\r\n\t\t\t\t\tnode.childNodes[1].childNodes[0].style.backgroundPosition = 'center center';\r\n\t\t\t\t\tnode.childNodes[1].childNodes[0].style.backgroundSize = 'auto';\r\n\t\t\t\t\tnode.childNodes[1].childNodes[0].className += ' jstree-themeicon-custom';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(this.settings.core.force_text) {\r\n\t\t\t\tnode.childNodes[1].appendChild(d.createTextNode(obj.text));\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tnode.childNodes[1].innerHTML += obj.text;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif(deep && obj.children.length && (obj.state.opened || force_render) && obj.state.loaded) {\r\n\t\t\t\tk = d.createElement('UL');\r\n\t\t\t\tk.setAttribute('role', 'group');\r\n\t\t\t\tk.className = 'jstree-children';\r\n\t\t\t\tfor(i = 0, j = obj.children.length; i < j; i++) {\r\n\t\t\t\t\tk.appendChild(this.redraw_node(obj.children[i], deep, true));\r\n\t\t\t\t}\r\n\t\t\t\tnode.appendChild(k);\r\n\t\t\t}\r\n\t\t\tif(old) {\r\n\t\t\t\tnode.appendChild(old);\r\n\t\t\t}\r\n\t\t\tif(!is_callback) {\r\n\t\t\t\t// append back using par / ind\r\n\t\t\t\tif(!par) {\r\n\t\t\t\t\tpar = this.element[0];\r\n\t\t\t\t}\r\n\t\t\t\tfor(i = 0, j = par.childNodes.length; i < j; i++) {\r\n\t\t\t\t\tif(par.childNodes[i] && par.childNodes[i].className && par.childNodes[i].className.indexOf('jstree-children') !== -1) {\r\n\t\t\t\t\t\ttmp = par.childNodes[i];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(!tmp) {\r\n\t\t\t\t\ttmp = d.createElement('UL');\r\n\t\t\t\t\ttmp.setAttribute('role', 'group');\r\n\t\t\t\t\ttmp.className = 'jstree-children';\r\n\t\t\t\t\tpar.appendChild(tmp);\r\n\t\t\t\t}\r\n\t\t\t\tpar = tmp;\r\n\r\n\t\t\t\tif(ind < par.childNodes.length) {\r\n\t\t\t\t\tpar.insertBefore(node, par.childNodes[ind]);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tpar.appendChild(node);\r\n\t\t\t\t}\r\n\t\t\t\tif(f) {\r\n\t\t\t\t\tt = this.element[0].scrollTop;\r\n\t\t\t\t\tl = this.element[0].scrollLeft;\r\n\t\t\t\t\tnode.childNodes[1].focus();\r\n\t\t\t\t\tthis.element[0].scrollTop = t;\r\n\t\t\t\t\tthis.element[0].scrollLeft = l;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(obj.state.opened && !obj.state.loaded) {\r\n\t\t\t\tobj.state.opened = false;\r\n\t\t\t\tsetTimeout(langx.proxy(function () {\r\n\t\t\t\t\tthis.open_node(obj.id, false, 0);\r\n\t\t\t\t}, this), 0);\r\n\t\t\t}\r\n\t\t\treturn node;\r\n\t\t},\r\n\t\t/**\r\n\t\t * opens a node, revaling its children. If the node is not loaded it will be loaded and opened once ready.\r\n\t\t * @name open_node(obj [, callback, animation])\r\n\t\t * @param {mixed} obj the node to open\r\n\t\t * @param {Function} callback a function to execute once the node is opened\r\n\t\t * @param {Number} animation the animation duration in milliseconds when opening the node (overrides the `core.animation` setting). Use `false` for no animation.\r\n\t\t * @trigger open_node.jstree, after_open.jstree, before_open.jstree\r\n\t\t */\r\n\t\topen_node : function (obj, callback, animation) {\r\n\t\t\tvar t1, t2, d, t;\r\n\t\t\tif(langx.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.open_node(obj[t1], callback, animation);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tanimation = animation === undefined ? this.settings.core.animation : animation;\r\n\t\t\tif(!this.is_closed(obj)) {\r\n\t\t\t\tif(callback) {\r\n\t\t\t\t\tcallback.call(this, obj, false);\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(!this.is_loaded(obj)) {\r\n\t\t\t\tif(this.is_loading(obj)) {\r\n\t\t\t\t\treturn setTimeout(langx.proxy(function () {\r\n\t\t\t\t\t\tthis.open_node(obj, callback, animation);\r\n\t\t\t\t\t}, this), 500);\r\n\t\t\t\t}\r\n\t\t\t\tthis.load_node(obj, function (o, ok) {\r\n\t\t\t\t\treturn ok ? this.open_node(o, callback, animation) : (callback ? callback.call(this, o, false) : false);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\td = this.get_node(obj, true);\r\n\t\t\t\tt = this;\r\n\t\t\t\tif(d.length) {\r\n\t\t\t\t\tif(animation && d.children(\".jstree-children\").length) {\r\n\t\t\t\t\t\td.children(\".jstree-children\").stop(true, true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(obj.children.length && !this._firstChild(d.children('.jstree-children')[0])) {\r\n\t\t\t\t\t\tthis.draw_children(obj);\r\n\t\t\t\t\t\t//d = this.get_node(obj, true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(!animation) {\r\n\t\t\t\t\t\tthis.trigger('before_open', { \"node\" : obj });\r\n\t\t\t\t\t\td[0].className = d[0].className.replace('jstree-closed', 'jstree-open');\r\n\t\t\t\t\t\td[0].setAttribute(\"aria-expanded\", true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.trigger('before_open', { \"node\" : obj });\r\n\t\t\t\t\t\td\r\n\t\t\t\t\t\t\t.children(\".jstree-children\").css(\"display\",\"none\").end()\r\n\t\t\t\t\t\t\t.removeClass(\"jstree-closed\").addClass(\"jstree-open\").attr(\"aria-expanded\", true)\r\n\t\t\t\t\t\t\t.children(\".jstree-children\").stop(true, true)\r\n\t\t\t\t\t\t\t\t.slideDown(animation, function () {\r\n\t\t\t\t\t\t\t\t\tthis.style.display = \"\";\r\n\t\t\t\t\t\t\t\t\tif (t.element) {\r\n\t\t\t\t\t\t\t\t\t\tt.trigger(\"after_open\", { \"node\" : obj });\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tobj.state.opened = true;\r\n\t\t\t\tif(callback) {\r\n\t\t\t\t\tcallback.call(this, obj, true);\r\n\t\t\t\t}\r\n\t\t\t\tif(!d.length) {\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * triggered when a node is about to be opened (if the node is supposed to be in the DOM, it will be, but it won't be visible yet)\r\n\t\t\t\t\t * @event\r\n\t\t\t\t\t * @name before_open.jstree\r\n\t\t\t\t\t * @param {Object} node the opened node\r\n\t\t\t\t\t */\r\n\t\t\t\t\tthis.trigger('before_open', { \"node\" : obj });\r\n\t\t\t\t}\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when a node is opened (if there is an animation it will not be completed yet)\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name open_node.jstree\r\n\t\t\t\t * @param {Object} node the opened node\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('open_node', { \"node\" : obj });\r\n\t\t\t\tif(!animation || !d.length) {\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * triggered when a node is opened and the animation is complete\r\n\t\t\t\t\t * @event\r\n\t\t\t\t\t * @name after_open.jstree\r\n\t\t\t\t\t * @param {Object} node the opened node\r\n\t\t\t\t\t */\r\n\t\t\t\t\tthis.trigger(\"after_open\", { \"node\" : obj });\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * opens every parent of a node (node should be loaded)\r\n\t\t * @name _open_to(obj)\r\n\t\t * @param {mixed} obj the node to reveal\r\n\t\t * @private\r\n\t\t */\r\n\t\t_open_to : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvar i, j, p = obj.parents;\r\n\t\t\tfor(i = 0, j = p.length; i < j; i+=1) {\r\n\t\t\t\tif(i !== $.jstree.root) {\r\n\t\t\t\t\tthis.open_node(p[i], false, 0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn $('#' + obj.id.replace($.jstree.idregex,'\\\\$&'), this.element);\r\n\t\t},\r\n\t\t/**\r\n\t\t * closes a node, hiding its children\r\n\t\t * @name close_node(obj [, animation])\r\n\t\t * @param {mixed} obj the node to close\r\n\t\t * @param {Number} animation the animation duration in milliseconds when closing the node (overrides the `core.animation` setting). Use `false` for no animation.\r\n\t\t * @trigger close_node.jstree, after_close.jstree\r\n\t\t */\r\n\t\tclose_node : function (obj, animation) {\r\n\t\t\tvar t1, t2, t, d;\r\n\t\t\tif(langx.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.close_node(obj[t1], animation);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(this.is_closed(obj)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tanimation = animation === undefined ? this.settings.core.animation : animation;\r\n\t\t\tt = this;\r\n\t\t\td = this.get_node(obj, true);\r\n\r\n\t\t\tobj.state.opened = false;\r\n\t\t\t/**\r\n\t\t\t * triggered when a node is closed (if there is an animation it will not be complete yet)\r\n\t\t\t * @event\r\n\t\t\t * @name close_node.jstree\r\n\t\t\t * @param {Object} node the closed node\r\n\t\t\t */\r\n\t\t\tthis.trigger('close_node',{ \"node\" : obj });\r\n\t\t\tif(!d.length) {\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when a node is closed and the animation is complete\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name after_close.jstree\r\n\t\t\t\t * @param {Object} node the closed node\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger(\"after_close\", { \"node\" : obj });\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif(!animation) {\r\n\t\t\t\t\td[0].className = d[0].className.replace('jstree-open', 'jstree-closed');\r\n\t\t\t\t\td.attr(\"aria-expanded\", false).children('.jstree-children').remove();\r\n\t\t\t\t\tthis.trigger(\"after_close\", { \"node\" : obj });\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\td\r\n\t\t\t\t\t\t.children(\".jstree-children\").attr(\"style\",\"display:block !important\").end()\r\n\t\t\t\t\t\t.removeClass(\"jstree-open\").addClass(\"jstree-closed\").attr(\"aria-expanded\", false)\r\n\t\t\t\t\t\t.children(\".jstree-children\").stop(true, true).slideUp(animation, function () {\r\n\t\t\t\t\t\t\tthis.style.display = \"\";\r\n\t\t\t\t\t\t\td.children('.jstree-children').remove();\r\n\t\t\t\t\t\t\tif (t.element) {\r\n\t\t\t\t\t\t\t\tt.trigger(\"after_close\", { \"node\" : obj });\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * toggles a node - closing it if it is open, opening it if it is closed\r\n\t\t * @name toggle_node(obj)\r\n\t\t * @param {mixed} obj the node to toggle\r\n\t\t */\r\n\t\ttoggle_node : function (obj) {\r\n\t\t\tvar t1, t2;\r\n\t\t\tif(langx.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.toggle_node(obj[t1]);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tif(this.is_closed(obj)) {\r\n\t\t\t\treturn this.open_node(obj);\r\n\t\t\t}\r\n\t\t\tif(this.is_open(obj)) {\r\n\t\t\t\treturn this.close_node(obj);\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * opens all nodes within a node (or the tree), revaling their children. If the node is not loaded it will be loaded and opened once ready.\r\n\t\t * @name open_all([obj, animation, original_obj])\r\n\t\t * @param {mixed} obj the node to open recursively, omit to open all nodes in the tree\r\n\t\t * @param {Number} animation the animation duration in milliseconds when opening the nodes, the default is no animation\r\n\t\t * @param {jQuery} reference to the node that started the process (internal use)\r\n\t\t * @trigger open_all.jstree\r\n\t\t */\r\n\t\topen_all : function (obj, animation, original_obj) {\r\n\t\t\tif(!obj) { obj = $.jstree.root; }\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj) { return false; }\r\n\t\t\tvar dom = obj.id === $.jstree.root ? this.get_container_ul() : this.get_node(obj, true), i, j, _this;\r\n\t\t\tif(!dom.length) {\r\n\t\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\r\n\t\t\t\t\tif(this.is_closed(this._model.data[obj.children_d[i]])) {\r\n\t\t\t\t\t\tthis._model.data[obj.children_d[i]].state.opened = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn this.trigger('open_all', { \"node\" : obj });\r\n\t\t\t}\r\n\t\t\toriginal_obj = original_obj || dom;\r\n\t\t\t_this = this;\r\n\t\t\tdom = this.is_closed(obj) ? dom.find('.jstree-closed').addBack() : dom.find('.jstree-closed');\r\n\t\t\tdom.each(function () {\r\n\t\t\t\t_this.open_node(\r\n\t\t\t\t\tthis,\r\n\t\t\t\t\tfunction(node, status) { if(status && this.is_parent(node)) { this.open_all(node, animation, original_obj); } },\r\n\t\t\t\t\tanimation || 0\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t\tif(original_obj.find('.jstree-closed').length === 0) {\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when an `open_all` call completes\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name open_all.jstree\r\n\t\t\t\t * @param {Object} node the opened node\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('open_all', { \"node\" : this.get_node(original_obj) });\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * closes all nodes within a node (or the tree), revaling their children\r\n\t\t * @name close_all([obj, animation])\r\n\t\t * @param {mixed} obj the node to close recursively, omit to close all nodes in the tree\r\n\t\t * @param {Number} animation the animation duration in milliseconds when closing the nodes, the default is no animation\r\n\t\t * @trigger close_all.jstree\r\n\t\t */\r\n\t\tclose_all : function (obj, animation) {\r\n\t\t\tif(!obj) { obj = $.jstree.root; }\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj) { return false; }\r\n\t\t\tvar dom = obj.id === $.jstree.root ? this.get_container_ul() : this.get_node(obj, true),\r\n\t\t\t\t_this = this, i, j;\r\n\t\t\tif(dom.length) {\r\n\t\t\t\tdom = this.is_open(obj) ? dom.find('.jstree-open').addBack() : dom.find('.jstree-open');\r\n\t\t\t\t$(dom.get().reverse()).each(function () { _this.close_node(this, animation || 0); });\r\n\t\t\t}\r\n\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\r\n\t\t\t\tthis._model.data[obj.children_d[i]].state.opened = false;\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * triggered when an `close_all` call completes\r\n\t\t\t * @event\r\n\t\t\t * @name close_all.jstree\r\n\t\t\t * @param {Object} node the closed node\r\n\t\t\t */\r\n\t\t\tthis.trigger('close_all', { \"node\" : obj });\r\n\t\t},\r\n\t\t/**\r\n\t\t * checks if a node is disabled (not selectable)\r\n\t\t * @name is_disabled(obj)\r\n\t\t * @param  {mixed} obj\r\n\t\t * @return {Boolean}\r\n\t\t */\r\n\t\tis_disabled : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\treturn obj && obj.state && obj.state.disabled;\r\n\t\t},\r\n\t\t/**\r\n\t\t * enables a node - so that it can be selected\r\n\t\t * @name enable_node(obj)\r\n\t\t * @param {mixed} obj the node to enable\r\n\t\t * @trigger enable_node.jstree\r\n\t\t */\r\n\t\tenable_node : function (obj) {\r\n\t\t\tvar t1, t2;\r\n\t\t\tif(langx.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.enable_node(obj[t1]);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tobj.state.disabled = false;\r\n\t\t\tthis.get_node(obj,true).children('.jstree-anchor').removeClass('jstree-disabled').attr('aria-disabled', false);\r\n\t\t\t/**\r\n\t\t\t * triggered when an node is enabled\r\n\t\t\t * @event\r\n\t\t\t * @name enable_node.jstree\r\n\t\t\t * @param {Object} node the enabled node\r\n\t\t\t */\r\n\t\t\tthis.trigger('enable_node', { 'node' : obj });\r\n\t\t},\r\n\t\t/**\r\n\t\t * disables a node - so that it can not be selected\r\n\t\t * @name disable_node(obj)\r\n\t\t * @param {mixed} obj the node to disable\r\n\t\t * @trigger disable_node.jstree\r\n\t\t */\r\n\t\tdisable_node : function (obj) {\r\n\t\t\tvar t1, t2;\r\n\t\t\tif(langx.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.disable_node(obj[t1]);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tobj.state.disabled = true;\r\n\t\t\tthis.get_node(obj,true).children('.jstree-anchor').addClass('jstree-disabled').attr('aria-disabled', true);\r\n\t\t\t/**\r\n\t\t\t * triggered when an node is disabled\r\n\t\t\t * @event\r\n\t\t\t * @name disable_node.jstree\r\n\t\t\t * @param {Object} node the disabled node\r\n\t\t\t */\r\n\t\t\tthis.trigger('disable_node', { 'node' : obj });\r\n\t\t},\r\n\t\t/**\r\n\t\t * determines if a node is hidden\r\n\t\t * @name is_hidden(obj)\r\n\t\t * @param {mixed} obj the node\r\n\t\t */\r\n\t\tis_hidden : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\treturn obj.state.hidden === true;\r\n\t\t},\r\n\t\t/**\r\n\t\t * hides a node - it is still in the structure but will not be visible\r\n\t\t * @name hide_node(obj)\r\n\t\t * @param {mixed} obj the node to hide\r\n\t\t * @param {Boolean} skip_redraw internal parameter controlling if redraw is called\r\n\t\t * @trigger hide_node.jstree\r\n\t\t */\r\n\t\thide_node : function (obj, skip_redraw) {\r\n\t\t\tvar t1, t2;\r\n\t\t\tif(langx.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.hide_node(obj[t1], true);\r\n\t\t\t\t}\r\n\t\t\t\tif (!skip_redraw) {\r\n\t\t\t\t\tthis.redraw();\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(!obj.state.hidden) {\r\n\t\t\t\tobj.state.hidden = true;\r\n\t\t\t\tthis._node_changed(obj.parent);\r\n\t\t\t\tif(!skip_redraw) {\r\n\t\t\t\t\tthis.redraw();\r\n\t\t\t\t}\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when an node is hidden\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name hide_node.jstree\r\n\t\t\t\t * @param {Object} node the hidden node\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('hide_node', { 'node' : obj });\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * shows a node\r\n\t\t * @name show_node(obj)\r\n\t\t * @param {mixed} obj the node to show\r\n\t\t * @param {Boolean} skip_redraw internal parameter controlling if redraw is called\r\n\t\t * @trigger show_node.jstree\r\n\t\t */\r\n\t\tshow_node : function (obj, skip_redraw) {\r\n\t\t\tvar t1, t2;\r\n\t\t\tif(langx.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.show_node(obj[t1], true);\r\n\t\t\t\t}\r\n\t\t\t\tif (!skip_redraw) {\r\n\t\t\t\t\tthis.redraw();\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(obj.state.hidden) {\r\n\t\t\t\tobj.state.hidden = false;\r\n\t\t\t\tthis._node_changed(obj.parent);\r\n\t\t\t\tif(!skip_redraw) {\r\n\t\t\t\t\tthis.redraw();\r\n\t\t\t\t}\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when an node is shown\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name show_node.jstree\r\n\t\t\t\t * @param {Object} node the shown node\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('show_node', { 'node' : obj });\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * hides all nodes\r\n\t\t * @name hide_all()\r\n\t\t * @trigger hide_all.jstree\r\n\t\t */\r\n\t\thide_all : function (skip_redraw) {\r\n\t\t\tvar i, m = this._model.data, ids = [];\r\n\t\t\tfor(i in m) {\r\n\t\t\t\tif(m.hasOwnProperty(i) && i !== $.jstree.root && !m[i].state.hidden) {\r\n\t\t\t\t\tm[i].state.hidden = true;\r\n\t\t\t\t\tids.push(i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._model.force_full_redraw = true;\r\n\t\t\tif(!skip_redraw) {\r\n\t\t\t\tthis.redraw();\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * triggered when all nodes are hidden\r\n\t\t\t * @event\r\n\t\t\t * @name hide_all.jstree\r\n\t\t\t * @param {Array} nodes the IDs of all hidden nodes\r\n\t\t\t */\r\n\t\t\tthis.trigger('hide_all', { 'nodes' : ids });\r\n\t\t\treturn ids;\r\n\t\t},\r\n\t\t/**\r\n\t\t * shows all nodes\r\n\t\t * @name show_all()\r\n\t\t * @trigger show_all.jstree\r\n\t\t */\r\n\t\tshow_all : function (skip_redraw) {\r\n\t\t\tvar i, m = this._model.data, ids = [];\r\n\t\t\tfor(i in m) {\r\n\t\t\t\tif(m.hasOwnProperty(i) && i !== $.jstree.root && m[i].state.hidden) {\r\n\t\t\t\t\tm[i].state.hidden = false;\r\n\t\t\t\t\tids.push(i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._model.force_full_redraw = true;\r\n\t\t\tif(!skip_redraw) {\r\n\t\t\t\tthis.redraw();\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * triggered when all nodes are shown\r\n\t\t\t * @event\r\n\t\t\t * @name show_all.jstree\r\n\t\t\t * @param {Array} nodes the IDs of all shown nodes\r\n\t\t\t */\r\n\t\t\tthis.trigger('show_all', { 'nodes' : ids });\r\n\t\t\treturn ids;\r\n\t\t},\r\n\t\t/**\r\n\t\t * called when a node is selected by the user. Used internally.\r\n\t\t * @private\r\n\t\t * @name activate_node(obj, e)\r\n\t\t * @param {mixed} obj the node\r\n\t\t * @param {Object} e the related event\r\n\t\t * @trigger activate_node.jstree, changed.jstree\r\n\t\t */\r\n\t\tactivate_node : function (obj, e) {\r\n\t\t\tif(this.is_disabled(obj)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(!e || typeof e !== 'object') {\r\n\t\t\t\te = {};\r\n\t\t\t}\r\n\r\n\t\t\t// ensure last_clicked is still in the DOM, make it fresh (maybe it was moved?) and make sure it is still selected, if not - make last_clicked the last selected node\r\n\t\t\tthis._data.core.last_clicked = this._data.core.last_clicked && this._data.core.last_clicked.id !== undefined ? this.get_node(this._data.core.last_clicked.id) : null;\r\n\t\t\tif(this._data.core.last_clicked && !this._data.core.last_clicked.state.selected) { this._data.core.last_clicked = null; }\r\n\t\t\tif(!this._data.core.last_clicked && this._data.core.selected.length) { this._data.core.last_clicked = this.get_node(this._data.core.selected[this._data.core.selected.length - 1]); }\r\n\r\n\t\t\tif(!this.settings.core.multiple || (!e.metaKey && !e.ctrlKey && !e.shiftKey) || (e.shiftKey && (!this._data.core.last_clicked || !this.get_parent(obj) || this.get_parent(obj) !== this._data.core.last_clicked.parent ) )) {\r\n\t\t\t\tif(!this.settings.core.multiple && (e.metaKey || e.ctrlKey || e.shiftKey) && this.is_selected(obj)) {\r\n\t\t\t\t\tthis.deselect_node(obj, false, e);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.deselect_all(true);\r\n\t\t\t\t\tthis.select_node(obj, false, false, e);\r\n\t\t\t\t\tthis._data.core.last_clicked = this.get_node(obj);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif(e.shiftKey) {\r\n\t\t\t\t\tvar o = this.get_node(obj).id,\r\n\t\t\t\t\t\tl = this._data.core.last_clicked.id,\r\n\t\t\t\t\t\tp = this.get_node(this._data.core.last_clicked.parent).children,\r\n\t\t\t\t\t\tc = false,\r\n\t\t\t\t\t\ti, j;\r\n\t\t\t\t\tfor(i = 0, j = p.length; i < j; i += 1) {\r\n\t\t\t\t\t\t// separate IFs work whem o and l are the same\r\n\t\t\t\t\t\tif(p[i] === o) {\r\n\t\t\t\t\t\t\tc = !c;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(p[i] === l) {\r\n\t\t\t\t\t\t\tc = !c;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(!this.is_disabled(p[i]) && (c || p[i] === o || p[i] === l)) {\r\n\t\t\t\t\t\t\tif (!this.is_hidden(p[i])) {\r\n\t\t\t\t\t\t\t\tthis.select_node(p[i], true, false, e);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis.deselect_node(p[i], true, e);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.trigger('changed', { 'action' : 'select_node', 'node' : this.get_node(obj), 'selected' : this._data.core.selected, 'event' : e });\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif(!this.is_selected(obj)) {\r\n\t\t\t\t\t\tthis.select_node(obj, false, false, e);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.deselect_node(obj, false, e);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * triggered when an node is clicked or intercated with by the user\r\n\t\t\t * @event\r\n\t\t\t * @name activate_node.jstree\r\n\t\t\t * @param {Object} node\r\n\t\t\t * @param {Object} event the ooriginal event (if any) which triggered the call (may be an empty object)\r\n\t\t\t */\r\n\t\t\tthis.trigger('activate_node', { 'node' : this.get_node(obj), 'event' : e });\r\n\t\t},\r\n\t\t/**\r\n\t\t * applies the hover state on a node, called when a node is hovered by the user. Used internally.\r\n\t\t * @private\r\n\t\t * @name hover_node(obj)\r\n\t\t * @param {mixed} obj\r\n\t\t * @trigger hover_node.jstree\r\n\t\t */\r\n\t\thover_node : function (obj) {\r\n\t\t\tobj = this.get_node(obj, true);\r\n\t\t\tif(!obj || !obj.length || obj.children('.jstree-hovered').length) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvar o = this.element.find('.jstree-hovered'), t = this.element;\r\n\t\t\tif(o && o.length) { this.dehover_node(o); }\r\n\r\n\t\t\tobj.children('.jstree-anchor').addClass('jstree-hovered');\r\n\t\t\t/**\r\n\t\t\t * triggered when an node is hovered\r\n\t\t\t * @event\r\n\t\t\t * @name hover_node.jstree\r\n\t\t\t * @param {Object} node\r\n\t\t\t */\r\n\t\t\tthis.trigger('hover_node', { 'node' : this.get_node(obj) });\r\n\t\t\tsetTimeout(function () { t.attr('aria-activedescendant', obj[0].id); }, 0);\r\n\t\t},\r\n\t\t/**\r\n\t\t * removes the hover state from a nodecalled when a node is no longer hovered by the user. Used internally.\r\n\t\t * @private\r\n\t\t * @name dehover_node(obj)\r\n\t\t * @param {mixed} obj\r\n\t\t * @trigger dehover_node.jstree\r\n\t\t */\r\n\t\tdehover_node : function (obj) {\r\n\t\t\tobj = this.get_node(obj, true);\r\n\t\t\tif(!obj || !obj.length || !obj.children('.jstree-hovered').length) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tobj.children('.jstree-anchor').removeClass('jstree-hovered');\r\n\t\t\t/**\r\n\t\t\t * triggered when an node is no longer hovered\r\n\t\t\t * @event\r\n\t\t\t * @name dehover_node.jstree\r\n\t\t\t * @param {Object} node\r\n\t\t\t */\r\n\t\t\tthis.trigger('dehover_node', { 'node' : this.get_node(obj) });\r\n\t\t},\r\n\t\t/**\r\n\t\t * select a node\r\n\t\t * @name select_node(obj [, supress_event, prevent_open])\r\n\t\t * @param {mixed} obj an array can be used to select multiple nodes\r\n\t\t * @param {Boolean} supress_event if set to `true` the `changed.jstree` event won't be triggered\r\n\t\t * @param {Boolean} prevent_open if set to `true` parents of the selected node won't be opened\r\n\t\t * @trigger select_node.jstree, changed.jstree\r\n\t\t */\r\n\t\tselect_node : function (obj, supress_event, prevent_open, e) {\r\n\t\t\tvar dom, t1, t2, th;\r\n\t\t\tif(langx.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.select_node(obj[t1], supress_event, prevent_open, e);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tdom = this.get_node(obj, true);\r\n\t\t\tif(!obj.state.selected) {\r\n\t\t\t\tobj.state.selected = true;\r\n\t\t\t\tthis._data.core.selected.push(obj.id);\r\n\t\t\t\tif(!prevent_open) {\r\n\t\t\t\t\tdom = this._open_to(obj);\r\n\t\t\t\t}\r\n\t\t\t\tif(dom && dom.length) {\r\n\t\t\t\t\tdom.attr('aria-selected', true).children('.jstree-anchor').addClass('jstree-clicked');\r\n\t\t\t\t}\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when an node is selected\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name select_node.jstree\r\n\t\t\t\t * @param {Object} node\r\n\t\t\t\t * @param {Array} selected the current selection\r\n\t\t\t\t * @param {Object} event the event (if any) that triggered this select_node\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('select_node', { 'node' : obj, 'selected' : this._data.core.selected, 'event' : e });\r\n\t\t\t\tif(!supress_event) {\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * triggered when selection changes\r\n\t\t\t\t\t * @event\r\n\t\t\t\t\t * @name changed.jstree\r\n\t\t\t\t\t * @param {Object} node\r\n\t\t\t\t\t * @param {Object} action the action that caused the selection to change\r\n\t\t\t\t\t * @param {Array} selected the current selection\r\n\t\t\t\t\t * @param {Object} event the event (if any) that triggered this changed event\r\n\t\t\t\t\t */\r\n\t\t\t\t\tthis.trigger('changed', { 'action' : 'select_node', 'node' : obj, 'selected' : this._data.core.selected, 'event' : e });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * deselect a node\r\n\t\t * @name deselect_node(obj [, supress_event])\r\n\t\t * @param {mixed} obj an array can be used to deselect multiple nodes\r\n\t\t * @param {Boolean} supress_event if set to `true` the `changed.jstree` event won't be triggered\r\n\t\t * @trigger deselect_node.jstree, changed.jstree\r\n\t\t */\r\n\t\tdeselect_node : function (obj, supress_event, e) {\r\n\t\t\tvar t1, t2, dom;\r\n\t\t\tif(langx.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.deselect_node(obj[t1], supress_event, e);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tdom = this.get_node(obj, true);\r\n\t\t\tif(obj.state.selected) {\r\n\t\t\t\tobj.state.selected = false;\r\n\t\t\t\tthis._data.core.selected = $.vakata.array_remove_item(this._data.core.selected, obj.id);\r\n\t\t\t\tif(dom.length) {\r\n\t\t\t\t\tdom.attr('aria-selected', false).children('.jstree-anchor').removeClass('jstree-clicked');\r\n\t\t\t\t}\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when an node is deselected\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name deselect_node.jstree\r\n\t\t\t\t * @param {Object} node\r\n\t\t\t\t * @param {Array} selected the current selection\r\n\t\t\t\t * @param {Object} event the event (if any) that triggered this deselect_node\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('deselect_node', { 'node' : obj, 'selected' : this._data.core.selected, 'event' : e });\r\n\t\t\t\tif(!supress_event) {\r\n\t\t\t\t\tthis.trigger('changed', { 'action' : 'deselect_node', 'node' : obj, 'selected' : this._data.core.selected, 'event' : e });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * select all nodes in the tree\r\n\t\t * @name select_all([supress_event])\r\n\t\t * @param {Boolean} supress_event if set to `true` the `changed.jstree` event won't be triggered\r\n\t\t * @trigger select_all.jstree, changed.jstree\r\n\t\t */\r\n\t\tselect_all : function (supress_event) {\r\n\t\t\tvar tmp = this._data.core.selected.concat([]), i, j;\r\n\t\t\tthis._data.core.selected = this._model.data[$.jstree.root].children_d.concat();\r\n\t\t\tfor(i = 0, j = this._data.core.selected.length; i < j; i++) {\r\n\t\t\t\tif(this._model.data[this._data.core.selected[i]]) {\r\n\t\t\t\t\tthis._model.data[this._data.core.selected[i]].state.selected = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.redraw(true);\r\n\t\t\t/**\r\n\t\t\t * triggered when all nodes are selected\r\n\t\t\t * @event\r\n\t\t\t * @name select_all.jstree\r\n\t\t\t * @param {Array} selected the current selection\r\n\t\t\t */\r\n\t\t\tthis.trigger('select_all', { 'selected' : this._data.core.selected });\r\n\t\t\tif(!supress_event) {\r\n\t\t\t\tthis.trigger('changed', { 'action' : 'select_all', 'selected' : this._data.core.selected, 'old_selection' : tmp });\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * deselect all selected nodes\r\n\t\t * @name deselect_all([supress_event])\r\n\t\t * @param {Boolean} supress_event if set to `true` the `changed.jstree` event won't be triggered\r\n\t\t * @trigger deselect_all.jstree, changed.jstree\r\n\t\t */\r\n\t\tdeselect_all : function (supress_event) {\r\n\t\t\tvar tmp = this._data.core.selected.concat([]), i, j;\r\n\t\t\tfor(i = 0, j = this._data.core.selected.length; i < j; i++) {\r\n\t\t\t\tif(this._model.data[this._data.core.selected[i]]) {\r\n\t\t\t\t\tthis._model.data[this._data.core.selected[i]].state.selected = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._data.core.selected = [];\r\n\t\t\tthis.element.find('.jstree-clicked').removeClass('jstree-clicked').parent().attr('aria-selected', false);\r\n\t\t\t/**\r\n\t\t\t * triggered when all nodes are deselected\r\n\t\t\t * @event\r\n\t\t\t * @name deselect_all.jstree\r\n\t\t\t * @param {Object} node the previous selection\r\n\t\t\t * @param {Array} selected the current selection\r\n\t\t\t */\r\n\t\t\tthis.trigger('deselect_all', { 'selected' : this._data.core.selected, 'node' : tmp });\r\n\t\t\tif(!supress_event) {\r\n\t\t\t\tthis.trigger('changed', { 'action' : 'deselect_all', 'selected' : this._data.core.selected, 'old_selection' : tmp });\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * checks if a node is selected\r\n\t\t * @name is_selected(obj)\r\n\t\t * @param  {mixed}  obj\r\n\t\t * @return {Boolean}\r\n\t\t */\r\n\t\tis_selected : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn obj.state.selected;\r\n\t\t},\r\n\t\t/**\r\n\t\t * get an array of all selected nodes\r\n\t\t * @name get_selected([full])\r\n\t\t * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\r\n\t\t * @return {Array}\r\n\t\t */\r\n\t\tget_selected : function (full) {\r\n\t\t\treturn full ? langx.map(this._data.core.selected, langx.proxy(function (i) { return this.get_node(i); }, this)) : this._data.core.selected.slice();\r\n\t\t},\r\n\t\t/**\r\n\t\t * get an array of all top level selected nodes (ignoring children of selected nodes)\r\n\t\t * @name get_top_selected([full])\r\n\t\t * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\r\n\t\t * @return {Array}\r\n\t\t */\r\n\t\tget_top_selected : function (full) {\r\n\t\t\tvar tmp = this.get_selected(true),\r\n\t\t\t\tobj = {}, i, j, k, l;\r\n\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\r\n\t\t\t\tobj[tmp[i].id] = tmp[i];\r\n\t\t\t}\r\n\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\r\n\t\t\t\tfor(k = 0, l = tmp[i].children_d.length; k < l; k++) {\r\n\t\t\t\t\tif(obj[tmp[i].children_d[k]]) {\r\n\t\t\t\t\t\tdelete obj[tmp[i].children_d[k]];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ttmp = [];\r\n\t\t\tfor(i in obj) {\r\n\t\t\t\tif(obj.hasOwnProperty(i)) {\r\n\t\t\t\t\ttmp.push(i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn full ? langx.map(tmp, langx.proxy(function (i) { return this.get_node(i); }, this)) : tmp;\r\n\t\t},\r\n\t\t/**\r\n\t\t * get an array of all bottom level selected nodes (ignoring selected parents)\r\n\t\t * @name get_bottom_selected([full])\r\n\t\t * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\r\n\t\t * @return {Array}\r\n\t\t */\r\n\t\tget_bottom_selected : function (full) {\r\n\t\t\tvar tmp = this.get_selected(true),\r\n\t\t\t\tobj = [], i, j;\r\n\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\r\n\t\t\t\tif(!tmp[i].children.length) {\r\n\t\t\t\t\tobj.push(tmp[i].id);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn full ? langx.map(obj, langx.proxy(function (i) { return this.get_node(i); }, this)) : obj;\r\n\t\t},\r\n\t\t/**\r\n\t\t * gets the current state of the tree so that it can be restored later with `set_state(state)`. Used internally.\r\n\t\t * @name get_state()\r\n\t\t * @private\r\n\t\t * @return {Object}\r\n\t\t */\r\n\t\tget_state : function () {\r\n\t\t\tvar state\t= {\r\n\t\t\t\t'core' : {\r\n\t\t\t\t\t'open' : [],\r\n\t\t\t\t\t'loaded' : [],\r\n\t\t\t\t\t'scroll' : {\r\n\t\t\t\t\t\t'left' : this.element.scrollLeft(),\r\n\t\t\t\t\t\t'top' : this.element.scrollTop()\r\n\t\t\t\t\t},\r\n\t\t\t\t\t/*!\r\n\t\t\t\t\t'themes' : {\r\n\t\t\t\t\t\t'name' : this.get_theme(),\r\n\t\t\t\t\t\t'icons' : this._data.core.themes.icons,\r\n\t\t\t\t\t\t'dots' : this._data.core.themes.dots\r\n\t\t\t\t\t},\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t'selected' : []\r\n\t\t\t\t}\r\n\t\t\t}, i;\r\n\t\t\tfor(i in this._model.data) {\r\n\t\t\t\tif(this._model.data.hasOwnProperty(i)) {\r\n\t\t\t\t\tif(i !== $.jstree.root) {\r\n\t\t\t\t\t\tif(this._model.data[i].state.loaded && this.settings.core.loaded_state) {\r\n\t\t\t\t\t\t\tstate.core.loaded.push(i);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(this._model.data[i].state.opened) {\r\n\t\t\t\t\t\t\tstate.core.open.push(i);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(this._model.data[i].state.selected) {\r\n\t\t\t\t\t\t\tstate.core.selected.push(i);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn state;\r\n\t\t},\r\n\t\t/**\r\n\t\t * sets the state of the tree. Used internally.\r\n\t\t * @name set_state(state [, callback])\r\n\t\t * @private\r\n\t\t * @param {Object} state the state to restore. Keep in mind this object is passed by reference and jstree will modify it.\r\n\t\t * @param {Function} callback an optional function to execute once the state is restored.\r\n\t\t * @trigger set_state.jstree\r\n\t\t */\r\n\t\tset_state : function (state, callback) {\r\n\t\t\tif(state) {\r\n\t\t\t\tif(state.core && state.core.selected && state.core.initial_selection === undefined) {\r\n\t\t\t\t\tstate.core.initial_selection = this._data.core.selected.concat([]).sort().join(',');\r\n\t\t\t\t}\r\n\t\t\t\tif(state.core) {\r\n\t\t\t\t\tvar res, n, t, _this, i;\r\n\t\t\t\t\tif(state.core.loaded) {\r\n\t\t\t\t\t\tif(!this.settings.core.loaded_state || !langx.isArray(state.core.loaded) || !state.core.loaded.length) {\r\n\t\t\t\t\t\t\tdelete state.core.loaded;\r\n\t\t\t\t\t\t\tthis.set_state(state, callback);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis._load_nodes(state.core.loaded, function (nodes) {\r\n\t\t\t\t\t\t\t\tdelete state.core.loaded;\r\n\t\t\t\t\t\t\t\tthis.set_state(state, callback);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(state.core.open) {\r\n\t\t\t\t\t\tif(!langx.isArray(state.core.open) || !state.core.open.length) {\r\n\t\t\t\t\t\t\tdelete state.core.open;\r\n\t\t\t\t\t\t\tthis.set_state(state, callback);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis._load_nodes(state.core.open, function (nodes) {\r\n\t\t\t\t\t\t\t\tthis.open_node(nodes, false, 0);\r\n\t\t\t\t\t\t\t\tdelete state.core.open;\r\n\t\t\t\t\t\t\t\tthis.set_state(state, callback);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(state.core.scroll) {\r\n\t\t\t\t\t\tif(state.core.scroll && state.core.scroll.left !== undefined) {\r\n\t\t\t\t\t\t\tthis.element.scrollLeft(state.core.scroll.left);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(state.core.scroll && state.core.scroll.top !== undefined) {\r\n\t\t\t\t\t\t\tthis.element.scrollTop(state.core.scroll.top);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdelete state.core.scroll;\r\n\t\t\t\t\t\tthis.set_state(state, callback);\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(state.core.selected) {\r\n\t\t\t\t\t\t_this = this;\r\n\t\t\t\t\t\tif (state.core.initial_selection === undefined ||\r\n\t\t\t\t\t\t\tstate.core.initial_selection === this._data.core.selected.concat([]).sort().join(',')\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\tthis.deselect_all();\r\n\t\t\t\t\t\t\tlangx.each(state.core.selected, function (i, v) {\r\n\t\t\t\t\t\t\t\t_this.select_node(v, false, true);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdelete state.core.initial_selection;\r\n\t\t\t\t\t\tdelete state.core.selected;\r\n\t\t\t\t\t\tthis.set_state(state, callback);\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor(i in state) {\r\n\t\t\t\t\t\tif(state.hasOwnProperty(i) && i !== \"core\" && langx.inArray(i, this.settings.plugins) === -1) {\r\n\t\t\t\t\t\t\tdelete state[i];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(langx.isEmptyObject(state.core)) {\r\n\t\t\t\t\t\tdelete state.core;\r\n\t\t\t\t\t\tthis.set_state(state, callback);\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(langx.isEmptyObject(state)) {\r\n\t\t\t\t\tstate = null;\r\n\t\t\t\t\tif(callback) { callback.call(this); }\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * triggered when a `set_state` call completes\r\n\t\t\t\t\t * @event\r\n\t\t\t\t\t * @name set_state.jstree\r\n\t\t\t\t\t */\r\n\t\t\t\t\tthis.trigger('set_state');\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\t/**\r\n\t\t * refreshes the tree - all nodes are reloaded with calls to `load_node`.\r\n\t\t * @name refresh()\r\n\t\t * @param {Boolean} skip_loading an option to skip showing the loading indicator\r\n\t\t * @param {Mixed} forget_state if set to `true` state will not be reapplied, if set to a function (receiving the current state as argument) the result of that function will be used as state\r\n\t\t * @trigger refresh.jstree\r\n\t\t */\r\n\t\trefresh : function (skip_loading, forget_state) {\r\n\t\t\tthis._data.core.state = forget_state === true ? {} : this.get_state();\r\n\t\t\tif(forget_state && langx.isFunction(forget_state)) { this._data.core.state = forget_state.call(this, this._data.core.state); }\r\n\t\t\tthis._cnt = 0;\r\n\t\t\tthis._model.data = {};\r\n\t\t\tthis._model.data[$.jstree.root] = {\r\n\t\t\t\tid : $.jstree.root,\r\n\t\t\t\tparent : null,\r\n\t\t\t\tparents : [],\r\n\t\t\t\tchildren : [],\r\n\t\t\t\tchildren_d : [],\r\n\t\t\t\tstate : { loaded : false }\r\n\t\t\t};\r\n\t\t\tthis._data.core.selected = [];\r\n\t\t\tthis._data.core.last_clicked = null;\r\n\t\t\tthis._data.core.focused = null;\r\n\r\n\t\t\tvar c = this.get_container_ul()[0].className;\r\n\t\t\tif(!skip_loading) {\r\n\t\t\t\tthis.element.html(\"<\"+\"ul class='\"+c+\"' role='group'><\"+\"li class='jstree-initial-node jstree-loading jstree-leaf jstree-last' role='treeitem' id='j\"+this._id+\"_loading'><i class='jstree-icon jstree-ocl'></i><\"+\"a class='jstree-anchor' href='#'><i class='jstree-icon jstree-themeicon-hidden'></i>\" + this.get_string(\"Loading ...\") + \"</a></li></ul>\");\r\n\t\t\t\tthis.element.attr('aria-activedescendant','j'+this._id+'_loading');\r\n\t\t\t}\r\n\t\t\tthis.load_node($.jstree.root, function (o, s) {\r\n\t\t\t\tif(s) {\r\n\t\t\t\t\tthis.get_container_ul()[0].className = c;\r\n\t\t\t\t\tif(this._firstChild(this.get_container_ul()[0])) {\r\n\t\t\t\t\t\tthis.element.attr('aria-activedescendant',this._firstChild(this.get_container_ul()[0]).id);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.set_state(langx.extend(true, {}, this._data.core.state), function () {\r\n\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t * triggered when a `refresh` call completes\r\n\t\t\t\t\t\t * @event\r\n\t\t\t\t\t\t * @name refresh.jstree\r\n\t\t\t\t\t\t */\r\n\t\t\t\t\t\tthis.trigger('refresh');\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tthis._data.core.state = null;\r\n\t\t\t});\r\n\t\t},\r\n\t\t/**\r\n\t\t * refreshes a node in the tree (reload its children) all opened nodes inside that node are reloaded with calls to `load_node`.\r\n\t\t * @name refresh_node(obj)\r\n\t\t * @param  {mixed} obj the node\r\n\t\t * @trigger refresh_node.jstree\r\n\t\t */\r\n\t\trefresh_node : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\r\n\t\t\tvar opened = [], to_load = [], s = this._data.core.selected.concat([]);\r\n\t\t\tto_load.push(obj.id);\r\n\t\t\tif(obj.state.opened === true) { opened.push(obj.id); }\r\n\t\t\tthis.get_node(obj, true).find('.jstree-open').each(function() { to_load.push(this.id); opened.push(this.id); });\r\n\t\t\tthis._load_nodes(to_load, langx.proxy(function (nodes) {\r\n\t\t\t\tthis.open_node(opened, false, 0);\r\n\t\t\t\tthis.select_node(s);\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when a node is refreshed\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name refresh_node.jstree\r\n\t\t\t\t * @param {Object} node - the refreshed node\r\n\t\t\t\t * @param {Array} nodes - an array of the IDs of the nodes that were reloaded\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('refresh_node', { 'node' : obj, 'nodes' : nodes });\r\n\t\t\t}, this), false, true);\r\n\t\t},\r\n\t\t/**\r\n\t\t * set (change) the ID of a node\r\n\t\t * @name set_id(obj, id)\r\n\t\t * @param  {mixed} obj the node\r\n\t\t * @param  {String} id the new ID\r\n\t\t * @return {Boolean}\r\n\t\t * @trigger set_id.jstree\r\n\t\t */\r\n\t\tset_id : function (obj, id) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\r\n\t\t\tvar i, j, m = this._model.data, old = obj.id;\r\n\t\t\tid = id.toString();\r\n\t\t\t// update parents (replace current ID with new one in children and children_d)\r\n\t\t\tm[obj.parent].children[langx.inArray(obj.id, m[obj.parent].children)] = id;\r\n\t\t\tfor(i = 0, j = obj.parents.length; i < j; i++) {\r\n\t\t\t\tm[obj.parents[i]].children_d[langx.inArray(obj.id, m[obj.parents[i]].children_d)] = id;\r\n\t\t\t}\r\n\t\t\t// update children (replace current ID with new one in parent and parents)\r\n\t\t\tfor(i = 0, j = obj.children.length; i < j; i++) {\r\n\t\t\t\tm[obj.children[i]].parent = id;\r\n\t\t\t}\r\n\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\r\n\t\t\t\tm[obj.children_d[i]].parents[langx.inArray(obj.id, m[obj.children_d[i]].parents)] = id;\r\n\t\t\t}\r\n\t\t\ti = langx.inArray(obj.id, this._data.core.selected);\r\n\t\t\tif(i !== -1) { this._data.core.selected[i] = id; }\r\n\t\t\t// update model and obj itself (obj.id, this._model.data[KEY])\r\n\t\t\ti = this.get_node(obj.id, true);\r\n\t\t\tif(i) {\r\n\t\t\t\ti.attr('id', id); //.children('.jstree-anchor').attr('id', id + '_anchor').end().attr('aria-labelledby', id + '_anchor');\r\n\t\t\t\tif(this.element.attr('aria-activedescendant') === obj.id) {\r\n\t\t\t\t\tthis.element.attr('aria-activedescendant', id);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tdelete m[obj.id];\r\n\t\t\tobj.id = id;\r\n\t\t\tobj.li_attr.id = id;\r\n\t\t\tm[id] = obj;\r\n\t\t\t/**\r\n\t\t\t * triggered when a node id value is changed\r\n\t\t\t * @event\r\n\t\t\t * @name set_id.jstree\r\n\t\t\t * @param {Object} node\r\n\t\t\t * @param {String} old the old id\r\n\t\t\t */\r\n\t\t\tthis.trigger('set_id',{ \"node\" : obj, \"new\" : obj.id, \"old\" : old });\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\t/**\r\n\t\t * get the text value of a node\r\n\t\t * @name get_text(obj)\r\n\t\t * @param  {mixed} obj the node\r\n\t\t * @return {String}\r\n\t\t */\r\n\t\tget_text : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\treturn (!obj || obj.id === $.jstree.root) ? false : obj.text;\r\n\t\t},\r\n\t\t/**\r\n\t\t * set the text value of a node. Used internally, please use `rename_node(obj, val)`.\r\n\t\t * @private\r\n\t\t * @name set_text(obj, val)\r\n\t\t * @param  {mixed} obj the node, you can pass an array to set the text on multiple nodes\r\n\t\t * @param  {String} val the new text value\r\n\t\t * @return {Boolean}\r\n\t\t * @trigger set_text.jstree\r\n\t\t */\r\n\t\tset_text : function (obj, val) {\r\n\t\t\tvar t1, t2;\r\n\t\t\tif(langx.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.set_text(obj[t1], val);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\r\n\t\t\tobj.text = val;\r\n\t\t\tif(this.get_node(obj, true).length) {\r\n\t\t\t\tthis.redraw_node(obj.id);\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * triggered when a node text value is changed\r\n\t\t\t * @event\r\n\t\t\t * @name set_text.jstree\r\n\t\t\t * @param {Object} obj\r\n\t\t\t * @param {String} text the new value\r\n\t\t\t */\r\n\t\t\tthis.trigger('set_text',{ \"obj\" : obj, \"text\" : val });\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\t/**\r\n\t\t * gets a JSON representation of a node (or the whole tree)\r\n\t\t * @name get_json([obj, options])\r\n\t\t * @param  {mixed} obj\r\n\t\t * @param  {Object} options\r\n\t\t * @param  {Boolean} options.no_state do not return state information\r\n\t\t * @param  {Boolean} options.no_id do not return ID\r\n\t\t * @param  {Boolean} options.no_children do not include children\r\n\t\t * @param  {Boolean} options.no_data do not include node data\r\n\t\t * @param  {Boolean} options.no_li_attr do not include LI attributes\r\n\t\t * @param  {Boolean} options.no_a_attr do not include A attributes\r\n\t\t * @param  {Boolean} options.flat return flat JSON instead of nested\r\n\t\t * @return {Object}\r\n\t\t */\r\n\t\tget_json : function (obj, options, flat) {\r\n\t\t\tobj = this.get_node(obj || $.jstree.root);\r\n\t\t\tif(!obj) { return false; }\r\n\t\t\tif(options && options.flat && !flat) { flat = []; }\r\n\t\t\tvar tmp = {\r\n\t\t\t\t'id' : obj.id,\r\n\t\t\t\t'text' : obj.text,\r\n\t\t\t\t'icon' : this.get_icon(obj),\r\n\t\t\t\t'li_attr' : langx.extend(true, {}, obj.li_attr),\r\n\t\t\t\t'a_attr' : langx.extend(true, {}, obj.a_attr),\r\n\t\t\t\t'state' : {},\r\n\t\t\t\t'data' : options && options.no_data ? false : langx.extend(true, langx.isArray(obj.data)?[]:{}, obj.data)\r\n\t\t\t\t//( this.get_node(obj, true).length ? this.get_node(obj, true).data() : obj.data ),\r\n\t\t\t}, i, j;\r\n\t\t\tif(options && options.flat) {\r\n\t\t\t\ttmp.parent = obj.parent;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttmp.children = [];\r\n\t\t\t}\r\n\t\t\tif(!options || !options.no_state) {\r\n\t\t\t\tfor(i in obj.state) {\r\n\t\t\t\t\tif(obj.state.hasOwnProperty(i)) {\r\n\t\t\t\t\t\ttmp.state[i] = obj.state[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tdelete tmp.state;\r\n\t\t\t}\r\n\t\t\tif(options && options.no_li_attr) {\r\n\t\t\t\tdelete tmp.li_attr;\r\n\t\t\t}\r\n\t\t\tif(options && options.no_a_attr) {\r\n\t\t\t\tdelete tmp.a_attr;\r\n\t\t\t}\r\n\t\t\tif(options && options.no_id) {\r\n\t\t\t\tdelete tmp.id;\r\n\t\t\t\tif(tmp.li_attr && tmp.li_attr.id) {\r\n\t\t\t\t\tdelete tmp.li_attr.id;\r\n\t\t\t\t}\r\n\t\t\t\tif(tmp.a_attr && tmp.a_attr.id) {\r\n\t\t\t\t\tdelete tmp.a_attr.id;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(options && options.flat && obj.id !== $.jstree.root) {\r\n\t\t\t\tflat.push(tmp);\r\n\t\t\t}\r\n\t\t\tif(!options || !options.no_children) {\r\n\t\t\t\tfor(i = 0, j = obj.children.length; i < j; i++) {\r\n\t\t\t\t\tif(options && options.flat) {\r\n\t\t\t\t\t\tthis.get_json(obj.children[i], options, flat);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttmp.children.push(this.get_json(obj.children[i], options));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn options && options.flat ? flat : (obj.id === $.jstree.root ? tmp.children : tmp);\r\n\t\t},\r\n\t\t/**\r\n\t\t * create a new node (do not confuse with load_node)\r\n\t\t * @name create_node([par, node, pos, callback, is_loaded])\r\n\t\t * @param  {mixed}   par       the parent node (to create a root node use either \"#\" (string) or `null`)\r\n\t\t * @param  {mixed}   node      the data for the new node (a valid JSON object, or a simple string with the name)\r\n\t\t * @param  {mixed}   pos       the index at which to insert the node, \"first\" and \"last\" are also supported, default is \"last\"\r\n\t\t * @param  {Function} callback a function to be called once the node is created\r\n\t\t * @param  {Boolean} is_loaded internal argument indicating if the parent node was succesfully loaded\r\n\t\t * @return {String}            the ID of the newly create node\r\n\t\t * @trigger model.jstree, create_node.jstree\r\n\t\t */\r\n\t\tcreate_node : function (par, node, pos, callback, is_loaded) {\r\n\t\t\tif(par === null) { par = $.jstree.root; }\r\n\t\t\tpar = this.get_node(par);\r\n\t\t\tif(!par) { return false; }\r\n\t\t\tpos = pos === undefined ? \"last\" : pos;\r\n\t\t\tif(!pos.toString().match(/^(before|after)$/) && !is_loaded && !this.is_loaded(par)) {\r\n\t\t\t\treturn this.load_node(par, function () { this.create_node(par, node, pos, callback, true); });\r\n\t\t\t}\r\n\t\t\tif(!node) { node = { \"text\" : this.get_string('New node') }; }\r\n\t\t\tif(typeof node === \"string\") {\r\n\t\t\t\tnode = { \"text\" : node };\r\n\t\t\t} else {\r\n\t\t\t\tnode = langx.extend(true, {}, node);\r\n\t\t\t}\r\n\t\t\tif(node.text === undefined) { node.text = this.get_string('New node'); }\r\n\t\t\tvar tmp, dpc, i, j;\r\n\r\n\t\t\tif(par.id === $.jstree.root) {\r\n\t\t\t\tif(pos === \"before\") { pos = \"first\"; }\r\n\t\t\t\tif(pos === \"after\") { pos = \"last\"; }\r\n\t\t\t}\r\n\t\t\tswitch(pos) {\r\n\t\t\t\tcase \"before\":\r\n\t\t\t\t\ttmp = this.get_node(par.parent);\r\n\t\t\t\t\tpos = langx.inArray(par.id, tmp.children);\r\n\t\t\t\t\tpar = tmp;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"after\" :\r\n\t\t\t\t\ttmp = this.get_node(par.parent);\r\n\t\t\t\t\tpos = langx.inArray(par.id, tmp.children) + 1;\r\n\t\t\t\t\tpar = tmp;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"inside\":\r\n\t\t\t\tcase \"first\":\r\n\t\t\t\t\tpos = 0;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"last\":\r\n\t\t\t\t\tpos = par.children.length;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tif(!pos) { pos = 0; }\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif(pos > par.children.length) { pos = par.children.length; }\r\n\t\t\tif(!node.id) { node.id = true; }\r\n\t\t\tif(!this.check(\"create_node\", node, par, pos)) {\r\n\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(node.id === true) { delete node.id; }\r\n\t\t\tnode = this._parse_model_from_json(node, par.id, par.parents.concat());\r\n\t\t\tif(!node) { return false; }\r\n\t\t\ttmp = this.get_node(node);\r\n\t\t\tdpc = [];\r\n\t\t\tdpc.push(node);\r\n\t\t\tdpc = dpc.concat(tmp.children_d);\r\n\t\t\tthis.trigger('model', { \"nodes\" : dpc, \"parent\" : par.id });\r\n\r\n\t\t\tpar.children_d = par.children_d.concat(dpc);\r\n\t\t\tfor(i = 0, j = par.parents.length; i < j; i++) {\r\n\t\t\t\tthis._model.data[par.parents[i]].children_d = this._model.data[par.parents[i]].children_d.concat(dpc);\r\n\t\t\t}\r\n\t\t\tnode = tmp;\r\n\t\t\ttmp = [];\r\n\t\t\tfor(i = 0, j = par.children.length; i < j; i++) {\r\n\t\t\t\ttmp[i >= pos ? i+1 : i] = par.children[i];\r\n\t\t\t}\r\n\t\t\ttmp[pos] = node.id;\r\n\t\t\tpar.children = tmp;\r\n\r\n\t\t\tthis.redraw_node(par, true);\r\n\t\t\t/**\r\n\t\t\t * triggered when a node is created\r\n\t\t\t * @event\r\n\t\t\t * @name create_node.jstree\r\n\t\t\t * @param {Object} node\r\n\t\t\t * @param {String} parent the parent's ID\r\n\t\t\t * @param {Number} position the position of the new node among the parent's children\r\n\t\t\t */\r\n\t\t\tthis.trigger('create_node', { \"node\" : this.get_node(node), \"parent\" : par.id, \"position\" : pos });\r\n\t\t\tif(callback) { callback.call(this, this.get_node(node)); }\r\n\t\t\treturn node.id;\r\n\t\t},\r\n\t\t/**\r\n\t\t * set the text value of a node\r\n\t\t * @name rename_node(obj, val)\r\n\t\t * @param  {mixed} obj the node, you can pass an array to rename multiple nodes to the same name\r\n\t\t * @param  {String} val the new text value\r\n\t\t * @return {Boolean}\r\n\t\t * @trigger rename_node.jstree\r\n\t\t */\r\n\t\trename_node : function (obj, val) {\r\n\t\t\tvar t1, t2, old;\r\n\t\t\tif(langx.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.rename_node(obj[t1], val);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\r\n\t\t\told = obj.text;\r\n\t\t\tif(!this.check(\"rename_node\", obj, this.get_parent(obj), val)) {\r\n\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tthis.set_text(obj, val); // .apply(this, Array.prototype.slice.call(arguments))\r\n\t\t\t/**\r\n\t\t\t * triggered when a node is renamed\r\n\t\t\t * @event\r\n\t\t\t * @name rename_node.jstree\r\n\t\t\t * @param {Object} node\r\n\t\t\t * @param {String} text the new value\r\n\t\t\t * @param {String} old the old value\r\n\t\t\t */\r\n\t\t\tthis.trigger('rename_node', { \"node\" : obj, \"text\" : val, \"old\" : old });\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\t/**\r\n\t\t * remove a node\r\n\t\t * @name delete_node(obj)\r\n\t\t * @param  {mixed} obj the node, you can pass an array to delete multiple nodes\r\n\t\t * @return {Boolean}\r\n\t\t * @trigger delete_node.jstree, changed.jstree\r\n\t\t */\r\n\t\tdelete_node : function (obj) {\r\n\t\t\tvar t1, t2, par, pos, tmp, i, j, k, l, c, top, lft;\r\n\t\t\tif(langx.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.delete_node(obj[t1]);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\r\n\t\t\tpar = this.get_node(obj.parent);\r\n\t\t\tpos = langx.inArray(obj.id, par.children);\r\n\t\t\tc = false;\r\n\t\t\tif(!this.check(\"delete_node\", obj, par, pos)) {\r\n\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(pos !== -1) {\r\n\t\t\t\tpar.children = $.vakata.array_remove(par.children, pos);\r\n\t\t\t}\r\n\t\t\ttmp = obj.children_d.concat([]);\r\n\t\t\ttmp.push(obj.id);\r\n\t\t\tfor(i = 0, j = obj.parents.length; i < j; i++) {\r\n\t\t\t\tthis._model.data[obj.parents[i]].children_d = $.vakata.array_filter(this._model.data[obj.parents[i]].children_d, function (v) {\r\n\t\t\t\t\treturn langx.inArray(v, tmp) === -1;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tfor(k = 0, l = tmp.length; k < l; k++) {\r\n\t\t\t\tif(this._model.data[tmp[k]].state.selected) {\r\n\t\t\t\t\tc = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (c) {\r\n\t\t\t\tthis._data.core.selected = $.vakata.array_filter(this._data.core.selected, function (v) {\r\n\t\t\t\t\treturn langx.inArray(v, tmp) === -1;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * triggered when a node is deleted\r\n\t\t\t * @event\r\n\t\t\t * @name delete_node.jstree\r\n\t\t\t * @param {Object} node\r\n\t\t\t * @param {String} parent the parent's ID\r\n\t\t\t */\r\n\t\t\tthis.trigger('delete_node', { \"node\" : obj, \"parent\" : par.id });\r\n\t\t\tif(c) {\r\n\t\t\t\tthis.trigger('changed', { 'action' : 'delete_node', 'node' : obj, 'selected' : this._data.core.selected, 'parent' : par.id });\r\n\t\t\t}\r\n\t\t\tfor(k = 0, l = tmp.length; k < l; k++) {\r\n\t\t\t\tdelete this._model.data[tmp[k]];\r\n\t\t\t}\r\n\t\t\tif(langx.inArray(this._data.core.focused, tmp) !== -1) {\r\n\t\t\t\tthis._data.core.focused = null;\r\n\t\t\t\ttop = this.element[0].scrollTop;\r\n\t\t\t\tlft = this.element[0].scrollLeft;\r\n\t\t\t\tif(par.id === $.jstree.root) {\r\n\t\t\t\t\tif (this._model.data[$.jstree.root].children[0]) {\r\n\t\t\t\t\t\tthis.get_node(this._model.data[$.jstree.root].children[0], true).children('.jstree-anchor').focus();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.get_node(par, true).children('.jstree-anchor').focus();\r\n\t\t\t\t}\r\n\t\t\t\tthis.element[0].scrollTop  = top;\r\n\t\t\t\tthis.element[0].scrollLeft = lft;\r\n\t\t\t}\r\n\t\t\tthis.redraw_node(par, true);\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\t/**\r\n\t\t * check if an operation is premitted on the tree. Used internally.\r\n\t\t * @private\r\n\t\t * @name check(chk, obj, par, pos)\r\n\t\t * @param  {String} chk the operation to check, can be \"create_node\", \"rename_node\", \"delete_node\", \"copy_node\" or \"move_node\"\r\n\t\t * @param  {mixed} obj the node\r\n\t\t * @param  {mixed} par the parent\r\n\t\t * @param  {mixed} pos the position to insert at, or if \"rename_node\" - the new name\r\n\t\t * @param  {mixed} more some various additional information, for example if a \"move_node\" operations is triggered by DND this will be the hovered node\r\n\t\t * @return {Boolean}\r\n\t\t */\r\n\t\tcheck : function (chk, obj, par, pos, more) {\r\n\t\t\tobj = obj && obj.id ? obj : this.get_node(obj);\r\n\t\t\tpar = par && par.id ? par : this.get_node(par);\r\n\t\t\tvar tmp = chk.match(/^move_node|copy_node|create_node$/i) ? par : obj,\r\n\t\t\t\tchc = this.settings.core.check_callback;\r\n\t\t\tif(chk === \"move_node\" || chk === \"copy_node\") {\r\n\t\t\t\tif((!more || !more.is_multi) && (obj.id === par.id || (chk === \"move_node\" && langx.inArray(obj.id, par.children) === pos) || langx.inArray(par.id, obj.children_d) !== -1)) {\r\n\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'core', 'id' : 'core_01', 'reason' : 'Moving parent inside child', 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(tmp && tmp.data) { tmp = tmp.data; }\r\n\t\t\tif(tmp && tmp.functions && (tmp.functions[chk] === false || tmp.functions[chk] === true)) {\r\n\t\t\t\tif(tmp.functions[chk] === false) {\r\n\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'core', 'id' : 'core_02', 'reason' : 'Node data prevents function: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\r\n\t\t\t\t}\r\n\t\t\t\treturn tmp.functions[chk];\r\n\t\t\t}\r\n\t\t\tif(chc === false || (langx.isFunction(chc) && chc.call(this, chk, obj, par, pos, more) === false) || (chc && chc[chk] === false)) {\r\n\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'core', 'id' : 'core_03', 'reason' : 'User config for core.check_callback prevents function: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\t/**\r\n\t\t * get the last error\r\n\t\t * @name last_error()\r\n\t\t * @return {Object}\r\n\t\t */\r\n\t\tlast_error : function () {\r\n\t\t\treturn this._data.core.last_error;\r\n\t\t},\r\n\t\t/**\r\n\t\t * move a node to a new parent\r\n\t\t * @name move_node(obj, par [, pos, callback, is_loaded])\r\n\t\t * @param  {mixed} obj the node to move, pass an array to move multiple nodes\r\n\t\t * @param  {mixed} par the new parent\r\n\t\t * @param  {mixed} pos the position to insert at (besides integer values, \"first\" and \"last\" are supported, as well as \"before\" and \"after\"), defaults to integer `0`\r\n\t\t * @param  {function} callback a function to call once the move is completed, receives 3 arguments - the node, the new parent and the position\r\n\t\t * @param  {Boolean} is_loaded internal parameter indicating if the parent node has been loaded\r\n\t\t * @param  {Boolean} skip_redraw internal parameter indicating if the tree should be redrawn\r\n\t\t * @param  {Boolean} instance internal parameter indicating if the node comes from another instance\r\n\t\t * @trigger move_node.jstree\r\n\t\t */\r\n\t\tmove_node : function (obj, par, pos, callback, is_loaded, skip_redraw, origin) {\r\n\t\t\tvar t1, t2, old_par, old_pos, new_par, old_ins, is_multi, dpc, tmp, i, j, k, l, p;\r\n\r\n\t\t\tpar = this.get_node(par);\r\n\t\t\tpos = pos === undefined ? 0 : pos;\r\n\t\t\tif(!par) { return false; }\r\n\t\t\tif(!pos.toString().match(/^(before|after)$/) && !is_loaded && !this.is_loaded(par)) {\r\n\t\t\t\treturn this.load_node(par, function () { this.move_node(obj, par, pos, callback, true, false, origin); });\r\n\t\t\t}\r\n\r\n\t\t\tif(langx.isArray(obj)) {\r\n\t\t\t\tif(obj.length === 1) {\r\n\t\t\t\t\tobj = obj[0];\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t//obj = obj.slice();\r\n\t\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\t\tif((tmp = this.move_node(obj[t1], par, pos, callback, is_loaded, false, origin))) {\r\n\t\t\t\t\t\t\tpar = tmp;\r\n\t\t\t\t\t\t\tpos = \"after\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.redraw();\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tobj = obj && obj.id ? obj : this.get_node(obj);\r\n\r\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\r\n\r\n\t\t\told_par = (obj.parent || $.jstree.root).toString();\r\n\t\t\tnew_par = (!pos.toString().match(/^(before|after)$/) || par.id === $.jstree.root) ? par : this.get_node(par.parent);\r\n\t\t\told_ins = origin ? origin : (this._model.data[obj.id] ? this : $.jstree.reference(obj.id));\r\n\t\t\tis_multi = !old_ins || !old_ins._id || (this._id !== old_ins._id);\r\n\t\t\told_pos = old_ins && old_ins._id && old_par && old_ins._model.data[old_par] && old_ins._model.data[old_par].children ? langx.inArray(obj.id, old_ins._model.data[old_par].children) : -1;\r\n\t\t\tif(old_ins && old_ins._id) {\r\n\t\t\t\tobj = old_ins._model.data[obj.id];\r\n\t\t\t}\r\n\r\n\t\t\tif(is_multi) {\r\n\t\t\t\tif((tmp = this.copy_node(obj, par, pos, callback, is_loaded, false, origin))) {\r\n\t\t\t\t\tif(old_ins) { old_ins.delete_node(obj); }\r\n\t\t\t\t\treturn tmp;\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t//var m = this._model.data;\r\n\t\t\tif(par.id === $.jstree.root) {\r\n\t\t\t\tif(pos === \"before\") { pos = \"first\"; }\r\n\t\t\t\tif(pos === \"after\") { pos = \"last\"; }\r\n\t\t\t}\r\n\t\t\tswitch(pos) {\r\n\t\t\t\tcase \"before\":\r\n\t\t\t\t\tpos = langx.inArray(par.id, new_par.children);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"after\" :\r\n\t\t\t\t\tpos = langx.inArray(par.id, new_par.children) + 1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"inside\":\r\n\t\t\t\tcase \"first\":\r\n\t\t\t\t\tpos = 0;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"last\":\r\n\t\t\t\t\tpos = new_par.children.length;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tif(!pos) { pos = 0; }\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif(pos > new_par.children.length) { pos = new_par.children.length; }\r\n\t\t\tif(!this.check(\"move_node\", obj, new_par, pos, { 'core' : true, 'origin' : origin, 'is_multi' : (old_ins && old_ins._id && old_ins._id !== this._id), 'is_foreign' : (!old_ins || !old_ins._id) })) {\r\n\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(obj.parent === new_par.id) {\r\n\t\t\t\tdpc = new_par.children.concat();\r\n\t\t\t\ttmp = langx.inArray(obj.id, dpc);\r\n\t\t\t\tif(tmp !== -1) {\r\n\t\t\t\t\tdpc = $.vakata.array_remove(dpc, tmp);\r\n\t\t\t\t\tif(pos > tmp) { pos--; }\r\n\t\t\t\t}\r\n\t\t\t\ttmp = [];\r\n\t\t\t\tfor(i = 0, j = dpc.length; i < j; i++) {\r\n\t\t\t\t\ttmp[i >= pos ? i+1 : i] = dpc[i];\r\n\t\t\t\t}\r\n\t\t\t\ttmp[pos] = obj.id;\r\n\t\t\t\tnew_par.children = tmp;\r\n\t\t\t\tthis._node_changed(new_par.id);\r\n\t\t\t\tthis.redraw(new_par.id === $.jstree.root);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// clean old parent and up\r\n\t\t\t\ttmp = obj.children_d.concat();\r\n\t\t\t\ttmp.push(obj.id);\r\n\t\t\t\tfor(i = 0, j = obj.parents.length; i < j; i++) {\r\n\t\t\t\t\tdpc = [];\r\n\t\t\t\t\tp = old_ins._model.data[obj.parents[i]].children_d;\r\n\t\t\t\t\tfor(k = 0, l = p.length; k < l; k++) {\r\n\t\t\t\t\t\tif(langx.inArray(p[k], tmp) === -1) {\r\n\t\t\t\t\t\t\tdpc.push(p[k]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\told_ins._model.data[obj.parents[i]].children_d = dpc;\r\n\t\t\t\t}\r\n\t\t\t\told_ins._model.data[old_par].children = $.vakata.array_remove_item(old_ins._model.data[old_par].children, obj.id);\r\n\r\n\t\t\t\t// insert into new parent and up\r\n\t\t\t\tfor(i = 0, j = new_par.parents.length; i < j; i++) {\r\n\t\t\t\t\tthis._model.data[new_par.parents[i]].children_d = this._model.data[new_par.parents[i]].children_d.concat(tmp);\r\n\t\t\t\t}\r\n\t\t\t\tdpc = [];\r\n\t\t\t\tfor(i = 0, j = new_par.children.length; i < j; i++) {\r\n\t\t\t\t\tdpc[i >= pos ? i+1 : i] = new_par.children[i];\r\n\t\t\t\t}\r\n\t\t\t\tdpc[pos] = obj.id;\r\n\t\t\t\tnew_par.children = dpc;\r\n\t\t\t\tnew_par.children_d.push(obj.id);\r\n\t\t\t\tnew_par.children_d = new_par.children_d.concat(obj.children_d);\r\n\r\n\t\t\t\t// update object\r\n\t\t\t\tobj.parent = new_par.id;\r\n\t\t\t\ttmp = new_par.parents.concat();\r\n\t\t\t\ttmp.unshift(new_par.id);\r\n\t\t\t\tp = obj.parents.length;\r\n\t\t\t\tobj.parents = tmp;\r\n\r\n\t\t\t\t// update object children\r\n\t\t\t\ttmp = tmp.concat();\r\n\t\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\r\n\t\t\t\t\tthis._model.data[obj.children_d[i]].parents = this._model.data[obj.children_d[i]].parents.slice(0,p*-1);\r\n\t\t\t\t\tArray.prototype.push.apply(this._model.data[obj.children_d[i]].parents, tmp);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(old_par === $.jstree.root || new_par.id === $.jstree.root) {\r\n\t\t\t\t\tthis._model.force_full_redraw = true;\r\n\t\t\t\t}\r\n\t\t\t\tif(!this._model.force_full_redraw) {\r\n\t\t\t\t\tthis._node_changed(old_par);\r\n\t\t\t\t\tthis._node_changed(new_par.id);\r\n\t\t\t\t}\r\n\t\t\t\tif(!skip_redraw) {\r\n\t\t\t\t\tthis.redraw();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(callback) { callback.call(this, obj, new_par, pos); }\r\n\t\t\t/**\r\n\t\t\t * triggered when a node is moved\r\n\t\t\t * @event\r\n\t\t\t * @name move_node.jstree\r\n\t\t\t * @param {Object} node\r\n\t\t\t * @param {String} parent the parent's ID\r\n\t\t\t * @param {Number} position the position of the node among the parent's children\r\n\t\t\t * @param {String} old_parent the old parent of the node\r\n\t\t\t * @param {Number} old_position the old position of the node\r\n\t\t\t * @param {Boolean} is_multi do the node and new parent belong to different instances\r\n\t\t\t * @param {jsTree} old_instance the instance the node came from\r\n\t\t\t * @param {jsTree} new_instance the instance of the new parent\r\n\t\t\t */\r\n\t\t\tthis.trigger('move_node', { \"node\" : obj, \"parent\" : new_par.id, \"position\" : pos, \"old_parent\" : old_par, \"old_position\" : old_pos, 'is_multi' : (old_ins && old_ins._id && old_ins._id !== this._id), 'is_foreign' : (!old_ins || !old_ins._id), 'old_instance' : old_ins, 'new_instance' : this });\r\n\t\t\treturn obj.id;\r\n\t\t},\r\n\t\t/**\r\n\t\t * copy a node to a new parent\r\n\t\t * @name copy_node(obj, par [, pos, callback, is_loaded])\r\n\t\t * @param  {mixed} obj the node to copy, pass an array to copy multiple nodes\r\n\t\t * @param  {mixed} par the new parent\r\n\t\t * @param  {mixed} pos the position to insert at (besides integer values, \"first\" and \"last\" are supported, as well as \"before\" and \"after\"), defaults to integer `0`\r\n\t\t * @param  {function} callback a function to call once the move is completed, receives 3 arguments - the node, the new parent and the position\r\n\t\t * @param  {Boolean} is_loaded internal parameter indicating if the parent node has been loaded\r\n\t\t * @param  {Boolean} skip_redraw internal parameter indicating if the tree should be redrawn\r\n\t\t * @param  {Boolean} instance internal parameter indicating if the node comes from another instance\r\n\t\t * @trigger model.jstree copy_node.jstree\r\n\t\t */\r\n\t\tcopy_node : function (obj, par, pos, callback, is_loaded, skip_redraw, origin) {\r\n\t\t\tvar t1, t2, dpc, tmp, i, j, node, old_par, new_par, old_ins, is_multi;\r\n\r\n\t\t\tpar = this.get_node(par);\r\n\t\t\tpos = pos === undefined ? 0 : pos;\r\n\t\t\tif(!par) { return false; }\r\n\t\t\tif(!pos.toString().match(/^(before|after)$/) && !is_loaded && !this.is_loaded(par)) {\r\n\t\t\t\treturn this.load_node(par, function () { this.copy_node(obj, par, pos, callback, true, false, origin); });\r\n\t\t\t}\r\n\r\n\t\t\tif(langx.isArray(obj)) {\r\n\t\t\t\tif(obj.length === 1) {\r\n\t\t\t\t\tobj = obj[0];\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t//obj = obj.slice();\r\n\t\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\t\tif((tmp = this.copy_node(obj[t1], par, pos, callback, is_loaded, true, origin))) {\r\n\t\t\t\t\t\t\tpar = tmp;\r\n\t\t\t\t\t\t\tpos = \"after\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.redraw();\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tobj = obj && obj.id ? obj : this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\r\n\r\n\t\t\told_par = (obj.parent || $.jstree.root).toString();\r\n\t\t\tnew_par = (!pos.toString().match(/^(before|after)$/) || par.id === $.jstree.root) ? par : this.get_node(par.parent);\r\n\t\t\told_ins = origin ? origin : (this._model.data[obj.id] ? this : $.jstree.reference(obj.id));\r\n\t\t\tis_multi = !old_ins || !old_ins._id || (this._id !== old_ins._id);\r\n\r\n\t\t\tif(old_ins && old_ins._id) {\r\n\t\t\t\tobj = old_ins._model.data[obj.id];\r\n\t\t\t}\r\n\r\n\t\t\tif(par.id === $.jstree.root) {\r\n\t\t\t\tif(pos === \"before\") { pos = \"first\"; }\r\n\t\t\t\tif(pos === \"after\") { pos = \"last\"; }\r\n\t\t\t}\r\n\t\t\tswitch(pos) {\r\n\t\t\t\tcase \"before\":\r\n\t\t\t\t\tpos = langx.inArray(par.id, new_par.children);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"after\" :\r\n\t\t\t\t\tpos = langx.inArray(par.id, new_par.children) + 1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"inside\":\r\n\t\t\t\tcase \"first\":\r\n\t\t\t\t\tpos = 0;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"last\":\r\n\t\t\t\t\tpos = new_par.children.length;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tif(!pos) { pos = 0; }\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif(pos > new_par.children.length) { pos = new_par.children.length; }\r\n\t\t\tif(!this.check(\"copy_node\", obj, new_par, pos, { 'core' : true, 'origin' : origin, 'is_multi' : (old_ins && old_ins._id && old_ins._id !== this._id), 'is_foreign' : (!old_ins || !old_ins._id) })) {\r\n\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tnode = old_ins ? old_ins.get_json(obj, { no_id : true, no_data : true, no_state : true }) : obj;\r\n\t\t\tif(!node) { return false; }\r\n\t\t\tif(node.id === true) { delete node.id; }\r\n\t\t\tnode = this._parse_model_from_json(node, new_par.id, new_par.parents.concat());\r\n\t\t\tif(!node) { return false; }\r\n\t\t\ttmp = this.get_node(node);\r\n\t\t\tif(obj && obj.state && obj.state.loaded === false) { tmp.state.loaded = false; }\r\n\t\t\tdpc = [];\r\n\t\t\tdpc.push(node);\r\n\t\t\tdpc = dpc.concat(tmp.children_d);\r\n\t\t\tthis.trigger('model', { \"nodes\" : dpc, \"parent\" : new_par.id });\r\n\r\n\t\t\t// insert into new parent and up\r\n\t\t\tfor(i = 0, j = new_par.parents.length; i < j; i++) {\r\n\t\t\t\tthis._model.data[new_par.parents[i]].children_d = this._model.data[new_par.parents[i]].children_d.concat(dpc);\r\n\t\t\t}\r\n\t\t\tdpc = [];\r\n\t\t\tfor(i = 0, j = new_par.children.length; i < j; i++) {\r\n\t\t\t\tdpc[i >= pos ? i+1 : i] = new_par.children[i];\r\n\t\t\t}\r\n\t\t\tdpc[pos] = tmp.id;\r\n\t\t\tnew_par.children = dpc;\r\n\t\t\tnew_par.children_d.push(tmp.id);\r\n\t\t\tnew_par.children_d = new_par.children_d.concat(tmp.children_d);\r\n\r\n\t\t\tif(new_par.id === $.jstree.root) {\r\n\t\t\t\tthis._model.force_full_redraw = true;\r\n\t\t\t}\r\n\t\t\tif(!this._model.force_full_redraw) {\r\n\t\t\t\tthis._node_changed(new_par.id);\r\n\t\t\t}\r\n\t\t\tif(!skip_redraw) {\r\n\t\t\t\tthis.redraw(new_par.id === $.jstree.root);\r\n\t\t\t}\r\n\t\t\tif(callback) { callback.call(this, tmp, new_par, pos); }\r\n\t\t\t/**\r\n\t\t\t * triggered when a node is copied\r\n\t\t\t * @event\r\n\t\t\t * @name copy_node.jstree\r\n\t\t\t * @param {Object} node the copied node\r\n\t\t\t * @param {Object} original the original node\r\n\t\t\t * @param {String} parent the parent's ID\r\n\t\t\t * @param {Number} position the position of the node among the parent's children\r\n\t\t\t * @param {String} old_parent the old parent of the node\r\n\t\t\t * @param {Number} old_position the position of the original node\r\n\t\t\t * @param {Boolean} is_multi do the node and new parent belong to different instances\r\n\t\t\t * @param {jsTree} old_instance the instance the node came from\r\n\t\t\t * @param {jsTree} new_instance the instance of the new parent\r\n\t\t\t */\r\n\t\t\tthis.trigger('copy_node', { \"node\" : tmp, \"original\" : obj, \"parent\" : new_par.id, \"position\" : pos, \"old_parent\" : old_par, \"old_position\" : old_ins && old_ins._id && old_par && old_ins._model.data[old_par] && old_ins._model.data[old_par].children ? langx.inArray(obj.id, old_ins._model.data[old_par].children) : -1,'is_multi' : (old_ins && old_ins._id && old_ins._id !== this._id), 'is_foreign' : (!old_ins || !old_ins._id), 'old_instance' : old_ins, 'new_instance' : this });\r\n\t\t\treturn tmp.id;\r\n\t\t},\r\n\t\t/**\r\n\t\t * cut a node (a later call to `paste(obj)` would move the node)\r\n\t\t * @name cut(obj)\r\n\t\t * @param  {mixed} obj multiple objects can be passed using an array\r\n\t\t * @trigger cut.jstree\r\n\t\t */\r\n\t\tcut : function (obj) {\r\n\t\t\tif(!obj) { obj = this._data.core.selected.concat(); }\r\n\t\t\tif(!langx.isArray(obj)) { obj = [obj]; }\r\n\t\t\tif(!obj.length) { return false; }\r\n\t\t\tvar tmp = [], o, t1, t2;\r\n\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\to = this.get_node(obj[t1]);\r\n\t\t\t\tif(o && o.id && o.id !== $.jstree.root) { tmp.push(o); }\r\n\t\t\t}\r\n\t\t\tif(!tmp.length) { return false; }\r\n\t\t\tccp_node = tmp;\r\n\t\t\tccp_inst = this;\r\n\t\t\tccp_mode = 'move_node';\r\n\t\t\t/**\r\n\t\t\t * triggered when nodes are added to the buffer for moving\r\n\t\t\t * @event\r\n\t\t\t * @name cut.jstree\r\n\t\t\t * @param {Array} node\r\n\t\t\t */\r\n\t\t\tthis.trigger('cut', { \"node\" : obj });\r\n\t\t},\r\n\t\t/**\r\n\t\t * copy a node (a later call to `paste(obj)` would copy the node)\r\n\t\t * @name copy(obj)\r\n\t\t * @param  {mixed} obj multiple objects can be passed using an array\r\n\t\t * @trigger copy.jstree\r\n\t\t */\r\n\t\tcopy : function (obj) {\r\n\t\t\tif(!obj) { obj = this._data.core.selected.concat(); }\r\n\t\t\tif(!langx.isArray(obj)) { obj = [obj]; }\r\n\t\t\tif(!obj.length) { return false; }\r\n\t\t\tvar tmp = [], o, t1, t2;\r\n\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\to = this.get_node(obj[t1]);\r\n\t\t\t\tif(o && o.id && o.id !== $.jstree.root) { tmp.push(o); }\r\n\t\t\t}\r\n\t\t\tif(!tmp.length) { return false; }\r\n\t\t\tccp_node = tmp;\r\n\t\t\tccp_inst = this;\r\n\t\t\tccp_mode = 'copy_node';\r\n\t\t\t/**\r\n\t\t\t * triggered when nodes are added to the buffer for copying\r\n\t\t\t * @event\r\n\t\t\t * @name copy.jstree\r\n\t\t\t * @param {Array} node\r\n\t\t\t */\r\n\t\t\tthis.trigger('copy', { \"node\" : obj });\r\n\t\t},\r\n\t\t/**\r\n\t\t * get the current buffer (any nodes that are waiting for a paste operation)\r\n\t\t * @name get_buffer()\r\n\t\t * @return {Object} an object consisting of `mode` (\"copy_node\" or \"move_node\"), `node` (an array of objects) and `inst` (the instance)\r\n\t\t */\r\n\t\tget_buffer : function () {\r\n\t\t\treturn { 'mode' : ccp_mode, 'node' : ccp_node, 'inst' : ccp_inst };\r\n\t\t},\r\n\t\t/**\r\n\t\t * check if there is something in the buffer to paste\r\n\t\t * @name can_paste()\r\n\t\t * @return {Boolean}\r\n\t\t */\r\n\t\tcan_paste : function () {\r\n\t\t\treturn ccp_mode !== false && ccp_node !== false; // && ccp_inst._model.data[ccp_node];\r\n\t\t},\r\n\t\t/**\r\n\t\t * copy or move the previously cut or copied nodes to a new parent\r\n\t\t * @name paste(obj [, pos])\r\n\t\t * @param  {mixed} obj the new parent\r\n\t\t * @param  {mixed} pos the position to insert at (besides integer, \"first\" and \"last\" are supported), defaults to integer `0`\r\n\t\t * @trigger paste.jstree\r\n\t\t */\r\n\t\tpaste : function (obj, pos) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || !ccp_mode || !ccp_mode.match(/^(copy_node|move_node)$/) || !ccp_node) { return false; }\r\n\t\t\tif(this[ccp_mode](ccp_node, obj, pos, false, false, false, ccp_inst)) {\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when paste is invoked\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name paste.jstree\r\n\t\t\t\t * @param {String} parent the ID of the receiving node\r\n\t\t\t\t * @param {Array} node the nodes in the buffer\r\n\t\t\t\t * @param {String} mode the performed operation - \"copy_node\" or \"move_node\"\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('paste', { \"parent\" : obj.id, \"node\" : ccp_node, \"mode\" : ccp_mode });\r\n\t\t\t}\r\n\t\t\tccp_node = false;\r\n\t\t\tccp_mode = false;\r\n\t\t\tccp_inst = false;\r\n\t\t},\r\n\t\t/**\r\n\t\t * clear the buffer of previously copied or cut nodes\r\n\t\t * @name clear_buffer()\r\n\t\t * @trigger clear_buffer.jstree\r\n\t\t */\r\n\t\tclear_buffer : function () {\r\n\t\t\tccp_node = false;\r\n\t\t\tccp_mode = false;\r\n\t\t\tccp_inst = false;\r\n\t\t\t/**\r\n\t\t\t * triggered when the copy / cut buffer is cleared\r\n\t\t\t * @event\r\n\t\t\t * @name clear_buffer.jstree\r\n\t\t\t */\r\n\t\t\tthis.trigger('clear_buffer');\r\n\t\t},\r\n\t\t/**\r\n\t\t * put a node in edit mode (input field to rename the node)\r\n\t\t * @name edit(obj [, default_text, callback])\r\n\t\t * @param  {mixed} obj\r\n\t\t * @param  {String} default_text the text to populate the input with (if omitted or set to a non-string value the node's text value is used)\r\n\t\t * @param  {Function} callback a function to be called once the text box is blurred, it is called in the instance's scope and receives the node, a status parameter (true if the rename is successful, false otherwise) and a boolean indicating if the user cancelled the edit. You can access the node's title using .text\r\n\t\t */\r\n\t\tedit : function (obj, default_text, callback) {\r\n\t\t\tvar rtl, w, a, s, t, h1, h2, fn, tmp, cancel = false;\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj) { return false; }\r\n\t\t\tif(!this.check(\"edit\", obj, this.get_parent(obj))) {\r\n\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\ttmp = obj;\r\n\t\t\tdefault_text = typeof default_text === 'string' ? default_text : obj.text;\r\n\t\t\tthis.set_text(obj, \"\");\r\n\t\t\tobj = this._open_to(obj);\r\n\t\t\ttmp.text = default_text;\r\n\r\n\t\t\trtl = this._data.core.rtl;\r\n\t\t\tw  = this.element.width();\r\n\t\t\tthis._data.core.focused = tmp.id;\r\n\t\t\ta  = obj.children('.jstree-anchor').focus();\r\n\t\t\ts  = $('<span>');\r\n\t\t\t/*!\r\n\t\t\toi = obj.children(\"i:visible\"),\r\n\t\t\tai = a.children(\"i:visible\"),\r\n\t\t\tw1 = oi.width() * oi.length,\r\n\t\t\tw2 = ai.width() * ai.length,\r\n\t\t\t*/\r\n\t\t\tt  = default_text;\r\n\t\t\th1 = $(\"<\"+\"div />\", { css : { \"position\" : \"absolute\", \"top\" : \"-200px\", \"left\" : (rtl ? \"0px\" : \"-1000px\"), \"visibility\" : \"hidden\" } }).appendTo(document.body);\r\n\t\t\th2 = $(\"<\"+\"input />\", {\r\n\t\t\t\t\t\t\"value\" : t,\r\n\t\t\t\t\t\t\"class\" : \"jstree-rename-input\",\r\n\t\t\t\t\t\t// \"size\" : t.length,\r\n\t\t\t\t\t\t\"css\" : {\r\n\t\t\t\t\t\t\t\"padding\" : \"0\",\r\n\t\t\t\t\t\t\t\"border\" : \"1px solid silver\",\r\n\t\t\t\t\t\t\t\"box-sizing\" : \"border-box\",\r\n\t\t\t\t\t\t\t\"display\" : \"inline-block\",\r\n\t\t\t\t\t\t\t\"height\" : (this._data.core.li_height) + \"px\",\r\n\t\t\t\t\t\t\t\"lineHeight\" : (this._data.core.li_height) + \"px\",\r\n\t\t\t\t\t\t\t\"width\" : \"150px\" // will be set a bit further down\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\"blur\" : langx.proxy(function (e) {\r\n\t\t\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\tvar i = s.children(\".jstree-rename-input\"),\r\n\t\t\t\t\t\t\t\tv = i.val(),\r\n\t\t\t\t\t\t\t\tf = this.settings.core.force_text,\r\n\t\t\t\t\t\t\t\tnv;\r\n\t\t\t\t\t\t\tif(v === \"\") { v = t; }\r\n\t\t\t\t\t\t\th1.remove();\r\n\t\t\t\t\t\t\ts.replaceWith(a);\r\n\t\t\t\t\t\t\ts.remove();\r\n\t\t\t\t\t\t\tt = f ? t : $('<div></div>').append(langx.parseHTML(t)).html();\r\n\t\t\t\t\t\t\tthis.set_text(obj, t);\r\n\t\t\t\t\t\t\tnv = !!this.rename_node(obj, f ? $('<div></div>').text(v).text() : $('<div></div>').append(langx.parseHTML(v)).html());\r\n\t\t\t\t\t\t\tif(!nv) {\r\n\t\t\t\t\t\t\t\tthis.set_text(obj, t); // move this up? and fix #483\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tthis._data.core.focused = tmp.id;\r\n\t\t\t\t\t\t\tsetTimeout(langx.proxy(function () {\r\n\t\t\t\t\t\t\t\tvar node = this.get_node(tmp.id, true);\r\n\t\t\t\t\t\t\t\tif(node.length) {\r\n\t\t\t\t\t\t\t\t\tthis._data.core.focused = tmp.id;\r\n\t\t\t\t\t\t\t\t\tnode.children('.jstree-anchor').focus();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}, this), 0);\r\n\t\t\t\t\t\t\tif(callback) {\r\n\t\t\t\t\t\t\t\tcallback.call(this, tmp, nv, cancel);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\th2 = null;\r\n\t\t\t\t\t\t}, this),\r\n\t\t\t\t\t\t\"keydown\" : function (e) {\r\n\t\t\t\t\t\t\tvar key = e.which;\r\n\t\t\t\t\t\t\tif(key === 27) {\r\n\t\t\t\t\t\t\t\tcancel = true;\r\n\t\t\t\t\t\t\t\tthis.value = t;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(key === 27 || key === 13 || key === 37 || key === 38 || key === 39 || key === 40 || key === 32) {\r\n\t\t\t\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(key === 27 || key === 13) {\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\tthis.blur();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\"click\" : function (e) { e.stopImmediatePropagation(); },\r\n\t\t\t\t\t\t\"mousedown\" : function (e) { e.stopImmediatePropagation(); },\r\n\t\t\t\t\t\t\"keyup\" : function (e) {\r\n\t\t\t\t\t\t\th2.width(Math.min(h1.text(\"pW\" + this.value).width(),w));\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\"keypress\" : function(e) {\r\n\t\t\t\t\t\t\tif(e.which === 13) { return false; }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\tfn = {\r\n\t\t\t\t\t\tfontFamily\t\t: a.css('fontFamily')\t\t|| '',\r\n\t\t\t\t\t\tfontSize\t\t: a.css('fontSize')\t\t\t|| '',\r\n\t\t\t\t\t\tfontWeight\t\t: a.css('fontWeight')\t\t|| '',\r\n\t\t\t\t\t\tfontStyle\t\t: a.css('fontStyle')\t\t|| '',\r\n\t\t\t\t\t\tfontStretch\t\t: a.css('fontStretch')\t\t|| '',\r\n\t\t\t\t\t\tfontVariant\t\t: a.css('fontVariant')\t\t|| '',\r\n\t\t\t\t\t\tletterSpacing\t: a.css('letterSpacing')\t|| '',\r\n\t\t\t\t\t\twordSpacing\t\t: a.css('wordSpacing')\t\t|| ''\r\n\t\t\t\t};\r\n\t\t\ts.attr('class', a.attr('class')).append(a.contents().clone()).append(h2);\r\n\t\t\ta.replaceWith(s);\r\n\t\t\th1.css(fn);\r\n\t\t\th2.css(fn).width(Math.min(h1.text(\"pW\" + h2[0].value).width(),w))[0].select();\r\n\t\t\t$(document).one('mousedown.jstree touchstart.jstree dnd_start.vakata', function (e) {\r\n\t\t\t\tif (h2 && e.target !== h2) {\r\n\t\t\t\t\t$(h2).blur();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * changes the theme\r\n\t\t * @name set_theme(theme_name [, theme_url])\r\n\t\t * @param {String} theme_name the name of the new theme to apply\r\n\t\t * @param {mixed} theme_url  the location of the CSS file for this theme. Omit or set to `false` if you manually included the file. Set to `true` to autoload from the `core.themes.dir` directory.\r\n\t\t * @trigger set_theme.jstree\r\n\t\t */\r\n\t\tset_theme : function (theme_name, theme_url) {\r\n\t\t\tif(!theme_name) { return false; }\r\n\t\t\tif(theme_url === true) {\r\n\t\t\t\tvar dir = this.settings.core.themes.dir;\r\n\t\t\t\tif(!dir) { dir = $.jstree.path + '/themes'; }\r\n\t\t\t\ttheme_url = dir + '/' + theme_name + '/style.css';\r\n\t\t\t}\r\n\t\t\tif(theme_url && langx.inArray(theme_url, themes_loaded) === -1) {\r\n\t\t\t\t$('head').append('<'+'link rel=\"stylesheet\" href=\"' + theme_url + '\" type=\"text/css\" />');\r\n\t\t\t\tthemes_loaded.push(theme_url);\r\n\t\t\t}\r\n\t\t\tif(this._data.core.themes.name) {\r\n\t\t\t\tthis.element.removeClass('jstree-' + this._data.core.themes.name);\r\n\t\t\t}\r\n\t\t\tthis._data.core.themes.name = theme_name;\r\n\t\t\tthis.element.addClass('jstree-' + theme_name);\r\n\t\t\tthis.element[this.settings.core.themes.responsive ? 'addClass' : 'removeClass' ]('jstree-' + theme_name + '-responsive');\r\n\t\t\t/**\r\n\t\t\t * triggered when a theme is set\r\n\t\t\t * @event\r\n\t\t\t * @name set_theme.jstree\r\n\t\t\t * @param {String} theme the new theme\r\n\t\t\t */\r\n\t\t\tthis.trigger('set_theme', { 'theme' : theme_name });\r\n\t\t},\r\n\t\t/**\r\n\t\t * gets the name of the currently applied theme name\r\n\t\t * @name get_theme()\r\n\t\t * @return {String}\r\n\t\t */\r\n\t\tget_theme : function () { return this._data.core.themes.name; },\r\n\t\t/**\r\n\t\t * changes the theme variant (if the theme has variants)\r\n\t\t * @name set_theme_variant(variant_name)\r\n\t\t * @param {String|Boolean} variant_name the variant to apply (if `false` is used the current variant is removed)\r\n\t\t */\r\n\t\tset_theme_variant : function (variant_name) {\r\n\t\t\tif(this._data.core.themes.variant) {\r\n\t\t\t\tthis.element.removeClass('jstree-' + this._data.core.themes.name + '-' + this._data.core.themes.variant);\r\n\t\t\t}\r\n\t\t\tthis._data.core.themes.variant = variant_name;\r\n\t\t\tif(variant_name) {\r\n\t\t\t\tthis.element.addClass('jstree-' + this._data.core.themes.name + '-' + this._data.core.themes.variant);\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * gets the name of the currently applied theme variant\r\n\t\t * @name get_theme()\r\n\t\t * @return {String}\r\n\t\t */\r\n\t\tget_theme_variant : function () { return this._data.core.themes.variant; },\r\n\t\t/**\r\n\t\t * shows a striped background on the container (if the theme supports it)\r\n\t\t * @name show_stripes()\r\n\t\t */\r\n\t\tshow_stripes : function () {\r\n\t\t\tthis._data.core.themes.stripes = true;\r\n\t\t\tthis.get_container_ul().addClass(\"jstree-striped\");\r\n\t\t\t/**\r\n\t\t\t * triggered when stripes are shown\r\n\t\t\t * @event\r\n\t\t\t * @name show_stripes.jstree\r\n\t\t\t */\r\n\t\t\tthis.trigger('show_stripes');\r\n\t\t},\r\n\t\t/**\r\n\t\t * hides the striped background on the container\r\n\t\t * @name hide_stripes()\r\n\t\t */\r\n\t\thide_stripes : function () {\r\n\t\t\tthis._data.core.themes.stripes = false;\r\n\t\t\tthis.get_container_ul().removeClass(\"jstree-striped\");\r\n\t\t\t/**\r\n\t\t\t * triggered when stripes are hidden\r\n\t\t\t * @event\r\n\t\t\t * @name hide_stripes.jstree\r\n\t\t\t */\r\n\t\t\tthis.trigger('hide_stripes');\r\n\t\t},\r\n\t\t/**\r\n\t\t * toggles the striped background on the container\r\n\t\t * @name toggle_stripes()\r\n\t\t */\r\n\t\ttoggle_stripes : function () { if(this._data.core.themes.stripes) { this.hide_stripes(); } else { this.show_stripes(); } },\r\n\t\t/**\r\n\t\t * shows the connecting dots (if the theme supports it)\r\n\t\t * @name show_dots()\r\n\t\t */\r\n\t\tshow_dots : function () {\r\n\t\t\tthis._data.core.themes.dots = true;\r\n\t\t\tthis.get_container_ul().removeClass(\"jstree-no-dots\");\r\n\t\t\t/**\r\n\t\t\t * triggered when dots are shown\r\n\t\t\t * @event\r\n\t\t\t * @name show_dots.jstree\r\n\t\t\t */\r\n\t\t\tthis.trigger('show_dots');\r\n\t\t},\r\n\t\t/**\r\n\t\t * hides the connecting dots\r\n\t\t * @name hide_dots()\r\n\t\t */\r\n\t\thide_dots : function () {\r\n\t\t\tthis._data.core.themes.dots = false;\r\n\t\t\tthis.get_container_ul().addClass(\"jstree-no-dots\");\r\n\t\t\t/**\r\n\t\t\t * triggered when dots are hidden\r\n\t\t\t * @event\r\n\t\t\t * @name hide_dots.jstree\r\n\t\t\t */\r\n\t\t\tthis.trigger('hide_dots');\r\n\t\t},\r\n\t\t/**\r\n\t\t * toggles the connecting dots\r\n\t\t * @name toggle_dots()\r\n\t\t */\r\n\t\ttoggle_dots : function () { if(this._data.core.themes.dots) { this.hide_dots(); } else { this.show_dots(); } },\r\n\t\t/**\r\n\t\t * show the node icons\r\n\t\t * @name show_icons()\r\n\t\t */\r\n\t\tshow_icons : function () {\r\n\t\t\tthis._data.core.themes.icons = true;\r\n\t\t\tthis.get_container_ul().removeClass(\"jstree-no-icons\");\r\n\t\t\t/**\r\n\t\t\t * triggered when icons are shown\r\n\t\t\t * @event\r\n\t\t\t * @name show_icons.jstree\r\n\t\t\t */\r\n\t\t\tthis.trigger('show_icons');\r\n\t\t},\r\n\t\t/**\r\n\t\t * hide the node icons\r\n\t\t * @name hide_icons()\r\n\t\t */\r\n\t\thide_icons : function () {\r\n\t\t\tthis._data.core.themes.icons = false;\r\n\t\t\tthis.get_container_ul().addClass(\"jstree-no-icons\");\r\n\t\t\t/**\r\n\t\t\t * triggered when icons are hidden\r\n\t\t\t * @event\r\n\t\t\t * @name hide_icons.jstree\r\n\t\t\t */\r\n\t\t\tthis.trigger('hide_icons');\r\n\t\t},\r\n\t\t/**\r\n\t\t * toggle the node icons\r\n\t\t * @name toggle_icons()\r\n\t\t */\r\n\t\ttoggle_icons : function () { if(this._data.core.themes.icons) { this.hide_icons(); } else { this.show_icons(); } },\r\n\t\t/**\r\n\t\t * show the node ellipsis\r\n\t\t * @name show_icons()\r\n\t\t */\r\n\t\tshow_ellipsis : function () {\r\n\t\t\tthis._data.core.themes.ellipsis = true;\r\n\t\t\tthis.get_container_ul().addClass(\"jstree-ellipsis\");\r\n\t\t\t/**\r\n\t\t\t * triggered when ellisis is shown\r\n\t\t\t * @event\r\n\t\t\t * @name show_ellipsis.jstree\r\n\t\t\t */\r\n\t\t\tthis.trigger('show_ellipsis');\r\n\t\t},\r\n\t\t/**\r\n\t\t * hide the node ellipsis\r\n\t\t * @name hide_ellipsis()\r\n\t\t */\r\n\t\thide_ellipsis : function () {\r\n\t\t\tthis._data.core.themes.ellipsis = false;\r\n\t\t\tthis.get_container_ul().removeClass(\"jstree-ellipsis\");\r\n\t\t\t/**\r\n\t\t\t * triggered when ellisis is hidden\r\n\t\t\t * @event\r\n\t\t\t * @name hide_ellipsis.jstree\r\n\t\t\t */\r\n\t\t\tthis.trigger('hide_ellipsis');\r\n\t\t},\r\n\t\t/**\r\n\t\t * toggle the node ellipsis\r\n\t\t * @name toggle_icons()\r\n\t\t */\r\n\t\ttoggle_ellipsis : function () { if(this._data.core.themes.ellipsis) { this.hide_ellipsis(); } else { this.show_ellipsis(); } },\r\n\t\t/**\r\n\t\t * set the node icon for a node\r\n\t\t * @name set_icon(obj, icon)\r\n\t\t * @param {mixed} obj\r\n\t\t * @param {String} icon the new icon - can be a path to an icon or a className, if using an image that is in the current directory use a `./` prefix, otherwise it will be detected as a class\r\n\t\t */\r\n\t\tset_icon : function (obj, icon) {\r\n\t\t\tvar t1, t2, dom, old;\r\n\t\t\tif(langx.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.set_icon(obj[t1], icon);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\r\n\t\t\told = obj.icon;\r\n\t\t\tobj.icon = icon === true || icon === null || icon === undefined || icon === '' ? true : icon;\r\n\t\t\tdom = this.get_node(obj, true).children(\".jstree-anchor\").children(\".jstree-themeicon\");\r\n\t\t\tif(icon === false) {\r\n\t\t\t\tdom.removeClass('jstree-themeicon-custom ' + old).css(\"background\",\"\").removeAttr(\"rel\");\r\n\t\t\t\tthis.hide_icon(obj);\r\n\t\t\t}\r\n\t\t\telse if(icon === true || icon === null || icon === undefined || icon === '') {\r\n\t\t\t\tdom.removeClass('jstree-themeicon-custom ' + old).css(\"background\",\"\").removeAttr(\"rel\");\r\n\t\t\t\tif(old === false) { this.show_icon(obj); }\r\n\t\t\t}\r\n\t\t\telse if(icon.indexOf(\"/\") === -1 && icon.indexOf(\".\") === -1) {\r\n\t\t\t\tdom.removeClass(old).css(\"background\",\"\");\r\n\t\t\t\tdom.addClass(icon + ' jstree-themeicon-custom').attr(\"rel\",icon);\r\n\t\t\t\tif(old === false) { this.show_icon(obj); }\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdom.removeClass(old).css(\"background\",\"\");\r\n\t\t\t\tdom.addClass('jstree-themeicon-custom').css(\"background\", \"url('\" + icon + \"') center center no-repeat\").attr(\"rel\",icon);\r\n\t\t\t\tif(old === false) { this.show_icon(obj); }\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\t/**\r\n\t\t * get the node icon for a node\r\n\t\t * @name get_icon(obj)\r\n\t\t * @param {mixed} obj\r\n\t\t * @return {String}\r\n\t\t */\r\n\t\tget_icon : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\treturn (!obj || obj.id === $.jstree.root) ? false : obj.icon;\r\n\t\t},\r\n\t\t/**\r\n\t\t * hide the icon on an individual node\r\n\t\t * @name hide_icon(obj)\r\n\t\t * @param {mixed} obj\r\n\t\t */\r\n\t\thide_icon : function (obj) {\r\n\t\t\tvar t1, t2;\r\n\t\t\tif(langx.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.hide_icon(obj[t1]);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj === $.jstree.root) { return false; }\r\n\t\t\tobj.icon = false;\r\n\t\t\tthis.get_node(obj, true).children(\".jstree-anchor\").children(\".jstree-themeicon\").addClass('jstree-themeicon-hidden');\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\t/**\r\n\t\t * show the icon on an individual node\r\n\t\t * @name show_icon(obj)\r\n\t\t * @param {mixed} obj\r\n\t\t */\r\n\t\tshow_icon : function (obj) {\r\n\t\t\tvar t1, t2, dom;\r\n\t\t\tif(langx.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.show_icon(obj[t1]);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj === $.jstree.root) { return false; }\r\n\t\t\tdom = this.get_node(obj, true);\r\n\t\t\tobj.icon = dom.length ? dom.children(\".jstree-anchor\").children(\".jstree-themeicon\").attr('rel') : true;\r\n\t\t\tif(!obj.icon) { obj.icon = true; }\r\n\t\t\tdom.children(\".jstree-anchor\").children(\".jstree-themeicon\").removeClass('jstree-themeicon-hidden');\r\n\t\t\treturn true;\r\n\t\t}\r\n\t});\r\n\r\n\t// helpers\r\n\t$.vakata = {};\r\n\r\n\t$.vakata.search = function(pattern, txt, options) {\r\n\t\toptions = options || {};\r\n\t\tif(options.fuzzy !== false) {\r\n\t\t\toptions.fuzzy = true;\r\n\t\t}\r\n\t\tpattern = options.caseSensitive ? pattern : pattern.toLowerCase();\r\n\t\tvar MATCH_LOCATION\t= options.location || 0,\r\n\t\t\tMATCH_DISTANCE\t= options.distance || 100,\r\n\t\t\tMATCH_THRESHOLD\t= options.threshold || 0.6,\r\n\t\t\tpatternLen = pattern.length;\r\n\t\tif(patternLen > 32) {\r\n\t\t\toptions.fuzzy = false;\r\n\t\t}\r\n\t\tif(options.fuzzy) {\r\n\t\t\tvar matchmask = 1 << (patternLen - 1);\r\n\t\t\tvar pattern_alphabet = (function () {\r\n\t\t\t\tvar mask = {},\r\n\t\t\t\t\ti = 0;\r\n\t\t\t\tfor (i = 0; i < patternLen; i++) {\r\n\t\t\t\t\tmask[pattern.charAt(i)] = 0;\r\n\t\t\t\t}\r\n\t\t\t\tfor (i = 0; i < patternLen; i++) {\r\n\t\t\t\t\tmask[pattern.charAt(i)] |= 1 << (patternLen - i - 1);\r\n\t\t\t\t}\r\n\t\t\t\treturn mask;\r\n\t\t\t})();\r\n\t\t\tvar match_bitapScore = function (e, x) {\r\n\t\t\t\tvar accuracy = e / patternLen,\r\n\t\t\t\t\tproximity = Math.abs(MATCH_LOCATION - x);\r\n\t\t\t\tif(!MATCH_DISTANCE) {\r\n\t\t\t\t\treturn proximity ? 1.0 : accuracy;\r\n\t\t\t\t}\r\n\t\t\t\treturn accuracy + (proximity / MATCH_DISTANCE);\r\n\t\t\t};\r\n\t\t}\r\n\t\tvar search = function (text) {\r\n\t\t\ttext = options.caseSensitive ? text : text.toLowerCase();\r\n\t\t\tif(pattern === text || text.indexOf(pattern) !== -1) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tisMatch: true,\r\n\t\t\t\t\tscore: 0\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\tif(!options.fuzzy) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tisMatch: false,\r\n\t\t\t\t\tscore: 1\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\tvar i, j,\r\n\t\t\t\ttextLen = text.length,\r\n\t\t\t\tscoreThreshold = MATCH_THRESHOLD,\r\n\t\t\t\tbestLoc = text.indexOf(pattern, MATCH_LOCATION),\r\n\t\t\t\tbinMin, binMid,\r\n\t\t\t\tbinMax = patternLen + textLen,\r\n\t\t\t\tlastRd, start, finish, rd, charMatch,\r\n\t\t\t\tscore = 1,\r\n\t\t\t\tlocations = [];\r\n\t\t\tif (bestLoc != -1) {\r\n\t\t\t\tscoreThreshold = Math.min(match_bitapScore(0, bestLoc), scoreThreshold);\r\n\t\t\t\tbestLoc = text.lastIndexOf(pattern, MATCH_LOCATION + patternLen);\r\n\t\t\t\tif (bestLoc != -1) {\r\n\t\t\t\t\tscoreThreshold = Math.min(match_bitapScore(0, bestLoc), scoreThreshold);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbestLoc = -1;\r\n\t\t\tfor (i = 0; i < patternLen; i++) {\r\n\t\t\t\tbinMin = 0;\r\n\t\t\t\tbinMid = binMax;\r\n\t\t\t\twhile (binMin < binMid) {\r\n\t\t\t\t\tif (match_bitapScore(i, MATCH_LOCATION + binMid) <= scoreThreshold) {\r\n\t\t\t\t\t\tbinMin = binMid;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbinMax = binMid;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbinMid = Math.floor((binMax - binMin) / 2 + binMin);\r\n\t\t\t\t}\r\n\t\t\t\tbinMax = binMid;\r\n\t\t\t\tstart = Math.max(1, MATCH_LOCATION - binMid + 1);\r\n\t\t\t\tfinish = Math.min(MATCH_LOCATION + binMid, textLen) + patternLen;\r\n\t\t\t\trd = Array(finish + 2);\r\n\t\t\t\trd[finish + 1] = (1 << i) - 1;\r\n\t\t\t\tfor (j = finish; j >= start; j--) {\r\n\t\t\t\t\tcharMatch = pattern_alphabet[text.charAt(j - 1)];\r\n\t\t\t\t\tif (i === 0) {\r\n\t\t\t\t\t\trd[j] = ((rd[j + 1] << 1) | 1) & charMatch;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\trd[j] = ((rd[j + 1] << 1) | 1) & charMatch | (((lastRd[j + 1] | lastRd[j]) << 1) | 1) | lastRd[j + 1];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (rd[j] & matchmask) {\r\n\t\t\t\t\t\tscore = match_bitapScore(i, j - 1);\r\n\t\t\t\t\t\tif (score <= scoreThreshold) {\r\n\t\t\t\t\t\t\tscoreThreshold = score;\r\n\t\t\t\t\t\t\tbestLoc = j - 1;\r\n\t\t\t\t\t\t\tlocations.push(bestLoc);\r\n\t\t\t\t\t\t\tif (bestLoc > MATCH_LOCATION) {\r\n\t\t\t\t\t\t\t\tstart = Math.max(1, 2 * MATCH_LOCATION - bestLoc);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (match_bitapScore(i + 1, MATCH_LOCATION) > scoreThreshold) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tlastRd = rd;\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\tisMatch: bestLoc >= 0,\r\n\t\t\t\tscore: score\r\n\t\t\t};\r\n\t\t};\r\n\t\treturn txt === true ? { 'search' : search } : search(txt);\r\n\t};\r\n\r\n\t// collect attributes\r\n\t$.vakata.attributes = function(node, with_values) {\r\n\t\tnode = $(node)[0];\r\n\t\tvar attr = with_values ? {} : [];\r\n\t\tif(node && node.attributes) {\r\n\t\t\tlangx.each(node.attributes, function (i, v) {\r\n\t\t\t\tif(langx.inArray(v.name.toLowerCase(),['style','contenteditable','hasfocus','tabindex']) !== -1) { return; }\r\n\t\t\t\tif(v.value !== null && langx.trim(v.value) !== '') {\r\n\t\t\t\t\tif(with_values) { attr[v.name] = v.value; }\r\n\t\t\t\t\telse { attr.push(v.name); }\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn attr;\r\n\t};\r\n\t$.vakata.array_unique = function(array) {\r\n\t\tvar a = [], i, j, l, o = {};\r\n\t\tfor(i = 0, l = array.length; i < l; i++) {\r\n\t\t\tif(o[array[i]] === undefined) {\r\n\t\t\t\ta.push(array[i]);\r\n\t\t\t\to[array[i]] = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn a;\r\n\t};\r\n\t// remove item from array\r\n\t$.vakata.array_remove = function(array, from) {\r\n\t\tarray.splice(from, 1);\r\n\t\treturn array;\r\n\t\t//var rest = array.slice((to || from) + 1 || array.length);\r\n\t\t//array.length = from < 0 ? array.length + from : from;\r\n\t\t//array.push.apply(array, rest);\r\n\t\t//return array;\r\n\t};\r\n\t// remove item from array\r\n\t$.vakata.array_remove_item = function(array, item) {\r\n\t\tvar tmp = langx.inArray(item, array);\r\n\t\treturn tmp !== -1 ? $.vakata.array_remove(array, tmp) : array;\r\n\t};\r\n\t$.vakata.array_filter = function(c,a,b,d,e) {\r\n\t\tif (c.filter) {\r\n\t\t\treturn c.filter(a, b);\r\n\t\t}\r\n\t\td=[];\r\n\t\tfor (e in c) {\r\n\t\t\tif (~~e+''===e+'' && e>=0 && a.call(b,c[e],+e,c)) {\r\n\t\t\t\td.push(c[e]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn d;\r\n\t};\r\n\r\n\r\n\treturn Tree;\r\n\r\n});\r\n\ndefine('skylark-widgets-hierarchy/addons/changed',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"../Hierarchy\"\r\n],function(langx,browser,eventer,noder,geom,$,jstree){\r\n\t\"use strict\";\r\n\r\n\tif($.jstree.plugins.changed) { return; }\r\n\r\n\t$.jstree.plugins.changed = function (options, parent) {\r\n\t\tvar last = [];\r\n\t\tthis.trigger = function (ev, data) {\r\n\t\t\tvar i, j;\r\n\t\t\tif(!data) {\r\n\t\t\t\tdata = {};\r\n\t\t\t}\r\n\t\t\tif(ev.replace('.jstree','') === 'changed') {\r\n\t\t\t\tdata.changed = { selected : [], deselected : [] };\r\n\t\t\t\tvar tmp = {};\r\n\t\t\t\tfor(i = 0, j = last.length; i < j; i++) {\r\n\t\t\t\t\ttmp[last[i]] = 1;\r\n\t\t\t\t}\r\n\t\t\t\tfor(i = 0, j = data.selected.length; i < j; i++) {\r\n\t\t\t\t\tif(!tmp[data.selected[i]]) {\r\n\t\t\t\t\t\tdata.changed.selected.push(data.selected[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttmp[data.selected[i]] = 2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfor(i = 0, j = last.length; i < j; i++) {\r\n\t\t\t\t\tif(tmp[last[i]] === 1) {\r\n\t\t\t\t\t\tdata.changed.deselected.push(last[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tlast = data.selected.slice();\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * triggered when selection changes (the \"changed\" plugin enhances the original event with more data)\r\n\t\t\t * @event\r\n\t\t\t * @name changed.jstree\r\n\t\t\t * @param {Object} node\r\n\t\t\t * @param {Object} action the action that caused the selection to change\r\n\t\t\t * @param {Array} selected the current selection\r\n\t\t\t * @param {Object} changed an object containing two properties `selected` and `deselected` - both arrays of node IDs, which were selected or deselected since the last changed event\r\n\t\t\t * @param {Object} event the event (if any) that triggered this changed event\r\n\t\t\t * @plugin changed\r\n\t\t\t */\r\n\t\t\tparent.trigger.call(this, ev, data);\r\n\t\t};\r\n\t\tthis.refresh = function (skip_loading, forget_state) {\r\n\t\t\tlast = [];\r\n\t\t\treturn parent.refresh.apply(this, arguments);\r\n\t\t};\r\n\t};\r\n\r\n\treturn $;\r\n});\ndefine('skylark-widgets-hierarchy/addons/checkbox',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"../Hierarchy\"\r\n],function(langx,browser,eventer,noder,geom,$,jstree){\r\n\t\"use strict\";\r\n\r\n\tif($.jstree.plugins.checkbox) { return; }\r\n\r\n\tvar _i = document.createElement('I');\r\n\t_i.className = 'jstree-icon jstree-checkbox';\r\n\t_i.setAttribute('role', 'presentation');\r\n\t/**\r\n\t * stores all defaults for the checkbox plugin\r\n\t * @name $.jstree.defaults.checkbox\r\n\t * @plugin checkbox\r\n\t */\r\n\t$.jstree.defaults.checkbox = {\r\n\t\t/**\r\n\t\t * a boolean indicating if checkboxes should be visible (can be changed at a later time using `show_checkboxes()` and `hide_checkboxes`). Defaults to `true`.\r\n\t\t * @name $.jstree.defaults.checkbox.visible\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tvisible\t\t\t\t: true,\r\n\t\t/**\r\n\t\t * a boolean indicating if checkboxes should cascade down and have an undetermined state. Defaults to `true`.\r\n\t\t * @name $.jstree.defaults.checkbox.three_state\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthree_state\t\t\t: true,\r\n\t\t/**\r\n\t\t * a boolean indicating if clicking anywhere on the node should act as clicking on the checkbox. Defaults to `true`.\r\n\t\t * @name $.jstree.defaults.checkbox.whole_node\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\twhole_node\t\t\t: true,\r\n\t\t/**\r\n\t\t * a boolean indicating if the selected style of a node should be kept, or removed. Defaults to `true`.\r\n\t\t * @name $.jstree.defaults.checkbox.keep_selected_style\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tkeep_selected_style\t: true,\r\n\t\t/**\r\n\t\t * This setting controls how cascading and undetermined nodes are applied.\r\n\t\t * If 'up' is in the string - cascading up is enabled, if 'down' is in the string - cascading down is enabled, if 'undetermined' is in the string - undetermined nodes will be used.\r\n\t\t * If `three_state` is set to `true` this setting is automatically set to 'up+down+undetermined'. Defaults to ''.\r\n\t\t * @name $.jstree.defaults.checkbox.cascade\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tcascade\t\t\t\t: '',\r\n\t\t/**\r\n\t\t * This setting controls if checkbox are bound to the general tree selection or to an internal array maintained by the checkbox plugin. Defaults to `true`, only set to `false` if you know exactly what you are doing.\r\n\t\t * @name $.jstree.defaults.checkbox.tie_selection\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\ttie_selection\t\t: true,\r\n\r\n\t\t/**\r\n\t\t * This setting controls if cascading down affects disabled checkboxes\r\n\t\t * @name $.jstree.defaults.checkbox.cascade_to_disabled\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tcascade_to_disabled : true,\r\n\r\n\t\t/**\r\n\t\t * This setting controls if cascading down affects hidden checkboxes\r\n\t\t * @name $.jstree.defaults.checkbox.cascade_to_hidden\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tcascade_to_hidden : true\r\n\t};\r\n\t$.jstree.plugins.checkbox = function (options, parent) {\r\n\t\tthis.bind = function () {\r\n\t\t\tparent.bind.call(this);\r\n\t\t\tthis._data.checkbox.uto = false;\r\n\t\t\tthis._data.checkbox.selected = [];\r\n\t\t\tif(this.settings.checkbox.three_state) {\r\n\t\t\t\tthis.settings.checkbox.cascade = 'up+down+undetermined';\r\n\t\t\t}\r\n\t\t\tthis.element\r\n\t\t\t\t.on(\"init.jstree\", langx.proxy(function () {\r\n\t\t\t\t\t\tthis._data.checkbox.visible = this.settings.checkbox.visible;\r\n\t\t\t\t\t\tif(!this.settings.checkbox.keep_selected_style) {\r\n\t\t\t\t\t\t\tthis.element.addClass('jstree-checkbox-no-clicked');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(this.settings.checkbox.tie_selection) {\r\n\t\t\t\t\t\t\tthis.element.addClass('jstree-checkbox-selection');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"loading.jstree\", langx.proxy(function () {\r\n\t\t\t\t\t\tthis[ this._data.checkbox.visible ? 'show_checkboxes' : 'hide_checkboxes' ]();\r\n\t\t\t\t\t}, this));\r\n\t\t\tif(this.settings.checkbox.cascade.indexOf('undetermined') !== -1) {\r\n\t\t\t\tthis.element\r\n\t\t\t\t\t.on('changed.jstree uncheck_node.jstree check_node.jstree uncheck_all.jstree check_all.jstree move_node.jstree copy_node.jstree redraw.jstree open_node.jstree', langx.proxy(function () {\r\n\t\t\t\t\t\t\t// only if undetermined is in setting\r\n\t\t\t\t\t\t\tif(this._data.checkbox.uto) { clearTimeout(this._data.checkbox.uto); }\r\n\t\t\t\t\t\t\tthis._data.checkbox.uto = setTimeout(langx.proxy(this._undetermined, this), 50);\r\n\t\t\t\t\t\t}, this));\r\n\t\t\t}\r\n\t\t\tif(!this.settings.checkbox.tie_selection) {\r\n\t\t\t\tthis.element\r\n\t\t\t\t\t.on('model.jstree', langx.proxy(function (e, data) {\r\n\t\t\t\t\t\tvar m = this._model.data,\r\n\t\t\t\t\t\t\tp = m[data.parent],\r\n\t\t\t\t\t\t\tdpc = data.nodes,\r\n\t\t\t\t\t\t\ti, j;\r\n\t\t\t\t\t\tfor(i = 0, j = dpc.length; i < j; i++) {\r\n\t\t\t\t\t\t\tm[dpc[i]].state.checked = m[dpc[i]].state.checked || (m[dpc[i]].original && m[dpc[i]].original.state && m[dpc[i]].original.state.checked);\r\n\t\t\t\t\t\t\tif(m[dpc[i]].state.checked) {\r\n\t\t\t\t\t\t\t\tthis._data.checkbox.selected.push(dpc[i]);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this));\r\n\t\t\t}\r\n\t\t\tif(this.settings.checkbox.cascade.indexOf('up') !== -1 || this.settings.checkbox.cascade.indexOf('down') !== -1) {\r\n\t\t\t\tthis.element\r\n\t\t\t\t\t.on('model.jstree', langx.proxy(function (e, data) {\r\n\t\t\t\t\t\t\tvar m = this._model.data,\r\n\t\t\t\t\t\t\t\tp = m[data.parent],\r\n\t\t\t\t\t\t\t\tdpc = data.nodes,\r\n\t\t\t\t\t\t\t\tchd = [],\r\n\t\t\t\t\t\t\t\tc, i, j, k, l, tmp, s = this.settings.checkbox.cascade, t = this.settings.checkbox.tie_selection;\r\n\r\n\t\t\t\t\t\t\tif(s.indexOf('down') !== -1) {\r\n\t\t\t\t\t\t\t\t// apply down\r\n\t\t\t\t\t\t\t\tif(p.state[ t ? 'selected' : 'checked' ]) {\r\n\t\t\t\t\t\t\t\t\tfor(i = 0, j = dpc.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\t\tm[dpc[i]].state[ t ? 'selected' : 'checked' ] = true;\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected = this._data[ t ? 'core' : 'checkbox' ].selected.concat(dpc);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tfor(i = 0, j = dpc.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\t\tif(m[dpc[i]].state[ t ? 'selected' : 'checked' ]) {\r\n\t\t\t\t\t\t\t\t\t\t\tfor(k = 0, l = m[dpc[i]].children_d.length; k < l; k++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tm[m[dpc[i]].children_d[k]].state[ t ? 'selected' : 'checked' ] = true;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected = this._data[ t ? 'core' : 'checkbox' ].selected.concat(m[dpc[i]].children_d);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif(s.indexOf('up') !== -1) {\r\n\t\t\t\t\t\t\t\t// apply up\r\n\t\t\t\t\t\t\t\tfor(i = 0, j = p.children_d.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\tif(!m[p.children_d[i]].children.length) {\r\n\t\t\t\t\t\t\t\t\t\tchd.push(m[p.children_d[i]].parent);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tchd = $.vakata.array_unique(chd);\r\n\t\t\t\t\t\t\t\tfor(k = 0, l = chd.length; k < l; k++) {\r\n\t\t\t\t\t\t\t\t\tp = m[chd[k]];\r\n\t\t\t\t\t\t\t\t\twhile(p && p.id !== $.jstree.root) {\r\n\t\t\t\t\t\t\t\t\t\tc = 0;\r\n\t\t\t\t\t\t\t\t\t\tfor(i = 0, j = p.children.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\t\t\tc += m[p.children[i]].state[ t ? 'selected' : 'checked' ];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tif(c === j) {\r\n\t\t\t\t\t\t\t\t\t\t\tp.state[ t ? 'selected' : 'checked' ] = true;\r\n\t\t\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected.push(p.id);\r\n\t\t\t\t\t\t\t\t\t\t\ttmp = this.get_node(p, true);\r\n\t\t\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\r\n\t\t\t\t\t\t\t\t\t\t\t\ttmp.attr('aria-selected', true).children('.jstree-anchor').addClass( t ? 'jstree-clicked' : 'jstree-checked');\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tp = this.get_node(p.parent);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected = $.vakata.array_unique(this._data[ t ? 'core' : 'checkbox' ].selected);\r\n\t\t\t\t\t\t}, this))\r\n\t\t\t\t\t.on(this.settings.checkbox.tie_selection ? 'select_node.jstree' : 'check_node.jstree', langx.proxy(function (e, data) {\r\n\t\t\t\t\t\t\tvar self = this,\r\n\t\t\t\t\t\t\t\tobj = data.node,\r\n\t\t\t\t\t\t\t\tm = this._model.data,\r\n\t\t\t\t\t\t\t\tpar = this.get_node(obj.parent),\r\n\t\t\t\t\t\t\t\ti, j, c, tmp, s = this.settings.checkbox.cascade, t = this.settings.checkbox.tie_selection,\r\n\t\t\t\t\t\t\t\tsel = {}, cur = this._data[ t ? 'core' : 'checkbox' ].selected;\r\n\r\n\t\t\t\t\t\t\tfor (i = 0, j = cur.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\tsel[cur[i]] = true;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// apply down\r\n\t\t\t\t\t\t\tif(s.indexOf('down') !== -1) {\r\n\t\t\t\t\t\t\t\t//this._data[ t ? 'core' : 'checkbox' ].selected = $.vakata.array_unique(this._data[ t ? 'core' : 'checkbox' ].selected.concat(obj.children_d));\r\n\t\t\t\t\t\t\t\tvar selectedIds = this._cascade_new_checked_state(obj.id, true);\r\n\t\t\t\t\t\t\t\tvar temp = obj.children_d.concat(obj.id);\r\n\t\t\t\t\t\t\t\tfor (i = 0, j = temp.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\tif (selectedIds.indexOf(temp[i]) > -1) {\r\n\t\t\t\t\t\t\t\t\t\tsel[temp[i]] = true;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tdelete sel[temp[i]];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// apply up\r\n\t\t\t\t\t\t\tif(s.indexOf('up') !== -1) {\r\n\t\t\t\t\t\t\t\twhile(par && par.id !== $.jstree.root) {\r\n\t\t\t\t\t\t\t\t\tc = 0;\r\n\t\t\t\t\t\t\t\t\tfor(i = 0, j = par.children.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\t\tc += m[par.children[i]].state[ t ? 'selected' : 'checked' ];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tif(c === j) {\r\n\t\t\t\t\t\t\t\t\t\tpar.state[ t ? 'selected' : 'checked' ] = true;\r\n\t\t\t\t\t\t\t\t\t\tsel[par.id] = true;\r\n\t\t\t\t\t\t\t\t\t\t//this._data[ t ? 'core' : 'checkbox' ].selected.push(par.id);\r\n\t\t\t\t\t\t\t\t\t\ttmp = this.get_node(par, true);\r\n\t\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\r\n\t\t\t\t\t\t\t\t\t\t\ttmp.attr('aria-selected', true).children('.jstree-anchor').addClass(t ? 'jstree-clicked' : 'jstree-checked');\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tpar = this.get_node(par.parent);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tcur = [];\r\n\t\t\t\t\t\t\tfor (i in sel) {\r\n\t\t\t\t\t\t\t\tif (sel.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\t\tcur.push(i);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected = cur;\r\n\t\t\t\t\t\t}, this))\r\n\t\t\t\t\t.on(this.settings.checkbox.tie_selection ? 'deselect_all.jstree' : 'uncheck_all.jstree', langx.proxy(function (e, data) {\r\n\t\t\t\t\t\t\tvar obj = this.get_node($.jstree.root),\r\n\t\t\t\t\t\t\t\tm = this._model.data,\r\n\t\t\t\t\t\t\t\ti, j, tmp;\r\n\t\t\t\t\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\ttmp = m[obj.children_d[i]];\r\n\t\t\t\t\t\t\t\tif(tmp && tmp.original && tmp.original.state && tmp.original.state.undetermined) {\r\n\t\t\t\t\t\t\t\t\ttmp.original.state.undetermined = false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, this))\r\n\t\t\t\t\t.on(this.settings.checkbox.tie_selection ? 'deselect_node.jstree' : 'uncheck_node.jstree', langx.proxy(function (e, data) {\r\n\t\t\t\t\t\t\tvar self = this,\r\n\t\t\t\t\t\t\t\tobj = data.node,\r\n\t\t\t\t\t\t\t\tdom = this.get_node(obj, true),\r\n\t\t\t\t\t\t\t\ti, j, tmp, s = this.settings.checkbox.cascade, t = this.settings.checkbox.tie_selection,\r\n\t\t\t\t\t\t\t\tcur = this._data[ t ? 'core' : 'checkbox' ].selected, sel = {},\r\n\t\t\t\t\t\t\t\tstillSelectedIds = [],\r\n\t\t\t\t\t\t\t\tallIds = obj.children_d.concat(obj.id);\r\n\r\n\t\t\t\t\t\t\t// apply down\r\n\t\t\t\t\t\t\tif(s.indexOf('down') !== -1) {\r\n\t\t\t\t\t\t\t\tvar selectedIds = this._cascade_new_checked_state(obj.id, false);\r\n\r\n\t\t\t\t\t\t\t\tcur = cur.filter(function(id) {\r\n\t\t\t\t\t\t\t\t\treturn allIds.indexOf(id) === -1 || selectedIds.indexOf(id) > -1;\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// only apply up if cascade up is enabled and if this node is not selected\r\n\t\t\t\t\t\t\t// (if all child nodes are disabled and cascade_to_disabled === false then this node will till be selected).\r\n\t\t\t\t\t\t\tif(s.indexOf('up') !== -1 && cur.indexOf(obj.id) === -1) {\r\n\t\t\t\t\t\t\t\tfor(i = 0, j = obj.parents.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\ttmp = this._model.data[obj.parents[i]];\r\n\t\t\t\t\t\t\t\t\ttmp.state[ t ? 'selected' : 'checked' ] = false;\r\n\t\t\t\t\t\t\t\t\tif(tmp && tmp.original && tmp.original.state && tmp.original.state.undetermined) {\r\n\t\t\t\t\t\t\t\t\t\ttmp.original.state.undetermined = false;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\ttmp = this.get_node(obj.parents[i], true);\r\n\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\r\n\t\t\t\t\t\t\t\t\t\ttmp.attr('aria-selected', false).children('.jstree-anchor').removeClass(t ? 'jstree-clicked' : 'jstree-checked');\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tcur = cur.filter(function(id) {\r\n\t\t\t\t\t\t\t\t\treturn obj.parents.indexOf(id) === -1;\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected = cur;\r\n\t\t\t\t\t\t}, this));\r\n\t\t\t}\r\n\t\t\tif(this.settings.checkbox.cascade.indexOf('up') !== -1) {\r\n\t\t\t\tthis.element\r\n\t\t\t\t\t.on('delete_node.jstree', langx.proxy(function (e, data) {\r\n\t\t\t\t\t\t\t// apply up (whole handler)\r\n\t\t\t\t\t\t\tvar p = this.get_node(data.parent),\r\n\t\t\t\t\t\t\t\tm = this._model.data,\r\n\t\t\t\t\t\t\t\ti, j, c, tmp, t = this.settings.checkbox.tie_selection;\r\n\t\t\t\t\t\t\twhile(p && p.id !== $.jstree.root && !p.state[ t ? 'selected' : 'checked' ]) {\r\n\t\t\t\t\t\t\t\tc = 0;\r\n\t\t\t\t\t\t\t\tfor(i = 0, j = p.children.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\tc += m[p.children[i]].state[ t ? 'selected' : 'checked' ];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif(j > 0 && c === j) {\r\n\t\t\t\t\t\t\t\t\tp.state[ t ? 'selected' : 'checked' ] = true;\r\n\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected.push(p.id);\r\n\t\t\t\t\t\t\t\t\ttmp = this.get_node(p, true);\r\n\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\r\n\t\t\t\t\t\t\t\t\t\ttmp.attr('aria-selected', true).children('.jstree-anchor').addClass(t ? 'jstree-clicked' : 'jstree-checked');\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tp = this.get_node(p.parent);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, this))\r\n\t\t\t\t\t.on('move_node.jstree', langx.proxy(function (e, data) {\r\n\t\t\t\t\t\t\t// apply up (whole handler)\r\n\t\t\t\t\t\t\tvar is_multi = data.is_multi,\r\n\t\t\t\t\t\t\t\told_par = data.old_parent,\r\n\t\t\t\t\t\t\t\tnew_par = this.get_node(data.parent),\r\n\t\t\t\t\t\t\t\tm = this._model.data,\r\n\t\t\t\t\t\t\t\tp, c, i, j, tmp, t = this.settings.checkbox.tie_selection;\r\n\t\t\t\t\t\t\tif(!is_multi) {\r\n\t\t\t\t\t\t\t\tp = this.get_node(old_par);\r\n\t\t\t\t\t\t\t\twhile(p && p.id !== $.jstree.root && !p.state[ t ? 'selected' : 'checked' ]) {\r\n\t\t\t\t\t\t\t\t\tc = 0;\r\n\t\t\t\t\t\t\t\t\tfor(i = 0, j = p.children.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\t\tc += m[p.children[i]].state[ t ? 'selected' : 'checked' ];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tif(j > 0 && c === j) {\r\n\t\t\t\t\t\t\t\t\t\tp.state[ t ? 'selected' : 'checked' ] = true;\r\n\t\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected.push(p.id);\r\n\t\t\t\t\t\t\t\t\t\ttmp = this.get_node(p, true);\r\n\t\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\r\n\t\t\t\t\t\t\t\t\t\t\ttmp.attr('aria-selected', true).children('.jstree-anchor').addClass(t ? 'jstree-clicked' : 'jstree-checked');\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tp = this.get_node(p.parent);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tp = new_par;\r\n\t\t\t\t\t\t\twhile(p && p.id !== $.jstree.root) {\r\n\t\t\t\t\t\t\t\tc = 0;\r\n\t\t\t\t\t\t\t\tfor(i = 0, j = p.children.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\tc += m[p.children[i]].state[ t ? 'selected' : 'checked' ];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif(c === j) {\r\n\t\t\t\t\t\t\t\t\tif(!p.state[ t ? 'selected' : 'checked' ]) {\r\n\t\t\t\t\t\t\t\t\t\tp.state[ t ? 'selected' : 'checked' ] = true;\r\n\t\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected.push(p.id);\r\n\t\t\t\t\t\t\t\t\t\ttmp = this.get_node(p, true);\r\n\t\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\r\n\t\t\t\t\t\t\t\t\t\t\ttmp.attr('aria-selected', true).children('.jstree-anchor').addClass(t ? 'jstree-clicked' : 'jstree-checked');\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tif(p.state[ t ? 'selected' : 'checked' ]) {\r\n\t\t\t\t\t\t\t\t\t\tp.state[ t ? 'selected' : 'checked' ] = false;\r\n\t\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected = $.vakata.array_remove_item(this._data[ t ? 'core' : 'checkbox' ].selected, p.id);\r\n\t\t\t\t\t\t\t\t\t\ttmp = this.get_node(p, true);\r\n\t\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\r\n\t\t\t\t\t\t\t\t\t\t\ttmp.attr('aria-selected', false).children('.jstree-anchor').removeClass(t ? 'jstree-clicked' : 'jstree-checked');\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tp = this.get_node(p.parent);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, this));\r\n\t\t\t}\r\n\t\t};\r\n\t\t/**\r\n\t\t * get an array of all nodes whose state is \"undetermined\"\r\n\t\t * @name get_undetermined([full])\r\n\t\t * @param  {boolean} full: if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\r\n\t\t * @return {Array}\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.get_undetermined = function (full) {\r\n\t\t\tif (this.settings.checkbox.cascade.indexOf('undetermined') === -1) {\r\n\t\t\t\treturn [];\r\n\t\t\t}\r\n\t\t\tvar i, j, k, l, o = {}, m = this._model.data, t = this.settings.checkbox.tie_selection, s = this._data[ t ? 'core' : 'checkbox' ].selected, p = [], tt = this, r = [];\r\n\t\t\tfor(i = 0, j = s.length; i < j; i++) {\r\n\t\t\t\tif(m[s[i]] && m[s[i]].parents) {\r\n\t\t\t\t\tfor(k = 0, l = m[s[i]].parents.length; k < l; k++) {\r\n\t\t\t\t\t\tif(o[m[s[i]].parents[k]] !== undefined) {\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(m[s[i]].parents[k] !== $.jstree.root) {\r\n\t\t\t\t\t\t\to[m[s[i]].parents[k]] = true;\r\n\t\t\t\t\t\t\tp.push(m[s[i]].parents[k]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// attempt for server side undetermined state\r\n\t\t\tthis.element.find('.jstree-closed').not(':has(.jstree-children)')\r\n\t\t\t\t.each(function () {\r\n\t\t\t\t\tvar tmp = tt.get_node(this), tmp2;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(!tmp) { return; }\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(!tmp.state.loaded) {\r\n\t\t\t\t\t\tif(tmp.original && tmp.original.state && tmp.original.state.undetermined && tmp.original.state.undetermined === true) {\r\n\t\t\t\t\t\t\tif(o[tmp.id] === undefined && tmp.id !== $.jstree.root) {\r\n\t\t\t\t\t\t\t\to[tmp.id] = true;\r\n\t\t\t\t\t\t\t\tp.push(tmp.id);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tfor(k = 0, l = tmp.parents.length; k < l; k++) {\r\n\t\t\t\t\t\t\t\tif(o[tmp.parents[k]] === undefined && tmp.parents[k] !== $.jstree.root) {\r\n\t\t\t\t\t\t\t\t\to[tmp.parents[k]] = true;\r\n\t\t\t\t\t\t\t\t\tp.push(tmp.parents[k]);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tfor(i = 0, j = tmp.children_d.length; i < j; i++) {\r\n\t\t\t\t\t\t\ttmp2 = m[tmp.children_d[i]];\r\n\t\t\t\t\t\t\tif(!tmp2.state.loaded && tmp2.original && tmp2.original.state && tmp2.original.state.undetermined && tmp2.original.state.undetermined === true) {\r\n\t\t\t\t\t\t\t\tif(o[tmp2.id] === undefined && tmp2.id !== $.jstree.root) {\r\n\t\t\t\t\t\t\t\t\to[tmp2.id] = true;\r\n\t\t\t\t\t\t\t\t\tp.push(tmp2.id);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tfor(k = 0, l = tmp2.parents.length; k < l; k++) {\r\n\t\t\t\t\t\t\t\t\tif(o[tmp2.parents[k]] === undefined && tmp2.parents[k] !== $.jstree.root) {\r\n\t\t\t\t\t\t\t\t\t\to[tmp2.parents[k]] = true;\r\n\t\t\t\t\t\t\t\t\t\tp.push(tmp2.parents[k]);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\tfor (i = 0, j = p.length; i < j; i++) {\r\n\t\t\t\tif(!m[p[i]].state[ t ? 'selected' : 'checked' ]) {\r\n\t\t\t\t\tr.push(full ? m[p[i]] : p[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn r;\r\n\t\t};\r\n\t\t/**\r\n\t\t * set the undetermined state where and if necessary. Used internally.\r\n\t\t * @private\r\n\t\t * @name _undetermined()\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis._undetermined = function () {\r\n\t\t\tif(this.element === null) { return; }\r\n\t\t\tvar p = this.get_undetermined(false), i, j, s;\r\n\r\n\t\t\tthis.element.find('.jstree-undetermined').removeClass('jstree-undetermined');\r\n\t\t\tfor (i = 0, j = p.length; i < j; i++) {\r\n\t\t\t\ts = this.get_node(p[i], true);\r\n\t\t\t\tif(s && s.length) {\r\n\t\t\t\t\ts.children('.jstree-anchor').children('.jstree-checkbox').addClass('jstree-undetermined');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tthis.redraw_node = function(obj, deep, is_callback, force_render) {\r\n\t\t\tobj = parent.redraw_node.apply(this, arguments);\r\n\t\t\tif(obj) {\r\n\t\t\t\tvar i, j, tmp = null, icon = null;\r\n\t\t\t\tfor(i = 0, j = obj.childNodes.length; i < j; i++) {\r\n\t\t\t\t\tif(obj.childNodes[i] && obj.childNodes[i].className && obj.childNodes[i].className.indexOf(\"jstree-anchor\") !== -1) {\r\n\t\t\t\t\t\ttmp = obj.childNodes[i];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(tmp) {\r\n\t\t\t\t\tif(!this.settings.checkbox.tie_selection && this._model.data[obj.id].state.checked) { tmp.className += ' jstree-checked'; }\r\n\t\t\t\t\ticon = _i.cloneNode(false);\r\n\t\t\t\t\tif(this._model.data[obj.id].state.checkbox_disabled) { icon.className += ' jstree-checkbox-disabled'; }\r\n\t\t\t\t\ttmp.insertBefore(icon, tmp.childNodes[0]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(!is_callback && this.settings.checkbox.cascade.indexOf('undetermined') !== -1) {\r\n\t\t\t\tif(this._data.checkbox.uto) { clearTimeout(this._data.checkbox.uto); }\r\n\t\t\t\tthis._data.checkbox.uto = setTimeout(langx.proxy(this._undetermined, this), 50);\r\n\t\t\t}\r\n\t\t\treturn obj;\r\n\t\t};\r\n\t\t/**\r\n\t\t * show the node checkbox icons\r\n\t\t * @name show_checkboxes()\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.show_checkboxes = function () { this._data.core.themes.checkboxes = true; this.get_container_ul().removeClass(\"jstree-no-checkboxes\"); };\r\n\t\t/**\r\n\t\t * hide the node checkbox icons\r\n\t\t * @name hide_checkboxes()\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.hide_checkboxes = function () { this._data.core.themes.checkboxes = false; this.get_container_ul().addClass(\"jstree-no-checkboxes\"); };\r\n\t\t/**\r\n\t\t * toggle the node icons\r\n\t\t * @name toggle_checkboxes()\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.toggle_checkboxes = function () { if(this._data.core.themes.checkboxes) { this.hide_checkboxes(); } else { this.show_checkboxes(); } };\r\n\t\t/**\r\n\t\t * checks if a node is in an undetermined state\r\n\t\t * @name is_undetermined(obj)\r\n\t\t * @param  {mixed} obj\r\n\t\t * @return {Boolean}\r\n\t\t */\r\n\t\tthis.is_undetermined = function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tvar s = this.settings.checkbox.cascade, i, j, t = this.settings.checkbox.tie_selection, d = this._data[ t ? 'core' : 'checkbox' ].selected, m = this._model.data;\r\n\t\t\tif(!obj || obj.state[ t ? 'selected' : 'checked' ] === true || s.indexOf('undetermined') === -1 || (s.indexOf('down') === -1 && s.indexOf('up') === -1)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(!obj.state.loaded && obj.original.state.undetermined === true) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\r\n\t\t\t\tif(langx.inArray(obj.children_d[i], d) !== -1 || (!m[obj.children_d[i]].state.loaded && m[obj.children_d[i]].original.state.undetermined)) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\t\t/**\r\n\t\t * disable a node's checkbox\r\n\t\t * @name disable_checkbox(obj)\r\n\t\t * @param {mixed} obj an array can be used too\r\n\t\t * @trigger disable_checkbox.jstree\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.disable_checkbox = function (obj) {\r\n\t\t\tvar t1, t2, dom;\r\n\t\t\tif(langx.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.disable_checkbox(obj[t1]);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tdom = this.get_node(obj, true);\r\n\t\t\tif(!obj.state.checkbox_disabled) {\r\n\t\t\t\tobj.state.checkbox_disabled = true;\r\n\t\t\t\tif(dom && dom.length) {\r\n\t\t\t\t\tdom.children('.jstree-anchor').children('.jstree-checkbox').addClass('jstree-checkbox-disabled');\r\n\t\t\t\t}\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when an node's checkbox is disabled\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name disable_checkbox.jstree\r\n\t\t\t\t * @param {Object} node\r\n\t\t\t\t * @plugin checkbox\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('disable_checkbox', { 'node' : obj });\r\n\t\t\t}\r\n\t\t};\r\n\t\t/**\r\n\t\t * enable a node's checkbox\r\n\t\t * @name disable_checkbox(obj)\r\n\t\t * @param {mixed} obj an array can be used too\r\n\t\t * @trigger enable_checkbox.jstree\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.enable_checkbox = function (obj) {\r\n\t\t\tvar t1, t2, dom;\r\n\t\t\tif(langx.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.enable_checkbox(obj[t1]);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tdom = this.get_node(obj, true);\r\n\t\t\tif(obj.state.checkbox_disabled) {\r\n\t\t\t\tobj.state.checkbox_disabled = false;\r\n\t\t\t\tif(dom && dom.length) {\r\n\t\t\t\t\tdom.children('.jstree-anchor').children('.jstree-checkbox').removeClass('jstree-checkbox-disabled');\r\n\t\t\t\t}\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when an node's checkbox is enabled\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name enable_checkbox.jstree\r\n\t\t\t\t * @param {Object} node\r\n\t\t\t\t * @plugin checkbox\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('enable_checkbox', { 'node' : obj });\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.activate_node = function (obj, e) {\r\n\t\t\tif($(e.target).hasClass('jstree-checkbox-disabled')) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(this.settings.checkbox.tie_selection && (this.settings.checkbox.whole_node || $(e.target).hasClass('jstree-checkbox'))) {\r\n\t\t\t\te.ctrlKey = true;\r\n\t\t\t}\r\n\t\t\tif(this.settings.checkbox.tie_selection || (!this.settings.checkbox.whole_node && !$(e.target).hasClass('jstree-checkbox'))) {\r\n\t\t\t\treturn parent.activate_node.call(this, obj, e);\r\n\t\t\t}\r\n\t\t\tif(this.is_disabled(obj)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(this.is_checked(obj)) {\r\n\t\t\t\tthis.uncheck_node(obj, e);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.check_node(obj, e);\r\n\t\t\t}\r\n\t\t\tthis.trigger('activate_node', { 'node' : this.get_node(obj) });\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Cascades checked state to a node and all its descendants. This function does NOT affect hidden and disabled nodes (or their descendants).\r\n\t\t * However if these unaffected nodes are already selected their ids will be included in the returned array.\r\n\t\t * @private\r\n\t\t * @param {string} id the node ID\r\n\t\t * @param {bool} checkedState should the nodes be checked or not\r\n\t\t * @returns {Array} Array of all node id's (in this tree branch) that are checked.\r\n\t\t */\r\n\t\tthis._cascade_new_checked_state = function (id, checkedState) {\r\n\t\t\tvar self = this;\r\n\t\t\tvar t = this.settings.checkbox.tie_selection;\r\n\t\t\tvar node = this._model.data[id];\r\n\t\t\tvar selectedNodeIds = [];\r\n\t\t\tvar selectedChildrenIds = [], i, j, selectedChildIds;\r\n\r\n\t\t\tif (\r\n\t\t\t\t(this.settings.checkbox.cascade_to_disabled || !node.state.disabled) &&\r\n\t\t\t\t(this.settings.checkbox.cascade_to_hidden || !node.state.hidden)\r\n\t\t\t) {\r\n\t\t\t\t//First try and check/uncheck the children\r\n\t\t\t\tif (node.children) {\r\n\t\t\t\t\tfor (i = 0, j = node.children.length; i < j; i++) {\r\n\t\t\t\t\t\tvar childId = node.children[i];\r\n\t\t\t\t\t\tselectedChildIds = self._cascade_new_checked_state(childId, checkedState);\r\n\t\t\t\t\t\tselectedNodeIds = selectedNodeIds.concat(selectedChildIds);\r\n\t\t\t\t\t\tif (selectedChildIds.indexOf(childId) > -1) {\r\n\t\t\t\t\t\t\tselectedChildrenIds.push(childId);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar dom = self.get_node(node, true);\r\n\r\n\t\t\t\t//A node's state is undetermined if some but not all of it's children are checked/selected .\r\n\t\t\t\tvar undetermined = selectedChildrenIds.length > 0 && selectedChildrenIds.length < node.children.length;\r\n\r\n\t\t\t\tif(node.original && node.original.state && node.original.state.undetermined) {\r\n\t\t\t\t\tnode.original.state.undetermined = undetermined;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//If a node is undetermined then remove selected class\r\n\t\t\t\tif (undetermined) {\r\n\t\t\t\t\tnode.state[ t ? 'selected' : 'checked' ] = false;\r\n\t\t\t\t\tdom.attr('aria-selected', false).children('.jstree-anchor').removeClass(t ? 'jstree-clicked' : 'jstree-checked');\r\n\t\t\t\t}\r\n\t\t\t\t//Otherwise, if the checkedState === true (i.e. the node is being checked now) and all of the node's children are checked (if it has any children),\r\n\t\t\t\t//check the node and style it correctly.\r\n\t\t\t\telse if (checkedState && selectedChildrenIds.length === node.children.length) {\r\n\t\t\t\t\tnode.state[ t ? 'selected' : 'checked' ] = checkedState;\r\n\t\t\t\t\tselectedNodeIds.push(node.id);\r\n\r\n\t\t\t\t\tdom.attr('aria-selected', true).children('.jstree-anchor').addClass(t ? 'jstree-clicked' : 'jstree-checked');\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tnode.state[ t ? 'selected' : 'checked' ] = false;\r\n\t\t\t\t\tdom.attr('aria-selected', false).children('.jstree-anchor').removeClass(t ? 'jstree-clicked' : 'jstree-checked');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tselectedChildIds = this.get_checked_descendants(id);\r\n\r\n\t\t\t\tif (node.state[ t ? 'selected' : 'checked' ]) {\r\n\t\t\t\t\tselectedChildIds.push(node.id);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tselectedNodeIds = selectedNodeIds.concat(selectedChildIds);\r\n\t\t\t}\r\n\r\n\t\t\treturn selectedNodeIds;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Gets ids of nodes selected in branch (of tree) specified by id (does not include the node specified by id)\r\n\t\t * @name get_checked_descendants(obj)\r\n\t\t * @param {string} id the node ID\r\n\t\t * @return {Array} array of IDs\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.get_checked_descendants = function (id) {\r\n\t\t\tvar self = this;\r\n\t\t\tvar t = self.settings.checkbox.tie_selection;\r\n\t\t\tvar node = self._model.data[id];\r\n\r\n\t\t\treturn node.children_d.filter(function(_id) {\r\n\t\t\t\treturn self._model.data[_id].state[ t ? 'selected' : 'checked' ];\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * check a node (only if tie_selection in checkbox settings is false, otherwise select_node will be called internally)\r\n\t\t * @name check_node(obj)\r\n\t\t * @param {mixed} obj an array can be used to check multiple nodes\r\n\t\t * @trigger check_node.jstree\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.check_node = function (obj, e) {\r\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.select_node(obj, false, true, e); }\r\n\t\t\tvar dom, t1, t2, th;\r\n\t\t\tif(langx.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.check_node(obj[t1], e);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tdom = this.get_node(obj, true);\r\n\t\t\tif(!obj.state.checked) {\r\n\t\t\t\tobj.state.checked = true;\r\n\t\t\t\tthis._data.checkbox.selected.push(obj.id);\r\n\t\t\t\tif(dom && dom.length) {\r\n\t\t\t\t\tdom.children('.jstree-anchor').addClass('jstree-checked');\r\n\t\t\t\t}\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when an node is checked (only if tie_selection in checkbox settings is false)\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name check_node.jstree\r\n\t\t\t\t * @param {Object} node\r\n\t\t\t\t * @param {Array} selected the current selection\r\n\t\t\t\t * @param {Object} event the event (if any) that triggered this check_node\r\n\t\t\t\t * @plugin checkbox\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('check_node', { 'node' : obj, 'selected' : this._data.checkbox.selected, 'event' : e });\r\n\t\t\t}\r\n\t\t};\r\n\t\t/**\r\n\t\t * uncheck a node (only if tie_selection in checkbox settings is false, otherwise deselect_node will be called internally)\r\n\t\t * @name uncheck_node(obj)\r\n\t\t * @param {mixed} obj an array can be used to uncheck multiple nodes\r\n\t\t * @trigger uncheck_node.jstree\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.uncheck_node = function (obj, e) {\r\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.deselect_node(obj, false, e); }\r\n\t\t\tvar t1, t2, dom;\r\n\t\t\tif(langx.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.uncheck_node(obj[t1], e);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tdom = this.get_node(obj, true);\r\n\t\t\tif(obj.state.checked) {\r\n\t\t\t\tobj.state.checked = false;\r\n\t\t\t\tthis._data.checkbox.selected = $.vakata.array_remove_item(this._data.checkbox.selected, obj.id);\r\n\t\t\t\tif(dom.length) {\r\n\t\t\t\t\tdom.children('.jstree-anchor').removeClass('jstree-checked');\r\n\t\t\t\t}\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when an node is unchecked (only if tie_selection in checkbox settings is false)\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name uncheck_node.jstree\r\n\t\t\t\t * @param {Object} node\r\n\t\t\t\t * @param {Array} selected the current selection\r\n\t\t\t\t * @param {Object} event the event (if any) that triggered this uncheck_node\r\n\t\t\t\t * @plugin checkbox\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('uncheck_node', { 'node' : obj, 'selected' : this._data.checkbox.selected, 'event' : e });\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t/**\r\n\t\t * checks all nodes in the tree (only if tie_selection in checkbox settings is false, otherwise select_all will be called internally)\r\n\t\t * @name check_all()\r\n\t\t * @trigger check_all.jstree, changed.jstree\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.check_all = function () {\r\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.select_all(); }\r\n\t\t\tvar tmp = this._data.checkbox.selected.concat([]), i, j;\r\n\t\t\tthis._data.checkbox.selected = this._model.data[$.jstree.root].children_d.concat();\r\n\t\t\tfor(i = 0, j = this._data.checkbox.selected.length; i < j; i++) {\r\n\t\t\t\tif(this._model.data[this._data.checkbox.selected[i]]) {\r\n\t\t\t\t\tthis._model.data[this._data.checkbox.selected[i]].state.checked = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.redraw(true);\r\n\t\t\t/**\r\n\t\t\t * triggered when all nodes are checked (only if tie_selection in checkbox settings is false)\r\n\t\t\t * @event\r\n\t\t\t * @name check_all.jstree\r\n\t\t\t * @param {Array} selected the current selection\r\n\t\t\t * @plugin checkbox\r\n\t\t\t */\r\n\t\t\tthis.trigger('check_all', { 'selected' : this._data.checkbox.selected });\r\n\t\t};\r\n\t\t/**\r\n\t\t * uncheck all checked nodes (only if tie_selection in checkbox settings is false, otherwise deselect_all will be called internally)\r\n\t\t * @name uncheck_all()\r\n\t\t * @trigger uncheck_all.jstree\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.uncheck_all = function () {\r\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.deselect_all(); }\r\n\t\t\tvar tmp = this._data.checkbox.selected.concat([]), i, j;\r\n\t\t\tfor(i = 0, j = this._data.checkbox.selected.length; i < j; i++) {\r\n\t\t\t\tif(this._model.data[this._data.checkbox.selected[i]]) {\r\n\t\t\t\t\tthis._model.data[this._data.checkbox.selected[i]].state.checked = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._data.checkbox.selected = [];\r\n\t\t\tthis.element.find('.jstree-checked').removeClass('jstree-checked');\r\n\t\t\t/**\r\n\t\t\t * triggered when all nodes are unchecked (only if tie_selection in checkbox settings is false)\r\n\t\t\t * @event\r\n\t\t\t * @name uncheck_all.jstree\r\n\t\t\t * @param {Object} node the previous selection\r\n\t\t\t * @param {Array} selected the current selection\r\n\t\t\t * @plugin checkbox\r\n\t\t\t */\r\n\t\t\tthis.trigger('uncheck_all', { 'selected' : this._data.checkbox.selected, 'node' : tmp });\r\n\t\t};\r\n\t\t/**\r\n\t\t * checks if a node is checked (if tie_selection is on in the settings this function will return the same as is_selected)\r\n\t\t * @name is_checked(obj)\r\n\t\t * @param  {mixed}  obj\r\n\t\t * @return {Boolean}\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.is_checked = function (obj) {\r\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.is_selected(obj); }\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\r\n\t\t\treturn obj.state.checked;\r\n\t\t};\r\n\t\t/**\r\n\t\t * get an array of all checked nodes (if tie_selection is on in the settings this function will return the same as get_selected)\r\n\t\t * @name get_checked([full])\r\n\t\t * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\r\n\t\t * @return {Array}\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.get_checked = function (full) {\r\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.get_selected(full); }\r\n\t\t\treturn full ? langx.map(this._data.checkbox.selected, langx.proxy(function (i) { return this.get_node(i); }, this)) : this._data.checkbox.selected;\r\n\t\t};\r\n\t\t/**\r\n\t\t * get an array of all top level checked nodes (ignoring children of checked nodes) (if tie_selection is on in the settings this function will return the same as get_top_selected)\r\n\t\t * @name get_top_checked([full])\r\n\t\t * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\r\n\t\t * @return {Array}\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.get_top_checked = function (full) {\r\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.get_top_selected(full); }\r\n\t\t\tvar tmp = this.get_checked(true),\r\n\t\t\t\tobj = {}, i, j, k, l;\r\n\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\r\n\t\t\t\tobj[tmp[i].id] = tmp[i];\r\n\t\t\t}\r\n\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\r\n\t\t\t\tfor(k = 0, l = tmp[i].children_d.length; k < l; k++) {\r\n\t\t\t\t\tif(obj[tmp[i].children_d[k]]) {\r\n\t\t\t\t\t\tdelete obj[tmp[i].children_d[k]];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ttmp = [];\r\n\t\t\tfor(i in obj) {\r\n\t\t\t\tif(obj.hasOwnProperty(i)) {\r\n\t\t\t\t\ttmp.push(i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn full ? langx.map(tmp, langx.proxy(function (i) { return this.get_node(i); }, this)) : tmp;\r\n\t\t};\r\n\t\t/**\r\n\t\t * get an array of all bottom level checked nodes (ignoring selected parents) (if tie_selection is on in the settings this function will return the same as get_bottom_selected)\r\n\t\t * @name get_bottom_checked([full])\r\n\t\t * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\r\n\t\t * @return {Array}\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.get_bottom_checked = function (full) {\r\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.get_bottom_selected(full); }\r\n\t\t\tvar tmp = this.get_checked(true),\r\n\t\t\t\tobj = [], i, j;\r\n\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\r\n\t\t\t\tif(!tmp[i].children.length) {\r\n\t\t\t\t\tobj.push(tmp[i].id);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn full ? langx.map(obj, langx.proxy(function (i) { return this.get_node(i); }, this)) : obj;\r\n\t\t};\r\n\t\tthis.load_node = function (obj, callback) {\r\n\t\t\tvar k, l, i, j, c, tmp;\r\n\t\t\tif(!langx.isArray(obj) && !this.settings.checkbox.tie_selection) {\r\n\t\t\t\ttmp = this.get_node(obj);\r\n\t\t\t\tif(tmp && tmp.state.loaded) {\r\n\t\t\t\t\tfor(k = 0, l = tmp.children_d.length; k < l; k++) {\r\n\t\t\t\t\t\tif(this._model.data[tmp.children_d[k]].state.checked) {\r\n\t\t\t\t\t\t\tc = true;\r\n\t\t\t\t\t\t\tthis._data.checkbox.selected = $.vakata.array_remove_item(this._data.checkbox.selected, tmp.children_d[k]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn parent.load_node.apply(this, arguments);\r\n\t\t};\r\n\t\tthis.get_state = function () {\r\n\t\t\tvar state = parent.get_state.apply(this, arguments);\r\n\t\t\tif(this.settings.checkbox.tie_selection) { return state; }\r\n\t\t\tstate.checkbox = this._data.checkbox.selected.slice();\r\n\t\t\treturn state;\r\n\t\t};\r\n\t\tthis.set_state = function (state, callback) {\r\n\t\t\tvar res = parent.set_state.apply(this, arguments);\r\n\t\t\tif(res && state.checkbox) {\r\n\t\t\t\tif(!this.settings.checkbox.tie_selection) {\r\n\t\t\t\t\tthis.uncheck_all();\r\n\t\t\t\t\tvar _this = this;\r\n\t\t\t\t\tlangx.each(state.checkbox, function (i, v) {\r\n\t\t\t\t\t\t_this.check_node(v);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tdelete state.checkbox;\r\n\t\t\t\tthis.set_state(state, callback);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn res;\r\n\t\t};\r\n\t\tthis.refresh = function (skip_loading, forget_state) {\r\n\t\t\tif(!this.settings.checkbox.tie_selection) {\r\n\t\t\t\tthis._data.checkbox.selected = [];\r\n\t\t\t}\r\n\t\t\treturn parent.refresh.apply(this, arguments);\r\n\t\t};\r\n\t};\r\n\r\n\t// include the checkbox plugin by default\r\n\t// $.jstree.defaults.plugins.push(\"checkbox\");\r\n\r\n\treturn $;\r\n});\r\n\ndefine('skylark-widgets-hierarchy/addons/conditionalselect',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"../Hierarchy\"\r\n],function(langx,browser,eventer,noder,geom,$,jstree){\r\n\t\"use strict\";\r\n\r\n\tif($.jstree.plugins.conditionalselect) { return; }\r\n\r\n\t/**\r\n\t * a callback (function) which is invoked in the instance's scope and receives two arguments - the node and the event that triggered the `activate_node` call. Returning false prevents working with the node, returning true allows invoking activate_node. Defaults to returning `true`.\r\n\t * @name $.jstree.defaults.checkbox.visible\r\n\t * @plugin checkbox\r\n\t */\r\n\t$.jstree.defaults.conditionalselect = function () { return true; };\r\n\t$.jstree.plugins.conditionalselect = function (options, parent) {\r\n\t\t// own function\r\n\t\tthis.activate_node = function (obj, e) {\r\n\t\t\tif(this.settings.conditionalselect.call(this, this.get_node(obj), e)) {\r\n\t\t\t\treturn parent.activate_node.call(this, obj, e);\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\treturn $;\r\n});\ndefine('skylark-widgets-hierarchy/addons/menu',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\"\r\n],function(langx,browser,eventer,noder,geom,$){\r\n\r\n\tvar popup = null;\r\n\tvar right_to_left ;\r\n\r\n\tvar Menu = langx.Evented.inherit({\r\n        klassName: \"Menu\",\r\n\r\n        init : function(elm,options) {\r\n        \tif (!options) {\r\n        \t\toptions = elm;\r\n        \t\telm = null;\r\n        \t}\r\n\t\t\tvar self = this,$el;\r\n\r\n\t\t\tthis._options = langx.mixin({\r\n\t\t\t\t\thide_onmouseleave\t: 0,\r\n\t\t\t\t\ticons\t\t\t\t: true\r\n\r\n\t\t\t},options);\r\n\r\n\t\t\tif (!elm) {\r\n\t\t\t\t$el = this.$el = $(\"<ul class='vakata-context'></ul>\");\r\n\t\t\t} else {\r\n\t\t\t\t$el = this.$el = $(elm);\r\n\t\t\t}\r\n\r\n\t\t\tvar to = false;\r\n\t\t\t$el.on(\"mouseenter\", \"li\", function (e) {\r\n\t\t\t\t\te.stopImmediatePropagation();\r\n\r\n\t\t\t\t\tif(noder.contains(this, e.relatedTarget)) {\r\n\t\t\t\t\t\t// премахнато заради delegate mouseleave по-долу\r\n\t\t\t\t\t\t// $(this).find(\".vakata-context-hover\").removeClass(\"vakata-context-hover\");\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(to) { clearTimeout(to); }\r\n\t\t\t\t\t$el.find(\".vakata-context-hover\").removeClass(\"vakata-context-hover\").end();\r\n\r\n\t\t\t\t\t$(this)\r\n\t\t\t\t\t\t.siblings().find(\"ul\").hide().end().end()\r\n\t\t\t\t\t\t.parentsUntil(\".vakata-context\", \"li\").addBack().addClass(\"vakata-context-hover\");\r\n\t\t\t\t\tself._show_submenu(this);\r\n\t\t\t\t})\r\n\t\t\t\t// тестово - дали не натоварва?\r\n\t\t\t\t.on(\"mouseleave\", \"li\", function (e) {\r\n\t\t\t\t\tif(noder.contains(this, e.relatedTarget)) { return; }\r\n\t\t\t\t\t$(this).find(\".vakata-context-hover\").addBack().removeClass(\"vakata-context-hover\");\r\n\t\t\t\t})\r\n\t\t\t\t.on(\"mouseleave\", function (e) {\r\n\t\t\t\t\t$(this).find(\".vakata-context-hover\").removeClass(\"vakata-context-hover\");\r\n\t\t\t\t\tif(self._options.hide_onmouseleave) {\r\n\t\t\t\t\t\tto = setTimeout(\r\n\t\t\t\t\t\t\t(function (t) {\r\n\t\t\t\t\t\t\t\treturn function () { self.hide(); };\r\n\t\t\t\t\t\t\t}(this)), self._options.hide_onmouseleave);\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.on(\"click\", \"a\", function (e) {\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t//})\r\n\t\t\t\t//.on(\"mouseup\", \"a\", function (e) {\r\n\t\t\t\t\tif(!$(this).blur().parent().hasClass(\"vakata-context-disabled\") && self._execute($(this).attr(\"rel\")) !== false) {\r\n\t\t\t\t\t\tself.hide();\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.on('keydown', 'a', function (e) {\r\n\t\t\t\t\t\tvar o = null;\r\n\t\t\t\t\t\tswitch(e.which) {\r\n\t\t\t\t\t\t\tcase 13:\r\n\t\t\t\t\t\t\tcase 32:\r\n\t\t\t\t\t\t\t\te.type = \"click\";\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\t$(e.currentTarget).trigger(e);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 37:\r\n\t\t\t\t\t\t\t\tself.$el.find(\".vakata-context-hover\").last().closest(\"li\").first().find(\"ul\").hide().find(\".vakata-context-hover\").removeClass(\"vakata-context-hover\").end().end().children('a').focus();\r\n\t\t\t\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 38:\r\n\t\t\t\t\t\t\t\to = self.$el.find(\"ul:visible\").addBack().last().children(\".vakata-context-hover\").removeClass(\"vakata-context-hover\").prevAll(\"li:not(.vakata-context-separator)\").first();\r\n\t\t\t\t\t\t\t\tif(!o.length) { o = self.$el.find(\"ul:visible\").addBack().last().children(\"li:not(.vakata-context-separator)\").last(); }\r\n\t\t\t\t\t\t\t\to.addClass(\"vakata-context-hover\").children('a').focus();\r\n\t\t\t\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 39:\r\n\t\t\t\t\t\t\t\tself.$el.find(\".vakata-context-hover\").last().children(\"ul\").show().children(\"li:not(.vakata-context-separator)\").removeClass(\"vakata-context-hover\").first().addClass(\"vakata-context-hover\").children('a').focus();\r\n\t\t\t\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 40:\r\n\t\t\t\t\t\t\t\to = self.$el.find(\"ul:visible\").addBack().last().children(\".vakata-context-hover\").removeClass(\"vakata-context-hover\").nextAll(\"li:not(.vakata-context-separator)\").first();\r\n\t\t\t\t\t\t\t\tif(!o.length) { o = self.$el.find(\"ul:visible\").addBack().last().children(\"li:not(.vakata-context-separator)\").first(); }\r\n\t\t\t\t\t\t\t\to.addClass(\"vakata-context-hover\").children('a').focus();\r\n\t\t\t\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 27:\r\n\t\t\t\t\t\t\t\tself.hide();\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t//console.log(e.which);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t.on('keydown', function (e) {\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\tvar a = self.$el.find('.vakata-contextmenu-shortcut-' + e.which).parent();\r\n\t\t\t\t\tif(a.parent().not('.vakata-context-disabled')) {\r\n\t\t\t\t\t\ta.click();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\tthis.render();\r\n        },\r\n\r\n        render : function() {\r\n        \tvar items = this._options.items;\r\n\t\t\tif(this._parse(items)) {\r\n\t\t\t\tthis.$el.html(this.html);\r\n\t\t\t}\r\n\t\t\tthis.$el.width('');\r\n        },\r\n\r\n\t\t_trigger : function (event_name) {\r\n\t\t\t$(document).trigger(\"context_\" + event_name + \".sbswt\", {\r\n\t\t\t\t\"reference\"\t: this.reference,\r\n\t\t\t\t\"element\"\t: this.$el,\r\n\t\t\t\t\"position\"\t: {\r\n\t\t\t\t\t\"x\" : this.position_x,\r\n\t\t\t\t\t\"y\" : this.position_y\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},        \r\n\r\n\t\t_execute : function (i) {\r\n\t\t\ti = this.items[i];\r\n\t\t\treturn i && (!i._disabled || (langx.isFunction(i._disabled) && !i._disabled({ \"item\" : i, \"reference\" : this.reference, \"element\" : this.$el }))) && i.action ? i.action.call(null, {\r\n\t\t\t\t\t\t\"item\"\t\t: i,\r\n\t\t\t\t\t\t\"reference\"\t: this.reference,\r\n\t\t\t\t\t\t\"element\"\t: this.$el,\r\n\t\t\t\t\t\t\"position\"\t: {\r\n\t\t\t\t\t\t\t\"x\" : this.position_x,\r\n\t\t\t\t\t\t\t\"y\" : this.position_y\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}) : false;\r\n\t\t},\r\n\t\t_parse : function (o, is_callback) {\r\n\t\t\tvar self = this,\r\n\t\t\t\treference = self._options.reference;\r\n\r\n\t\t\tif(!o) { return false; }\r\n\t\t\tif(!is_callback) {\r\n\t\t\t\tself.html\t\t= \"\";\r\n\t\t\t\tself.items\t= [];\r\n\t\t\t}\r\n\t\t\tvar str = \"\",\r\n\t\t\t\tsep = false,\r\n\t\t\t\ttmp;\r\n\r\n\t\t\tif(is_callback) { str += \"<\"+\"ul>\"; }\r\n\t\t\tlangx.each(o, function (i, val) {\r\n\t\t\t\tif(!val) { return true; }\r\n\t\t\t\tself.items.push(val);\r\n\t\t\t\tif(!sep && val.separator_before) {\r\n\t\t\t\t\tstr += \"<\"+\"li class='vakata-context-separator'><\"+\"a href='#' \" + (self._options.icons ? '' : 'style=\"margin-left:0px;\"') + \">&#160;<\"+\"/a><\"+\"/li>\";\r\n\t\t\t\t}\r\n\t\t\t\tsep = false;\r\n\t\t\t\tstr += \"<\"+\"li class='\" + (val._class || \"\") + (val._disabled === true || (langx.isFunction(val._disabled) && val._disabled({ \"item\" : val, \"reference\" : reference, \"element\" : self.$el })) ? \" vakata-contextmenu-disabled \" : \"\") + \"' \"+(val.shortcut?\" data-shortcut='\"+val.shortcut+\"' \":'')+\">\";\r\n\t\t\t\tstr += \"<\"+\"a href='#' rel='\" + (self.items.length - 1) + \"' \" + (val.title ? \"title='\" + val.title + \"'\" : \"\") + \">\";\r\n\t\t\t\tif(self._options.icons) {\r\n\t\t\t\t\tstr += \"<\"+\"i \";\r\n\t\t\t\t\tif(val.icon) {\r\n\t\t\t\t\t\tif(val.icon.indexOf(\"/\") !== -1 || val.icon.indexOf(\".\") !== -1) { str += \" style='background:url(\\\"\" + val.icon + \"\\\") center center no-repeat' \"; }\r\n\t\t\t\t\t\telse { str += \" class='\" + val.icon + \"' \"; }\r\n\t\t\t\t\t}\r\n\t\t\t\t\tstr += \"><\"+\"/i><\"+\"span class='vakata-contextmenu-sep'>&#160;<\"+\"/span>\";\r\n\t\t\t\t}\r\n\t\t\t\tstr += (langx.isFunction(val.label) ? val.label({ \"item\" : i, \"reference\" : reference, \"element\" : self.$el }) : val.label) + (val.shortcut?' <span class=\"vakata-contextmenu-shortcut vakata-contextmenu-shortcut-'+val.shortcut+'\">'+ (val.shortcut_label || '') +'</span>':'') + \"<\"+\"/a>\";\r\n\t\t\t\tif(val.submenu) {\r\n\t\t\t\t\ttmp = self._parse(val.submenu, true);\r\n\t\t\t\t\tif(tmp) { str += tmp; }\r\n\t\t\t\t}\r\n\t\t\t\tstr += \"<\"+\"/li>\";\r\n\t\t\t\tif(val.separator_after) {\r\n\t\t\t\t\tstr += \"<\"+\"li class='vakata-context-separator'><\"+\"a href='#' \" + (self._options.icons ? '' : 'style=\"margin-left:0px;\"') + \">&#160;<\"+\"/a><\"+\"/li>\";\r\n\t\t\t\t\tsep = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tstr  = str.replace(/<li class\\='vakata-context-separator'\\><\\/li\\>$/,\"\");\r\n\t\t\tif(is_callback) { str += \"</ul>\"; }\r\n\t\t\t/**\r\n\t\t\t * triggered on the document when the contextmenu is parsed (HTML is built)\r\n\t\t\t * @event\r\n\t\t\t * @plugin contextmenu\r\n\t\t\t * @name context_parse.vakata\r\n\t\t\t * @param {jQuery} reference the element that was right clicked\r\n\t\t\t * @param {jQuery} element the DOM element of the menu itself\r\n\t\t\t * @param {Object} position the x & y coordinates of the menu\r\n\t\t\t */\r\n\t\t\tif(!is_callback) { self.html = str; self._trigger(\"parse\"); }\r\n\t\t\treturn str.length > 10 ? str : false;\r\n\t\t},\r\n\t\t_show_submenu : function (o) {\r\n\t\t\to = $(o);\r\n\t\t\tif(!o.length || !o.children(\"ul\").length) { return; }\r\n\t\t\tvar e = o.children(\"ul\"),\r\n\t\t\t\txl = o.offset().left,\r\n\t\t\t\tx = xl + o.outerWidth(),\r\n\t\t\t\ty = o.offset().top,\r\n\t\t\t\tw = e.width(),\r\n\t\t\t\th = e.height(),\r\n\t\t\t\tdw = $(window).width() + $(window).scrollLeft(),\r\n\t\t\t\tdh = $(window).height() + $(window).scrollTop();\r\n\t\t\t// може да се спести е една проверка - дали няма някой от класовете вече нагоре\r\n\t\t\tif(right_to_left) {\r\n\t\t\t\to[x - (w + 10 + o.outerWidth()) < 0 ? \"addClass\" : \"removeClass\"](\"vakata-context-left\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\to[x + w > dw  && xl > dw - x ? \"addClass\" : \"removeClass\"](\"vakata-context-right\");\r\n\t\t\t}\r\n\t\t\tif(y + h + 10 > dh) {\r\n\t\t\t\te.css(\"bottom\",\"-1px\");\r\n\t\t\t}\r\n\r\n\t\t\t//if does not fit - stick it to the side\r\n\t\t\tif (o.hasClass('vakata-context-right')) {\r\n\t\t\t\tif (xl < w) {\r\n\t\t\t\t\te.css(\"margin-right\", xl - w);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (dw - x < w) {\r\n\t\t\t\t\te.css(\"margin-left\", dw - x - w);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\te.show();\r\n\t\t},\r\n\t\tshow : function (reference, position, data) {\r\n\t\t\tvar o, e, x, y, w, h, dw, dh, cond = true;\r\n\t\t\tswitch(cond) {\r\n\t\t\t\tcase (!position && !reference):\r\n\t\t\t\t\treturn false;\r\n\t\t\t\tcase (!!position && !!reference):\r\n\t\t\t\t\tthis.reference\t= reference;\r\n\t\t\t\t\tthis.position_x\t= position.x;\r\n\t\t\t\t\tthis.position_y\t= position.y;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase (!position && !!reference):\r\n\t\t\t\t\tthis.reference\t= reference;\r\n\t\t\t\t\to = reference.offset();\r\n\t\t\t\t\tthis.position_x\t= o.left + reference.outerHeight();\r\n\t\t\t\t\tthis.position_y\t= o.top;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase (!!position && !reference):\r\n\t\t\t\t\tthis.position_x\t= position.x;\r\n\t\t\t\t\tthis.position_y\t= position.y;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif(!!reference && !data && $(reference).data('vakata_contextmenu')) {\r\n\t\t\t\tdata = $(reference).data('vakata_contextmenu');\r\n\t\t\t}\r\n\r\n\t\t\tif(this.items.length) {\r\n\t\t\t\tthis.$el.appendTo(document.body);\r\n\t\t\t\te = this.$el;\r\n\t\t\t\tx = this.position_x;\r\n\t\t\t\ty = this.position_y;\r\n\t\t\t\tw = e.width();\r\n\t\t\t\th = e.height();\r\n\t\t\t\tdw = $(window).width() + $(window).scrollLeft();\r\n\t\t\t\tdh = $(window).height() + $(window).scrollTop();\r\n\t\t\t\tif(right_to_left) {\r\n\t\t\t\t\tx -= (e.outerWidth() - $(reference).outerWidth());\r\n\t\t\t\t\tif(x < $(window).scrollLeft() + 20) {\r\n\t\t\t\t\t\tx = $(window).scrollLeft() + 20;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(x + w + 20 > dw) {\r\n\t\t\t\t\tx = dw - (w + 20);\r\n\t\t\t\t}\r\n\t\t\t\tif(y + h + 20 > dh) {\r\n\t\t\t\t\ty = dh - (h + 20);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.$el\r\n\t\t\t\t\t.css({ \"left\" : x, \"top\" : y })\r\n\t\t\t\t\t.show()\r\n\t\t\t\t\t.find('a').first().focus().parent().addClass(\"vakata-context-hover\");\r\n\t\t\t\tthis.is_visible = true;\r\n\r\n\t\t\t\tpopup = this;\r\n\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered on the document when the contextmenu is shown\r\n\t\t\t\t * @event\r\n\t\t\t\t * @plugin contextmenu\r\n\t\t\t\t * @name context_show.vakata\r\n\t\t\t\t * @param {jQuery} reference the element that was right clicked\r\n\t\t\t\t * @param {jQuery} element the DOM element of the menu itself\r\n\t\t\t\t * @param {Object} position the x & y coordinates of the menu\r\n\t\t\t\t */\r\n\t\t\t\tthis._trigger(\"show\");\r\n\t\t\t}\r\n\t\t},\r\n\t\thide : function () {\r\n\t\t\tif(this.is_visible) {\r\n\t\t\t\tthis.$el.hide().find(\"ul\").hide().end().find(':focus').blur().end().detach();\r\n\t\t\t\tthis.is_visible = false;\r\n\t\t\t\tpopup = null;\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered on the document when the contextmenu is hidden\r\n\t\t\t\t * @event\r\n\t\t\t\t * @plugin contextmenu\r\n\t\t\t\t * @name context_hide.vakata\r\n\t\t\t\t * @param {jQuery} reference the element that was right clicked\r\n\t\t\t\t * @param {jQuery} element the DOM element of the menu itself\r\n\t\t\t\t * @param {Object} position the x & y coordinates of the menu\r\n\t\t\t\t */\r\n\t\t\t\tthis._trigger(\"hide\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n    });\t\r\n\r\n\t$(function () {\r\n\t\tright_to_left = $(document.body).css(\"direction\") === \"rtl\";\r\n\r\n\t\t$(document)\r\n\t\t\t.on(\"mousedown.sbswt.popup\", function (e) {\r\n\t\t\t\tif(popup && popup.$el[0] !== e.target  && !noder.contains(popup.$el[0], e.target)) {\r\n\t\t\t\t\tpopup.hide();\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.on(\"context_show.sbswt.popup\", function (e, data) {\r\n\t\t\t\tpopup.$el.find(\"li:has(ul)\").children(\"a\").addClass(\"vakata-context-parent\");\r\n\t\t\t\tif(right_to_left) {\r\n\t\t\t\t\tpopup.$el.addClass(\"vakata-context-rtl\").css(\"direction\", \"rtl\");\r\n\t\t\t\t}\r\n\t\t\t\t// also apply a RTL class?\r\n\t\t\t\tpopup.$el.find(\"ul\").hide().end();\r\n\t\t\t});\r\n\t});\r\n\r\n\tMenu.popup = function (reference, position, data) {\r\n\t\tvar m = new Menu({\r\n\t\t\treference : reference,\r\n\t\t\titems : data\r\n\t\t});\r\n\t\tm.show(reference,position);\r\n\t};\r\n\r\n\tMenu.hide = function() {\r\n\t\tif (popup) {\r\n\t\t\tpopup.hide();\r\n\t\t}\r\n\t}\r\n\r\n\treturn Menu;\r\n\r\n});\ndefine('skylark-widgets-hierarchy/addons/contextmenu',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"./menu\",\r\n  \"../Hierarchy\"\r\n],function(langx,browser,eventer,noder,geom,$, menu,jstree){\r\n\r\n\t\"use strict\";\r\n\r\n\tif($.jstree.plugins.contextmenu) { return; }\r\n\r\n\t/**\r\n\t * stores all defaults for the contextmenu plugin\r\n\t * @name $.jstree.defaults.contextmenu\r\n\t * @plugin contextmenu\r\n\t */\r\n\t$.jstree.defaults.contextmenu = {\r\n\t\t/**\r\n\t\t * a boolean indicating if the node should be selected when the context menu is invoked on it. Defaults to `true`.\r\n\t\t * @name $.jstree.defaults.contextmenu.select_node\r\n\t\t * @plugin contextmenu\r\n\t\t */\r\n\t\tselect_node : true,\r\n\t\t/**\r\n\t\t * a boolean indicating if the menu should be shown aligned with the node. Defaults to `true`, otherwise the mouse coordinates are used.\r\n\t\t * @name $.jstree.defaults.contextmenu.show_at_node\r\n\t\t * @plugin contextmenu\r\n\t\t */\r\n\t\tshow_at_node : true,\r\n\t\t/**\r\n\t\t * an object of actions, or a function that accepts a node and a callback function and calls the callback function with an object of actions available for that node (you can also return the items too).\r\n\t\t *\r\n\t\t * Each action consists of a key (a unique name) and a value which is an object with the following properties (only label and action are required). Once a menu item is activated the `action` function will be invoked with an object containing the following keys: item - the contextmenu item definition as seen below, reference - the DOM node that was used (the tree node), element - the contextmenu DOM element, position - an object with x/y properties indicating the position of the menu.\r\n\t\t *\r\n\t\t * * `separator_before` - a boolean indicating if there should be a separator before this item\r\n\t\t * * `separator_after` - a boolean indicating if there should be a separator after this item\r\n\t\t * * `_disabled` - a boolean indicating if this action should be disabled\r\n\t\t * * `label` - a string - the name of the action (could be a function returning a string)\r\n\t\t * * `title` - a string - an optional tooltip for the item\r\n\t\t * * `action` - a function to be executed if this item is chosen, the function will receive \r\n\t\t * * `icon` - a string, can be a path to an icon or a className, if using an image that is in the current directory use a `./` prefix, otherwise it will be detected as a class\r\n\t\t * * `shortcut` - keyCode which will trigger the action if the menu is open (for example `113` for rename, which equals F2)\r\n\t\t * * `shortcut_label` - shortcut label (like for example `F2` for rename)\r\n\t\t * * `submenu` - an object with the same structure as $.jstree.defaults.contextmenu.items which can be used to create a submenu - each key will be rendered as a separate option in a submenu that will appear once the current item is hovered\r\n\t\t *\r\n\t\t * @name $.jstree.defaults.contextmenu.items\r\n\t\t * @plugin contextmenu\r\n\t\t */\r\n\t\titems : function (o, cb) { // Could be an object directly\r\n\t\t\treturn {\r\n\t\t\t\t\"create\" : {\r\n\t\t\t\t\t\"separator_before\"\t: false,\r\n\t\t\t\t\t\"separator_after\"\t: true,\r\n\t\t\t\t\t\"_disabled\"\t\t\t: false, //(this.check(\"create_node\", data.reference, {}, \"last\")),\r\n\t\t\t\t\t\"label\"\t\t\t\t: \"Create\",\r\n\t\t\t\t\t\"action\"\t\t\t: function (data) {\r\n\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference),\r\n\t\t\t\t\t\t\tobj = inst.get_node(data.reference);\r\n\t\t\t\t\t\tinst.create_node(obj, {}, \"last\", function (new_node) {\r\n\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\tinst.edit(new_node);\r\n\t\t\t\t\t\t\t} catch (ex) {\r\n\t\t\t\t\t\t\t\tsetTimeout(function () { inst.edit(new_node); },0);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t\"rename\" : {\r\n\t\t\t\t\t\"separator_before\"\t: false,\r\n\t\t\t\t\t\"separator_after\"\t: false,\r\n\t\t\t\t\t\"_disabled\"\t\t\t: false, //(this.check(\"rename_node\", data.reference, this.get_parent(data.reference), \"\")),\r\n\t\t\t\t\t\"label\"\t\t\t\t: \"Rename\",\r\n\t\t\t\t\t/*!\r\n\t\t\t\t\t\"shortcut\"\t\t\t: 113,\r\n\t\t\t\t\t\"shortcut_label\"\t: 'F2',\r\n\t\t\t\t\t\"icon\"\t\t\t\t: \"glyphicon glyphicon-leaf\",\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t\"action\"\t\t\t: function (data) {\r\n\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference),\r\n\t\t\t\t\t\t\tobj = inst.get_node(data.reference);\r\n\t\t\t\t\t\tinst.edit(obj);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t\"remove\" : {\r\n\t\t\t\t\t\"separator_before\"\t: false,\r\n\t\t\t\t\t\"icon\"\t\t\t\t: false,\r\n\t\t\t\t\t\"separator_after\"\t: false,\r\n\t\t\t\t\t\"_disabled\"\t\t\t: false, //(this.check(\"delete_node\", data.reference, this.get_parent(data.reference), \"\")),\r\n\t\t\t\t\t\"label\"\t\t\t\t: \"Delete\",\r\n\t\t\t\t\t\"action\"\t\t\t: function (data) {\r\n\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference),\r\n\t\t\t\t\t\t\tobj = inst.get_node(data.reference);\r\n\t\t\t\t\t\tif(inst.is_selected(obj)) {\r\n\t\t\t\t\t\t\tinst.delete_node(inst.get_selected());\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tinst.delete_node(obj);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t\"ccp\" : {\r\n\t\t\t\t\t\"separator_before\"\t: true,\r\n\t\t\t\t\t\"icon\"\t\t\t\t: false,\r\n\t\t\t\t\t\"separator_after\"\t: false,\r\n\t\t\t\t\t\"label\"\t\t\t\t: \"Edit\",\r\n\t\t\t\t\t\"action\"\t\t\t: false,\r\n\t\t\t\t\t\"submenu\" : {\r\n\t\t\t\t\t\t\"cut\" : {\r\n\t\t\t\t\t\t\t\"separator_before\"\t: false,\r\n\t\t\t\t\t\t\t\"separator_after\"\t: false,\r\n\t\t\t\t\t\t\t\"label\"\t\t\t\t: \"Cut\",\r\n\t\t\t\t\t\t\t\"action\"\t\t\t: function (data) {\r\n\t\t\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference),\r\n\t\t\t\t\t\t\t\t\tobj = inst.get_node(data.reference);\r\n\t\t\t\t\t\t\t\tif(inst.is_selected(obj)) {\r\n\t\t\t\t\t\t\t\t\tinst.cut(inst.get_top_selected());\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tinst.cut(obj);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\"copy\" : {\r\n\t\t\t\t\t\t\t\"separator_before\"\t: false,\r\n\t\t\t\t\t\t\t\"icon\"\t\t\t\t: false,\r\n\t\t\t\t\t\t\t\"separator_after\"\t: false,\r\n\t\t\t\t\t\t\t\"label\"\t\t\t\t: \"Copy\",\r\n\t\t\t\t\t\t\t\"action\"\t\t\t: function (data) {\r\n\t\t\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference),\r\n\t\t\t\t\t\t\t\t\tobj = inst.get_node(data.reference);\r\n\t\t\t\t\t\t\t\tif(inst.is_selected(obj)) {\r\n\t\t\t\t\t\t\t\t\tinst.copy(inst.get_top_selected());\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tinst.copy(obj);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\"paste\" : {\r\n\t\t\t\t\t\t\t\"separator_before\"\t: false,\r\n\t\t\t\t\t\t\t\"icon\"\t\t\t\t: false,\r\n\t\t\t\t\t\t\t\"_disabled\"\t\t\t: function (data) {\r\n\t\t\t\t\t\t\t\treturn !$.jstree.reference(data.reference).can_paste();\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\"separator_after\"\t: false,\r\n\t\t\t\t\t\t\t\"label\"\t\t\t\t: \"Paste\",\r\n\t\t\t\t\t\t\t\"action\"\t\t\t: function (data) {\r\n\t\t\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference),\r\n\t\t\t\t\t\t\t\t\tobj = inst.get_node(data.reference);\r\n\t\t\t\t\t\t\t\tinst.paste(obj);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n\r\n\t$.jstree.plugins.contextmenu = function (options, parent) {\r\n\t\tthis.bind = function () {\r\n\t\t\tparent.bind.call(this);\r\n\r\n\t\t\tvar last_ts = 0, cto = null, ex, ey;\r\n\t\t\tthis.element\r\n\t\t\t\t.on(\"init.jstree loading.jstree ready.jstree\", langx.proxy(function () {\r\n\t\t\t\t\t\tthis.get_container_ul().addClass('jstree-contextmenu');\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"contextmenu.jstree\", \".jstree-anchor\", langx.proxy(function (e, data) {\r\n\t\t\t\t\t\tif (e.target.tagName.toLowerCase() === 'input') {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\tlast_ts = e.ctrlKey ? +new Date() : 0;\r\n\t\t\t\t\t\tif(data || cto) {\r\n\t\t\t\t\t\t\tlast_ts = (+new Date()) + 10000;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(cto) {\r\n\t\t\t\t\t\t\tclearTimeout(cto);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(!this.is_loading(e.currentTarget)) {\r\n\t\t\t\t\t\t\tthis.show_contextmenu(e.currentTarget, e.pageX, e.pageY, e);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"click.jstree\", \".jstree-anchor\", langx.proxy(function (e) {\r\n\t\t\t\t\t\tif(this._data.contextmenu.visible && (!last_ts || (+new Date()) - last_ts > 250)) { // work around safari & macOS ctrl+click\r\n\t\t\t\t\t\t\tmenu.hide();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tlast_ts = 0;\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"touchstart.jstree\", \".jstree-anchor\", function (e) {\r\n\t\t\t\t\t\tif(!e.originalEvent || !e.originalEvent.changedTouches || !e.originalEvent.changedTouches[0]) {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tex = e.originalEvent.changedTouches[0].clientX;\r\n\t\t\t\t\t\tey = e.originalEvent.changedTouches[0].clientY;\r\n\t\t\t\t\t\tcto = setTimeout(function () {\r\n\t\t\t\t\t\t\t$(e.currentTarget).trigger('contextmenu', true);\r\n\t\t\t\t\t\t}, 750);\r\n\t\t\t\t\t})\r\n\t\t\t\t.on('touchmove.vakata.jstree', function (e) {\r\n\t\t\t\t\t\tif(cto && e.originalEvent && e.originalEvent.changedTouches && e.originalEvent.changedTouches[0] && (Math.abs(ex - e.originalEvent.changedTouches[0].clientX) > 10 || Math.abs(ey - e.originalEvent.changedTouches[0].clientY) > 10)) {\r\n\t\t\t\t\t\t\tclearTimeout(cto);\r\n\t\t\t\t\t\t\tmenu.hide();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t.on('touchend.vakata.jstree', function (e) {\r\n\t\t\t\t\t\tif(cto) {\r\n\t\t\t\t\t\t\tclearTimeout(cto);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t/*!\r\n\t\t\tif(!('oncontextmenu' in document.body) && ('ontouchstart' in document.body)) {\r\n\t\t\t\tvar el = null, tm = null;\r\n\t\t\t\tthis.element\r\n\t\t\t\t\t.on(\"touchstart\", \".jstree-anchor\", function (e) {\r\n\t\t\t\t\t\tel = e.currentTarget;\r\n\t\t\t\t\t\ttm = +new Date();\r\n\t\t\t\t\t\t$(document).one(\"touchend\", function (e) {\r\n\t\t\t\t\t\t\te.target = document.elementFromPoint(e.originalEvent.targetTouches[0].pageX - window.pageXOffset, e.originalEvent.targetTouches[0].pageY - window.pageYOffset);\r\n\t\t\t\t\t\t\te.currentTarget = e.target;\r\n\t\t\t\t\t\t\ttm = ((+(new Date())) - tm);\r\n\t\t\t\t\t\t\tif(e.target === el && tm > 600 && tm < 1000) {\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\t$(el).trigger('contextmenu', e);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tel = null;\r\n\t\t\t\t\t\t\ttm = null;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t\t$(document).on(\"context_hide.sbswt.popup\", langx.proxy(function (e, data) {\r\n\t\t\t\tthis._data.contextmenu.visible = false;\r\n\t\t\t\t$(data.reference).removeClass('jstree-context');\r\n\t\t\t}, this));\r\n\t\t};\r\n\t\tthis.teardown = function () {\r\n\t\t\tif(this._data.contextmenu.visible) {\r\n\t\t\t\tmenu.hide();\r\n\t\t\t}\r\n\t\t\tparent.teardown.call(this);\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * prepare and show the context menu for a node\r\n\t\t * @name show_contextmenu(obj [, x, y])\r\n\t\t * @param {mixed} obj the node\r\n\t\t * @param {Number} x the x-coordinate relative to the document to show the menu at\r\n\t\t * @param {Number} y the y-coordinate relative to the document to show the menu at\r\n\t\t * @param {Object} e the event if available that triggered the contextmenu\r\n\t\t * @plugin contextmenu\r\n\t\t * @trigger show_contextmenu.jstree\r\n\t\t */\r\n\t\tthis.show_contextmenu = function (obj, x, y, e) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\r\n\t\t\tvar s = this.settings.contextmenu,\r\n\t\t\t\td = this.get_node(obj, true),\r\n\t\t\t\ta = d.children(\".jstree-anchor\"),\r\n\t\t\t\to = false,\r\n\t\t\t\ti = false;\r\n\t\t\tif(s.show_at_node || x === undefined || y === undefined) {\r\n\t\t\t\to = a.offset();\r\n\t\t\t\tx = o.left;\r\n\t\t\t\ty = o.top + this._data.core.li_height;\r\n\t\t\t}\r\n\t\t\tif(this.settings.contextmenu.select_node && !this.is_selected(obj)) {\r\n\t\t\t\tthis.activate_node(obj, e);\r\n\t\t\t}\r\n\r\n\t\t\ti = s.items;\r\n\t\t\tif(langx.isFunction(i)) {\r\n\t\t\t\ti = i.call(this, obj, langx.proxy(function (i) {\r\n\t\t\t\t\tthis._show_contextmenu(obj, x, y, i);\r\n\t\t\t\t}, this));\r\n\t\t\t}\r\n\t\t\tif(langx.isPlainObject(i)) {\r\n\t\t\t\tthis._show_contextmenu(obj, x, y, i);\r\n\t\t\t}\r\n\t\t};\r\n\t\t/**\r\n\t\t * show the prepared context menu for a node\r\n\t\t * @name _show_contextmenu(obj, x, y, i)\r\n\t\t * @param {mixed} obj the node\r\n\t\t * @param {Number} x the x-coordinate relative to the document to show the menu at\r\n\t\t * @param {Number} y the y-coordinate relative to the document to show the menu at\r\n\t\t * @param {Number} i the object of items to show\r\n\t\t * @plugin contextmenu\r\n\t\t * @trigger show_contextmenu.jstree\r\n\t\t * @private\r\n\t\t */\r\n\t\tthis._show_contextmenu = function (obj, x, y, i) {\r\n\t\t\tvar d = this.get_node(obj, true),\r\n\t\t\t\ta = d.children(\".jstree-anchor\");\r\n\t\t\t$(document).one(\"context_show.sbswt.popup\", langx.proxy(function (e, data) {\r\n\t\t\t\tvar cls = 'jstree-contextmenu jstree-' + this.get_theme() + '-contextmenu';\r\n\t\t\t\t$(data.element).addClass(cls);\r\n\t\t\t\ta.addClass('jstree-context');\r\n\t\t\t}, this));\r\n\t\t\tthis._data.contextmenu.visible = true;\r\n\t\t\tmenu.popup(a, { 'x' : x, 'y' : y }, i);\r\n\t\t\t/**\r\n\t\t\t * triggered when the contextmenu is shown for a node\r\n\t\t\t * @event\r\n\t\t\t * @name show_contextmenu.jstree\r\n\t\t\t * @param {Object} node the node\r\n\t\t\t * @param {Number} x the x-coordinate of the menu relative to the document\r\n\t\t\t * @param {Number} y the y-coordinate of the menu relative to the document\r\n\t\t\t * @plugin contextmenu\r\n\t\t\t */\r\n\t\t\tthis.trigger('show_contextmenu', { \"node\" : obj, \"x\" : x, \"y\" : y });\r\n\t\t};\r\n\t};\r\n\r\n\t// $.jstree.defaults.plugins.push(\"contextmenu\");\r\n\r\n\treturn $;\r\n\t\r\n});\r\n\ndefine('skylark-widgets-hierarchy/addons/dnd',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"../Hierarchy\"\r\n],function(langx,browser,eventer,noder,geom,$,jstree){\r\n\r\n\t\"use strict\";\r\n\r\n\tif($.jstree.plugins.dnd) { return; }\r\n\r\n\t/**\r\n\t * stores all defaults for the drag'n'drop plugin\r\n\t * @name $.jstree.defaults.dnd\r\n\t * @plugin dnd\r\n\t */\r\n\t$.jstree.defaults.dnd = {\r\n\t\t/**\r\n\t\t * a boolean indicating if a copy should be possible while dragging (by pressint the meta key or Ctrl). Defaults to `true`.\r\n\t\t * @name $.jstree.defaults.dnd.copy\r\n\t\t * @plugin dnd\r\n\t\t */\r\n\t\tcopy : true,\r\n\t\t/**\r\n\t\t * a number indicating how long a node should remain hovered while dragging to be opened. Defaults to `500`.\r\n\t\t * @name $.jstree.defaults.dnd.open_timeout\r\n\t\t * @plugin dnd\r\n\t\t */\r\n\t\topen_timeout : 500,\r\n\t\t/**\r\n\t\t * a function invoked each time a node is about to be dragged, invoked in the tree's scope and receives the nodes about to be dragged as an argument (array) and the event that started the drag - return `false` to prevent dragging\r\n\t\t * @name $.jstree.defaults.dnd.is_draggable\r\n\t\t * @plugin dnd\r\n\t\t */\r\n\t\tis_draggable : true,\r\n\t\t/**\r\n\t\t * a boolean indicating if checks should constantly be made while the user is dragging the node (as opposed to checking only on drop), default is `true`\r\n\t\t * @name $.jstree.defaults.dnd.check_while_dragging\r\n\t\t * @plugin dnd\r\n\t\t */\r\n\t\tcheck_while_dragging : true,\r\n\t\t/**\r\n\t\t * a boolean indicating if nodes from this tree should only be copied with dnd (as opposed to moved), default is `false`\r\n\t\t * @name $.jstree.defaults.dnd.always_copy\r\n\t\t * @plugin dnd\r\n\t\t */\r\n\t\talways_copy : false,\r\n\t\t/**\r\n\t\t * when dropping a node \"inside\", this setting indicates the position the node should go to - it can be an integer or a string: \"first\" (same as 0) or \"last\", default is `0`\r\n\t\t * @name $.jstree.defaults.dnd.inside_pos\r\n\t\t * @plugin dnd\r\n\t\t */\r\n\t\tinside_pos : 0,\r\n\t\t/**\r\n\t\t * when starting the drag on a node that is selected this setting controls if all selected nodes are dragged or only the single node, default is `true`, which means all selected nodes are dragged when the drag is started on a selected node\r\n\t\t * @name $.jstree.defaults.dnd.drag_selection\r\n\t\t * @plugin dnd\r\n\t\t */\r\n\t\tdrag_selection : true,\r\n\t\t/**\r\n\t\t * controls whether dnd works on touch devices. If left as boolean true dnd will work the same as in desktop browsers, which in some cases may impair scrolling. If set to boolean false dnd will not work on touch devices. There is a special third option - string \"selected\" which means only selected nodes can be dragged on touch devices.\r\n\t\t * @name $.jstree.defaults.dnd.touch\r\n\t\t * @plugin dnd\r\n\t\t */\r\n\t\ttouch : true,\r\n\t\t/**\r\n\t\t * controls whether items can be dropped anywhere on the node, not just on the anchor, by default only the node anchor is a valid drop target. Works best with the wholerow plugin. If enabled on mobile depending on the interface it might be hard for the user to cancel the drop, since the whole tree container will be a valid drop target.\r\n\t\t * @name $.jstree.defaults.dnd.large_drop_target\r\n\t\t * @plugin dnd\r\n\t\t */\r\n\t\tlarge_drop_target : false,\r\n\t\t/**\r\n\t\t * controls whether a drag can be initiated from any part of the node and not just the text/icon part, works best with the wholerow plugin. Keep in mind it can cause problems with tree scrolling on mobile depending on the interface - in that case set the touch option to \"selected\".\r\n\t\t * @name $.jstree.defaults.dnd.large_drag_target\r\n\t\t * @plugin dnd\r\n\t\t */\r\n\t\tlarge_drag_target : false,\r\n\t\t/**\r\n\t\t * controls whether use HTML5 dnd api instead of classical. That will allow better integration of dnd events with other HTML5 controls.\r\n\t\t * @reference http://caniuse.com/#feat=dragndrop\r\n\t\t * @name $.jstree.defaults.dnd.use_html5\r\n\t\t * @plugin dnd\r\n\t\t */\r\n\t\tuse_html5: false\r\n\t};\r\n\tvar drg, elm;\r\n\t// TODO: now check works by checking for each node individually, how about max_children, unique, etc?\r\n\t$.jstree.plugins.dnd = function (options, parent) {\r\n\t\tthis.init = function (el, options) {\r\n\t\t\tparent.init.call(this, el, options);\r\n\t\t\tthis.settings.dnd.use_html5 = this.settings.dnd.use_html5 && ('draggable' in document.createElement('span'));\r\n\t\t};\r\n\t\tthis.bind = function () {\r\n\t\t\tparent.bind.call(this);\r\n\r\n\t\t\tthis.element\r\n\t\t\t\t.on(this.settings.dnd.use_html5 ? 'dragstart.jstree' : 'mousedown.jstree touchstart.jstree', this.settings.dnd.large_drag_target ? '.jstree-node' : '.jstree-anchor', langx.proxy(function (e) {\r\n\t\t\t\t\t\tif(this.settings.dnd.large_drag_target && $(e.target).closest('.jstree-node')[0] !== e.currentTarget) {\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(e.type === \"touchstart\" && (!this.settings.dnd.touch || (this.settings.dnd.touch === 'selected' && !$(e.currentTarget).closest('.jstree-node').children('.jstree-anchor').hasClass('jstree-clicked')))) {\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar obj = this.get_node(e.target),\r\n\t\t\t\t\t\t\tmlt = this.is_selected(obj) && this.settings.dnd.drag_selection ? this.get_top_selected().length : 1,\r\n\t\t\t\t\t\t\ttxt = (mlt > 1 ? mlt + ' ' + this.get_string('nodes') : this.get_text(e.currentTarget));\r\n\t\t\t\t\t\tif(this.settings.core.force_text) {\r\n\t\t\t\t\t\t\ttxt = $.vakata.html.escape(txt);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(obj && obj.id && obj.id !== $.jstree.root && (e.which === 1 || e.type === \"touchstart\" || e.type === \"dragstart\") &&\r\n\t\t\t\t\t\t\t(this.settings.dnd.is_draggable === true || (langx.isFunction(this.settings.dnd.is_draggable) && this.settings.dnd.is_draggable.call(this, (mlt > 1 ? this.get_top_selected(true) : [obj]), e)))\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\tdrg = { 'jstree' : true, 'origin' : this, 'obj' : this.get_node(obj,true), 'nodes' : mlt > 1 ? this.get_top_selected() : [obj.id] };\r\n\t\t\t\t\t\t\telm = e.currentTarget;\r\n\t\t\t\t\t\t\tif (this.settings.dnd.use_html5) {\r\n\t\t\t\t\t\t\t\t$.vakata.dnd._trigger('start', e, { 'helper': $(), 'element': elm, 'data': drg });\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthis.element.trigger('mousedown.jstree');\r\n\t\t\t\t\t\t\t\treturn $.vakata.dnd.start(e, drg, '<div id=\"jstree-dnd\" class=\"jstree-' + this.get_theme() + ' jstree-' + this.get_theme() + '-' + this.get_theme_variant() + ' ' + ( this.settings.core.themes.responsive ? ' jstree-dnd-responsive' : '' ) + '\"><i class=\"jstree-icon jstree-er\"></i>' + txt + '<ins class=\"jstree-copy\" style=\"display:none;\">+</ins></div>');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this));\r\n\t\t\tif (this.settings.dnd.use_html5) {\r\n\t\t\t\tthis.element\r\n\t\t\t\t\t.on('dragover.jstree', function (e) {\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t$.vakata.dnd._trigger('move', e, { 'helper': $(), 'element': elm, 'data': drg });\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t//.on('dragenter.jstree', this.settings.dnd.large_drop_target ? '.jstree-node' : '.jstree-anchor', $.proxy(function (e) {\r\n\t\t\t\t\t//\t\te.preventDefault();\r\n\t\t\t\t\t//\t\t$.vakata.dnd._trigger('move', e, { 'helper': $(), 'element': elm, 'data': drg });\r\n\t\t\t\t\t//\t\treturn false;\r\n\t\t\t\t\t//\t}, this))\r\n\t\t\t\t\t.on('drop.jstree', langx.proxy(function (e) {\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t$.vakata.dnd._trigger('stop', e, { 'helper': $(), 'element': elm, 'data': drg });\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}, this));\r\n\t\t\t}\r\n\t\t};\r\n\t\tthis.redraw_node = function(obj, deep, callback, force_render) {\r\n\t\t\tobj = parent.redraw_node.apply(this, arguments);\r\n\t\t\tif (obj && this.settings.dnd.use_html5) {\r\n\t\t\t\tif (this.settings.dnd.large_drag_target) {\r\n\t\t\t\t\tobj.setAttribute('draggable', true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar i, j, tmp = null;\r\n\t\t\t\t\tfor(i = 0, j = obj.childNodes.length; i < j; i++) {\r\n\t\t\t\t\t\tif(obj.childNodes[i] && obj.childNodes[i].className && obj.childNodes[i].className.indexOf(\"jstree-anchor\") !== -1) {\r\n\t\t\t\t\t\t\ttmp = obj.childNodes[i];\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(tmp) {\r\n\t\t\t\t\t\ttmp.setAttribute('draggable', true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn obj;\r\n\t\t};\r\n\t};\r\n\r\n\t$(function() {\r\n\t\t// bind only once for all instances\r\n\t\tvar lastmv = false,\r\n\t\t\tlaster = false,\r\n\t\t\tlastev = false,\r\n\t\t\topento = false,\r\n\t\t\tmarker = $('<div id=\"jstree-marker\">&#160;</div>').hide(); //.appendTo('body');\r\n\r\n\t\t$(document)\r\n\t\t\t.on('dnd_start.vakata.jstree', function (e, data) {\r\n\t\t\t\tlastmv = false;\r\n\t\t\t\tlastev = false;\r\n\t\t\t\tif(!data || !data.data || !data.data.jstree) { return; }\r\n\t\t\t\tmarker.appendTo(document.body); //.show();\r\n\t\t\t})\r\n\t\t\t.on('dnd_move.vakata.jstree', function (e, data) {\r\n\t\t\t\tvar isDifferentNode = data.event.target !== lastev.target;\r\n\t\t\t\tif(opento) {\r\n\t\t\t\t\tif (!data.event || data.event.type !== 'dragover' || isDifferentNode) {\r\n\t\t\t\t\t\tclearTimeout(opento);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(!data || !data.data || !data.data.jstree) { return; }\r\n\r\n\t\t\t\t// if we are hovering the marker image do nothing (can happen on \"inside\" drags)\r\n\t\t\t\tif(data.event.target.id && data.event.target.id === 'jstree-marker') {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tlastev = data.event;\r\n\r\n\t\t\t\tvar ins = $.jstree.reference(data.event.target),\r\n\t\t\t\t\tref = false,\r\n\t\t\t\t\toff = false,\r\n\t\t\t\t\trel = false,\r\n\t\t\t\t\ttmp, l, t, h, p, i, o, ok, t1, t2, op, ps, pr, ip, tm, is_copy, pn;\r\n\t\t\t\t// if we are over an instance\r\n\t\t\t\tif(ins && ins._data && ins._data.dnd) {\r\n\t\t\t\t\tmarker.attr('class', 'jstree-' + ins.get_theme() + ( ins.settings.core.themes.responsive ? ' jstree-dnd-responsive' : '' ));\r\n\t\t\t\t\tis_copy = data.data.origin && (data.data.origin.settings.dnd.always_copy || (data.data.origin.settings.dnd.copy && (data.event.metaKey || data.event.ctrlKey)));\r\n\t\t\t\t\tdata.helper\r\n\t\t\t\t\t\t.children().attr('class', 'jstree-' + ins.get_theme() + ' jstree-' + ins.get_theme() + '-' + ins.get_theme_variant() + ' ' + ( ins.settings.core.themes.responsive ? ' jstree-dnd-responsive' : '' ))\r\n\t\t\t\t\t\t.find('.jstree-copy').first()[ is_copy ? 'show' : 'hide' ]();\r\n\r\n\t\t\t\t\t// if are hovering the container itself add a new root node\r\n\t\t\t\t\t//console.log(data.event);\r\n\t\t\t\t\tif( (data.event.target === ins.element[0] || data.event.target === ins.get_container_ul()[0]) && ins.get_container_ul().children().length === 0) {\r\n\t\t\t\t\t\tok = true;\r\n\t\t\t\t\t\tfor(t1 = 0, t2 = data.data.nodes.length; t1 < t2; t1++) {\r\n\t\t\t\t\t\t\tok = ok && ins.check( (data.data.origin && (data.data.origin.settings.dnd.always_copy || (data.data.origin.settings.dnd.copy && (data.event.metaKey || data.event.ctrlKey)) ) ? \"copy_node\" : \"move_node\"), (data.data.origin && data.data.origin !== ins ? data.data.origin.get_node(data.data.nodes[t1]) : data.data.nodes[t1]), $.jstree.root, 'last', { 'dnd' : true, 'ref' : ins.get_node($.jstree.root), 'pos' : 'i', 'origin' : data.data.origin, 'is_multi' : (data.data.origin && data.data.origin !== ins), 'is_foreign' : (!data.data.origin) });\r\n\t\t\t\t\t\t\tif(!ok) { break; }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(ok) {\r\n\t\t\t\t\t\t\tlastmv = { 'ins' : ins, 'par' : $.jstree.root, 'pos' : 'last' };\r\n\t\t\t\t\t\t\tmarker.hide();\r\n\t\t\t\t\t\t\tdata.helper.find('.jstree-icon').first().removeClass('jstree-er').addClass('jstree-ok');\r\n\t\t\t\t\t\t\tif (data.event.originalEvent && data.event.originalEvent.dataTransfer) {\r\n\t\t\t\t\t\t\t\tdata.event.originalEvent.dataTransfer.dropEffect = is_copy ? 'copy' : 'move';\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t// if we are hovering a tree node\r\n\t\t\t\t\t\tref = ins.settings.dnd.large_drop_target ? $(data.event.target).closest('.jstree-node').children('.jstree-anchor') : $(data.event.target).closest('.jstree-anchor');\r\n\t\t\t\t\t\tif(ref && ref.length && ref.parent().is('.jstree-closed, .jstree-open, .jstree-leaf')) {\r\n\t\t\t\t\t\t\toff = ref.offset();\r\n\t\t\t\t\t\t\trel = (data.event.pageY !== undefined ? data.event.pageY : data.event.originalEvent.pageY) - off.top;\r\n\t\t\t\t\t\t\th = ref.outerHeight();\r\n\t\t\t\t\t\t\tif(rel < h / 3) {\r\n\t\t\t\t\t\t\t\to = ['b', 'i', 'a'];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if(rel > h - h / 3) {\r\n\t\t\t\t\t\t\t\to = ['a', 'i', 'b'];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\to = rel > h / 2 ? ['i', 'a', 'b'] : ['i', 'b', 'a'];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tlangx.each(o, function (j, v) {\r\n\t\t\t\t\t\t\t\tswitch(v) {\r\n\t\t\t\t\t\t\t\t\tcase 'b':\r\n\t\t\t\t\t\t\t\t\t\tl = off.left - 6;\r\n\t\t\t\t\t\t\t\t\t\tt = off.top;\r\n\t\t\t\t\t\t\t\t\t\tp = ins.get_parent(ref);\r\n\t\t\t\t\t\t\t\t\t\ti = ref.parent().index();\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\tcase 'i':\r\n\t\t\t\t\t\t\t\t\t\tip = ins.settings.dnd.inside_pos;\r\n\t\t\t\t\t\t\t\t\t\ttm = ins.get_node(ref.parent());\r\n\t\t\t\t\t\t\t\t\t\tl = off.left - 2;\r\n\t\t\t\t\t\t\t\t\t\tt = off.top + h / 2 + 1;\r\n\t\t\t\t\t\t\t\t\t\tp = tm.id;\r\n\t\t\t\t\t\t\t\t\t\ti = ip === 'first' ? 0 : (ip === 'last' ? tm.children.length : Math.min(ip, tm.children.length));\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\tcase 'a':\r\n\t\t\t\t\t\t\t\t\t\tl = off.left - 6;\r\n\t\t\t\t\t\t\t\t\t\tt = off.top + h;\r\n\t\t\t\t\t\t\t\t\t\tp = ins.get_parent(ref);\r\n\t\t\t\t\t\t\t\t\t\ti = ref.parent().index() + 1;\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tok = true;\r\n\t\t\t\t\t\t\t\tfor(t1 = 0, t2 = data.data.nodes.length; t1 < t2; t1++) {\r\n\t\t\t\t\t\t\t\t\top = data.data.origin && (data.data.origin.settings.dnd.always_copy || (data.data.origin.settings.dnd.copy && (data.event.metaKey || data.event.ctrlKey))) ? \"copy_node\" : \"move_node\";\r\n\t\t\t\t\t\t\t\t\tps = i;\r\n\t\t\t\t\t\t\t\t\tif(op === \"move_node\" && v === 'a' && (data.data.origin && data.data.origin === ins) && p === ins.get_parent(data.data.nodes[t1])) {\r\n\t\t\t\t\t\t\t\t\t\tpr = ins.get_node(p);\r\n\t\t\t\t\t\t\t\t\t\tif(ps > langx.inArray(data.data.nodes[t1], pr.children)) {\r\n\t\t\t\t\t\t\t\t\t\t\tps -= 1;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tok = ok && ( (ins && ins.settings && ins.settings.dnd && ins.settings.dnd.check_while_dragging === false) || ins.check(op, (data.data.origin && data.data.origin !== ins ? data.data.origin.get_node(data.data.nodes[t1]) : data.data.nodes[t1]), p, ps, { 'dnd' : true, 'ref' : ins.get_node(ref.parent()), 'pos' : v, 'origin' : data.data.origin, 'is_multi' : (data.data.origin && data.data.origin !== ins), 'is_foreign' : (!data.data.origin) }) );\r\n\t\t\t\t\t\t\t\t\tif(!ok) {\r\n\t\t\t\t\t\t\t\t\t\tif(ins && ins.last_error) { laster = ins.last_error(); }\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif(v === 'i' && ref.parent().is('.jstree-closed') && ins.settings.dnd.open_timeout) {\r\n\t\t\t\t\t\t\t\t\tif (!data.event || data.event.type !== 'dragover' || isDifferentNode) {\r\n\t\t\t\t\t\t\t\t\t\tif (opento) { clearTimeout(opento); }\r\n\t\t\t\t\t\t\t\t\t\topento = setTimeout((function (x, z) { return function () { x.open_node(z); }; }(ins, ref)), ins.settings.dnd.open_timeout);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif(ok) {\r\n\t\t\t\t\t\t\t\t\tpn = ins.get_node(p, true);\r\n\t\t\t\t\t\t\t\t\tif (!pn.hasClass('.jstree-dnd-parent')) {\r\n\t\t\t\t\t\t\t\t\t\t$('.jstree-dnd-parent').removeClass('jstree-dnd-parent');\r\n\t\t\t\t\t\t\t\t\t\tpn.addClass('jstree-dnd-parent');\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tlastmv = { 'ins' : ins, 'par' : p, 'pos' : v === 'i' && ip === 'last' && i === 0 && !ins.is_loaded(tm) ? 'last' : i };\r\n\t\t\t\t\t\t\t\t\tmarker.css({ 'left' : l + 'px', 'top' : t + 'px' }).show();\r\n\t\t\t\t\t\t\t\t\tdata.helper.find('.jstree-icon').first().removeClass('jstree-er').addClass('jstree-ok');\r\n\t\t\t\t\t\t\t\t\tif (data.event.originalEvent && data.event.originalEvent.dataTransfer) {\r\n\t\t\t\t\t\t\t\t\t\tdata.event.originalEvent.dataTransfer.dropEffect = is_copy ? 'copy' : 'move';\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tlaster = {};\r\n\t\t\t\t\t\t\t\t\to = true;\r\n\t\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tif(o === true) { return; }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t$('.jstree-dnd-parent').removeClass('jstree-dnd-parent');\r\n\t\t\t\tlastmv = false;\r\n\t\t\t\tdata.helper.find('.jstree-icon').removeClass('jstree-ok').addClass('jstree-er');\r\n\t\t\t\tif (data.event.originalEvent && data.event.originalEvent.dataTransfer) {\r\n\t\t\t\t\tdata.event.originalEvent.dataTransfer.dropEffect = 'none';\r\n\t\t\t\t}\r\n\t\t\t\tmarker.hide();\r\n\t\t\t})\r\n\t\t\t.on('dnd_scroll.vakata.jstree', function (e, data) {\r\n\t\t\t\tif(!data || !data.data || !data.data.jstree) { return; }\r\n\t\t\t\tmarker.hide();\r\n\t\t\t\tlastmv = false;\r\n\t\t\t\tlastev = false;\r\n\t\t\t\tdata.helper.find('.jstree-icon').first().removeClass('jstree-ok').addClass('jstree-er');\r\n\t\t\t})\r\n\t\t\t.on('dnd_stop.vakata.jstree', function (e, data) {\r\n\t\t\t\t$('.jstree-dnd-parent').removeClass('jstree-dnd-parent');\r\n\t\t\t\tif(opento) { clearTimeout(opento); }\r\n\t\t\t\tif(!data || !data.data || !data.data.jstree) { return; }\r\n\t\t\t\tmarker.hide().detach();\r\n\t\t\t\tvar i, j, nodes = [];\r\n\t\t\t\tif(lastmv) {\r\n\t\t\t\t\tfor(i = 0, j = data.data.nodes.length; i < j; i++) {\r\n\t\t\t\t\t\tnodes[i] = data.data.origin ? data.data.origin.get_node(data.data.nodes[i]) : data.data.nodes[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlastmv.ins[ data.data.origin && (data.data.origin.settings.dnd.always_copy || (data.data.origin.settings.dnd.copy && (data.event.metaKey || data.event.ctrlKey))) ? 'copy_node' : 'move_node' ](nodes, lastmv.par, lastmv.pos, false, false, false, data.data.origin);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\ti = $(data.event.target).closest('.jstree');\r\n\t\t\t\t\tif(i.length && laster && laster.error && laster.error === 'check') {\r\n\t\t\t\t\t\ti = i.jstree(true);\r\n\t\t\t\t\t\tif(i) {\r\n\t\t\t\t\t\t\ti.settings.core.error.call(this, laster);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tlastev = false;\r\n\t\t\t\tlastmv = false;\r\n\t\t\t})\r\n\t\t\t.on('keyup.jstree keydown.jstree', function (e, data) {\r\n\t\t\t\tdata = $.vakata.dnd._get();\r\n\t\t\t\tif(data && data.data && data.data.jstree) {\r\n\t\t\t\t\tif (e.type === \"keyup\" && e.which === 27) {\r\n\t\t\t\t\t\tif (opento) { clearTimeout(opento); }\r\n\t\t\t\t\t\tlastmv = false;\r\n\t\t\t\t\t\tlaster = false;\r\n\t\t\t\t\t\tlastev = false;\r\n\t\t\t\t\t\topento = false;\r\n\t\t\t\t\t\tmarker.hide().detach();\r\n\t\t\t\t\t\t$.vakata.dnd._clean();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdata.helper.find('.jstree-copy').first()[ data.data.origin && (data.data.origin.settings.dnd.always_copy || (data.data.origin.settings.dnd.copy && (e.metaKey || e.ctrlKey))) ? 'show' : 'hide' ]();\r\n\t\t\t\t\t\tif(lastev) {\r\n\t\t\t\t\t\t\tlastev.metaKey = e.metaKey;\r\n\t\t\t\t\t\t\tlastev.ctrlKey = e.ctrlKey;\r\n\t\t\t\t\t\t\t$.vakata.dnd._trigger('move', lastev);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t});\r\n\r\n\t// helpers\r\n\t(function ($) {\r\n\t\t$.vakata.html = {\r\n\t\t\tdiv : $('<div />'),\r\n\t\t\tescape : function (str) {\r\n\t\t\t\treturn $.vakata.html.div.text(str).html();\r\n\t\t\t},\r\n\t\t\tstrip : function (str) {\r\n\t\t\t\treturn $.vakata.html.div.empty().append(langx.parseHTML(str)).text();\r\n\t\t\t}\r\n\t\t};\r\n\t\t// private variable\r\n\t\tvar vakata_dnd = {\r\n\t\t\telement\t: false,\r\n\t\t\ttarget\t: false,\r\n\t\t\tis_down\t: false,\r\n\t\t\tis_drag\t: false,\r\n\t\t\thelper\t: false,\r\n\t\t\thelper_w: 0,\r\n\t\t\tdata\t: false,\r\n\t\t\tinit_x\t: 0,\r\n\t\t\tinit_y\t: 0,\r\n\t\t\tscroll_l: 0,\r\n\t\t\tscroll_t: 0,\r\n\t\t\tscroll_e: false,\r\n\t\t\tscroll_i: false,\r\n\t\t\tis_touch: false\r\n\t\t};\r\n\t\t$.vakata.dnd = {\r\n\t\t\tsettings : {\r\n\t\t\t\tscroll_speed\t\t: 10,\r\n\t\t\t\tscroll_proximity\t: 20,\r\n\t\t\t\thelper_left\t\t\t: 5,\r\n\t\t\t\thelper_top\t\t\t: 10,\r\n\t\t\t\tthreshold\t\t\t: 5,\r\n\t\t\t\tthreshold_touch\t\t: 10\r\n\t\t\t},\r\n\t\t\t_trigger : function (event_name, e, data) {\r\n\t\t\t\tif (data === undefined) {\r\n\t\t\t\t\tdata = $.vakata.dnd._get();\r\n\t\t\t\t}\r\n\t\t\t\tdata.event = e;\r\n\t\t\t\t$(document).trigger(\"dnd_\" + event_name + \".vakata\", data);\r\n\t\t\t},\r\n\t\t\t_get : function () {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t\"data\"\t\t: vakata_dnd.data,\r\n\t\t\t\t\t\"element\"\t: vakata_dnd.element,\r\n\t\t\t\t\t\"helper\"\t: vakata_dnd.helper\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\t\t_clean : function () {\r\n\t\t\t\tif(vakata_dnd.helper) { vakata_dnd.helper.remove(); }\r\n\t\t\t\tif(vakata_dnd.scroll_i) { clearInterval(vakata_dnd.scroll_i); vakata_dnd.scroll_i = false; }\r\n\t\t\t\tvakata_dnd = {\r\n\t\t\t\t\telement\t: false,\r\n\t\t\t\t\ttarget\t: false,\r\n\t\t\t\t\tis_down\t: false,\r\n\t\t\t\t\tis_drag\t: false,\r\n\t\t\t\t\thelper\t: false,\r\n\t\t\t\t\thelper_w: 0,\r\n\t\t\t\t\tdata\t: false,\r\n\t\t\t\t\tinit_x\t: 0,\r\n\t\t\t\t\tinit_y\t: 0,\r\n\t\t\t\t\tscroll_l: 0,\r\n\t\t\t\t\tscroll_t: 0,\r\n\t\t\t\t\tscroll_e: false,\r\n\t\t\t\t\tscroll_i: false,\r\n\t\t\t\t\tis_touch: false\r\n\t\t\t\t};\r\n\t\t\t\t$(document).off(\"mousemove.vakata.jstree touchmove.vakata.jstree\", $.vakata.dnd.drag);\r\n\t\t\t\t$(document).off(\"mouseup.vakata.jstree touchend.vakata.jstree\", $.vakata.dnd.stop);\r\n\t\t\t},\r\n\t\t\t_scroll : function (init_only) {\r\n\t\t\t\tif(!vakata_dnd.scroll_e || (!vakata_dnd.scroll_l && !vakata_dnd.scroll_t)) {\r\n\t\t\t\t\tif(vakata_dnd.scroll_i) { clearInterval(vakata_dnd.scroll_i); vakata_dnd.scroll_i = false; }\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tif(!vakata_dnd.scroll_i) {\r\n\t\t\t\t\tvakata_dnd.scroll_i = setInterval($.vakata.dnd._scroll, 100);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tif(init_only === true) { return false; }\r\n\r\n\t\t\t\tvar i = vakata_dnd.scroll_e.scrollTop(),\r\n\t\t\t\t\tj = vakata_dnd.scroll_e.scrollLeft();\r\n\t\t\t\tvakata_dnd.scroll_e.scrollTop(i + vakata_dnd.scroll_t * $.vakata.dnd.settings.scroll_speed);\r\n\t\t\t\tvakata_dnd.scroll_e.scrollLeft(j + vakata_dnd.scroll_l * $.vakata.dnd.settings.scroll_speed);\r\n\t\t\t\tif(i !== vakata_dnd.scroll_e.scrollTop() || j !== vakata_dnd.scroll_e.scrollLeft()) {\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * triggered on the document when a drag causes an element to scroll\r\n\t\t\t\t\t * @event\r\n\t\t\t\t\t * @plugin dnd\r\n\t\t\t\t\t * @name dnd_scroll.vakata\r\n\t\t\t\t\t * @param {Mixed} data any data supplied with the call to $.vakata.dnd.start\r\n\t\t\t\t\t * @param {DOM} element the DOM element being dragged\r\n\t\t\t\t\t * @param {jQuery} helper the helper shown next to the mouse\r\n\t\t\t\t\t * @param {jQuery} event the element that is scrolling\r\n\t\t\t\t\t */\r\n\t\t\t\t\t$.vakata.dnd._trigger(\"scroll\", vakata_dnd.scroll_e);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tstart : function (e, data, html) {\r\n\t\t\t\tif(e.type === \"touchstart\" && e.originalEvent && e.originalEvent.changedTouches && e.originalEvent.changedTouches[0]) {\r\n\t\t\t\t\te.pageX = e.originalEvent.changedTouches[0].pageX;\r\n\t\t\t\t\te.pageY = e.originalEvent.changedTouches[0].pageY;\r\n\t\t\t\t\te.target = document.elementFromPoint(e.originalEvent.changedTouches[0].pageX - window.pageXOffset, e.originalEvent.changedTouches[0].pageY - window.pageYOffset);\r\n\t\t\t\t}\r\n\t\t\t\tif(vakata_dnd.is_drag) { $.vakata.dnd.stop({}); }\r\n\t\t\t\ttry {\r\n\t\t\t\t\te.currentTarget.unselectable = \"on\";\r\n\t\t\t\t\te.currentTarget.onselectstart = function() { return false; };\r\n\t\t\t\t\tif(e.currentTarget.style) {\r\n\t\t\t\t\t\te.currentTarget.style.touchAction = \"none\";\r\n\t\t\t\t\t\te.currentTarget.style.msTouchAction = \"none\";\r\n\t\t\t\t\t\te.currentTarget.style.MozUserSelect = \"none\";\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch(ignore) { }\r\n\t\t\t\tvakata_dnd.init_x\t= e.pageX;\r\n\t\t\t\tvakata_dnd.init_y\t= e.pageY;\r\n\t\t\t\tvakata_dnd.data\t\t= data;\r\n\t\t\t\tvakata_dnd.is_down\t= true;\r\n\t\t\t\tvakata_dnd.element\t= e.currentTarget;\r\n\t\t\t\tvakata_dnd.target\t= e.target;\r\n\t\t\t\tvakata_dnd.is_touch\t= e.type === \"touchstart\";\r\n\t\t\t\tif(html !== false) {\r\n\t\t\t\t\tvakata_dnd.helper = $(\"<div id='vakata-dnd'></div>\").html(html).css({\r\n\t\t\t\t\t\t\"display\"\t\t: \"block\",\r\n\t\t\t\t\t\t\"margin\"\t\t: \"0\",\r\n\t\t\t\t\t\t\"padding\"\t\t: \"0\",\r\n\t\t\t\t\t\t\"position\"\t\t: \"absolute\",\r\n\t\t\t\t\t\t\"top\"\t\t\t: \"-2000px\",\r\n\t\t\t\t\t\t\"lineHeight\"\t: \"16px\",\r\n\t\t\t\t\t\t\"zIndex\"\t\t: \"10000\"\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t$(document).on(\"mousemove.vakata.jstree touchmove.vakata.jstree\", $.vakata.dnd.drag);\r\n\t\t\t\t$(document).on(\"mouseup.vakata.jstree touchend.vakata.jstree\", $.vakata.dnd.stop);\r\n\t\t\t\treturn false;\r\n\t\t\t},\r\n\t\t\tdrag : function (e) {\r\n\t\t\t\tif(e.type === \"touchmove\" && e.originalEvent && e.originalEvent.changedTouches && e.originalEvent.changedTouches[0]) {\r\n\t\t\t\t\te.pageX = e.originalEvent.changedTouches[0].pageX;\r\n\t\t\t\t\te.pageY = e.originalEvent.changedTouches[0].pageY;\r\n\t\t\t\t\te.target = document.elementFromPoint(e.originalEvent.changedTouches[0].pageX - window.pageXOffset, e.originalEvent.changedTouches[0].pageY - window.pageYOffset);\r\n\t\t\t\t}\r\n\t\t\t\tif(!vakata_dnd.is_down) { return; }\r\n\t\t\t\tif(!vakata_dnd.is_drag) {\r\n\t\t\t\t\tif(\r\n\t\t\t\t\t\tMath.abs(e.pageX - vakata_dnd.init_x) > (vakata_dnd.is_touch ? $.vakata.dnd.settings.threshold_touch : $.vakata.dnd.settings.threshold) ||\r\n\t\t\t\t\t\tMath.abs(e.pageY - vakata_dnd.init_y) > (vakata_dnd.is_touch ? $.vakata.dnd.settings.threshold_touch : $.vakata.dnd.settings.threshold)\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tif(vakata_dnd.helper) {\r\n\t\t\t\t\t\t\tvakata_dnd.helper.appendTo(document.body);\r\n\t\t\t\t\t\t\tvakata_dnd.helper_w = vakata_dnd.helper.outerWidth();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvakata_dnd.is_drag = true;\r\n\t\t\t\t\t\t$(vakata_dnd.target).one('click.vakata', false);\r\n\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t * triggered on the document when a drag starts\r\n\t\t\t\t\t\t * @event\r\n\t\t\t\t\t\t * @plugin dnd\r\n\t\t\t\t\t\t * @name dnd_start.vakata\r\n\t\t\t\t\t\t * @param {Mixed} data any data supplied with the call to $.vakata.dnd.start\r\n\t\t\t\t\t\t * @param {DOM} element the DOM element being dragged\r\n\t\t\t\t\t\t * @param {jQuery} helper the helper shown next to the mouse\r\n\t\t\t\t\t\t * @param {Object} event the event that caused the start (probably mousemove)\r\n\t\t\t\t\t\t */\r\n\t\t\t\t\t\t$.vakata.dnd._trigger(\"start\", e);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse { return; }\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar d  = false, w  = false,\r\n\t\t\t\t\tdh = false, wh = false,\r\n\t\t\t\t\tdw = false, ww = false,\r\n\t\t\t\t\tdt = false, dl = false,\r\n\t\t\t\t\tht = false, hl = false;\r\n\r\n\t\t\t\tvakata_dnd.scroll_t = 0;\r\n\t\t\t\tvakata_dnd.scroll_l = 0;\r\n\t\t\t\tvakata_dnd.scroll_e = false;\r\n\t\t\t\t$($(e.target).parentsUntil(\"body\").addBack().get().reverse())\r\n\t\t\t\t\t.filter(function () {\r\n\t\t\t\t\t\treturn\t(/^auto|scroll$/).test($(this).css(\"overflow\")) &&\r\n\t\t\t\t\t\t\t\t(this.scrollHeight > this.offsetHeight || this.scrollWidth > this.offsetWidth);\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.each(function () {\r\n\t\t\t\t\t\tvar t = $(this), o = t.offset();\r\n\t\t\t\t\t\tif(this.scrollHeight > this.offsetHeight) {\r\n\t\t\t\t\t\t\tif(o.top + t.height() - e.pageY < $.vakata.dnd.settings.scroll_proximity)\t{ vakata_dnd.scroll_t = 1; }\r\n\t\t\t\t\t\t\tif(e.pageY - o.top < $.vakata.dnd.settings.scroll_proximity)\t\t\t\t{ vakata_dnd.scroll_t = -1; }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(this.scrollWidth > this.offsetWidth) {\r\n\t\t\t\t\t\t\tif(o.left + t.width() - e.pageX < $.vakata.dnd.settings.scroll_proximity)\t{ vakata_dnd.scroll_l = 1; }\r\n\t\t\t\t\t\t\tif(e.pageX - o.left < $.vakata.dnd.settings.scroll_proximity)\t\t\t\t{ vakata_dnd.scroll_l = -1; }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(vakata_dnd.scroll_t || vakata_dnd.scroll_l) {\r\n\t\t\t\t\t\t\tvakata_dnd.scroll_e = $(this);\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\tif(!vakata_dnd.scroll_e) {\r\n\t\t\t\t\td  = $(document); w = $(window);\r\n\t\t\t\t\tdh = d.height(); wh = w.height();\r\n\t\t\t\t\tdw = d.width(); ww = w.width();\r\n\t\t\t\t\tdt = d.scrollTop(); dl = d.scrollLeft();\r\n\t\t\t\t\tif(dh > wh && e.pageY - dt < $.vakata.dnd.settings.scroll_proximity)\t\t{ vakata_dnd.scroll_t = -1;  }\r\n\t\t\t\t\tif(dh > wh && wh - (e.pageY - dt) < $.vakata.dnd.settings.scroll_proximity)\t{ vakata_dnd.scroll_t = 1; }\r\n\t\t\t\t\tif(dw > ww && e.pageX - dl < $.vakata.dnd.settings.scroll_proximity)\t\t{ vakata_dnd.scroll_l = -1; }\r\n\t\t\t\t\tif(dw > ww && ww - (e.pageX - dl) < $.vakata.dnd.settings.scroll_proximity)\t{ vakata_dnd.scroll_l = 1; }\r\n\t\t\t\t\tif(vakata_dnd.scroll_t || vakata_dnd.scroll_l) {\r\n\t\t\t\t\t\tvakata_dnd.scroll_e = d;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(vakata_dnd.scroll_e) { $.vakata.dnd._scroll(true); }\r\n\r\n\t\t\t\tif(vakata_dnd.helper) {\r\n\t\t\t\t\tht = parseInt(e.pageY + $.vakata.dnd.settings.helper_top, 10);\r\n\t\t\t\t\thl = parseInt(e.pageX + $.vakata.dnd.settings.helper_left, 10);\r\n\t\t\t\t\tif(dh && ht + 25 > dh) { ht = dh - 50; }\r\n\t\t\t\t\tif(dw && hl + vakata_dnd.helper_w > dw) { hl = dw - (vakata_dnd.helper_w + 2); }\r\n\t\t\t\t\tvakata_dnd.helper.css({\r\n\t\t\t\t\t\tleft\t: hl + \"px\",\r\n\t\t\t\t\t\ttop\t\t: ht + \"px\"\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered on the document when a drag is in progress\r\n\t\t\t\t * @event\r\n\t\t\t\t * @plugin dnd\r\n\t\t\t\t * @name dnd_move.vakata\r\n\t\t\t\t * @param {Mixed} data any data supplied with the call to $.vakata.dnd.start\r\n\t\t\t\t * @param {DOM} element the DOM element being dragged\r\n\t\t\t\t * @param {jQuery} helper the helper shown next to the mouse\r\n\t\t\t\t * @param {Object} event the event that caused this to trigger (most likely mousemove)\r\n\t\t\t\t */\r\n\t\t\t\t$.vakata.dnd._trigger(\"move\", e);\r\n\t\t\t\treturn false;\r\n\t\t\t},\r\n\t\t\tstop : function (e) {\r\n\t\t\t\tif(e.type === \"touchend\" && e.originalEvent && e.originalEvent.changedTouches && e.originalEvent.changedTouches[0]) {\r\n\t\t\t\t\te.pageX = e.originalEvent.changedTouches[0].pageX;\r\n\t\t\t\t\te.pageY = e.originalEvent.changedTouches[0].pageY;\r\n\t\t\t\t\te.target = document.elementFromPoint(e.originalEvent.changedTouches[0].pageX - window.pageXOffset, e.originalEvent.changedTouches[0].pageY - window.pageYOffset);\r\n\t\t\t\t}\r\n\t\t\t\tif(vakata_dnd.is_drag) {\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * triggered on the document when a drag stops (the dragged element is dropped)\r\n\t\t\t\t\t * @event\r\n\t\t\t\t\t * @plugin dnd\r\n\t\t\t\t\t * @name dnd_stop.vakata\r\n\t\t\t\t\t * @param {Mixed} data any data supplied with the call to $.vakata.dnd.start\r\n\t\t\t\t\t * @param {DOM} element the DOM element being dragged\r\n\t\t\t\t\t * @param {jQuery} helper the helper shown next to the mouse\r\n\t\t\t\t\t * @param {Object} event the event that caused the stop\r\n\t\t\t\t\t */\r\n\t\t\t\t\tif (e.target !== vakata_dnd.target) {\r\n\t\t\t\t\t\t$(vakata_dnd.target).off('click.vakata');\r\n\t\t\t\t\t}\r\n\t\t\t\t\t$.vakata.dnd._trigger(\"stop\", e);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif(e.type === \"touchend\" && e.target === vakata_dnd.target) {\r\n\t\t\t\t\t\tvar to = setTimeout(function () { $(e.target).click(); }, 100);\r\n\t\t\t\t\t\t$(e.target).one('click', function() { if(to) { clearTimeout(to); } });\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t$.vakata.dnd._clean();\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t};\r\n\t}($));\r\n\r\n\t// include the dnd plugin by default\r\n\t// $.jstree.defaults.plugins.push(\"dnd\");\r\n\r\n\treturn $;\r\n\t\r\n});\r\n\ndefine('skylark-widgets-hierarchy/addons/massload',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"../Hierarchy\"\r\n],function(langx,browser,eventer,noder,geom,$,jstree){\r\n\r\n\t\"use strict\";\r\n\r\n\tif($.jstree.plugins.massload) { return; }\r\n\r\n\t/**\r\n\t * massload configuration\r\n\t *\r\n\t * It is possible to set this to a standard jQuery-like AJAX config.\r\n\t * In addition to the standard jQuery ajax options here you can supply functions for `data` and `url`, the functions will be run in the current instance's scope and a param will be passed indicating which node IDs need to be loaded, the return value of those functions will be used.\r\n\t *\r\n\t * You can also set this to a function, that function will receive the node IDs being loaded as argument and a second param which is a function (callback) which should be called with the result.\r\n\t *\r\n\t * Both the AJAX and the function approach rely on the same return value - an object where the keys are the node IDs, and the value is the children of that node as an array.\r\n\t *\r\n\t *\t{\r\n\t *\t\t\"id1\" : [{ \"text\" : \"Child of ID1\", \"id\" : \"c1\" }, { \"text\" : \"Another child of ID1\", \"id\" : \"c2\" }],\r\n\t *\t\t\"id2\" : [{ \"text\" : \"Child of ID2\", \"id\" : \"c3\" }]\r\n\t *\t}\r\n\t * \r\n\t * @name $.jstree.defaults.massload\r\n\t * @plugin massload\r\n\t */\r\n\t$.jstree.defaults.massload = null;\r\n\t$.jstree.plugins.massload = function (options, parent) {\r\n\t\tthis.init = function (el, options) {\r\n\t\t\tthis._data.massload = {};\r\n\t\t\tparent.init.call(this, el, options);\r\n\t\t};\r\n\t\tthis._load_nodes = function (nodes, callback, is_callback, force_reload) {\r\n\t\t\tvar s = this.settings.massload,\r\n\t\t\t\tnodesString = JSON.stringify(nodes),\r\n\t\t\t\ttoLoad = [],\r\n\t\t\t\tm = this._model.data,\r\n\t\t\t\ti, j, dom;\r\n\t\t\tif (!is_callback) {\r\n\t\t\t\tfor(i = 0, j = nodes.length; i < j; i++) {\r\n\t\t\t\t\tif(!m[nodes[i]] || ( (!m[nodes[i]].state.loaded && !m[nodes[i]].state.failed) || force_reload) ) {\r\n\t\t\t\t\t\ttoLoad.push(nodes[i]);\r\n\t\t\t\t\t\tdom = this.get_node(nodes[i], true);\r\n\t\t\t\t\t\tif (dom && dom.length) {\r\n\t\t\t\t\t\t\tdom.addClass(\"jstree-loading\").attr('aria-busy',true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis._data.massload = {};\r\n\t\t\t\tif (toLoad.length) {\r\n\t\t\t\t\tif(langx.isFunction(s)) {\r\n\t\t\t\t\t\treturn s.call(this, toLoad, langx.proxy(function (data) {\r\n\t\t\t\t\t\t\tvar i, j;\r\n\t\t\t\t\t\t\tif(data) {\r\n\t\t\t\t\t\t\t\tfor(i in data) {\r\n\t\t\t\t\t\t\t\t\tif(data.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\t\t\tthis._data.massload[i] = data[i];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tfor(i = 0, j = nodes.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\tdom = this.get_node(nodes[i], true);\r\n\t\t\t\t\t\t\t\tif (dom && dom.length) {\r\n\t\t\t\t\t\t\t\t\tdom.removeClass(\"jstree-loading\").attr('aria-busy',false);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tparent._load_nodes.call(this, nodes, callback, is_callback, force_reload);\r\n\t\t\t\t\t\t}, this));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(typeof s === 'object' && s && s.url) {\r\n\t\t\t\t\t\ts = langx.extend(true, {}, s);\r\n\t\t\t\t\t\tif(langx.isFunction(s.url)) {\r\n\t\t\t\t\t\t\ts.url = s.url.call(this, toLoad);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(langx.isFunction(s.data)) {\r\n\t\t\t\t\t\t\ts.data = s.data.call(this, toLoad);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn ajax(s)\r\n\t\t\t\t\t\t\t.done(langx.proxy(function (data,t,x) {\r\n\t\t\t\t\t\t\t\t\tvar i, j;\r\n\t\t\t\t\t\t\t\t\tif(data) {\r\n\t\t\t\t\t\t\t\t\t\tfor(i in data) {\r\n\t\t\t\t\t\t\t\t\t\t\tif(data.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tthis._data.massload[i] = data[i];\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tfor(i = 0, j = nodes.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\t\tdom = this.get_node(nodes[i], true);\r\n\t\t\t\t\t\t\t\t\t\tif (dom && dom.length) {\r\n\t\t\t\t\t\t\t\t\t\t\tdom.removeClass(\"jstree-loading\").attr('aria-busy',false);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tparent._load_nodes.call(this, nodes, callback, is_callback, force_reload);\r\n\t\t\t\t\t\t\t\t}, this))\r\n\t\t\t\t\t\t\t.fail(langx.proxy(function (f) {\r\n\t\t\t\t\t\t\t\t\tparent._load_nodes.call(this, nodes, callback, is_callback, force_reload);\r\n\t\t\t\t\t\t\t\t}, this));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn parent._load_nodes.call(this, nodes, callback, is_callback, force_reload);\r\n\t\t};\r\n\t\tthis._load_node = function (obj, callback) {\r\n\t\t\tvar data = this._data.massload[obj.id],\r\n\t\t\t\trslt = null, dom;\r\n\t\t\tif(data) {\r\n\t\t\t\trslt = this[typeof data === 'string' ? '_append_html_data' : '_append_json_data'](\r\n\t\t\t\t\tobj,\r\n\t\t\t\t\ttypeof data === 'string' ? $(langx.parseHTML(data)).filter(function () { return this.nodeType !== 3; }) : data,\r\n\t\t\t\t\tfunction (status) { callback.call(this, status); }\r\n\t\t\t\t);\r\n\t\t\t\tdom = this.get_node(obj.id, true);\r\n\t\t\t\tif (dom && dom.length) {\r\n\t\t\t\t\tdom.removeClass(\"jstree-loading\").attr('aria-busy',false);\r\n\t\t\t\t}\r\n\t\t\t\tdelete this._data.massload[obj.id];\r\n\t\t\t\treturn rslt;\r\n\t\t\t}\r\n\t\t\treturn parent._load_node.call(this, obj, callback);\r\n\t\t};\r\n\t};\r\n\r\n\treturn $;\r\n\t\r\n});\ndefine('skylark-widgets-hierarchy/addons/search',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"../Hierarchy\"\r\n],function(langx,browser,eventer,noder,geom,$,jstree){\r\n\r\n\t\"use strict\";\r\n\r\n\tif($.jstree.plugins.search) { return; }\r\n\r\n\t/**\r\n\t * stores all defaults for the search plugin\r\n\t * @name $.jstree.defaults.search\r\n\t * @plugin search\r\n\t */\r\n\t$.jstree.defaults.search = {\r\n\t\t/**\r\n\t\t * a jQuery-like AJAX config, which jstree uses if a server should be queried for results.\r\n\t\t *\r\n\t\t * A `str` (which is the search string) parameter will be added with the request, an optional `inside` parameter will be added if the search is limited to a node id. The expected result is a JSON array with nodes that need to be opened so that matching nodes will be revealed.\r\n\t\t * Leave this setting as `false` to not query the server. You can also set this to a function, which will be invoked in the instance's scope and receive 3 parameters - the search string, the callback to call with the array of nodes to load, and the optional node ID to limit the search to\r\n\t\t * @name $.jstree.defaults.search.ajax\r\n\t\t * @plugin search\r\n\t\t */\r\n\t\tajax : false,\r\n\t\t/**\r\n\t\t * Indicates if the search should be fuzzy or not (should `chnd3` match `child node 3`). Default is `false`.\r\n\t\t * @name $.jstree.defaults.search.fuzzy\r\n\t\t * @plugin search\r\n\t\t */\r\n\t\tfuzzy : false,\r\n\t\t/**\r\n\t\t * Indicates if the search should be case sensitive. Default is `false`.\r\n\t\t * @name $.jstree.defaults.search.case_sensitive\r\n\t\t * @plugin search\r\n\t\t */\r\n\t\tcase_sensitive : false,\r\n\t\t/**\r\n\t\t * Indicates if the tree should be filtered (by default) to show only matching nodes (keep in mind this can be a heavy on large trees in old browsers).\r\n\t\t * This setting can be changed at runtime when calling the search method. Default is `false`.\r\n\t\t * @name $.jstree.defaults.search.show_only_matches\r\n\t\t * @plugin search\r\n\t\t */\r\n\t\tshow_only_matches : false,\r\n\t\t/**\r\n\t\t * Indicates if the children of matched element are shown (when show_only_matches is true)\r\n\t\t * This setting can be changed at runtime when calling the search method. Default is `false`.\r\n\t\t * @name $.jstree.defaults.search.show_only_matches_children\r\n\t\t * @plugin search\r\n\t\t */\r\n\t\tshow_only_matches_children : false,\r\n\t\t/**\r\n\t\t * Indicates if all nodes opened to reveal the search result, should be closed when the search is cleared or a new search is performed. Default is `true`.\r\n\t\t * @name $.jstree.defaults.search.close_opened_onclear\r\n\t\t * @plugin search\r\n\t\t */\r\n\t\tclose_opened_onclear : true,\r\n\t\t/**\r\n\t\t * Indicates if only leaf nodes should be included in search results. Default is `false`.\r\n\t\t * @name $.jstree.defaults.search.search_leaves_only\r\n\t\t * @plugin search\r\n\t\t */\r\n\t\tsearch_leaves_only : false,\r\n\t\t/**\r\n\t\t * If set to a function it wil be called in the instance's scope with two arguments - search string and node (where node will be every node in the structure, so use with caution).\r\n\t\t * If the function returns a truthy value the node will be considered a match (it might not be displayed if search_only_leaves is set to true and the node is not a leaf). Default is `false`.\r\n\t\t * @name $.jstree.defaults.search.search_callback\r\n\t\t * @plugin search\r\n\t\t */\r\n\t\tsearch_callback : false\r\n\t};\r\n\r\n\t$.jstree.plugins.search = function (options, parent) {\r\n\t\tthis.bind = function () {\r\n\t\t\tparent.bind.call(this);\r\n\r\n\t\t\tthis._data.search.str = \"\";\r\n\t\t\tthis._data.search.dom = $();\r\n\t\t\tthis._data.search.res = [];\r\n\t\t\tthis._data.search.opn = [];\r\n\t\t\tthis._data.search.som = false;\r\n\t\t\tthis._data.search.smc = false;\r\n\t\t\tthis._data.search.hdn = [];\r\n\r\n\t\t\tthis.element\r\n\t\t\t\t.on(\"search.jstree\", $.proxy(function (e, data) {\r\n\t\t\t\t\t\tif(this._data.search.som && data.res.length) {\r\n\t\t\t\t\t\t\tvar m = this._model.data, i, j, p = [], k, l;\r\n\t\t\t\t\t\t\tfor(i = 0, j = data.res.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\tif(m[data.res[i]] && !m[data.res[i]].state.hidden) {\r\n\t\t\t\t\t\t\t\t\tp.push(data.res[i]);\r\n\t\t\t\t\t\t\t\t\tp = p.concat(m[data.res[i]].parents);\r\n\t\t\t\t\t\t\t\t\tif(this._data.search.smc) {\r\n\t\t\t\t\t\t\t\t\t\tfor (k = 0, l = m[data.res[i]].children_d.length; k < l; k++) {\r\n\t\t\t\t\t\t\t\t\t\t\tif (m[m[data.res[i]].children_d[k]] && !m[m[data.res[i]].children_d[k]].state.hidden) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tp.push(m[data.res[i]].children_d[k]);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tp = $.vakata.array_remove_item($.vakata.array_unique(p), $.jstree.root);\r\n\t\t\t\t\t\t\tthis._data.search.hdn = this.hide_all(true);\r\n\t\t\t\t\t\t\tthis.show_node(p, true);\r\n\t\t\t\t\t\t\tthis.redraw(true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"clear_search.jstree\", langx.proxy(function (e, data) {\r\n\t\t\t\t\t\tif(this._data.search.som && data.res.length) {\r\n\t\t\t\t\t\t\tthis.show_node(this._data.search.hdn, true);\r\n\t\t\t\t\t\t\tthis.redraw(true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this));\r\n\t\t};\r\n\t\t/**\r\n\t\t * used to search the tree nodes for a given string\r\n\t\t * @name search(str [, skip_async])\r\n\t\t * @param {String} str the search string\r\n\t\t * @param {Boolean} skip_async if set to true server will not be queried even if configured\r\n\t\t * @param {Boolean} show_only_matches if set to true only matching nodes will be shown (keep in mind this can be very slow on large trees or old browsers)\r\n\t\t * @param {mixed} inside an optional node to whose children to limit the search\r\n\t\t * @param {Boolean} append if set to true the results of this search are appended to the previous search\r\n\t\t * @plugin search\r\n\t\t * @trigger search.jstree\r\n\t\t */\r\n\t\tthis.search = function (str, skip_async, show_only_matches, inside, append, show_only_matches_children) {\r\n\t\t\tif(str === false || langx.trim(str.toString()) === \"\") {\r\n\t\t\t\treturn this.clear_search();\r\n\t\t\t}\r\n\t\t\tinside = this.get_node(inside);\r\n\t\t\tinside = inside && inside.id ? inside.id : null;\r\n\t\t\tstr = str.toString();\r\n\t\t\tvar s = this.settings.search,\r\n\t\t\t\ta = s.ajax ? s.ajax : false,\r\n\t\t\t\tm = this._model.data,\r\n\t\t\t\tf = null,\r\n\t\t\t\tr = [],\r\n\t\t\t\tp = [], i, j;\r\n\t\t\tif(this._data.search.res.length && !append) {\r\n\t\t\t\tthis.clear_search();\r\n\t\t\t}\r\n\t\t\tif(show_only_matches === undefined) {\r\n\t\t\t\tshow_only_matches = s.show_only_matches;\r\n\t\t\t}\r\n\t\t\tif(show_only_matches_children === undefined) {\r\n\t\t\t\tshow_only_matches_children = s.show_only_matches_children;\r\n\t\t\t}\r\n\t\t\tif(!skip_async && a !== false) {\r\n\t\t\t\tif(langx.isFunction(a)) {\r\n\t\t\t\t\treturn a.call(this, str, langx.proxy(function (d) {\r\n\t\t\t\t\t\t\tif(d && d.d) { d = d.d; }\r\n\t\t\t\t\t\t\tthis._load_nodes(!langx.isArray(d) ? [] : $.vakata.array_unique(d), function () {\r\n\t\t\t\t\t\t\t\tthis.search(str, true, show_only_matches, inside, append, show_only_matches_children);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}, this), inside);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\ta = langx.extend({}, a);\r\n\t\t\t\t\tif(!a.data) { a.data = {}; }\r\n\t\t\t\t\ta.data.str = str;\r\n\t\t\t\t\tif(inside) {\r\n\t\t\t\t\t\ta.data.inside = inside;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (this._data.search.lastRequest) {\r\n\t\t\t\t\t\tthis._data.search.lastRequest.abort();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._data.search.lastRequest = ajax(a)\r\n\t\t\t\t\t\t.fail(langx.proxy(function () {\r\n\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'ajax', 'plugin' : 'search', 'id' : 'search_01', 'reason' : 'Could not load search parents', 'data' : JSON.stringify(a) };\r\n\t\t\t\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\r\n\t\t\t\t\t\t}, this))\r\n\t\t\t\t\t\t.done(langx.proxy(function (d) {\r\n\t\t\t\t\t\t\tif(d && d.d) { d = d.d; }\r\n\t\t\t\t\t\t\tthis._load_nodes(!langx.isArray(d) ? [] : $.vakata.array_unique(d), function () {\r\n\t\t\t\t\t\t\t\tthis.search(str, true, show_only_matches, inside, append, show_only_matches_children);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}, this));\r\n\t\t\t\t\treturn this._data.search.lastRequest;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(!append) {\r\n\t\t\t\tthis._data.search.str = str;\r\n\t\t\t\tthis._data.search.dom = $();\r\n\t\t\t\tthis._data.search.res = [];\r\n\t\t\t\tthis._data.search.opn = [];\r\n\t\t\t\tthis._data.search.som = show_only_matches;\r\n\t\t\t\tthis._data.search.smc = show_only_matches_children;\r\n\t\t\t}\r\n\r\n\t\t\tf = new $.vakata.search(str, true, { caseSensitive : s.case_sensitive, fuzzy : s.fuzzy });\r\n\t\t\tlangx.each(m[inside ? inside : $.jstree.root].children_d, function (ii, i) {\r\n\t\t\t\tvar v = m[i];\r\n\t\t\t\tif(v.text && !v.state.hidden && (!s.search_leaves_only || (v.state.loaded && v.children.length === 0)) && ( (s.search_callback && s.search_callback.call(this, str, v)) || (!s.search_callback && f.search(v.text).isMatch) ) ) {\r\n\t\t\t\t\tr.push(i);\r\n\t\t\t\t\tp = p.concat(v.parents);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif(r.length) {\r\n\t\t\t\tp = $.vakata.array_unique(p);\r\n\t\t\t\tfor(i = 0, j = p.length; i < j; i++) {\r\n\t\t\t\t\tif(p[i] !== $.jstree.root && m[p[i]] && this.open_node(p[i], null, 0) === true) {\r\n\t\t\t\t\t\tthis._data.search.opn.push(p[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(!append) {\r\n\t\t\t\t\tthis._data.search.dom = $(this.element[0].querySelectorAll('#' + langx.map(r, function (v) { return \"0123456789\".indexOf(v[0]) !== -1 ? '\\\\3' + v[0] + ' ' + v.substr(1).replace($.jstree.idregex,'\\\\$&') : v.replace($.jstree.idregex,'\\\\$&'); }).join(', #')));\r\n\t\t\t\t\tthis._data.search.res = r;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._data.search.dom = this._data.search.dom.add($(this.element[0].querySelectorAll('#' + langx.map(r, function (v) { return \"0123456789\".indexOf(v[0]) !== -1 ? '\\\\3' + v[0] + ' ' + v.substr(1).replace($.jstree.idregex,'\\\\$&') : v.replace($.jstree.idregex,'\\\\$&'); }).join(', #'))));\r\n\t\t\t\t\tthis._data.search.res = $.vakata.array_unique(this._data.search.res.concat(r));\r\n\t\t\t\t}\r\n\t\t\t\tthis._data.search.dom.children(\".jstree-anchor\").addClass('jstree-search');\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * triggered after search is complete\r\n\t\t\t * @event\r\n\t\t\t * @name search.jstree\r\n\t\t\t * @param {jQuery} nodes a jQuery collection of matching nodes\r\n\t\t\t * @param {String} str the search string\r\n\t\t\t * @param {Array} res a collection of objects represeing the matching nodes\r\n\t\t\t * @plugin search\r\n\t\t\t */\r\n\t\t\tthis.trigger('search', { nodes : this._data.search.dom, str : str, res : this._data.search.res, show_only_matches : show_only_matches });\r\n\t\t};\r\n\t\t/**\r\n\t\t * used to clear the last search (removes classes and shows all nodes if filtering is on)\r\n\t\t * @name clear_search()\r\n\t\t * @plugin search\r\n\t\t * @trigger clear_search.jstree\r\n\t\t */\r\n\t\tthis.clear_search = function () {\r\n\t\t\tif(this.settings.search.close_opened_onclear) {\r\n\t\t\t\tthis.close_node(this._data.search.opn, 0);\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * triggered after search is complete\r\n\t\t\t * @event\r\n\t\t\t * @name clear_search.jstree\r\n\t\t\t * @param {jQuery} nodes a jQuery collection of matching nodes (the result from the last search)\r\n\t\t\t * @param {String} str the search string (the last search string)\r\n\t\t\t * @param {Array} res a collection of objects represeing the matching nodes (the result from the last search)\r\n\t\t\t * @plugin search\r\n\t\t\t */\r\n\t\t\tthis.trigger('clear_search', { 'nodes' : this._data.search.dom, str : this._data.search.str, res : this._data.search.res });\r\n\t\t\tif(this._data.search.res.length) {\r\n\t\t\t\tthis._data.search.dom = $(this.element[0].querySelectorAll('#' + langx.map(this._data.search.res, function (v) {\r\n\t\t\t\t\treturn \"0123456789\".indexOf(v[0]) !== -1 ? '\\\\3' + v[0] + ' ' + v.substr(1).replace($.jstree.idregex,'\\\\$&') : v.replace($.jstree.idregex,'\\\\$&');\r\n\t\t\t\t}).join(', #')));\r\n\t\t\t\tthis._data.search.dom.children(\".jstree-anchor\").removeClass(\"jstree-search\");\r\n\t\t\t}\r\n\t\t\tthis._data.search.str = \"\";\r\n\t\t\tthis._data.search.res = [];\r\n\t\t\tthis._data.search.opn = [];\r\n\t\t\tthis._data.search.dom = $();\r\n\t\t};\r\n\r\n\t\tthis.redraw_node = function(obj, deep, callback, force_render) {\r\n\t\t\tobj = parent.redraw_node.apply(this, arguments);\r\n\t\t\tif(obj) {\r\n\t\t\t\tif(langx.inArray(obj.id, this._data.search.res) !== -1) {\r\n\t\t\t\t\tvar i, j, tmp = null;\r\n\t\t\t\t\tfor(i = 0, j = obj.childNodes.length; i < j; i++) {\r\n\t\t\t\t\t\tif(obj.childNodes[i] && obj.childNodes[i].className && obj.childNodes[i].className.indexOf(\"jstree-anchor\") !== -1) {\r\n\t\t\t\t\t\t\ttmp = obj.childNodes[i];\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(tmp) {\r\n\t\t\t\t\t\ttmp.className += ' jstree-search';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn obj;\r\n\t\t};\r\n\t};\r\n\r\n\t// helpers\r\n\t(function ($) {\r\n\t\t// from http://kiro.me/projects/fuse.html\r\n\t\t$.vakata.search = function(pattern, txt, options) {\r\n\t\t\toptions = options || {};\r\n\t\t\toptions = langx.extend({}, $.vakata.search.defaults, options);\r\n\t\t\tif(options.fuzzy !== false) {\r\n\t\t\t\toptions.fuzzy = true;\r\n\t\t\t}\r\n\t\t\tpattern = options.caseSensitive ? pattern : pattern.toLowerCase();\r\n\t\t\tvar MATCH_LOCATION\t= options.location,\r\n\t\t\t\tMATCH_DISTANCE\t= options.distance,\r\n\t\t\t\tMATCH_THRESHOLD\t= options.threshold,\r\n\t\t\t\tpatternLen = pattern.length,\r\n\t\t\t\tmatchmask, pattern_alphabet, match_bitapScore, search;\r\n\t\t\tif(patternLen > 32) {\r\n\t\t\t\toptions.fuzzy = false;\r\n\t\t\t}\r\n\t\t\tif(options.fuzzy) {\r\n\t\t\t\tmatchmask = 1 << (patternLen - 1);\r\n\t\t\t\tpattern_alphabet = (function () {\r\n\t\t\t\t\tvar mask = {},\r\n\t\t\t\t\t\ti = 0;\r\n\t\t\t\t\tfor (i = 0; i < patternLen; i++) {\r\n\t\t\t\t\t\tmask[pattern.charAt(i)] = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor (i = 0; i < patternLen; i++) {\r\n\t\t\t\t\t\tmask[pattern.charAt(i)] |= 1 << (patternLen - i - 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn mask;\r\n\t\t\t\t}());\r\n\t\t\t\tmatch_bitapScore = function (e, x) {\r\n\t\t\t\t\tvar accuracy = e / patternLen,\r\n\t\t\t\t\t\tproximity = Math.abs(MATCH_LOCATION - x);\r\n\t\t\t\t\tif(!MATCH_DISTANCE) {\r\n\t\t\t\t\t\treturn proximity ? 1.0 : accuracy;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn accuracy + (proximity / MATCH_DISTANCE);\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\tsearch = function (text) {\r\n\t\t\t\ttext = options.caseSensitive ? text : text.toLowerCase();\r\n\t\t\t\tif(pattern === text || text.indexOf(pattern) !== -1) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tisMatch: true,\r\n\t\t\t\t\t\tscore: 0\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\tif(!options.fuzzy) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tisMatch: false,\r\n\t\t\t\t\t\tscore: 1\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\tvar i, j,\r\n\t\t\t\t\ttextLen = text.length,\r\n\t\t\t\t\tscoreThreshold = MATCH_THRESHOLD,\r\n\t\t\t\t\tbestLoc = text.indexOf(pattern, MATCH_LOCATION),\r\n\t\t\t\t\tbinMin, binMid,\r\n\t\t\t\t\tbinMax = patternLen + textLen,\r\n\t\t\t\t\tlastRd, start, finish, rd, charMatch,\r\n\t\t\t\t\tscore = 1,\r\n\t\t\t\t\tlocations = [];\r\n\t\t\t\tif (bestLoc !== -1) {\r\n\t\t\t\t\tscoreThreshold = Math.min(match_bitapScore(0, bestLoc), scoreThreshold);\r\n\t\t\t\t\tbestLoc = text.lastIndexOf(pattern, MATCH_LOCATION + patternLen);\r\n\t\t\t\t\tif (bestLoc !== -1) {\r\n\t\t\t\t\t\tscoreThreshold = Math.min(match_bitapScore(0, bestLoc), scoreThreshold);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbestLoc = -1;\r\n\t\t\t\tfor (i = 0; i < patternLen; i++) {\r\n\t\t\t\t\tbinMin = 0;\r\n\t\t\t\t\tbinMid = binMax;\r\n\t\t\t\t\twhile (binMin < binMid) {\r\n\t\t\t\t\t\tif (match_bitapScore(i, MATCH_LOCATION + binMid) <= scoreThreshold) {\r\n\t\t\t\t\t\t\tbinMin = binMid;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tbinMax = binMid;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbinMid = Math.floor((binMax - binMin) / 2 + binMin);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbinMax = binMid;\r\n\t\t\t\t\tstart = Math.max(1, MATCH_LOCATION - binMid + 1);\r\n\t\t\t\t\tfinish = Math.min(MATCH_LOCATION + binMid, textLen) + patternLen;\r\n\t\t\t\t\trd = new Array(finish + 2);\r\n\t\t\t\t\trd[finish + 1] = (1 << i) - 1;\r\n\t\t\t\t\tfor (j = finish; j >= start; j--) {\r\n\t\t\t\t\t\tcharMatch = pattern_alphabet[text.charAt(j - 1)];\r\n\t\t\t\t\t\tif (i === 0) {\r\n\t\t\t\t\t\t\trd[j] = ((rd[j + 1] << 1) | 1) & charMatch;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\trd[j] = ((rd[j + 1] << 1) | 1) & charMatch | (((lastRd[j + 1] | lastRd[j]) << 1) | 1) | lastRd[j + 1];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (rd[j] & matchmask) {\r\n\t\t\t\t\t\t\tscore = match_bitapScore(i, j - 1);\r\n\t\t\t\t\t\t\tif (score <= scoreThreshold) {\r\n\t\t\t\t\t\t\t\tscoreThreshold = score;\r\n\t\t\t\t\t\t\t\tbestLoc = j - 1;\r\n\t\t\t\t\t\t\t\tlocations.push(bestLoc);\r\n\t\t\t\t\t\t\t\tif (bestLoc > MATCH_LOCATION) {\r\n\t\t\t\t\t\t\t\t\tstart = Math.max(1, 2 * MATCH_LOCATION - bestLoc);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (match_bitapScore(i + 1, MATCH_LOCATION) > scoreThreshold) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlastRd = rd;\r\n\t\t\t\t}\r\n\t\t\t\treturn {\r\n\t\t\t\t\tisMatch: bestLoc >= 0,\r\n\t\t\t\t\tscore: score\r\n\t\t\t\t};\r\n\t\t\t};\r\n\t\t\treturn txt === true ? { 'search' : search } : search(txt);\r\n\t\t};\r\n\t\t$.vakata.search.defaults = {\r\n\t\t\tlocation : 0,\r\n\t\t\tdistance : 100,\r\n\t\t\tthreshold : 0.6,\r\n\t\t\tfuzzy : false,\r\n\t\t\tcaseSensitive : false\r\n\t\t};\r\n\t}($));\r\n\r\n\t// include the search plugin by default\r\n\t// $.jstree.defaults.plugins.push(\"search\");\r\n\r\n\treturn $;\r\n\t\r\n});\r\n\ndefine('skylark-widgets-hierarchy/addons/sort',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"../Hierarchy\"\r\n],function(langx,browser,eventer,noder,geom,$,jstree){\r\n\r\n\t\"use strict\";\r\n\r\n\tif($.jstree.plugins.sort) { return; }\r\n\r\n\t/**\r\n\t * the settings function used to sort the nodes.\r\n\t * It is executed in the tree's context, accepts two nodes as arguments and should return `1` or `-1`.\r\n\t * @name $.jstree.defaults.sort\r\n\t * @plugin sort\r\n\t */\r\n\t$.jstree.defaults.sort = function (a, b) {\r\n\t\t//return this.get_type(a) === this.get_type(b) ? (this.get_text(a) > this.get_text(b) ? 1 : -1) : this.get_type(a) >= this.get_type(b);\r\n\t\treturn this.get_text(a) > this.get_text(b) ? 1 : -1;\r\n\t};\r\n\t$.jstree.plugins.sort = function (options, parent) {\r\n\t\tthis.bind = function () {\r\n\t\t\tparent.bind.call(this);\r\n\t\t\tthis.element\r\n\t\t\t\t.on(\"model.jstree\", langx.proxy(function (e, data) {\r\n\t\t\t\t\t\tthis.sort(data.parent, true);\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"rename_node.jstree create_node.jstree\", langx.proxy(function (e, data) {\r\n\t\t\t\t\t\tthis.sort(data.parent || data.node.parent, false);\r\n\t\t\t\t\t\tthis.redraw_node(data.parent || data.node.parent, true);\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"move_node.jstree copy_node.jstree\", langx.proxy(function (e, data) {\r\n\t\t\t\t\t\tthis.sort(data.parent, false);\r\n\t\t\t\t\t\tthis.redraw_node(data.parent, true);\r\n\t\t\t\t\t}, this));\r\n\t\t};\r\n\t\t/**\r\n\t\t * used to sort a node's children\r\n\t\t * @private\r\n\t\t * @name sort(obj [, deep])\r\n\t\t * @param  {mixed} obj the node\r\n\t\t * @param {Boolean} deep if set to `true` nodes are sorted recursively.\r\n\t\t * @plugin sort\r\n\t\t * @trigger search.jstree\r\n\t\t */\r\n\t\tthis.sort = function (obj, deep) {\r\n\t\t\tvar i, j;\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(obj && obj.children && obj.children.length) {\r\n\t\t\t\tobj.children.sort(langx.proxy(this.settings.sort, this));\r\n\t\t\t\tif(deep) {\r\n\t\t\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\r\n\t\t\t\t\t\tthis.sort(obj.children_d[i], false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\t// include the sort plugin by default\r\n\t// $.jstree.defaults.plugins.push(\"sort\");\r\n\r\n\treturn $;\r\n\t\r\n});\ndefine('skylark-widgets-hierarchy/addons/state',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"../Hierarchy\"\r\n],function(langx,browser,eventer,noder,geom,$,jstree){\r\n\r\n\t\"use strict\";\r\n\r\n\tif($.jstree.plugins.state) { return; }\r\n\r\n\tvar to = false;\r\n\t/**\r\n\t * stores all defaults for the state plugin\r\n\t * @name $.jstree.defaults.state\r\n\t * @plugin state\r\n\t */\r\n\t$.jstree.defaults.state = {\r\n\t\t/**\r\n\t\t * A string for the key to use when saving the current tree (change if using multiple trees in your project). Defaults to `jstree`.\r\n\t\t * @name $.jstree.defaults.state.key\r\n\t\t * @plugin state\r\n\t\t */\r\n\t\tkey\t\t: 'jstree',\r\n\t\t/**\r\n\t\t * A space separated list of events that trigger a state save. Defaults to `changed.jstree open_node.jstree close_node.jstree`.\r\n\t\t * @name $.jstree.defaults.state.events\r\n\t\t * @plugin state\r\n\t\t */\r\n\t\tevents\t: 'changed.jstree open_node.jstree close_node.jstree check_node.jstree uncheck_node.jstree',\r\n\t\t/**\r\n\t\t * Time in milliseconds after which the state will expire. Defaults to 'false' meaning - no expire.\r\n\t\t * @name $.jstree.defaults.state.ttl\r\n\t\t * @plugin state\r\n\t\t */\r\n\t\tttl\t\t: false,\r\n\t\t/**\r\n\t\t * A function that will be executed prior to restoring state with one argument - the state object. Can be used to clear unwanted parts of the state.\r\n\t\t * @name $.jstree.defaults.state.filter\r\n\t\t * @plugin state\r\n\t\t */\r\n\t\tfilter\t: false,\r\n\t\t/**\r\n\t\t * Should loaded nodes be restored (setting this to true means that it is possible that the whole tree will be loaded for some users - use with caution). Defaults to `false`\r\n\t\t * @name $.jstree.defaults.state.preserve_loaded\r\n\t\t * @plugin state\r\n\t\t */\r\n\t\tpreserve_loaded : false\r\n\t};\r\n\t$.jstree.plugins.state = function (options, parent) {\r\n\t\tthis.bind = function () {\r\n\t\t\tparent.bind.call(this);\r\n\t\t\tvar bind = langx.proxy(function () {\r\n\t\t\t\tthis.element.on(this.settings.state.events, langx.proxy(function () {\r\n\t\t\t\t\tif(to) { clearTimeout(to); }\r\n\t\t\t\t\tto = setTimeout(langx.proxy(function () { this.save_state(); }, this), 100);\r\n\t\t\t\t}, this));\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when the state plugin is finished restoring the state (and immediately after ready if there is no state to restore).\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name state_ready.jstree\r\n\t\t\t\t * @plugin state\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('state_ready');\r\n\t\t\t}, this);\r\n\t\t\tthis.element\r\n\t\t\t\t.on(\"ready.jstree\", langx.proxy(function (e, data) {\r\n\t\t\t\t\t\tthis.element.one(\"restore_state.jstree\", bind);\r\n\t\t\t\t\t\tif(!this.restore_state()) { bind(); }\r\n\t\t\t\t\t}, this));\r\n\t\t};\r\n\t\t/**\r\n\t\t * save the state\r\n\t\t * @name save_state()\r\n\t\t * @plugin state\r\n\t\t */\r\n\t\tthis.save_state = function () {\r\n\t\t\tvar tm = this.get_state();\r\n\t\t\tif (!this.settings.state.preserve_loaded) {\r\n\t\t\t\tdelete tm.core.loaded;\r\n\t\t\t}\r\n\t\t\tvar st = { 'state' : tm, 'ttl' : this.settings.state.ttl, 'sec' : +(new Date()) };\r\n\t\t\t$.vakata.storage.set(this.settings.state.key, JSON.stringify(st));\r\n\t\t};\r\n\t\t/**\r\n\t\t * restore the state from the user's computer\r\n\t\t * @name restore_state()\r\n\t\t * @plugin state\r\n\t\t */\r\n\t\tthis.restore_state = function () {\r\n\t\t\tvar k = $.vakata.storage.get(this.settings.state.key);\r\n\t\t\tif(!!k) { try { k = JSON.parse(k); } catch(ex) { return false; } }\r\n\t\t\tif(!!k && k.ttl && k.sec && +(new Date()) - k.sec > k.ttl) { return false; }\r\n\t\t\tif(!!k && k.state) { k = k.state; }\r\n\t\t\tif(!!k && langx.isFunction(this.settings.state.filter)) { k = this.settings.state.filter.call(this, k); }\r\n\t\t\tif(!!k) {\r\n\t\t\t\tif (!this.settings.state.preserve_loaded) {\r\n\t\t\t\t\tdelete k.core.loaded;\r\n\t\t\t\t}\r\n\t\t\t\tthis.element.one(\"set_state.jstree\", function (e, data) { data.instance.trigger('restore_state', { 'state' : langx.extend(true, {}, k) }); });\r\n\t\t\t\tthis.set_state(k);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\t\t/**\r\n\t\t * clear the state on the user's computer\r\n\t\t * @name clear_state()\r\n\t\t * @plugin state\r\n\t\t */\r\n\t\tthis.clear_state = function () {\r\n\t\t\treturn $.vakata.storage.del(this.settings.state.key);\r\n\t\t};\r\n\t};\r\n\r\n\t(function ($, undefined) {\r\n\t\t$.vakata.storage = {\r\n\t\t\t// simply specifying the functions in FF throws an error\r\n\t\t\tset : function (key, val) { return window.localStorage.setItem(key, val); },\r\n\t\t\tget : function (key) { return window.localStorage.getItem(key); },\r\n\t\t\tdel : function (key) { return window.localStorage.removeItem(key); }\r\n\t\t};\r\n\t}($));\r\n\r\n\t// include the state plugin by default\r\n\t// $.jstree.defaults.plugins.push(\"state\");\r\n\r\n\treturn $;\r\n\t\r\n});\ndefine('skylark-widgets-hierarchy/addons/treegrid',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"./menu\",\r\n  \"../Hierarchy\"\r\n],function(langx,browser,eventer,noder,geom,$,menu,jstree){\r\n    var BLANKRE = /^\\s*$/g,\r\n        IDREGEX = /[\\\\:&!^|()\\[\\]<>@*'+~#\";,= \\/${}%]/g,\r\n        escapeId = function(id) {\r\n            return (id || \"\").replace(IDREGEX, '\\\\$&');\r\n        },\r\n        NODE_DATA_ATTR = \"data-jstreegrid\",\r\n        COL_DATA_ATTR = \"data-jstreegrid-column\",\r\n        SEARCHCLASS = \"jstree-search\",\r\n        SPECIAL_TITLE = \"_DATA_\",\r\n        LEVELINDENT = 24,\r\n        styled = false,\r\n        MINCOLWIDTH = 10,\r\n        generateCellId = function(tree, id) {\r\n            return (\"jstree_\" + tree + \"_grid_\" + escapeId(id) + \"_col\");\r\n        },\r\n        getIds = function(nodes) {\r\n            return langx.makeArray(nodes.map(function() {\r\n                return this.id;\r\n            }));\r\n        },\r\n        findDataCell = function(uniq, ids, col, scope) {\r\n            if (scope == undefined) {\r\n                scope = $();\r\n            };\r\n            if (ids === null || ids === undefined || ids.length === 0) {\r\n                return scope;\r\n            }\r\n            var ret = $(),\r\n                columns = [].concat(col),\r\n                cellId;\r\n            if (typeof(ids) === \"string\") {\r\n                cellId = generateCellId(uniq, ids);\r\n                ret = columns.map(function(col) {\r\n                    return \"#\" + cellId + col;\r\n                }).join(\", \");\r\n            } else {\r\n                ret = []\r\n                ids.forEach(function(elm, i) {\r\n                    var cellId = generateCellId(uniq, elm);\r\n                    ret = ret.concat(columns.map(function(col) {\r\n                        return \"#\" + cellId + col;\r\n                    }));\r\n                });\r\n                ret = ret.join(\", \");\r\n            }\r\n            return columns.length == 1 ? scope.find(ret) : $(ret);\r\n        },\r\n        isClickedSep = false,\r\n        toResize = null,\r\n        oldMouseX = 0,\r\n        newMouseX = 0,\r\n\r\n        /*jslint regexp:true */\r\n        htmlstripre = /<\\/?[^>]+>/gi,\r\n        /*jslint regexp:false */\r\n\r\n        getIndent = function(node, tree) {\r\n            var div, i, li, width;\r\n\r\n            // did we already save it for this tree?\r\n            tree._gridSettings = tree._gridSettings || {};\r\n            if (tree._gridSettings.indent > 0) {\r\n                width = tree._gridSettings.indent;\r\n            } else {\r\n                // create a new div on the DOM but not visible on the page\r\n                div = $(\"<div></div>\");\r\n                i = node.prev(\"i\");\r\n                li = i.parent();\r\n                // add to that div all of the classes on the tree root\r\n                div.addClass(tree.get_node(\"#\", true).attr(\"class\"));\r\n\r\n                // move the li to the temporary div root\r\n                li.appendTo(div);\r\n\r\n                // attach to the body quickly\r\n                div.appendTo($(\"body\"));\r\n\r\n                // get the width\r\n                width = i.width() || LEVELINDENT;\r\n\r\n                // detach the li from the new div and destroy the new div\r\n                li.detach();\r\n                div.remove();\r\n\r\n                // save it for the future\r\n                tree._gridSettings.indent = width;\r\n            }\r\n\r\n\r\n            return (width);\r\n\r\n        },\r\n\r\n        copyData = function(fromtree, from, totree, to, recurse) {\r\n            var i, j;\r\n            to.data = langx.extend(true, {}, from.data);\r\n            if (from && from.children_d && recurse) {\r\n                for (i = 0, j = from.children_d.length; i < j; i++) {\r\n                    copyData(fromtree, fromtree.get_node(from.children_d[i]), totree, totree.get_node(to.children_d[i]), recurse);\r\n                }\r\n            }\r\n        },\r\n\r\n        findLastClosedNode = function(tree, id) {\r\n            // first get our node\r\n            var ret, node = tree.get_node(id),\r\n                children = node.children;\r\n            // is it closed?\r\n            if (!children || children.length <= 0 || !node.state.opened) {\r\n                ret = id;\r\n            } else {\r\n                ret = findLastClosedNode(tree, children[children.length - 1]);\r\n            }\r\n            return (ret);\r\n        },\r\n\r\n        renderAWidth = function(node, tree) {\r\n            var depth, width,\r\n                fullWidth = parseInt(tree.settings.grid.columns[0].width, 10) + parseInt(tree._gridSettings.treeWidthDiff, 10);\r\n            // need to use a selector in jquery 1.4.4+\r\n            depth = tree.get_node(node).parents.length;\r\n            width = fullWidth - depth * getIndent(node, tree);\r\n            // the following line is no longer needed, since we are doing this inside a <td>\r\n            //a.css({\"vertical-align\": \"top\", \"overflow\":\"hidden\"});\r\n            return (fullWidth);\r\n        },\r\n        renderATitle = function(node, t, tree) {\r\n            var a = node.hasClass(\"jstree-anchor\") ? node : node.children(\"[class~='jstree-anchor']\"),\r\n                title, col = tree.settings.grid.columns[0];\r\n            // get the title\r\n            title = \"\";\r\n            if (col.title) {\r\n                if (col.title === SPECIAL_TITLE) {\r\n                    title = tree.get_text(t);\r\n                } else if (t.attr(col.title)) {\r\n                    title = t.attr(col.title);\r\n                }\r\n            }\r\n            // strip out HTML\r\n            title = title.replace(htmlstripre, '');\r\n            if (title) {\r\n                a.attr(\"title\", title);\r\n            }\r\n        },\r\n        getCellData = function(value, data) {\r\n            var val;\r\n            // get the contents of the cell - value could be a string or a function\r\n            if (value !== undefined && value !== null) {\r\n                if (typeof(value) === \"function\") {\r\n                    val = value(data);\r\n                } else if (data.data !== null && data.data !== undefined && data.data[value] !== undefined) {\r\n                    val = data.data[value];\r\n                } else {\r\n                    val = \"\";\r\n                }\r\n            } else {\r\n                val = \"\";\r\n            }\r\n            return val;\r\n        };\r\n\r\n    $.jstree.defaults.grid = {\r\n        width: 'auto'\r\n    };\r\n\r\n    $.jstree.plugins.grid = function(options, parent) {\r\n        this._initialize = function() {\r\n            if (!this._initialized) {\r\n                var s = this.settings.grid || {},\r\n                    styles, container = this.element,\r\n                    i,\r\n                    gs = this._gridSettings = {\r\n                        columns: s.columns || [],\r\n                        treeClass: \"jstree-grid-col-0\",\r\n                        context: s.contextmenu || false,\r\n                        columnWidth: s.columnWidth,\r\n                        defaultConf: {\r\n                            \"*display\": \"inline\",\r\n                            \"*+display\": \"inline\"\r\n                        },\r\n                        isThemeroller: !!this._data.themeroller,\r\n                        treeWidthDiff: 0,\r\n                        resizable: s.resizable,\r\n                        draggable: s.draggable,\r\n                        stateful: s.stateful,\r\n                        indent: 0,\r\n                        sortOrder: 'text',\r\n                        sortAsc: true,\r\n                        caseInsensitive: s.caseInsensitive,\r\n                        fixedHeader: s.fixedHeader !== false,\r\n                        width: s.width,\r\n                        height: s.height,\r\n                        gridcontextmenu: s.gridcontextmenu,\r\n                        treecol: 0,\r\n                        gridcols: []\r\n                    },\r\n                    cols = gs.columns,\r\n                    treecol = 0,\r\n                    columnSearch = false;\r\n                if (gs.gridcontextmenu === true) {\r\n                    gs.gridcontextmenu = function(grid, tree, node, val, col, t, target) {\r\n                        return {\r\n                            \"edit\": {\r\n                                label: \"Edit\",\r\n                                \"action\": function(data) {\r\n                                    var obj = t.get_node(node);\r\n                                    grid._edit(obj, col, target);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                } else if (gs.gridcontextmenu === false) {\r\n                    gs.gridcontextmenu = false;\r\n                }\r\n                // find which column our tree shuld go in\r\n                for (var i = 0, len = s.columns.length; i < len; i++) {\r\n                    if (s.columns[i].tree) {\r\n                        // save which column it was\r\n                        treecol = i;\r\n                        gs.treecol = treecol;\r\n                    } else {\r\n                        gs.gridcols.push(i);\r\n                    }\r\n                }\r\n                // set a unique ID for this table\r\n                this.uniq = Math.ceil(Math.random() * 1000);\r\n                this.rootid = container.attr(\"id\");\r\n\r\n                var msie = /msie/.test(navigator.userAgent.toLowerCase());\r\n                if (msie) {\r\n                    var version = parseFloat(navigator.appVersion.split(\"MSIE\")[1]);\r\n                    if (version < 8) {\r\n                        gs.defaultConf.display = \"inline\";\r\n                        gs.defaultConf.zoom = \"1\";\r\n                    }\r\n                }\r\n\r\n                // set up the classes we need\r\n                if (!styled) {\r\n                    styled = true;\r\n                    styles = [\r\n                        '.jstree-grid-cell {vertical-align: top; overflow:hidden;margin-left:0;position:relative;width: 100%;padding-left:7px;white-space: nowrap;}',\r\n                        '.jstree-grid-cell span {margin-right:0px;margin-right:0px;*display:inline;*+display:inline;white-space: nowrap;}',\r\n                        '.jstree-grid-separator {position:absolute; top:0; right:0; height:24px; margin-left: -2px; border-width: 0 2px 0 0; *display:inline; *+display:inline; margin-right:0px;width:0px;}',\r\n                        '.jstree-grid-header-cell {overflow: hidden; white-space: nowrap;padding: 1px 3px 2px 5px; cursor: default;}',\r\n                        '.jstree-grid-header-themeroller {border: 0; padding: 1px 3px;}',\r\n                        '.jstree-grid-header-regular {position:relative; background-color: #EBF3FD; z-index: 1;}',\r\n                        '.jstree-grid-hidden {display: none;}',\r\n                        '.jstree-grid-resizable-separator {cursor: col-resize; width: 2px;}',\r\n                        '.jstree-grid-separator-regular {border-color: #d0d0d0; border-style: solid;}',\r\n                        '.jstree-grid-cell-themeroller {border: none !important; background: transparent !important;}',\r\n                        '.jstree-grid-wrapper {table-layout: fixed; width: 100%; overflow: auto; position: relative;}',\r\n                        '.jstree-grid-midwrapper {display: table-row;}',\r\n                        '.jstree-grid-width-auto {width:auto;display:block;}',\r\n                        '.jstree-grid-column {display: table-cell; overflow: hidden;}',\r\n                        '.jstree-grid-ellipsis {text-overflow: ellipsis;}',\r\n                        '.jstree-grid-col-0 {width: 100%;}'\r\n                    ];\r\n                    $('<style type=\"text/css\">' + styles.join(\"\\n\") + '</style>').appendTo(\"head\");\r\n                }\r\n                this.gridWrapper = $(\"<div></div>\").addClass(\"jstree-grid-wrapper\").insertAfter(container);\r\n                this.midWrapper = $(\"<div></div>\").addClass(\"jstree-grid-midwrapper\").appendTo(this.gridWrapper);\r\n                // set the wrapper width\r\n                if (s.width) {\r\n                    this.gridWrapper.width(s.width);\r\n                }\r\n                if (s.height) {\r\n                    this.gridWrapper.height(s.height);\r\n                }\r\n                // create the data columns\r\n                for (var i = 0, len = cols.length; i < len; i++) {\r\n                    // create the column\r\n                    $(\"<div></div>\").addClass(\"jstree-default jstree-grid-column jstree-grid-column-\" + i + \" jstree-grid-column-root-\" + this.rootid).appendTo(this.midWrapper);\r\n                }\r\n                this.midWrapper.children(\"div:eq(\" + treecol + \")\").append(container);\r\n                container.addClass(\"jstree-grid-cell\");\r\n\r\n                //move header with scroll\r\n                if (gs.fixedHeader) {\r\n                    this.gridWrapper.scroll(function() {\r\n                        $(this).find('.jstree-grid-header').css('top', $(this).scrollTop());\r\n                    });\r\n                }\r\n\r\n                // copy original sort function\r\n                var defaultSort = langx.proxy(this.settings.sort, this);\r\n\r\n                // override sort function\r\n                this.settings.sort = function(a, b) {\r\n                    var bigger, colrefs = this.colrefs;\r\n\r\n                    if (gs.sortOrder === 'text') {\r\n                        var caseInsensitiveSort = this.get_text(a).toLowerCase().localeCompare(this.get_text(b).toLowerCase());\r\n                        bigger = gs.caseInsensitive ? (caseInsensitiveSort === 1) : (defaultSort(a, b) === 1);\r\n                    } else {\r\n                        // gs.sortOrder just refers to the unique random name for this column\r\n                        // we need to get the correct value\r\n                        var nodeA = this.get_node(a),\r\n                            nodeB = this.get_node(b),\r\n                            value = colrefs[gs.sortOrder].value,\r\n                            valueA = typeof(value) === 'function' ? value(nodeA) : nodeA.data[value],\r\n                            valueB = typeof(value) === 'function' ? value(nodeB) : nodeB.data[value];\r\n                        if (typeof(valueA) && typeof(valueB) !== 'undefined') {\r\n                            bigger = gs.caseInsensitive ? valueA.toLowerCase() > valueB.toLowerCase() : valueA > valueB;\r\n                        }\r\n                    }\r\n\r\n                    if (!gs.sortAsc)\r\n                        bigger = !bigger;\r\n\r\n                    return bigger ? 1 : -1;\r\n                };\r\n\r\n                // sortable columns when jQuery UI is available\r\n                if (gs.draggable) {\r\n                    if (!$.ui || !$.ui.sortable) {\r\n                        console.warn('[jstree-grid] draggable option requires jQuery UI');\r\n                    } else {\r\n                        var from, to;\r\n\r\n                        $(this.midWrapper).sortable({\r\n                            axis: \"x\",\r\n                            handle: \".jstree-grid-header\",\r\n                            cancel: \".jstree-grid-separator\",\r\n                            start: function(event, ui) {\r\n                                from = ui.item.index();\r\n                            },\r\n                            stop: function(event, ui) {\r\n                                to = ui.item.index();\r\n                                gs.columns.splice(to, 0, gs.columns.splice(from, 1)[0]);\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n\r\n                //public function. validate searchObject keys, set columnSearch flag, calls jstree search and reset columnSearch flag\r\n                this.searchColumn = function(searchObj) {\r\n                    var validatedSearchObj = {};\r\n\r\n                    if (typeof searchObj == 'object') {\r\n                        for (var columnIndex in searchObj) {\r\n                            if (searchObj.hasOwnProperty(columnIndex)) {\r\n                                // keys should be the index of a column. This means the following:\r\n                                // only integers and smaller than the number of columns and bigger or equal to 0\r\n                                // (possilbe idea for in the future: ability to set key as a more human readable term like the column header and then map it here to an index)\r\n                                if (columnIndex % 1 === 0 && columnIndex < cols.length && columnIndex >= 0) {\r\n                                    validatedSearchObj[columnIndex] = searchObj[columnIndex];\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    columnSearch = validatedSearchObj;\r\n\r\n                    if (Object.keys(validatedSearchObj).length !== 0) {\r\n                        //the search string doesn't matter. we'll use the search string in the columnSearch object!\r\n                        this.search('someValue');\r\n                    } else { // nothing to search so reset jstree's search by passing an empty string\r\n                        this.search('');\r\n                    }\r\n                    columnSearch = false;\r\n                }\r\n\r\n\r\n                // set default search for each column with no user defined search function (used when doing a columnSearch)\r\n                for (var i = 0, len = cols.length; i < len; i++) {\r\n                    var column = cols[i];\r\n                    if (typeof(column.search_callback) !== \"function\") {\r\n                        // no search callback so set default function\r\n                        column.search_callback = function(str, columnValue, node, column) {\r\n                            var f = new $.vakata.search(str, true, {\r\n                                caseSensitive: searchSettings.case_sensitive,\r\n                                fuzzy: searchSettings.fuzzy\r\n                            });\r\n\r\n                            return f.search(columnValue).isMatch;\r\n\r\n                        };\r\n                    }\r\n                }\r\n\r\n                // if there was no overridden search_callback, we will provide it\r\n                // it will use the default per-node search algorithm, augmented by searching our data nodes\r\n                var searchSettings = this.settings.search;\r\n                var omniSearchCallback = searchSettings.search_callback;\r\n\r\n                if (!omniSearchCallback) {\r\n                    omniSearchCallback = function(str, node) {\r\n                        var i, f = new $.vakata.search(str, true, {\r\n                                caseSensitive: searchSettings.case_sensitive,\r\n                                fuzzy: searchSettings.fuzzy\r\n                            }),\r\n                            matched = f.search(node.text).isMatch,\r\n                            col;\r\n\r\n                        // only bother looking in each cell if it was not yet matched\r\n                        if (!matched) {\r\n                            for (var i = 0, len = cols.length; i < len; i++) {\r\n                                if (treecol === i) {\r\n                                    continue;\r\n                                }\r\n                                col = cols[i];\r\n                                matched = f.search(getCellData(col.value, node)).isMatch;\r\n                                if (matched) {\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                        return matched;\r\n                    }\r\n                }\r\n\r\n                searchSettings.search_callback = function(str, node) {\r\n                    var matched = false;\r\n                    if (columnSearch) {\r\n                        //using logical AND for column searches (more options in the future)\r\n                        for (var columnIndex in columnSearch) {\r\n                            if (columnSearch.hasOwnProperty(columnIndex)) {\r\n                                var searchValue = columnSearch[columnIndex];\r\n                                if (searchValue == '') {\r\n                                    continue;\r\n                                }\r\n                                var col = cols[columnIndex];\r\n                                if (treecol == columnIndex) {\r\n                                    matched = col.search_callback(searchValue, node.text, node, col)\r\n                                } else {\r\n                                    matched = col.search_callback(searchValue, getCellData(col.value, node), node, col)\r\n                                }\r\n\r\n                                if (!matched) {\r\n                                    break; //found one that didn't match\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        container.trigger(\"columnSearch_grid.jstree\");\r\n                    } else {\r\n                        matched = omniSearchCallback(str, node);\r\n                        container.trigger(\"omniSearch_grid.jstree\");\r\n                    }\r\n                    return matched;\r\n                };\r\n                this._initialized = true;\r\n            }\r\n        };\r\n        this.init = function(el, options) {\r\n            parent.init.call(this, el, options);\r\n            this._initialize();\r\n        };\r\n        this.bind = function() {\r\n            parent.bind.call(this);\r\n            this._initialize();\r\n            this.element\r\n                .on(\"move_node.jstree create_node.jstree clean_node.jstree change_node.jstree\", langx.proxy(function(e, data) {\r\n                    var target = this.get_node(data || \"#\", true);\r\n                    var id = _guid();\r\n                    this._detachColumns(id);\r\n                    this._prepare_grid(target);\r\n                    this._reattachColumns(id);\r\n                }, this))\r\n                .on(\"delete_node.jstree\", langx.proxy(function(e, data) {\r\n                    if (data.node.id !== undefined) {\r\n                        var grid = this.gridWrapper,\r\n                            removeNodes = [data.node.id],\r\n                            i;\r\n                        // add children to remove list\r\n                        if (data.node && data.node.children_d) {\r\n                            removeNodes = removeNodes.concat(data.node.children_d);\r\n                        }\r\n                        findDataCell(this.uniq, removeNodes, this._gridSettings.gridcols).remove();\r\n                    }\r\n                }, this))\r\n                .on(\"show_node.jstree\", langx.proxy(function(e, data) {\r\n                    this._hideOrShowTree(data.node, false);\r\n                }, this))\r\n                .on(\"hide_node.jstree\", langx.proxy(function(e, data) {\r\n                    this._hideOrShowTree(data.node, true);\r\n                }, this))\r\n                .on(\"close_node.jstree\", langx.proxy(function(e, data) {\r\n                    this._hide_grid(data.node);\r\n                }, this))\r\n                .on(\"open_node.jstree\", langx.proxy(function(e, data) {}, this))\r\n                .on(\"load_node.jstree\", langx.proxy(function(e, data) {}, this))\r\n                .on(\"loaded.jstree\", langx.proxy(function(e) {\r\n                    this._prepare_headers();\r\n                    this.element.trigger(\"loaded_grid.jstree\");\r\n                }, this))\r\n                .on(\"ready.jstree\", langx.proxy(function(e, data) {\r\n                    // find the line-height of the first known node\r\n                    var anchorHeight = this.element.find(\"[class~='jstree-anchor']:first\").outerHeight(),\r\n                        q,\r\n                        cls = this.element.attr(\"class\") || \"\";\r\n                    $('<style type=\"text/css\">div.jstree-grid-cell-root-' + this.rootid + ' {line-height: ' + anchorHeight + 'px; height: ' + anchorHeight + 'px;}</style>').appendTo(\"head\");\r\n\r\n                    // add container classes to the wrapper - EXCEPT those that are added by jstree, i.e. \"jstree\" and \"jstree-*\"\r\n                    q = cls.split(/\\s+/).map(function(i) {\r\n                        var match = i.match(/^jstree(-|$)/);\r\n                        return (match ? \"\" : i);\r\n                    });\r\n                    this.gridWrapper.addClass(q.join(\" \"));\r\n\r\n                }, this))\r\n                .on(\"move_node.jstree\", langx.proxy(function(e, data) {\r\n                    var node = data.new_instance.element;\r\n                    //renderAWidth(node,this);\r\n                    // check all the children, because we could drag a tree over\r\n                    node.find(\"li > a\").each(langx.proxy(function(i, elm) {\r\n                        //renderAWidth($(elm),this);\r\n                    }, this));\r\n\r\n                }, this))\r\n                .on(\"hover_node.jstree\", langx.proxy(function(node, selected, event) {\r\n                    var id = selected.node.id;\r\n                    if (this._hover_node !== null && this._hover_node !== undefined) {\r\n                        findDataCell(this.uniq, this._hover_node, this._gridSettings.gridcols).removeClass(\"jstree-hovered\");\r\n                    }\r\n                    this._hover_node = id;\r\n                    findDataCell(this.uniq, id, this._gridSettings.gridcols).addClass(\"jstree-hovered\");\r\n                }, this))\r\n                .on(\"dehover_node.jstree\", langx.proxy(function(node, selected, event) {\r\n                    var id = selected.node.id;\r\n                    this._hover_node = null;\r\n                    findDataCell(this.uniq, id, this._gridSettings.gridcols).removeClass(\"jstree-hovered\");\r\n                }, this))\r\n                .on(\"select_node.jstree\", langx.proxy(function(node, selected, event) {\r\n                    var id = selected.node.id;\r\n                    findDataCell(this.uniq, id, this._gridSettings.gridcols).addClass(\"jstree-clicked\");\r\n                    this.get_node(selected.node.id, true).children(\"div.jstree-grid-cell\").addClass(\"jstree-clicked\");\r\n                }, this))\r\n                .on(\"deselect_node.jstree\", langx.proxy(function(node, selected, event) {\r\n                    var id = selected.node.id;\r\n                    findDataCell(this.uniq, id, this._gridSettings.gridcols).removeClass(\"jstree-clicked\");\r\n                }, this))\r\n                .on(\"deselect_all.jstree\", langx.proxy(function(node, selected, event) {\r\n                    // get all of the ids that were unselected\r\n                    var ids = selected.node || [],\r\n                        i;\r\n                    findDataCell(this.uniq, ids, this._gridSettings.gridcols).removeClass(\"jstree-clicked\");\r\n                }, this))\r\n                .on(\"search.jstree\", langx.proxy(function(e, data) {\r\n                    // search sometimes filters, so we need to hide all of the appropriate grid cells as well, and show only the matches\r\n                    var grid = this.gridWrapper,\r\n                        that = this,\r\n                        nodesToShow, startTime = new Date().getTime(),\r\n                        ids = getIds(data.nodes.filter(\".jstree-node\")),\r\n                        endTime;\r\n                    this.holdingCells = {};\r\n                    if (data.nodes.length) {\r\n                        var id = _guid();\r\n                        // save the cells we will hide\r\n                        var cells = grid.find('div.jstree-grid-cell-regular');\r\n                        this._detachColumns(id);\r\n                        if (this._data.search.som) {\r\n                            // create the list of nodes we want to look at\r\n                            if (this._data.search.smc) {\r\n                                nodesToShow = data.nodes.add(data.nodes.find('.jstree-node'));\r\n                            }\r\n                            nodesToShow = (nodesToShow || data.nodes).add(data.nodes.parentsUntil(\".jstree\"));\r\n\r\n                            // hide all of the grid cells\r\n                            cells.hide();\r\n                            // show only those that match\r\n                            nodesToShow.filter(\".jstree-node\").each(function(i, node) {\r\n                                var id = node.id;\r\n                                if (id) {\r\n                                    that._prepare_grid(node);\r\n                                    for (var i = 0, len = that._gridSettings.gridcols.length; i < len; i++) {\r\n                                        if (i === that._gridSettings.treecol) {\r\n                                            continue;\r\n                                        }\r\n                                        findDataCell(that.uniq, id, that._gridSettings.gridcols[i], $(that._domManipulation.columns[i])).show();\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n\r\n                        for (var i = 0, len = this._gridSettings.gridcols.length; i < len; i++) {\r\n                            if (i === this._gridSettings.treecol) {\r\n                                continue;\r\n                            }\r\n                            findDataCell(that.uniq, ids, this._gridSettings.gridcols[i], $(this._domManipulation.columns[i])).addClass(SEARCHCLASS);\r\n                        }\r\n                        this._reattachColumns(id);\r\n                        endTime = new Date().getTime();\r\n                        this.element.trigger(\"search-complete.jstree-grid\", [{\r\n                            time: endTime - startTime\r\n                        }]);\r\n                    }\r\n                    return true;\r\n                }, this))\r\n                .on(\"clear_search.jstree\", langx.proxy(function(e, data) {\r\n                    // search has been cleared, so we need to show all rows\r\n                    var grid = this.gridWrapper,\r\n                        ids = getIds(data.nodes.filter(\".jstree-node\"));\r\n                    grid.find('div.jstree-grid-cell').show();\r\n                    findDataCell(this.uniq, ids, this._gridSettings.gridcols).removeClass(SEARCHCLASS);\r\n                    return true;\r\n                }, this))\r\n                .on(\"copy_node.jstree\", function(e, data) {\r\n                    var newtree = data.new_instance,\r\n                        oldtree = data.old_instance,\r\n                        obj = newtree.get_node(data.node, true);\r\n                    copyData(oldtree, data.original, newtree, data.node, true);\r\n                    newtree._detachColumns(obj.id);\r\n                    newtree._prepare_grid(obj);\r\n                    newtree._reattachColumns(obj.id);\r\n                    return true;\r\n                })\r\n                .on(\"show_ellipsis.jstree\", langx.proxy(function(e, data) {\r\n                    this.gridWrapper.find(\".jstree-grid-cell\").add(\".jstree-grid-header\", this.gridWrapper).addClass(\"jstree-grid-ellipsis\");\r\n                    return true;\r\n                }, this))\r\n                .on(\"hide_ellipsis.jstree\", langx.proxy(function(e, data) {\r\n                    this.gridWrapper.find(\".jstree-grid-cell\").add(\".jstree-grid-header\", this.gridWrapper).removeClass(\"jstree-grid-ellipsis\");\r\n                    return true;\r\n                }, this));\r\n            if (this._gridSettings.isThemeroller) {\r\n                this.element\r\n                    .on(\"select_node.jstree\", langx.proxy(function(e, data) {\r\n                        data.rslt.obj.children(\"[class~='jstree-anchor']\").nextAll(\"div\").addClass(\"ui-state-active\");\r\n                    }, this))\r\n                    .on(\"deselect_node.jstree deselect_all.jstree\", langx.proxy(function(e, data) {\r\n                        data.rslt.obj.children(\"[class~='jstree-anchor']\").nextAll(\"div\").removeClass(\"ui-state-active\");\r\n                    }, this))\r\n                    .on(\"hover_node.jstree\", langx.proxy(function(e, data) {\r\n                        data.rslt.obj.children(\"[class~='jstree-anchor']\").nextAll(\"div\").addClass(\"ui-state-hover\");\r\n                    }, this))\r\n                    .on(\"dehover_node.jstree\", langx.proxy(function(e, data) {\r\n                        data.rslt.obj.children(\"[class~='jstree-anchor']\").nextAll(\"div\").removeClass(\"ui-state-hover\");\r\n                    }, this));\r\n            }\r\n\r\n            if (this._gridSettings.stateful) {\r\n                this.element\r\n                    .on(\"resize_column.jstree-grid\", langx.proxy(function(e, col, width) {\r\n                        localStorage['jstree-root-' + this.rootid + '-column-' + col] = width;\r\n                    }, this));\r\n            }\r\n        };\r\n\r\n        // tear down the tree entirely\r\n        this.teardown = function() {\r\n            var gw = this.gridWrapper,\r\n                container = this.element,\r\n                gridparent = gw.parent();\r\n            container.detach();\r\n            gw.remove();\r\n            gridparent.append(container);\r\n            parent.teardown.call(this);\r\n        };\r\n        // clean the grid in case of redraw or refresh entire tree\r\n        this._clean_grid = function(target, id) {\r\n            var grid = this.gridWrapper;\r\n            if (target) {\r\n                findDataCell(this.uniq, id, this._gridSettings.gridcols).remove();\r\n            } else {\r\n                // get all of the `div` children in all of the `td` in dataRow except for :first (that is the tree itself) and remove\r\n                grid.find(\"div.jstree-grid-cell-regular\").remove();\r\n            }\r\n        };\r\n        // prepare the headers\r\n        this._prepare_headers = function() {\r\n            var header, i, col, _this = this,\r\n                gs = this._gridSettings,\r\n                cols = gs.columns || [],\r\n                width, defaultWidth = gs.columnWidth,\r\n                resizable = gs.resizable || false,\r\n                cl, ccl, val, name, last, tr = gs.isThemeroller,\r\n                classAdd = (tr ? \"themeroller\" : \"regular\"),\r\n                puller,\r\n                hasHeaders = false,\r\n                gridparent = this.gridparent,\r\n                rootid = this.rootid,\r\n                conf = gs.defaultConf,\r\n                coluuid,\r\n                borPadWidth = 0,\r\n                totalWidth = 0;\r\n\r\n            // save the original parent so we can reparent on destroy\r\n            this.parent = gridparent;\r\n\r\n            // save the references to columns by unique ID\r\n            this.colrefs = {};\r\n\r\n\r\n            // create the headers\r\n            for (var i = 0, len = cols.length; i < len; i++) {\r\n                //col = $(\"<col/>\");\r\n                //col.appendTo(colgroup);\r\n                cl = cols[i].headerClass || \"\";\r\n                ccl = cols[i].columnClass || \"\";\r\n                val = cols[i].header || \"\";\r\n                do {\r\n                    coluuid = String(Math.floor(Math.random() * 10000));\r\n                } while (this.colrefs[coluuid] !== undefined);\r\n                // create a unique name for this column\r\n                name = cols[i].value ? coluuid : \"text\";\r\n                this.colrefs[name] = cols[i];\r\n\r\n                if (val) {\r\n                    hasHeaders = true;\r\n                }\r\n                if (gs.stateful && localStorage['jstree-root-' + rootid + '-column-' + i])\r\n                    width = localStorage['jstree-root-' + rootid + '-column-' + i];\r\n                else\r\n                    width = cols[i].width || defaultWidth;\r\n\r\n                var minWidth = cols[i].minWidth || width;\r\n                var maxWidth = cols[i].maxWidth || width;\r\n\r\n                // we only deal with borders if width is not auto and not percentages\r\n                borPadWidth = tr ? 1 + 6 : 2 + 8; // account for the borders and padding\r\n                if (width !== 'auto' && typeof(width) !== \"string\") {\r\n                    width -= borPadWidth;\r\n                }\r\n                col = this.midWrapper.children(\"div.jstree-grid-column-\" + i);\r\n                last = $(\"<div></div>\").css(conf).addClass(\"jstree-grid-div-\" + this.uniq + \"-\" + i + \" \" + (tr ? \"ui-widget-header \" : \"\") + \" jstree-grid-header jstree-grid-header-cell jstree-grid-header-\" + classAdd + \" \" + cl + \" \" + ccl).html(val);\r\n                last.addClass((tr ? \"ui-widget-header \" : \"\") + \"jstree-grid-header jstree-grid-header-\" + classAdd);\r\n                if (this.settings.core.themes.ellipsis === true) {\r\n                    last.addClass('jstree-grid-ellipsis');\r\n                }\r\n                last.prependTo(col);\r\n                last.attr(COL_DATA_ATTR, name);\r\n                totalWidth += last.outerWidth();\r\n                puller = $(\"<div class='jstree-grid-separator jstree-grid-separator-\" + classAdd + (tr ? \" ui-widget-header\" : \"\") + (resizable ? \" jstree-grid-resizable-separator\" : \"\") + \"'>&nbsp;</div>\").appendTo(last);\r\n                col.width(width);\r\n                col.css(\"min-width\", minWidth);\r\n                col.css(\"max-width\", maxWidth);\r\n            }\r\n\r\n            last.addClass((tr ? \"ui-widget-header \" : \"\") + \"jstree-grid-header jstree-grid-header-last jstree-grid-header-\" + classAdd);\r\n            // if there is no width given for the last column, do it via automatic\r\n            if (cols[cols.length - 1].width === undefined) {\r\n                totalWidth -= width;\r\n                col.css({\r\n                    width: \"auto\"\r\n                });\r\n                last.addClass(\"jstree-grid-width-auto\").next(\".jstree-grid-separator\").remove();\r\n            }\r\n            if (hasHeaders) {\r\n                // save the offset of the div from the body\r\n                //gs.divOffset = header.parent().offset().left;\r\n                gs.header = header;\r\n            } else {\r\n                $(\"div.jstree-grid-header\").hide();\r\n            }\r\n\r\n            if (!this.bound && resizable) {\r\n                this.bound = true;\r\n                $(document).mouseup(function() {\r\n                    var ref, cols, width, headers, currentTree, colNum;\r\n                    if (isClickedSep) {\r\n                        colNum = toResize.prevAll(\".jstree-grid-column\").length;\r\n                        currentTree = toResize.closest(\".jstree-grid-wrapper\").find(\".jstree\");\r\n                        ref = $.jstree.reference(currentTree);\r\n                        cols = ref.settings.grid.columns;\r\n                        headers = toResize.parent().children(\"div.jstree-grid-column\");\r\n                        if (isNaN(colNum) || colNum < 0) {\r\n                            ref._gridSettings.treeWidthDiff = currentTree.find(\"ins:eq(0)\").width() + currentTree.find(\"[class~='jstree-anchor']:eq(0)\").width() - ref._gridSettings.columns[0].width;\r\n                        }\r\n                        width = ref._gridSettings.columns[colNum].width = parseFloat(toResize.css(\"width\"));\r\n                        isClickedSep = false;\r\n                        toResize = null;\r\n\r\n                        currentTree.trigger(\"resize_column.jstree-grid\", [colNum, width]);\r\n                    }\r\n                }).mousemove(function(e) {\r\n                    if (isClickedSep) {\r\n                        newMouseX = e.pageX;\r\n                        var diff = newMouseX - oldMouseX,\r\n                            oldPrevHeaderInner,\r\n                            oldPrevColWidth, newPrevColWidth;\r\n\r\n                        if (diff !== 0) {\r\n                            oldPrevHeaderInner = toResize.width();\r\n                            oldPrevColWidth = parseFloat(toResize.css(\"width\"));\r\n\r\n                            // handle a Chrome issue with columns set to auto\r\n                            // thanks to Brabus https://github.com/side-by-side\r\n                            if (!oldPrevColWidth) {\r\n                                oldPrevColWidth = toResize.innerWidth();\r\n                            }\r\n\r\n                            // make sure that diff cannot be beyond the left/right limits\r\n                            diff = diff < 0 ? Math.max(diff, -oldPrevHeaderInner) : diff;\r\n                            newPrevColWidth = oldPrevColWidth + diff;\r\n\r\n                            // only do this if we are not shrinking past 0 on left - and limit it to that amount\r\n                            if ((diff > 0 || oldPrevHeaderInner > 0) && newPrevColWidth > MINCOLWIDTH) {\r\n                                toResize.width(newPrevColWidth + \"px\");\r\n                                toResize.css(\"min-width\", newPrevColWidth + \"px\");\r\n                                toResize.css(\"max-width\", newPrevColWidth + \"px\");\r\n                                oldMouseX = newMouseX;\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n                this.gridWrapper.on(\"selectstart\", \".jstree-grid-resizable-separator\", function() {\r\n                        return false;\r\n                    }).on(\"mousedown\", \".jstree-grid-resizable-separator\", function(e) {\r\n                        isClickedSep = true;\r\n                        oldMouseX = e.pageX;\r\n                        toResize = $(this).closest(\"div.jstree-grid-column\");\r\n                        // the max rightmost position we will allow is the right-most of the wrapper minus a buffer (10)\r\n                        return false;\r\n                    })\r\n                    .on(\"dblclick\", \".jstree-grid-resizable-separator\", function(e) {\r\n                        var clickedSep = $(this),\r\n                            col = clickedSep.closest(\"div.jstree-grid-column\"),\r\n                            oldPrevColWidth = parseFloat(col.css(\"width\")),\r\n                            newWidth = 0,\r\n                            diff,\r\n                            colNum = col.prevAll(\".jstree-grid-column\").length,\r\n                            oldPrevHeaderInner = col.width(),\r\n                            newPrevColWidth;\r\n\r\n\r\n                        //find largest width\r\n                        col.find(\".jstree-grid-cell\").each(function() {\r\n                            var item = $(this),\r\n                                width;\r\n                            item.css(\"position\", \"absolute\");\r\n                            item.css(\"width\", \"auto\");\r\n                            width = item.outerWidth();\r\n                            item.css(\"position\", \"relative\");\r\n\r\n                            if (width > newWidth) {\r\n                                newWidth = width;\r\n                            }\r\n                        });\r\n\r\n                        diff = newWidth - oldPrevColWidth;\r\n\r\n                        // make sure that diff cannot be beyond the left limits\r\n                        diff = diff < 0 ? Math.max(diff, -oldPrevHeaderInner) : diff;\r\n                        newPrevColWidth = (oldPrevColWidth + diff) + \"px\";\r\n\r\n                        col.width(newPrevColWidth);\r\n                        col.css(\"min-width\", newPrevColWidth);\r\n                        col.css(\"max-width\", newPrevColWidth);\r\n\r\n                        $(this).closest(\".jstree-grid-wrapper\").find(\".jstree\").trigger(\"resize_column.jstree-grid\", [colNum, newPrevColWidth]);\r\n                    })\r\n                    .on(\"click\", \".jstree-grid-separator\", function(e) {\r\n                        // don't sort after resize\r\n                        e.stopPropagation();\r\n                    });\r\n            }\r\n            this.gridWrapper.on(\"click\", \".jstree-grid-header-cell\", function(e) {\r\n                if (!_this.sort) {\r\n                    return;\r\n                }\r\n\r\n                // get column\r\n                var name = $(this).attr(COL_DATA_ATTR);\r\n\r\n                // sort order\r\n                var symbol;\r\n                if (gs.sortOrder === name && gs.sortAsc === true) {\r\n                    gs.sortAsc = false;\r\n                    symbol = \"&darr;\";\r\n                } else {\r\n                    gs.sortOrder = name;\r\n                    gs.sortAsc = true;\r\n                    symbol = \"&uarr;\";\r\n                }\r\n\r\n                // add sort arrow\r\n                $(this.closest('.jstree-grid-wrapper')).find(\".jstree-grid-sort-icon\").remove();\r\n                $(\"<span></span>\").addClass(\"jstree-grid-sort-icon\").appendTo($(this)).html(symbol);\r\n\r\n                // sort by column\r\n                var rootNode = _this.get_node('#');\r\n                _this.sort(rootNode, true);\r\n                _this.redraw_node(rootNode, true);\r\n            });\r\n\r\n        };\r\n\r\n        this._domManipulation = null; // We'll store the column nodes in this object and an id for the grid-node that started the manipulation { id: \"id of the node that started the manipulation\", columns: { Key-Value-Pair col-No: Column }}\r\n\r\n        function _guid() {\r\n            function s4() {\r\n                return Math.floor((1 + Math.random()) * 0x10000)\r\n                    .toString(16)\r\n                    .substring(1);\r\n            }\r\n            return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\r\n                s4() + '-' + s4() + s4() + s4();\r\n        }\r\n        /*\r\n         * Trys to detach the tree columns on massive dom manipulations\r\n         */\r\n        this._detachColumns = function(id) {\r\n            // if the columns are not detached, then detach them\r\n            if (this._domManipulation == null) {\r\n                var cols = this._gridSettings.columns || [],\r\n                    treecol = this._gridSettings.treecol,\r\n                    mw = this.midWrapper;\r\n                this._domManipulation = {\r\n                    id: id,\r\n                    columns: {}\r\n                };\r\n                for (var i = 0, len = cols.length; i < len; i++) {\r\n                    //if (treecol === i) {\r\n                    //  continue;\r\n                    //}\r\n                    this._domManipulation.columns[i] = mw.children(\".jstree-grid-column-\" + i)[0];\r\n                    this._domManipulation.columns[i].parentNode.removeChild(this._domManipulation.columns[i]);\r\n                }\r\n            }\r\n            return this._domManipulation;\r\n        }\r\n\r\n        this._reattachColumns = function(id) {\r\n            if (this._domManipulation == null) {\r\n                return false;\r\n            }\r\n            if (this._domManipulation.id === id) {\r\n                var cols = this._gridSettings.columns || [],\r\n                    treecol = this._gridSettings.treecol,\r\n                    mw = this.midWrapper;\r\n                for (var i = 0, len = cols.length; i < len; i++) {\r\n                    //if (treecol === i) {\r\n                    //  continue;\r\n                    //}\r\n                    mw[0].appendChild(this._domManipulation.columns[i]);\r\n                }\r\n                this._domManipulation = null;\r\n            }\r\n            return true;\r\n        }\r\n\r\n        /*\r\n         * Override open_node to detach the columns before redrawing child-nodes, and do reattach them afterwarts\r\n         */\r\n        this.open_node = function(obj, callback, animation) {\r\n            var isArray = langx.isArray(obj);\r\n            var node = null;\r\n            if (!isArray) {\r\n                node = this.get_node(obj);\r\n                if (node.id === \"#\") {\r\n                    return;\r\n                } // wtf??? we ar in the root and do not need a open!\r\n            }\r\n            var id = isArray ? _guid() : node.id;\r\n            this._detachColumns(id);\r\n            var ret = parent.open_node.call(this, obj, callback, animation);\r\n            this._reattachColumns(id);\r\n            return ret;\r\n        }\r\n\r\n        /*\r\n         * Override redraw_node to correctly insert the grid\r\n         */\r\n        this.redraw_node = function(obj, deep, is_callback, force_render) {\r\n            var id = langx.isArray(obj) ? _guid() : this.get_node(obj).id;\r\n            // we detach the columns once\r\n            this._detachColumns(id);\r\n            // first allow the parent to redraw the node\r\n            obj = parent.redraw_node.call(this, obj, deep, is_callback, force_render);\r\n            // next prepare the grid for a redrawn node - but only if ths node is not hidden (search does that)\r\n            if (obj) {\r\n                this._prepare_grid(obj);\r\n            }\r\n            // don't forget to reattach\r\n            this._reattachColumns(id);\r\n            return obj;\r\n        };\r\n        this.refresh = function() {\r\n            this._clean_grid();\r\n            return parent.refresh.apply(this, arguments);\r\n        };\r\n        /*\r\n         * Override set_id to update cell attributes\r\n         */\r\n        this.set_id = function(obj, id) {\r\n            var old, uniq = this.uniq;\r\n            if (obj) {\r\n                old = obj.id;\r\n            }\r\n            var result = parent.set_id.apply(this, arguments);\r\n            if (result) {\r\n                if (old !== undefined) {\r\n                    var grid = this.gridWrapper,\r\n                        oldNodes = [old],\r\n                        i;\r\n                    // get children\r\n                    if (obj && obj.children_d) {\r\n                        oldNodes = oldNodes.concat(obj.children_d);\r\n                    }\r\n                    // update id in children\r\n                    findDataCell(uniq, oldNodes, this._gridSettings.gridcols)\r\n                        .attr(NODE_DATA_ATTR, obj.id)\r\n                        .removeClass(generateCellId(uniq, old))\r\n                        .addClass(generateCellId(uniq, obj.id))\r\n                        .each(function(i, node) {\r\n                            $(node).attr('id', generateCellId(uniq, obj.id) + (i + 1));\r\n                        });\r\n                }\r\n            }\r\n            return result;\r\n        };\r\n\r\n        this._hideOrShowTree = function(node, hide) {\r\n            //Hides or shows a tree\r\n            this._detachColumns(node.id);\r\n            // show cells in each detachted column\r\n            this._hideOrShowNode(node, hide, this._gridSettings.columns || [], this._gridSettings.treecol);\r\n            this._reattachColumns(node.id);\r\n        }\r\n        this._hideOrShowNode = function(node, hide, cols, treecol) {\r\n            //Hides or shows a node with recursive calls to all open child-nodes\r\n            for (var i = 0, len = cols.length; i < len; i++) {\r\n                if (i === treecol) {\r\n                    continue;\r\n                }\r\n                var cells = findDataCell(this.uniq, node.id, i, $(this._domManipulation.columns[i]));\r\n                if (hide) {\r\n                    cells.addClass(\"jstree-grid-hidden\");\r\n                } else {\r\n                    cells.removeClass(\"jstree-grid-hidden\");\r\n                }\r\n            }\r\n            if (node.state.opened && node.children) {\r\n                for (var i = 0, len = node.children.length; i < len; i++) {\r\n                    this._hideOrShowNode(this.get_node(node.children[i]), hide, cols, treecol);\r\n                }\r\n            }\r\n        }\r\n        this._hide_grid = function(node) {\r\n            if (!node) {\r\n                return true;\r\n            }\r\n            this._detachColumns(node.id);\r\n            var children = node.children ? node.children : [],\r\n                cols = this._gridSettings.columns || [],\r\n                treecol = this._gridSettings.treecol;\r\n            // try to remove all children\r\n            for (var i = 0, len = children.length; i < len; i++) {\r\n                var child = this.get_node(children[i]);\r\n                // go through each column, remove all children with the correct ID name\r\n                for (var j = 0, lenj = cols.length; j < lenj; j++) {\r\n                    if (j === treecol) {\r\n                        continue;\r\n                    }\r\n                    findDataCell(this.uniq, child.id, j, $(this._domManipulation.columns[j])).remove();\r\n                }\r\n                if (child.state.opened) {\r\n                    this._hide_grid(child);\r\n                }\r\n            }\r\n\r\n\r\n            this._reattachColumns(node.id);\r\n        };\r\n        this.holdingCells = {};\r\n        this.getHoldingCells = function(obj, col, hc) {\r\n            if (obj.state.hidden || !obj.state.opened) {\r\n                return $();\r\n            }\r\n            var ret = $(),\r\n                children = obj.children || [],\r\n                child, i, uniq = this.uniq;\r\n            // run through each child, render it, and then render its children recursively\r\n            for (i = 0; i < children.length; i++) {\r\n                child = generateCellId(uniq, children[i]) + col;\r\n                if (hc[child]) {\r\n                    ret = ret.add(hc[child]).add(this.getHoldingCells(this.get_node(children[i]), col, hc));\r\n                    //delete hc[child];\r\n                }\r\n            }\r\n            return (ret);\r\n        };\r\n\r\n        /**\r\n         * put a grid cell in edit mode (input field to edit the data)\r\n         * @name edit(obj, col)\r\n         * @param  {mixed} obj\r\n         * @param  {obj} col definition\r\n         * @param  {element} cell element, either span or wrapping div\r\n         */\r\n        this._edit = function(obj, col, element) {\r\n            if (!obj) {\r\n                return false;\r\n            }\r\n            if (!obj.data) {\r\n                obj.data = {};\r\n            }\r\n            if (element) {\r\n                element = $(element);\r\n                if (element.prop(\"tagName\").toLowerCase() === \"div\") {\r\n                    element = element.children(\"span:first\");\r\n                }\r\n            } else {\r\n                // need to find the element - later\r\n                return false;\r\n            }\r\n            var rtl = this._data.core.rtl,\r\n                w = this.element.width(),\r\n                t = obj.data[col.value],\r\n                h1 = $(\"<\" + \"div />\", {\r\n                    css: {\r\n                        \"position\": \"absolute\",\r\n                        \"top\": \"-200px\",\r\n                        \"left\": (rtl ? \"0px\" : \"-1000px\"),\r\n                        \"visibility\": \"hidden\"\r\n                    }\r\n                }).appendTo(\"body\"),\r\n                h2 = $(\"<\" + \"input />\", {\r\n                    \"value\": t,\r\n                    \"class\": \"jstree-rename-input\",\r\n                    \"css\": {\r\n                        \"padding\": \"0\",\r\n                        \"border\": \"1px solid silver\",\r\n                        \"box-sizing\": \"border-box\",\r\n                        \"display\": \"inline-block\",\r\n                        \"height\": (this._data.core.li_height) + \"px\",\r\n                        \"lineHeight\": (this._data.core.li_height) + \"px\",\r\n                        \"width\": \"150px\" // will be set a bit further down\r\n                    },\r\n                    \"blur\": langx.proxy(function() {\r\n                        var v = h2.val();\r\n                        // save the value if changed\r\n                        if (v === \"\" || v === t) {\r\n                            v = t;\r\n                        } else {\r\n                            obj.data[col.value] = v;\r\n                            this.element.trigger('update_cell.jstree-grid', {\r\n                                node: obj,\r\n                                col: col.value,\r\n                                value: v,\r\n                                old: t\r\n                            });\r\n                            var id = _guid();\r\n                            this._detachColumns(id);\r\n                            this._prepare_grid(this.get_node(obj, true));\r\n                            this._reattachColumns(id);\r\n                        }\r\n                        h2.remove();\r\n                        element.show();\r\n                    }, this),\r\n                    \"keydown\": function(event) {\r\n                        var key = event.which;\r\n                        if (key === 27) {\r\n                            this.value = t;\r\n                        }\r\n                        if (key === 27 || key === 13 || key === 37 || key === 38 || key === 39 || key === 40 || key === 32) {\r\n                            event.stopImmediatePropagation();\r\n                        }\r\n                        if (key === 27 || key === 13) {\r\n                            event.preventDefault();\r\n                            this.blur();\r\n                        }\r\n                    },\r\n                    \"click\": function(e) {\r\n                        e.stopImmediatePropagation();\r\n                    },\r\n                    \"mousedown\": function(e) {\r\n                        e.stopImmediatePropagation();\r\n                    },\r\n                    \"keyup\": function(event) {\r\n                        h2.width(Math.min(h1.text(\"pW\" + this.value).width(), w));\r\n                    },\r\n                    \"keypress\": function(event) {\r\n                        if (event.which === 13) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                }),\r\n                fn = {\r\n                    fontFamily: element.css('fontFamily') || '',\r\n                    fontSize: element.css('fontSize') || '',\r\n                    fontWeight: element.css('fontWeight') || '',\r\n                    fontStyle: element.css('fontStyle') || '',\r\n                    fontStretch: element.css('fontStretch') || '',\r\n                    fontVariant: element.css('fontVariant') || '',\r\n                    letterSpacing: element.css('letterSpacing') || '',\r\n                    wordSpacing: element.css('wordSpacing') || ''\r\n                };\r\n            element.hide();\r\n            element.parent().append(h2);\r\n            h2.css(fn).width(Math.min(h1.text(\"pW\" + h2[0].value).width(), w))[0].select();\r\n        };\r\n\r\n        this.grid_hide_column = function(col) {\r\n            this.midWrapper.find(\".jstree-grid-column-\" + col).hide();\r\n        };\r\n        this.grid_show_column = function(col) {\r\n            this.midWrapper.find(\".jstree-grid-column-\" + col).show();\r\n        };\r\n\r\n        this._prepare_grid = function(obj) {\r\n            var gs = this._gridSettings,\r\n                c = gs.treeClass,\r\n                _this = this,\r\n                t,\r\n                cols = gs.columns || [],\r\n                width, tr = gs.isThemeroller,\r\n                uniq = this.uniq,\r\n                treecol = gs.treecol,\r\n                tree = this.element,\r\n                rootid = this.rootid,\r\n                classAdd = (tr ? \"themeroller\" : \"regular\"),\r\n                img, objData = this.get_node(obj),\r\n                defaultWidth = gs.columnWidth,\r\n                conf = gs.defaultConf,\r\n                cellClickHandler = function(tree, node, val, col, t) {\r\n                    return function(e) {\r\n                        //node = tree.find(\"#\"+node.attr(\"id\"));\r\n                        var event = eventer.create(\"select_cell.jstree-grid\");\r\n                        tree.trigger(event, [{\r\n                            value: val,\r\n                            column: col.header,\r\n                            node: node,\r\n                            grid: $(this),\r\n                            sourceName: col.value\r\n                        }]);\r\n                        if (!event.isDefaultPrevented()) {\r\n                            node.children(\".jstree-anchor\").trigger(\"click.jstree\", e);\r\n                        }\r\n                    };\r\n                },\r\n                cellRightClickHandler = function(tree, node, val, col, t) {\r\n                    return function(e) {\r\n                        if (gs.gridcontextmenu) {\r\n                            e.preventDefault();\r\n                            menu.popup(this, {\r\n                                'x': e.pageX,\r\n                                'y': e.pageY\r\n                            }, gs.gridcontextmenu(_this, tree, node, val, col, t, e.target));\r\n                        }\r\n                    };\r\n                },\r\n                hoverInHandler = function(node, jsTreeInstance) {\r\n                    return function() {\r\n                        jsTreeInstance.hover_node(node);\r\n                    };\r\n                },\r\n                hoverOutHandler = function(node, jsTreeInstance) {\r\n                    return function() {\r\n                        jsTreeInstance.dehover_node(node);\r\n                    };\r\n                },\r\n                i, val, cl, wcl, ccl, a, last, valClass, wideValClass, span, paddingleft, title, gridCellName, gridCellParentId, gridCellParent,\r\n                gridCellPrev, gridCellPrevId, gridCellNext, gridCellNextId, gridCellChild, gridCellChildId,\r\n                col, content, tmpWidth, mw = this.midWrapper,\r\n                column, lid = objData.id,\r\n                highlightSearch, isClicked,\r\n                peers = this.get_node(objData.parent).children,\r\n                // find my position in the list of peers. \"peers\" is the list of everyone at my level under my parent, in order\r\n                pos = langx.inArray(lid, peers),\r\n                hc = this.holdingCells,\r\n                rendered = false,\r\n                closed;\r\n            // get our column definition\r\n            t = $(obj);\r\n\r\n            // find the a children\r\n            a = t.children(\"[class~='jstree-anchor']\");\r\n            highlightSearch = a.hasClass(SEARCHCLASS);\r\n            isClicked = a.hasClass(\"jstree-clicked\");\r\n\r\n            if (a.length === 1) {\r\n                closed = !objData.state.opened;\r\n                gridCellName = generateCellId(uniq, lid);\r\n                gridCellParentId = objData.parent === \"#\" ? null : objData.parent;\r\n                a.addClass(c);\r\n                //renderAWidth(a,_this);\r\n                renderATitle(a, t, _this);\r\n                last = a;\r\n\r\n                // calculate position ids once\r\n                gridCellPrevId = pos <= 0 ? objData.parent : findLastClosedNode(this, peers[pos - 1]);\r\n                gridCellNextId = pos >= peers.length - 1 ? \"NULL\" : peers[pos + 1];\r\n                gridCellChildId = objData.children && objData.children.length > 0 ? objData.children[0] : \"NULL\";\r\n\r\n                // find which column our tree shuld go in\r\n                var s = this.settings.grid;\r\n                for (var i = 0, len = cols.length; i < len; i++) {\r\n                    if (treecol === i) {\r\n                        continue;\r\n                    }\r\n                    col = cols[i];\r\n                    column = this._domManipulation == null ? mw.children(\"div:eq(\" + i + \")\") : $(this._domManipulation.columns[i]); //Geht the detached column not mw.children(\"div:eq(\"+i+\")\");\r\n                    // get the cellClass, the wideCellClass, and the columnClass\r\n                    cl = col.cellClass || \"\";\r\n                    wcl = col.wideCellClass || \"\";\r\n                    ccl = col.columnClass || \"\";\r\n\r\n                    // add a column class to the Column\r\n                    column.addClass(ccl);\r\n\r\n\r\n                    // get the contents of the cell - value could be a string or a function\r\n                    val = getCellData(col.value, objData);\r\n\r\n                    if (typeof(col.format) === \"function\") {\r\n                        val = col.format(val);\r\n                    }\r\n\r\n                    // put images instead of text if needed\r\n                    if (col.images) {\r\n                        img = col.images[val] || col.images[\"default\"];\r\n                        if (img) {\r\n                            content = img[0] === \"*\" ? '<span class=\"' + img.substr(1) + '\"></span>' : '<img src=\"' + img + '\">';\r\n                        }\r\n                    } else {\r\n                        content = val;\r\n                    }\r\n\r\n                    // content cannot be blank, or it messes up heights\r\n                    if (content === undefined || content === null || BLANKRE.test(content)) {\r\n                        content = \"&nbsp;\";\r\n                    }\r\n\r\n                    // get the valueClass\r\n                    valClass = col.valueClass && objData.data !== null && objData.data !== undefined ? objData.data[col.valueClass] || \"\" : \"\";\r\n                    if (valClass && col.valueClassPrefix && col.valueClassPrefix !== \"\") {\r\n                        valClass = col.valueClassPrefix + valClass;\r\n                    }\r\n                    // get the wideValueClass\r\n                    wideValClass = col.wideValueClass && objData.data !== null && objData.data !== undefined ? objData.data[col.wideValueClass] || \"\" : \"\";\r\n                    if (wideValClass && col.wideValueClassPrefix && col.wideValueClassPrefix !== \"\") {\r\n                        wideValClass = col.wideValueClassPrefix + wideValClass;\r\n                    }\r\n                    // get the title\r\n                    title = col.title && objData.data !== null && objData.data !== undefined ? objData.data[col.title] || \"\" : \"\";\r\n                    // strip out HTML\r\n                    title = title.replace(htmlstripre, '');\r\n\r\n                    // get the width\r\n                    paddingleft = 7;\r\n                    width = col.width || defaultWidth;\r\n                    if (width !== 'auto') {\r\n                        width = tmpWidth || (width - paddingleft);\r\n                    }\r\n\r\n                    last = findDataCell(uniq, lid, i, column);\r\n                    if (!last || last.length < 1) {\r\n                        last = $(\"<div></div>\");\r\n                        $(\"<span></span>\").appendTo(last);\r\n                        last.attr(\"id\", gridCellName + i);\r\n                        last.addClass(gridCellName);\r\n                        last.attr(NODE_DATA_ATTR, lid);\r\n                        if (highlightSearch) {\r\n                            last.addClass(SEARCHCLASS);\r\n                        } else {\r\n                            last.removeClass(SEARCHCLASS);\r\n                        }\r\n                        if (isClicked) {\r\n                            last.addClass(\"jstree-clicked\");\r\n                        } else {\r\n                            last.removeClass(\"jstree-clicked\");\r\n                        }\r\n                        if (this.settings.core.themes.ellipsis === true && i !== treecol) {\r\n                            last.addClass('jstree-grid-ellipsis');\r\n                        }\r\n\r\n                    }\r\n\r\n                    // we need to check the hidden-state and see if we need to hide the node\r\n                    if (objData.state.hidden) {\r\n                        last.addClass(\"jstree-grid-hidden\");\r\n                    } else {\r\n                        last.removeClass(\"jstree-grid-hidden\");\r\n                    }\r\n\r\n                    // we need to put it in the dataCell - after the parent, but the position matters\r\n                    // if we have no parent, then we are one of the root nodes, but still need to look at peers\r\n\r\n\r\n                    // if we are first, i.e. pos === 0, we go right after the parent;\r\n                    // if we are not first, and our previous peer (one before us) is closed, we go right after the previous peer cell\r\n                    // if we are not first, and our previous peer is opened, then we have to find its youngest & lowest closed child (incl. leaf)\r\n                    //\r\n                    // probably be much easier to go *before* our next one\r\n                    // but that one might not be drawn yet\r\n                    // here is the logic for jstree drawing:\r\n                    //   it draws peers from first to last or from last to first\r\n                    //   it draws children before a parent\r\n                    //\r\n                    // so I can rely on my *parent* not being drawn, but I cannot rely on my previous peer or my next peer being drawn\r\n\r\n                    // so we do the following:\r\n                    //   1- We are the first child: install after the parent\r\n                    //   2- Our previous peer is already drawn: install after the previous peer\r\n                    //   3- Our previous peer is not drawn, we have a child that is drawn: install right before our first child\r\n                    //   4- Our previous peer is not drawn, we have no child that is drawn, our next peer is drawn: install right before our next peer\r\n                    //   5- Our previous peer is not drawn, we have no child that is drawn, our next peer is not drawn: install right after parent\r\n                    gridCellPrev = findDataCell(uniq, gridCellPrevId, i, column);\r\n                    gridCellNext = findDataCell(uniq, gridCellNextId, i, column);\r\n                    gridCellChild = findDataCell(uniq, gridCellChildId, i, column);\r\n                    gridCellParent = findDataCell(uniq, gridCellParentId, i, column);\r\n\r\n\r\n                    // if our parent is already drawn, then we put this in the right order under our parent\r\n                    if (gridCellParentId) {\r\n                        if (gridCellParent && gridCellParent.length > 0) {\r\n                            if (gridCellPrev && gridCellPrev.length > 0) {\r\n                                last.insertAfter(gridCellPrev);\r\n                            } else if (gridCellChild && gridCellChild.length > 0) {\r\n                                last.insertBefore(gridCellChild);\r\n                            } else if (gridCellNext && gridCellNext.length > 0) {\r\n                                last.insertBefore(gridCellNext);\r\n                            } else {\r\n                                last.insertAfter(gridCellParent);\r\n                            }\r\n                            rendered = true;\r\n                        } else {\r\n                            rendered = false;\r\n                        }\r\n                        // always put it in the holding cells, and then sort when the parent comes in, in case parent is (re)drawn later\r\n                        hc[gridCellName + i] = last;\r\n                    } else {\r\n                        if (gridCellPrev && gridCellPrev.length > 0) {\r\n                            last.insertAfter(gridCellPrev);\r\n                        } else if (gridCellChild && gridCellChild.length > 0) {\r\n                            last.insertBefore(gridCellChild);\r\n                        } else if (gridCellNext && gridCellNext.length > 0) {\r\n                            last.insertBefore(gridCellNext);\r\n                        } else {\r\n                            last.appendTo(column);\r\n                        }\r\n                        rendered = true;\r\n                    }\r\n                    // do we have any children waiting for this cell? walk down through the children/grandchildren/etc tree\r\n                    if (rendered) {\r\n                        var toRen = this.getHoldingCells(objData, i, hc);\r\n                        last.after(toRen);\r\n                    }\r\n                    // need to make the height of this match the line height of the tree. How?\r\n                    span = last.children(\"span\");\r\n\r\n                    // create a span inside the div, so we can control what happens in the whole div versus inside just the text/background\r\n                    span.addClass(cl + \" \" + valClass).html(content);\r\n                    last = last.css(conf).addClass(\"jstree-grid-cell jstree-grid-cell-regular jstree-grid-cell-root-\" + rootid + \" jstree-grid-cell-\" + classAdd + \" \" + wcl + \" \" + wideValClass + (tr ? \" ui-state-default\" : \"\")).addClass(\"jstree-grid-col-\" + i).addClass(\"jstree-animated\");\r\n                    // add click handler for clicking inside a grid cell\r\n                    last.click(cellClickHandler(tree, t, val, col, this));\r\n                    last.on(\"contextmenu\", cellRightClickHandler(tree, t, val, col, this));\r\n                    last.hover(hoverInHandler(t, this), hoverOutHandler(t, this));\r\n\r\n                    if (title) {\r\n                        span.attr(\"title\", title);\r\n                    }\r\n\r\n                    tree.trigger(\"render_cell.jstree-grid\", [{\r\n                        value: val,\r\n                        column: col.header,\r\n                        node: t,\r\n                        sourceName: col.value\r\n                    }]);\r\n                }\r\n                last.addClass(\"jstree-grid-cell-last\" + (tr ? \" ui-state-default\" : \"\"));\r\n                // if there is no width given for the last column, do it via automatic\r\n                if (cols[cols.length - 1].width === undefined) {\r\n                    last.addClass(\"jstree-grid-width-auto\").next(\".jstree-grid-separator\").remove();\r\n                }\r\n            }\r\n            this.element.css({\r\n                'overflow-y': 'auto !important'\r\n            });\r\n        };\r\n        // clean up holding cells\r\n        this.holdingCells = {};\r\n\r\n        // need to do alternating background colors or borders\r\n    };\r\n\r\n    return $;\r\n});\ndefine('skylark-widgets-hierarchy/addons/types',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"../Hierarchy\"\r\n],function(langx,browser,eventer,noder,geom,$,jstree){\r\n\t\"use strict\";\r\n\r\n\tif($.jstree.plugins.types) { return; }\r\n\r\n\t/**\r\n\t * An object storing all types as key value pairs, where the key is the type name and the value is an object that could contain following keys (all optional).\r\n\t *\r\n\t * * `max_children` the maximum number of immediate children this node type can have. Do not specify or set to `-1` for unlimited.\r\n\t * * `max_depth` the maximum number of nesting this node type can have. A value of `1` would mean that the node can have children, but no grandchildren. Do not specify or set to `-1` for unlimited.\r\n\t * * `valid_children` an array of node type strings, that nodes of this type can have as children. Do not specify or set to `-1` for no limits.\r\n\t * * `icon` a string - can be a path to an icon or a className, if using an image that is in the current directory use a `./` prefix, otherwise it will be detected as a class. Omit to use the default icon from your theme.\r\n\t * * `li_attr` an object of values which will be used to add HTML attributes on the resulting LI DOM node (merged with the node's own data)\r\n\t * * `a_attr` an object of values which will be used to add HTML attributes on the resulting A DOM node (merged with the node's own data)\r\n\t *\r\n\t * There are two predefined types:\r\n\t *\r\n\t * * `#` represents the root of the tree, for example `max_children` would control the maximum number of root nodes.\r\n\t * * `default` represents the default node - any settings here will be applied to all nodes that do not have a type specified.\r\n\t *\r\n\t * @name $.jstree.defaults.types\r\n\t * @plugin types\r\n\t */\r\n\t$.jstree.defaults.types = {\r\n\t\t'default' : {}\r\n\t};\r\n\t$.jstree.defaults.types[$.jstree.root] = {};\r\n\r\n\t$.jstree.plugins.types = function (options, parent) {\r\n\t\tthis.init = function (el, options) {\r\n\t\t\tvar i, j;\r\n\t\t\tif(options && options.types && options.types['default']) {\r\n\t\t\t\tfor(i in options.types) {\r\n\t\t\t\t\tif(i !== \"default\" && i !== $.jstree.root && options.types.hasOwnProperty(i)) {\r\n\t\t\t\t\t\tfor(j in options.types['default']) {\r\n\t\t\t\t\t\t\tif(options.types['default'].hasOwnProperty(j) && options.types[i][j] === undefined) {\r\n\t\t\t\t\t\t\t\toptions.types[i][j] = options.types['default'][j];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tparent.init.call(this, el, options);\r\n\t\t\tthis._model.data[$.jstree.root].type = $.jstree.root;\r\n\t\t};\r\n\t\tthis.refresh = function (skip_loading, forget_state) {\r\n\t\t\tparent.refresh.call(this, skip_loading, forget_state);\r\n\t\t\tthis._model.data[$.jstree.root].type = $.jstree.root;\r\n\t\t};\r\n\t\tthis.bind = function () {\r\n\t\t\tthis.element\r\n\t\t\t\t.on('model.jstree', langx.proxy(function (e, data) {\r\n\t\t\t\t\t\tvar m = this._model.data,\r\n\t\t\t\t\t\t\tdpc = data.nodes,\r\n\t\t\t\t\t\t\tt = this.settings.types,\r\n\t\t\t\t\t\t\ti, j, c = 'default', k;\r\n\t\t\t\t\t\tfor(i = 0, j = dpc.length; i < j; i++) {\r\n\t\t\t\t\t\t\tc = 'default';\r\n\t\t\t\t\t\t\tif(m[dpc[i]].original && m[dpc[i]].original.type && t[m[dpc[i]].original.type]) {\r\n\t\t\t\t\t\t\t\tc = m[dpc[i]].original.type;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(m[dpc[i]].data && m[dpc[i]].data.jstree && m[dpc[i]].data.jstree.type && t[m[dpc[i]].data.jstree.type]) {\r\n\t\t\t\t\t\t\t\tc = m[dpc[i]].data.jstree.type;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tm[dpc[i]].type = c;\r\n\t\t\t\t\t\t\tif(m[dpc[i]].icon === true && t[c].icon !== undefined) {\r\n\t\t\t\t\t\t\t\tm[dpc[i]].icon = t[c].icon;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(t[c].li_attr !== undefined && typeof t[c].li_attr === 'object') {\r\n\t\t\t\t\t\t\t\tfor (k in t[c].li_attr) {\r\n\t\t\t\t\t\t\t\t\tif (t[c].li_attr.hasOwnProperty(k)) {\r\n\t\t\t\t\t\t\t\t\t\tif (k === 'id') {\r\n\t\t\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\telse if (m[dpc[i]].li_attr[k] === undefined) {\r\n\t\t\t\t\t\t\t\t\t\t\tm[dpc[i]].li_attr[k] = t[c].li_attr[k];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\telse if (k === 'class') {\r\n\t\t\t\t\t\t\t\t\t\t\tm[dpc[i]].li_attr['class'] = t[c].li_attr['class'] + ' ' + m[dpc[i]].li_attr['class'];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(t[c].a_attr !== undefined && typeof t[c].a_attr === 'object') {\r\n\t\t\t\t\t\t\t\tfor (k in t[c].a_attr) {\r\n\t\t\t\t\t\t\t\t\tif (t[c].a_attr.hasOwnProperty(k)) {\r\n\t\t\t\t\t\t\t\t\t\tif (k === 'id') {\r\n\t\t\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\telse if (m[dpc[i]].a_attr[k] === undefined) {\r\n\t\t\t\t\t\t\t\t\t\t\tm[dpc[i]].a_attr[k] = t[c].a_attr[k];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\telse if (k === 'href' && m[dpc[i]].a_attr[k] === '#') {\r\n\t\t\t\t\t\t\t\t\t\t\tm[dpc[i]].a_attr['href'] = t[c].a_attr['href'];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\telse if (k === 'class') {\r\n\t\t\t\t\t\t\t\t\t\t\tm[dpc[i]].a_attr['class'] = t[c].a_attr['class'] + ' ' + m[dpc[i]].a_attr['class'];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tm[$.jstree.root].type = $.jstree.root;\r\n\t\t\t\t\t}, this));\r\n\t\t\tparent.bind.call(this);\r\n\t\t};\r\n\t\tthis.get_json = function (obj, options, flat) {\r\n\t\t\tvar i, j,\r\n\t\t\t\tm = this._model.data,\r\n\t\t\t\topt = options ? langx.extend(true, {}, options, {no_id:false}) : {},\r\n\t\t\t\ttmp = parent.get_json.call(this, obj, opt, flat);\r\n\t\t\tif(tmp === false) { return false; }\r\n\t\t\tif(langx.isArray(tmp)) {\r\n\t\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\r\n\t\t\t\t\ttmp[i].type = tmp[i].id && m[tmp[i].id] && m[tmp[i].id].type ? m[tmp[i].id].type : \"default\";\r\n\t\t\t\t\tif(options && options.no_id) {\r\n\t\t\t\t\t\tdelete tmp[i].id;\r\n\t\t\t\t\t\tif(tmp[i].li_attr && tmp[i].li_attr.id) {\r\n\t\t\t\t\t\t\tdelete tmp[i].li_attr.id;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(tmp[i].a_attr && tmp[i].a_attr.id) {\r\n\t\t\t\t\t\t\tdelete tmp[i].a_attr.id;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttmp.type = tmp.id && m[tmp.id] && m[tmp.id].type ? m[tmp.id].type : \"default\";\r\n\t\t\t\tif(options && options.no_id) {\r\n\t\t\t\t\ttmp = this._delete_ids(tmp);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn tmp;\r\n\t\t};\r\n\t\tthis._delete_ids = function (tmp) {\r\n\t\t\tif(langx.isArray(tmp)) {\r\n\t\t\t\tfor(var i = 0, j = tmp.length; i < j; i++) {\r\n\t\t\t\t\ttmp[i] = this._delete_ids(tmp[i]);\r\n\t\t\t\t}\r\n\t\t\t\treturn tmp;\r\n\t\t\t}\r\n\t\t\tdelete tmp.id;\r\n\t\t\tif(tmp.li_attr && tmp.li_attr.id) {\r\n\t\t\t\tdelete tmp.li_attr.id;\r\n\t\t\t}\r\n\t\t\tif(tmp.a_attr && tmp.a_attr.id) {\r\n\t\t\t\tdelete tmp.a_attr.id;\r\n\t\t\t}\r\n\t\t\tif(tmp.children && langx.isArray(tmp.children)) {\r\n\t\t\t\ttmp.children = this._delete_ids(tmp.children);\r\n\t\t\t}\r\n\t\t\treturn tmp;\r\n\t\t};\r\n\t\tthis.check = function (chk, obj, par, pos, more) {\r\n\t\t\tif(parent.check.call(this, chk, obj, par, pos, more) === false) { return false; }\r\n\t\t\tobj = obj && obj.id ? obj : this.get_node(obj);\r\n\t\t\tpar = par && par.id ? par : this.get_node(par);\r\n\t\t\tvar m = obj && obj.id ? (more && more.origin ? more.origin : $.jstree.reference(obj.id)) : null, tmp, d, i, j;\r\n\t\t\tm = m && m._model && m._model.data ? m._model.data : null;\r\n\t\t\tswitch(chk) {\r\n\t\t\t\tcase \"create_node\":\r\n\t\t\t\tcase \"move_node\":\r\n\t\t\t\tcase \"copy_node\":\r\n\t\t\t\t\tif(chk !== 'move_node' || langx.inArray(obj.id, par.children) === -1) {\r\n\t\t\t\t\t\ttmp = this.get_rules(par);\r\n\t\t\t\t\t\tif(tmp.max_children !== undefined && tmp.max_children !== -1 && tmp.max_children === par.children.length) {\r\n\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'types', 'id' : 'types_01', 'reason' : 'max_children prevents function: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(tmp.valid_children !== undefined && tmp.valid_children !== -1 && langx.inArray((obj.type || 'default'), tmp.valid_children) === -1) {\r\n\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'types', 'id' : 'types_02', 'reason' : 'valid_children prevents function: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(m && obj.children_d && obj.parents) {\r\n\t\t\t\t\t\t\td = 0;\r\n\t\t\t\t\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\td = Math.max(d, m[obj.children_d[i]].parents.length);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\td = d - obj.parents.length + 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(d <= 0 || d === undefined) { d = 1; }\r\n\t\t\t\t\t\tdo {\r\n\t\t\t\t\t\t\tif(tmp.max_depth !== undefined && tmp.max_depth !== -1 && tmp.max_depth < d) {\r\n\t\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'types', 'id' : 'types_03', 'reason' : 'max_depth prevents function: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\r\n\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tpar = this.get_node(par.parent);\r\n\t\t\t\t\t\t\ttmp = this.get_rules(par);\r\n\t\t\t\t\t\t\td++;\r\n\t\t\t\t\t\t} while(par);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t};\r\n\t\t/**\r\n\t\t * used to retrieve the type settings object for a node\r\n\t\t * @name get_rules(obj)\r\n\t\t * @param {mixed} obj the node to find the rules for\r\n\t\t * @return {Object}\r\n\t\t * @plugin types\r\n\t\t */\r\n\t\tthis.get_rules = function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj) { return false; }\r\n\t\t\tvar tmp = this.get_type(obj, true);\r\n\t\t\tif(tmp.max_depth === undefined) { tmp.max_depth = -1; }\r\n\t\t\tif(tmp.max_children === undefined) { tmp.max_children = -1; }\r\n\t\t\tif(tmp.valid_children === undefined) { tmp.valid_children = -1; }\r\n\t\t\treturn tmp;\r\n\t\t};\r\n\t\t/**\r\n\t\t * used to retrieve the type string or settings object for a node\r\n\t\t * @name get_type(obj [, rules])\r\n\t\t * @param {mixed} obj the node to find the rules for\r\n\t\t * @param {Boolean} rules if set to `true` instead of a string the settings object will be returned\r\n\t\t * @return {String|Object}\r\n\t\t * @plugin types\r\n\t\t */\r\n\t\tthis.get_type = function (obj, rules) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\treturn (!obj) ? false : ( rules ? langx.extend({ 'type' : obj.type }, this.settings.types[obj.type]) : obj.type);\r\n\t\t};\r\n\t\t/**\r\n\t\t * used to change a node's type\r\n\t\t * @name set_type(obj, type)\r\n\t\t * @param {mixed} obj the node to change\r\n\t\t * @param {String} type the new type\r\n\t\t * @plugin types\r\n\t\t */\r\n\t\tthis.set_type = function (obj, type) {\r\n\t\t\tvar m = this._model.data, t, t1, t2, old_type, old_icon, k, d, a;\r\n\t\t\tif(langx.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.set_type(obj[t1], type);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tt = this.settings.types;\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!t[type] || !obj) { return false; }\r\n\t\t\td = this.get_node(obj, true);\r\n\t\t\tif (d && d.length) {\r\n\t\t\t\ta = d.children('.jstree-anchor');\r\n\t\t\t}\r\n\t\t\told_type = obj.type;\r\n\t\t\told_icon = this.get_icon(obj);\r\n\t\t\tobj.type = type;\r\n\t\t\tif(old_icon === true || !t[old_type] || (t[old_type].icon !== undefined && old_icon === t[old_type].icon)) {\r\n\t\t\t\tthis.set_icon(obj, t[type].icon !== undefined ? t[type].icon : true);\r\n\t\t\t}\r\n\r\n\t\t\t// remove old type props\r\n\t\t\tif(t[old_type] && t[old_type].li_attr !== undefined && typeof t[old_type].li_attr === 'object') {\r\n\t\t\t\tfor (k in t[old_type].li_attr) {\r\n\t\t\t\t\tif (t[old_type].li_attr.hasOwnProperty(k)) {\r\n\t\t\t\t\t\tif (k === 'id') {\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (k === 'class') {\r\n\t\t\t\t\t\t\tm[obj.id].li_attr['class'] = (m[obj.id].li_attr['class'] || '').replace(t[old_type].li_attr[k], '');\r\n\t\t\t\t\t\t\tif (d) { d.removeClass(t[old_type].li_attr[k]); }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (m[obj.id].li_attr[k] === t[old_type].li_attr[k]) {\r\n\t\t\t\t\t\t\tm[obj.id].li_attr[k] = null;\r\n\t\t\t\t\t\t\tif (d) { d.removeAttr(k); }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(t[old_type] && t[old_type].a_attr !== undefined && typeof t[old_type].a_attr === 'object') {\r\n\t\t\t\tfor (k in t[old_type].a_attr) {\r\n\t\t\t\t\tif (t[old_type].a_attr.hasOwnProperty(k)) {\r\n\t\t\t\t\t\tif (k === 'id') {\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (k === 'class') {\r\n\t\t\t\t\t\t\tm[obj.id].a_attr['class'] = (m[obj.id].a_attr['class'] || '').replace(t[old_type].a_attr[k], '');\r\n\t\t\t\t\t\t\tif (a) { a.removeClass(t[old_type].a_attr[k]); }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (m[obj.id].a_attr[k] === t[old_type].a_attr[k]) {\r\n\t\t\t\t\t\t\tif (k === 'href') {\r\n\t\t\t\t\t\t\t\tm[obj.id].a_attr[k] = '#';\r\n\t\t\t\t\t\t\t\tif (a) { a.attr('href', '#'); }\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tdelete m[obj.id].a_attr[k];\r\n\t\t\t\t\t\t\t\tif (a) { a.removeAttr(k); }\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// add new props\r\n\t\t\tif(t[type].li_attr !== undefined && typeof t[type].li_attr === 'object') {\r\n\t\t\t\tfor (k in t[type].li_attr) {\r\n\t\t\t\t\tif (t[type].li_attr.hasOwnProperty(k)) {\r\n\t\t\t\t\t\tif (k === 'id') {\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (m[obj.id].li_attr[k] === undefined) {\r\n\t\t\t\t\t\t\tm[obj.id].li_attr[k] = t[type].li_attr[k];\r\n\t\t\t\t\t\t\tif (d) {\r\n\t\t\t\t\t\t\t\tif (k === 'class') {\r\n\t\t\t\t\t\t\t\t\td.addClass(t[type].li_attr[k]);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\td.attr(k, t[type].li_attr[k]);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (k === 'class') {\r\n\t\t\t\t\t\t\tm[obj.id].li_attr['class'] = t[type].li_attr[k] + ' ' + m[obj.id].li_attr['class'];\r\n\t\t\t\t\t\t\tif (d) { d.addClass(t[type].li_attr[k]); }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(t[type].a_attr !== undefined && typeof t[type].a_attr === 'object') {\r\n\t\t\t\tfor (k in t[type].a_attr) {\r\n\t\t\t\t\tif (t[type].a_attr.hasOwnProperty(k)) {\r\n\t\t\t\t\t\tif (k === 'id') {\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (m[obj.id].a_attr[k] === undefined) {\r\n\t\t\t\t\t\t\tm[obj.id].a_attr[k] = t[type].a_attr[k];\r\n\t\t\t\t\t\t\tif (a) {\r\n\t\t\t\t\t\t\t\tif (k === 'class') {\r\n\t\t\t\t\t\t\t\t\ta.addClass(t[type].a_attr[k]);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\ta.attr(k, t[type].a_attr[k]);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (k === 'href' && m[obj.id].a_attr[k] === '#') {\r\n\t\t\t\t\t\t\tm[obj.id].a_attr['href'] = t[type].a_attr['href'];\r\n\t\t\t\t\t\t\tif (a) { a.attr('href', t[type].a_attr['href']); }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (k === 'class') {\r\n\t\t\t\t\t\t\tm[obj.id].a_attr['class'] = t[type].a_attr['class'] + ' ' + m[obj.id].a_attr['class'];\r\n\t\t\t\t\t\t\tif (a) { a.addClass(t[type].a_attr[k]); }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t};\r\n\t};\r\n\t// include the types plugin by default\r\n\t// $.jstree.defaults.plugins.push(\"types\");\r\n\treturn $;\r\n\t\r\n});\r\n\ndefine('skylark-widgets-hierarchy/addons/unique',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"../Hierarchy\"\r\n],function(langx,browser,eventer,noder,geom,$,jstree){\r\n\t\"use strict\";\r\n\r\n\tif($.jstree.plugins.unique) { return; }\r\n\r\n\t/**\r\n\t * stores all defaults for the unique plugin\r\n\t * @name $.jstree.defaults.unique\r\n\t * @plugin unique\r\n\t */\r\n\t$.jstree.defaults.unique = {\r\n\t\t/**\r\n\t\t * Indicates if the comparison should be case sensitive. Default is `false`.\r\n\t\t * @name $.jstree.defaults.unique.case_sensitive\r\n\t\t * @plugin unique\r\n\t\t */\r\n\t\tcase_sensitive : false,\r\n\t\t/**\r\n\t\t * Indicates if white space should be trimmed before the comparison. Default is `false`.\r\n\t\t * @name $.jstree.defaults.unique.trim_whitespace\r\n\t\t * @plugin unique\r\n\t\t */\r\n\t\ttrim_whitespace : false,\r\n\t\t/**\r\n\t\t * A callback executed in the instance's scope when a new node is created and the name is already taken, the two arguments are the conflicting name and the counter. The default will produce results like `New node (2)`.\r\n\t\t * @name $.jstree.defaults.unique.duplicate\r\n\t\t * @plugin unique\r\n\t\t */\r\n\t\tduplicate : function (name, counter) {\r\n\t\t\treturn name + ' (' + counter + ')';\r\n\t\t}\r\n\t};\r\n\r\n\t$.jstree.plugins.unique = function (options, parent) {\r\n\t\tthis.check = function (chk, obj, par, pos, more) {\r\n\t\t\tif(parent.check.call(this, chk, obj, par, pos, more) === false) { return false; }\r\n\t\t\tobj = obj && obj.id ? obj : this.get_node(obj);\r\n\t\t\tpar = par && par.id ? par : this.get_node(par);\r\n\t\t\tif(!par || !par.children) { return true; }\r\n\t\t\tvar n = chk === \"rename_node\" ? pos : obj.text,\r\n\t\t\t\tc = [],\r\n\t\t\t\ts = this.settings.unique.case_sensitive,\r\n\t\t\t\tw = this.settings.unique.trim_whitespace,\r\n\t\t\t\tm = this._model.data, i, j, t;\r\n\t\t\tfor(i = 0, j = par.children.length; i < j; i++) {\r\n\t\t\t\tt = m[par.children[i]].text;\r\n\t\t\t\tif (!s) {\r\n\t\t\t\t\tt = t.toLowerCase();\r\n\t\t\t\t}\r\n\t\t\t\tif (w) {\r\n\t\t\t\t\tt = t.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\r\n\t\t\t\t}\r\n\t\t\t\tc.push(t);\r\n\t\t\t}\r\n\t\t\tif(!s) { n = n.toLowerCase(); }\r\n\t\t\tif (w) { n = n.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, ''); }\r\n\t\t\tswitch(chk) {\r\n\t\t\t\tcase \"delete_node\":\r\n\t\t\t\t\treturn true;\r\n\t\t\t\tcase \"rename_node\":\r\n\t\t\t\t\tt = obj.text || '';\r\n\t\t\t\t\tif (!s) {\r\n\t\t\t\t\t\tt = t.toLowerCase();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (w) {\r\n\t\t\t\t\t\tt = t.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\r\n\t\t\t\t\t}\r\n\t\t\t\t\ti = (langx.inArray(n, c) === -1 || (obj.text && t === n));\r\n\t\t\t\t\tif(!i) {\r\n\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'unique', 'id' : 'unique_01', 'reason' : 'Child with name ' + n + ' already exists. Preventing: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn i;\r\n\t\t\t\tcase \"create_node\":\r\n\t\t\t\t\ti = (langx.inArray(n, c) === -1);\r\n\t\t\t\t\tif(!i) {\r\n\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'unique', 'id' : 'unique_04', 'reason' : 'Child with name ' + n + ' already exists. Preventing: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn i;\r\n\t\t\t\tcase \"copy_node\":\r\n\t\t\t\t\ti = (langx.inArray(n, c) === -1);\r\n\t\t\t\t\tif(!i) {\r\n\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'unique', 'id' : 'unique_02', 'reason' : 'Child with name ' + n + ' already exists. Preventing: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn i;\r\n\t\t\t\tcase \"move_node\":\r\n\t\t\t\t\ti = ( (obj.parent === par.id && (!more || !more.is_multi)) || langx.inArray(n, c) === -1);\r\n\t\t\t\t\tif(!i) {\r\n\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'unique', 'id' : 'unique_03', 'reason' : 'Child with name ' + n + ' already exists. Preventing: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn i;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t};\r\n\t\tthis.create_node = function (par, node, pos, callback, is_loaded) {\r\n\t\t\tif(!node || node.text === undefined) {\r\n\t\t\t\tif(par === null) {\r\n\t\t\t\t\tpar = $.jstree.root;\r\n\t\t\t\t}\r\n\t\t\t\tpar = this.get_node(par);\r\n\t\t\t\tif(!par) {\r\n\t\t\t\t\treturn parent.create_node.call(this, par, node, pos, callback, is_loaded);\r\n\t\t\t\t}\r\n\t\t\t\tpos = pos === undefined ? \"last\" : pos;\r\n\t\t\t\tif(!pos.toString().match(/^(before|after)$/) && !is_loaded && !this.is_loaded(par)) {\r\n\t\t\t\t\treturn parent.create_node.call(this, par, node, pos, callback, is_loaded);\r\n\t\t\t\t}\r\n\t\t\t\tif(!node) { node = {}; }\r\n\t\t\t\tvar tmp, n, dpc, i, j, m = this._model.data, s = this.settings.unique.case_sensitive, w = this.settings.unique.trim_whitespace, cb = this.settings.unique.duplicate, t;\r\n\t\t\t\tn = tmp = this.get_string('New node');\r\n\t\t\t\tdpc = [];\r\n\t\t\t\tfor(i = 0, j = par.children.length; i < j; i++) {\r\n\t\t\t\t\tt = m[par.children[i]].text;\r\n\t\t\t\t\tif (!s) {\r\n\t\t\t\t\t\tt = t.toLowerCase();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (w) {\r\n\t\t\t\t\t\tt = t.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdpc.push(t);\r\n\t\t\t\t}\r\n\t\t\t\ti = 1;\r\n\t\t\t\tt = n;\r\n\t\t\t\tif (!s) {\r\n\t\t\t\t\tt = t.toLowerCase();\r\n\t\t\t\t}\r\n\t\t\t\tif (w) {\r\n\t\t\t\t\tt = t.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\r\n\t\t\t\t}\r\n\t\t\t\twhile(langx.inArray(t, dpc) !== -1) {\r\n\t\t\t\t\tn = cb.call(this, tmp, (++i)).toString();\r\n\t\t\t\t\tt = n;\r\n\t\t\t\t\tif (!s) {\r\n\t\t\t\t\t\tt = t.toLowerCase();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (w) {\r\n\t\t\t\t\t\tt = t.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tnode.text = n;\r\n\t\t\t}\r\n\t\t\treturn parent.create_node.call(this, par, node, pos, callback, is_loaded);\r\n\t\t};\r\n\t};\r\n\r\n\t// include the unique plugin by default\r\n\t// $.jstree.defaults.plugins.push(\"unique\");\r\n\treturn $;\r\n\t\r\n});\r\n\ndefine('skylark-widgets-hierarchy/addons/wholerow',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"../Hierarchy\"\r\n],function(langx,browser,eventer,noder,geom,$,jstree){\r\n\t\"use strict\";\r\n\r\n\tif($.jstree.plugins.wholerow) { return; }\r\n\r\n\tvar div = document.createElement('DIV');\r\n\tdiv.setAttribute('unselectable','on');\r\n\tdiv.setAttribute('role','presentation');\r\n\tdiv.className = 'jstree-wholerow';\r\n\tdiv.innerHTML = '&#160;';\r\n\t$.jstree.plugins.wholerow = function (options, parent) {\r\n\t\tthis.bind = function () {\r\n\t\t\tparent.bind.call(this);\r\n\r\n\t\t\tthis.element\r\n\t\t\t\t.on('ready.jstree set_state.jstree', langx.proxy(function () {\r\n\t\t\t\t\t\tthis.hide_dots();\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"init.jstree loading.jstree ready.jstree\", langx.proxy(function () {\r\n\t\t\t\t\t\t//div.style.height = this._data.core.li_height + 'px';\r\n\t\t\t\t\t\tthis.get_container_ul().addClass('jstree-wholerow-ul');\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"deselect_all.jstree\", langx.proxy(function (e, data) {\r\n\t\t\t\t\t\tthis.element.find('.jstree-wholerow-clicked').removeClass('jstree-wholerow-clicked');\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"changed.jstree\", langx.proxy(function (e, data) {\r\n\t\t\t\t\t\tthis.element.find('.jstree-wholerow-clicked').removeClass('jstree-wholerow-clicked');\r\n\t\t\t\t\t\tvar tmp = false, i, j;\r\n\t\t\t\t\t\tfor(i = 0, j = data.selected.length; i < j; i++) {\r\n\t\t\t\t\t\t\ttmp = this.get_node(data.selected[i], true);\r\n\t\t\t\t\t\t\tif(tmp && tmp.length) {\r\n\t\t\t\t\t\t\t\ttmp.children('.jstree-wholerow').addClass('jstree-wholerow-clicked');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"open_node.jstree\", langx.proxy(function (e, data) {\r\n\t\t\t\t\t\tthis.get_node(data.node, true).find('.jstree-clicked').parent().children('.jstree-wholerow').addClass('jstree-wholerow-clicked');\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"hover_node.jstree dehover_node.jstree\", langx.proxy(function (e, data) {\r\n\t\t\t\t\t\tif(e.type === \"hover_node\" && this.is_disabled(data.node)) { return; }\r\n\t\t\t\t\t\tthis.get_node(data.node, true).children('.jstree-wholerow')[e.type === \"hover_node\"?\"addClass\":\"removeClass\"]('jstree-wholerow-hovered');\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"contextmenu.jstree\", \".jstree-wholerow\", langx.proxy(function (e) {\r\n\t\t\t\t\t\tif (this._data.contextmenu) {\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\tvar tmp = $.Event('contextmenu', { metaKey : e.metaKey, ctrlKey : e.ctrlKey, altKey : e.altKey, shiftKey : e.shiftKey, pageX : e.pageX, pageY : e.pageY });\r\n\t\t\t\t\t\t\t$(e.currentTarget).closest(\".jstree-node\").children(\".jstree-anchor\").first().trigger(tmp);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t/*!\r\n\t\t\t\t.on(\"mousedown.jstree touchstart.jstree\", \".jstree-wholerow\", function (e) {\r\n\t\t\t\t\t\tif(e.target === e.currentTarget) {\r\n\t\t\t\t\t\t\tvar a = $(e.currentTarget).closest(\".jstree-node\").children(\".jstree-anchor\");\r\n\t\t\t\t\t\t\te.target = a[0];\r\n\t\t\t\t\t\t\ta.trigger(e);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t*/\r\n\t\t\t\t.on(\"click.jstree\", \".jstree-wholerow\", function (e) {\r\n\t\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\t\tvar tmp = $.Event('click', { metaKey : e.metaKey, ctrlKey : e.ctrlKey, altKey : e.altKey, shiftKey : e.shiftKey });\r\n\t\t\t\t\t\t$(e.currentTarget).closest(\".jstree-node\").children(\".jstree-anchor\").first().trigger(tmp).focus();\r\n\t\t\t\t\t})\r\n\t\t\t\t.on(\"dblclick.jstree\", \".jstree-wholerow\", function (e) {\r\n\t\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\t\tvar tmp = $.Event('dblclick', { metaKey : e.metaKey, ctrlKey : e.ctrlKey, altKey : e.altKey, shiftKey : e.shiftKey });\r\n\t\t\t\t\t\t$(e.currentTarget).closest(\".jstree-node\").children(\".jstree-anchor\").first().trigger(tmp).focus();\r\n\t\t\t\t\t})\r\n\t\t\t\t.on(\"click.jstree\", \".jstree-leaf > .jstree-ocl\", langx.proxy(function (e) {\r\n\t\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\t\tvar tmp = $.Event('click', { metaKey : e.metaKey, ctrlKey : e.ctrlKey, altKey : e.altKey, shiftKey : e.shiftKey });\r\n\t\t\t\t\t\t$(e.currentTarget).closest(\".jstree-node\").children(\".jstree-anchor\").first().trigger(tmp).focus();\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"mouseover.jstree\", \".jstree-wholerow, .jstree-icon\", langx.proxy(function (e) {\r\n\t\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\t\tif(!this.is_disabled(e.currentTarget)) {\r\n\t\t\t\t\t\t\tthis.hover_node(e.currentTarget);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"mouseleave.jstree\", \".jstree-node\", langx.proxy(function (e) {\r\n\t\t\t\t\t\tthis.dehover_node(e.currentTarget);\r\n\t\t\t\t\t}, this));\r\n\t\t};\r\n\t\tthis.teardown = function () {\r\n\t\t\tif(this.settings.wholerow) {\r\n\t\t\t\tthis.element.find(\".jstree-wholerow\").remove();\r\n\t\t\t}\r\n\t\t\tparent.teardown.call(this);\r\n\t\t};\r\n\t\tthis.redraw_node = function(obj, deep, callback, force_render) {\r\n\t\t\tobj = parent.redraw_node.apply(this, arguments);\r\n\t\t\tif(obj) {\r\n\t\t\t\tvar tmp = div.cloneNode(true);\r\n\t\t\t\t//tmp.style.height = this._data.core.li_height + 'px';\r\n\t\t\t\tif(langx.inArray(obj.id, this._data.core.selected) !== -1) { tmp.className += ' jstree-wholerow-clicked'; }\r\n\t\t\t\tif(this._data.core.focused && this._data.core.focused === obj.id) { tmp.className += ' jstree-wholerow-hovered'; }\r\n\t\t\t\tobj.insertBefore(tmp, obj.childNodes[0]);\r\n\t\t\t}\r\n\t\t\treturn obj;\r\n\t\t};\r\n\t};\r\n\t// include the wholerow plugin by default\r\n\t// $.jstree.defaults.plugins.push(\"wholerow\");\r\n\r\n\treturn $;\r\n\r\n});\r\n\ndefine('skylark-widgets-hierarchy/main',[\r\n    \"skylark-domx-query\",\r\n    \"./Hierarchy\",\r\n    \"./addons/changed\",\r\n    \"./addons/checkbox\",\r\n    \"./addons/conditionalselect\",\r\n    \"./addons/contextmenu\",\r\n    \"./addons/dnd\",\r\n    \"./addons/massload\",\r\n    \"./addons/search\",\r\n    \"./addons/sort\",\r\n    \"./addons/state\",\r\n    \"./addons/treegrid\",\r\n    \"./addons/types\",\r\n    \"./addons/unique\",\r\n    \"./addons/wholerow\"\r\n], function($) {\r\n    return $;\r\n});\ndefine('skylark-widgets-hierarchy', ['skylark-widgets-hierarchy/main'], function (main) { return main; });\n\n"]}