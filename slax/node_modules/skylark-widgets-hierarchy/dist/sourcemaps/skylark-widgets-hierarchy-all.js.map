{"version":3,"sources":["skylark-widgets-hierarchy-all.js"],"names":["define","obj1","path","obj2","split","length","ns","i","name","_attach","skylark","attach","obj","main","class2type","toString","type","forEach","toLowerCase","String","call","isEmptyObject","isFunction","value","isHtmlNode","nodeType","isNumber","isObject","isString","isWindow","window","isArray","object","constructor","Array","isArrayLike","isBoolean","isDefined","isDocument","DOCUMENT_NODE","isEmpty","isNull","isNumeric","isPlainObject","Object","getPrototypeOf","prototype","isSameOrigin","href","origin","location","protocol","hostname","port","startsWith","isSymbol","isObjectLike","objectToString","symbolTag","isUndefined","undefined","types","INFINITY","MAX_INTEGER","NAN","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","toFinite","toNumber","sign","other","valueOf","replace","isBinary","test","slice","toInteger","result","remainder","numbers","eq","deepEq","hasOwnProperty","keysFunc","defaults","SymbolProto","Symbol","allKeys","keys","key","push","has","_mixin","target","source","deep","safe","_parseMixinArgs","args","params","arguments","shift","pop","sources","mixin","apply","this","values","a","b","aStack","bStack","className","areArrays","aCtor","bCtor","clone","src","checkCloneMethod","copy","index","l","each","callback","undef","extend","arg","isEqual","includes","collection","fromIndex","guard","nativeMax","indexOf","baseIndexOf","isMatch","attrs","omit","prop1","prop2","pn","pick","removeItem","items","item","idx","splice","fallback","prop","safeMixin","objects","filter","baseFindIndex","array","predicate","fromRight","baseIsNaN","flatten","j","compact","first","n","func","grep","out","inArray","makeArray","offset","startWith","concat","merge","second","arr","fn","map","elements","reduce","initialValue","uniq","arrays","createClass","_constructor","_construct","init","props","parent","mixins","options","innerParent","ctor","Error","clss","unshift","superclass","cls","clsMixines","serialMixins","newCtor","xtor","Function","create","__proto__","__mixin__","mergeMixins","klassName","__mixins__","partial","proto","_super","noOverrided","overrides","superFn","tmp","overrided","ret","defineProperty","extendClass","inherit","f1","klass","QueryResults","results","isPromise","then","addIterativeMethod","method","Deferred","when","delegate","total","ArrayStore","queryEngine","query","queryObject","required","execute","thisObject","cache","buildFn","sortSet","sort","aValue","attribute","bValue","descending","start","count","Infinity","matches","idProperty","get","id","data","getIdentity","put","Math","random","overwrite","add","remove","setData","identifier","nextId","aspect","methodName","advice","receiveArguments","dispatcher","existing","executionId","before","next","around","after","newResults","signal","previous","advised","advise","TMP","templateSettings","evaluate","interpolate","escape","debounce","wait","timeout","context","clearTimeout","setTimeout","defer","requestAnimationFrame","setTimeoutout","noop","proxy","TypeError","returnTrue","returnFalse","template","text","settings","oldSettings","render","matcher","RegExp","noMatch","join","match","escapeRegExp","escapeChar","variable","e","_","argument","funcs","PGLISTENERS","PGNOTIFIES","Promise","always","handler","done","fail","catch","self","p","promise","resolve","reject","_resolve","_reject","wrapPromise","d","added","state","isResolved","isRejected","onResolved","onRejected","onProgress","progress","__ctx__","pipe","resolveWith","_resolved","notify","listener","error","reason","rejectWith","_rejected","errback","progback","all","bind","race","valueOrPromise","receivedPromise","nativePromise","deferred","cancel","err","immediate","async","parallel","ctx","rets","series","waterful","parseMilliSeconds","str","strs","number","isNaN","trim","datetimes","parse","event","segs","Emitter","on","events","selector","one","_hub","parsed","emit","CustomEvent","eventName","listeners","len","reCompact","listened","evtArr","_events","listenTo","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","listenToOnce","off","evts","liveEvents","unlistenTo","trigger","createEvent","Evented","hoster","isBrowser","isNode","global","browser","node","process","versions","v8","_document","w","require","document","matched","ua","exec","version","uaMatch","navigator","userAgent","chrome","webkit","safari","escapeCharMap","freeze","&","<",">","\"","'","`","=","replaceChar","c","escapeChars","idCounter","string","line","body","escapeHTML","me","callee","stash","getElementById","innerHTML","camelCase","toUpperCase","dasherize","deserializeValue","JSON","generateUUID","r","v","lowerFirst","charAt","rtrim","serializeValue","stringify","substitute","transform","getObject","retVal","getValue","_k","reverse","format","slugify","from","uniqueId","prefix","upperFirst","strings","Stateful","attributes","cid","cidPrefix","set","changed","validationError","idAttribute","toJSON","attr","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","_pending","clear","hasChanged","changedAttributes","diff","old","previousAttributes","isNew","isValid","validate","hub","publish","arg1","argn","subscribe","topic","_uid","langx","funcArg","payload","getQueryParams","url","queryParam","nv","toPixel","parseFloat","uid","URL","webkitURL","vendorPrefix","vendorPrefixRE","transEndEventNames","WebkitTransition","MozTransition","OTransition","transition","transEndEventName","css3PropPrefix","css3EventPrefix","cssStyles","cssProps","vendorPrefixesRE","testEl","createElement","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","requestFullScreen","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","testStyle","exitFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen","style","cssPropName","isIE","normalizeStyleProperty","normalizeCssProperty","normalizeCssEvent","support","end","fragmentRE","singleTagRE","div","table","tableBody","tableRow","containers","tr","tbody","thead","tfoot","td","th","*","rootNodeRE","ensureNodes","nodes","copyByClone","cloneNode","nodeName","elm","chkName","enhancePlaceContent","placing","neddsFlattern","append","parentNode","appendChild","tag","setAttribute","rxhtmlTag","isChildOf","directly","documentElement","contains","ownerDoc","ownerDocument","noder","active","doc","el","activeElement","blur","getAttribs","setAttrib","getAttrib","contents","contentDocument","childNodes","createFragment","html","$1","container","dom","removeChild","child","createTextNode","empty","hasChildNodes","firstChild","fullScreen","exitFullScreen","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","focusable","element","hasTabindex","mapName","img","focusableIfVisible","fieldset","$","is","disabled","closest","visible","isInDocument","offsetParent","defaultView","getComputedStyle","position","ownerWindow","parentWindow","refNode","nextSibling","insertBefore","prepend","reflow","offsetHeight","console","warn","children","oldNode","replaceChild","traverse","wrapper","wrapperNode","wrapperInner","unwrap","isDoc","local","nativeMatchesSelector","separatorIndex","combinatorIndex","reversed","reverseCache","reUnescape","expression","isReversed","Slick","currentCache","expressions","raw","regexp","parser","reverseCombinator","combinator","exp","last","parts","cexp","rawMatch","separator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","currentSeparator","currentParsed","classList","classes","pseudos","operator","rinputs","rheader","parseSelector","button","elem","checked","enabled","even","focus","tabindex","gt","sel","find","header","hidden","input","lt","not","odd","selected","tabbable","tabIndex","offsetWidth","createInputPseudo","createButtonPseudo","isArrayFilter","radio","checkbox","file","password","image","submit","reset","ancestors","root","rootIsSelector","descendants","querySelectorAll","matchError","descendant","querySelector","lastChild","previousSibling","check","adjacent","nextSiblings","previousSiblings","siblings","divide","cond","nativeSelector","customPseudos","part","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","filterSingle","matchs","combine","bit","node1","op","divided","single","currentBit","founds","found","currentItems","finder","ancestor","byId","findAll","isQ","some","every","rquickExpr","wrapper_node_operation","oldValueFunc","argType","wrapper_map","wrapper_selector","wrapper_selector_until","util","wrapper_every_act","wrapper_value","newValue","NodeList","ready","toArray","size","excludes","parents","parentsUntil","pluck","property","pushStack","elms","prevObject","replaceWith","newContent","wrap","structure","wrapAll","wrappingElement","wrapInner","textContent","toggle","setting","css","show","hide","prevAll","nextAll","detach","hover","fnOver","fnOut","mouseenter","mouseleave","appendTo","prependTo","insertAfter","replaceAll","original","elems","insert","scrollParent","includeHidden","excludeStaticParent","overflowRegex","andSelf","addBack","eventType","place","addContent","content","disableSelection","preventDefault","enableSelection","flow","isBlockNode","plugin","returnValue","plugins","instantiate","wraps","wrapper_some_chk","wrapper_every_act_firstArgFunc","wrapper_name_value","capitalRE","propMap","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","valHooks","option","select","selectedIndex","max","optionSet","attrName","_store","confirm","store","_attributeData","_setData","dataAttrName","camelName","_getData","cleanData","txt","hooks","value1","datax","dataName","aria","removeAttr","removeAttribute","removeData","names","removeProp","VisualElement","_elm","velm","batch","action","HTMLElement","_delegator","ignoreProperties","eventMethods","stopImmediatePropagation","stopPropagation","readyRE","compatible","isDefaultPrevented","sourceMethod","EventCtors","NativeEvents","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","abort","change","selectionchange","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","textInput","touchstart","touchmove","touchend","load","resize","scroll","unload","wheel","bubbles","cancelable","namespace","getEventCtor","createProxy","originalEvent","specialEvents","focusinSupported","realEvent","handlers","EventBindings","_target","_event","_bindings","bindings","binding","_listener","domEvt","_args","isImmediatePropagationStopped","currentTarget","liveFired","related","relatedTarget","addEventListener","removing","removeEventListener","EventsHandler","_handler","register","specialEvent","bindingEvent","bindType","bindEventName","unregister","findHandler","readyState","keyCodeLookup","backspace","comma","delete","down","enter","home","left","page_down","page_up","period","right","space","tab","up","eventer","transitionEnd","delegateType","shortcuts","registry","run","shortcut","metaKey","ctrlKey","ctrl","alt","altKey","shiftKey","keyCode","charCode","pattern","shortcutKey","charCodeAt","regKey","special","stop","evented","Event","dispatchEvent","maybeAddPx","cssNumber","column-count","columns","font-weight","line-height","opacity","z-index","zoom","classReCache","classRE","svg","baseVal","elementDisplay","getStyles","view","opener","styler","autocssfix","cssHooks","addClass","re","computedStyle","getPropertyValue","removeProperty","cssText","hasClass","isInvisible","removeClass","display","defaultDisplay","toggleClass","replaceClass","newClass","oldClass","cachedScrollbarWidth","px","scrollbarWidth","w1","w2","innerDiv","clientWidth","borderExtents","top","bottom","s","borderLeftWidth","borderTopWidth","borderRightWidth","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","clientSize","dimension","width","height","clientHeight","isBorderBox","bex","pex","paddingExtents","getDocumentSize","scrollWidth","scrollHeight","marginLeft","marginTop","marginRight","marginBottom","marginSize","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","pageXOffset","pageYOffset","relativeRect","scrollLeft","hasScrollLeft","scrollTo","scrollY","scrollTop","hasScrollTop","scrollX","innerWidth","innerHeight","geom","contentRect","cs","marginRect","pageRect","round","scrollIntoView","align","x","y","parentWidth","parentHeight","parentElm","pos","rootElm","offsetLeft","offsetTop","getOffset","abs","rhorizontal","rvertical","roffset","rposition","rpercent","getOffsets","offsets","parseCss","positions","fit","newOverRight","within","withinOffset","outerWidth","collisionPosLeft","collisionPosition","overLeft","overRight","collisionWidth","newOverBottom","outerHeight","collisionPosTop","overTop","overBottom","collisionHeight","flip","newOverLeft","myOffset","my","elemWidth","atOffset","at","targetWidth","newOverTop","elemHeight","targetHeight","flipfit","posit","targetOffset","basePosition","dimensions","of","withinElement","hasOffset","msize","scrollInfo","overflowX","overflowY","hasOverflowX","getScrollInfo","collision","pageY","pageX","horizontalOffset","verticalOffset","using","dir","feedback","horizontal","vertical","important","Dimension","m","margin","cb","mb","jstree","ajax","Xhr","request","parseJSON","instance_counter","ccp_node","ccp_mode","ccp_inst","themes_loaded","idregex","Tree","destroy","reference","needle","ignore","inst","_model","is_method","instance","core","check_callback","animation","multiple","themes","dots","icons","ellipsis","stripes","variant","responsive","expand_selected_onload","worker","force_text","dblclick_toggle","loaded_state","restore_focus","keyboard","ctrl-space","is_open","close_node","o","get_parent","get_node","get_prev_dom","is_closed","open_node","_firstChild","get_next_dom","open_all","get_container_ul","f2","edit","deco","opts","Child","_data","_id","_cnt","_wrk","last_error","working","worker_queue","focused","opt","k","force_full_redraw","redraw_timeout","default_state","loaded","opened","children_d","rtl","original_container_html","nodeValue","get_string","li_height","_create_prototype_node","load_node","keep_html","revokeObjectURL","teardown","_temp1","_temp2","_node","_kbevent_to_func","8","9","13","19","27","32","33","34","35","36","37","38","39","40","44","45","46","96","97","98","99","100","101","102","103","104","105","-13","112","113","114","115","116","117","118","119","120","121","122","123","144","145","16","17","18","48","49","50","51","52","53","54","55","56","57","59","61","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","107","109","110","186","187","188","189","190","191","192","219","220","221","222","111","106","173","which","kb","unbind","word","tout","was_click","selection","getSelection","removeAllRanges","collapse","Date","toggle_node","activate_node","f","status","vakata","array_unique","chr","fromCharCode","col","ind","set_theme","set_theme_variant","act","hover_node","dehover_node","ev","get_container","_nextSibling","_previousSibling","as_dom","ex","get_path","glue","ids","get_text","strict","get_children_dom","is_parent","is_loaded","is_loading","loading","is_leaf","_load_nodes","array_filter","failed","_load_node","has_children","is_callback","force_reload","load_all","to_load","t","notTextOrCommentNode","parseHTML","getResponseHeader","_append_json_data","_append_html_data","xhr","_node_changed","dat","par","chd","dpc","_parse_model_from_html","redraw","force_processing","df","t_id","t_cnt","rslt","parse_flat","ps","tid","icon","li_attr","a_attr","parse_nest","cnt","mod","postMessage","Blob","Worker","createObjectURL","onmessage","terminate","_parse_model_from_flat_json","_parse_model_from_json","_redraw","fe","redraw_node","full","draw_children","force_render","last_sibling","substr","backgroundImage","backgroundPosition","backgroundSize","t1","t2","slideDown","ok","_open_to","slideUp","original_obj","_this","close_all","is_disabled","enable_node","disable_node","is_hidden","hide_node","skip_redraw","show_node","hide_all","show_all","last_clicked","deselect_node","select_node","is_selected","deselect_all","supress_event","prevent_open","array_remove_item","select_all","old_selection","get_selected","get_top_selected","get_bottom_selected","get_state","open","set_state","initial_selection","refresh","skip_loading","forget_state","refresh_node","set_id","new","set_text","get_json","flat","get_icon","no_data","no_state","no_li_attr","no_a_attr","no_id","no_children","create_node","rename_node","delete_node","lft","array_remove","chk","more","chc","is_multi","functions","move_node","old_par","old_pos","new_par","old_ins","copy_node","is_foreign","old_parent","old_position","old_instance","new_instance","get_buffer","mode","can_paste","clear_buffer","default_text","h1","h2","visibility","padding","border","box-sizing","lineHeight","min","fontFamily","fontSize","fontWeight","fontStyle","fontStretch","fontVariant","letterSpacing","wordSpacing","theme_name","theme_url","theme","get_theme","variant_name","get_theme_variant","show_stripes","hide_stripes","toggle_stripes","show_dots","hide_dots","toggle_dots","show_icons","hide_icons","toggle_icons","show_ellipsis","hide_ellipsis","toggle_ellipsis","set_icon","hide_icon","show_icon","search","fuzzy","caseSensitive","MATCH_LOCATION","MATCH_DISTANCE","distance","MATCH_THRESHOLD","threshold","patternLen","matchmask","pattern_alphabet","mask","match_bitapScore","accuracy","proximity","score","binMin","binMid","lastRd","finish","rd","charMatch","textLen","scoreThreshold","bestLoc","binMax","locations","lastIndexOf","floor","with_values","deselected","_i","three_state","whole_node","keep_selected_style","cascade","tie_selection","cascade_to_disabled","cascade_to_hidden","uto","_undetermined","cur","selectedIds","_cascade_new_checked_state","temp","undetermined","allIds","get_undetermined","tt","tmp2","checkbox_disabled","show_checkboxes","checkboxes","hide_checkboxes","toggle_checkboxes","is_undetermined","disable_checkbox","enable_checkbox","is_checked","uncheck_node","check_node","checkedState","selectedChildIds","selectedNodeIds","selectedChildrenIds","get_checked_descendants","childId","check_all","uncheck_all","get_checked","get_top_checked","get_bottom_checked","res","conditionalselect","right_to_left","popup","Menu","$el","_options","hide_onmouseleave","to","_show_submenu","_execute","_parse","_trigger","event_name","position_x","position_y","_disabled","sep","separator_before","_class","title","label","shortcut_label","submenu","separator_after","xl","h","dw","dh","is_visible","menu","show_at_node","new_node","rename","ccp","ey","last_ts","cto","show_contextmenu","changedTouches","clientX","clientY","_show_contextmenu","drg","dnd","open_timeout","is_draggable","check_while_dragging","always_copy","inside_pos","drag_selection","touch","large_drop_target","large_drag_target","use_html5","mlt","helper","lastmv","laster","lastev","opento","marker","isDifferentNode","pr","ip","tm","is_copy","ins","ref","rel","z","dataTransfer","dropEffect","_get","_clean","strip","vakata_dnd","is_down","is_drag","helper_w","init_x","init_y","scroll_l","scroll_t","scroll_e","scroll_i","is_touch","scroll_speed","scroll_proximity","helper_left","helper_top","threshold_touch","clearInterval","_scroll","init_only","setInterval","elementFromPoint","unselectable","onselectstart","touchAction","msTouchAction","MozUserSelect","zIndex","wh","ww","dt","dl","ht","hl","massload","toLoad","case_sensitive","show_only_matches","show_only_matches_children","close_opened_onclear","search_leaves_only","search_callback","opn","som","smc","hdn","skip_async","inside","clear_search","lastRequest","ii","ttl","preserve_loaded","save_state","restore_state","st","sec","storage","clear_state","del","localStorage","setItem","getItem","BLANKRE","IDREGEX","styled","generateCellId","tree","escapeId","getIds","findDataCell","scope","cellId","isClickedSep","toResize","oldMouseX","newMouseX","htmlstripre","copyData","fromtree","totree","recurse","findLastClosedNode","getCellData","grid","_guid","s4","substring","_initialize","_initialized","gs","_gridSettings","treeClass","columnWidth","defaultConf","*display","*+display","isThemeroller","themeroller","treeWidthDiff","resizable","draggable","stateful","indent","sortOrder","sortAsc","caseInsensitive","fixedHeader","gridcontextmenu","treecol","gridcols","cols","columnSearch","_edit","ceil","rootid","msie","appVersion","gridWrapper","midWrapper","defaultSort","bigger","colrefs","caseInsensitiveSort","localeCompare","nodeA","nodeB","valueA","valueB","ui","sortable","axis","handle","searchColumn","searchObj","validatedSearchObj","columnIndex","column","columnValue","searchSettings","omniSearchCallback","searchValue","_detachColumns","_prepare_grid","_reattachColumns","removeNodes","_hideOrShowTree","_hide_grid","_prepare_headers","q","anchorHeight","_hover_node","nodesToShow","endTime","that","startTime","getTime","holdingCells","cells","_domManipulation","time","newtree","oldtree","gw","gridparent","_clean_grid","cl","ccl","coluuid","defaultWidth","classAdd","hasHeaders","conf","headerClass","columnClass","minWidth","maxWidth","bound","currentTree","colNum","oldPrevHeaderInner","oldPrevColWidth","newPrevColWidth","clickedSep","newWidth","symbol","rootNode","mw","oldNodes","_hideOrShowNode","lenj","getHoldingCells","hc","grid_hide_column","grid_show_column","wcl","valClass","wideValClass","span","paddingleft","gridCellName","gridCellParentId","gridCellParent","gridCellPrev","gridCellPrevId","gridCellNext","gridCellNextId","gridCellChild","gridCellChildId","highlightSearch","isClicked","objData","cellClickHandler","sourceName","cellRightClickHandler","hoverInHandler","jsTreeInstance","hoverOutHandler","lid","peers","rendered","renderATitle","cellClass","wideCellClass","images","valueClass","valueClassPrefix","wideValueClass","wideValueClassPrefix","toRen","overflow-y","default","_delete_ids","get_rules","max_children","valid_children","max_depth","get_type","rules","set_type","old_type","old_icon","unique","trim_whitespace","duplicate","counter","wholerow"],"mappings":"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","file":"../skylark-widgets-hierarchy-all.js","sourcesContent":["define('skylark-langx-ns/_attach',[],function(){\r\n    return  function attach(obj1,path,obj2) {\r\n        if (typeof path == \"string\") {\r\n            path = path.split(\".\");//[path]\r\n        };\r\n        var length = path.length,\r\n            ns=obj1,\r\n            i=0,\r\n            name = path[i++];\r\n\r\n        while (i < length) {\r\n            ns = ns[name] = ns[name] || {};\r\n            name = path[i++];\r\n        }\r\n\r\n        return ns[name] = obj2;\r\n    }\r\n});\ndefine('skylark-langx-ns/ns',[\r\n    \"./_attach\"\r\n], function(_attach) {\r\n    var skylark = {\r\n    \tattach : function(path,obj) {\r\n    \t\treturn _attach(skylark,path,obj);\r\n    \t}\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-langx-ns/main',[\r\n\t\"./ns\"\r\n],function(skylark){\r\n\treturn skylark;\r\n});\ndefine('skylark-langx-ns', ['skylark-langx-ns/main'], function (main) { return main; });\n\ndefine('skylark-langx/skylark',[\r\n    \"skylark-langx-ns\"\r\n], function(ns) {\r\n\treturn ns;\r\n});\r\n\ndefine('skylark-langx-types/types',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n    var toString = {}.toString;\r\n    \r\n    var type = (function() {\r\n        var class2type = {};\r\n\r\n        // Populate the class2type map\r\n        \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split(\" \").forEach(function(name) {\r\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n        });\r\n\r\n        return function type(obj) {\r\n            return obj == null ? String(obj) :\r\n                class2type[toString.call(obj)] || \"object\";\r\n        };\r\n    })();\r\n\r\n    function isArray(object) {\r\n        return object && object.constructor === Array;\r\n    }\r\n\r\n\r\n    /**\r\n     * Checks if `value` is array-like. A value is considered array-like if it's\r\n     * not a function/string/element and has a `value.length` that's an integer greater than or\r\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\r\n     *\r\n     * @category Lang\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\r\n     * @example\r\n     *\r\n     * isArrayLike([1, 2, 3])\r\n     * // => true\r\n     *\r\n     * isArrayLike(document.body.children)\r\n     * // => false\r\n     *\r\n     * isArrayLike('abc')\r\n     * // => true\r\n     *\r\n     * isArrayLike(Function)\r\n     * // => false\r\n     */    \r\n    function isArrayLike(obj) {\r\n        return !isString(obj) && !isHtmlNode(obj) && typeof obj.length == 'number' && !isFunction(obj);\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is classified as a boolean primitive or object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\r\n     * @example\r\n     *\r\n     * isBoolean(false)\r\n     * // => true\r\n     *\r\n     * isBoolean(null)\r\n     * // => false\r\n     */\r\n    function isBoolean(obj) {\r\n        return typeof(obj) === \"boolean\";\r\n    }\r\n\r\n    function isDefined(obj) {\r\n        return typeof obj !== 'undefined';\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\r\n    }\r\n\r\n    function isEmptyObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n            if (obj[name] !== null) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    /**\r\n     * Checks if `value` is classified as a `Function` object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\r\n     * @example\r\n     *\r\n     * isFunction(parseInt)\r\n     * // => true\r\n     *\r\n     * isFunction(/abc/)\r\n     * // => false\r\n     */\r\n    function isFunction(value) {\r\n        return type(value) == \"function\";\r\n    }\r\n\r\n    function isHtmlNode(obj) {\r\n        return obj && obj.nodeType; // obj instanceof Node; //Consider the elements in IFRAME\r\n    }\r\n\r\n    function isInstanceOf( /*Object*/ value, /*Type*/ type) {\r\n        //Tests whether the value is an instance of a type.\r\n        if (value === undefined) {\r\n            return false;\r\n        } else if (value === null || type == Object) {\r\n            return true;\r\n        } else if (typeof value === \"number\") {\r\n            return type === Number;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else if (typeof value === \"boolean\") {\r\n            return type === Boolean;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else {\r\n            return (value instanceof type) || (value && value.isInstanceOf ? value.isInstanceOf(type) : false);\r\n        }\r\n    }\r\n\r\n    function isNull(value) {\r\n      return type(value) === \"null\";\r\n    }\r\n\r\n    function isNumber(obj) {\r\n        return typeof obj == 'number';\r\n    }\r\n\r\n    function isObject(obj) {\r\n        return type(obj) == \"object\";\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return obj && obj == obj.window;\r\n    }\r\n\r\n    function isSameOrigin(href) {\r\n        if (href) {\r\n            var origin = location.protocol + '//' + location.hostname;\r\n            if (location.port) {\r\n                origin += ':' + location.port;\r\n            }\r\n            return href.startsWith(origin);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is classified as a `Symbol` primitive or object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\r\n     * @example\r\n     *\r\n     * _.isSymbol(Symbol.iterator);\r\n     * // => true\r\n     *\r\n     * _.isSymbol('abc');\r\n     * // => false\r\n     */\r\n    function isSymbol(value) {\r\n      return typeof value == 'symbol' ||\r\n        (isObjectLike(value) && objectToString.call(value) == symbolTag);\r\n    }\r\n\r\n    function isUndefined(value) {\r\n      return value === undefined\r\n    }\r\n\r\n    return skylark.attach(\"langx.types\",{\r\n\r\n        isArray: isArray,\r\n\r\n        isArrayLike: isArrayLike,\r\n\r\n        isBoolean: isBoolean,\r\n\r\n        isDefined: isDefined,\r\n\r\n        isDocument: isDocument,\r\n\r\n        isEmpty : isEmptyObject,\r\n\r\n        isEmptyObject: isEmptyObject,\r\n\r\n        isFunction: isFunction,\r\n\r\n        isHtmlNode: isHtmlNode,\r\n\r\n        isNull: isNull,\r\n\r\n        isNumber: isNumber,\r\n\r\n        isNumeric: isNumber,\r\n\r\n        isObject: isObject,\r\n\r\n        isPlainObject: isPlainObject,\r\n\r\n        isString: isString,\r\n\r\n        isSameOrigin: isSameOrigin,\r\n\r\n        isSymbol : isSymbol,\r\n\r\n        isUndefined: isUndefined,\r\n\r\n        isWindow: isWindow,\r\n\r\n        type: type\r\n    });\r\n\r\n});\ndefine('skylark-langx-types/main',[\r\n\t\"./types\"\r\n],function(types){\r\n\treturn types;\r\n});\ndefine('skylark-langx-types', ['skylark-langx-types/main'], function (main) { return main; });\n\ndefine('skylark-langx-numbers/numbers',[\r\n    \"skylark-langx-ns\",\r\n    \"skylark-langx-types\"\r\n],function(skylark,types){\r\n\tvar isObject = types.isObject,\r\n\t\tisSymbol = types.isSymbol;\r\n\r\n\tvar INFINITY = 1 / 0,\r\n\t    MAX_SAFE_INTEGER = 9007199254740991,\r\n\t    MAX_INTEGER = 1.7976931348623157e+308,\r\n\t    NAN = 0 / 0;\r\n\r\n\t/** Used to match leading and trailing whitespace. */\r\n\tvar reTrim = /^\\s+|\\s+$/g;\r\n\r\n\t/** Used to detect bad signed hexadecimal string values. */\r\n\tvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\r\n\r\n\t/** Used to detect binary string values. */\r\n\tvar reIsBinary = /^0b[01]+$/i;\r\n\r\n\t/** Used to detect octal string values. */\r\n\tvar reIsOctal = /^0o[0-7]+$/i;\r\n\r\n\t/** Used to detect unsigned integer values. */\r\n\tvar reIsUint = /^(?:0|[1-9]\\d*)$/;\r\n\r\n\t/** Built-in method references without a dependency on `root`. */\r\n\tvar freeParseInt = parseInt;\r\n\r\n\t/**\r\n\t * Converts `value` to a finite number.\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @since 4.12.0\r\n\t * @category Lang\r\n\t * @param {*} value The value to convert.\r\n\t * @returns {number} Returns the converted number.\r\n\t * @example\r\n\t *\r\n\t * _.toFinite(3.2);\r\n\t * // => 3.2\r\n\t *\r\n\t * _.toFinite(Number.MIN_VALUE);\r\n\t * // => 5e-324\r\n\t *\r\n\t * _.toFinite(Infinity);\r\n\t * // => 1.7976931348623157e+308\r\n\t *\r\n\t * _.toFinite('3.2');\r\n\t * // => 3.2\r\n\t */\r\n\tfunction toFinite(value) {\r\n\t  if (!value) {\r\n\t    return value === 0 ? value : 0;\r\n\t  }\r\n\t  value = toNumber(value);\r\n\t  if (value === INFINITY || value === -INFINITY) {\r\n\t    var sign = (value < 0 ? -1 : 1);\r\n\t    return sign * MAX_INTEGER;\r\n\t  }\r\n\t  return value === value ? value : 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts `value` to an integer.\r\n\t *\r\n\t * **Note:** This method is loosely based on\r\n\t * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @param {*} value The value to convert.\r\n\t * @returns {number} Returns the converted integer.\r\n\t * @example\r\n\t *\r\n\t * _.toInteger(3.2);\r\n\t * // => 3\r\n\t *\r\n\t * _.toInteger(Number.MIN_VALUE);\r\n\t * // => 0\r\n\t *\r\n\t * _.toInteger(Infinity);\r\n\t * // => 1.7976931348623157e+308\r\n\t *\r\n\t * _.toInteger('3.2');\r\n\t * // => 3\r\n\t */\r\n\tfunction toInteger(value) {\r\n\t  var result = toFinite(value),\r\n\t      remainder = result % 1;\r\n\r\n\t  return result === result ? (remainder ? result - remainder : result) : 0;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Converts `value` to a number.\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @since 4.0.0\r\n\t * @category Lang\r\n\t * @param {*} value The value to process.\r\n\t * @returns {number} Returns the number.\r\n\t * @example\r\n\t *\r\n\t * _.toNumber(3.2);\r\n\t * // => 3.2\r\n\t *\r\n\t * _.toNumber(Number.MIN_VALUE);\r\n\t * // => 5e-324\r\n\t *\r\n\t * _.toNumber(Infinity);\r\n\t * // => Infinity\r\n\t *\r\n\t * _.toNumber('3.2');\r\n\t * // => 3.2\r\n\t */\r\n\tfunction toNumber(value) {\r\n\t  if (typeof value == 'number') {\r\n\t    return value;\r\n\t  }\r\n\t  if (isSymbol(value)) {\r\n\t    return NAN;\r\n\t  }\r\n\t  if (isObject(value)) {\r\n\t    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\r\n\t    value = isObject(other) ? (other + '') : other;\r\n\t  }\r\n\t  if (typeof value != 'string') {\r\n\t    return value === 0 ? value : +value;\r\n\t  }\r\n\t  value = value.replace(reTrim, '');\r\n\t  var isBinary = reIsBinary.test(value);\r\n\t  return (isBinary || reIsOctal.test(value))\r\n\t    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\r\n\t    : (reIsBadHex.test(value) ? NAN : +value);\r\n\t}\r\n\r\n\treturn  skylark.attach(\"langx.numbers\",{\r\n\t\ttoFinite : toFinite,\r\n\t\ttoNumber : toNumber,\r\n\t\ttoInteger : toInteger\r\n\t});\r\n});\ndefine('skylark-langx-numbers/main',[\r\n\t\"./numbers\"\r\n],function(numbers){\r\n\treturn numbers;\r\n});\ndefine('skylark-langx-numbers', ['skylark-langx-numbers/main'], function (main) { return main; });\n\ndefine('skylark-langx-objects/objects',[\r\n    \"skylark-langx-ns/ns\",\r\n    \"skylark-langx-ns/_attach\",\r\n\t\"skylark-langx-types\",\r\n    \"skylark-langx-numbers\"\r\n],function(skylark,_attach,types,numbers){\r\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty,\r\n        slice = Array.prototype.slice,\r\n        isBoolean = types.isBoolean,\r\n        isFunction = types.isFunction,\r\n\t\tisObject = types.isObject,\r\n\t\tisPlainObject = types.isPlainObject,\r\n\t\tisArray = types.isArray,\r\n        isArrayLike = types.isArrayLike,\r\n        isString = types.isString,\r\n        toInteger = numbers.toInteger;\r\n\r\n     // An internal function for creating assigner functions.\r\n    function createAssigner(keysFunc, defaults) {\r\n        return function(obj) {\r\n          var length = arguments.length;\r\n          if (defaults) obj = Object(obj);  \r\n          if (length < 2 || obj == null) return obj;\r\n          for (var index = 1; index < length; index++) {\r\n            var source = arguments[index],\r\n                keys = keysFunc(source),\r\n                l = keys.length;\r\n            for (var i = 0; i < l; i++) {\r\n              var key = keys[i];\r\n              if (!defaults || obj[key] === void 0) obj[key] = source[key];\r\n            }\r\n          }\r\n          return obj;\r\n       };\r\n    }\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    var eq, deepEq;\r\n    var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\r\n\r\n    eq = function(a, b, aStack, bStack) {\r\n        // Identical objects are equal. `0 === -0`, but they aren't identical.\r\n        // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n        if (a === b) return a !== 0 || 1 / a === 1 / b;\r\n        // `null` or `undefined` only equal to itself (strict comparison).\r\n        if (a == null || b == null) return false;\r\n        // `NaN`s are equivalent, but non-reflexive.\r\n        if (a !== a) return b !== b;\r\n        // Exhaust primitive checks\r\n        var type = typeof a;\r\n        if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\r\n        return deepEq(a, b, aStack, bStack);\r\n    };\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    deepEq = function(a, b, aStack, bStack) {\r\n        // Unwrap any wrapped objects.\r\n        //if (a instanceof _) a = a._wrapped;\r\n        //if (b instanceof _) b = b._wrapped;\r\n        // Compare `[[Class]]` names.\r\n        var className = toString.call(a);\r\n        if (className !== toString.call(b)) return false;\r\n        switch (className) {\r\n            // Strings, numbers, regular expressions, dates, and booleans are compared by value.\r\n            case '[object RegExp]':\r\n            // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\r\n            case '[object String]':\r\n                // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n                // equivalent to `new String(\"5\")`.\r\n                return '' + a === '' + b;\r\n            case '[object Number]':\r\n                // `NaN`s are equivalent, but non-reflexive.\r\n                // Object(NaN) is equivalent to NaN.\r\n                if (+a !== +a) return +b !== +b;\r\n                // An `egal` comparison is performed for other numeric values.\r\n                return +a === 0 ? 1 / +a === 1 / b : +a === +b;\r\n            case '[object Date]':\r\n            case '[object Boolean]':\r\n                // Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n                // millisecond representations. Note that invalid dates with millisecond representations\r\n                // of `NaN` are not equivalent.\r\n                return +a === +b;\r\n            case '[object Symbol]':\r\n                return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\r\n        }\r\n\r\n        var areArrays = className === '[object Array]';\r\n        if (!areArrays) {\r\n            if (typeof a != 'object' || typeof b != 'object') return false;\r\n            // Objects with different constructors are not equivalent, but `Object`s or `Array`s\r\n            // from different frames are.\r\n            var aCtor = a.constructor, bCtor = b.constructor;\r\n            if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\r\n                               isFunction(bCtor) && bCtor instanceof bCtor)\r\n                          && ('constructor' in a && 'constructor' in b)) {\r\n                return false;\r\n            }\r\n        }\r\n        // Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n\r\n        // Initializing stack of traversed objects.\r\n        // It's done here since we only need them for objects and arrays comparison.\r\n        aStack = aStack || [];\r\n        bStack = bStack || [];\r\n        var length = aStack.length;\r\n        while (length--) {\r\n            // Linear search. Performance is inversely proportional to the number of\r\n            // unique nested structures.\r\n            if (aStack[length] === a) return bStack[length] === b;\r\n        }\r\n\r\n        // Add the first object to the stack of traversed objects.\r\n        aStack.push(a);\r\n        bStack.push(b);\r\n\r\n        // Recursively compare objects and arrays.\r\n        if (areArrays) {\r\n            // Compare array lengths to determine if a deep comparison is necessary.\r\n            length = a.length;\r\n            if (length !== b.length) return false;\r\n            // Deep compare the contents, ignoring non-numeric properties.\r\n            while (length--) {\r\n                if (!eq(a[length], b[length], aStack, bStack)) return false;\r\n            }\r\n        } else {\r\n            // Deep compare objects.\r\n            var keys = Object.keys(a), key;\r\n            length = keys.length;\r\n            // Ensure that both objects contain the same number of properties before comparing deep equality.\r\n            if (Object.keys(b).length !== length) return false;\r\n            while (length--) {\r\n                // Deep compare each member\r\n                key = keys[length];\r\n                if (!(b[key]!==undefined && eq(a[key], b[key], aStack, bStack))) return false;\r\n            }\r\n        }\r\n        // Remove the first object from the stack of traversed objects.\r\n        aStack.pop();\r\n        bStack.pop();\r\n        return true;\r\n    };\r\n\r\n    // Retrieve all the property names of an object.\r\n    function allKeys(obj) {\r\n        if (!isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function each(obj, callback) {\r\n        var length, key, i, undef, value;\r\n\r\n        if (obj) {\r\n            length = obj.length;\r\n\r\n            if (length === undef) {\r\n                // Loop object items\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        value = obj[key];\r\n                        if (callback.call(value, key, value) === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Loop array items\r\n                for (i = 0; i < length; i++) {\r\n                    value = obj[i];\r\n                    if (callback.call(value, i, value) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function extend(target) {\r\n        var deep, args = slice.call(arguments, 1);\r\n        if (typeof target == 'boolean') {\r\n            deep = target\r\n            target = args.shift()\r\n        }\r\n        if (args.length == 0) {\r\n            args = [target];\r\n            target = this;\r\n        }\r\n        args.forEach(function(arg) {\r\n            mixin(target, arg, deep);\r\n        });\r\n        return target;\r\n    }\r\n\r\n    // Retrieve the names of an object's own properties.\r\n    // Delegates to **ECMAScript 5**'s native `Object.keys`.\r\n    function keys(obj) {\r\n        if (isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) if (has(obj, key)) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function has(obj, path) {\r\n        if (!isArray(path)) {\r\n            return obj != null && hasOwnProperty.call(obj, path);\r\n        }\r\n        var length = path.length;\r\n        for (var i = 0; i < length; i++) {\r\n            var key = path[i];\r\n            if (obj == null || !hasOwnProperty.call(obj, key)) {\r\n                return false;\r\n            }\r\n            obj = obj[key];\r\n        }\r\n        return !!length;\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\r\n     * checked for a substring of `value`, otherwise\r\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\r\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\r\n     * the offset from the end of `collection`.\r\n     *\r\n     * @static\r\n     * @memberOf _\r\n     * @since 0.1.0\r\n     * @category Collection\r\n     * @param {Array|Object|string} collection The collection to inspect.\r\n     * @param {*} value The value to search for.\r\n     * @param {number} [fromIndex=0] The index to search from.\r\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\r\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\r\n     * @example\r\n     *\r\n     * _.includes([1, 2, 3], 1);\r\n     * // => true\r\n     *\r\n     * _.includes([1, 2, 3], 1, 2);\r\n     * // => false\r\n     *\r\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\r\n     * // => true\r\n     *\r\n     * _.includes('abcd', 'bc');\r\n     * // => true\r\n     */\r\n    function includes(collection, value, fromIndex, guard) {\r\n      collection = isArrayLike(collection) ? collection : values(collection);\r\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\r\n\r\n      var length = collection.length;\r\n      if (fromIndex < 0) {\r\n        fromIndex = nativeMax(length + fromIndex, 0);\r\n      }\r\n      return isString(collection)\r\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\r\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\r\n    }\r\n\r\n\r\n   // Perform a deep comparison to check if two objects are equal.\r\n    function isEqual(a, b) {\r\n        return eq(a, b);\r\n    }\r\n\r\n    // Returns whether an object has a given set of `key:value` pairs.\r\n    function isMatch(object, attrs) {\r\n        var keys = keys(attrs), length = keys.length;\r\n        if (object == null) return !length;\r\n        var obj = Object(object);\r\n        for (var i = 0; i < length; i++) {\r\n          var key = keys[i];\r\n          if (attrs[key] !== obj[key] || !(key in obj)) return false;\r\n        }\r\n        return true;\r\n    }    \r\n\r\n    function _mixin(target, source, deep, safe) {\r\n        for (var key in source) {\r\n            //if (!source.hasOwnProperty(key)) {\r\n            //    continue;\r\n            //}\r\n            if (safe && target[key] !== undefined) {\r\n                continue;\r\n            }\r\n            if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n                if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\r\n                    target[key] = {};\r\n                }\r\n                if (isArray(source[key]) && !isArray(target[key])) {\r\n                    target[key] = [];\r\n                }\r\n                _mixin(target[key], source[key], deep, safe);\r\n            } else if (source[key] !== undefined) {\r\n                target[key] = source[key]\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function _parseMixinArgs(args) {\r\n        var params = slice.call(arguments, 0),\r\n            target = params.shift(),\r\n            deep = false;\r\n        if (isBoolean(params[params.length - 1])) {\r\n            deep = params.pop();\r\n        }\r\n\r\n        return {\r\n            target: target,\r\n            sources: params,\r\n            deep: deep\r\n        };\r\n    }\r\n\r\n    function mixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, false);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n   // Return a copy of the object without the blacklisted properties.\r\n    function omit(obj, prop1,prop2) {\r\n        if (!obj) {\r\n            return null;\r\n        }\r\n        var result = mixin({},obj);\r\n        for(var i=1;i<arguments.length;i++) {\r\n            var pn = arguments[i];\r\n            if (pn in obj) {\r\n                delete result[pn];\r\n            }\r\n        }\r\n        return result;\r\n\r\n    }\r\n\r\n   // Return a copy of the object only containing the whitelisted properties.\r\n    function pick(obj,prop1,prop2) {\r\n        if (!obj) {\r\n            return null;\r\n        }\r\n        var result = {};\r\n        for(var i=1;i<arguments.length;i++) {\r\n            var pn = arguments[i];\r\n            if (pn in obj) {\r\n                result[pn] = obj[pn];\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function removeItem(items, item) {\r\n        if (isArray(items)) {\r\n            var idx = items.indexOf(item);\r\n            if (idx != -1) {\r\n                items.splice(idx, 1);\r\n            }\r\n        } else if (isPlainObject(items)) {\r\n            for (var key in items) {\r\n                if (items[key] == item) {\r\n                    delete items[key];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function result(obj, path, fallback) {\r\n        if (!isArray(path)) {\r\n            path = path.split(\".\");//[path]\r\n        };\r\n        var length = path.length;\r\n        if (!length) {\r\n          return isFunction(fallback) ? fallback.call(obj) : fallback;\r\n        }\r\n        for (var i = 0; i < length; i++) {\r\n          var prop = obj == null ? void 0 : obj[path[i]];\r\n          if (prop === void 0) {\r\n            prop = fallback;\r\n            i = length; // Ensure we don't continue iterating.\r\n          }\r\n          obj = isFunction(prop) ? prop.call(obj) : prop;\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    function safeMixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, true);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    // Retrieve the values of an object's properties.\r\n    function values(obj) {\r\n        var keys = allKeys(obj);\r\n        var length = keys.length;\r\n        var values = Array(length);\r\n        for (var i = 0; i < length; i++) {\r\n            values[i] = obj[keys[i]];\r\n        }\r\n        return values;\r\n    }\r\n\r\n    function clone( /*anything*/ src,checkCloneMethod) {\r\n        var copy;\r\n        if (src === undefined || src === null) {\r\n            copy = src;\r\n        } else if (checkCloneMethod && src.clone) {\r\n            copy = src.clone();\r\n        } else if (isArray(src)) {\r\n            copy = [];\r\n            for (var i = 0; i < src.length; i++) {\r\n                copy.push(clone(src[i]));\r\n            }\r\n        } else if (isPlainObject(src)) {\r\n            copy = {};\r\n            for (var key in src) {\r\n                copy[key] = clone(src[key]);\r\n            }\r\n        } else {\r\n            copy = src;\r\n        }\r\n\r\n        return copy;\r\n\r\n    }\r\n\r\n    return skylark.attach(\"langx.objects\",{\r\n        allKeys: allKeys,\r\n\r\n        attach : _attach,\r\n\r\n        clone: clone,\r\n\r\n        defaults : createAssigner(allKeys, true),\r\n\r\n        each : each,\r\n\r\n        extend : extend,\r\n\r\n        has: has,\r\n\r\n        isEqual: isEqual,   \r\n\r\n        includes: includes,\r\n\r\n        isMatch: isMatch,\r\n\r\n        keys: keys,\r\n\r\n        mixin: mixin,\r\n\r\n        omit: omit,\r\n\r\n        pick: pick,\r\n\r\n        removeItem: removeItem,\r\n\r\n        result : result,\r\n        \r\n        safeMixin: safeMixin,\r\n\r\n        values: values\r\n    });\r\n\r\n\r\n});\ndefine('skylark-langx-objects/main',[\r\n\t\"./objects\"\r\n],function(objects){\r\n\treturn objects;\r\n});\ndefine('skylark-langx-objects', ['skylark-langx-objects/main'], function (main) { return main; });\n\ndefine('skylark-langx-arrays/arrays',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\"\r\n],function(skylark,types,objects){\r\n\tvar filter = Array.prototype.filter,\r\n\t\tisArrayLike = types.isArrayLike;\r\n\r\n    /**\r\n     * The base implementation of `_.findIndex` and `_.findLastIndex` without\r\n     * support for iteratee shorthands.\r\n     *\r\n     * @param {Array} array The array to inspect.\r\n     * @param {Function} predicate The function invoked per iteration.\r\n     * @param {number} fromIndex The index to search from.\r\n     * @param {boolean} [fromRight] Specify iterating from right to left.\r\n     * @returns {number} Returns the index of the matched value, else `-1`.\r\n     */\r\n    function baseFindIndex(array, predicate, fromIndex, fromRight) {\r\n      var length = array.length,\r\n          index = fromIndex + (fromRight ? 1 : -1);\r\n\r\n      while ((fromRight ? index-- : ++index < length)) {\r\n        if (predicate(array[index], index, array)) {\r\n          return index;\r\n        }\r\n      }\r\n      return -1;\r\n    }\r\n\r\n    /**\r\n     * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\r\n     *\r\n     * @param {Array} array The array to inspect.\r\n     * @param {*} value The value to search for.\r\n     * @param {number} fromIndex The index to search from.\r\n     * @returns {number} Returns the index of the matched value, else `-1`.\r\n     */\r\n    function baseIndexOf(array, value, fromIndex) {\r\n      if (value !== value) {\r\n        return baseFindIndex(array, baseIsNaN, fromIndex);\r\n      }\r\n      var index = fromIndex - 1,\r\n          length = array.length;\r\n\r\n      while (++index < length) {\r\n        if (array[index] === value) {\r\n          return index;\r\n        }\r\n      }\r\n      return -1;\r\n    }\r\n\r\n    /**\r\n     * The base implementation of `isNaN` without support for number objects.\r\n     *\r\n     * @private\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\r\n     */\r\n    function baseIsNaN(value) {\r\n      return value !== value;\r\n    }\r\n\r\n\r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n\r\n    function filter2(array,func) {\r\n      return filter.call(array,func);\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0; i < array.length; i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j < item.length; j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        objects.each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item);\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n       if (isArrayLike(obj) ) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n      }\r\n\r\n      // array of single index\r\n      return [ obj ];             \r\n    }\r\n\r\n\r\n    function forEach (arr, fn) {\r\n      if (arr.forEach) return arr.forEach(fn)\r\n      for (var i = 0; i < arr.length; i++) fn(arr[i], i);\r\n    }\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n\r\n    function merge( first, second ) {\r\n      var l = second.length,\r\n          i = first.length,\r\n          j = 0;\r\n\r\n      if ( typeof l === \"number\" ) {\r\n        for ( ; j < l; j++ ) {\r\n          first[ i++ ] = second[ j ];\r\n        }\r\n      } else {\r\n        while ( second[j] !== undefined ) {\r\n          first[ i++ ] = second[ j++ ];\r\n        }\r\n      }\r\n\r\n      first.length = i;\r\n\r\n      return first;\r\n    }\r\n\r\n    function reduce(array,callback,initialValue) {\r\n        return Array.prototype.reduce.call(array,callback,initialValue);\r\n    }\r\n\r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    return skylark.attach(\"langx.arrays\",{\r\n        baseFindIndex: baseFindIndex,\r\n\r\n        baseIndexOf : baseIndexOf,\r\n        \r\n        compact: compact,\r\n\r\n        first : function(items,n) {\r\n            if (n) {\r\n                return items.slice(0,n);\r\n            } else {\r\n                return items[0];\r\n            }\r\n        },\r\n\r\n        filter : filter2,\r\n        \r\n        flatten: flatten,\r\n\r\n        grep: grep,\r\n\r\n        inArray: inArray,\r\n\r\n        makeArray: makeArray,\r\n\r\n        merge : merge,\r\n\r\n        forEach : forEach,\r\n\r\n        map : map,\r\n        \r\n        reduce : reduce,\r\n\r\n        uniq : uniq\r\n\r\n    });\r\n});\ndefine('skylark-langx-arrays/main',[\r\n\t\"./arrays\"\r\n],function(arrays){\r\n\treturn arrays;\r\n});\ndefine('skylark-langx-arrays', ['skylark-langx-arrays/main'], function (main) { return main; });\n\ndefine('skylark-langx/arrays',[\r\n\t\"skylark-langx-arrays\"\r\n],function(arrays){\r\n  return arrays;\r\n});\ndefine('skylark-langx-klass/klass',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-arrays\",\r\n],function(skylark,types,objects,arrays){\r\n    var uniq = arrays.uniq,\r\n        has = objects.has,\r\n        mixin = objects.mixin,\r\n        isArray = types.isArray,\r\n        isDefined = types.isDefined;\r\n\r\n/* for reference \r\n function klass(props,parent) {\r\n    var ctor = function(){\r\n        this._construct();\r\n    };\r\n    ctor.prototype = props;\r\n    if (parent) {\r\n        ctor._proto_ = parent;\r\n        props.__proto__ = parent.prototype;\r\n    }\r\n    return ctor;\r\n}\r\n\r\n// Type some JavaScript code here.\r\nlet animal = klass({\r\n  _construct(){\r\n      this.name = this.name + \",hi\";\r\n  },\r\n    \r\n  name: \"Animal\",\r\n  eat() {         // [[HomeObject]] == animal\r\n    alert(`${this.name} eats.`);\r\n  }\r\n    \r\n    \r\n});\r\n\r\n\r\nlet rabbit = klass({\r\n  name: \"Rabbit\",\r\n  _construct(){\r\n      super._construct();\r\n  },\r\n  eat() {         // [[HomeObject]] == rabbit\r\n    super.eat();\r\n  }\r\n},animal);\r\n\r\nlet longEar = klass({\r\n  name: \"Long Ear\",\r\n  eat() {         // [[HomeObject]] == longEar\r\n    super.eat();\r\n  }\r\n},rabbit);\r\n*/\r\n    \r\n    function inherit(ctor, base) {\r\n        var f = function() {};\r\n        f.prototype = base.prototype;\r\n\r\n        ctor.prototype = new f();\r\n    }\r\n\r\n    var f1 = function() {\r\n        function extendClass(ctor, props, options) {\r\n            // Copy the properties to the prototype of the class.\r\n            var proto = ctor.prototype,\r\n                _super = ctor.superclass.prototype,\r\n                noOverrided = options && options.noOverrided,\r\n                overrides = options && options.overrides || {};\r\n\r\n            for (var name in props) {\r\n                if (name === \"constructor\") {\r\n                    continue;\r\n                }\r\n\r\n                // Check if we're overwriting an existing function\r\n                var prop = props[name];\r\n                if (typeof props[name] == \"function\") {\r\n                    proto[name] =  !prop._constructor && !noOverrided && typeof _super[name] == \"function\" ?\r\n                          (function(name, fn, superFn) {\r\n                            return function() {\r\n                                var tmp = this.overrided;\r\n\r\n                                // Add a new ._super() method that is the same method\r\n                                // but on the super-class\r\n                                this.overrided = superFn;\r\n\r\n                                // The method only need to be bound temporarily, so we\r\n                                // remove it when we're done executing\r\n                                var ret = fn.apply(this, arguments);\r\n\r\n                                this.overrided = tmp;\r\n\r\n                                return ret;\r\n                            };\r\n                        })(name, prop, _super[name]) :\r\n                        prop;\r\n                } else if (types.isPlainObject(prop) && prop!==null && (prop.get)) {\r\n                    Object.defineProperty(proto,name,prop);\r\n                } else {\r\n                    proto[name] = prop;\r\n                }\r\n            }\r\n            return ctor;\r\n        }\r\n\r\n        function serialMixins(ctor,mixins) {\r\n            var result = [];\r\n\r\n            mixins.forEach(function(mixin){\r\n                if (has(mixin,\"__mixins__\")) {\r\n                     throw new Error(\"nested mixins\");\r\n                }\r\n                var clss = [];\r\n                while (mixin) {\r\n                    clss.unshift(mixin);\r\n                    mixin = mixin.superclass;\r\n                }\r\n                result = result.concat(clss);\r\n            });\r\n\r\n            result = uniq(result);\r\n\r\n            result = result.filter(function(mixin){\r\n                var cls = ctor;\r\n                while (cls) {\r\n                    if (mixin === cls) {\r\n                        return false;\r\n                    }\r\n                    if (has(cls,\"__mixins__\")) {\r\n                        var clsMixines = cls[\"__mixins__\"];\r\n                        for (var i=0; i<clsMixines.length;i++) {\r\n                            if (clsMixines[i]===mixin) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                    cls = cls.superclass;\r\n                }\r\n                return true;\r\n            });\r\n\r\n            if (result.length>0) {\r\n                return result;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        function mergeMixins(ctor,mixins) {\r\n            var newCtor =ctor;\r\n            for (var i=0;i<mixins.length;i++) {\r\n                var xtor = new Function();\r\n                xtor.prototype = Object.create(newCtor.prototype);\r\n                xtor.__proto__ = newCtor;\r\n                xtor.superclass = null;\r\n                mixin(xtor.prototype,mixins[i].prototype);\r\n                xtor.prototype.__mixin__ = mixins[i];\r\n                newCtor = xtor;\r\n            }\r\n\r\n            return newCtor;\r\n        }\r\n\r\n        function _constructor ()  {\r\n            if (this._construct) {\r\n                return this._construct.apply(this, arguments);\r\n            } else  if (this.init) {\r\n                return this.init.apply(this, arguments);\r\n            }\r\n        }\r\n\r\n        return function createClass(props, parent, mixins,options) {\r\n            if (isArray(parent)) {\r\n                options = mixins;\r\n                mixins = parent;\r\n                parent = null;\r\n            }\r\n            parent = parent || Object;\r\n\r\n            if (isDefined(mixins) && !isArray(mixins)) {\r\n                options = mixins;\r\n                mixins = false;\r\n            }\r\n\r\n            var innerParent = parent;\r\n\r\n            if (mixins) {\r\n                mixins = serialMixins(innerParent,mixins);\r\n            }\r\n\r\n            if (mixins) {\r\n                innerParent = mergeMixins(innerParent,mixins);\r\n            }\r\n\r\n            var klassName = props.klassName || \"\",\r\n                ctor = new Function(\r\n                    \"return function \" + klassName + \"() {\" +\r\n                    \"var inst = this,\" +\r\n                    \" ctor = arguments.callee;\" +\r\n                    \"if (!(inst instanceof ctor)) {\" +\r\n                    \"inst = Object.create(ctor.prototype);\" +\r\n                    \"}\" +\r\n                    \"return ctor._constructor.apply(inst, arguments) || inst;\" + \r\n                    \"}\"\r\n                )();\r\n\r\n\r\n            // Populate our constructed prototype object\r\n            ctor.prototype = Object.create(innerParent.prototype);\r\n\r\n            // Enforce the constructor to be what we expect\r\n            ctor.prototype.constructor = ctor;\r\n            ctor.superclass = parent;\r\n\r\n            // And make this class extendable\r\n            ctor.__proto__ = innerParent;\r\n\r\n\r\n            if (!ctor._constructor) {\r\n                ctor._constructor = _constructor;\r\n            } \r\n\r\n            if (mixins) {\r\n                ctor.__mixins__ = mixins;\r\n            }\r\n\r\n            if (!ctor.partial) {\r\n                ctor.partial = function(props, options) {\r\n                    return extendClass(this, props, options);\r\n                };\r\n            }\r\n            if (!ctor.inherit) {\r\n                ctor.inherit = function(props, mixins,options) {\r\n                    return createClass(props, this, mixins,options);\r\n                };\r\n            }\r\n\r\n            ctor.partial(props, options);\r\n\r\n            return ctor;\r\n        };\r\n    }\r\n\r\n    var createClass = f1();\r\n\r\n    return skylark.attach(\"langx.klass\",createClass);\r\n});\ndefine('skylark-langx-klass/main',[\r\n\t\"./klass\"\r\n],function(klass){\r\n\treturn klass;\r\n});\ndefine('skylark-langx-klass', ['skylark-langx-klass/main'], function (main) { return main; });\n\ndefine('skylark-langx/klass',[\r\n    \"skylark-langx-klass\"\r\n],function(klass){\r\n    return klass;\r\n});\ndefine('skylark-langx/ArrayStore',[\r\n    \"./klass\"\r\n],function(klass){\r\n    var SimpleQueryEngine = function(query, options){\r\n        // summary:\r\n        //      Simple query engine that matches using filter functions, named filter\r\n        //      functions or objects by name-value on a query object hash\r\n        //\r\n        // description:\r\n        //      The SimpleQueryEngine provides a way of getting a QueryResults through\r\n        //      the use of a simple object hash as a filter.  The hash will be used to\r\n        //      match properties on data objects with the corresponding value given. In\r\n        //      other words, only exact matches will be returned.\r\n        //\r\n        //      This function can be used as a template for more complex query engines;\r\n        //      for example, an engine can be created that accepts an object hash that\r\n        //      contains filtering functions, or a string that gets evaluated, etc.\r\n        //\r\n        //      When creating a new dojo.store, simply set the store's queryEngine\r\n        //      field as a reference to this function.\r\n        //\r\n        // query: Object\r\n        //      An object hash with fields that may match fields of items in the store.\r\n        //      Values in the hash will be compared by normal == operator, but regular expressions\r\n        //      or any object that provides a test() method are also supported and can be\r\n        //      used to match strings by more complex expressions\r\n        //      (and then the regex's or object's test() method will be used to match values).\r\n        //\r\n        // options: dojo/store/api/Store.QueryOptions?\r\n        //      An object that contains optional information such as sort, start, and count.\r\n        //\r\n        // returns: Function\r\n        //      A function that caches the passed query under the field \"matches\".  See any\r\n        //      of the \"query\" methods on dojo.stores.\r\n        //\r\n        // example:\r\n        //      Define a store with a reference to this engine, and set up a query method.\r\n        //\r\n        //  |   var myStore = function(options){\r\n        //  |       //  ...more properties here\r\n        //  |       this.queryEngine = SimpleQueryEngine;\r\n        //  |       //  define our query method\r\n        //  |       this.query = function(query, options){\r\n        //  |           return QueryResults(this.queryEngine(query, options)(this.data));\r\n        //  |       };\r\n        //  |   };\r\n\r\n        // create our matching query function\r\n        switch(typeof query){\r\n            default:\r\n                throw new Error(\"Can not query with a \" + typeof query);\r\n            case \"object\": case \"undefined\":\r\n                var queryObject = query;\r\n                query = function(object){\r\n                    for(var key in queryObject){\r\n                        var required = queryObject[key];\r\n                        if(required && required.test){\r\n                            // an object can provide a test method, which makes it work with regex\r\n                            if(!required.test(object[key], object)){\r\n                                return false;\r\n                            }\r\n                        }else if(required != object[key]){\r\n                            return false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                };\r\n                break;\r\n            case \"string\":\r\n                // named query\r\n                if(!this[query]){\r\n                    throw new Error(\"No filter function \" + query + \" was found in store\");\r\n                }\r\n                query = this[query];\r\n                // fall through\r\n            case \"function\":\r\n                // fall through\r\n        }\r\n        \r\n        function filter(arr, callback, thisObject){\r\n            // summary:\r\n            //      Returns a new Array with those items from arr that match the\r\n            //      condition implemented by callback.\r\n            // arr: Array\r\n            //      the array to iterate over.\r\n            // callback: Function|String\r\n            //      a function that is invoked with three arguments (item,\r\n            //      index, array). The return of this function is expected to\r\n            //      be a boolean which determines whether the passed-in item\r\n            //      will be included in the returned array.\r\n            // thisObject: Object?\r\n            //      may be used to scope the call to callback\r\n            // returns: Array\r\n            // description:\r\n            //      This function corresponds to the JavaScript 1.6 Array.filter() method, with one difference: when\r\n            //      run over sparse arrays, this implementation passes the \"holes\" in the sparse array to\r\n            //      the callback function with a value of undefined. JavaScript 1.6's filter skips the holes in the sparse array.\r\n            //      For more details, see:\r\n            //      https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter\r\n            // example:\r\n            //  | // returns [2, 3, 4]\r\n            //  | array.filter([1, 2, 3, 4], function(item){ return item>1; });\r\n\r\n            // TODO: do we need \"Ctr\" here like in map()?\r\n            var i = 0, l = arr && arr.length || 0, out = [], value;\r\n            if(l && typeof arr == \"string\") arr = arr.split(\"\");\r\n            if(typeof callback == \"string\") callback = cache[callback] || buildFn(callback);\r\n            if(thisObject){\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback.call(thisObject, value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }else{\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback(value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }\r\n            return out; // Array\r\n        }\r\n\r\n        function execute(array){\r\n            // execute the whole query, first we filter\r\n            var results = filter(array, query);\r\n            // next we sort\r\n            var sortSet = options && options.sort;\r\n            if(sortSet){\r\n                results.sort(typeof sortSet == \"function\" ? sortSet : function(a, b){\r\n                    for(var sort, i=0; sort = sortSet[i]; i++){\r\n                        var aValue = a[sort.attribute];\r\n                        var bValue = b[sort.attribute];\r\n                        // valueOf enables proper comparison of dates\r\n                        aValue = aValue != null ? aValue.valueOf() : aValue;\r\n                        bValue = bValue != null ? bValue.valueOf() : bValue;\r\n                        if (aValue != bValue){\r\n                            // modified by lwf 2016/07/09\r\n                            //return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                            return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                        }\r\n                    }\r\n                    return 0;\r\n                });\r\n            }\r\n            // now we paginate\r\n            if(options && (options.start || options.count)){\r\n                var total = results.length;\r\n                results = results.slice(options.start || 0, (options.start || 0) + (options.count || Infinity));\r\n                results.total = total;\r\n            }\r\n            return results;\r\n        }\r\n        execute.matches = query;\r\n        return execute;\r\n    };\r\n\r\n    var QueryResults = function(results){\r\n        // summary:\r\n        //      A function that wraps the results of a store query with additional\r\n        //      methods.\r\n        // description:\r\n        //      QueryResults is a basic wrapper that allows for array-like iteration\r\n        //      over any kind of returned data from a query.  While the simplest store\r\n        //      will return a plain array of data, other stores may return deferreds or\r\n        //      promises; this wrapper makes sure that *all* results can be treated\r\n        //      the same.\r\n        //\r\n        //      Additional methods include `forEach`, `filter` and `map`.\r\n        // results: Array|dojo/promise/Promise\r\n        //      The result set as an array, or a promise for an array.\r\n        // returns:\r\n        //      An array-like object that can be used for iterating over.\r\n        // example:\r\n        //      Query a store and iterate over the results.\r\n        //\r\n        //  |   store.query({ prime: true }).forEach(function(item){\r\n        //  |       //  do something\r\n        //  |   });\r\n\r\n        if(!results){\r\n            return results;\r\n        }\r\n\r\n        var isPromise = !!results.then;\r\n        // if it is a promise it may be frozen\r\n        if(isPromise){\r\n            results = Object.delegate(results);\r\n        }\r\n        function addIterativeMethod(method){\r\n            // Always add the iterative methods so a QueryResults is\r\n            // returned whether the environment is ES3 or ES5\r\n            results[method] = function(){\r\n                var args = arguments;\r\n                var result = Deferred.when(results, function(results){\r\n                    //Array.prototype.unshift.call(args, results);\r\n                    return QueryResults(Array.prototype[method].apply(results, args));\r\n                });\r\n                // forEach should only return the result of when()\r\n                // when we're wrapping a promise\r\n                if(method !== \"forEach\" || isPromise){\r\n                    return result;\r\n                }\r\n            };\r\n        }\r\n\r\n        addIterativeMethod(\"forEach\");\r\n        addIterativeMethod(\"filter\");\r\n        addIterativeMethod(\"map\");\r\n        if(results.total == null){\r\n            results.total = Deferred.when(results, function(results){\r\n                return results.length;\r\n            });\r\n        }\r\n        return results; // Object\r\n    };\r\n\r\n    var ArrayStore = klass({\r\n        \"klassName\": \"ArrayStore\",\r\n\r\n        \"queryEngine\": SimpleQueryEngine,\r\n        \r\n        \"idProperty\": \"id\",\r\n\r\n\r\n        get: function(id){\r\n            // summary:\r\n            //      Retrieves an object by its identity\r\n            // id: Number\r\n            //      The identity to use to lookup the object\r\n            // returns: Object\r\n            //      The object in the store that matches the given id.\r\n            return this.data[this.index[id]];\r\n        },\r\n\r\n        getIdentity: function(object){\r\n            return object[this.idProperty];\r\n        },\r\n\r\n        put: function(object, options){\r\n            var data = this.data,\r\n                index = this.index,\r\n                idProperty = this.idProperty;\r\n            var id = object[idProperty] = (options && \"id\" in options) ? options.id : idProperty in object ? object[idProperty] : Math.random();\r\n            if(id in index){\r\n                // object exists\r\n                if(options && options.overwrite === false){\r\n                    throw new Error(\"Object already exists\");\r\n                }\r\n                // replace the entry in data\r\n                data[index[id]] = object;\r\n            }else{\r\n                // add the new object\r\n                index[id] = data.push(object) - 1;\r\n            }\r\n            return id;\r\n        },\r\n\r\n        add: function(object, options){\r\n            (options = options || {}).overwrite = false;\r\n            // call put with overwrite being false\r\n            return this.put(object, options);\r\n        },\r\n\r\n        remove: function(id){\r\n            // summary:\r\n            //      Deletes an object by its identity\r\n            // id: Number\r\n            //      The identity to use to delete the object\r\n            // returns: Boolean\r\n            //      Returns true if an object was removed, falsy (undefined) if no object matched the id\r\n            var index = this.index;\r\n            var data = this.data;\r\n            if(id in index){\r\n                data.splice(index[id], 1);\r\n                // now we have to reindex\r\n                this.setData(data);\r\n                return true;\r\n            }\r\n        },\r\n        query: function(query, options){\r\n            // summary:\r\n            //      Queries the store for objects.\r\n            // query: Object\r\n            //      The query to use for retrieving objects from the store.\r\n            // options: dojo/store/api/Store.QueryOptions?\r\n            //      The optional arguments to apply to the resultset.\r\n            // returns: dojo/store/api/Store.QueryResults\r\n            //      The results of the query, extended with iterative methods.\r\n            //\r\n            // example:\r\n            //      Given the following store:\r\n            //\r\n            //  |   var store = new Memory({\r\n            //  |       data: [\r\n            //  |           {id: 1, name: \"one\", prime: false },\r\n            //  |           {id: 2, name: \"two\", even: true, prime: true},\r\n            //  |           {id: 3, name: \"three\", prime: true},\r\n            //  |           {id: 4, name: \"four\", even: true, prime: false},\r\n            //  |           {id: 5, name: \"five\", prime: true}\r\n            //  |       ]\r\n            //  |   });\r\n            //\r\n            //  ...find all items where \"prime\" is true:\r\n            //\r\n            //  |   var results = store.query({ prime: true });\r\n            //\r\n            //  ...or find all items where \"even\" is true:\r\n            //\r\n            //  |   var results = store.query({ even: true });\r\n            return QueryResults(this.queryEngine(query, options)(this.data));\r\n        },\r\n\r\n        setData: function(data){\r\n            // summary:\r\n            //      Sets the given data as the source for this store, and indexes it\r\n            // data: Object[]\r\n            //      An array of objects to use as the source of data.\r\n            if(data.items){\r\n                // just for convenience with the data format IFRS expects\r\n                this.idProperty = data.identifier || this.idProperty;\r\n                data = this.data = data.items;\r\n            }else{\r\n                this.data = data;\r\n            }\r\n            this.index = {};\r\n            for(var i = 0, l = data.length; i < l; i++){\r\n                this.index[data[i][this.idProperty]] = i;\r\n            }\r\n        },\r\n\r\n        init: function(options) {\r\n            for(var i in options){\r\n                this[i] = options[i];\r\n            }\r\n            this.setData(this.data || []);\r\n        }\r\n\r\n    });\r\n\r\n\treturn ArrayStore;\r\n});\ndefine('skylark-langx-aspect/aspect',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n\r\n  var undefined, nextId = 0;\r\n    function advise(dispatcher, type, advice, receiveArguments){\r\n        var previous = dispatcher[type];\r\n        var around = type == \"around\";\r\n        var signal;\r\n        if(around){\r\n            var advised = advice(function(){\r\n                return previous.advice(this, arguments);\r\n            });\r\n            signal = {\r\n                remove: function(){\r\n                    if(advised){\r\n                        advised = dispatcher = advice = null;\r\n                    }\r\n                },\r\n                advice: function(target, args){\r\n                    return advised ?\r\n                        advised.apply(target, args) :  // called the advised function\r\n                        previous.advice(target, args); // cancelled, skip to next one\r\n                }\r\n            };\r\n        }else{\r\n            // create the remove handler\r\n            signal = {\r\n                remove: function(){\r\n                    if(signal.advice){\r\n                        var previous = signal.previous;\r\n                        var next = signal.next;\r\n                        if(!next && !previous){\r\n                            delete dispatcher[type];\r\n                        }else{\r\n                            if(previous){\r\n                                previous.next = next;\r\n                            }else{\r\n                                dispatcher[type] = next;\r\n                            }\r\n                            if(next){\r\n                                next.previous = previous;\r\n                            }\r\n                        }\r\n\r\n                        // remove the advice to signal that this signal has been removed\r\n                        dispatcher = advice = signal.advice = null;\r\n                    }\r\n                },\r\n                id: nextId++,\r\n                advice: advice,\r\n                receiveArguments: receiveArguments\r\n            };\r\n        }\r\n        if(previous && !around){\r\n            if(type == \"after\"){\r\n                // add the listener to the end of the list\r\n                // note that we had to change this loop a little bit to workaround a bizarre IE10 JIT bug\r\n                while(previous.next && (previous = previous.next)){}\r\n                previous.next = signal;\r\n                signal.previous = previous;\r\n            }else if(type == \"before\"){\r\n                // add to beginning\r\n                dispatcher[type] = signal;\r\n                signal.next = previous;\r\n                previous.previous = signal;\r\n            }\r\n        }else{\r\n            // around or first one just replaces\r\n            dispatcher[type] = signal;\r\n        }\r\n        return signal;\r\n    }\r\n    function aspect(type){\r\n        return function(target, methodName, advice, receiveArguments){\r\n            var existing = target[methodName], dispatcher;\r\n            if(!existing || existing.target != target){\r\n                // no dispatcher in place\r\n                target[methodName] = dispatcher = function(){\r\n                    var executionId = nextId;\r\n                    // before advice\r\n                    var args = arguments;\r\n                    var before = dispatcher.before;\r\n                    while(before){\r\n                        args = before.advice.apply(this, args) || args;\r\n                        before = before.next;\r\n                    }\r\n                    // around advice\r\n                    if(dispatcher.around){\r\n                        var results = dispatcher.around.advice(this, args);\r\n                    }\r\n                    // after advice\r\n                    var after = dispatcher.after;\r\n                    while(after && after.id < executionId){\r\n                        if(after.receiveArguments){\r\n                            var newResults = after.advice.apply(this, args);\r\n                            // change the return value only if a new value was returned\r\n                            results = newResults === undefined ? results : newResults;\r\n                        }else{\r\n                            results = after.advice.call(this, results, args);\r\n                        }\r\n                        after = after.next;\r\n                    }\r\n                    return results;\r\n                };\r\n                if(existing){\r\n                    dispatcher.around = {advice: function(target, args){\r\n                        return existing.apply(target, args);\r\n                    }};\r\n                }\r\n                dispatcher.target = target;\r\n            }\r\n            var results = advise((dispatcher || existing), type, advice, receiveArguments);\r\n            advice = null;\r\n            return results;\r\n        };\r\n    }\r\n\r\n    return skylark.attach(\"langx.aspect\",{\r\n        after: aspect(\"after\"),\r\n \r\n        around: aspect(\"around\"),\r\n        \r\n        before: aspect(\"before\")\r\n    });\r\n});\ndefine('skylark-langx-aspect/main',[\r\n\t\"./aspect\"\r\n],function(aspect){\r\n\treturn aspect;\r\n});\ndefine('skylark-langx-aspect', ['skylark-langx-aspect/main'], function (main) { return main; });\n\ndefine('skylark-langx/aspect',[\r\n    \"skylark-langx-aspect\"\r\n],function(aspect){\r\n  return aspect;\r\n});\ndefine('skylark-langx-funcs/funcs',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\"\r\n],function(skylark,types,objects){\r\n\tvar mixin = objects.mixin,\r\n        slice = Array.prototype.slice,\r\n        isFunction = types.isFunction,\r\n        isString = types.isString;\r\n\r\n    function defer(fn) {\r\n        if (requestAnimationFrame) {\r\n            requestAnimationFrame(fn);\r\n        } else {\r\n            setTimeoutout(fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function noop() {\r\n    }\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n    function debounce(fn, wait) {\r\n        var timeout;\r\n        return function () {\r\n            var context = this, args = arguments;\r\n            var later = function () {\r\n                timeout = null;\r\n                fn.apply(context, args);\r\n            };\r\n            if (timeout) clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n   \r\n    var delegate = (function() {\r\n        // boodman/crockford delegation w/ cornford optimization\r\n        function TMP() {}\r\n        return function(obj, props) {\r\n            TMP.prototype = obj;\r\n            var tmp = new TMP();\r\n            TMP.prototype = null;\r\n            if (props) {\r\n                mixin(tmp, props);\r\n            }\r\n            return tmp; // Object\r\n        };\r\n    })();\r\n\r\n  var templateSettings = {\r\n    evaluate: /<%([\\s\\S]+?)%>/g,\r\n    interpolate: /<%=([\\s\\S]+?)%>/g,\r\n    escape: /<%-([\\s\\S]+?)%>/g\r\n  };\r\n\r\n\r\n  function template(text, settings, oldSettings) {\r\n    if (!settings && oldSettings) settings = oldSettings;\r\n    settings = objects.defaults({}, settings,templateSettings);\r\n\r\n    // Combine delimiters into one regular expression via alternation.\r\n    var matcher = RegExp([\r\n      (settings.escape || noMatch).source,\r\n      (settings.interpolate || noMatch).source,\r\n      (settings.evaluate || noMatch).source\r\n    ].join('|') + '|$', 'g');\r\n\r\n    // Compile the template source, escaping string literals appropriately.\r\n    var index = 0;\r\n    var source = \"__p+='\";\r\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\r\n      source += text.slice(index, offset).replace(escapeRegExp, escapeChar);\r\n      index = offset + match.length;\r\n\r\n      if (escape) {\r\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\r\n      } else if (interpolate) {\r\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\r\n      } else if (evaluate) {\r\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\r\n      }\r\n\r\n      // Adobe VMs need the match returned to produce the correct offset.\r\n      return match;\r\n    });\r\n    source += \"';\\n\";\r\n\r\n    // If a variable is not specified, place data values in local scope.\r\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\r\n\r\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\r\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\r\n      source + 'return __p;\\n';\r\n\r\n    var render;\r\n    try {\r\n      render = new Function(settings.variable || 'obj', '_', source);\r\n    } catch (e) {\r\n      e.source = source;\r\n      throw e;\r\n    }\r\n\r\n    var template = function(data) {\r\n      return render.call(this, data, _);\r\n    };\r\n\r\n    // Provide the compiled source as a convenience for precompilation.\r\n    var argument = settings.variable || 'obj';\r\n    template.source = 'function(' + argument + '){\\n' + source + '}';\r\n\r\n    return template;\r\n  };\r\n\r\n    return skylark.attach(\"langx.funcs\",{\r\n        debounce: debounce,\r\n\r\n        delegate: delegate,\r\n\r\n        defer: defer,\r\n\r\n        noop : noop,\r\n\r\n        proxy: proxy,\r\n\r\n        returnTrue: function() {\r\n            return true;\r\n        },\r\n\r\n        returnFalse: function() {\r\n            return false;\r\n        },\r\n\r\n        templateSettings : templateSettings,\r\n        template : template\r\n    });\r\n});\ndefine('skylark-langx-funcs/main',[\r\n\t\"./funcs\"\r\n],function(funcs){\r\n\treturn funcs;\r\n});\ndefine('skylark-langx-funcs', ['skylark-langx-funcs/main'], function (main) { return main; });\n\ndefine('skylark-langx-async/Deferred',[\r\n    \"skylark-langx-arrays\",\r\n\t\"skylark-langx-funcs\",\r\n    \"skylark-langx-objects\"\r\n],function(arrays,funcs,objects){\r\n    \"use strict\";\r\n    \r\n    var  PGLISTENERS = Symbol ? Symbol() : '__pglisteners',\r\n         PGNOTIFIES = Symbol ? Symbol() : '__pgnotifies';\r\n\r\n    var slice = Array.prototype.slice,\r\n        proxy = funcs.proxy,\r\n        makeArray = arrays.makeArray,\r\n        result = objects.result,\r\n        mixin = objects.mixin;\r\n\r\n    mixin(Promise.prototype,{\r\n        always: function(handler) {\r\n            //this.done(handler);\r\n            //this.fail(handler);\r\n            this.then(handler,handler);\r\n            return this;\r\n        },\r\n        done : function() {\r\n            for (var i = 0;i<arguments.length;i++) {\r\n                this.then(arguments[i]);\r\n            }\r\n            return this;\r\n        },\r\n        fail : function(handler) { \r\n            //return mixin(Promise.prototype.catch.call(this,handler),added);\r\n            //return this.then(null,handler);\r\n            this.catch(handler);\r\n            return this;\r\n         }\r\n    });\r\n\r\n\r\n    var Deferred = function() {\r\n        var self = this,\r\n            p = this.promise = new Promise(function(resolve, reject) {\r\n                self._resolve = resolve;\r\n                self._reject = reject;\r\n            });\r\n\r\n        wrapPromise(p,self);\r\n\r\n        this[PGLISTENERS] = [];\r\n        this[PGNOTIFIES] = [];\r\n\r\n        //this.resolve = Deferred.prototype.resolve.bind(this);\r\n        //this.reject = Deferred.prototype.reject.bind(this);\r\n        //this.progress = Deferred.prototype.progress.bind(this);\r\n\r\n    };\r\n\r\n    function wrapPromise(p,d) {\r\n        var   added = {\r\n                state : function() {\r\n                    if (d.isResolved()) {\r\n                        return 'resolved';\r\n                    }\r\n                    if (d.isRejected()) {\r\n                        return 'rejected';\r\n                    }\r\n                    return 'pending';\r\n                },\r\n                then : function(onResolved,onRejected,onProgress) {\r\n                    if (onProgress) {\r\n                        this.progress(onProgress);\r\n                    }\r\n                    return wrapPromise(Promise.prototype.then.call(this,\r\n                            onResolved && function(args) {\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onResolved.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onResolved(args);\r\n                                }\r\n                            },\r\n                            onRejected && function(args){\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onRejected.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onRejected(args);\r\n                                }\r\n                            }));\r\n                },\r\n                progress : function(handler) {\r\n                    d[PGNOTIFIES].forEach(function (value) {\r\n                        handler(value);\r\n                    });\r\n                    d[PGLISTENERS].push(handler);\r\n                    return this;\r\n                }\r\n\r\n            };\r\n\r\n        added.pipe = added.then;\r\n        return mixin(p,added);\r\n\r\n    }\r\n\r\n    Deferred.prototype.resolve = function(value) {\r\n        var args = slice.call(arguments);\r\n        return this.resolveWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.resolveWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._resolve(args);\r\n        this._resolved = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.notify = function(value) {\r\n        try {\r\n            this[PGNOTIFIES].push(value);\r\n\r\n            return this[PGLISTENERS].forEach(function (listener) {\r\n                return listener(value);\r\n            });\r\n        } catch (error) {\r\n          this.reject(error);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        var args = slice.call(arguments);\r\n        return this.rejectWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.rejectWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._reject(args);\r\n        this._rejected = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.isResolved = function() {\r\n        return !!this._resolved;\r\n    };\r\n\r\n    Deferred.prototype.isRejected = function() {\r\n        return !!this._rejected;\r\n    };\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        var p = result(this,\"promise\");\r\n        return p.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.prototype.progress = function(progback){\r\n        var p = result(this,\"promise\");\r\n        return p.progress(progback);\r\n    };\r\n   \r\n    Deferred.prototype.catch = function(errback) {\r\n        var p = result(this,\"promise\");\r\n        return p.catch(errback);\r\n    };\r\n\r\n\r\n    Deferred.prototype.done  = function() {\r\n        var p = result(this,\"promise\");\r\n        return p.done.apply(p,arguments);\r\n    };\r\n\r\n    Deferred.prototype.fail = function(errback) {\r\n        var p = result(this,\"promise\");\r\n        return p.fail(errback);\r\n    };\r\n\r\n\r\n    Deferred.all = function(array) {\r\n        //return wrapPromise(Promise.all(array));\r\n        var d = new Deferred();\r\n        Promise.all(array).then(d.resolve.bind(d),d.reject.bind(d));\r\n        return result(d,\"promise\");\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return wrapPromise(Promise.race(array));\r\n    };\r\n\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n        } else if (!nativePromise) {\r\n            var deferred = new Deferred(valueOrPromise.cancel);\r\n            valueOrPromise.then(proxy(deferred.resolve,deferred), proxy(deferred.reject,deferred), deferred.notify);\r\n            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve.apply(d,arguments);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n    return Deferred;\r\n});\ndefine('skylark-langx-async/async',[\r\n    \"skylark-langx-ns\",\r\n    \"skylark-langx-objects\",\r\n    \"./Deferred\"\r\n],function(skylark,objects,Deferred){\r\n    var each = objects.each;\r\n    \r\n    var async = {\r\n        Deferred : Deferred,\r\n\r\n        parallel : function(arr,args,ctx) {\r\n            var rets = [];\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            each(arr,function(i,func){\r\n                rets.push(func.apply(ctx,args));\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        series : function(arr,args,ctx) {\r\n            var rets = [],\r\n                d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolve();\r\n            each(arr,function(i,func){\r\n                p = p.then(function(){\r\n                    return func.apply(ctx,args);\r\n                });\r\n                rets.push(p);\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        waterful : function(arr,args,ctx) {\r\n            var d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolveWith(ctx,args);\r\n\r\n            each(arr,function(i,func){\r\n                p = p.then(func);\r\n            });\r\n            return p;\r\n        }\r\n    };\r\n\r\n\treturn skylark.attach(\"langx.async\",async);\t\r\n});\ndefine('skylark-langx-async/main',[\r\n\t\"./async\"\r\n],function(async){\r\n\treturn async;\r\n});\ndefine('skylark-langx-async', ['skylark-langx-async/main'], function (main) { return main; });\n\ndefine('skylark-langx/async',[\r\n    \"skylark-langx-async\"\r\n],function(async){\r\n    return async;\r\n});\ndefine('skylark-langx-datetimes/datetimes',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n     function parseMilliSeconds(str) {\r\n\r\n        var strs = str.split(' ');\r\n        var number = parseInt(strs[0]);\r\n\r\n        if (isNaN(number)){\r\n            return 0;\r\n        }\r\n\r\n        var min = 60000 * 60;\r\n\r\n        switch (strs[1].trim().replace(/\\./g, '')) {\r\n            case 'minutes':\r\n            case 'minute':\r\n            case 'min':\r\n            case 'mm':\r\n            case 'm':\r\n                return 60000 * number;\r\n            case 'hours':\r\n            case 'hour':\r\n            case 'HH':\r\n            case 'hh':\r\n            case 'h':\r\n            case 'H':\r\n                return min * number;\r\n            case 'seconds':\r\n            case 'second':\r\n            case 'sec':\r\n            case 'ss':\r\n            case 's':\r\n                return 1000 * number;\r\n            case 'days':\r\n            case 'day':\r\n            case 'DD':\r\n            case 'dd':\r\n            case 'd':\r\n                return (min * 24) * number;\r\n            case 'months':\r\n            case 'month':\r\n            case 'MM':\r\n            case 'M':\r\n                return (min * 24 * 28) * number;\r\n            case 'weeks':\r\n            case 'week':\r\n            case 'W':\r\n            case 'w':\r\n                return (min * 24 * 7) * number;\r\n            case 'years':\r\n            case 'year':\r\n            case 'yyyy':\r\n            case 'yy':\r\n            case 'y':\r\n                return (min * 24 * 365) * number;\r\n            default:\r\n                return 0;\r\n        }\r\n    };\r\n\t\r\n\treturn skylark.attach(\"langx.datetimes\",{\r\n\t\tparseMilliSeconds\r\n\t});\r\n});\ndefine('skylark-langx-datetimes/main',[\r\n\t\"./datetimes\"\r\n],function(datetimes){\r\n\treturn datetimes;\r\n});\ndefine('skylark-langx-datetimes', ['skylark-langx-datetimes/main'], function (main) { return main; });\n\ndefine('skylark-langx/datetimes',[\r\n    \"skylark-langx-datetimes\"\r\n],function(datetimes){\r\n    return datetimes;\r\n});\ndefine('skylark-langx/Deferred',[\r\n    \"skylark-langx-async/Deferred\"\r\n],function(Deferred){\r\n    return Deferred;\r\n});\ndefine('skylark-langx-emitter/Emitter',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-arrays\",\r\n  \"skylark-langx-klass\"\r\n],function(skylark,types,objects,arrays,klass){\r\n    var slice = Array.prototype.slice,\r\n        compact = arrays.compact,\r\n        isDefined = types.isDefined,\r\n        isPlainObject = types.isPlainObject,\r\n        isFunction = types.isFunction,\r\n        isString = types.isString,\r\n        isEmptyObject = types.isEmptyObject,\r\n        mixin = objects.mixin,\r\n        safeMixin = objects.safeMixin;\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            name: segs[0],\r\n            ns: segs.slice(1).join(\" \")\r\n        };\r\n    }\r\n\r\n    var Emitter = klass({\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(event) {\r\n                var parsed = parse(event),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    ns : ns,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        emit: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new CustomEvent(e);\r\n            }\r\n\r\n            Object.defineProperty(e,\"target\",{\r\n                value : this\r\n            });\r\n\r\n            var args = slice.call(arguments, 1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var parsed = parse(eventName),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                var listeners = self._hub[name];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    var listener = listeners[i];\r\n                    if (ns && (!listener.ns ||  !listener.ns.startsWith(ns))) {\r\n                        continue;\r\n                    }\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                obj.one(event, callback, this);\r\n            } else {\r\n                obj.on(event, callback, this);\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event, callback) {\r\n            return this.listenTo(obj, event, callback, 1);\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(event) {\r\n                var parsed = parse(event),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                var evts = _hub[name];\r\n\r\n                if (evts) {\r\n                    var liveEvents = [];\r\n\r\n                    if (callback || ns) {\r\n                        for (var i = 0, len = evts.length; i < len; i++) {\r\n                            \r\n                            if (callback && evts[i].fn !== callback && evts[i].fn._ !== callback) {\r\n                                liveEvents.push(evts[i]);\r\n                                continue;\r\n                            } \r\n\r\n                            if (ns && (!evts[i].ns || evts[i].ns.indexOf(ns)!=0)) {\r\n                                liveEvents.push(evts[i]);\r\n                                continue;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (liveEvents.length) {\r\n                        _hub[name] = liveEvents;\r\n                    } else {\r\n                        delete _hub[name];\r\n                    }\r\n\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    var listeningEvent = listeningEvents[eventName];\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        trigger  : function() {\r\n            return this.emit.apply(this,arguments);\r\n        }\r\n    });\r\n\r\n    Emitter.createEvent = function (type,props) {\r\n        var e = new CustomEvent(type,props);\r\n        return safeMixin(e, props);\r\n    };\r\n\r\n    return skylark.attach(\"langx.Emitter\",Emitter);\r\n\r\n});\ndefine('skylark-langx-emitter/Evented',[\r\n  \"skylark-langx-ns/ns\",\r\n\t\"./Emitter\"\r\n],function(skylark,Emitter){\r\n\treturn skylark.attach(\"langx.Evented\",Emitter);\r\n});\ndefine('skylark-langx-emitter/main',[\r\n\t\"./Emitter\",\r\n\t\"./Evented\"\r\n],function(Emitter){\r\n\treturn Emitter;\r\n});\ndefine('skylark-langx-emitter', ['skylark-langx-emitter/main'], function (main) { return main; });\n\ndefine('skylark-langx/Emitter',[\r\n    \"skylark-langx-emitter\"\r\n],function(Evented){\r\n    return Evented;\r\n});\ndefine('skylark-langx/Evented',[\r\n    \"skylark-langx-emitter\"\r\n],function(Evented){\r\n    return Evented;\r\n});\ndefine('skylark-langx/funcs',[\r\n    \"skylark-langx-funcs\"\r\n],function(funcs){\r\n    return funcs;\r\n});\ndefine('skylark-langx-hoster/hoster',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n\t// The javascript host environment, brower and nodejs are supported.\r\n\tvar hoster = {\r\n\t\t\"isBrowser\" : true, // default\r\n\t\t\"isNode\" : null,\r\n\t\t\"global\" : this,\r\n\t\t\"browser\" : null,\r\n\t\t\"node\" : null\r\n\t};\r\n\r\n\tif (typeof process == \"object\" && process.versions && process.versions.node && process.versions.v8) {\r\n\t\thoster.isNode = true;\r\n\t\thoster.isBrowser = false;\r\n\t}\r\n\r\n\thoster.global = (function(){\r\n\t\tif (typeof global !== 'undefined' && typeof global !== 'function') {\r\n\t\t\t// global spec defines a reference to the global object called 'global'\r\n\t\t\t// https://github.com/tc39/proposal-global\r\n\t\t\t// `global` is also defined in NodeJS\r\n\t\t\treturn global;\r\n\t\t} else if (typeof window !== 'undefined') {\r\n\t\t\t// window is defined in browsers\r\n\t\t\treturn window;\r\n\t\t}\r\n\t\telse if (typeof self !== 'undefined') {\r\n\t\t\t// self is defined in WebWorkers\r\n\t\t\treturn self;\r\n\t\t}\r\n\t\treturn this;\r\n\t})();\r\n\r\n\tvar _document = null;\r\n\r\n\tObject.defineProperty(hoster,\"document\",function(){\r\n\t\tif (!_document) {\r\n\t\t\tvar w = typeof window === 'undefined' ? require('html-element') : window;\r\n\t\t\t_document = w.document;\r\n\t\t}\r\n\r\n\t\treturn _document;\r\n\t});\r\n\r\n\tif (hoster.isBrowser) {\r\n\t    function uaMatch( ua ) {\r\n\t\t    ua = ua.toLowerCase();\r\n\r\n\t\t    var match = /(chrome)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(webkit)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(opera)(?:.*version|)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(msie) ([\\w.]+)/.exec( ua ) ||\r\n\t\t      ua.indexOf('compatible') < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec( ua ) ||\r\n\t\t      [];\r\n\r\n\t\t    return {\r\n\t\t      browser: match[ 1 ] || '',\r\n\t\t      version: match[ 2 ] || '0'\r\n\t\t    };\r\n\t  \t};\r\n\r\n\t    var matched = uaMatch( navigator.userAgent );\r\n\r\n\t    var browser = hoster.browser = {};\r\n\r\n\t    if ( matched.browser ) {\r\n\t      browser[ matched.browser ] = true;\r\n\t      browser.version = matched.version;\r\n\t    }\r\n\r\n\t    // Chrome is Webkit, but Webkit is also Safari.\r\n\t    if ( browser.chrome ) {\r\n\t      browser.webkit = true;\r\n\t    } else if ( browser.webkit ) {\r\n\t      browser.safari = true;\r\n\t    }\r\n\t}\r\n\r\n\treturn  skylark.attach(\"langx.hoster\",hoster);\r\n});\ndefine('skylark-langx-hoster/main',[\r\n\t\"./hoster\"\r\n],function(hoster){\r\n\treturn hoster;\r\n});\ndefine('skylark-langx-hoster', ['skylark-langx-hoster/main'], function (main) { return main; });\n\ndefine('skylark-langx/hoster',[\r\n\t\"skylark-langx-hoster\"\r\n],function(hoster){\r\n\treturn hoster;\r\n});\ndefine('skylark-langx/numbers',[\r\n\t\"skylark-langx-numbers\"\r\n],function(numbers){\r\n\treturn numbers;\r\n});\ndefine('skylark-langx/objects',[\r\n    \"skylark-langx-objects\"\r\n],function(objects){\r\n    return objects;\r\n});\ndefine('skylark-langx-strings/strings',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n    // add default escape function for escaping HTML entities\r\n    var escapeCharMap = Object.freeze({\r\n        '&': '&amp;',\r\n        '<': '&lt;',\r\n        '>': '&gt;',\r\n        '\"': '&quot;',\r\n        \"'\": '&#x27;',\r\n        '`': '&#x60;',\r\n        '=': '&#x3D;',\r\n    });\r\n    function replaceChar(c) {\r\n        return escapeCharMap[c];\r\n    }\r\n    var escapeChars = /[&<>\"'`=]/g;\r\n\r\n\r\n     /*\r\n     * Converts camel case into dashes.\r\n     * @param {String} str\r\n     * @return {String}\r\n     * @exapmle marginTop -> margin-top\r\n     */\r\n    function dasherize(str) {\r\n        return str.replace(/::/g, '/')\r\n            .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\r\n            .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\r\n            .replace(/_/g, '-')\r\n            .toLowerCase();\r\n    }\r\n\r\n    function deserializeValue(value) {\r\n        try {\r\n            return value ?\r\n                value == \"true\" ||\r\n                (value == \"false\" ? false :\r\n                    value == \"null\" ? null :\r\n                    +value + \"\" == value ? +value :\r\n                    /^[\\[\\{]/.test(value) ? JSON.parse(value) :\r\n                    value) : value;\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    function escapeHTML(str) {\r\n        if (str == null) {\r\n            return '';\r\n        }\r\n        if (!str) {\r\n            return String(str);\r\n        }\r\n\r\n        return str.toString().replace(escapeChars, replaceChar);\r\n    }\r\n\r\n    function generateUUID() {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n            var r = Math.random() * 16 | 0;\r\n            var v = c === 'x' ? r : ((r & 0x3) | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    }\r\n\r\n    function trim(str) {\r\n        return str == null ? \"\" : String.prototype.trim.call(str);\r\n    }\r\n\r\n    function substitute( /*String*/ template,\r\n        /*Object|Array*/\r\n        map,\r\n        /*Function?*/\r\n        transform,\r\n        /*Object?*/\r\n        thisObject) {\r\n        // summary:\r\n        //    Performs parameterized substitutions on a string. Throws an\r\n        //    exception if any parameter is unmatched.\r\n        // template:\r\n        //    a string with expressions in the form `${key}` to be replaced or\r\n        //    `${key:format}` which specifies a format function. keys are case-sensitive.\r\n        // map:\r\n        //    hash to search for substitutions\r\n        // transform:\r\n        //    a function to process all parameters before substitution takes\r\n\r\n\r\n        thisObject = thisObject || window;\r\n        transform = transform ?\r\n            proxy(thisObject, transform) : function(v) {\r\n                return v;\r\n            };\r\n\r\n        function getObject(key, map) {\r\n            if (key.match(/\\./)) {\r\n                var retVal,\r\n                    getValue = function(keys, obj) {\r\n                        var _k = keys.pop();\r\n                        if (_k) {\r\n                            if (!obj[_k]) return null;\r\n                            return getValue(keys, retVal = obj[_k]);\r\n                        } else {\r\n                            return retVal;\r\n                        }\r\n                    };\r\n                return getValue(key.split(\".\").reverse(), map);\r\n            } else {\r\n                return map[key];\r\n            }\r\n        }\r\n\r\n        return template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\r\n            function(match, key, format) {\r\n                var value = getObject(key, map);\r\n                if (format) {\r\n                    value = getObject(format, thisObject).call(thisObject, value, key);\r\n                }\r\n                return transform(value, key).toString();\r\n            }); // String\r\n    }\r\n\r\n    var idCounter = 0;\r\n    function uniqueId (prefix) {\r\n        var id = ++idCounter + '';\r\n        return prefix ? prefix + id : id;\r\n    }\r\n\r\n\r\n    /**\r\n     * https://github.com/cho45/micro-template.js\r\n     * (c) cho45 http://cho45.github.com/mit-license\r\n     */\r\n    function template (id, data) {\r\n\r\n        function include(name, args) {\r\n            var stash = {};\r\n            for (var key in template.context.stash) if (template.context.stash.hasOwnProperty(key)) {\r\n                stash[key] = template.context.stash[key];\r\n            }\r\n            if (args) for (var key in args) if (args.hasOwnProperty(key)) {\r\n                stash[key] = args[key];\r\n            }\r\n            var context = template.context;\r\n            context.ret += template(name, stash);\r\n            template.context = context;\r\n        }\r\n\r\n        function wrapper(name, fun) {\r\n            var current = template.context.ret;\r\n            template.context.ret = '';\r\n            fun.apply(template.context);\r\n            var content = template.context.ret;\r\n            var orig_content = template.context.stash.content;\r\n            template.context.stash.content = content;\r\n            template.context.ret = current + template(name, template.context.stash);\r\n            template.context.stash.content = orig_content;\r\n        }\r\n\r\n        var me = arguments.callee;\r\n        if (!me.cache[id]) me.cache[id] = (function () {\r\n            var name = id, string = /^[\\w\\-]+$/.test(id) ? me.get(id): (name = 'template(string)', id); // no warnings\r\n            var line = 1, body = (\r\n                \"try { \" +\r\n                    (me.variable ?  \"var \" + me.variable + \" = this.stash;\" : \"with (this.stash) { \") +\r\n                        \"this.ret += '\"  +\r\n                        string.\r\n                            replace(/<%/g, '\\x11').replace(/%>/g, '\\x13'). // if you want other tag, just edit this line\r\n                            replace(/'(?![^\\x11\\x13]+?\\x13)/g, '\\\\x27').\r\n                            replace(/^\\s*|\\s*$/g, '').\r\n                            replace(/\\n|\\r\\n/g, function () { return \"';\\nthis.line = \" + (++line) + \"; this.ret += '\\\\n\" }).\r\n                            replace(/\\x11=raw(.+?)\\x13/g, \"' + ($1) + '\").\r\n                            replace(/\\x11=(.+?)\\x13/g, \"' + this.escapeHTML($1) + '\").\r\n                            replace(/\\x11(.+?)\\x13/g, \"'; $1; this.ret += '\") +\r\n                    \"'; \" + (me.variable ? \"\" : \"}\") + \"return this.ret;\" +\r\n                \"} catch (e) { throw 'TemplateError: ' + e + ' (on \" + name + \"' + ' line ' + this.line + ')'; } \" +\r\n                \"//@ sourceURL=\" + name + \"\\n\" // source map\r\n            ).replace(/this\\.ret \\+= '';/g, '');\r\n            var func = new Function(body);\r\n            var map  = { '&' : '&amp;', '<' : '&lt;', '>' : '&gt;', '\\x22' : '&#x22;', '\\x27' : '&#x27;' };\r\n            var escapeHTML = function (string) { return (''+string).replace(/[&<>\\'\\\"]/g, function (_) { return map[_] }) };\r\n            return function (stash) { return func.call(me.context = { escapeHTML: escapeHTML, line: 1, ret : '', stash: stash }) };\r\n        })();\r\n        return data ? me.cache[id](data) : me.cache[id];\r\n    }\r\n\r\n    template.cache = {};\r\n    \r\n\r\n    template.get = function (id) {\r\n        return document.getElementById(id).innerHTML;\r\n    };\r\n\r\n    function rtrim(str) {\r\n        return str.replace(/\\s+$/g, '');\r\n    }\r\n\r\n    // Slugify a string\r\n    function slugify(str) {\r\n        str = str.replace(/^\\s+|\\s+$/g, '');\r\n\r\n        // Make the string lowercase\r\n        str = str.toLowerCase();\r\n\r\n        // Remove accents, swap ñ for n, etc\r\n        var from = \"ÁÄÂÀÃÅČÇĆĎÉĚËÈÊẼĔȆÍÌÎÏŇÑÓÖÒÔÕØŘŔŠŤÚŮÜÙÛÝŸŽáäâàãåčçćďéěëèêẽĕȇíìîïňñóöòôõøðřŕšťúůüùûýÿžþÞĐđßÆa·/_,:;\";\r\n        var to   = \"AAAAAACCCDEEEEEEEEIIIINNOOOOOORRSTUUUUUYYZaaaaaacccdeeeeeeeeiiiinnooooooorrstuuuuuyyzbBDdBAa------\";\r\n        for (var i=0, l=from.length ; i<l ; i++) {\r\n            str = str.replace(new RegExp(from.charAt(i), 'g'), to.charAt(i));\r\n        }\r\n\r\n        // Remove invalid chars\r\n        //str = str.replace(/[^a-z0-9 -]/g, '') \r\n        // Collapse whitespace and replace by -\r\n        str = str.replace(/\\s+/g, '-') \r\n        // Collapse dashes\r\n        .replace(/-+/g, '-'); \r\n\r\n        return str;\r\n    }    \r\n\r\n    // return boolean if string 'true' or string 'false', or if a parsable string which is a number\r\n    // also supports JSON object and/or arrays parsing\r\n    function toType(str) {\r\n        var type = typeof str;\r\n        if (type !== 'string') {\r\n            return str;\r\n        }\r\n        var nb = parseFloat(str);\r\n        if (!isNaN(nb) && isFinite(str)) {\r\n            return nb;\r\n        }\r\n        if (str === 'false') {\r\n            return false;\r\n        }\r\n        if (str === 'true') {\r\n            return true;\r\n        }\r\n\r\n        try {\r\n            str = JSON.parse(str);\r\n        } catch (e) {}\r\n\r\n        return str;\r\n    }\r\n\r\n\treturn skylark.attach(\"langx.strings\",{\r\n        camelCase: function(str) {\r\n            return str.replace(/-([\\da-z])/g, function(a) {\r\n                return a.toUpperCase().replace('-', '');\r\n            });\r\n        },\r\n\r\n        dasherize: dasherize,\r\n\r\n        deserializeValue: deserializeValue,\r\n\r\n        escapeHTML : escapeHTML,\r\n\r\n        generateUUID : generateUUID,\r\n\r\n        lowerFirst: function(str) {\r\n            return str.charAt(0).toLowerCase() + str.slice(1);\r\n        },\r\n\r\n        rtrim : rtrim,\r\n\r\n        serializeValue: function(value) {\r\n            return JSON.stringify(value)\r\n        },\r\n\r\n\r\n        substitute: substitute,\r\n\r\n        slugify : slugify,\r\n\r\n        template : template,\r\n\r\n        trim: trim,\r\n\r\n        uniqueId: uniqueId,\r\n\r\n        upperFirst: function(str) {\r\n            return str.charAt(0).toUpperCase() + str.slice(1);\r\n        }\r\n\t}) ; \r\n\r\n});\ndefine('skylark-langx-strings/main',[\r\n\t\"./strings\"\r\n],function(strings){\r\n\treturn strings;\r\n});\ndefine('skylark-langx-strings', ['skylark-langx-strings/main'], function (main) { return main; });\n\ndefine('skylark-langx/strings',[\r\n    \"skylark-langx-strings\"\r\n],function(strings){\r\n    return strings;\r\n});\ndefine('skylark-langx/Stateful',[\r\n\t\"./Evented\",\r\n  \"./strings\",\r\n  \"./objects\"\r\n],function(Evented,strings,objects){\r\n    var isEqual = objects.isEqual,\r\n        mixin = objects.mixin,\r\n        result = objects.result,\r\n        isEmptyObject = objects.isEmptyObject,\r\n        clone = objects.clone,\r\n        uniqueId = strings.uniqueId;\r\n\r\n    var Stateful = Evented.inherit({\r\n        _construct : function(attributes, options) {\r\n            var attrs = attributes || {};\r\n            options || (options = {});\r\n            this.cid = uniqueId(this.cidPrefix);\r\n            this.attributes = {};\r\n            if (options.collection) this.collection = options.collection;\r\n            if (options.parse) attrs = this.parse(attrs, options) || {};\r\n            var defaults = result(this, 'defaults');\r\n            attrs = mixin({}, defaults, attrs);\r\n            this.set(attrs, options);\r\n            this.changed = {};\r\n        },\r\n\r\n        // A hash of attributes whose current and previous value differ.\r\n        changed: null,\r\n\r\n        // The value returned during the last failed validation.\r\n        validationError: null,\r\n\r\n        // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\r\n        // CouchDB users may want to set this to `\"_id\"`.\r\n        idAttribute: 'id',\r\n\r\n        // The prefix is used to create the client id which is used to identify models locally.\r\n        // You may want to override this if you're experiencing name clashes with model ids.\r\n        cidPrefix: 'c',\r\n\r\n\r\n        // Return a copy of the model's `attributes` object.\r\n        toJSON: function(options) {\r\n          return clone(this.attributes);\r\n        },\r\n\r\n\r\n        // Get the value of an attribute.\r\n        get: function(attr) {\r\n          return this.attributes[attr];\r\n        },\r\n\r\n        // Returns `true` if the attribute contains a value that is not null\r\n        // or undefined.\r\n        has: function(attr) {\r\n          return this.get(attr) != null;\r\n        },\r\n\r\n        // Set a hash of model attributes on the object, firing `\"change\"`. This is\r\n        // the core primitive operation of a model, updating the data and notifying\r\n        // anyone who needs to know about the change in state. The heart of the beast.\r\n        set: function(key, val, options) {\r\n          if (key == null) return this;\r\n\r\n          // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n          var attrs;\r\n          if (typeof key === 'object') {\r\n            attrs = key;\r\n            options = val;\r\n          } else {\r\n            (attrs = {})[key] = val;\r\n          }\r\n\r\n          options || (options = {});\r\n\r\n          // Run validation.\r\n          if (!this._validate(attrs, options)) return false;\r\n\r\n          // Extract attributes and options.\r\n          var unset      = options.unset;\r\n          var silent     = options.silent;\r\n          var changes    = [];\r\n          var changing   = this._changing;\r\n          this._changing = true;\r\n\r\n          if (!changing) {\r\n            this._previousAttributes = clone(this.attributes);\r\n            this.changed = {};\r\n          }\r\n\r\n          var current = this.attributes;\r\n          var changed = this.changed;\r\n          var prev    = this._previousAttributes;\r\n\r\n          // For each `set` attribute, update or delete the current value.\r\n          for (var attr in attrs) {\r\n            val = attrs[attr];\r\n            if (!isEqual(current[attr], val)) changes.push(attr);\r\n            if (!isEqual(prev[attr], val)) {\r\n              changed[attr] = val;\r\n            } else {\r\n              delete changed[attr];\r\n            }\r\n            unset ? delete current[attr] : current[attr] = val;\r\n          }\r\n\r\n          // Update the `id`.\r\n          if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\r\n\r\n          // Trigger all relevant attribute changes.\r\n          if (!silent) {\r\n            if (changes.length) this._pending = options;\r\n            for (var i = 0; i < changes.length; i++) {\r\n              this.trigger('change:' + changes[i], this, current[changes[i]], options);\r\n            }\r\n          }\r\n\r\n          // You might be wondering why there's a `while` loop here. Changes can\r\n          // be recursively nested within `\"change\"` events.\r\n          if (changing) return this;\r\n          if (!silent) {\r\n            while (this._pending) {\r\n              options = this._pending;\r\n              this._pending = false;\r\n              this.trigger('change', this, options);\r\n            }\r\n          }\r\n          this._pending = false;\r\n          this._changing = false;\r\n          return this;\r\n        },\r\n\r\n        // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\r\n        // if the attribute doesn't exist.\r\n        unset: function(attr, options) {\r\n          return this.set(attr, void 0, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Clear all attributes on the model, firing `\"change\"`.\r\n        clear: function(options) {\r\n          var attrs = {};\r\n          for (var key in this.attributes) attrs[key] = void 0;\r\n          return this.set(attrs, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Determine if the model has changed since the last `\"change\"` event.\r\n        // If you specify an attribute name, determine if that attribute has changed.\r\n        hasChanged: function(attr) {\r\n          if (attr == null) return !isEmptyObject(this.changed);\r\n          return this.changed[attr] !== undefined;\r\n        },\r\n\r\n        // Return an object containing all the attributes that have changed, or\r\n        // false if there are no changed attributes. Useful for determining what\r\n        // parts of a view need to be updated and/or what attributes need to be\r\n        // persisted to the server. Unset attributes will be set to undefined.\r\n        // You can also pass an attributes object to diff against the model,\r\n        // determining if there *would be* a change.\r\n        changedAttributes: function(diff) {\r\n          if (!diff) return this.hasChanged() ? clone(this.changed) : false;\r\n          var old = this._changing ? this._previousAttributes : this.attributes;\r\n          var changed = {};\r\n          for (var attr in diff) {\r\n            var val = diff[attr];\r\n            if (isEqual(old[attr], val)) continue;\r\n            changed[attr] = val;\r\n          }\r\n          return !isEmptyObject(changed) ? changed : false;\r\n        },\r\n\r\n        // Get the previous value of an attribute, recorded at the time the last\r\n        // `\"change\"` event was fired.\r\n        previous: function(attr) {\r\n          if (attr == null || !this._previousAttributes) return null;\r\n          return this._previousAttributes[attr];\r\n        },\r\n\r\n        // Get all of the attributes of the model at the time of the previous\r\n        // `\"change\"` event.\r\n        previousAttributes: function() {\r\n          return clone(this._previousAttributes);\r\n        },\r\n\r\n        // Create a new model with identical attributes to this one.\r\n        clone: function() {\r\n          return new this.constructor(this.attributes);\r\n        },\r\n\r\n        // A model is new if it has never been saved to the server, and lacks an id.\r\n        isNew: function() {\r\n          return !this.has(this.idAttribute);\r\n        },\r\n\r\n        // Check if the model is currently in a valid state.\r\n        isValid: function(options) {\r\n          return this._validate({}, mixin({}, options, {validate: true}));\r\n        },\r\n\r\n        // Run validation against the next complete set of model attributes,\r\n        // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\r\n        _validate: function(attrs, options) {\r\n          if (!options.validate || !this.validate) return true;\r\n          attrs = mixin({}, this.attributes, attrs);\r\n          var error = this.validationError = this.validate(attrs, options) || null;\r\n          if (!error) return true;\r\n          this.trigger('invalid', this, error, mixin(options, {validationError: error}));\r\n          return false;\r\n        }\r\n    });\r\n\r\n\treturn Stateful;\r\n});\ndefine('skylark-langx-topic/topic',[\r\n\t\"skylark-langx-ns\",\r\n\t\"skylark-langx-emitter/Evented\"\r\n],function(skylark,Evented){\r\n\tvar hub = new Evented();\r\n\r\n\treturn skylark.attach(\"langx.topic\",{\r\n\t    publish: function(name, arg1,argn) {\r\n\t        var data = [].slice.call(arguments, 1);\r\n\r\n\t        return hub.trigger({\r\n\t            type : name,\r\n\t            data : data\r\n\t        });\r\n\t    },\r\n\r\n        subscribe: function(name, listener,ctx) {\r\n        \tvar handler = function(e){\r\n                listener.apply(ctx,e.data);\r\n            };\r\n            hub.on(name, handler);\r\n            return {\r\n            \tremove : function(){\r\n            \t\thub.off(name,handler);\r\n            \t}\r\n            }\r\n\r\n        }\r\n\r\n\t});\r\n});\ndefine('skylark-langx-topic/main',[\r\n\t\"./topic\"\r\n],function(topic){\r\n\treturn topic;\r\n});\ndefine('skylark-langx-topic', ['skylark-langx-topic/main'], function (main) { return main; });\n\ndefine('skylark-langx/topic',[\r\n\t\"skylark-langx-topic\"\r\n],function(topic){\r\n\treturn topic;\r\n});\ndefine('skylark-langx/types',[\r\n    \"skylark-langx-types\"\r\n],function(types){\r\n    return types;\r\n});\ndefine('skylark-langx/langx',[\r\n    \"./skylark\",\r\n    \"./arrays\",\r\n    \"./ArrayStore\",\r\n    \"./aspect\",\r\n    \"./async\",\r\n    \"./datetimes\",\r\n    \"./Deferred\",\r\n    \"./Emitter\",\r\n    \"./Evented\",\r\n    \"./funcs\",\r\n    \"./hoster\",\r\n    \"./klass\",\r\n    \"./numbers\",\r\n    \"./objects\",\r\n    \"./Stateful\",\r\n    \"./strings\",\r\n    \"./topic\",\r\n    \"./types\"\r\n], function(skylark,arrays,ArrayStore,aspect,async,datetimes,Deferred,Emitter,Evented,funcs,hoster,klass,numbers,objects,Stateful,strings,topic,types) {\r\n    \"use strict\";\r\n    var toString = {}.toString,\r\n        concat = Array.prototype.concat,\r\n        indexOf = Array.prototype.indexOf,\r\n        slice = Array.prototype.slice,\r\n        filter = Array.prototype.filter,\r\n        mixin = objects.mixin,\r\n        safeMixin = objects.safeMixin,\r\n        isFunction = types.isFunction;\r\n\r\n\r\n    function funcArg(context, arg, idx, payload) {\r\n        return isFunction(arg) ? arg.call(context, idx, payload) : arg;\r\n    }\r\n\r\n    function getQueryParams(url) {\r\n        var url = url || window.location.href,\r\n            segs = url.split(\"?\"),\r\n            params = {};\r\n\r\n        if (segs.length > 1) {\r\n            segs[1].split(\"&\").forEach(function(queryParam) {\r\n                var nv = queryParam.split('=');\r\n                params[nv[0]] = nv[1];\r\n            });\r\n        }\r\n        return params;\r\n    }\r\n\r\n\r\n    function toPixel(value) {\r\n        // style values can be floats, client code may want\r\n        // to round for integer pixels.\r\n        return parseFloat(value) || 0;\r\n    }\r\n\r\n\r\n    var _uid = 1;\r\n\r\n    function uid(obj) {\r\n        return obj._uid || (obj._uid = _uid++);\r\n    }\r\n\r\n    function langx() {\r\n        return langx;\r\n    }\r\n\r\n    mixin(langx, {\r\n        createEvent : Emitter.createEvent,\r\n\r\n        funcArg: funcArg,\r\n\r\n        getQueryParams: getQueryParams,\r\n\r\n        toPixel: toPixel,\r\n\r\n        uid: uid,\r\n\r\n        URL: typeof window !== \"undefined\" ? window.URL || window.webkitURL : null\r\n\r\n    });\r\n\r\n\r\n    mixin(langx, arrays,aspect,datetimes,funcs,numbers,objects,strings,types,{\r\n        ArrayStore : ArrayStore,\r\n\r\n        async : async,\r\n        \r\n        Deferred: Deferred,\r\n\r\n        Emitter: Emitter,\r\n\r\n        Evented: Evented,\r\n\r\n        hoster : hoster,\r\n\r\n        klass : klass,\r\n       \r\n        Stateful: Stateful,\r\n\r\n        topic : topic\r\n    });\r\n\r\n    return skylark.langx = langx;\r\n});\ndefine('skylark-domx-browser/browser',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\"\r\n], function(skylark,langx) {\r\n    \"use strict\";\r\n\r\n    var browser = langx.hoster.browser;\r\n \r\n    var checkedCssProperties = {\r\n            \"transitionproperty\": \"TransitionProperty\",\r\n        },\r\n        transEndEventNames = {\r\n          WebkitTransition : 'webkitTransitionEnd',\r\n          MozTransition    : 'transitionend',\r\n          OTransition      : 'oTransitionEnd otransitionend',\r\n          transition       : 'transitionend'\r\n        },\r\n        transEndEventName = null;\r\n\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n                          testEl.mozMatchesSelector ||\r\n                          testEl.oMatchesSelector ||\r\n                          testEl.matchesSelector,\r\n\r\n        requestFullScreen = testEl.requestFullscreen || \r\n                            testEl.webkitRequestFullscreen || \r\n                            testEl.mozRequestFullScreen || \r\n                            testEl.msRequestFullscreen,\r\n\r\n        exitFullScreen =  document.exitFullscreen ||\r\n                          document.webkitCancelFullScreen ||\r\n                          document.mozCancelFullScreen ||\r\n                          document.msExitFullscreen,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n            if (transEndEventNames[name]) {\r\n              transEndEventName = transEndEventNames[name];\r\n            }\r\n        }\r\n    }\r\n\r\n    if (!transEndEventName) {\r\n        if (testStyle[\"transition\"] !== undefined) {\r\n            transEndEventName = transEndEventNames[\"transition\"];\r\n        }\r\n    }\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        isIE : !!/msie/i.exec( window.navigator.userAgent ),\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        requestFullScreen : requestFullScreen,\r\n\r\n        exitFullscreen : requestFullScreen,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {\r\n\r\n        }\r\n\r\n    });\r\n\r\n    if  (transEndEventName) {\r\n        browser.support.transition = {\r\n            end : transEndEventName\r\n        };\r\n    }\r\n\r\n    testEl = null;\r\n\r\n    return skylark.attach(\"domx.browser\",browser);\r\n});\r\n\ndefine('skylark-domx-browser/main',[\r\n\t\"./browser\"\r\n],function(browser){\r\n\treturn browser;\r\n});\ndefine('skylark-domx-browser', ['skylark-domx-browser/main'], function (main) { return main; });\n\ndefine('skylark-domx-noder/noder',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\"\r\n], function(skylark, langx, browser) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n\r\n    function activeElement(doc) {\r\n        doc = doc || document;\r\n        var el;\r\n\r\n        // Support: IE 9 only\r\n        // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\r\n        try {\r\n            el = doc.activeElement;\r\n        } catch ( error ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 9 - 11 only\r\n        // IE may return null instead of an element\r\n        // Interestingly, this only seems to occur when NOT in an iframe\r\n        if ( !el ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 11 only\r\n        // IE11 returns a seemingly empty object in some cases when accessing\r\n        // document.activeElement from an <iframe>\r\n        if ( !el.nodeName ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        return el;\r\n    };\r\n\r\n    function enhancePlaceContent(placing,node) {\r\n        if (langx.isFunction(placing)) {\r\n            return placing.apply(node,[]);\r\n        }\r\n        if (langx.isArrayLike(placing)) {\r\n            var neddsFlattern;\r\n            for (var i=0;i<placing.length;i++) {\r\n                if (langx.isFunction(placing[i])) {\r\n                    placing[i] = placing[i].apply(node,[]);\r\n                    if (langx.isArrayLike(placing[i])) {\r\n                        neddsFlattern = true;\r\n                    }\r\n                }\r\n            }\r\n            if (neddsFlattern) {\r\n                placing = langx.flatten(placing);\r\n            }\r\n        }\r\n        return placing;\r\n    }\r\n    function after(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Get the children of the specified node, including text and comment nodes.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    /*   \r\n     * Create a element and set attributes on it.\r\n     * @param {HTMLElement} tag\r\n     * @param {props} props\r\n     * @param } parent\r\n     */\r\n    function createElement(tag, props, parent) {\r\n        var node = document.createElement(tag);\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent, node);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    /*   \r\n     * Create a DocumentFragment from the HTML fragment.\r\n     * @param {String} html\r\n     */\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = \"\" + html;\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    /*   \r\n     * Create a deep copy of the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {Boolean} deep\r\n     */\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node .\r\n     * @param {String} node\r\n     * @param {Node} child\r\n     */\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    /*   \r\n     * Create a new Text node.\r\n     * @param {String} text\r\n     * @param {Node} child\r\n     */\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    /*   \r\n     * Get the current document object.\r\n     */\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    /*   \r\n     * Remove all child nodes of the set of matched elements from the DOM.\r\n     * @param {Object} node\r\n     */\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    var fulledEl = null;\r\n\r\n    function fullScreen(el) {\r\n        if (el === false) {\r\n            browser.exitFullScreen.apply(document);\r\n        } else if (el) {\r\n            browser.requestFullScreen.apply(el);\r\n            fulledEl = el;\r\n        } else {\r\n            return (\r\n                document.fullscreenElement ||\r\n                document.webkitFullscreenElement ||\r\n                document.mozFullScreenElement ||\r\n                document.msFullscreenElement\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    // Selectors\r\n    function focusable( element, hasTabindex ) {\r\n        var map, mapName, img, focusableIfVisible, fieldset,\r\n            nodeName = element.nodeName.toLowerCase();\r\n\r\n        if ( \"area\" === nodeName ) {\r\n            map = element.parentNode;\r\n            mapName = map.name;\r\n            if ( !element.href || !mapName || map.nodeName.toLowerCase() !== \"map\" ) {\r\n                return false;\r\n            }\r\n            img = $( \"img[usemap='#\" + mapName + \"']\" );\r\n            return img.length > 0 && img.is( \":visible\" );\r\n        }\r\n\r\n        if ( /^(input|select|textarea|button|object)$/.test( nodeName ) ) {\r\n            focusableIfVisible = !element.disabled;\r\n\r\n            if ( focusableIfVisible ) {\r\n\r\n                // Form controls within a disabled fieldset are disabled.\r\n                // However, controls within the fieldset's legend do not get disabled.\r\n                // Since controls generally aren't placed inside legends, we skip\r\n                // this portion of the check.\r\n                fieldset = $( element ).closest( \"fieldset\" )[ 0 ];\r\n                if ( fieldset ) {\r\n                    focusableIfVisible = !fieldset.disabled;\r\n                }\r\n            }\r\n        } else if ( \"a\" === nodeName ) {\r\n            focusableIfVisible = element.href || hasTabindex;\r\n        } else {\r\n            focusableIfVisible = hasTabindex;\r\n        }\r\n\r\n        return focusableIfVisible && $( element ).is( \":visible\" ) && visible( $( element ) );\r\n    };\r\n\r\n\r\n   var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi;\r\n \r\n    /*   \r\n     * Get the HTML contents of the first element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} html\r\n     */\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html)) {\r\n                html = html.replace( rxhtmlTag, \"<$1></$2>\" );\r\n            }\r\n            if (langx.isString(html) || langx.isNumber(html)) {               \r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isChildOf(node, parent, directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a document.\r\n     * @param {Node} node\r\n     */\r\n    function isDocument(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is in the document\r\n     * @param {Node} node\r\n     */\r\n    function isInDocument(node) {\r\n      return (node === document.body) ? true : document.body.contains(node);\r\n    }        \r\n\r\n    var blockNodes = [\"div\", \"p\", \"ul\", \"ol\", \"li\", \"blockquote\", \"hr\", \"pre\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"table\"];\r\n\r\n    function isBlockNode(node) {\r\n        if (!node || node.nodeType === 3) {\r\n          return false;\r\n        }\r\n        return new RegExp(\"^(\" + (blockNodes.join('|')) + \")$\").test(node.nodeName.toLowerCase());\r\n    }\r\n\r\n\r\n    /*   \r\n     * Get the owner document object for the specified element.\r\n     * @param {Node} elm\r\n     */\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return doc.defaultView || doc.parentWindow;\r\n    }\r\n\r\n    /*   \r\n     * insert one or more nodes as the first children of the specified node.\r\n     * @param {Node} node\r\n     * @param {Node or ArrayLike} placing\r\n     * @param {Boolean Optional} copyByClone\r\n     */\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && document.defaultView.getComputedStyle(parent).position == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    /*   \r\n     * Remove the set of matched elements from the DOM.\r\n     * @param {Node} node\r\n     */\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n                node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\", e);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function removeChild(node,children) {\r\n        if (!langx.isArrayLike(children)) {\r\n            children = [children];\r\n        }\r\n        for (var i=0;i<children.length;i++) {\r\n            node.removeChild(children[i]);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollParent( elm, includeHidden ) {\r\n        var position = document.defaultView.getComputedStyle(elm).position,\r\n            excludeStaticParent = position === \"absolute\",\r\n            overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n            scrollParent = this.parents().filter( function() {\r\n                var parent = $( this );\r\n                if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                    return false;\r\n                }\r\n                return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                    parent.css( \"overflow-x\" ) );\r\n            } ).eq( 0 );\r\n\r\n        return position === \"fixed\" || !scrollParent.length ?\r\n            $( this[ 0 ].ownerDocument || document ) :\r\n            scrollParent;\r\n    };\r\n\r\n\r\n    function reflow(elm) {\r\n        if (el == null) {\r\n          elm = document;\r\n        }\r\n        elm.offsetHeight;\r\n\r\n        return this;      \r\n    }\r\n\r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {Node} node\r\n     * @param {Node} oldNode\r\n     */\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * traverse the specified node and its descendants, perform the callback function on each\r\n     * @param {Node} node\r\n     * @param {Function} fn\r\n     */\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} node\r\n     */\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around each element in the set of matched elements.\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around the content of each element in the set of matched\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Remove the parents of the set of matched elements from the DOM, leaving the matched\r\n     * @param {Node} node\r\n     */\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        active  : activeElement,\r\n\r\n        blur : function(el) {\r\n            el.blur();\r\n        },\r\n\r\n        body: function() {\r\n            return document.body;\r\n        },\r\n\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        fullScreen: fullScreen,\r\n\r\n        focusable: focusable,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDocument: isDocument,\r\n\r\n        isInDocument: isInDocument,\r\n\r\n        isWindow: langx.isWindow,\r\n\r\n        nodeName : nodeName,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow: ownerWindow,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        reflow: reflow,\r\n\r\n        remove: remove,\r\n\r\n        removeChild : removeChild,\r\n\r\n        replace: replace,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.attach(\"domx.noder\" , noder);\r\n});\ndefine('skylark-domx-noder/main',[\r\n\t\"./noder\"\r\n],function(noder){\r\n\treturn noder;\r\n});\ndefine('skylark-domx-noder', ['skylark-domx-noder/main'], function (main) { return main; });\n\ndefine('skylark-domx-finder/finder',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-noder\"\r\n], function(skylark, langx, browser, noder) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        rinputs = /^(?:input|select|textarea|button)$/i,\r\n        rheader = /^h\\d$/i,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    var pseudos = local.pseudos = {\r\n        // custom pseudos\r\n        \"button\": function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === \"button\" || name === \"button\";\r\n        },\r\n\r\n        'checked': function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        'contains': function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        'eq': function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'even': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 0;\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        'focusable': function( elm ) {\r\n            return noder.focusable(elm, elm.tabindex != null );\r\n        },\r\n\r\n        'first': function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        'gt': function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        'has': function(elm, idx, nodes, sel) {\r\n            return find(elm, sel);\r\n        },\r\n\r\n        // Element/input types\r\n        \"header\": function(elem) {\r\n            return rheader.test(elem.nodeName);\r\n        },\r\n\r\n        'hidden': function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        \"input\": function(elem) {\r\n            return rinputs.test(elem.nodeName);\r\n        },\r\n\r\n        'last': function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        'lt': function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        'not': function(elm, idx, nodes, sel) {\r\n            return !matches(elm, sel);\r\n        },\r\n\r\n        'odd': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 1;\r\n        },\r\n\r\n        /*   \r\n         * Get the parent of each element in the current set of matched elements.\r\n         * @param {Object} elm\r\n         */\r\n        'parent': function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        'selected': function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        'tabbable': function(elm) {\r\n            var tabIndex = elm.tabindex,\r\n                hasTabindex = tabIndex != null;\r\n            return ( !hasTabindex || tabIndex >= 0 ) && noder.focusable( element, hasTabindex );\r\n        },\r\n\r\n        'text': function(elm) {\r\n            return elm.type === \"text\";\r\n        },\r\n\r\n        'visible': function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        }\r\n    };\r\n\r\n    [\"first\", \"eq\", \"last\"].forEach(function(item) {\r\n        pseudos[item].isArrayFilter = true;\r\n    });\r\n\r\n\r\n\r\n    pseudos[\"nth\"] = pseudos[\"eq\"];\r\n\r\n    function createInputPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === type;\r\n        };\r\n    }\r\n\r\n    function createButtonPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return (name === \"input\" || name === \"button\") && elem.type === type;\r\n        };\r\n    }\r\n\r\n    // Add button/input type pseudos\r\n    for (i in {\r\n        radio: true,\r\n        checkbox: true,\r\n        file: true,\r\n        password: true,\r\n        image: true\r\n    }) {\r\n        pseudos[i] = createInputPseudo(i);\r\n    }\r\n    for (i in {\r\n        submit: true,\r\n        reset: true\r\n    }) {\r\n        pseudos[i] = createButtonPseudo(i);\r\n    }\r\n\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value) + \"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            if (tag !== \"*\") {\r\n                nativeSelector = tag.toUpperCase() + nativeSelector;\r\n            }\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes, arrayFilte) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos,\r\n\r\n            i, part, cls, pseudo;\r\n\r\n        if (!arrayFilte) {\r\n            if (tag = cond.tag) {\r\n                var nodeName = node.nodeName.toUpperCase();\r\n                if (tag == '*') {\r\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n                } else {\r\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n                }\r\n            }\r\n\r\n            if (id = cond.id) {\r\n                if (node.getAttribute('id') != id) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (classes = cond.classes) {\r\n                for (i = classes.length; i--;) {\r\n                    cls = node.getAttribute('class');\r\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\r\n                }\r\n            }\r\n\r\n            if (attributes = cond.attributes) {\r\n                for (i = attributes.length; i--;) {\r\n                    part = attributes[i];\r\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\r\n                        if (!pseudo(node, idx, nodes, part.value)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            parsed = selector;\r\n        }\r\n\r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i,\r\n            currentExpression;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node, exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    local.filterSingle = function(nodes, exp) {\r\n        var matchs = filter.call(nodes, function(node, idx) {\r\n            return local.check(node, exp, idx, nodes, false);\r\n        });\r\n\r\n        matchs = filter.call(matchs, function(node, idx) {\r\n            return local.check(node, exp, idx, matchs, true);\r\n        });\r\n        return matchs;\r\n    };\r\n\r\n    local.filter = function(nodes, selector) {\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            return local.filterSingle(nodes, selector);\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            i,\r\n            currentExpression,\r\n            ret = [];\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n\r\n                var matchs = local.filterSingle(nodes, exp);\r\n\r\n                ret = langx.uniq(ret.concat(matchs));\r\n            } else {\r\n                throw new Error(\"not supported selector:\" + selector);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n\r\n    };\r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, false)\r\n                        });\r\n\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, true)\r\n                        });\r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n    /*\r\n     * Get the nearest ancestor of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the ancestors of the specitied element , optionally filtered by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestors(node, selector, root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while ((node = node.parentNode) && (node.nodeType !== 9)) {\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (langx.isArrayLike(root)) {\r\n                    if (langx.inArray(node,root)>-1) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n            ret.push(node); // TODO\r\n        }\r\n\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Returns a element by its ID.\r\n     * @param {string} id\r\n     */\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    /*\r\n     * Get the children of the specified element , optionally filtered by a selector.\r\n     * @param {string} node\r\n     * @param {String optionlly} selector\r\n     */\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    /*\r\n     * Get the decendant of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the nearest decendent of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the descendants of each element in the current set of matched elements, filtered by a selector, jQuery object, or element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function find(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        if (matches(elm, selector)) {\r\n            return elm;\r\n        } else {\r\n            return descendant(elm, selector);\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the findAll of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function findAll(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        return descendants(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the first child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String} first\r\n     */\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the last child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String } last\r\n     */\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Check the specified element against a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm, selector) > -1;\r\n        } else if (langx.isPlainObject(selector)) {\r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Get the nearest next sibing of the specitied element , optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional} adjacent\r\n     */\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the next siblings of the specified element , optional filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Get the parent element of the specified element. if a selector is provided, it retrieves the parent element only if it matches that selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get hte nearest previous sibling of the specified element ,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional } adjacent\r\n     */\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get all preceding siblings of each element in the set of matched elements, optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Selects all sibling elements that follow after the “prev” element, have the same parent, and match the filtering “siblings” selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling,\r\n\r\n        previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return skylark.attach(\"domx.finder\", finder);\r\n});\ndefine('skylark-domx-finder/main',[\r\n\t\"./finder\"\r\n],function(finder){\r\n\r\n\treturn finder;\r\n});\ndefine('skylark-domx-finder', ['skylark-domx-finder/main'], function (main) { return main; });\n\ndefine('skylark-domx-query/query',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-finder\"\r\n], function(skylark, langx, noder, finder) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        indexOf = Array.prototype.indexOf,\r\n        sort = Array.prototype.sort,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_node_operation(func, context, oldValueFunc) {\r\n        return function(html) {\r\n            var argType, nodes = langx.map(arguments, function(arg) {\r\n                argType = type(arg)\r\n                return argType == \"function\" || argType == \"object\" || argType == \"array\" || arg == null ?\r\n                    arg : noder.createFragment(arg)\r\n            });\r\n            if (nodes.length < 1) {\r\n                return this\r\n            }\r\n            this.each(function(idx) {\r\n                func.apply(context, [this, nodes, idx > 0]);\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = langx.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return query(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                //if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                //}\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            //if (selector === undefined) { //TODO : needs confirm?\r\n            //    selector = util;\r\n            //    util = undefined;\r\n            //}\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) { // TODO\r\n                //if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                //}\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx,node) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        if (langx.isString(context)) {\r\n                            context = finder.find(context);\r\n                        }\r\n\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (selector !== window && isArrayLike(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    });\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                $.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n            length : 0,\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            forEach: function() {\r\n                return forEach.apply(this,arguments);\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            indexOf: function() {\r\n                return indexOf.apply(this,arguments);\r\n            },\r\n\r\n            sort : function() {\r\n                return sort.apply(this,arguments);\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            //remove: wrapper_every_act(noder.remove, noder),\r\n            remove : function(selector) {\r\n                if (selector) {\r\n                    return this.find(selector).remove();\r\n                }\r\n                this.each(function(i,node){\r\n                    noder.remove(node);\r\n                });\r\n                return this;\r\n            },\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                if (this.length > 0) {\r\n                    var self = this;\r\n                    if (langx.isString(selector)) {\r\n                        return some.call(self,function(elem) {\r\n                            return finder.matches(elem, selector);\r\n                        });\r\n                    } else if (langx.isArrayLike(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return langx.inArray(elem, selector) > -1;\r\n                        });\r\n                    } else if (langx.isHtmlNode(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return elem ==  selector;\r\n                        });\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            \r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx,node) {\r\n                        if (!selector.call(this, idx,node)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            html: wrapper_value(noder.html, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            pushStack : function(elms) {\r\n                var ret = $(elms);\r\n                ret.prevObject = this;\r\n                return ret;\r\n            },\r\n            \r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(structure) {\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index,node) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index,node) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n            },\r\n\r\n            wrapAll: function(wrappingElement) {\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n            },\r\n\r\n            wrapInner: function(wrappingElement) {\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index,node) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index,node) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSiblings, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            }\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n        $.fn.hover = function(fnOver, fnOut) {\r\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n        };\r\n\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n\r\n        langx.each( {\r\n            appendTo: \"append\",\r\n            prependTo: \"prepend\",\r\n            insertBefore: \"before\",\r\n            insertAfter: \"after\",\r\n            replaceAll: \"replaceWith\"\r\n        }, function( name, original ) {\r\n            $.fn[ name ] = function( selector ) {\r\n                var elems,\r\n                    ret = [],\r\n                    insert = $( selector ),\r\n                    last = insert.length - 1,\r\n                    i = 0;\r\n\r\n                for ( ; i <= last; i++ ) {\r\n                    elems = i === last ? this : this.clone( true );\r\n                    $( insert[ i ] )[ original ]( elems );\r\n\r\n                    // Support: Android <=4.0 only, PhantomJS 1 only\r\n                    // .get() because push.apply(_, arraylike) throws on ancient WebKit\r\n                    push.apply( ret, elems.get() );\r\n                }\r\n\r\n                return this.pushStack( ret );\r\n            };\r\n        } );\r\n\r\n/*\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceAll = function(selector) {\r\n            $(selector).replaceWith(this);\r\n            return this;\r\n        };\r\n*/\r\n        return $;\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.scrollParent = function( includeHidden ) {\r\n            var position = this.css( \"position\" ),\r\n                excludeStaticParent = position === \"absolute\",\r\n                overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n                scrollParent = this.parents().filter( function() {\r\n                    var parent = $( this );\r\n                    if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                        return false;\r\n                    }\r\n                    return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                        parent.css( \"overflow-x\" ) );\r\n                } ).eq( 0 );\r\n\r\n            return position === \"fixed\" || !scrollParent.length ?\r\n                $( this[ 0 ].ownerDocument || document ) :\r\n                scrollParent;\r\n        };\r\n\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings,prev,prevAll,next,nextAll'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n\r\n\r\n        $.fn.disableSelection = ( function() {\r\n            var eventType = \"onselectstart\" in document.createElement( \"div\" ) ?\r\n                \"selectstart\" :\r\n                \"mousedown\";\r\n\r\n            return function() {\r\n                return this.on( eventType + \".ui-disableSelection\", function( event ) {\r\n                    event.preventDefault();\r\n                } );\r\n            };\r\n        } )();\r\n\r\n        $.fn.enableSelection = function() {\r\n            return this.off( \".ui-disableSelection\" );\r\n        };\r\n\r\n        $.fn.reflow = function() {\r\n            return noder.flow(this[0]);\r\n        };\r\n\r\n        $.fn.isBlockNode = function() {\r\n            return noder.isBlockNode(this[0]);\r\n        };\r\n       \r\n\r\n    })(query);\r\n\r\n    query.fn.plugin = function(name,options) {\r\n        var args = slice.call( arguments, 1 ),\r\n            self = this,\r\n            returnValue = this;\r\n\r\n        this.each(function(){\r\n            returnValue = plugins.instantiate.apply(self,[this,name].concat(args));\r\n        });\r\n        return returnValue;\r\n    };\r\n\r\n\r\n    query.wraps = {\r\n        wrapper_node_operation,\r\n        wrapper_map,\r\n        wrapper_value,\r\n        wrapper_selector,\r\n        wrapper_some_chk,\r\n        wrapper_selector_until,\r\n        wrapper_every_act_firstArgFunc,\r\n        wrapper_every_act,\r\n        wrapper_name_value\r\n\r\n    };\r\n\r\n    return skylark.attach(\"domx.query\", query);\r\n\r\n});\ndefine('skylark-domx-query/main',[\r\n\t\"./query\"\r\n],function(query){\r\n\treturn query;\r\n});\ndefine('skylark-domx-query', ['skylark-domx-query/main'], function (main) { return main; });\n\ndefine('skylark-domx-data/data',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-noder\"\r\n], function(skylark, langx, finder,noder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n\r\n    // Strip and collapse whitespace according to HTML spec\r\n    function stripAndCollapse( value ) {\r\n      var tokens = value.match( /[^\\x20\\t\\r\\n\\f]+/g ) || [];\r\n      return tokens.join( \" \" );\r\n    }\r\n\r\n\r\n    var valHooks = {\r\n      option: {\r\n        get: function( elem ) {\r\n          var val = elem.getAttribute( \"value\" );\r\n          return val != null ?  val :  stripAndCollapse(text( elem ) );\r\n        }\r\n      },\r\n      select: {\r\n        get: function( elem ) {\r\n          var value, option, i,\r\n            options = elem.options,\r\n            index = elem.selectedIndex,\r\n            one = elem.type === \"select-one\",\r\n            values = one ? null : [],\r\n            max = one ? index + 1 : options.length;\r\n\r\n          if ( index < 0 ) {\r\n            i = max;\r\n\r\n          } else {\r\n            i = one ? index : 0;\r\n          }\r\n\r\n          // Loop through all the selected options\r\n          for ( ; i < max; i++ ) {\r\n            option = options[ i ];\r\n\r\n            if ( option.selected &&\r\n\r\n                // Don't return options that are disabled or in a disabled optgroup\r\n                !option.disabled &&\r\n                ( !option.parentNode.disabled ||\r\n                  !noder.nodeName( option.parentNode, \"optgroup\" ) ) ) {\r\n\r\n              // Get the specific value for the option\r\n              value = val(option);\r\n\r\n              // We don't need an array for one selects\r\n              if ( one ) {\r\n                return value;\r\n              }\r\n\r\n              // Multi-Selects return an array\r\n              values.push( value );\r\n            }\r\n          }\r\n\r\n          return values;\r\n        },\r\n\r\n        set: function( elem, value ) {\r\n          var optionSet, option,\r\n            options = elem.options,\r\n            values = langx.makeArray( value ),\r\n            i = options.length;\r\n\r\n          while ( i-- ) {\r\n            option = options[ i ];\r\n\r\n            /* eslint-disable no-cond-assign */\r\n\r\n            if ( option.selected =\r\n              langx.inArray( valHooks.option.get( option ), values ) > -1\r\n            ) {\r\n              optionSet = true;\r\n            }\r\n\r\n            /* eslint-enable no-cond-assign */\r\n          }\r\n\r\n          // Force browsers to behave consistently when non-matching value is set\r\n          if ( !optionSet ) {\r\n            elem.selectedIndex = -1;\r\n          }\r\n          return values;\r\n        }\r\n      }\r\n    };\r\n\r\n\r\n    // Radios and checkboxes getter/setter\r\n    langx.each( [ \"radio\", \"checkbox\" ], function() {\r\n      valHooks[ this ] = {\r\n        set: function( elem, value ) {\r\n          if ( langx.isArray( value ) ) {\r\n            return ( elem.checked = langx.inArray( val(elem), value ) > -1 );\r\n          }\r\n        }\r\n      };\r\n    });\r\n\r\n\r\n\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function aria(elm, name, value) {\r\n        return this.attr(elm, \"aria-\" + name, value);\r\n    }\r\n\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                if (elm.hasAttribute && elm.hasAttribute(name)) {\r\n                    return elm.getAttribute(name);\r\n                }\r\n            }\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    /*\r\n     *  Read all \"data-*\" attributes from a node\r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    /*\r\n     * xxx\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    } \r\n    /*\r\n     * Remove from the element all items that have not yet been run. \r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function cleanData(elm) {\r\n        if (elm[\"_$_store\"]) {\r\n            delete elm[\"_$_store\"];\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Remove a previously-stored piece of data. \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function removeData(elm, names) {\r\n        if (names) {\r\n            if (langx.isString(names)) {\r\n                names = names.split(/\\s+/);\r\n            }\r\n            var store = _store(elm, true);\r\n            names.forEach(function(name) {\r\n                delete store[name];\r\n            });            \r\n        } else {\r\n            cleanData(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * xxx \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    /*\r\n     * Get or set the value of an property for the specified element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * remove Attributes  \r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n\r\n    /*\r\n     * Remove the value of a property for the first element in the set of matched elements or set one or more properties for every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Get the combined text contents of each element in the set of matched elements, including their descendants, or set the text contents of the matched elements.  \r\n     * @param {Object} elm  \r\n     * @param {String} txt\r\n     */\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Get the current value of the first element in the set of matched elements or set the value of every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} value\r\n     */\r\n    function val(elm, value) {\r\n        var hooks = valHooks[ elm.type ] || valHooks[ elm.nodeName.toLowerCase() ];\r\n        if (value === undefined) {\r\n/*\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                if (/input|textarea/i.test(elm.tagName)) {\r\n                  return elm.value;\r\n                }\r\n                return text(elm);\r\n            }\r\n*/\r\n\r\n          if ( hooks &&  \"get\" in hooks &&  ( ret = hooks.get( elm, \"value\" ) ) !== undefined ) {\r\n            return ret;\r\n          }\r\n\r\n          ret = elm.value;\r\n\r\n          // Handle most common string cases\r\n          if ( typeof ret === \"string\" ) {\r\n            return ret.replace( /\\r/g, \"\" );\r\n          }\r\n\r\n          // Handle cases where value is null/undef or number\r\n          return ret == null ? \"\" : ret;\r\n\r\n        } else {\r\n/*          \r\n            if (/input|textarea/i.test(elm.tagName)) {\r\n              elm.value = value;\r\n            } else {\r\n              text(elm,value);\r\n            }\r\n            return this;\r\n*/\r\n          // Treat null/undefined as \"\"; convert numbers to string\r\n          if ( value == null ) {\r\n            value = \"\";\r\n\r\n          } else if ( typeof value === \"number\" ) {\r\n            value += \"\";\r\n\r\n          } else if ( langx.isArray( value ) ) {\r\n            value = langx.map( value, function( value1 ) {\r\n              return value1 == null ? \"\" : value1 + \"\";\r\n            } );\r\n          }\r\n\r\n          // If set returns undefined, fall back to normal setting\r\n          if ( !hooks || !( \"set\" in hooks ) || hooks.set( elm, value, \"value\" ) === undefined ) {\r\n            elm.value = value;\r\n          }\r\n        }      \r\n    }\r\n\r\n\r\n    finder.pseudos.data = function( elem, i, match,dataName ) {\r\n        return !!data( elem, dataName || match[3]);\r\n    };\r\n   \r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        aria: aria,\r\n\r\n        attr: attr,\r\n\r\n        cleanData: cleanData,\r\n\r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val,\r\n\r\n        valHooks : valHooks\r\n    });\r\n\r\n    return skylark.attach(\"domx.data\", datax);\r\n});\ndefine('skylark-domx-velm/velm',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-query\"\r\n], function(skylark, langx, noder, finder, $) {\r\n    var map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n    /*\r\n     * VisualElement is a skylark class type wrapping a visule dom node,\r\n     * provides a number of prototype methods and supports chain calls.\r\n     */\r\n    var VisualElement = langx.klass({\r\n        klassName: \"VisualElement\",\r\n\r\n        \"_construct\": function(node) {\r\n            if (langx.isString(node)) {\r\n                if (node.charAt(0) === \"<\") {\r\n                    //html\r\n                    node = noder.createFragment(node)[0];\r\n                } else {\r\n                    // id\r\n                    node = document.getElementById(node);\r\n                }\r\n            }\r\n            this._elm = node;\r\n        }\r\n    });\r\n\r\n    VisualElement.prototype.$ = VisualElement.prototype.query = function(selector) {\r\n        return $(selector,this._elm);\r\n    };\r\n\r\n    VisualElement.prototype.elm = function() {\r\n        return this._elm;\r\n    };\r\n\r\n    /*\r\n     * the VisualElement object wrapping document.body\r\n     */\r\n    var root = new VisualElement(document.body),\r\n        velm = function(node) {\r\n            if (node) {\r\n                return new VisualElement(node);\r\n            } else {\r\n                return root;\r\n            }\r\n        };\r\n    /*\r\n     * Extend VisualElement prototype with wrapping the specified methods.\r\n     * @param {ArrayLike} fn\r\n     * @param {Object} context\r\n     */\r\n    function _delegator(fn, context) {\r\n        return function() {\r\n            var self = this,\r\n                elem = self._elm,\r\n                ret = fn.apply(context, [elem].concat(slice.call(arguments)));\r\n\r\n            if (ret) {\r\n                if (ret === context) {\r\n                    return self;\r\n                } else {\r\n                    if (ret instanceof HTMLElement) {\r\n                        ret = new VisualElement(ret);\r\n                    } else if (langx.isArrayLike(ret)) {\r\n                        ret = map.call(ret, function(el) {\r\n                            if (el instanceof HTMLElement) {\r\n                                return new VisualElement(el);\r\n                            } else {\r\n                                return el;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n    }\r\n\r\n    langx.mixin(velm, {\r\n        batch: function(nodes, action, args) {\r\n            nodes.forEach(function(node) {\r\n                var elm = (node instanceof VisualElement) ? node : velm(node);\r\n                elm[action].apply(elm, args);\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        root: new VisualElement(document.body),\r\n\r\n        VisualElement: VisualElement,\r\n\r\n        partial: function(name, fn) {\r\n            var props = {};\r\n\r\n            props[name] = fn;\r\n\r\n            VisualElement.partial(props);\r\n        },\r\n\r\n        delegate: function(names, context) {\r\n            var props = {};\r\n\r\n            names.forEach(function(name) {\r\n                props[name] = _delegator(context[name], context);\r\n            });\r\n\r\n            VisualElement.partial(props);\r\n        }\r\n    });\r\n\r\n    // from ./finder\r\n    velm.delegate([\r\n        \"ancestor\",\r\n        \"ancestors\",\r\n        \"children\",\r\n        \"descendant\",\r\n        \"find\",\r\n        \"findAll\",\r\n        \"firstChild\",\r\n        \"lastChild\",\r\n        \"matches\",\r\n        \"nextSibling\",\r\n        \"nextSiblings\",\r\n        \"parent\",\r\n        \"previousSibling\",\r\n        \"previousSiblings\",\r\n        \"siblings\"\r\n    ], finder);\r\n\r\n    /*\r\n     * find a dom element matched by the specified selector.\r\n     * @param {String} selector\r\n     */\r\n    velm.find = function(selector) {\r\n        if (selector === \"body\") {\r\n            return this.root;\r\n        } else {\r\n            return this.root.descendant(selector);\r\n        }\r\n    };\r\n\r\n\r\n    // from ./noder\r\n    velm.delegate([\r\n        \"after\",\r\n        \"append\",\r\n        \"before\",\r\n        \"clone\",\r\n        \"contains\",\r\n        \"contents\",\r\n        \"empty\",\r\n        \"html\",\r\n        \"isChildOf\",\r\n        \"isDocument\",\r\n        \"isInDocument\",\r\n        \"isWindow\",\r\n        \"ownerDoc\",\r\n        \"prepend\",\r\n        \"remove\",\r\n        \"removeChild\",\r\n        \"replace\",\r\n        \"reverse\",\r\n        \"throb\",\r\n        \"traverse\",\r\n        \"wrapper\",\r\n        \"wrapperInner\",\r\n        \"unwrap\"\r\n    ], noder);\r\n\r\n\r\n    return skylark.attach(\"domx.velm\", velm);\r\n});\ndefine('skylark-domx-velm/main',[\r\n\t\"./velm\"\r\n],function(velm){\r\n\treturn velm;\r\n});\ndefine('skylark-domx-velm', ['skylark-domx-velm/main'], function (main) { return main; });\n\ndefine('skylark-domx-data/main',[\r\n    \"./data\",\r\n    \"skylark-domx-velm\",\r\n    \"skylark-domx-query\"    \r\n],function(data,velm,$){\r\n    // from ./data\r\n    velm.delegate([\r\n        \"attr\",\r\n        \"data\",\r\n        \"prop\",\r\n        \"removeAttr\",\r\n        \"removeData\",\r\n        \"text\",\r\n        \"val\"\r\n    ], data);\r\n\r\n    $.fn.text = $.wraps.wrapper_value(data.text, data, data.text);\r\n\r\n    $.fn.attr = $.wraps.wrapper_name_value(data.attr, data, data.attr);\r\n\r\n    $.fn.removeAttr = $.wraps.wrapper_every_act(data.removeAttr, data);\r\n\r\n    $.fn.prop = $.wraps.wrapper_name_value(data.prop, data, data.prop);\r\n\r\n    $.fn.removeProp = $.wraps.wrapper_every_act(data.removeProp, data);\r\n\r\n    $.fn.data = $.wraps.wrapper_name_value(data.data, data, data.data);\r\n\r\n    $.fn.removeData = $.wraps.wrapper_every_act(data.removeData, data);\r\n\r\n    $.fn.val = $.wraps.wrapper_value(data.val, data, data.val);\r\n\r\n\r\n    return data;\r\n});\ndefine('skylark-domx-data', ['skylark-domx-data/main'], function (main) { return main; });\n\ndefine('skylark-domx-eventer/eventer',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-data\"\r\n], function(skylark, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n        var EventCtors = [\r\n                window[\"CustomEvent\"], // 0 default\r\n                window[\"CompositionEvent\"], // 1\r\n                window[\"DragEvent\"], // 2\r\n                window[\"Event\"], // 3\r\n                window[\"FocusEvent\"], // 4\r\n                window[\"KeyboardEvent\"], // 5\r\n                window[\"MessageEvent\"], // 6\r\n                window[\"MouseEvent\"], // 7\r\n                window[\"MouseScrollEvent\"], // 8\r\n                window[\"MouseWheelEvent\"], // 9\r\n                window[\"MutationEvent\"], // 10\r\n                window[\"ProgressEvent\"], // 11\r\n                window[\"TextEvent\"], // 12\r\n                window[\"TouchEvent\"], // 13\r\n                window[\"UIEvent\"], // 14\r\n                window[\"WheelEvent\"], // 15\r\n                window[\"ClipboardEvent\"] // 16\r\n            ],\r\n            NativeEvents = {\r\n                \"compositionstart\": 1, // CompositionEvent\r\n                \"compositionend\": 1, // CompositionEvent\r\n                \"compositionupdate\": 1, // CompositionEvent\r\n\r\n                \"beforecopy\": 16, // ClipboardEvent\r\n                \"beforecut\": 16, // ClipboardEvent\r\n                \"beforepaste\": 16, // ClipboardEvent\r\n                \"copy\": 16, // ClipboardEvent\r\n                \"cut\": 16, // ClipboardEvent\r\n                \"paste\": 16, // ClipboardEvent\r\n\r\n                \"drag\": 2, // DragEvent\r\n                \"dragend\": 2, // DragEvent\r\n                \"dragenter\": 2, // DragEvent\r\n                \"dragexit\": 2, // DragEvent\r\n                \"dragleave\": 2, // DragEvent\r\n                \"dragover\": 2, // DragEvent\r\n                \"dragstart\": 2, // DragEvent\r\n                \"drop\": 2, // DragEvent\r\n\r\n                \"abort\": 3, // Event\r\n                \"change\": 3, // Event\r\n                \"error\": 3, // Event\r\n                \"selectionchange\": 3, // Event\r\n                \"submit\": 3, // Event\r\n                \"reset\": 3, // Event\r\n\r\n                \"focus\": 4, // FocusEvent\r\n                \"blur\": 4, // FocusEvent\r\n                \"focusin\": 4, // FocusEvent\r\n                \"focusout\": 4, // FocusEvent\r\n\r\n                \"keydown\": 5, // KeyboardEvent\r\n                \"keypress\": 5, // KeyboardEvent\r\n                \"keyup\": 5, // KeyboardEvent\r\n\r\n                \"message\": 6, // MessageEvent\r\n\r\n                \"click\": 7, // MouseEvent\r\n                \"contextmenu\": 7, // MouseEvent\r\n                \"dblclick\": 7, // MouseEvent\r\n                \"mousedown\": 7, // MouseEvent\r\n                \"mouseup\": 7, // MouseEvent\r\n                \"mousemove\": 7, // MouseEvent\r\n                \"mouseover\": 7, // MouseEvent\r\n                \"mouseout\": 7, // MouseEvent\r\n                \"mouseenter\": 7, // MouseEvent\r\n                \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n                \"textInput\": 12, // TextEvent\r\n\r\n                \"touchstart\": 13, // TouchEvent\r\n                \"touchmove\": 13, // TouchEvent\r\n                \"touchend\": 13, // TouchEvent\r\n\r\n                \"load\": 14, // UIEvent\r\n                \"resize\": 14, // UIEvent\r\n                \"select\": 14, // UIEvent\r\n                \"scroll\": 14, // UIEvent\r\n                \"unload\": 14, // UIEvent,\r\n\r\n                \"wheel\": 15 // WheelEvent\r\n            };\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return EventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type || {};\r\n                type = props.type || \"\";\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(src, props) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: src\r\n            };\r\n        for (key in src) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && src[key] !== undefined) {\r\n                proxy[key] = src[key];\r\n            }\r\n        }\r\n        if (props) {\r\n            langx.mixin(proxy, props);\r\n        }\r\n        return compatible(proxy, src);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings, function(idx, binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns && options.ns.indexOf(ns) === -1) {\r\n                                return;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            var originalEvent = self._event;\r\n                            if (originalEvent in hover) {\r\n                                var related = e.relatedTarget;\r\n                                if (related && (related === match || noder.contains(match, related))) {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n                    /*\r\n                                        if (event in hover) {\r\n                                            var l = self._listener;\r\n                                            self._listener = function(e) {\r\n                                                var related = e.relatedTarget;\r\n                                                if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                                    return l.apply(this, arguments);\r\n                                                }\r\n                                            }\r\n                                        }\r\n                    */\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                if (event) {\r\n                    var listener = events[event];\r\n\r\n                    if (listener) {\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                } else {\r\n                    //remove all events\r\n                    for (event in events) {\r\n                        var listener = events[event];\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    /*   \r\n     * Remove an event handler for one or more events from the specified element.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional } selector\r\n     * @param {Function} callback\r\n     */\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach an event handler function for one or more events to the selected elements.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     * @param {Boolean　Optional} one\r\n     */\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach a handler to an event for the elements. The handler is executed at most once per \r\n     * @param {HTMLElement} elm  \r\n     * @param {String} event\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     */\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Prevents propagation and clobbers the default action of the passed event. The same as calling event.preventDefault() and event.stopPropagation(). \r\n     * @param {String} event\r\n     */\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Execute all handlers and behaviors attached to the matched elements for the given event  \r\n     * @param {String} evented\r\n     * @param {String} type\r\n     * @param {Array or PlainObject } args\r\n     */\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        var fn = (evented.dispatchEvent || evented.trigger);\r\n        if (fn) {\r\n            fn.call(evented, e);\r\n        } else {\r\n            console.warn(\"The evented parameter is not a eventable object\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n    /*   \r\n     * Specify a function to execute when the DOM is fully loaded.  \r\n     * @param {Function} callback\r\n     */\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            langx.defer(callback);\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"backspace\": 8,\r\n        \"comma\": 188,\r\n        \"delete\": 46,\r\n        \"down\": 40,\r\n        \"end\": 35,\r\n        \"enter\": 13,\r\n        \"escape\": 27,\r\n        \"home\": 36,\r\n        \"left\": 37,\r\n        \"page_down\": 34,\r\n        \"page_up\": 33,\r\n        \"period\": 190,\r\n        \"right\": 39,\r\n        \"space\": 32,\r\n        \"tab\": 9,\r\n        \"up\": 38\r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    if (browser.support.transition) {\r\n        specialEvents.transitionEnd = {\r\n//          handle: function (e) {\r\n//            if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)\r\n//          },\r\n          bindType: browser.support.transition.end,\r\n          delegateType: browser.support.transition.end\r\n        }        \r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        create: createEvent,\r\n\r\n        keys: keyCodeLookup,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special: specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    return skylark.attach(\"domx.eventer\",eventer);\r\n});\ndefine('skylark-domx-eventer/main',[\r\n    \"skylark-langx/langx\",\r\n    \"./eventer\",\r\n    \"skylark-domx-velm\",\r\n    \"skylark-domx-query\"        \r\n],function(langx,eventer,velm,$){\r\n\r\n    // from ./eventer\r\n    velm.delegate([\r\n        \"off\",\r\n        \"on\",\r\n        \"one\",\r\n        \"shortcuts\",\r\n        \"trigger\"\r\n    ], eventer);\r\n\r\n    // events\r\n    var events = [ 'keyUp', 'keyDown', 'mouseOver', 'mouseOut', 'click', 'dblClick', 'change' ];\r\n\r\n    events.forEach( function ( event ) {\r\n\r\n        var method = event;\r\n\r\n        velm.VisualElement.prototype[method ] = function ( callback ) {\r\n\r\n            this.on( event.toLowerCase(), callback);\r\n\r\n            return this;\r\n        };\r\n\r\n    });\r\n\r\n    $.fn.on = $.wraps.wrapper_every_act(eventer.on, eventer);\r\n\r\n    $.fn.off = $.wraps.wrapper_every_act(eventer.off, eventer);\r\n\r\n    $.fn.trigger = $.wraps.wrapper_every_act(eventer.trigger, eventer);\r\n\r\n    ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n        'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n        'change select keydown keypress keyup error transitionEnd').split(' ').forEach(function(event) {\r\n        $.fn[event] = function(data, callback) {\r\n            return (0 in arguments) ?\r\n                this.on(event, data, callback) :\r\n                this.trigger(event)\r\n        }\r\n    });\r\n\r\n    $.fn.one = function(event, selector, data, callback) {\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = null;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = null;\r\n        }\r\n\r\n        return this.on(event, selector, data, callback, 1)\r\n    }; \r\n\r\n    $.ready = eventer.ready;\r\n\r\n    return eventer;\r\n});\ndefine('skylark-domx-eventer', ['skylark-domx-eventer/main'], function (main) { return main; });\n\ndefine('skylark-domx-styler/styler',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\"\r\n], function(skylark, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} value\r\n     */\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n    function disabled(elm, value ) {\r\n        if (arguments.length < 2) {\r\n            return !!this.dom.disabled;\r\n        }\r\n\r\n        elm.disabled = value;\r\n\r\n        return this;\r\n    }\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getStyles(element).getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n    /*\r\n     * Display the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    /*\r\n     * Hide the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n\r\n    function getStyles( elem ) {\r\n\r\n        // Support: IE <=11 only, Firefox <=30 (#15098, #14150)\r\n        // IE throws on elements created in popups\r\n        // FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\r\n        var view = elem.ownerDocument.defaultView;\r\n\r\n        if ( !view || !view.opener ) {\r\n            view = window;\r\n        }\r\n\r\n        return view.getComputedStyle( elem);\r\n    }\r\n\r\n\r\n    /*\r\n     * Get the value of a computed style property for the first element in the set of matched elements or set one or more CSS properties for every matched element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} property\r\n     * @param {Any} value\r\n     */\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getStyles(elm)\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(dasherize(property))\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(dasherize(prop)))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Determine whether any of the matched elements are assigned the given class.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    /*\r\n     * Remove a single class, multiple classes, or all classes from each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm, \"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Add or remove one or more classes from the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     * @param {} when\r\n     */\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: false,\r\n        cssHooks: {\r\n\r\n        },\r\n\r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        disabled : disabled,        \r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return skylark.attach(\"domx.styler\", styler);\r\n});\ndefine('skylark-domx-styler/main',[\r\n\t\"./styler\",\r\n\t\"skylark-domx-velm\",\r\n\t\"skylark-domx-query\"\t\r\n],function(styler,velm,$){\r\n\t\r\n    // from ./styler\r\n    velm.delegate([\r\n        \"addClass\",\r\n        \"className\",\r\n        \"css\",\r\n        \"hasClass\",\r\n        \"hide\",\r\n        \"isInvisible\",\r\n        \"removeClass\",\r\n        \"show\",\r\n        \"toggleClass\"\r\n    ], styler);\r\n\r\n    // properties\r\n\r\n    var properties = [ 'position', 'left', 'top', 'right', 'bottom', 'width', 'height', 'border', 'borderLeft',\r\n    'borderTop', 'borderRight', 'borderBottom', 'borderColor', 'display', 'overflow', 'margin', 'marginLeft', 'marginTop', 'marginRight', 'marginBottom', 'padding', 'paddingLeft', 'paddingTop', 'paddingRight', 'paddingBottom', 'color',\r\n    'background', 'backgroundColor', 'opacity', 'fontSize', 'fontWeight', 'textAlign', 'textDecoration', 'textTransform', 'cursor', 'zIndex' ];\r\n\r\n    properties.forEach( function ( property ) {\r\n\r\n        var method = property;\r\n\r\n        velm.VisualElement.prototype[method ] = function (value) {\r\n\r\n            this.css( property, value );\r\n\r\n            return this;\r\n\r\n        };\r\n\r\n    });\r\n\r\n\r\n    $.fn.style = $.wraps.wrapper_name_value(styler.css, styler);\r\n\r\n    $.fn.css = $.wraps.wrapper_name_value(styler.css, styler);\r\n\r\n    //hasClass(name)\r\n    $.fn.hasClass = $.wraps.wrapper_some_chk(styler.hasClass, styler);\r\n\r\n    //addClass(name)\r\n    $.fn.addClass = $.wraps.wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className);\r\n\r\n    //removeClass(name)\r\n    $.fn.removeClass = $.wraps.wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className);\r\n\r\n    //toogleClass(name,when)\r\n    $.fn.toggleClass = $.wraps.wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className);\r\n\r\n    $.fn.replaceClass = function(newClass, oldClass) {\r\n        this.removeClass(oldClass);\r\n        this.addClass(newClass);\r\n        return this;\r\n    };\r\n\r\n    $.fn.replaceClass = function(newClass, oldClass) {\r\n        this.removeClass(oldClass);\r\n        this.addClass(newClass);\r\n        return this;\r\n    };\r\n        \r\n\treturn styler;\r\n});\ndefine('skylark-domx-styler', ['skylark-domx-styler/main'], function (main) { return main; });\n\ndefine('skylark-domx-geom/geom',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-styler\"\r\n], function(skylark, langx, noder, styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel,\r\n        offsetParent = noder.offsetParent,\r\n        cachedScrollbarWidth;\r\n\r\n    function scrollbarWidth() {\r\n        if (cachedScrollbarWidth !== undefined) {\r\n            return cachedScrollbarWidth;\r\n        }\r\n        var w1, w2,\r\n            div = noder.createFragment(\"<div style=\" +\r\n                \"'display:block;position:absolute;width:200px;height:200px;overflow:hidden;'>\" +\r\n                \"<div style='height:300px;width:auto;'></div></div>\")[0],\r\n            innerDiv = div.childNodes[0];\r\n\r\n        noder.append(document.body, div);\r\n\r\n        w1 = innerDiv.offsetWidth;\r\n\r\n        styler.css(div, \"overflow\", \"scroll\");\r\n\r\n        w2 = innerDiv.offsetWidth;\r\n\r\n        if (w1 === w2) {\r\n            w2 = div[0].clientWidth;\r\n        }\r\n\r\n        noder.remove(div);\r\n\r\n        return (cachedScrollbarWidth = w1 - w2);\r\n    }\r\n    /*\r\n     * Get the widths of each border of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function borderExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth, elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    /*\r\n     * Get or set the viewport position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the viewport rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the height of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the size of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get or set the width of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the rect of the specified element content box.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLDocument} doc\r\n     */\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each margin of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function marginExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n\r\n    function marginRect(elm) {\r\n        var obj = relativeRect(elm),\r\n            me = marginExtents(elm);\r\n\r\n        return {\r\n            left: obj.left,\r\n            top: obj.top,\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n\r\n    function marginSize(elm) {\r\n        var obj = size(elm),\r\n            me = marginExtents(elm);\r\n\r\n        return {\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each padding of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function paddingExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the position of the specified element border box , relative to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the rect of the specified element border box , relatived to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Scroll the specified element into view.\r\n     * @param {HTMLElement} elm\r\n     * @param {} align\r\n     */\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n    /*\r\n     * Get or set the current horizontal position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollLeft(elm, value) {\r\n        if (elm.nodeType === 9) {\r\n            elm = elm.defaultView;\r\n        }\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or the current vertical position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollTop(elm, value) {\r\n        if (elm.nodeType === 9) {\r\n            elm = elm.defaultView;\r\n        }\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject}dimension\r\n     */\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined && props.width !== \"\" && props.width !== null) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined && props.height !== \"\" && props.height !== null) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        marginRect: marginRect,\r\n\r\n        marginSize: marginSize,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollbarWidth: scrollbarWidth,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    ( function() {\r\n        var max = Math.max,\r\n            abs = Math.abs,\r\n            rhorizontal = /left|center|right/,\r\n            rvertical = /top|center|bottom/,\r\n            roffset = /[\\+\\-]\\d+(\\.[\\d]+)?%?/,\r\n            rposition = /^\\w+/,\r\n            rpercent = /%$/;\r\n\r\n        function getOffsets( offsets, width, height ) {\r\n            return [\r\n                parseFloat( offsets[ 0 ] ) * ( rpercent.test( offsets[ 0 ] ) ? width / 100 : 1 ),\r\n                parseFloat( offsets[ 1 ] ) * ( rpercent.test( offsets[ 1 ] ) ? height / 100 : 1 )\r\n            ];\r\n        }\r\n\r\n        function parseCss( element, property ) {\r\n            return parseInt( styler.css( element, property ), 10 ) || 0;\r\n        }\r\n\r\n        function getDimensions( raw ) {\r\n            if ( raw.nodeType === 9 ) {\r\n                return {\r\n                    size: size(raw),\r\n                    offset: { top: 0, left: 0 }\r\n                };\r\n            }\r\n            if ( noder.isWindow( raw ) ) {\r\n                return {\r\n                    size: size(raw),\r\n                    offset: { \r\n                        top: scrollTop(raw), \r\n                        left: scrollLeft(raw) \r\n                    }\r\n                };\r\n            }\r\n            if ( raw.preventDefault ) {\r\n                return {\r\n                    size : {\r\n                        width: 0,\r\n                        height: 0\r\n                    },\r\n                    offset: { \r\n                        top: raw.pageY, \r\n                        left: raw.pageX \r\n                    }\r\n                };\r\n            }\r\n            return {\r\n                size: size(raw),\r\n                offset: pagePosition(raw)\r\n            };\r\n        }\r\n\r\n        function getScrollInfo( within ) {\r\n            var overflowX = within.isWindow || within.isDocument ? \"\" :\r\n                    styler.css(within.element,\"overflow-x\" ),\r\n                overflowY = within.isWindow || within.isDocument ? \"\" :\r\n                    styler.css(within.element,\"overflow-y\" ),\r\n                hasOverflowX = overflowX === \"scroll\" ||\r\n                    ( overflowX === \"auto\" && within.width < scrollWidth(within.element) ),\r\n                hasOverflowY = overflowY === \"scroll\" ||\r\n                    ( overflowY === \"auto\" && within.height < scrollHeight(within.element));\r\n            return {\r\n                width: hasOverflowY ? scrollbarWidth() : 0,\r\n                height: hasOverflowX ? scrollbarWidth() : 0\r\n            };\r\n        }\r\n\r\n        function getWithinInfo( element ) {\r\n            var withinElement = element || window,\r\n                isWindow = noder.isWindow( withinElement),\r\n                isDocument = !!withinElement && withinElement.nodeType === 9,\r\n                hasOffset = !isWindow && !isDocument,\r\n                msize = marginSize(withinElement);\r\n            return {\r\n                element: withinElement,\r\n                isWindow: isWindow,\r\n                isDocument: isDocument,\r\n                offset: hasOffset ? pagePosition(element) : { left: 0, top: 0 },\r\n                scrollLeft: scrollLeft(withinElement),\r\n                scrollTop: scrollTop(withinElement),\r\n                width: msize.width,\r\n                height: msize.height\r\n            };\r\n        }\r\n\r\n        function posit(elm,options ) {\r\n            // Make a copy, we don't want to modify arguments\r\n            options = langx.extend( {}, options );\r\n\r\n            var atOffset, targetWidth, targetHeight, targetOffset, basePosition, dimensions,\r\n                target = options.of,\r\n                within = getWithinInfo( options.within ),\r\n                scrollInfo = getScrollInfo( within ),\r\n                collision = ( options.collision || \"flip\" ).split( \" \" ),\r\n                offsets = {};\r\n\r\n            dimensions = getDimensions( target );\r\n            if ( target.preventDefault ) {\r\n\r\n                // Force left top to allow flipping\r\n                options.at = \"left top\";\r\n            }\r\n            targetWidth = dimensions.size.width;\r\n            targetHeight = dimensions.size.height;\r\n            targetOffset = dimensions.offset;\r\n\r\n            // Clone to reuse original targetOffset later\r\n            basePosition = langx.extend( {}, targetOffset );\r\n\r\n            // Force my and at to have valid horizontal and vertical positions\r\n            // if a value is missing or invalid, it will be converted to center\r\n            langx.each( [ \"my\", \"at\" ], function() {\r\n                var pos = ( options[ this ] || \"\" ).split( \" \" ),\r\n                    horizontalOffset,\r\n                    verticalOffset;\r\n\r\n                if ( pos.length === 1 ) {\r\n                    pos = rhorizontal.test( pos[ 0 ] ) ?\r\n                        pos.concat( [ \"center\" ] ) :\r\n                        rvertical.test( pos[ 0 ] ) ?\r\n                            [ \"center\" ].concat( pos ) :\r\n                            [ \"center\", \"center\" ];\r\n                }\r\n                pos[ 0 ] = rhorizontal.test( pos[ 0 ] ) ? pos[ 0 ] : \"center\";\r\n                pos[ 1 ] = rvertical.test( pos[ 1 ] ) ? pos[ 1 ] : \"center\";\r\n\r\n                // Calculate offsets\r\n                horizontalOffset = roffset.exec( pos[ 0 ] );\r\n                verticalOffset = roffset.exec( pos[ 1 ] );\r\n                offsets[ this ] = [\r\n                    horizontalOffset ? horizontalOffset[ 0 ] : 0,\r\n                    verticalOffset ? verticalOffset[ 0 ] : 0\r\n                ];\r\n\r\n                // Reduce to just the positions without the offsets\r\n                options[ this ] = [\r\n                    rposition.exec( pos[ 0 ] )[ 0 ],\r\n                    rposition.exec( pos[ 1 ] )[ 0 ]\r\n                ];\r\n            } );\r\n\r\n            // Normalize collision option\r\n            if ( collision.length === 1 ) {\r\n                collision[ 1 ] = collision[ 0 ];\r\n            }\r\n\r\n            if ( options.at[ 0 ] === \"right\" ) {\r\n                basePosition.left += targetWidth;\r\n            } else if ( options.at[ 0 ] === \"center\" ) {\r\n                basePosition.left += targetWidth / 2;\r\n            }\r\n\r\n            if ( options.at[ 1 ] === \"bottom\" ) {\r\n                basePosition.top += targetHeight;\r\n            } else if ( options.at[ 1 ] === \"center\" ) {\r\n                basePosition.top += targetHeight / 2;\r\n            }\r\n\r\n            atOffset = getOffsets( offsets.at, targetWidth, targetHeight );\r\n            basePosition.left += atOffset[ 0 ];\r\n            basePosition.top += atOffset[ 1 ];\r\n\r\n            return ( function(elem) {\r\n                var collisionPosition, using,\r\n                    msize = marginSize(elem),\r\n                    elemWidth = msize.width,\r\n                    elemHeight = msize.height,\r\n                    marginLeft = parseCss( elem, \"marginLeft\" ),\r\n                    marginTop = parseCss( elem, \"marginTop\" ),\r\n                    collisionWidth = elemWidth + marginLeft + parseCss( elem, \"marginRight\" ) +\r\n                        scrollInfo.width,\r\n                    collisionHeight = elemHeight + marginTop + parseCss( elem, \"marginBottom\" ) +\r\n                        scrollInfo.height,\r\n                    position = langx.extend( {}, basePosition ),\r\n                    myOffset = getOffsets( offsets.my, msize.width, msize.height);\r\n\r\n                if ( options.my[ 0 ] === \"right\" ) {\r\n                    position.left -= elemWidth;\r\n                } else if ( options.my[ 0 ] === \"center\" ) {\r\n                    position.left -= elemWidth / 2;\r\n                }\r\n\r\n                if ( options.my[ 1 ] === \"bottom\" ) {\r\n                    position.top -= elemHeight;\r\n                } else if ( options.my[ 1 ] === \"center\" ) {\r\n                    position.top -= elemHeight / 2;\r\n                }\r\n\r\n                position.left += myOffset[ 0 ];\r\n                position.top += myOffset[ 1 ];\r\n\r\n                collisionPosition = {\r\n                    marginLeft: marginLeft,\r\n                    marginTop: marginTop\r\n                };\r\n\r\n                langx.each( [ \"left\", \"top\" ], function( i, dir ) {\r\n                    if ( positions[ collision[ i ] ] ) {\r\n                        positions[ collision[ i ] ][ dir ]( position, {\r\n                            targetWidth: targetWidth,\r\n                            targetHeight: targetHeight,\r\n                            elemWidth: elemWidth,\r\n                            elemHeight: elemHeight,\r\n                            collisionPosition: collisionPosition,\r\n                            collisionWidth: collisionWidth,\r\n                            collisionHeight: collisionHeight,\r\n                            offset: [ atOffset[ 0 ] + myOffset[ 0 ], atOffset [ 1 ] + myOffset[ 1 ] ],\r\n                            my: options.my,\r\n                            at: options.at,\r\n                            within: within,\r\n                            elem: elem\r\n                        } );\r\n                    }\r\n                } );\r\n\r\n                if ( options.using ) {\r\n\r\n                    // Adds feedback as second argument to using callback, if present\r\n                    using = function( props ) {\r\n                        var left = targetOffset.left - position.left,\r\n                            right = left + targetWidth - elemWidth,\r\n                            top = targetOffset.top - position.top,\r\n                            bottom = top + targetHeight - elemHeight,\r\n                            feedback = {\r\n                                target: {\r\n                                    element: target,\r\n                                    left: targetOffset.left,\r\n                                    top: targetOffset.top,\r\n                                    width: targetWidth,\r\n                                    height: targetHeight\r\n                                },\r\n                                element: {\r\n                                    element: elem,\r\n                                    left: position.left,\r\n                                    top: position.top,\r\n                                    width: elemWidth,\r\n                                    height: elemHeight\r\n                                },\r\n                                horizontal: right < 0 ? \"left\" : left > 0 ? \"right\" : \"center\",\r\n                                vertical: bottom < 0 ? \"top\" : top > 0 ? \"bottom\" : \"middle\"\r\n                            };\r\n                        if ( targetWidth < elemWidth && abs( left + right ) < targetWidth ) {\r\n                            feedback.horizontal = \"center\";\r\n                        }\r\n                        if ( targetHeight < elemHeight && abs( top + bottom ) < targetHeight ) {\r\n                            feedback.vertical = \"middle\";\r\n                        }\r\n                        if ( max( abs( left ), abs( right ) ) > max( abs( top ), abs( bottom ) ) ) {\r\n                            feedback.important = \"horizontal\";\r\n                        } else {\r\n                            feedback.important = \"vertical\";\r\n                        }\r\n                        options.using.call( this, props, feedback );\r\n                    };\r\n                }\r\n\r\n                pagePosition(elem, langx.extend( position, { using: using } ));\r\n            })(elm);\r\n        }\r\n\r\n        var positions = {\r\n            fit: {\r\n                left: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.isWindow ? within.scrollLeft : within.offset.left,\r\n                        outerWidth = within.width,\r\n                        collisionPosLeft = position.left - data.collisionPosition.marginLeft,\r\n                        overLeft = withinOffset - collisionPosLeft,\r\n                        overRight = collisionPosLeft + data.collisionWidth - outerWidth - withinOffset,\r\n                        newOverRight;\r\n\r\n                    // Element is wider than within\r\n                    if ( data.collisionWidth > outerWidth ) {\r\n\r\n                        // Element is initially over the left side of within\r\n                        if ( overLeft > 0 && overRight <= 0 ) {\r\n                            newOverRight = position.left + overLeft + data.collisionWidth - outerWidth -\r\n                                withinOffset;\r\n                            position.left += overLeft - newOverRight;\r\n\r\n                        // Element is initially over right side of within\r\n                        } else if ( overRight > 0 && overLeft <= 0 ) {\r\n                            position.left = withinOffset;\r\n\r\n                        // Element is initially over both left and right sides of within\r\n                        } else {\r\n                            if ( overLeft > overRight ) {\r\n                                position.left = withinOffset + outerWidth - data.collisionWidth;\r\n                            } else {\r\n                                position.left = withinOffset;\r\n                            }\r\n                        }\r\n\r\n                    // Too far left -> align with left edge\r\n                    } else if ( overLeft > 0 ) {\r\n                        position.left += overLeft;\r\n\r\n                    // Too far right -> align with right edge\r\n                    } else if ( overRight > 0 ) {\r\n                        position.left -= overRight;\r\n\r\n                    // Adjust based on position and margin\r\n                    } else {\r\n                        position.left = max( position.left - collisionPosLeft, position.left );\r\n                    }\r\n                },\r\n                top: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.isWindow ? within.scrollTop : within.offset.top,\r\n                        outerHeight = data.within.height,\r\n                        collisionPosTop = position.top - data.collisionPosition.marginTop,\r\n                        overTop = withinOffset - collisionPosTop,\r\n                        overBottom = collisionPosTop + data.collisionHeight - outerHeight - withinOffset,\r\n                        newOverBottom;\r\n\r\n                    // Element is taller than within\r\n                    if ( data.collisionHeight > outerHeight ) {\r\n\r\n                        // Element is initially over the top of within\r\n                        if ( overTop > 0 && overBottom <= 0 ) {\r\n                            newOverBottom = position.top + overTop + data.collisionHeight - outerHeight -\r\n                                withinOffset;\r\n                            position.top += overTop - newOverBottom;\r\n\r\n                        // Element is initially over bottom of within\r\n                        } else if ( overBottom > 0 && overTop <= 0 ) {\r\n                            position.top = withinOffset;\r\n\r\n                        // Element is initially over both top and bottom of within\r\n                        } else {\r\n                            if ( overTop > overBottom ) {\r\n                                position.top = withinOffset + outerHeight - data.collisionHeight;\r\n                            } else {\r\n                                position.top = withinOffset;\r\n                            }\r\n                        }\r\n\r\n                    // Too far up -> align with top\r\n                    } else if ( overTop > 0 ) {\r\n                        position.top += overTop;\r\n\r\n                    // Too far down -> align with bottom edge\r\n                    } else if ( overBottom > 0 ) {\r\n                        position.top -= overBottom;\r\n\r\n                    // Adjust based on position and margin\r\n                    } else {\r\n                        position.top = max( position.top - collisionPosTop, position.top );\r\n                    }\r\n                }\r\n            },\r\n            flip: {\r\n                left: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.offset.left + within.scrollLeft,\r\n                        outerWidth = within.width,\r\n                        offsetLeft = within.isWindow ? within.scrollLeft : within.offset.left,\r\n                        collisionPosLeft = position.left - data.collisionPosition.marginLeft,\r\n                        overLeft = collisionPosLeft - offsetLeft,\r\n                        overRight = collisionPosLeft + data.collisionWidth - outerWidth - offsetLeft,\r\n                        myOffset = data.my[ 0 ] === \"left\" ?\r\n                            -data.elemWidth :\r\n                            data.my[ 0 ] === \"right\" ?\r\n                                data.elemWidth :\r\n                                0,\r\n                        atOffset = data.at[ 0 ] === \"left\" ?\r\n                            data.targetWidth :\r\n                            data.at[ 0 ] === \"right\" ?\r\n                                -data.targetWidth :\r\n                                0,\r\n                        offset = -2 * data.offset[ 0 ],\r\n                        newOverRight,\r\n                        newOverLeft;\r\n\r\n                    if ( overLeft < 0 ) {\r\n                        newOverRight = position.left + myOffset + atOffset + offset + data.collisionWidth -\r\n                            outerWidth - withinOffset;\r\n                        if ( newOverRight < 0 || newOverRight < abs( overLeft ) ) {\r\n                            position.left += myOffset + atOffset + offset;\r\n                        }\r\n                    } else if ( overRight > 0 ) {\r\n                        newOverLeft = position.left - data.collisionPosition.marginLeft + myOffset +\r\n                            atOffset + offset - offsetLeft;\r\n                        if ( newOverLeft > 0 || abs( newOverLeft ) < overRight ) {\r\n                            position.left += myOffset + atOffset + offset;\r\n                        }\r\n                    }\r\n                },\r\n                top: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.offset.top + within.scrollTop,\r\n                        outerHeight = within.height,\r\n                        offsetTop = within.isWindow ? within.scrollTop : within.offset.top,\r\n                        collisionPosTop = position.top - data.collisionPosition.marginTop,\r\n                        overTop = collisionPosTop - offsetTop,\r\n                        overBottom = collisionPosTop + data.collisionHeight - outerHeight - offsetTop,\r\n                        top = data.my[ 1 ] === \"top\",\r\n                        myOffset = top ?\r\n                            -data.elemHeight :\r\n                            data.my[ 1 ] === \"bottom\" ?\r\n                                data.elemHeight :\r\n                                0,\r\n                        atOffset = data.at[ 1 ] === \"top\" ?\r\n                            data.targetHeight :\r\n                            data.at[ 1 ] === \"bottom\" ?\r\n                                -data.targetHeight :\r\n                                0,\r\n                        offset = -2 * data.offset[ 1 ],\r\n                        newOverTop,\r\n                        newOverBottom;\r\n                    if ( overTop < 0 ) {\r\n                        newOverBottom = position.top + myOffset + atOffset + offset + data.collisionHeight -\r\n                            outerHeight - withinOffset;\r\n                        if ( newOverBottom < 0 || newOverBottom < abs( overTop ) ) {\r\n                            position.top += myOffset + atOffset + offset;\r\n                        }\r\n                    } else if ( overBottom > 0 ) {\r\n                        newOverTop = position.top - data.collisionPosition.marginTop + myOffset + atOffset +\r\n                            offset - offsetTop;\r\n                        if ( newOverTop > 0 || abs( newOverTop ) < overBottom ) {\r\n                            position.top += myOffset + atOffset + offset;\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            flipfit: {\r\n                left: function() {\r\n                    positions.flip.left.apply( this, arguments );\r\n                    positions.fit.left.apply( this, arguments );\r\n                },\r\n                top: function() {\r\n                    positions.flip.top.apply( this, arguments );\r\n                    positions.fit.top.apply( this, arguments );\r\n                }\r\n            }\r\n        };\r\n\r\n        geom.posit = posit;\r\n    })();\r\n\r\n    return skylark.attach(\"domx.geom\", geom);\r\n});\ndefine('skylark-domx-geom/main',[\r\n    \"skylark-langx/langx\",\r\n    \"./geom\",\r\n    \"skylark-domx-velm\",\r\n    \"skylark-domx-query\"        \r\n],function(langx,geom,velm,$){\r\n   // from ./geom\r\n    velm.delegate([\r\n        \"borderExtents\",\r\n        \"boundingPosition\",\r\n        \"boundingRect\",\r\n        \"clientHeight\",\r\n        \"clientSize\",\r\n        \"clientWidth\",\r\n        \"contentRect\",\r\n        \"height\",\r\n        \"marginExtents\",\r\n        \"offsetParent\",\r\n        \"paddingExtents\",\r\n        \"pagePosition\",\r\n        \"pageRect\",\r\n        \"relativePosition\",\r\n        \"relativeRect\",\r\n        \"scrollIntoView\",\r\n        \"scrollLeft\",\r\n        \"scrollTop\",\r\n        \"size\",\r\n        \"width\"\r\n    ], geom);\r\n\r\n    $.fn.offset = $.wraps.wrapper_value(geom.pagePosition, geom, geom.pagePosition);\r\n\r\n    $.fn.scrollTop = $.wraps.wrapper_value(geom.scrollTop, geom);\r\n\r\n    $.fn.scrollLeft = $.wraps.wrapper_value(geom.scrollLeft, geom);\r\n\r\n    $.fn.position =  function(options) {\r\n        if (!this.length) {\r\n            return this;\r\n        }\r\n\r\n        if (options) {\r\n            if (options.of && options.of.length) {\r\n                options = langx.clone(options);\r\n                options.of = options.of[0];\r\n            }\r\n            return this.each( function() {\r\n                geom.posit(this,options);\r\n            });\r\n        } else {\r\n            var elem = this[0];\r\n\r\n            return geom.relativePosition(elem);\r\n\r\n        }             \r\n    };\r\n\r\n    $.fn.offsetParent = $.wraps.wrapper_map(geom.offsetParent, geom);\r\n\r\n\r\n    $.fn.size = $.wraps.wrapper_value(geom.size, geom);\r\n\r\n    $.fn.width = $.wraps.wrapper_value(geom.width, geom, geom.width);\r\n\r\n    $.fn.height = $.wraps.wrapper_value(geom.height, geom, geom.height);\r\n\r\n    $.fn.clientSize = $.wraps.wrapper_value(geom.clientSize, geom.clientSize);\r\n    \r\n    ['width', 'height'].forEach(function(dimension) {\r\n        var offset, Dimension = dimension.replace(/./, function(m) {\r\n            return m[0].toUpperCase()\r\n        });\r\n\r\n        $.fn['outer' + Dimension] = function(margin, value) {\r\n            if (arguments.length) {\r\n                if (typeof margin !== 'boolean') {\r\n                    value = margin;\r\n                    margin = false;\r\n                }\r\n            } else {\r\n                margin = false;\r\n                value = undefined;\r\n            }\r\n\r\n            if (value === undefined) {\r\n                var el = this[0];\r\n                if (!el) {\r\n                    return undefined;\r\n                }\r\n                var cb = geom.size(el);\r\n                if (margin) {\r\n                    var me = geom.marginExtents(el);\r\n                    cb.width = cb.width + me.left + me.right;\r\n                    cb.height = cb.height + me.top + me.bottom;\r\n                }\r\n                return dimension === \"width\" ? cb.width : cb.height;\r\n            } else {\r\n                return this.each(function(idx, el) {\r\n                    var mb = {};\r\n                    var me = geom.marginExtents(el);\r\n                    if (dimension === \"width\") {\r\n                        mb.width = value;\r\n                        if (margin) {\r\n                            mb.width = mb.width - me.left - me.right\r\n                        }\r\n                    } else {\r\n                        mb.height = value;\r\n                        if (margin) {\r\n                            mb.height = mb.height - me.top - me.bottom;\r\n                        }\r\n                    }\r\n                    geom.size(el, mb);\r\n                })\r\n\r\n            }\r\n        };\r\n    })\r\n\r\n    $.fn.innerWidth = $.wraps.wrapper_value(geom.clientWidth, geom, geom.clientWidth);\r\n\r\n    $.fn.innerHeight = $.wraps.wrapper_value(geom.clientHeight, geom, geom.clientHeight);\r\n\r\n    return geom;\r\n});\ndefine('skylark-domx-geom', ['skylark-domx-geom/main'], function (main) { return main; });\n\ndefine('skylark-widgets-hierarchy/Hierarchy',[\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\"\r\n],function(skylark,langx,browser,eventer,noder,geom,$){\r\n\t\"use strict\";\r\n\r\n\tvar jstree = skylark.jstree =  skylark.jstree || {};\r\n\r\n\t$.ajax = $.ajax || function(options) {\r\n        return langx.Xhr.request(options.url,options);\r\n    };\r\n\r\n    $.camelCase = langx.camelCase;\r\n\r\n    $.each = langx.each;\r\n\r\n    $.extend = function(target) {\r\n        var deep, args = Array.prototype.slice.call(arguments, 1);\r\n        if (typeof target == 'boolean') {\r\n            deep = target\r\n            target = args.shift()\r\n        }\r\n        if (args.length == 0) {\r\n            args = [target];\r\n            target = this;\r\n        }\r\n        args.forEach(function(arg) {\r\n        \tlangx.mixin(target, arg, deep);\r\n        });\r\n        return target;\r\n    };\r\n\r\n    $.grep = function(elements, callback) {\r\n        return filter.call(elements, callback)\r\n    };\r\n\r\n    $.isArray = langx.isArray;\r\n    $.isEmptyObject = langx.isEmptyObject;\r\n    $.isFunction = langx.isFunction;\r\n    $.isWindow = langx.isWindow;\r\n    $.isPlainObject = langx.isPlainObject;\r\n\r\n    $.inArray = langx.inArray;\r\n\r\n    $.makeArray = langx.makeArray;\r\n    $.map = langx.map;\r\n\r\n    $.noop = function() {\r\n    };\r\n\r\n    $.parseJSON = window.JSON.parse;\r\n\r\n    $.proxy = langx.proxy;\r\n\r\n    $.trim = langx.trim;\r\n    $.type = langx.type;\r\n\r\n    $.fn.stop = function() {\r\n    \treturn this;\r\n    }\r\n\r\n\r\n\t/*!\r\n\t * jsTree {{VERSION}}\r\n\t * http://jstree.com/\r\n\t *\r\n\t * Copyright (c) 2014 Ivan Bozhanov (http://vakata.com)\r\n\t *\r\n\t * Licensed same as jquery - under the terms of the MIT License\r\n\t *   http://www.opensource.org/licenses/mit-license.php\r\n\t */\r\n\r\n\t// prevent another load? maybe there is a better way?\r\n\tif($.jstree) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * ### jsTree core functionality\r\n\t */\r\n\r\n\t// internal variables\r\n\tvar instance_counter = 0,\r\n\t\tccp_node = false,\r\n\t\tccp_mode = false,\r\n\t\tccp_inst = false,\r\n\t\tthemes_loaded = [],\r\n\t\tsrc = $('script:last').attr('src'),\r\n\t\tdocument = window.document; // local variable is always faster to access then a global\r\n\r\n\t/**\r\n\t * holds all jstree related functions and variables, including the actual class and methods to create, access and manipulate instances.\r\n\t * @name $.jstree\r\n\t */\r\n\t$.jstree = {\r\n\t\t/**\r\n\t\t * specifies the jstree version in use\r\n\t\t * @name $.jstree.version\r\n\t\t */\r\n\t\tversion : '{{VERSION}}',\r\n\t\t/**\r\n\t\t * holds all the default options used when creating new instances\r\n\t\t * @name $.jstree.defaults\r\n\t\t */\r\n\t\tdefaults : {\r\n\t\t\t/**\r\n\t\t\t * configure which plugins will be active on an instance. Should be an array of strings, where each element is a plugin name. The default is `[]`\r\n\t\t\t * @name $.jstree.defaults.plugins\r\n\t\t\t */\r\n\t\t\tplugins : []\r\n\t\t},\r\n\t\t/**\r\n\t\t * stores all loaded jstree plugins (used internally)\r\n\t\t * @name $.jstree.plugins\r\n\t\t */\r\n\t\tplugins : {},\r\n\t\tpath : src && src.indexOf('/') !== -1 ? src.replace(/\\/[^\\/]+$/,'') : '',\r\n\t\tidregex : /[\\\\:&!^|()\\[\\]<>@*'+~#\";.,=\\- \\/${}%?`]/g,\r\n\t\troot : '#'\r\n\t};\r\n\t\r\n\t/**\r\n\t * creates a jstree instance\r\n\t * @name $.jstree.create(el [, options])\r\n\t * @param {DOMElement|jQuery|String} el the element to create the instance on, can be jQuery extended or a selector\r\n\t * @param {Object} options options for this instance (extends `$.jstree.defaults`)\r\n\t * @return {jsTree} the new instance\r\n\t */\r\n\t$.jstree.create = function (el, options) {\r\n\t\treturn new Tree(el,options);\r\n\t};\r\n\r\n\t/**\r\n\t * remove all traces of jstree from the DOM and destroy all instances\r\n\t * @name $.jstree.destroy()\r\n\t */\r\n\t$.jstree.destroy = function () {\r\n\t\t$('.jstree:jstree').jstree('destroy');\r\n\t\t$(document).off('.jstree');\r\n\t};\r\n\r\n\r\n\t/**\r\n\t * get a reference to an existing instance\r\n\t *\r\n\t * __Examples__\r\n\t *\r\n\t *\t// provided a container with an ID of \"tree\", and a nested node with an ID of \"branch\"\r\n\t *\t// all of there will return the same instance\r\n\t *\t$.jstree.reference('tree');\r\n\t *\t$.jstree.reference('#tree');\r\n\t *\t$.jstree.reference($('#tree'));\r\n\t *\t$.jstree.reference(document.getElementByID('tree'));\r\n\t *\t$.jstree.reference('branch');\r\n\t *\t$.jstree.reference('#branch');\r\n\t *\t$.jstree.reference($('#branch'));\r\n\t *\t$.jstree.reference(document.getElementByID('branch'));\r\n\t *\r\n\t * @name $.jstree.reference(needle)\r\n\t * @param {DOMElement|jQuery|String} needle\r\n\t * @return {jsTree|null} the instance or `null` if not found\r\n\t */\r\n\t$.jstree.reference = function (needle) {\r\n\t\tvar tmp = null,\r\n\t\t\tobj = null;\r\n\t\tif(needle && needle.id && (!needle.tagName || !needle.nodeType)) { needle = needle.id; }\r\n\r\n\t\tif(!obj || !obj.length) {\r\n\t\t\ttry { obj = $(needle); } catch (ignore) { }\r\n\t\t}\r\n\t\tif(!obj || !obj.length) {\r\n\t\t\ttry { obj = $('#' + needle.replace($.jstree.idregex,'\\\\$&')); } catch (ignore) { }\r\n\t\t}\r\n\t\tif(obj && obj.length && (obj = obj.closest('.jstree')).length && (obj = obj.data('jstree'))) {\r\n\t\t\ttmp = obj;\r\n\t\t}\r\n\t\telse {\r\n\t\t\t$('.jstree').each(function () {\r\n\t\t\t\tvar inst = $(this).data('jstree');\r\n\t\t\t\tif(inst && inst._model.data[needle]) {\r\n\t\t\t\t\ttmp = inst;\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn tmp;\r\n\t};\r\n\r\n\t/**\r\n\t * Create an instance, get an instance or invoke a command on a instance.\r\n\t *\r\n\t * If there is no instance associated with the current node a new one is created and `arg` is used to extend `$.jstree.defaults` for this new instance. There would be no return value (chaining is not broken).\r\n\t *\r\n\t * If there is an existing instance and `arg` is a string the command specified by `arg` is executed on the instance, with any additional arguments passed to the function. If the function returns a value it will be returned (chaining could break depending on function).\r\n\t *\r\n\t * If there is an existing instance and `arg` is not a string the instance itself is returned (similar to `$.jstree.reference`).\r\n\t *\r\n\t * In any other case - nothing is returned and chaining is not broken.\r\n\t *\r\n\t * __Examples__\r\n\t *\r\n\t *\t$('#tree1').jstree(); // creates an instance\r\n\t *\t$('#tree2').jstree({ plugins : [] }); // create an instance with some options\r\n\t *\t$('#tree1').jstree('open_node', '#branch_1'); // call a method on an existing instance, passing additional arguments\r\n\t *\t$('#tree2').jstree(); // get an existing instance (or create an instance)\r\n\t *\t$('#tree2').jstree(true); // get an existing instance (will not create new instance)\r\n\t *\t$('#branch_1').jstree().select_node('#branch_1'); // get an instance (using a nested element and call a method)\r\n\t *\r\n\t * @name $().jstree([arg])\r\n\t * @param {String|Object} arg\r\n\t * @return {Mixed}\r\n\t */\r\n\t$.fn.jstree = function (arg) {\r\n\t\t// check for string argument\r\n\t\tvar is_method\t= (typeof arg === 'string'),\r\n\t\t\targs\t\t= Array.prototype.slice.call(arguments, 1),\r\n\t\t\tresult\t\t= null;\r\n\t\tif(arg === true && !this.length) { return false; }\r\n\t\tthis.each(function () {\r\n\t\t\t// get the instance (if there is one) and method (if it exists)\r\n\t\t\tvar instance = $.jstree.reference(this),\r\n\t\t\t\tmethod = is_method && instance ? instance[arg] : null;\r\n\t\t\t// if calling a method, and method is available - execute on the instance\r\n\t\t\tresult = is_method && method ?\r\n\t\t\t\tmethod.apply(instance, args) :\r\n\t\t\t\tnull;\r\n\t\t\t// if there is no instance and no method is being called - create one\r\n\t\t\tif(!instance && !is_method && (arg === undefined || $.isPlainObject(arg))) {\r\n\t\t\t\t$.jstree.create(this, arg);\r\n\t\t\t}\r\n\t\t\t// if there is an instance and no method is called - return the instance\r\n\t\t\tif( (instance && !is_method) || arg === true ) {\r\n\t\t\t\tresult = instance || false;\r\n\t\t\t}\r\n\t\t\t// if there was a method call which returned a result - break and return the value\r\n\t\t\tif(result !== null && result !== undefined) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t});\r\n\t\t// if there was a method call with a valid return value - return that, otherwise continue the chain\r\n\t\treturn result !== null && result !== undefined ?\r\n\t\t\tresult : this;\r\n\t};\r\n\r\n\t/**\r\n\t * stores all defaults for the core\r\n\t * @name $.jstree.defaults.core\r\n\t */\r\n\t$.jstree.defaults.core = {\r\n\t\t/**\r\n\t\t * data configuration\r\n\t\t *\r\n\t\t * If left as `false` the HTML inside the jstree container element is used to populate the tree (that should be an unordered list with list items).\r\n\t\t *\r\n\t\t * You can also pass in a HTML string or a JSON array here.\r\n\t\t *\r\n\t\t * It is possible to pass in a standard jQuery-like AJAX config and jstree will automatically determine if the response is JSON or HTML and use that to populate the tree.\r\n\t\t * In addition to the standard jQuery ajax options here you can suppy functions for `data` and `url`, the functions will be run in the current instance's scope and a param will be passed indicating which node is being loaded, the return value of those functions will be used.\r\n\t\t *\r\n\t\t * The last option is to specify a function, that function will receive the node being loaded as argument and a second param which is a function which should be called with the result.\r\n\t\t *\r\n\t\t * __Examples__\r\n\t\t *\r\n\t\t *\t// AJAX\r\n\t\t *\t$('#tree').jstree({\r\n\t\t *\t\t'core' : {\r\n\t\t *\t\t\t'data' : {\r\n\t\t *\t\t\t\t'url' : '/get/children/',\r\n\t\t *\t\t\t\t'data' : function (node) {\r\n\t\t *\t\t\t\t\treturn { 'id' : node.id };\r\n\t\t *\t\t\t\t}\r\n\t\t *\t\t\t}\r\n\t\t *\t\t});\r\n\t\t *\r\n\t\t *\t// direct data\r\n\t\t *\t$('#tree').jstree({\r\n\t\t *\t\t'core' : {\r\n\t\t *\t\t\t'data' : [\r\n\t\t *\t\t\t\t'Simple root node',\r\n\t\t *\t\t\t\t{\r\n\t\t *\t\t\t\t\t'id' : 'node_2',\r\n\t\t *\t\t\t\t\t'text' : 'Root node with options',\r\n\t\t *\t\t\t\t\t'state' : { 'opened' : true, 'selected' : true },\r\n\t\t *\t\t\t\t\t'children' : [ { 'text' : 'Child 1' }, 'Child 2']\r\n\t\t *\t\t\t\t}\r\n\t\t *\t\t\t]\r\n\t\t *\t\t}\r\n\t\t *\t});\r\n\t\t *\r\n\t\t *\t// function\r\n\t\t *\t$('#tree').jstree({\r\n\t\t *\t\t'core' : {\r\n\t\t *\t\t\t'data' : function (obj, callback) {\r\n\t\t *\t\t\t\tcallback.call(this, ['Root 1', 'Root 2']);\r\n\t\t *\t\t\t}\r\n\t\t *\t\t});\r\n\t\t *\r\n\t\t * @name $.jstree.defaults.core.data\r\n\t\t */\r\n\t\tdata\t\t\t: false,\r\n\t\t/**\r\n\t\t * configure the various strings used throughout the tree\r\n\t\t *\r\n\t\t * You can use an object where the key is the string you need to replace and the value is your replacement.\r\n\t\t * Another option is to specify a function which will be called with an argument of the needed string and should return the replacement.\r\n\t\t * If left as `false` no replacement is made.\r\n\t\t *\r\n\t\t * __Examples__\r\n\t\t *\r\n\t\t *\t$('#tree').jstree({\r\n\t\t *\t\t'core' : {\r\n\t\t *\t\t\t'strings' : {\r\n\t\t *\t\t\t\t'Loading ...' : 'Please wait ...'\r\n\t\t *\t\t\t}\r\n\t\t *\t\t}\r\n\t\t *\t});\r\n\t\t *\r\n\t\t * @name $.jstree.defaults.core.strings\r\n\t\t */\r\n\t\tstrings\t\t\t: false,\r\n\t\t/**\r\n\t\t * determines what happens when a user tries to modify the structure of the tree\r\n\t\t * If left as `false` all operations like create, rename, delete, move or copy are prevented.\r\n\t\t * You can set this to `true` to allow all interactions or use a function to have better control.\r\n\t\t *\r\n\t\t * __Examples__\r\n\t\t *\r\n\t\t *\t$('#tree').jstree({\r\n\t\t *\t\t'core' : {\r\n\t\t *\t\t\t'check_callback' : function (operation, node, node_parent, node_position, more) {\r\n\t\t *\t\t\t\t// operation can be 'create_node', 'rename_node', 'delete_node', 'move_node', 'copy_node' or 'edit'\r\n\t\t *\t\t\t\t// in case of 'rename_node' node_position is filled with the new node name\r\n\t\t *\t\t\t\treturn operation === 'rename_node' ? true : false;\r\n\t\t *\t\t\t}\r\n\t\t *\t\t}\r\n\t\t *\t});\r\n\t\t *\r\n\t\t * @name $.jstree.defaults.core.check_callback\r\n\t\t */\r\n\t\tcheck_callback\t: false,\r\n\t\t/**\r\n\t\t * a callback called with a single object parameter in the instance's scope when something goes wrong (operation prevented, ajax failed, etc)\r\n\t\t * @name $.jstree.defaults.core.error\r\n\t\t */\r\n\t\terror\t\t\t: $.noop,\r\n\t\t/**\r\n\t\t * the open / close animation duration in milliseconds - set this to `false` to disable the animation (default is `200`)\r\n\t\t * @name $.jstree.defaults.core.animation\r\n\t\t */\r\n\t\tanimation\t\t: 200,\r\n\t\t/**\r\n\t\t * a boolean indicating if multiple nodes can be selected\r\n\t\t * @name $.jstree.defaults.core.multiple\r\n\t\t */\r\n\t\tmultiple\t\t: true,\r\n\t\t/**\r\n\t\t * theme configuration object\r\n\t\t * @name $.jstree.defaults.core.themes\r\n\t\t */\r\n\t\tthemes\t\t\t: {\r\n\t\t\t/**\r\n\t\t\t * the name of the theme to use (if left as `false` the default theme is used)\r\n\t\t\t * @name $.jstree.defaults.core.themes.name\r\n\t\t\t */\r\n\t\t\tname\t\t\t: false,\r\n\t\t\t/**\r\n\t\t\t * the URL of the theme's CSS file, leave this as `false` if you have manually included the theme CSS (recommended). You can set this to `true` too which will try to autoload the theme.\r\n\t\t\t * @name $.jstree.defaults.core.themes.url\r\n\t\t\t */\r\n\t\t\turl\t\t\t\t: false,\r\n\t\t\t/**\r\n\t\t\t * the location of all jstree themes - only used if `url` is set to `true`\r\n\t\t\t * @name $.jstree.defaults.core.themes.dir\r\n\t\t\t */\r\n\t\t\tdir\t\t\t\t: false,\r\n\t\t\t/**\r\n\t\t\t * a boolean indicating if connecting dots are shown\r\n\t\t\t * @name $.jstree.defaults.core.themes.dots\r\n\t\t\t */\r\n\t\t\tdots\t\t\t: true,\r\n\t\t\t/**\r\n\t\t\t * a boolean indicating if node icons are shown\r\n\t\t\t * @name $.jstree.defaults.core.themes.icons\r\n\t\t\t */\r\n\t\t\ticons\t\t\t: true,\r\n\t\t\t/**\r\n\t\t\t * a boolean indicating if node ellipsis should be shown - this only works with a fixed with on the container\r\n\t\t\t * @name $.jstree.defaults.core.themes.ellipsis\r\n\t\t\t */\r\n\t\t\tellipsis\t\t: false,\r\n\t\t\t/**\r\n\t\t\t * a boolean indicating if the tree background is striped\r\n\t\t\t * @name $.jstree.defaults.core.themes.stripes\r\n\t\t\t */\r\n\t\t\tstripes\t\t\t: false,\r\n\t\t\t/**\r\n\t\t\t * a string (or boolean `false`) specifying the theme variant to use (if the theme supports variants)\r\n\t\t\t * @name $.jstree.defaults.core.themes.variant\r\n\t\t\t */\r\n\t\t\tvariant\t\t\t: false,\r\n\t\t\t/**\r\n\t\t\t * a boolean specifying if a reponsive version of the theme should kick in on smaller screens (if the theme supports it). Defaults to `false`.\r\n\t\t\t * @name $.jstree.defaults.core.themes.responsive\r\n\t\t\t */\r\n\t\t\tresponsive\t\t: false\r\n\t\t},\r\n\t\t/**\r\n\t\t * if left as `true` all parents of all selected nodes will be opened once the tree loads (so that all selected nodes are visible to the user)\r\n\t\t * @name $.jstree.defaults.core.expand_selected_onload\r\n\t\t */\r\n\t\texpand_selected_onload : true,\r\n\t\t/**\r\n\t\t * if left as `true` web workers will be used to parse incoming JSON data where possible, so that the UI will not be blocked by large requests. Workers are however about 30% slower. Defaults to `true`\r\n\t\t * @name $.jstree.defaults.core.worker\r\n\t\t */\r\n\t\tworker : true,\r\n\t\t/**\r\n\t\t * Force node text to plain text (and escape HTML). Defaults to `false`\r\n\t\t * @name $.jstree.defaults.core.force_text\r\n\t\t */\r\n\t\tforce_text : false,\r\n\t\t/**\r\n\t\t * Should the node should be toggled if the text is double clicked . Defaults to `true`\r\n\t\t * @name $.jstree.defaults.core.dblclick_toggle\r\n\t\t */\r\n\t\tdblclick_toggle : true,\r\n\t\t/**\r\n\t\t * Should the loaded nodes be part of the state. Defaults to `false`\r\n\t\t * @name $.jstree.defaults.core.loaded_state\r\n\t\t */\r\n\t\tloaded_state : false,\r\n\t\t/**\r\n\t\t * Should the last active node be focused when the tree container is blurred and the focused again. This helps working with screen readers. Defaults to `true`\r\n\t\t * @name $.jstree.defaults.core.restore_focus\r\n\t\t */\r\n\t\trestore_focus : true,\r\n\t\t/**\r\n\t\t * Default keyboard shortcuts (an object where each key is the button name or combo - like 'enter', 'ctrl-space', 'p', etc and the value is the function to execute in the instance's scope)\r\n\t\t * @name $.jstree.defaults.core.keyboard\r\n\t\t */\r\n\t\tkeyboard : {\r\n\t\t\t'ctrl-space': function (e) {\r\n\t\t\t\t// aria defines space only with Ctrl\r\n\t\t\t\te.type = \"click\";\r\n\t\t\t\t$(e.currentTarget).trigger(e);\r\n\t\t\t},\r\n\t\t\t'enter': function (e) {\r\n\t\t\t\t// enter\r\n\t\t\t\te.type = \"click\";\r\n\t\t\t\t$(e.currentTarget).trigger(e);\r\n\t\t\t},\r\n\t\t\t'left': function (e) {\r\n\t\t\t\t// left\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tif(this.is_open(e.currentTarget)) {\r\n\t\t\t\t\tthis.close_node(e.currentTarget);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tvar o = this.get_parent(e.currentTarget);\r\n\t\t\t\t\tif(o && o.id !== $.jstree.root) { this.get_node(o, true).children('.jstree-anchor').focus(); }\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t'up': function (e) {\r\n\t\t\t\t// up\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tvar o = this.get_prev_dom(e.currentTarget);\r\n\t\t\t\tif(o && o.length) { o.children('.jstree-anchor').focus(); }\r\n\t\t\t},\r\n\t\t\t'right': function (e) {\r\n\t\t\t\t// right\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tif(this.is_closed(e.currentTarget)) {\r\n\t\t\t\t\tthis.open_node(e.currentTarget, function (o) { this.get_node(o, true).children('.jstree-anchor').focus(); });\r\n\t\t\t\t}\r\n\t\t\t\telse if (this.is_open(e.currentTarget)) {\r\n\t\t\t\t\tvar o = this.get_node(e.currentTarget, true).children('.jstree-children')[0];\r\n\t\t\t\t\tif(o) { $(this._firstChild(o)).children('.jstree-anchor').focus(); }\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t'down': function (e) {\r\n\t\t\t\t// down\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tvar o = this.get_next_dom(e.currentTarget);\r\n\t\t\t\tif(o && o.length) { o.children('.jstree-anchor').focus(); }\r\n\t\t\t},\r\n\t\t\t'*': function (e) {\r\n\t\t\t\t// aria defines * on numpad as open_all - not very common\r\n\t\t\t\tthis.open_all();\r\n\t\t\t},\r\n\t\t\t'home': function (e) {\r\n\t\t\t\t// home\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tvar o = this._firstChild(this.get_container_ul()[0]);\r\n\t\t\t\tif(o) { $(o).children('.jstree-anchor').filter(':visible').focus(); }\r\n\t\t\t},\r\n\t\t\t'end': function (e) {\r\n\t\t\t\t// end\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tthis.element.find('.jstree-anchor').filter(':visible').last().focus();\r\n\t\t\t},\r\n\t\t\t'f2': function (e) {\r\n\t\t\t\t// f2 - safe to include - if check_callback is false it will fail\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tthis.edit(e.currentTarget);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n    var Tree = jstree.Tree = langx.Evented.inherit({\r\n        klassName: \"Tree\",\r\n\r\n\t\t/**\r\n\t\t * used to decorate an instance with a plugin. Used internally.\r\n\t\t * @private\r\n\t\t * @name plugin(deco [, opts])\r\n\t\t * @param  {String} deco the plugin to decorate with\r\n\t\t * @param  {Object} opts options for the plugin\r\n\t\t * @return {jsTree}\r\n\t\t */\r\n\t\tplugin : function (deco, opts) {\r\n\t\t\tvar Child = $.jstree.plugins[deco];\r\n\t\t\tif(Child) {\r\n\t\t\t\tthis._data[deco] = {};\r\n\t\t\t\tChild.prototype = this;\r\n\t\t\t\treturn new Child(opts, this);\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\t/**\r\n\t\t * initialize the instance. Used internally.\r\n\t\t * @private\r\n\t\t * @name init(el, optons)\r\n\t\t * @param {DOMElement|jQuery|String} el the element we are transforming\r\n\t\t * @param {Object} options options for this instance\r\n\t\t * @trigger init.jstree, loading.jstree, loaded.jstree, ready.jstree, changed.jstree\r\n\t\t */\r\n\t\tinit : function (el, options) {\r\n\t\t\tthis._id = ++instance_counter;\r\n\t\t\tthis._cnt = 0;\r\n\t\t\tthis._wrk = null;\r\n\t\t\tthis._data = {\r\n\t\t\t\tcore : {\r\n\t\t\t\t\tthemes : {\r\n\t\t\t\t\t\tname : false,\r\n\t\t\t\t\t\tdots : false,\r\n\t\t\t\t\t\ticons : false,\r\n\t\t\t\t\t\tellipsis : false\r\n\t\t\t\t\t},\r\n\t\t\t\t\tselected : [],\r\n\t\t\t\t\tlast_error : {},\r\n\t\t\t\t\tworking : false,\r\n\t\t\t\t\tworker_queue : [],\r\n\t\t\t\t\tfocused : null\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tvar  opt = options,\r\n\t\t\t\ttmp = this;\r\n\t\t\toptions = $.extend(true, {}, $.jstree.defaults, options);\r\n\t\t\tif(opt && opt.plugins) {\r\n\t\t\t\toptions.plugins = opt.plugins;\r\n\t\t\t}\r\n\t\t\t$.each(options.plugins, function (i, k) {\r\n\t\t\t\tif(i !== 'core') {\r\n\t\t\t\t\ttmp = tmp.plugin(k, options[k]);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t$(el).data('jstree', tmp);\r\n\r\n\t\t\ttmp._model = {\r\n\t\t\t\tdata : {},\r\n\t\t\t\tchanged : [],\r\n\t\t\t\tforce_full_redraw : false,\r\n\t\t\t\tredraw_timeout : false,\r\n\t\t\t\tdefault_state : {\r\n\t\t\t\t\tloaded : true,\r\n\t\t\t\t\topened : false,\r\n\t\t\t\t\tselected : false,\r\n\t\t\t\t\tdisabled : false\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\ttmp._model.data[$.jstree.root] = {\r\n\t\t\t\tid : $.jstree.root,\r\n\t\t\t\tparent : null,\r\n\t\t\t\tparents : [],\r\n\t\t\t\tchildren : [],\r\n\t\t\t\tchildren_d : [],\r\n\t\t\t\tstate : { loaded : false }\r\n\t\t\t};\r\n\r\n\t\t\ttmp.element = $(el).addClass('jstree jstree-' + tmp._id);\r\n\t\t\ttmp.settings = options;\r\n\r\n\t\t\ttmp._data.core.ready = false;\r\n\t\t\ttmp._data.core.loaded = false;\r\n\t\t\ttmp._data.core.rtl = (tmp.element.css(\"direction\") === \"rtl\");\r\n\t\t\ttmp.element[tmp._data.core.rtl ? 'addClass' : 'removeClass'](\"jstree-rtl\");\r\n\t\t\ttmp.element.attr('role','tree');\r\n\t\t\tif(tmp.settings.core.multiple) {\r\n\t\t\t\ttmp.element.attr('aria-multiselectable', true);\r\n\t\t\t}\r\n\t\t\tif(!tmp.element.attr('tabindex')) {\r\n\t\t\t\ttmp.element.attr('tabindex','0');\r\n\t\t\t}\r\n\r\n\t\t\ttmp.bind();\r\n\t\t\t/**\r\n\t\t\t * triggered after all events are bound\r\n\t\t\t * @event\r\n\t\t\t * @name init.jstree\r\n\t\t\t */\r\n\t\t\ttmp.trigger(\"init\");\r\n\r\n\t\t\ttmp._data.core.original_container_html = tmp.element.find(\" > ul > li\").clone(true);\r\n\t\t\ttmp._data.core.original_container_html\r\n\t\t\t\t.find(\"li\").addBack()\r\n\t\t\t\t.contents().filter(function() {\r\n\t\t\t\t\treturn this.nodeType === 3 && (!this.nodeValue || /^\\s+$/.test(this.nodeValue));\r\n\t\t\t\t})\r\n\t\t\t\t.remove();\r\n\t\t\ttmp.element.html(\"<\"+\"ul class='jstree-container-ul jstree-children' role='group'><\"+\"li id='j\"+tmp._id+\"_loading' class='jstree-initial-node jstree-loading jstree-leaf jstree-last' role='tree-item'><i class='jstree-icon jstree-ocl'></i><\"+\"a class='jstree-anchor' href='#'><i class='jstree-icon jstree-themeicon-hidden'></i>\" + tmp.get_string(\"Loading ...\") + \"</a></li></ul>\");\r\n\t\t\ttmp.element.attr('aria-activedescendant','j' + tmp._id + '_loading');\r\n\t\t\ttmp._data.core.li_height = tmp.get_container_ul().children(\"li\").first().outerHeight() || 24;\r\n\t\t\ttmp._data.core.node = tmp._create_prototype_node();\r\n\t\t\t/**\r\n\t\t\t * triggered after the loading text is shown and before loading starts\r\n\t\t\t * @event\r\n\t\t\t * @name loading.jstree\r\n\t\t\t */\r\n\t\t\ttmp.trigger(\"loading\");\r\n\t\t\ttmp.load_node($.jstree.root);\r\n\t\t\treturn tmp;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * destroy an instance\r\n\t\t * @name destroy()\r\n\t\t * @param  {Boolean} keep_html if not set to `true` the container will be emptied, otherwise the current DOM elements will be kept intact\r\n\t\t */\r\n\t\tdestroy : function (keep_html) {\r\n\t\t\t/**\r\n\t\t\t * triggered before the tree is destroyed\r\n\t\t\t * @event\r\n\t\t\t * @name destroy.jstree\r\n\t\t\t */\r\n\t\t\ttmp.trigger(\"destroy\");\r\n\t\t\tif(this._wrk) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\twindow.URL.revokeObjectURL(this._wrk);\r\n\t\t\t\t\tthis._wrk = null;\r\n\t\t\t\t}\r\n\t\t\t\tcatch (ignore) { }\r\n\t\t\t}\r\n\t\t\tif(!keep_html) { this.element.empty(); }\r\n\t\t\tthis.teardown();\r\n\t\t},\r\n\t\t/**\r\n\t\t * Create a prototype node\r\n\t\t * @name _create_prototype_node()\r\n\t\t * @return {DOMElement}\r\n\t\t */\r\n\t\t_create_prototype_node : function () {\r\n\t\t\tvar _node = document.createElement('LI'), _temp1, _temp2;\r\n\t\t\t_node.setAttribute('role', 'treeitem');\r\n\t\t\t_temp1 = document.createElement('I');\r\n\t\t\t_temp1.className = 'jstree-icon jstree-ocl';\r\n\t\t\t_temp1.setAttribute('role', 'presentation');\r\n\t\t\t_node.appendChild(_temp1);\r\n\t\t\t_temp1 = document.createElement('A');\r\n\t\t\t_temp1.className = 'jstree-anchor';\r\n\t\t\t_temp1.setAttribute('href','#');\r\n\t\t\t_temp1.setAttribute('tabindex','-1');\r\n\t\t\t_temp2 = document.createElement('I');\r\n\t\t\t_temp2.className = 'jstree-icon jstree-themeicon';\r\n\t\t\t_temp2.setAttribute('role', 'presentation');\r\n\t\t\t_temp1.appendChild(_temp2);\r\n\t\t\t_node.appendChild(_temp1);\r\n\t\t\t_temp1 = _temp2 = null;\r\n\r\n\t\t\treturn _node;\r\n\t\t},\r\n\t\t_kbevent_to_func : function (e) {\r\n\t\t\tvar keys = {\r\n\t\t\t\t8: \"Backspace\", 9: \"Tab\", 13: \"Return\", 19: \"Pause\", 27: \"Esc\",\r\n\t\t\t\t32: \"Space\", 33: \"PageUp\", 34: \"PageDown\", 35: \"End\", 36: \"Home\",\r\n\t\t\t\t37: \"Left\", 38: \"Up\", 39: \"Right\", 40: \"Down\", 44: \"Print\", 45: \"Insert\",\r\n\t\t\t\t46: \"Delete\", 96: \"Numpad0\", 97: \"Numpad1\", 98: \"Numpad2\", 99 : \"Numpad3\",\r\n\t\t\t\t100: \"Numpad4\", 101: \"Numpad5\", 102: \"Numpad6\", 103: \"Numpad7\",\r\n\t\t\t\t104: \"Numpad8\", 105: \"Numpad9\", '-13': \"NumpadEnter\", 112: \"F1\",\r\n\t\t\t\t113: \"F2\", 114: \"F3\", 115: \"F4\", 116: \"F5\", 117: \"F6\", 118: \"F7\",\r\n\t\t\t\t119: \"F8\", 120: \"F9\", 121: \"F10\", 122: \"F11\", 123: \"F12\", 144: \"Numlock\",\r\n\t\t\t\t145: \"Scrolllock\", 16: 'Shift', 17: 'Ctrl', 18: 'Alt',\r\n\t\t\t\t48: '0',  49: '1',  50: '2',  51: '3',  52: '4', 53:  '5',\r\n\t\t\t\t54: '6',  55: '7',  56: '8',  57: '9',  59: ';',  61: '=', 65:  'a',\r\n\t\t\t\t66: 'b',  67: 'c',  68: 'd',  69: 'e',  70: 'f',  71: 'g', 72:  'h',\r\n\t\t\t\t73: 'i',  74: 'j',  75: 'k',  76: 'l',  77: 'm',  78: 'n', 79:  'o',\r\n\t\t\t\t80: 'p',  81: 'q',  82: 'r',  83: 's',  84: 't',  85: 'u', 86:  'v',\r\n\t\t\t\t87: 'w',  88: 'x',  89: 'y',  90: 'z', 107: '+', 109: '-', 110: '.',\r\n\t\t\t\t186: ';', 187: '=', 188: ',', 189: '-', 190: '.', 191: '/', 192: '`',\r\n\t\t\t\t219: '[', 220: '\\\\',221: ']', 222: \"'\", 111: '/', 106: '*', 173: '-'\r\n\t\t\t};\r\n\t\t\tvar parts = [];\r\n\t\t\tif (e.ctrlKey) { parts.push('ctrl'); }\r\n\t\t\tif (e.altKey) { parts.push('alt'); }\r\n\t\t\tif (e.shiftKey) { parts.push('shift'); }\r\n\t\t\tparts.push(keys[e.which] || e.which);\r\n\t\t\tparts = parts.sort().join('-').toLowerCase();\r\n\r\n\t\t\tvar kb = this.settings.core.keyboard, i, tmp;\r\n\t\t\tfor (i in kb) {\r\n\t\t\t\tif (kb.hasOwnProperty(i)) {\r\n\t\t\t\t\ttmp = i;\r\n\t\t\t\t\tif (tmp !== '-' && tmp !== '+') {\r\n\t\t\t\t\t\ttmp = tmp.replace('--', '-MINUS').replace('+-', '-MINUS').replace('++', '-PLUS').replace('-+', '-PLUS');\r\n\t\t\t\t\t\ttmp = tmp.split(/-|\\+/).sort().join('-').replace('MINUS', '-').replace('PLUS', '+').toLowerCase();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (tmp === parts) {\r\n\t\t\t\t\t\treturn kb[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\t/**\r\n\t\t * part of the destroying of an instance. Used internally.\r\n\t\t * @private\r\n\t\t * @name teardown()\r\n\t\t */\r\n\t\tteardown : function () {\r\n\t\t\tthis.unbind();\r\n\t\t\tthis.element\r\n\t\t\t\t.removeClass('jstree')\r\n\t\t\t\t.removeData('jstree')\r\n\t\t\t\t.find(\"[class^='jstree']\")\r\n\t\t\t\t\t.addBack()\r\n\t\t\t\t\t.attr(\"class\", function () { return this.className.replace(/jstree[^ ]*|$/ig,''); });\r\n\t\t\tthis.element = null;\r\n\t\t},\r\n\t\t/**\r\n\t\t * bind all events. Used internally.\r\n\t\t * @private\r\n\t\t * @name bind()\r\n\t\t */\r\n\t\tbind : function () {\r\n\t\t\tvar word = '',\r\n\t\t\t\ttout = null,\r\n\t\t\t\twas_click = 0;\r\n\t\t\tthis.element\r\n\t\t\t\t.on(\"dblclick.jstree\", function (e) {\r\n\t\t\t\t\t\tif(e.target.tagName && e.target.tagName.toLowerCase() === \"input\") { return true; }\r\n\t\t\t\t\t\tif(document.selection && document.selection.empty) {\r\n\t\t\t\t\t\t\tdocument.selection.empty();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tif(window.getSelection) {\r\n\t\t\t\t\t\t\t\tvar sel = window.getSelection();\r\n\t\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\t\tsel.removeAllRanges();\r\n\t\t\t\t\t\t\t\t\tsel.collapse();\r\n\t\t\t\t\t\t\t\t} catch (ignore) { }\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t.on(\"mousedown.jstree\", $.proxy(function (e) {\r\n\t\t\t\t\t\tif(e.target === this.element[0]) {\r\n\t\t\t\t\t\t\te.preventDefault(); // prevent losing focus when clicking scroll arrows (FF, Chrome)\r\n\t\t\t\t\t\t\twas_click = +(new Date()); // ie does not allow to prevent losing focus\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"mousedown.jstree\", \".jstree-ocl\", function (e) {\r\n\t\t\t\t\t\te.preventDefault(); // prevent any node inside from losing focus when clicking the open/close icon\r\n\t\t\t\t\t})\r\n\t\t\t\t.on(\"click.jstree\", \".jstree-ocl\", $.proxy(function (e) {\r\n\t\t\t\t\t\tthis.toggle_node(e.target);\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"dblclick.jstree\", \".jstree-anchor\", $.proxy(function (e) {\r\n\t\t\t\t\t\tif(e.target.tagName && e.target.tagName.toLowerCase() === \"input\") { return true; }\r\n\t\t\t\t\t\tif(this.settings.core.dblclick_toggle) {\r\n\t\t\t\t\t\t\tthis.toggle_node(e.target);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"click.jstree\", \".jstree-anchor\", $.proxy(function (e) {\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\tif(e.currentTarget !== document.activeElement) { $(e.currentTarget).focus(); }\r\n\t\t\t\t\t\tthis.activate_node(e.currentTarget, e);\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on('keydown.jstree', '.jstree-anchor', $.proxy(function (e) {\r\n\t\t\t\t\t\tif(e.target.tagName && e.target.tagName.toLowerCase() === \"input\") { return true; }\r\n\t\t\t\t\t\tif(this._data.core.rtl) {\r\n\t\t\t\t\t\t\tif(e.which === 37) { e.which = 39; }\r\n\t\t\t\t\t\t\telse if(e.which === 39) { e.which = 37; }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar f = this._kbevent_to_func(e);\r\n\t\t\t\t\t\tif (f) {\r\n\t\t\t\t\t\t\tvar r = f.call(this, e);\r\n\t\t\t\t\t\t\tif (r === false || r === true) {\r\n\t\t\t\t\t\t\t\treturn r;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"load_node.jstree\", $.proxy(function (e, data) {\r\n\t\t\t\t\t\tif(data.status) {\r\n\t\t\t\t\t\t\tif(data.node.id === $.jstree.root && !this._data.core.loaded) {\r\n\t\t\t\t\t\t\t\tthis._data.core.loaded = true;\r\n\t\t\t\t\t\t\t\tif(this._firstChild(this.get_container_ul()[0])) {\r\n\t\t\t\t\t\t\t\t\tthis.element.attr('aria-activedescendant',this._firstChild(this.get_container_ul()[0]).id);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t\t\t * triggered after the root node is loaded for the first time\r\n\t\t\t\t\t\t\t\t * @event\r\n\t\t\t\t\t\t\t\t * @name loaded.jstree\r\n\t\t\t\t\t\t\t\t */\r\n\t\t\t\t\t\t\t\tthis.trigger(\"loaded\");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(!this._data.core.ready) {\r\n\t\t\t\t\t\t\t\tsetTimeout($.proxy(function() {\r\n\t\t\t\t\t\t\t\t\tif(this.element && !this.get_container_ul().find('.jstree-loading').length) {\r\n\t\t\t\t\t\t\t\t\t\tthis._data.core.ready = true;\r\n\t\t\t\t\t\t\t\t\t\tif(this._data.core.selected.length) {\r\n\t\t\t\t\t\t\t\t\t\t\tif(this.settings.core.expand_selected_onload) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tvar tmp = [], i, j;\r\n\t\t\t\t\t\t\t\t\t\t\t\tfor(i = 0, j = this._data.core.selected.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttmp = tmp.concat(this._model.data[this._data.core.selected[i]].parents);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttmp = $.vakata.array_unique(tmp);\r\n\t\t\t\t\t\t\t\t\t\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.open_node(tmp[i], false, 0);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tthis.trigger('changed', { 'action' : 'ready', 'selected' : this._data.core.selected });\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t\t\t\t\t * triggered after all nodes are finished loading\r\n\t\t\t\t\t\t\t\t\t\t * @event\r\n\t\t\t\t\t\t\t\t\t\t * @name ready.jstree\r\n\t\t\t\t\t\t\t\t\t\t */\r\n\t\t\t\t\t\t\t\t\t\tthis.trigger(\"ready\");\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}, this), 0);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t// quick searching when the tree is focused\r\n\t\t\t\t.on('keypress.jstree', $.proxy(function (e) {\r\n\t\t\t\t\t\tif(e.target.tagName && e.target.tagName.toLowerCase() === \"input\") { return true; }\r\n\t\t\t\t\t\tif(tout) { clearTimeout(tout); }\r\n\t\t\t\t\t\ttout = setTimeout(function () {\r\n\t\t\t\t\t\t\tword = '';\r\n\t\t\t\t\t\t}, 500);\r\n\r\n\t\t\t\t\t\tvar chr = String.fromCharCode(e.which).toLowerCase(),\r\n\t\t\t\t\t\t\tcol = this.element.find('.jstree-anchor').filter(':visible'),\r\n\t\t\t\t\t\t\tind = col.index(document.activeElement) || 0,\r\n\t\t\t\t\t\t\tend = false;\r\n\t\t\t\t\t\tword += chr;\r\n\r\n\t\t\t\t\t\t// match for whole word from current node down (including the current node)\r\n\t\t\t\t\t\tif(word.length > 1) {\r\n\t\t\t\t\t\t\tcol.slice(ind).each($.proxy(function (i, v) {\r\n\t\t\t\t\t\t\t\tif($(v).text().toLowerCase().indexOf(word) === 0) {\r\n\t\t\t\t\t\t\t\t\t$(v).focus();\r\n\t\t\t\t\t\t\t\t\tend = true;\r\n\t\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}, this));\r\n\t\t\t\t\t\t\tif(end) { return; }\r\n\r\n\t\t\t\t\t\t\t// match for whole word from the beginning of the tree\r\n\t\t\t\t\t\t\tcol.slice(0, ind).each($.proxy(function (i, v) {\r\n\t\t\t\t\t\t\t\tif($(v).text().toLowerCase().indexOf(word) === 0) {\r\n\t\t\t\t\t\t\t\t\t$(v).focus();\r\n\t\t\t\t\t\t\t\t\tend = true;\r\n\t\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}, this));\r\n\t\t\t\t\t\t\tif(end) { return; }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// list nodes that start with that letter (only if word consists of a single char)\r\n\t\t\t\t\t\tif(new RegExp('^' + chr.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&') + '+$').test(word)) {\r\n\t\t\t\t\t\t\t// search for the next node starting with that letter\r\n\t\t\t\t\t\t\tcol.slice(ind + 1).each($.proxy(function (i, v) {\r\n\t\t\t\t\t\t\t\tif($(v).text().toLowerCase().charAt(0) === chr) {\r\n\t\t\t\t\t\t\t\t\t$(v).focus();\r\n\t\t\t\t\t\t\t\t\tend = true;\r\n\t\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}, this));\r\n\t\t\t\t\t\t\tif(end) { return; }\r\n\r\n\t\t\t\t\t\t\t// search from the beginning\r\n\t\t\t\t\t\t\tcol.slice(0, ind + 1).each($.proxy(function (i, v) {\r\n\t\t\t\t\t\t\t\tif($(v).text().toLowerCase().charAt(0) === chr) {\r\n\t\t\t\t\t\t\t\t\t$(v).focus();\r\n\t\t\t\t\t\t\t\t\tend = true;\r\n\t\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}, this));\r\n\t\t\t\t\t\t\tif(end) { return; }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t// THEME RELATED\r\n\t\t\t\t.on(\"init.jstree\", $.proxy(function () {\r\n\t\t\t\t\t\tvar s = this.settings.core.themes;\r\n\t\t\t\t\t\tthis._data.core.themes.dots\t\t\t= s.dots;\r\n\t\t\t\t\t\tthis._data.core.themes.stripes\t\t= s.stripes;\r\n\t\t\t\t\t\tthis._data.core.themes.icons\t\t= s.icons;\r\n\t\t\t\t\t\tthis._data.core.themes.ellipsis\t\t= s.ellipsis;\r\n\t\t\t\t\t\tthis.set_theme(s.name || \"default\", s.url);\r\n\t\t\t\t\t\tthis.set_theme_variant(s.variant);\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"loading.jstree\", $.proxy(function () {\r\n\t\t\t\t\t\tthis[ this._data.core.themes.dots ? \"show_dots\" : \"hide_dots\" ]();\r\n\t\t\t\t\t\tthis[ this._data.core.themes.icons ? \"show_icons\" : \"hide_icons\" ]();\r\n\t\t\t\t\t\tthis[ this._data.core.themes.stripes ? \"show_stripes\" : \"hide_stripes\" ]();\r\n\t\t\t\t\t\tthis[ this._data.core.themes.ellipsis ? \"show_ellipsis\" : \"hide_ellipsis\" ]();\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on('blur.jstree', '.jstree-anchor', $.proxy(function (e) {\r\n\t\t\t\t\t\tthis._data.core.focused = null;\r\n\t\t\t\t\t\t$(e.currentTarget).filter('.jstree-hovered').mouseleave();\r\n\t\t\t\t\t\tthis.element.attr('tabindex', '0');\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on('focus.jstree', '.jstree-anchor', $.proxy(function (e) {\r\n\t\t\t\t\t\tvar tmp = this.get_node(e.currentTarget);\r\n\t\t\t\t\t\tif(tmp && tmp.id) {\r\n\t\t\t\t\t\t\tthis._data.core.focused = tmp.id;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.element.find('.jstree-hovered').not(e.currentTarget).mouseleave();\r\n\t\t\t\t\t\t$(e.currentTarget).mouseenter();\r\n\t\t\t\t\t\tthis.element.attr('tabindex', '-1');\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on('focus.jstree', $.proxy(function () {\r\n\t\t\t\t\t\tif(+(new Date()) - was_click > 500 && !this._data.core.focused && this.settings.core.restore_focus) {\r\n\t\t\t\t\t\t\twas_click = 0;\r\n\t\t\t\t\t\t\tvar act = this.get_node(this.element.attr('aria-activedescendant'), true);\r\n\t\t\t\t\t\t\tif(act) {\r\n\t\t\t\t\t\t\t\tact.find('> .jstree-anchor').focus();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on('mouseenter.jstree', '.jstree-anchor', $.proxy(function (e) {\r\n\t\t\t\t\t\tthis.hover_node(e.currentTarget);\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on('mouseleave.jstree', '.jstree-anchor', $.proxy(function (e) {\r\n\t\t\t\t\t\tthis.dehover_node(e.currentTarget);\r\n\t\t\t\t\t}, this));\r\n\t\t},\r\n\t\t/**\r\n\t\t * part of the destroying of an instance. Used internally.\r\n\t\t * @private\r\n\t\t * @name unbind()\r\n\t\t */\r\n\t\tunbind : function () {\r\n\t\t\tthis.element.off('.jstree');\r\n\t\t\t$(document).off('.jstree-' + this._id);\r\n\t\t},\r\n\t\t/**\r\n\t\t * trigger an event. Used internally.\r\n\t\t * @private\r\n\t\t * @name trigger(ev [, data])\r\n\t\t * @param  {String} ev the name of the event to trigger\r\n\t\t * @param  {Object} data additional data to pass with the event\r\n\t\t */\r\n\t\ttrigger : function (ev, data) {\r\n\t\t\tif(!data) {\r\n\t\t\t\tdata = {};\r\n\t\t\t}\r\n\t\t\tdata.instance = this;\r\n\t\t\tthis.element.trigger(ev.replace('.jstree','') + '.jstree', data);\r\n\t\t},\r\n\t\t/**\r\n\t\t * returns the jQuery extended instance container\r\n\t\t * @name get_container()\r\n\t\t * @return {jQuery}\r\n\t\t */\r\n\t\tget_container : function () {\r\n\t\t\treturn this.element;\r\n\t\t},\r\n\t\t/**\r\n\t\t * returns the jQuery extended main UL node inside the instance container. Used internally.\r\n\t\t * @private\r\n\t\t * @name get_container_ul()\r\n\t\t * @return {jQuery}\r\n\t\t */\r\n\t\tget_container_ul : function () {\r\n\t\t\treturn this.element.children(\".jstree-children\").first();\r\n\t\t},\r\n\t\t/**\r\n\t\t * gets string replacements (localization). Used internally.\r\n\t\t * @private\r\n\t\t * @name get_string(key)\r\n\t\t * @param  {String} key\r\n\t\t * @return {String}\r\n\t\t */\r\n\t\tget_string : function (key) {\r\n\t\t\tvar a = this.settings.core.strings;\r\n\t\t\tif($.isFunction(a)) { return a.call(this, key); }\r\n\t\t\tif(a && a[key]) { return a[key]; }\r\n\t\t\treturn key;\r\n\t\t},\r\n\t\t/**\r\n\t\t * gets the first child of a DOM node. Used internally.\r\n\t\t * @private\r\n\t\t * @name _firstChild(dom)\r\n\t\t * @param  {DOMElement} dom\r\n\t\t * @return {DOMElement}\r\n\t\t */\r\n\t\t_firstChild : function (dom) {\r\n\t\t\tdom = dom ? dom.firstChild : null;\r\n\t\t\twhile(dom !== null && dom.nodeType !== 1) {\r\n\t\t\t\tdom = dom.nextSibling;\r\n\t\t\t}\r\n\t\t\treturn dom;\r\n\t\t},\r\n\t\t/**\r\n\t\t * gets the next sibling of a DOM node. Used internally.\r\n\t\t * @private\r\n\t\t * @name _nextSibling(dom)\r\n\t\t * @param  {DOMElement} dom\r\n\t\t * @return {DOMElement}\r\n\t\t */\r\n\t\t_nextSibling : function (dom) {\r\n\t\t\tdom = dom ? dom.nextSibling : null;\r\n\t\t\twhile(dom !== null && dom.nodeType !== 1) {\r\n\t\t\t\tdom = dom.nextSibling;\r\n\t\t\t}\r\n\t\t\treturn dom;\r\n\t\t},\r\n\t\t/**\r\n\t\t * gets the previous sibling of a DOM node. Used internally.\r\n\t\t * @private\r\n\t\t * @name _previousSibling(dom)\r\n\t\t * @param  {DOMElement} dom\r\n\t\t * @return {DOMElement}\r\n\t\t */\r\n\t\t_previousSibling : function (dom) {\r\n\t\t\tdom = dom ? dom.previousSibling : null;\r\n\t\t\twhile(dom !== null && dom.nodeType !== 1) {\r\n\t\t\t\tdom = dom.previousSibling;\r\n\t\t\t}\r\n\t\t\treturn dom;\r\n\t\t},\r\n\t\t/**\r\n\t\t * get the JSON representation of a node (or the actual jQuery extended DOM node) by using any input (child DOM element, ID string, selector, etc)\r\n\t\t * @name get_node(obj [, as_dom])\r\n\t\t * @param  {mixed} obj\r\n\t\t * @param  {Boolean} as_dom\r\n\t\t * @return {Object|jQuery}\r\n\t\t */\r\n\t\tget_node : function (obj, as_dom) {\r\n\t\t\tif(obj && obj.id) {\r\n\t\t\t\tobj = obj.id;\r\n\t\t\t}\r\n\t\t\tvar dom;\r\n\t\t\ttry {\r\n\t\t\t\tif(this._model.data[obj]) {\r\n\t\t\t\t\tobj = this._model.data[obj];\r\n\t\t\t\t}\r\n\t\t\t\telse if(typeof obj === \"string\" && this._model.data[obj.replace(/^#/, '')]) {\r\n\t\t\t\t\tobj = this._model.data[obj.replace(/^#/, '')];\r\n\t\t\t\t}\r\n\t\t\t\telse if(typeof obj === \"string\" && (dom = $('#' + obj.replace($.jstree.idregex,'\\\\$&'), this.element)).length && this._model.data[dom.closest('.jstree-node').attr('id')]) {\r\n\t\t\t\t\tobj = this._model.data[dom.closest('.jstree-node').attr('id')];\r\n\t\t\t\t}\r\n\t\t\t\telse if((dom = $(obj, this.element)).length && this._model.data[dom.closest('.jstree-node').attr('id')]) {\r\n\t\t\t\t\tobj = this._model.data[dom.closest('.jstree-node').attr('id')];\r\n\t\t\t\t}\r\n\t\t\t\telse if((dom = $(obj, this.element)).length && dom.hasClass('jstree')) {\r\n\t\t\t\t\tobj = this._model.data[$.jstree.root];\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(as_dom) {\r\n\t\t\t\t\tobj = obj.id === $.jstree.root ? this.element : $('#' + obj.id.replace($.jstree.idregex,'\\\\$&'), this.element);\r\n\t\t\t\t}\r\n\t\t\t\treturn obj;\r\n\t\t\t} catch (ex) { return false; }\r\n\t\t},\r\n\t\t/**\r\n\t\t * get the path to a node, either consisting of node texts, or of node IDs, optionally glued together (otherwise an array)\r\n\t\t * @name get_path(obj [, glue, ids])\r\n\t\t * @param  {mixed} obj the node\r\n\t\t * @param  {String} glue if you want the path as a string - pass the glue here (for example '/'), if a falsy value is supplied here, an array is returned\r\n\t\t * @param  {Boolean} ids if set to true build the path using ID, otherwise node text is used\r\n\t\t * @return {mixed}\r\n\t\t */\r\n\t\tget_path : function (obj, glue, ids) {\r\n\t\t\tobj = obj.parents ? obj : this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root || !obj.parents) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvar i, j, p = [];\r\n\t\t\tp.push(ids ? obj.id : obj.text);\r\n\t\t\tfor(i = 0, j = obj.parents.length; i < j; i++) {\r\n\t\t\t\tp.push(ids ? obj.parents[i] : this.get_text(obj.parents[i]));\r\n\t\t\t}\r\n\t\t\tp = p.reverse().slice(1);\r\n\t\t\treturn glue ? p.join(glue) : p;\r\n\t\t},\r\n\t\t/**\r\n\t\t * get the next visible node that is below the `obj` node. If `strict` is set to `true` only sibling nodes are returned.\r\n\t\t * @name get_next_dom(obj [, strict])\r\n\t\t * @param  {mixed} obj\r\n\t\t * @param  {Boolean} strict\r\n\t\t * @return {jQuery}\r\n\t\t */\r\n\t\tget_next_dom : function (obj, strict) {\r\n\t\t\tvar tmp;\r\n\t\t\tobj = this.get_node(obj, true);\r\n\t\t\tif(obj[0] === this.element[0]) {\r\n\t\t\t\ttmp = this._firstChild(this.get_container_ul()[0]);\r\n\t\t\t\twhile (tmp && tmp.offsetHeight === 0) {\r\n\t\t\t\t\ttmp = this._nextSibling(tmp);\r\n\t\t\t\t}\r\n\t\t\t\treturn tmp ? $(tmp) : false;\r\n\t\t\t}\r\n\t\t\tif(!obj || !obj.length) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(strict) {\r\n\t\t\t\ttmp = obj[0];\r\n\t\t\t\tdo {\r\n\t\t\t\t\ttmp = this._nextSibling(tmp);\r\n\t\t\t\t} while (tmp && tmp.offsetHeight === 0);\r\n\t\t\t\treturn tmp ? $(tmp) : false;\r\n\t\t\t}\r\n\t\t\tif(obj.hasClass(\"jstree-open\")) {\r\n\t\t\t\ttmp = this._firstChild(obj.children('.jstree-children')[0]);\r\n\t\t\t\twhile (tmp && tmp.offsetHeight === 0) {\r\n\t\t\t\t\ttmp = this._nextSibling(tmp);\r\n\t\t\t\t}\r\n\t\t\t\tif(tmp !== null) {\r\n\t\t\t\t\treturn $(tmp);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ttmp = obj[0];\r\n\t\t\tdo {\r\n\t\t\t\ttmp = this._nextSibling(tmp);\r\n\t\t\t} while (tmp && tmp.offsetHeight === 0);\r\n\t\t\tif(tmp !== null) {\r\n\t\t\t\treturn $(tmp);\r\n\t\t\t}\r\n\t\t\treturn obj.parentsUntil(\".jstree\",\".jstree-node\").nextAll(\".jstree-node:visible\").first();\r\n\t\t},\r\n\t\t/**\r\n\t\t * get the previous visible node that is above the `obj` node. If `strict` is set to `true` only sibling nodes are returned.\r\n\t\t * @name get_prev_dom(obj [, strict])\r\n\t\t * @param  {mixed} obj\r\n\t\t * @param  {Boolean} strict\r\n\t\t * @return {jQuery}\r\n\t\t */\r\n\t\tget_prev_dom : function (obj, strict) {\r\n\t\t\tvar tmp;\r\n\t\t\tobj = this.get_node(obj, true);\r\n\t\t\tif(obj[0] === this.element[0]) {\r\n\t\t\t\ttmp = this.get_container_ul()[0].lastChild;\r\n\t\t\t\twhile (tmp && tmp.offsetHeight === 0) {\r\n\t\t\t\t\ttmp = this._previousSibling(tmp);\r\n\t\t\t\t}\r\n\t\t\t\treturn tmp ? $(tmp) : false;\r\n\t\t\t}\r\n\t\t\tif(!obj || !obj.length) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(strict) {\r\n\t\t\t\ttmp = obj[0];\r\n\t\t\t\tdo {\r\n\t\t\t\t\ttmp = this._previousSibling(tmp);\r\n\t\t\t\t} while (tmp && tmp.offsetHeight === 0);\r\n\t\t\t\treturn tmp ? $(tmp) : false;\r\n\t\t\t}\r\n\t\t\ttmp = obj[0];\r\n\t\t\tdo {\r\n\t\t\t\ttmp = this._previousSibling(tmp);\r\n\t\t\t} while (tmp && tmp.offsetHeight === 0);\r\n\t\t\tif(tmp !== null) {\r\n\t\t\t\tobj = $(tmp);\r\n\t\t\t\twhile(obj.hasClass(\"jstree-open\")) {\r\n\t\t\t\t\tobj = obj.children(\".jstree-children\").first().children(\".jstree-node:visible:last\");\r\n\t\t\t\t}\r\n\t\t\t\treturn obj;\r\n\t\t\t}\r\n\t\t\ttmp = obj[0].parentNode.parentNode;\r\n\t\t\treturn tmp && tmp.className && tmp.className.indexOf('jstree-node') !== -1 ? $(tmp) : false;\r\n\t\t},\r\n\t\t/**\r\n\t\t * get the parent ID of a node\r\n\t\t * @name get_parent(obj)\r\n\t\t * @param  {mixed} obj\r\n\t\t * @return {String}\r\n\t\t */\r\n\t\tget_parent : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn obj.parent;\r\n\t\t},\r\n\t\t/**\r\n\t\t * get a jQuery collection of all the children of a node (node must be rendered), returns false on error\r\n\t\t * @name get_children_dom(obj)\r\n\t\t * @param  {mixed} obj\r\n\t\t * @return {jQuery}\r\n\t\t */\r\n\t\tget_children_dom : function (obj) {\r\n\t\t\tobj = this.get_node(obj, true);\r\n\t\t\tif(obj[0] === this.element[0]) {\r\n\t\t\t\treturn this.get_container_ul().children(\".jstree-node\");\r\n\t\t\t}\r\n\t\t\tif(!obj || !obj.length) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn obj.children(\".jstree-children\").children(\".jstree-node\");\r\n\t\t},\r\n\t\t/**\r\n\t\t * checks if a node has children\r\n\t\t * @name is_parent(obj)\r\n\t\t * @param  {mixed} obj\r\n\t\t * @return {Boolean}\r\n\t\t */\r\n\t\tis_parent : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\treturn obj && (obj.state.loaded === false || obj.children.length > 0);\r\n\t\t},\r\n\t\t/**\r\n\t\t * checks if a node is loaded (its children are available)\r\n\t\t * @name is_loaded(obj)\r\n\t\t * @param  {mixed} obj\r\n\t\t * @return {Boolean}\r\n\t\t */\r\n\t\tis_loaded : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\treturn obj && obj.state.loaded;\r\n\t\t},\r\n\t\t/**\r\n\t\t * check if a node is currently loading (fetching children)\r\n\t\t * @name is_loading(obj)\r\n\t\t * @param  {mixed} obj\r\n\t\t * @return {Boolean}\r\n\t\t */\r\n\t\tis_loading : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\treturn obj && obj.state && obj.state.loading;\r\n\t\t},\r\n\t\t/**\r\n\t\t * check if a node is opened\r\n\t\t * @name is_open(obj)\r\n\t\t * @param  {mixed} obj\r\n\t\t * @return {Boolean}\r\n\t\t */\r\n\t\tis_open : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\treturn obj && obj.state.opened;\r\n\t\t},\r\n\t\t/**\r\n\t\t * check if a node is in a closed state\r\n\t\t * @name is_closed(obj)\r\n\t\t * @param  {mixed} obj\r\n\t\t * @return {Boolean}\r\n\t\t */\r\n\t\tis_closed : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\treturn obj && this.is_parent(obj) && !obj.state.opened;\r\n\t\t},\r\n\t\t/**\r\n\t\t * check if a node has no children\r\n\t\t * @name is_leaf(obj)\r\n\t\t * @param  {mixed} obj\r\n\t\t * @return {Boolean}\r\n\t\t */\r\n\t\tis_leaf : function (obj) {\r\n\t\t\treturn !this.is_parent(obj);\r\n\t\t},\r\n\t\t/**\r\n\t\t * loads a node (fetches its children using the `core.data` setting). Multiple nodes can be passed to by using an array.\r\n\t\t * @name load_node(obj [, callback])\r\n\t\t * @param  {mixed} obj\r\n\t\t * @param  {function} callback a function to be executed once loading is complete, the function is executed in the instance's scope and receives two arguments - the node and a boolean status\r\n\t\t * @return {Boolean}\r\n\t\t * @trigger load_node.jstree\r\n\t\t */\r\n\t\tload_node : function (obj, callback) {\r\n\t\t\tvar k, l, i, j, c;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tthis._load_nodes(obj.slice(), callback);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj) {\r\n\t\t\t\tif(callback) { callback.call(this, obj, false); }\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t// if(obj.state.loading) { } // the node is already loading - just wait for it to load and invoke callback? but if called implicitly it should be loaded again?\r\n\t\t\tif(obj.state.loaded) {\r\n\t\t\t\tobj.state.loaded = false;\r\n\t\t\t\tfor(i = 0, j = obj.parents.length; i < j; i++) {\r\n\t\t\t\t\tthis._model.data[obj.parents[i]].children_d = $.vakata.array_filter(this._model.data[obj.parents[i]].children_d, function (v) {\r\n\t\t\t\t\t\treturn $.inArray(v, obj.children_d) === -1;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tfor(k = 0, l = obj.children_d.length; k < l; k++) {\r\n\t\t\t\t\tif(this._model.data[obj.children_d[k]].state.selected) {\r\n\t\t\t\t\t\tc = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdelete this._model.data[obj.children_d[k]];\r\n\t\t\t\t}\r\n\t\t\t\tif (c) {\r\n\t\t\t\t\tthis._data.core.selected = $.vakata.array_filter(this._data.core.selected, function (v) {\r\n\t\t\t\t\t\treturn $.inArray(v, obj.children_d) === -1;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tobj.children = [];\r\n\t\t\t\tobj.children_d = [];\r\n\t\t\t\tif(c) {\r\n\t\t\t\t\tthis.trigger('changed', { 'action' : 'load_node', 'node' : obj, 'selected' : this._data.core.selected });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tobj.state.failed = false;\r\n\t\t\tobj.state.loading = true;\r\n\t\t\tthis.get_node(obj, true).addClass(\"jstree-loading\").attr('aria-busy',true);\r\n\t\t\tthis._load_node(obj, $.proxy(function (status) {\r\n\t\t\t\tobj = this._model.data[obj.id];\r\n\t\t\t\tobj.state.loading = false;\r\n\t\t\t\tobj.state.loaded = status;\r\n\t\t\t\tobj.state.failed = !obj.state.loaded;\r\n\t\t\t\tvar dom = this.get_node(obj, true), i = 0, j = 0, m = this._model.data, has_children = false;\r\n\t\t\t\tfor(i = 0, j = obj.children.length; i < j; i++) {\r\n\t\t\t\t\tif(m[obj.children[i]] && !m[obj.children[i]].state.hidden) {\r\n\t\t\t\t\t\thas_children = true;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(obj.state.loaded && dom && dom.length) {\r\n\t\t\t\t\tdom.removeClass('jstree-closed jstree-open jstree-leaf');\r\n\t\t\t\t\tif (!has_children) {\r\n\t\t\t\t\t\tdom.addClass('jstree-leaf');\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tif (obj.id !== '#') {\r\n\t\t\t\t\t\t\tdom.addClass(obj.state.opened ? 'jstree-open' : 'jstree-closed');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tdom.removeClass(\"jstree-loading\").attr('aria-busy',false);\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered after a node is loaded\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name load_node.jstree\r\n\t\t\t\t * @param {Object} node the node that was loading\r\n\t\t\t\t * @param {Boolean} status was the node loaded successfully\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('load_node', { \"node\" : obj, \"status\" : status });\r\n\t\t\t\tif(callback) {\r\n\t\t\t\t\tcallback.call(this, obj, status);\r\n\t\t\t\t}\r\n\t\t\t}, this));\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\t/**\r\n\t\t * load an array of nodes (will also load unavailable nodes as soon as the appear in the structure). Used internally.\r\n\t\t * @private\r\n\t\t * @name _load_nodes(nodes [, callback])\r\n\t\t * @param  {array} nodes\r\n\t\t * @param  {function} callback a function to be executed once loading is complete, the function is executed in the instance's scope and receives one argument - the array passed to _load_nodes\r\n\t\t */\r\n\t\t_load_nodes : function (nodes, callback, is_callback, force_reload) {\r\n\t\t\tvar r = true,\r\n\t\t\t\tc = function () { this._load_nodes(nodes, callback, true); },\r\n\t\t\t\tm = this._model.data, i, j, tmp = [];\r\n\t\t\tfor(i = 0, j = nodes.length; i < j; i++) {\r\n\t\t\t\tif(m[nodes[i]] && ( (!m[nodes[i]].state.loaded && !m[nodes[i]].state.failed) || (!is_callback && force_reload) )) {\r\n\t\t\t\t\tif(!this.is_loading(nodes[i])) {\r\n\t\t\t\t\t\tthis.load_node(nodes[i], c);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tr = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(r) {\r\n\t\t\t\tfor(i = 0, j = nodes.length; i < j; i++) {\r\n\t\t\t\t\tif(m[nodes[i]] && m[nodes[i]].state.loaded) {\r\n\t\t\t\t\t\ttmp.push(nodes[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(callback && !callback.done) {\r\n\t\t\t\t\tcallback.call(this, tmp);\r\n\t\t\t\t\tcallback.done = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * loads all unloaded nodes\r\n\t\t * @name load_all([obj, callback])\r\n\t\t * @param {mixed} obj the node to load recursively, omit to load all nodes in the tree\r\n\t\t * @param {function} callback a function to be executed once loading all the nodes is complete,\r\n\t\t * @trigger load_all.jstree\r\n\t\t */\r\n\t\tload_all : function (obj, callback) {\r\n\t\t\tif(!obj) { obj = $.jstree.root; }\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj) { return false; }\r\n\t\t\tvar to_load = [],\r\n\t\t\t\tm = this._model.data,\r\n\t\t\t\tc = m[obj.id].children_d,\r\n\t\t\t\ti, j;\r\n\t\t\tif(obj.state && !obj.state.loaded) {\r\n\t\t\t\tto_load.push(obj.id);\r\n\t\t\t}\r\n\t\t\tfor(i = 0, j = c.length; i < j; i++) {\r\n\t\t\t\tif(m[c[i]] && m[c[i]].state && !m[c[i]].state.loaded) {\r\n\t\t\t\t\tto_load.push(c[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(to_load.length) {\r\n\t\t\t\tthis._load_nodes(to_load, function () {\r\n\t\t\t\t\tthis.load_all(obj, callback);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered after a load_all call completes\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name load_all.jstree\r\n\t\t\t\t * @param {Object} node the recursively loaded node\r\n\t\t\t\t */\r\n\t\t\t\tif(callback) { callback.call(this, obj); }\r\n\t\t\t\tthis.trigger('load_all', { \"node\" : obj });\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * handles the actual loading of a node. Used only internally.\r\n\t\t * @private\r\n\t\t * @name _load_node(obj [, callback])\r\n\t\t * @param  {mixed} obj\r\n\t\t * @param  {function} callback a function to be executed once loading is complete, the function is executed in the instance's scope and receives one argument - a boolean status\r\n\t\t * @return {Boolean}\r\n\t\t */\r\n\t\t_load_node : function (obj, callback) {\r\n\t\t\tvar s = this.settings.core.data, t;\r\n\t\t\tvar notTextOrCommentNode = function notTextOrCommentNode () {\r\n\t\t\t\treturn this.nodeType !== 3 && this.nodeType !== 8;\r\n\t\t\t};\r\n\t\t\t// use original HTML\r\n\t\t\tif(!s) {\r\n\t\t\t\tif(obj.id === $.jstree.root) {\r\n\t\t\t\t\treturn this._append_html_data(obj, this._data.core.original_container_html.clone(true), function (status) {\r\n\t\t\t\t\t\tcallback.call(this, status);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\treturn callback.call(this, false);\r\n\t\t\t\t}\r\n\t\t\t\t// return callback.call(this, obj.id === $.jstree.root ? this._append_html_data(obj, this._data.core.original_container_html.clone(true)) : false);\r\n\t\t\t}\r\n\t\t\tif($.isFunction(s)) {\r\n\t\t\t\treturn s.call(this, obj, $.proxy(function (d) {\r\n\t\t\t\t\tif(d === false) {\r\n\t\t\t\t\t\tcallback.call(this, false);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis[typeof d === 'string' ? '_append_html_data' : '_append_json_data'](obj, typeof d === 'string' ? $($.parseHTML(d)).filter(notTextOrCommentNode) : d, function (status) {\r\n\t\t\t\t\t\t\tcallback.call(this, status);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// return d === false ? callback.call(this, false) : callback.call(this, this[typeof d === 'string' ? '_append_html_data' : '_append_json_data'](obj, typeof d === 'string' ? $(d) : d));\r\n\t\t\t\t}, this));\r\n\t\t\t}\r\n\t\t\tif(typeof s === 'object') {\r\n\t\t\t\tif(s.url) {\r\n\t\t\t\t\ts = $.extend(true, {}, s);\r\n\t\t\t\t\tif($.isFunction(s.url)) {\r\n\t\t\t\t\t\ts.url = s.url.call(this, obj);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif($.isFunction(s.data)) {\r\n\t\t\t\t\t\ts.data = s.data.call(this, obj);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn $.ajax(s)\r\n\t\t\t\t\t\t.done($.proxy(function (d,t,x) {\r\n\t\t\t\t\t\t\t\tvar type = x.getResponseHeader('Content-Type');\r\n\t\t\t\t\t\t\t\tif((type && type.indexOf('json') !== -1) || typeof d === \"object\") {\r\n\t\t\t\t\t\t\t\t\treturn this._append_json_data(obj, d, function (status) { callback.call(this, status); });\r\n\t\t\t\t\t\t\t\t\t//return callback.call(this, this._append_json_data(obj, d));\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif((type && type.indexOf('html') !== -1) || typeof d === \"string\") {\r\n\t\t\t\t\t\t\t\t\treturn this._append_html_data(obj, $($.parseHTML(d)).filter(notTextOrCommentNode), function (status) { callback.call(this, status); });\r\n\t\t\t\t\t\t\t\t\t// return callback.call(this, this._append_html_data(obj, $(d)));\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'ajax', 'plugin' : 'core', 'id' : 'core_04', 'reason' : 'Could not load node', 'data' : JSON.stringify({ 'id' : obj.id, 'xhr' : x }) };\r\n\t\t\t\t\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\r\n\t\t\t\t\t\t\t\treturn callback.call(this, false);\r\n\t\t\t\t\t\t\t}, this))\r\n\t\t\t\t\t\t.fail($.proxy(function (f) {\r\n\t\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'ajax', 'plugin' : 'core', 'id' : 'core_04', 'reason' : 'Could not load node', 'data' : JSON.stringify({ 'id' : obj.id, 'xhr' : f }) };\r\n\t\t\t\t\t\t\t\tcallback.call(this, false);\r\n\t\t\t\t\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\r\n\t\t\t\t\t\t\t}, this));\r\n\t\t\t\t}\r\n\t\t\t\tif ($.isArray(s)) {\r\n\t\t\t\t\tt = $.extend(true, [], s);\r\n\t\t\t\t} else if ($.isPlainObject(s)) {\r\n\t\t\t\t\tt = $.extend(true, {}, s);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tt = s;\r\n\t\t\t\t}\r\n\t\t\t\tif(obj.id === $.jstree.root) {\r\n\t\t\t\t\treturn this._append_json_data(obj, t, function (status) {\r\n\t\t\t\t\t\tcallback.call(this, status);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._data.core.last_error = { 'error' : 'nodata', 'plugin' : 'core', 'id' : 'core_05', 'reason' : 'Could not load node', 'data' : JSON.stringify({ 'id' : obj.id }) };\r\n\t\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\r\n\t\t\t\t\treturn callback.call(this, false);\r\n\t\t\t\t}\r\n\t\t\t\t//return callback.call(this, (obj.id === $.jstree.root ? this._append_json_data(obj, t) : false) );\r\n\t\t\t}\r\n\t\t\tif(typeof s === 'string') {\r\n\t\t\t\tif(obj.id === $.jstree.root) {\r\n\t\t\t\t\treturn this._append_html_data(obj, $($.parseHTML(s)).filter(notTextOrCommentNode), function (status) {\r\n\t\t\t\t\t\tcallback.call(this, status);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._data.core.last_error = { 'error' : 'nodata', 'plugin' : 'core', 'id' : 'core_06', 'reason' : 'Could not load node', 'data' : JSON.stringify({ 'id' : obj.id }) };\r\n\t\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\r\n\t\t\t\t\treturn callback.call(this, false);\r\n\t\t\t\t}\r\n\t\t\t\t//return callback.call(this, (obj.id === $.jstree.root ? this._append_html_data(obj, $(s)) : false) );\r\n\t\t\t}\r\n\t\t\treturn callback.call(this, false);\r\n\t\t},\r\n\t\t/**\r\n\t\t * adds a node to the list of nodes to redraw. Used only internally.\r\n\t\t * @private\r\n\t\t * @name _node_changed(obj [, callback])\r\n\t\t * @param  {mixed} obj\r\n\t\t */\r\n\t\t_node_changed : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n      if (obj && $.inArray(obj.id, this._model.changed) === -1) {\r\n\t\t\t\tthis._model.changed.push(obj.id);\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * appends HTML content to the tree. Used internally.\r\n\t\t * @private\r\n\t\t * @name _append_html_data(obj, data)\r\n\t\t * @param  {mixed} obj the node to append to\r\n\t\t * @param  {String} data the HTML string to parse and append\r\n\t\t * @trigger model.jstree, changed.jstree\r\n\t\t */\r\n\t\t_append_html_data : function (dom, data, cb) {\r\n\t\t\tdom = this.get_node(dom);\r\n\t\t\tdom.children = [];\r\n\t\t\tdom.children_d = [];\r\n\t\t\tvar dat = data.is('ul') ? data.children() : data,\r\n\t\t\t\tpar = dom.id,\r\n\t\t\t\tchd = [],\r\n\t\t\t\tdpc = [],\r\n\t\t\t\tm = this._model.data,\r\n\t\t\t\tp = m[par],\r\n\t\t\t\ts = this._data.core.selected.length,\r\n\t\t\t\ttmp, i, j;\r\n\t\t\tdat.each($.proxy(function (i, v) {\r\n\t\t\t\ttmp = this._parse_model_from_html($(v), par, p.parents.concat());\r\n\t\t\t\tif(tmp) {\r\n\t\t\t\t\tchd.push(tmp);\r\n\t\t\t\t\tdpc.push(tmp);\r\n\t\t\t\t\tif(m[tmp].children_d.length) {\r\n\t\t\t\t\t\tdpc = dpc.concat(m[tmp].children_d);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}, this));\r\n\t\t\tp.children = chd;\r\n\t\t\tp.children_d = dpc;\r\n\t\t\tfor(i = 0, j = p.parents.length; i < j; i++) {\r\n\t\t\t\tm[p.parents[i]].children_d = m[p.parents[i]].children_d.concat(dpc);\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * triggered when new data is inserted to the tree model\r\n\t\t\t * @event\r\n\t\t\t * @name model.jstree\r\n\t\t\t * @param {Array} nodes an array of node IDs\r\n\t\t\t * @param {String} parent the parent ID of the nodes\r\n\t\t\t */\r\n\t\t\tthis.trigger('model', { \"nodes\" : dpc, 'parent' : par });\r\n\t\t\tif(par !== $.jstree.root) {\r\n\t\t\t\tthis._node_changed(par);\r\n\t\t\t\tthis.redraw();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.get_container_ul().children('.jstree-initial-node').remove();\r\n\t\t\t\tthis.redraw(true);\r\n\t\t\t}\r\n\t\t\tif(this._data.core.selected.length !== s) {\r\n\t\t\t\tthis.trigger('changed', { 'action' : 'model', 'selected' : this._data.core.selected });\r\n\t\t\t}\r\n\t\t\tcb.call(this, true);\r\n\t\t},\r\n\t\t/**\r\n\t\t * appends JSON content to the tree. Used internally.\r\n\t\t * @private\r\n\t\t * @name _append_json_data(obj, data)\r\n\t\t * @param  {mixed} obj the node to append to\r\n\t\t * @param  {String} data the JSON object to parse and append\r\n\t\t * @param  {Boolean} force_processing internal param - do not set\r\n\t\t * @trigger model.jstree, changed.jstree\r\n\t\t */\r\n\t\t_append_json_data : function (dom, data, cb, force_processing) {\r\n\t\t\tif(this.element === null) { return; }\r\n\t\t\tdom = this.get_node(dom);\r\n\t\t\tdom.children = [];\r\n\t\t\tdom.children_d = [];\r\n\t\t\t// *%$@!!!\r\n\t\t\tif(data.d) {\r\n\t\t\t\tdata = data.d;\r\n\t\t\t\tif(typeof data === \"string\") {\r\n\t\t\t\t\tdata = JSON.parse(data);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(!$.isArray(data)) { data = [data]; }\r\n\t\t\tvar w = null,\r\n\t\t\t\targs = {\r\n\t\t\t\t\t'df'\t: this._model.default_state,\r\n\t\t\t\t\t'dat'\t: data,\r\n\t\t\t\t\t'par'\t: dom.id,\r\n\t\t\t\t\t'm'\t\t: this._model.data,\r\n\t\t\t\t\t't_id'\t: this._id,\r\n\t\t\t\t\t't_cnt'\t: this._cnt,\r\n\t\t\t\t\t'sel'\t: this._data.core.selected\r\n\t\t\t\t},\r\n\t\t\t\tfunc = function (data, undefined) {\r\n\t\t\t\t\tif(data.data) { data = data.data; }\r\n\t\t\t\t\tvar dat = data.dat,\r\n\t\t\t\t\t\tpar = data.par,\r\n\t\t\t\t\t\tchd = [],\r\n\t\t\t\t\t\tdpc = [],\r\n\t\t\t\t\t\tadd = [],\r\n\t\t\t\t\t\tdf = data.df,\r\n\t\t\t\t\t\tt_id = data.t_id,\r\n\t\t\t\t\t\tt_cnt = data.t_cnt,\r\n\t\t\t\t\t\tm = data.m,\r\n\t\t\t\t\t\tp = m[par],\r\n\t\t\t\t\t\tsel = data.sel,\r\n\t\t\t\t\t\ttmp, i, j, rslt,\r\n\t\t\t\t\t\tparse_flat = function (d, p, ps) {\r\n\t\t\t\t\t\t\tif(!ps) { ps = []; }\r\n\t\t\t\t\t\t\telse { ps = ps.concat(); }\r\n\t\t\t\t\t\t\tif(p) { ps.unshift(p); }\r\n\t\t\t\t\t\t\tvar tid = d.id.toString(),\r\n\t\t\t\t\t\t\t\ti, j, c, e,\r\n\t\t\t\t\t\t\t\ttmp = {\r\n\t\t\t\t\t\t\t\t\tid\t\t\t: tid,\r\n\t\t\t\t\t\t\t\t\ttext\t\t: d.text || '',\r\n\t\t\t\t\t\t\t\t\ticon\t\t: d.icon !== undefined ? d.icon : true,\r\n\t\t\t\t\t\t\t\t\tparent\t\t: p,\r\n\t\t\t\t\t\t\t\t\tparents\t\t: ps,\r\n\t\t\t\t\t\t\t\t\tchildren\t: d.children || [],\r\n\t\t\t\t\t\t\t\t\tchildren_d\t: d.children_d || [],\r\n\t\t\t\t\t\t\t\t\tdata\t\t: d.data,\r\n\t\t\t\t\t\t\t\t\tstate\t\t: { },\r\n\t\t\t\t\t\t\t\t\tli_attr\t\t: { id : false },\r\n\t\t\t\t\t\t\t\t\ta_attr\t\t: { href : '#' },\r\n\t\t\t\t\t\t\t\t\toriginal\t: false\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tfor(i in df) {\r\n\t\t\t\t\t\t\t\tif(df.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\t\ttmp.state[i] = df[i];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(d && d.data && d.data.jstree && d.data.jstree.icon) {\r\n\t\t\t\t\t\t\t\ttmp.icon = d.data.jstree.icon;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(tmp.icon === undefined || tmp.icon === null || tmp.icon === \"\") {\r\n\t\t\t\t\t\t\t\ttmp.icon = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(d && d.data) {\r\n\t\t\t\t\t\t\t\ttmp.data = d.data;\r\n\t\t\t\t\t\t\t\tif(d.data.jstree) {\r\n\t\t\t\t\t\t\t\t\tfor(i in d.data.jstree) {\r\n\t\t\t\t\t\t\t\t\t\tif(d.data.jstree.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\t\t\t\ttmp.state[i] = d.data.jstree[i];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(d && typeof d.state === 'object') {\r\n\t\t\t\t\t\t\t\tfor (i in d.state) {\r\n\t\t\t\t\t\t\t\t\tif(d.state.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\t\t\ttmp.state[i] = d.state[i];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(d && typeof d.li_attr === 'object') {\r\n\t\t\t\t\t\t\t\tfor (i in d.li_attr) {\r\n\t\t\t\t\t\t\t\t\tif(d.li_attr.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\t\t\ttmp.li_attr[i] = d.li_attr[i];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(!tmp.li_attr.id) {\r\n\t\t\t\t\t\t\t\ttmp.li_attr.id = tid;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(d && typeof d.a_attr === 'object') {\r\n\t\t\t\t\t\t\t\tfor (i in d.a_attr) {\r\n\t\t\t\t\t\t\t\t\tif(d.a_attr.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\t\t\ttmp.a_attr[i] = d.a_attr[i];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(d && d.children && d.children === true) {\r\n\t\t\t\t\t\t\t\ttmp.state.loaded = false;\r\n\t\t\t\t\t\t\t\ttmp.children = [];\r\n\t\t\t\t\t\t\t\ttmp.children_d = [];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tm[tmp.id] = tmp;\r\n\t\t\t\t\t\t\tfor(i = 0, j = tmp.children.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\tc = parse_flat(m[tmp.children[i]], tmp.id, ps);\r\n\t\t\t\t\t\t\t\te = m[c];\r\n\t\t\t\t\t\t\t\ttmp.children_d.push(c);\r\n\t\t\t\t\t\t\t\tif(e.children_d.length) {\r\n\t\t\t\t\t\t\t\t\ttmp.children_d = tmp.children_d.concat(e.children_d);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tdelete d.data;\r\n\t\t\t\t\t\t\tdelete d.children;\r\n\t\t\t\t\t\t\tm[tmp.id].original = d;\r\n\t\t\t\t\t\t\tif(tmp.state.selected) {\r\n\t\t\t\t\t\t\t\tadd.push(tmp.id);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn tmp.id;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tparse_nest = function (d, p, ps) {\r\n\t\t\t\t\t\t\tif(!ps) { ps = []; }\r\n\t\t\t\t\t\t\telse { ps = ps.concat(); }\r\n\t\t\t\t\t\t\tif(p) { ps.unshift(p); }\r\n\t\t\t\t\t\t\tvar tid = false, i, j, c, e, tmp;\r\n\t\t\t\t\t\t\tdo {\r\n\t\t\t\t\t\t\t\ttid = 'j' + t_id + '_' + (++t_cnt);\r\n\t\t\t\t\t\t\t} while(m[tid]);\r\n\r\n\t\t\t\t\t\t\ttmp = {\r\n\t\t\t\t\t\t\t\tid\t\t\t: false,\r\n\t\t\t\t\t\t\t\ttext\t\t: typeof d === 'string' ? d : '',\r\n\t\t\t\t\t\t\t\ticon\t\t: typeof d === 'object' && d.icon !== undefined ? d.icon : true,\r\n\t\t\t\t\t\t\t\tparent\t\t: p,\r\n\t\t\t\t\t\t\t\tparents\t\t: ps,\r\n\t\t\t\t\t\t\t\tchildren\t: [],\r\n\t\t\t\t\t\t\t\tchildren_d\t: [],\r\n\t\t\t\t\t\t\t\tdata\t\t: null,\r\n\t\t\t\t\t\t\t\tstate\t\t: { },\r\n\t\t\t\t\t\t\t\tli_attr\t\t: { id : false },\r\n\t\t\t\t\t\t\t\ta_attr\t\t: { href : '#' },\r\n\t\t\t\t\t\t\t\toriginal\t: false\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tfor(i in df) {\r\n\t\t\t\t\t\t\t\tif(df.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\t\ttmp.state[i] = df[i];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(d && d.id) { tmp.id = d.id.toString(); }\r\n\t\t\t\t\t\t\tif(d && d.text) { tmp.text = d.text; }\r\n\t\t\t\t\t\t\tif(d && d.data && d.data.jstree && d.data.jstree.icon) {\r\n\t\t\t\t\t\t\t\ttmp.icon = d.data.jstree.icon;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(tmp.icon === undefined || tmp.icon === null || tmp.icon === \"\") {\r\n\t\t\t\t\t\t\t\ttmp.icon = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(d && d.data) {\r\n\t\t\t\t\t\t\t\ttmp.data = d.data;\r\n\t\t\t\t\t\t\t\tif(d.data.jstree) {\r\n\t\t\t\t\t\t\t\t\tfor(i in d.data.jstree) {\r\n\t\t\t\t\t\t\t\t\t\tif(d.data.jstree.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\t\t\t\ttmp.state[i] = d.data.jstree[i];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(d && typeof d.state === 'object') {\r\n\t\t\t\t\t\t\t\tfor (i in d.state) {\r\n\t\t\t\t\t\t\t\t\tif(d.state.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\t\t\ttmp.state[i] = d.state[i];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(d && typeof d.li_attr === 'object') {\r\n\t\t\t\t\t\t\t\tfor (i in d.li_attr) {\r\n\t\t\t\t\t\t\t\t\tif(d.li_attr.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\t\t\ttmp.li_attr[i] = d.li_attr[i];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(tmp.li_attr.id && !tmp.id) {\r\n\t\t\t\t\t\t\t\ttmp.id = tmp.li_attr.id.toString();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(!tmp.id) {\r\n\t\t\t\t\t\t\t\ttmp.id = tid;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(!tmp.li_attr.id) {\r\n\t\t\t\t\t\t\t\ttmp.li_attr.id = tmp.id;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(d && typeof d.a_attr === 'object') {\r\n\t\t\t\t\t\t\t\tfor (i in d.a_attr) {\r\n\t\t\t\t\t\t\t\t\tif(d.a_attr.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\t\t\ttmp.a_attr[i] = d.a_attr[i];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(d && d.children && d.children.length) {\r\n\t\t\t\t\t\t\t\tfor(i = 0, j = d.children.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\tc = parse_nest(d.children[i], tmp.id, ps);\r\n\t\t\t\t\t\t\t\t\te = m[c];\r\n\t\t\t\t\t\t\t\t\ttmp.children.push(c);\r\n\t\t\t\t\t\t\t\t\tif(e.children_d.length) {\r\n\t\t\t\t\t\t\t\t\t\ttmp.children_d = tmp.children_d.concat(e.children_d);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\ttmp.children_d = tmp.children_d.concat(tmp.children);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(d && d.children && d.children === true) {\r\n\t\t\t\t\t\t\t\ttmp.state.loaded = false;\r\n\t\t\t\t\t\t\t\ttmp.children = [];\r\n\t\t\t\t\t\t\t\ttmp.children_d = [];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tdelete d.data;\r\n\t\t\t\t\t\t\tdelete d.children;\r\n\t\t\t\t\t\t\ttmp.original = d;\r\n\t\t\t\t\t\t\tm[tmp.id] = tmp;\r\n\t\t\t\t\t\t\tif(tmp.state.selected) {\r\n\t\t\t\t\t\t\t\tadd.push(tmp.id);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn tmp.id;\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\tif(dat.length && dat[0].id !== undefined && dat[0].parent !== undefined) {\r\n\t\t\t\t\t\t// Flat JSON support (for easy import from DB):\r\n\t\t\t\t\t\t// 1) convert to object (foreach)\r\n\t\t\t\t\t\tfor(i = 0, j = dat.length; i < j; i++) {\r\n\t\t\t\t\t\t\tif(!dat[i].children) {\r\n\t\t\t\t\t\t\t\tdat[i].children = [];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(!dat[i].state) {\r\n\t\t\t\t\t\t\t\tdat[i].state = {};\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tm[dat[i].id.toString()] = dat[i];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// 2) populate children (foreach)\r\n\t\t\t\t\t\tfor(i = 0, j = dat.length; i < j; i++) {\r\n\t\t\t\t\t\t\tif (!m[dat[i].parent.toString()]) {\r\n\t\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'parse', 'plugin' : 'core', 'id' : 'core_07', 'reason' : 'Node with invalid parent', 'data' : JSON.stringify({ 'id' : dat[i].id.toString(), 'parent' : dat[i].parent.toString() }) };\r\n\t\t\t\t\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\r\n\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tm[dat[i].parent.toString()].children.push(dat[i].id.toString());\r\n\t\t\t\t\t\t\t// populate parent.children_d\r\n\t\t\t\t\t\t\tp.children_d.push(dat[i].id.toString());\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// 3) normalize && populate parents and children_d with recursion\r\n\t\t\t\t\t\tfor(i = 0, j = p.children.length; i < j; i++) {\r\n\t\t\t\t\t\t\ttmp = parse_flat(m[p.children[i]], par, p.parents.concat());\r\n\t\t\t\t\t\t\tdpc.push(tmp);\r\n\t\t\t\t\t\t\tif(m[tmp].children_d.length) {\r\n\t\t\t\t\t\t\t\tdpc = dpc.concat(m[tmp].children_d);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfor(i = 0, j = p.parents.length; i < j; i++) {\r\n\t\t\t\t\t\t\tm[p.parents[i]].children_d = m[p.parents[i]].children_d.concat(dpc);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// ?) three_state selection - p.state.selected && t - (if three_state foreach(dat => ch) -> foreach(parents) if(parent.selected) child.selected = true;\r\n\t\t\t\t\t\trslt = {\r\n\t\t\t\t\t\t\t'cnt' : t_cnt,\r\n\t\t\t\t\t\t\t'mod' : m,\r\n\t\t\t\t\t\t\t'sel' : sel,\r\n\t\t\t\t\t\t\t'par' : par,\r\n\t\t\t\t\t\t\t'dpc' : dpc,\r\n\t\t\t\t\t\t\t'add' : add\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tfor(i = 0, j = dat.length; i < j; i++) {\r\n\t\t\t\t\t\t\ttmp = parse_nest(dat[i], par, p.parents.concat());\r\n\t\t\t\t\t\t\tif(tmp) {\r\n\t\t\t\t\t\t\t\tchd.push(tmp);\r\n\t\t\t\t\t\t\t\tdpc.push(tmp);\r\n\t\t\t\t\t\t\t\tif(m[tmp].children_d.length) {\r\n\t\t\t\t\t\t\t\t\tdpc = dpc.concat(m[tmp].children_d);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tp.children = chd;\r\n\t\t\t\t\t\tp.children_d = dpc;\r\n\t\t\t\t\t\tfor(i = 0, j = p.parents.length; i < j; i++) {\r\n\t\t\t\t\t\t\tm[p.parents[i]].children_d = m[p.parents[i]].children_d.concat(dpc);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\trslt = {\r\n\t\t\t\t\t\t\t'cnt' : t_cnt,\r\n\t\t\t\t\t\t\t'mod' : m,\r\n\t\t\t\t\t\t\t'sel' : sel,\r\n\t\t\t\t\t\t\t'par' : par,\r\n\t\t\t\t\t\t\t'dpc' : dpc,\r\n\t\t\t\t\t\t\t'add' : add\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(typeof window === 'undefined' || typeof window.document === 'undefined') {\r\n\t\t\t\t\t\tpostMessage(rslt);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\treturn rslt;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\trslt = function (rslt, worker) {\r\n\t\t\t\t\tif(this.element === null) { return; }\r\n\t\t\t\t\tthis._cnt = rslt.cnt;\r\n\t\t\t\t\tvar i, m = this._model.data;\r\n\t\t\t\t\tfor (i in m) {\r\n\t\t\t\t\t\tif (m.hasOwnProperty(i) && m[i].state && m[i].state.loading && rslt.mod[i]) {\r\n\t\t\t\t\t\t\trslt.mod[i].state.loading = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._model.data = rslt.mod; // breaks the reference in load_node - careful\r\n\r\n\t\t\t\t\tif(worker) {\r\n\t\t\t\t\t\tvar j, a = rslt.add, r = rslt.sel, s = this._data.core.selected.slice();\r\n\t\t\t\t\t\tm = this._model.data;\r\n\t\t\t\t\t\t// if selection was changed while calculating in worker\r\n\t\t\t\t\t\tif(r.length !== s.length || $.vakata.array_unique(r.concat(s)).length !== r.length) {\r\n\t\t\t\t\t\t\t// deselect nodes that are no longer selected\r\n\t\t\t\t\t\t\tfor(i = 0, j = r.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\tif($.inArray(r[i], a) === -1 && $.inArray(r[i], s) === -1) {\r\n\t\t\t\t\t\t\t\t\tm[r[i]].state.selected = false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// select nodes that were selected in the mean time\r\n\t\t\t\t\t\t\tfor(i = 0, j = s.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\tif($.inArray(s[i], r) === -1) {\r\n\t\t\t\t\t\t\t\t\tm[s[i]].state.selected = true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(rslt.add.length) {\r\n\t\t\t\t\t\tthis._data.core.selected = this._data.core.selected.concat(rslt.add);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.trigger('model', { \"nodes\" : rslt.dpc, 'parent' : rslt.par });\r\n\r\n\t\t\t\t\tif(rslt.par !== $.jstree.root) {\r\n\t\t\t\t\t\tthis._node_changed(rslt.par);\r\n\t\t\t\t\t\tthis.redraw();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t// this.get_container_ul().children('.jstree-initial-node').remove();\r\n\t\t\t\t\t\tthis.redraw(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(rslt.add.length) {\r\n\t\t\t\t\t\tthis.trigger('changed', { 'action' : 'model', 'selected' : this._data.core.selected });\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcb.call(this, true);\r\n\t\t\t\t};\r\n\t\t\tif(this.settings.core.worker && window.Blob && window.URL && window.Worker) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tif(this._wrk === null) {\r\n\t\t\t\t\t\tthis._wrk = window.URL.createObjectURL(\r\n\t\t\t\t\t\t\tnew window.Blob(\r\n\t\t\t\t\t\t\t\t['self.onmessage = ' + func.toString()],\r\n\t\t\t\t\t\t\t\t{type:\"text/javascript\"}\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(!this._data.core.working || force_processing) {\r\n\t\t\t\t\t\tthis._data.core.working = true;\r\n\t\t\t\t\t\tw = new window.Worker(this._wrk);\r\n\t\t\t\t\t\tw.onmessage = $.proxy(function (e) {\r\n\t\t\t\t\t\t\trslt.call(this, e.data, true);\r\n\t\t\t\t\t\t\ttry { w.terminate(); w = null; } catch(ignore) { }\r\n\t\t\t\t\t\t\tif(this._data.core.worker_queue.length) {\r\n\t\t\t\t\t\t\t\tthis._append_json_data.apply(this, this._data.core.worker_queue.shift());\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tthis._data.core.working = false;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, this);\r\n\t\t\t\t\t\tif(!args.par) {\r\n\t\t\t\t\t\t\tif(this._data.core.worker_queue.length) {\r\n\t\t\t\t\t\t\t\tthis._append_json_data.apply(this, this._data.core.worker_queue.shift());\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tthis._data.core.working = false;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tw.postMessage(args);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis._data.core.worker_queue.push([dom, data, cb, true]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tcatch(e) {\r\n\t\t\t\t\trslt.call(this, func(args), false);\r\n\t\t\t\t\tif(this._data.core.worker_queue.length) {\r\n\t\t\t\t\t\tthis._append_json_data.apply(this, this._data.core.worker_queue.shift());\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis._data.core.working = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\trslt.call(this, func(args), false);\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * parses a node from a jQuery object and appends them to the in memory tree model. Used internally.\r\n\t\t * @private\r\n\t\t * @name _parse_model_from_html(d [, p, ps])\r\n\t\t * @param  {jQuery} d the jQuery object to parse\r\n\t\t * @param  {String} p the parent ID\r\n\t\t * @param  {Array} ps list of all parents\r\n\t\t * @return {String} the ID of the object added to the model\r\n\t\t */\r\n\t\t_parse_model_from_html : function (d, p, ps) {\r\n\t\t\tif(!ps) { ps = []; }\r\n\t\t\telse { ps = [].concat(ps); }\r\n\t\t\tif(p) { ps.unshift(p); }\r\n\t\t\tvar c, e, m = this._model.data,\r\n\t\t\t\tdata = {\r\n\t\t\t\t\tid\t\t\t: false,\r\n\t\t\t\t\ttext\t\t: false,\r\n\t\t\t\t\ticon\t\t: true,\r\n\t\t\t\t\tparent\t\t: p,\r\n\t\t\t\t\tparents\t\t: ps,\r\n\t\t\t\t\tchildren\t: [],\r\n\t\t\t\t\tchildren_d\t: [],\r\n\t\t\t\t\tdata\t\t: null,\r\n\t\t\t\t\tstate\t\t: { },\r\n\t\t\t\t\tli_attr\t\t: { id : false },\r\n\t\t\t\t\ta_attr\t\t: { href : '#' },\r\n\t\t\t\t\toriginal\t: false\r\n\t\t\t\t}, i, tmp, tid;\r\n\t\t\tfor(i in this._model.default_state) {\r\n\t\t\t\tif(this._model.default_state.hasOwnProperty(i)) {\r\n\t\t\t\t\tdata.state[i] = this._model.default_state[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ttmp = $.vakata.attributes(d, true);\r\n\t\t\t$.each(tmp, function (i, v) {\r\n\t\t\t\tv = $.trim(v);\r\n\t\t\t\tif(!v.length) { return true; }\r\n\t\t\t\tdata.li_attr[i] = v;\r\n\t\t\t\tif(i === 'id') {\r\n\t\t\t\t\tdata.id = v.toString();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\ttmp = d.children('a').first();\r\n\t\t\tif(tmp.length) {\r\n\t\t\t\ttmp = $.vakata.attributes(tmp, true);\r\n\t\t\t\t$.each(tmp, function (i, v) {\r\n\t\t\t\t\tv = $.trim(v);\r\n\t\t\t\t\tif(v.length) {\r\n\t\t\t\t\t\tdata.a_attr[i] = v;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\ttmp = d.children(\"a\").first().length ? d.children(\"a\").first().clone() : d.clone();\r\n\t\t\ttmp.children(\"ins, i, ul\").remove();\r\n\t\t\ttmp = tmp.html();\r\n\t\t\ttmp = $('<div />').html(tmp);\r\n\t\t\tdata.text = this.settings.core.force_text ? tmp.text() : tmp.html();\r\n\t\t\ttmp = d.data();\r\n\t\t\tdata.data = tmp ? $.extend(true, {}, tmp) : null;\r\n\t\t\tdata.state.opened = d.hasClass('jstree-open');\r\n\t\t\tdata.state.selected = d.children('a').hasClass('jstree-clicked');\r\n\t\t\tdata.state.disabled = d.children('a').hasClass('jstree-disabled');\r\n\t\t\tif(data.data && data.data.jstree) {\r\n\t\t\t\tfor(i in data.data.jstree) {\r\n\t\t\t\t\tif(data.data.jstree.hasOwnProperty(i)) {\r\n\t\t\t\t\t\tdata.state[i] = data.data.jstree[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ttmp = d.children(\"a\").children(\".jstree-themeicon\");\r\n\t\t\tif(tmp.length) {\r\n\t\t\t\tdata.icon = tmp.hasClass('jstree-themeicon-hidden') ? false : tmp.attr('rel');\r\n\t\t\t}\r\n\t\t\tif(data.state.icon !== undefined) {\r\n\t\t\t\tdata.icon = data.state.icon;\r\n\t\t\t}\r\n\t\t\tif(data.icon === undefined || data.icon === null || data.icon === \"\") {\r\n\t\t\t\tdata.icon = true;\r\n\t\t\t}\r\n\t\t\ttmp = d.children(\"ul\").children(\"li\");\r\n\t\t\tdo {\r\n\t\t\t\ttid = 'j' + this._id + '_' + (++this._cnt);\r\n\t\t\t} while(m[tid]);\r\n\t\t\tdata.id = data.li_attr.id ? data.li_attr.id.toString() : tid;\r\n\t\t\tif(tmp.length) {\r\n\t\t\t\ttmp.each($.proxy(function (i, v) {\r\n\t\t\t\t\tc = this._parse_model_from_html($(v), data.id, ps);\r\n\t\t\t\t\te = this._model.data[c];\r\n\t\t\t\t\tdata.children.push(c);\r\n\t\t\t\t\tif(e.children_d.length) {\r\n\t\t\t\t\t\tdata.children_d = data.children_d.concat(e.children_d);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, this));\r\n\t\t\t\tdata.children_d = data.children_d.concat(data.children);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif(d.hasClass('jstree-closed')) {\r\n\t\t\t\t\tdata.state.loaded = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(data.li_attr['class']) {\r\n\t\t\t\tdata.li_attr['class'] = data.li_attr['class'].replace('jstree-closed','').replace('jstree-open','');\r\n\t\t\t}\r\n\t\t\tif(data.a_attr['class']) {\r\n\t\t\t\tdata.a_attr['class'] = data.a_attr['class'].replace('jstree-clicked','').replace('jstree-disabled','');\r\n\t\t\t}\r\n\t\t\tm[data.id] = data;\r\n\t\t\tif(data.state.selected) {\r\n\t\t\t\tthis._data.core.selected.push(data.id);\r\n\t\t\t}\r\n\t\t\treturn data.id;\r\n\t\t},\r\n\t\t/**\r\n\t\t * parses a node from a JSON object (used when dealing with flat data, which has no nesting of children, but has id and parent properties) and appends it to the in memory tree model. Used internally.\r\n\t\t * @private\r\n\t\t * @name _parse_model_from_flat_json(d [, p, ps])\r\n\t\t * @param  {Object} d the JSON object to parse\r\n\t\t * @param  {String} p the parent ID\r\n\t\t * @param  {Array} ps list of all parents\r\n\t\t * @return {String} the ID of the object added to the model\r\n\t\t */\r\n\t\t_parse_model_from_flat_json : function (d, p, ps) {\r\n\t\t\tif(!ps) { ps = []; }\r\n\t\t\telse { ps = ps.concat(); }\r\n\t\t\tif(p) { ps.unshift(p); }\r\n\t\t\tvar tid = d.id.toString(),\r\n\t\t\t\tm = this._model.data,\r\n\t\t\t\tdf = this._model.default_state,\r\n\t\t\t\ti, j, c, e,\r\n\t\t\t\ttmp = {\r\n\t\t\t\t\tid\t\t\t: tid,\r\n\t\t\t\t\ttext\t\t: d.text || '',\r\n\t\t\t\t\ticon\t\t: d.icon !== undefined ? d.icon : true,\r\n\t\t\t\t\tparent\t\t: p,\r\n\t\t\t\t\tparents\t\t: ps,\r\n\t\t\t\t\tchildren\t: d.children || [],\r\n\t\t\t\t\tchildren_d\t: d.children_d || [],\r\n\t\t\t\t\tdata\t\t: d.data,\r\n\t\t\t\t\tstate\t\t: { },\r\n\t\t\t\t\tli_attr\t\t: { id : false },\r\n\t\t\t\t\ta_attr\t\t: { href : '#' },\r\n\t\t\t\t\toriginal\t: false\r\n\t\t\t\t};\r\n\t\t\tfor(i in df) {\r\n\t\t\t\tif(df.hasOwnProperty(i)) {\r\n\t\t\t\t\ttmp.state[i] = df[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(d && d.data && d.data.jstree && d.data.jstree.icon) {\r\n\t\t\t\ttmp.icon = d.data.jstree.icon;\r\n\t\t\t}\r\n\t\t\tif(tmp.icon === undefined || tmp.icon === null || tmp.icon === \"\") {\r\n\t\t\t\ttmp.icon = true;\r\n\t\t\t}\r\n\t\t\tif(d && d.data) {\r\n\t\t\t\ttmp.data = d.data;\r\n\t\t\t\tif(d.data.jstree) {\r\n\t\t\t\t\tfor(i in d.data.jstree) {\r\n\t\t\t\t\t\tif(d.data.jstree.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\ttmp.state[i] = d.data.jstree[i];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(d && typeof d.state === 'object') {\r\n\t\t\t\tfor (i in d.state) {\r\n\t\t\t\t\tif(d.state.hasOwnProperty(i)) {\r\n\t\t\t\t\t\ttmp.state[i] = d.state[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(d && typeof d.li_attr === 'object') {\r\n\t\t\t\tfor (i in d.li_attr) {\r\n\t\t\t\t\tif(d.li_attr.hasOwnProperty(i)) {\r\n\t\t\t\t\t\ttmp.li_attr[i] = d.li_attr[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(!tmp.li_attr.id) {\r\n\t\t\t\ttmp.li_attr.id = tid;\r\n\t\t\t}\r\n\t\t\tif(d && typeof d.a_attr === 'object') {\r\n\t\t\t\tfor (i in d.a_attr) {\r\n\t\t\t\t\tif(d.a_attr.hasOwnProperty(i)) {\r\n\t\t\t\t\t\ttmp.a_attr[i] = d.a_attr[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(d && d.children && d.children === true) {\r\n\t\t\t\ttmp.state.loaded = false;\r\n\t\t\t\ttmp.children = [];\r\n\t\t\t\ttmp.children_d = [];\r\n\t\t\t}\r\n\t\t\tm[tmp.id] = tmp;\r\n\t\t\tfor(i = 0, j = tmp.children.length; i < j; i++) {\r\n\t\t\t\tc = this._parse_model_from_flat_json(m[tmp.children[i]], tmp.id, ps);\r\n\t\t\t\te = m[c];\r\n\t\t\t\ttmp.children_d.push(c);\r\n\t\t\t\tif(e.children_d.length) {\r\n\t\t\t\t\ttmp.children_d = tmp.children_d.concat(e.children_d);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tdelete d.data;\r\n\t\t\tdelete d.children;\r\n\t\t\tm[tmp.id].original = d;\r\n\t\t\tif(tmp.state.selected) {\r\n\t\t\t\tthis._data.core.selected.push(tmp.id);\r\n\t\t\t}\r\n\t\t\treturn tmp.id;\r\n\t\t},\r\n\t\t/**\r\n\t\t * parses a node from a JSON object and appends it to the in memory tree model. Used internally.\r\n\t\t * @private\r\n\t\t * @name _parse_model_from_json(d [, p, ps])\r\n\t\t * @param  {Object} d the JSON object to parse\r\n\t\t * @param  {String} p the parent ID\r\n\t\t * @param  {Array} ps list of all parents\r\n\t\t * @return {String} the ID of the object added to the model\r\n\t\t */\r\n\t\t_parse_model_from_json : function (d, p, ps) {\r\n\t\t\tif(!ps) { ps = []; }\r\n\t\t\telse { ps = ps.concat(); }\r\n\t\t\tif(p) { ps.unshift(p); }\r\n\t\t\tvar tid = false, i, j, c, e, m = this._model.data, df = this._model.default_state, tmp;\r\n\t\t\tdo {\r\n\t\t\t\ttid = 'j' + this._id + '_' + (++this._cnt);\r\n\t\t\t} while(m[tid]);\r\n\r\n\t\t\ttmp = {\r\n\t\t\t\tid\t\t\t: false,\r\n\t\t\t\ttext\t\t: typeof d === 'string' ? d : '',\r\n\t\t\t\ticon\t\t: typeof d === 'object' && d.icon !== undefined ? d.icon : true,\r\n\t\t\t\tparent\t\t: p,\r\n\t\t\t\tparents\t\t: ps,\r\n\t\t\t\tchildren\t: [],\r\n\t\t\t\tchildren_d\t: [],\r\n\t\t\t\tdata\t\t: null,\r\n\t\t\t\tstate\t\t: { },\r\n\t\t\t\tli_attr\t\t: { id : false },\r\n\t\t\t\ta_attr\t\t: { href : '#' },\r\n\t\t\t\toriginal\t: false\r\n\t\t\t};\r\n\t\t\tfor(i in df) {\r\n\t\t\t\tif(df.hasOwnProperty(i)) {\r\n\t\t\t\t\ttmp.state[i] = df[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(d && d.id) { tmp.id = d.id.toString(); }\r\n\t\t\tif(d && d.text) { tmp.text = d.text; }\r\n\t\t\tif(d && d.data && d.data.jstree && d.data.jstree.icon) {\r\n\t\t\t\ttmp.icon = d.data.jstree.icon;\r\n\t\t\t}\r\n\t\t\tif(tmp.icon === undefined || tmp.icon === null || tmp.icon === \"\") {\r\n\t\t\t\ttmp.icon = true;\r\n\t\t\t}\r\n\t\t\tif(d && d.data) {\r\n\t\t\t\ttmp.data = d.data;\r\n\t\t\t\tif(d.data.jstree) {\r\n\t\t\t\t\tfor(i in d.data.jstree) {\r\n\t\t\t\t\t\tif(d.data.jstree.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\ttmp.state[i] = d.data.jstree[i];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(d && typeof d.state === 'object') {\r\n\t\t\t\tfor (i in d.state) {\r\n\t\t\t\t\tif(d.state.hasOwnProperty(i)) {\r\n\t\t\t\t\t\ttmp.state[i] = d.state[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(d && typeof d.li_attr === 'object') {\r\n\t\t\t\tfor (i in d.li_attr) {\r\n\t\t\t\t\tif(d.li_attr.hasOwnProperty(i)) {\r\n\t\t\t\t\t\ttmp.li_attr[i] = d.li_attr[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(tmp.li_attr.id && !tmp.id) {\r\n\t\t\t\ttmp.id = tmp.li_attr.id.toString();\r\n\t\t\t}\r\n\t\t\tif(!tmp.id) {\r\n\t\t\t\ttmp.id = tid;\r\n\t\t\t}\r\n\t\t\tif(!tmp.li_attr.id) {\r\n\t\t\t\ttmp.li_attr.id = tmp.id;\r\n\t\t\t}\r\n\t\t\tif(d && typeof d.a_attr === 'object') {\r\n\t\t\t\tfor (i in d.a_attr) {\r\n\t\t\t\t\tif(d.a_attr.hasOwnProperty(i)) {\r\n\t\t\t\t\t\ttmp.a_attr[i] = d.a_attr[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(d && d.children && d.children.length) {\r\n\t\t\t\tfor(i = 0, j = d.children.length; i < j; i++) {\r\n\t\t\t\t\tc = this._parse_model_from_json(d.children[i], tmp.id, ps);\r\n\t\t\t\t\te = m[c];\r\n\t\t\t\t\ttmp.children.push(c);\r\n\t\t\t\t\tif(e.children_d.length) {\r\n\t\t\t\t\t\ttmp.children_d = tmp.children_d.concat(e.children_d);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\ttmp.children_d = tmp.children_d.concat(tmp.children);\r\n\t\t\t}\r\n\t\t\tif(d && d.children && d.children === true) {\r\n\t\t\t\ttmp.state.loaded = false;\r\n\t\t\t\ttmp.children = [];\r\n\t\t\t\ttmp.children_d = [];\r\n\t\t\t}\r\n\t\t\tdelete d.data;\r\n\t\t\tdelete d.children;\r\n\t\t\ttmp.original = d;\r\n\t\t\tm[tmp.id] = tmp;\r\n\t\t\tif(tmp.state.selected) {\r\n\t\t\t\tthis._data.core.selected.push(tmp.id);\r\n\t\t\t}\r\n\t\t\treturn tmp.id;\r\n\t\t},\r\n\t\t/**\r\n\t\t * redraws all nodes that need to be redrawn. Used internally.\r\n\t\t * @private\r\n\t\t * @name _redraw()\r\n\t\t * @trigger redraw.jstree\r\n\t\t */\r\n\t\t_redraw : function () {\r\n\t\t\tvar nodes = this._model.force_full_redraw ? this._model.data[$.jstree.root].children.concat([]) : this._model.changed.concat([]),\r\n\t\t\t\tf = document.createElement('UL'), tmp, i, j, fe = this._data.core.focused;\r\n\t\t\tfor(i = 0, j = nodes.length; i < j; i++) {\r\n\t\t\t\ttmp = this.redraw_node(nodes[i], true, this._model.force_full_redraw);\r\n\t\t\t\tif(tmp && this._model.force_full_redraw) {\r\n\t\t\t\t\tf.appendChild(tmp);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(this._model.force_full_redraw) {\r\n\t\t\t\tf.className = this.get_container_ul()[0].className;\r\n\t\t\t\tf.setAttribute('role','group');\r\n\t\t\t\tthis.element.empty().append(f);\r\n\t\t\t\t//this.get_container_ul()[0].appendChild(f);\r\n\t\t\t}\r\n\t\t\tif(fe !== null) {\r\n\t\t\t\ttmp = this.get_node(fe, true);\r\n\t\t\t\tif(tmp && tmp.length && tmp.children('.jstree-anchor')[0] !== document.activeElement) {\r\n\t\t\t\t\ttmp.children('.jstree-anchor').focus();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._data.core.focused = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._model.force_full_redraw = false;\r\n\t\t\tthis._model.changed = [];\r\n\t\t\t/**\r\n\t\t\t * triggered after nodes are redrawn\r\n\t\t\t * @event\r\n\t\t\t * @name redraw.jstree\r\n\t\t\t * @param {array} nodes the redrawn nodes\r\n\t\t\t */\r\n\t\t\tthis.trigger('redraw', { \"nodes\" : nodes });\r\n\t\t},\r\n\t\t/**\r\n\t\t * redraws all nodes that need to be redrawn or optionally - the whole tree\r\n\t\t * @name redraw([full])\r\n\t\t * @param {Boolean} full if set to `true` all nodes are redrawn.\r\n\t\t */\r\n\t\tredraw : function (full) {\r\n\t\t\tif(full) {\r\n\t\t\t\tthis._model.force_full_redraw = true;\r\n\t\t\t}\r\n\t\t\t//if(this._model.redraw_timeout) {\r\n\t\t\t//\tclearTimeout(this._model.redraw_timeout);\r\n\t\t\t//}\r\n\t\t\t//this._model.redraw_timeout = setTimeout($.proxy(this._redraw, this),0);\r\n\t\t\tthis._redraw();\r\n\t\t},\r\n\t\t/**\r\n\t\t * redraws a single node's children. Used internally.\r\n\t\t * @private\r\n\t\t * @name draw_children(node)\r\n\t\t * @param {mixed} node the node whose children will be redrawn\r\n\t\t */\r\n\t\tdraw_children : function (node) {\r\n\t\t\tvar obj = this.get_node(node),\r\n\t\t\t\ti = false,\r\n\t\t\t\tj = false,\r\n\t\t\t\tk = false,\r\n\t\t\t\td = document;\r\n\t\t\tif(!obj) { return false; }\r\n\t\t\tif(obj.id === $.jstree.root) { return this.redraw(true); }\r\n\t\t\tnode = this.get_node(node, true);\r\n\t\t\tif(!node || !node.length) { return false; } // TODO: quick toggle\r\n\r\n\t\t\tnode.children('.jstree-children').remove();\r\n\t\t\tnode = node[0];\r\n\t\t\tif(obj.children.length && obj.state.loaded) {\r\n\t\t\t\tk = d.createElement('UL');\r\n\t\t\t\tk.setAttribute('role', 'group');\r\n\t\t\t\tk.className = 'jstree-children';\r\n\t\t\t\tfor(i = 0, j = obj.children.length; i < j; i++) {\r\n\t\t\t\t\tk.appendChild(this.redraw_node(obj.children[i], true, true));\r\n\t\t\t\t}\r\n\t\t\t\tnode.appendChild(k);\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * redraws a single node. Used internally.\r\n\t\t * @private\r\n\t\t * @name redraw_node(node, deep, is_callback, force_render)\r\n\t\t * @param {mixed} node the node to redraw\r\n\t\t * @param {Boolean} deep should child nodes be redrawn too\r\n\t\t * @param {Boolean} is_callback is this a recursion call\r\n\t\t * @param {Boolean} force_render should children of closed parents be drawn anyway\r\n\t\t */\r\n\t\tredraw_node : function (node, deep, is_callback, force_render) {\r\n\t\t\tvar obj = this.get_node(node),\r\n\t\t\t\tpar = false,\r\n\t\t\t\tind = false,\r\n\t\t\t\told = false,\r\n\t\t\t\ti = false,\r\n\t\t\t\tj = false,\r\n\t\t\t\tk = false,\r\n\t\t\t\tc = '',\r\n\t\t\t\td = document,\r\n\t\t\t\tm = this._model.data,\r\n\t\t\t\tf = false,\r\n\t\t\t\ts = false,\r\n\t\t\t\ttmp = null,\r\n\t\t\t\tt = 0,\r\n\t\t\t\tl = 0,\r\n\t\t\t\thas_children = false,\r\n\t\t\t\tlast_sibling = false;\r\n\t\t\tif(!obj) { return false; }\r\n\t\t\tif(obj.id === $.jstree.root) {  return this.redraw(true); }\r\n\t\t\tdeep = deep || obj.children.length === 0;\r\n\t\t\tnode = !document.querySelector ? document.getElementById(obj.id) : this.element[0].querySelector('#' + (\"0123456789\".indexOf(obj.id[0]) !== -1 ? '\\\\3' + obj.id[0] + ' ' + obj.id.substr(1).replace($.jstree.idregex,'\\\\$&') : obj.id.replace($.jstree.idregex,'\\\\$&')) ); //, this.element);\r\n\t\t\tif(!node) {\r\n\t\t\t\tdeep = true;\r\n\t\t\t\t//node = d.createElement('LI');\r\n\t\t\t\tif(!is_callback) {\r\n\t\t\t\t\tpar = obj.parent !== $.jstree.root ? $('#' + obj.parent.replace($.jstree.idregex,'\\\\$&'), this.element)[0] : null;\r\n\t\t\t\t\tif(par !== null && (!par || !m[obj.parent].state.opened)) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tind = $.inArray(obj.id, par === null ? m[$.jstree.root].children : m[obj.parent].children);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tnode = $(node);\r\n\t\t\t\tif(!is_callback) {\r\n\t\t\t\t\tpar = node.parent().parent()[0];\r\n\t\t\t\t\tif(par === this.element[0]) {\r\n\t\t\t\t\t\tpar = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tind = node.index();\r\n\t\t\t\t}\r\n\t\t\t\t// m[obj.id].data = node.data(); // use only node's data, no need to touch jquery storage\r\n\t\t\t\tif(!deep && obj.children.length && !node.children('.jstree-children').length) {\r\n\t\t\t\t\tdeep = true;\r\n\t\t\t\t}\r\n\t\t\t\tif(!deep) {\r\n\t\t\t\t\told = node.children('.jstree-children')[0];\r\n\t\t\t\t}\r\n\t\t\t\tf = node.children('.jstree-anchor')[0] === document.activeElement;\r\n\t\t\t\tnode.remove();\r\n\t\t\t\t//node = d.createElement('LI');\r\n\t\t\t\t//node = node[0];\r\n\t\t\t}\r\n\t\t\tnode = this._data.core.node.cloneNode(true);\r\n\t\t\t// node is DOM, deep is boolean\r\n\r\n\t\t\tc = 'jstree-node ';\r\n\t\t\tfor(i in obj.li_attr) {\r\n\t\t\t\tif(obj.li_attr.hasOwnProperty(i)) {\r\n\t\t\t\t\tif(i === 'id') { continue; }\r\n\t\t\t\t\tif(i !== 'class') {\r\n\t\t\t\t\t\tnode.setAttribute(i, obj.li_attr[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tc += obj.li_attr[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(!obj.a_attr.id) {\r\n\t\t\t\tobj.a_attr.id = obj.id + '_anchor';\r\n\t\t\t}\r\n\t\t\tnode.setAttribute('aria-selected', !!obj.state.selected);\r\n\t\t\tnode.setAttribute('aria-level', obj.parents.length);\r\n\t\t\tnode.setAttribute('aria-labelledby', obj.a_attr.id);\r\n\t\t\tif(obj.state.disabled) {\r\n\t\t\t\tnode.setAttribute('aria-disabled', true);\r\n\t\t\t}\r\n\r\n\t\t\tfor(i = 0, j = obj.children.length; i < j; i++) {\r\n\t\t\t\tif(!m[obj.children[i]].state.hidden) {\r\n\t\t\t\t\thas_children = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(obj.parent !== null && m[obj.parent] && !obj.state.hidden) {\r\n\t\t\t\ti = $.inArray(obj.id, m[obj.parent].children);\r\n\t\t\t\tlast_sibling = obj.id;\r\n\t\t\t\tif(i !== -1) {\r\n\t\t\t\t\ti++;\r\n\t\t\t\t\tfor(j = m[obj.parent].children.length; i < j; i++) {\r\n\t\t\t\t\t\tif(!m[m[obj.parent].children[i]].state.hidden) {\r\n\t\t\t\t\t\t\tlast_sibling = m[obj.parent].children[i];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(last_sibling !== obj.id) {\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(obj.state.hidden) {\r\n\t\t\t\tc += ' jstree-hidden';\r\n\t\t\t}\r\n\t\t\tif (obj.state.loading) {\r\n\t\t\t\tc += ' jstree-loading';\r\n\t\t\t}\r\n\t\t\tif(obj.state.loaded && !has_children) {\r\n\t\t\t\tc += ' jstree-leaf';\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tc += obj.state.opened && obj.state.loaded ? ' jstree-open' : ' jstree-closed';\r\n\t\t\t\tnode.setAttribute('aria-expanded', (obj.state.opened && obj.state.loaded) );\r\n\t\t\t}\r\n\t\t\tif(last_sibling === obj.id) {\r\n\t\t\t\tc += ' jstree-last';\r\n\t\t\t}\r\n\t\t\tnode.id = obj.id;\r\n\t\t\tnode.className = c;\r\n\t\t\tc = ( obj.state.selected ? ' jstree-clicked' : '') + ( obj.state.disabled ? ' jstree-disabled' : '');\r\n\t\t\tfor(j in obj.a_attr) {\r\n\t\t\t\tif(obj.a_attr.hasOwnProperty(j)) {\r\n\t\t\t\t\tif(j === 'href' && obj.a_attr[j] === '#') { continue; }\r\n\t\t\t\t\tif(j !== 'class') {\r\n\t\t\t\t\t\tnode.childNodes[1].setAttribute(j, obj.a_attr[j]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tc += ' ' + obj.a_attr[j];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(c.length) {\r\n\t\t\t\tnode.childNodes[1].className = 'jstree-anchor ' + c;\r\n\t\t\t}\r\n\t\t\tif((obj.icon && obj.icon !== true) || obj.icon === false) {\r\n\t\t\t\tif(obj.icon === false) {\r\n\t\t\t\t\tnode.childNodes[1].childNodes[0].className += ' jstree-themeicon-hidden';\r\n\t\t\t\t}\r\n\t\t\t\telse if(obj.icon.indexOf('/') === -1 && obj.icon.indexOf('.') === -1) {\r\n\t\t\t\t\tnode.childNodes[1].childNodes[0].className += ' ' + obj.icon + ' jstree-themeicon-custom';\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tnode.childNodes[1].childNodes[0].style.backgroundImage = 'url(\"'+obj.icon+'\")';\r\n\t\t\t\t\tnode.childNodes[1].childNodes[0].style.backgroundPosition = 'center center';\r\n\t\t\t\t\tnode.childNodes[1].childNodes[0].style.backgroundSize = 'auto';\r\n\t\t\t\t\tnode.childNodes[1].childNodes[0].className += ' jstree-themeicon-custom';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(this.settings.core.force_text) {\r\n\t\t\t\tnode.childNodes[1].appendChild(d.createTextNode(obj.text));\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tnode.childNodes[1].innerHTML += obj.text;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif(deep && obj.children.length && (obj.state.opened || force_render) && obj.state.loaded) {\r\n\t\t\t\tk = d.createElement('UL');\r\n\t\t\t\tk.setAttribute('role', 'group');\r\n\t\t\t\tk.className = 'jstree-children';\r\n\t\t\t\tfor(i = 0, j = obj.children.length; i < j; i++) {\r\n\t\t\t\t\tk.appendChild(this.redraw_node(obj.children[i], deep, true));\r\n\t\t\t\t}\r\n\t\t\t\tnode.appendChild(k);\r\n\t\t\t}\r\n\t\t\tif(old) {\r\n\t\t\t\tnode.appendChild(old);\r\n\t\t\t}\r\n\t\t\tif(!is_callback) {\r\n\t\t\t\t// append back using par / ind\r\n\t\t\t\tif(!par) {\r\n\t\t\t\t\tpar = this.element[0];\r\n\t\t\t\t}\r\n\t\t\t\tfor(i = 0, j = par.childNodes.length; i < j; i++) {\r\n\t\t\t\t\tif(par.childNodes[i] && par.childNodes[i].className && par.childNodes[i].className.indexOf('jstree-children') !== -1) {\r\n\t\t\t\t\t\ttmp = par.childNodes[i];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(!tmp) {\r\n\t\t\t\t\ttmp = d.createElement('UL');\r\n\t\t\t\t\ttmp.setAttribute('role', 'group');\r\n\t\t\t\t\ttmp.className = 'jstree-children';\r\n\t\t\t\t\tpar.appendChild(tmp);\r\n\t\t\t\t}\r\n\t\t\t\tpar = tmp;\r\n\r\n\t\t\t\tif(ind < par.childNodes.length) {\r\n\t\t\t\t\tpar.insertBefore(node, par.childNodes[ind]);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tpar.appendChild(node);\r\n\t\t\t\t}\r\n\t\t\t\tif(f) {\r\n\t\t\t\t\tt = this.element[0].scrollTop;\r\n\t\t\t\t\tl = this.element[0].scrollLeft;\r\n\t\t\t\t\tnode.childNodes[1].focus();\r\n\t\t\t\t\tthis.element[0].scrollTop = t;\r\n\t\t\t\t\tthis.element[0].scrollLeft = l;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(obj.state.opened && !obj.state.loaded) {\r\n\t\t\t\tobj.state.opened = false;\r\n\t\t\t\tsetTimeout($.proxy(function () {\r\n\t\t\t\t\tthis.open_node(obj.id, false, 0);\r\n\t\t\t\t}, this), 0);\r\n\t\t\t}\r\n\t\t\treturn node;\r\n\t\t},\r\n\t\t/**\r\n\t\t * opens a node, revaling its children. If the node is not loaded it will be loaded and opened once ready.\r\n\t\t * @name open_node(obj [, callback, animation])\r\n\t\t * @param {mixed} obj the node to open\r\n\t\t * @param {Function} callback a function to execute once the node is opened\r\n\t\t * @param {Number} animation the animation duration in milliseconds when opening the node (overrides the `core.animation` setting). Use `false` for no animation.\r\n\t\t * @trigger open_node.jstree, after_open.jstree, before_open.jstree\r\n\t\t */\r\n\t\topen_node : function (obj, callback, animation) {\r\n\t\t\tvar t1, t2, d, t;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.open_node(obj[t1], callback, animation);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tanimation = animation === undefined ? this.settings.core.animation : animation;\r\n\t\t\tif(!this.is_closed(obj)) {\r\n\t\t\t\tif(callback) {\r\n\t\t\t\t\tcallback.call(this, obj, false);\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(!this.is_loaded(obj)) {\r\n\t\t\t\tif(this.is_loading(obj)) {\r\n\t\t\t\t\treturn setTimeout($.proxy(function () {\r\n\t\t\t\t\t\tthis.open_node(obj, callback, animation);\r\n\t\t\t\t\t}, this), 500);\r\n\t\t\t\t}\r\n\t\t\t\tthis.load_node(obj, function (o, ok) {\r\n\t\t\t\t\treturn ok ? this.open_node(o, callback, animation) : (callback ? callback.call(this, o, false) : false);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\td = this.get_node(obj, true);\r\n\t\t\t\tt = this;\r\n\t\t\t\tif(d.length) {\r\n\t\t\t\t\tif(animation && d.children(\".jstree-children\").length) {\r\n\t\t\t\t\t\td.children(\".jstree-children\").stop(true, true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(obj.children.length && !this._firstChild(d.children('.jstree-children')[0])) {\r\n\t\t\t\t\t\tthis.draw_children(obj);\r\n\t\t\t\t\t\t//d = this.get_node(obj, true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(!animation) {\r\n\t\t\t\t\t\tthis.trigger('before_open', { \"node\" : obj });\r\n\t\t\t\t\t\td[0].className = d[0].className.replace('jstree-closed', 'jstree-open');\r\n\t\t\t\t\t\td[0].setAttribute(\"aria-expanded\", true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.trigger('before_open', { \"node\" : obj });\r\n\t\t\t\t\t\td\r\n\t\t\t\t\t\t\t.children(\".jstree-children\").css(\"display\",\"none\").end()\r\n\t\t\t\t\t\t\t.removeClass(\"jstree-closed\").addClass(\"jstree-open\").attr(\"aria-expanded\", true)\r\n\t\t\t\t\t\t\t.children(\".jstree-children\").stop(true, true)\r\n\t\t\t\t\t\t\t\t.slideDown(animation, function () {\r\n\t\t\t\t\t\t\t\t\tthis.style.display = \"\";\r\n\t\t\t\t\t\t\t\t\tif (t.element) {\r\n\t\t\t\t\t\t\t\t\t\tt.trigger(\"after_open\", { \"node\" : obj });\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tobj.state.opened = true;\r\n\t\t\t\tif(callback) {\r\n\t\t\t\t\tcallback.call(this, obj, true);\r\n\t\t\t\t}\r\n\t\t\t\tif(!d.length) {\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * triggered when a node is about to be opened (if the node is supposed to be in the DOM, it will be, but it won't be visible yet)\r\n\t\t\t\t\t * @event\r\n\t\t\t\t\t * @name before_open.jstree\r\n\t\t\t\t\t * @param {Object} node the opened node\r\n\t\t\t\t\t */\r\n\t\t\t\t\tthis.trigger('before_open', { \"node\" : obj });\r\n\t\t\t\t}\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when a node is opened (if there is an animation it will not be completed yet)\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name open_node.jstree\r\n\t\t\t\t * @param {Object} node the opened node\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('open_node', { \"node\" : obj });\r\n\t\t\t\tif(!animation || !d.length) {\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * triggered when a node is opened and the animation is complete\r\n\t\t\t\t\t * @event\r\n\t\t\t\t\t * @name after_open.jstree\r\n\t\t\t\t\t * @param {Object} node the opened node\r\n\t\t\t\t\t */\r\n\t\t\t\t\tthis.trigger(\"after_open\", { \"node\" : obj });\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * opens every parent of a node (node should be loaded)\r\n\t\t * @name _open_to(obj)\r\n\t\t * @param {mixed} obj the node to reveal\r\n\t\t * @private\r\n\t\t */\r\n\t\t_open_to : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvar i, j, p = obj.parents;\r\n\t\t\tfor(i = 0, j = p.length; i < j; i+=1) {\r\n\t\t\t\tif(i !== $.jstree.root) {\r\n\t\t\t\t\tthis.open_node(p[i], false, 0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn $('#' + obj.id.replace($.jstree.idregex,'\\\\$&'), this.element);\r\n\t\t},\r\n\t\t/**\r\n\t\t * closes a node, hiding its children\r\n\t\t * @name close_node(obj [, animation])\r\n\t\t * @param {mixed} obj the node to close\r\n\t\t * @param {Number} animation the animation duration in milliseconds when closing the node (overrides the `core.animation` setting). Use `false` for no animation.\r\n\t\t * @trigger close_node.jstree, after_close.jstree\r\n\t\t */\r\n\t\tclose_node : function (obj, animation) {\r\n\t\t\tvar t1, t2, t, d;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.close_node(obj[t1], animation);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(this.is_closed(obj)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tanimation = animation === undefined ? this.settings.core.animation : animation;\r\n\t\t\tt = this;\r\n\t\t\td = this.get_node(obj, true);\r\n\r\n\t\t\tobj.state.opened = false;\r\n\t\t\t/**\r\n\t\t\t * triggered when a node is closed (if there is an animation it will not be complete yet)\r\n\t\t\t * @event\r\n\t\t\t * @name close_node.jstree\r\n\t\t\t * @param {Object} node the closed node\r\n\t\t\t */\r\n\t\t\tthis.trigger('close_node',{ \"node\" : obj });\r\n\t\t\tif(!d.length) {\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when a node is closed and the animation is complete\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name after_close.jstree\r\n\t\t\t\t * @param {Object} node the closed node\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger(\"after_close\", { \"node\" : obj });\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif(!animation) {\r\n\t\t\t\t\td[0].className = d[0].className.replace('jstree-open', 'jstree-closed');\r\n\t\t\t\t\td.attr(\"aria-expanded\", false).children('.jstree-children').remove();\r\n\t\t\t\t\tthis.trigger(\"after_close\", { \"node\" : obj });\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\td\r\n\t\t\t\t\t\t.children(\".jstree-children\").attr(\"style\",\"display:block !important\").end()\r\n\t\t\t\t\t\t.removeClass(\"jstree-open\").addClass(\"jstree-closed\").attr(\"aria-expanded\", false)\r\n\t\t\t\t\t\t.children(\".jstree-children\").stop(true, true).slideUp(animation, function () {\r\n\t\t\t\t\t\t\tthis.style.display = \"\";\r\n\t\t\t\t\t\t\td.children('.jstree-children').remove();\r\n\t\t\t\t\t\t\tif (t.element) {\r\n\t\t\t\t\t\t\t\tt.trigger(\"after_close\", { \"node\" : obj });\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * toggles a node - closing it if it is open, opening it if it is closed\r\n\t\t * @name toggle_node(obj)\r\n\t\t * @param {mixed} obj the node to toggle\r\n\t\t */\r\n\t\ttoggle_node : function (obj) {\r\n\t\t\tvar t1, t2;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.toggle_node(obj[t1]);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tif(this.is_closed(obj)) {\r\n\t\t\t\treturn this.open_node(obj);\r\n\t\t\t}\r\n\t\t\tif(this.is_open(obj)) {\r\n\t\t\t\treturn this.close_node(obj);\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * opens all nodes within a node (or the tree), revaling their children. If the node is not loaded it will be loaded and opened once ready.\r\n\t\t * @name open_all([obj, animation, original_obj])\r\n\t\t * @param {mixed} obj the node to open recursively, omit to open all nodes in the tree\r\n\t\t * @param {Number} animation the animation duration in milliseconds when opening the nodes, the default is no animation\r\n\t\t * @param {jQuery} reference to the node that started the process (internal use)\r\n\t\t * @trigger open_all.jstree\r\n\t\t */\r\n\t\topen_all : function (obj, animation, original_obj) {\r\n\t\t\tif(!obj) { obj = $.jstree.root; }\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj) { return false; }\r\n\t\t\tvar dom = obj.id === $.jstree.root ? this.get_container_ul() : this.get_node(obj, true), i, j, _this;\r\n\t\t\tif(!dom.length) {\r\n\t\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\r\n\t\t\t\t\tif(this.is_closed(this._model.data[obj.children_d[i]])) {\r\n\t\t\t\t\t\tthis._model.data[obj.children_d[i]].state.opened = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn this.trigger('open_all', { \"node\" : obj });\r\n\t\t\t}\r\n\t\t\toriginal_obj = original_obj || dom;\r\n\t\t\t_this = this;\r\n\t\t\tdom = this.is_closed(obj) ? dom.find('.jstree-closed').addBack() : dom.find('.jstree-closed');\r\n\t\t\tdom.each(function () {\r\n\t\t\t\t_this.open_node(\r\n\t\t\t\t\tthis,\r\n\t\t\t\t\tfunction(node, status) { if(status && this.is_parent(node)) { this.open_all(node, animation, original_obj); } },\r\n\t\t\t\t\tanimation || 0\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t\tif(original_obj.find('.jstree-closed').length === 0) {\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when an `open_all` call completes\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name open_all.jstree\r\n\t\t\t\t * @param {Object} node the opened node\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('open_all', { \"node\" : this.get_node(original_obj) });\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * closes all nodes within a node (or the tree), revaling their children\r\n\t\t * @name close_all([obj, animation])\r\n\t\t * @param {mixed} obj the node to close recursively, omit to close all nodes in the tree\r\n\t\t * @param {Number} animation the animation duration in milliseconds when closing the nodes, the default is no animation\r\n\t\t * @trigger close_all.jstree\r\n\t\t */\r\n\t\tclose_all : function (obj, animation) {\r\n\t\t\tif(!obj) { obj = $.jstree.root; }\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj) { return false; }\r\n\t\t\tvar dom = obj.id === $.jstree.root ? this.get_container_ul() : this.get_node(obj, true),\r\n\t\t\t\t_this = this, i, j;\r\n\t\t\tif(dom.length) {\r\n\t\t\t\tdom = this.is_open(obj) ? dom.find('.jstree-open').addBack() : dom.find('.jstree-open');\r\n\t\t\t\t$(dom.get().reverse()).each(function () { _this.close_node(this, animation || 0); });\r\n\t\t\t}\r\n\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\r\n\t\t\t\tthis._model.data[obj.children_d[i]].state.opened = false;\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * triggered when an `close_all` call completes\r\n\t\t\t * @event\r\n\t\t\t * @name close_all.jstree\r\n\t\t\t * @param {Object} node the closed node\r\n\t\t\t */\r\n\t\t\tthis.trigger('close_all', { \"node\" : obj });\r\n\t\t},\r\n\t\t/**\r\n\t\t * checks if a node is disabled (not selectable)\r\n\t\t * @name is_disabled(obj)\r\n\t\t * @param  {mixed} obj\r\n\t\t * @return {Boolean}\r\n\t\t */\r\n\t\tis_disabled : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\treturn obj && obj.state && obj.state.disabled;\r\n\t\t},\r\n\t\t/**\r\n\t\t * enables a node - so that it can be selected\r\n\t\t * @name enable_node(obj)\r\n\t\t * @param {mixed} obj the node to enable\r\n\t\t * @trigger enable_node.jstree\r\n\t\t */\r\n\t\tenable_node : function (obj) {\r\n\t\t\tvar t1, t2;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.enable_node(obj[t1]);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tobj.state.disabled = false;\r\n\t\t\tthis.get_node(obj,true).children('.jstree-anchor').removeClass('jstree-disabled').attr('aria-disabled', false);\r\n\t\t\t/**\r\n\t\t\t * triggered when an node is enabled\r\n\t\t\t * @event\r\n\t\t\t * @name enable_node.jstree\r\n\t\t\t * @param {Object} node the enabled node\r\n\t\t\t */\r\n\t\t\tthis.trigger('enable_node', { 'node' : obj });\r\n\t\t},\r\n\t\t/**\r\n\t\t * disables a node - so that it can not be selected\r\n\t\t * @name disable_node(obj)\r\n\t\t * @param {mixed} obj the node to disable\r\n\t\t * @trigger disable_node.jstree\r\n\t\t */\r\n\t\tdisable_node : function (obj) {\r\n\t\t\tvar t1, t2;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.disable_node(obj[t1]);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tobj.state.disabled = true;\r\n\t\t\tthis.get_node(obj,true).children('.jstree-anchor').addClass('jstree-disabled').attr('aria-disabled', true);\r\n\t\t\t/**\r\n\t\t\t * triggered when an node is disabled\r\n\t\t\t * @event\r\n\t\t\t * @name disable_node.jstree\r\n\t\t\t * @param {Object} node the disabled node\r\n\t\t\t */\r\n\t\t\tthis.trigger('disable_node', { 'node' : obj });\r\n\t\t},\r\n\t\t/**\r\n\t\t * determines if a node is hidden\r\n\t\t * @name is_hidden(obj)\r\n\t\t * @param {mixed} obj the node\r\n\t\t */\r\n\t\tis_hidden : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\treturn obj.state.hidden === true;\r\n\t\t},\r\n\t\t/**\r\n\t\t * hides a node - it is still in the structure but will not be visible\r\n\t\t * @name hide_node(obj)\r\n\t\t * @param {mixed} obj the node to hide\r\n\t\t * @param {Boolean} skip_redraw internal parameter controlling if redraw is called\r\n\t\t * @trigger hide_node.jstree\r\n\t\t */\r\n\t\thide_node : function (obj, skip_redraw) {\r\n\t\t\tvar t1, t2;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.hide_node(obj[t1], true);\r\n\t\t\t\t}\r\n\t\t\t\tif (!skip_redraw) {\r\n\t\t\t\t\tthis.redraw();\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(!obj.state.hidden) {\r\n\t\t\t\tobj.state.hidden = true;\r\n\t\t\t\tthis._node_changed(obj.parent);\r\n\t\t\t\tif(!skip_redraw) {\r\n\t\t\t\t\tthis.redraw();\r\n\t\t\t\t}\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when an node is hidden\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name hide_node.jstree\r\n\t\t\t\t * @param {Object} node the hidden node\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('hide_node', { 'node' : obj });\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * shows a node\r\n\t\t * @name show_node(obj)\r\n\t\t * @param {mixed} obj the node to show\r\n\t\t * @param {Boolean} skip_redraw internal parameter controlling if redraw is called\r\n\t\t * @trigger show_node.jstree\r\n\t\t */\r\n\t\tshow_node : function (obj, skip_redraw) {\r\n\t\t\tvar t1, t2;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.show_node(obj[t1], true);\r\n\t\t\t\t}\r\n\t\t\t\tif (!skip_redraw) {\r\n\t\t\t\t\tthis.redraw();\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(obj.state.hidden) {\r\n\t\t\t\tobj.state.hidden = false;\r\n\t\t\t\tthis._node_changed(obj.parent);\r\n\t\t\t\tif(!skip_redraw) {\r\n\t\t\t\t\tthis.redraw();\r\n\t\t\t\t}\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when an node is shown\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name show_node.jstree\r\n\t\t\t\t * @param {Object} node the shown node\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('show_node', { 'node' : obj });\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * hides all nodes\r\n\t\t * @name hide_all()\r\n\t\t * @trigger hide_all.jstree\r\n\t\t */\r\n\t\thide_all : function (skip_redraw) {\r\n\t\t\tvar i, m = this._model.data, ids = [];\r\n\t\t\tfor(i in m) {\r\n\t\t\t\tif(m.hasOwnProperty(i) && i !== $.jstree.root && !m[i].state.hidden) {\r\n\t\t\t\t\tm[i].state.hidden = true;\r\n\t\t\t\t\tids.push(i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._model.force_full_redraw = true;\r\n\t\t\tif(!skip_redraw) {\r\n\t\t\t\tthis.redraw();\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * triggered when all nodes are hidden\r\n\t\t\t * @event\r\n\t\t\t * @name hide_all.jstree\r\n\t\t\t * @param {Array} nodes the IDs of all hidden nodes\r\n\t\t\t */\r\n\t\t\tthis.trigger('hide_all', { 'nodes' : ids });\r\n\t\t\treturn ids;\r\n\t\t},\r\n\t\t/**\r\n\t\t * shows all nodes\r\n\t\t * @name show_all()\r\n\t\t * @trigger show_all.jstree\r\n\t\t */\r\n\t\tshow_all : function (skip_redraw) {\r\n\t\t\tvar i, m = this._model.data, ids = [];\r\n\t\t\tfor(i in m) {\r\n\t\t\t\tif(m.hasOwnProperty(i) && i !== $.jstree.root && m[i].state.hidden) {\r\n\t\t\t\t\tm[i].state.hidden = false;\r\n\t\t\t\t\tids.push(i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._model.force_full_redraw = true;\r\n\t\t\tif(!skip_redraw) {\r\n\t\t\t\tthis.redraw();\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * triggered when all nodes are shown\r\n\t\t\t * @event\r\n\t\t\t * @name show_all.jstree\r\n\t\t\t * @param {Array} nodes the IDs of all shown nodes\r\n\t\t\t */\r\n\t\t\tthis.trigger('show_all', { 'nodes' : ids });\r\n\t\t\treturn ids;\r\n\t\t},\r\n\t\t/**\r\n\t\t * called when a node is selected by the user. Used internally.\r\n\t\t * @private\r\n\t\t * @name activate_node(obj, e)\r\n\t\t * @param {mixed} obj the node\r\n\t\t * @param {Object} e the related event\r\n\t\t * @trigger activate_node.jstree, changed.jstree\r\n\t\t */\r\n\t\tactivate_node : function (obj, e) {\r\n\t\t\tif(this.is_disabled(obj)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(!e || typeof e !== 'object') {\r\n\t\t\t\te = {};\r\n\t\t\t}\r\n\r\n\t\t\t// ensure last_clicked is still in the DOM, make it fresh (maybe it was moved?) and make sure it is still selected, if not - make last_clicked the last selected node\r\n\t\t\tthis._data.core.last_clicked = this._data.core.last_clicked && this._data.core.last_clicked.id !== undefined ? this.get_node(this._data.core.last_clicked.id) : null;\r\n\t\t\tif(this._data.core.last_clicked && !this._data.core.last_clicked.state.selected) { this._data.core.last_clicked = null; }\r\n\t\t\tif(!this._data.core.last_clicked && this._data.core.selected.length) { this._data.core.last_clicked = this.get_node(this._data.core.selected[this._data.core.selected.length - 1]); }\r\n\r\n\t\t\tif(!this.settings.core.multiple || (!e.metaKey && !e.ctrlKey && !e.shiftKey) || (e.shiftKey && (!this._data.core.last_clicked || !this.get_parent(obj) || this.get_parent(obj) !== this._data.core.last_clicked.parent ) )) {\r\n\t\t\t\tif(!this.settings.core.multiple && (e.metaKey || e.ctrlKey || e.shiftKey) && this.is_selected(obj)) {\r\n\t\t\t\t\tthis.deselect_node(obj, false, e);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.deselect_all(true);\r\n\t\t\t\t\tthis.select_node(obj, false, false, e);\r\n\t\t\t\t\tthis._data.core.last_clicked = this.get_node(obj);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif(e.shiftKey) {\r\n\t\t\t\t\tvar o = this.get_node(obj).id,\r\n\t\t\t\t\t\tl = this._data.core.last_clicked.id,\r\n\t\t\t\t\t\tp = this.get_node(this._data.core.last_clicked.parent).children,\r\n\t\t\t\t\t\tc = false,\r\n\t\t\t\t\t\ti, j;\r\n\t\t\t\t\tfor(i = 0, j = p.length; i < j; i += 1) {\r\n\t\t\t\t\t\t// separate IFs work whem o and l are the same\r\n\t\t\t\t\t\tif(p[i] === o) {\r\n\t\t\t\t\t\t\tc = !c;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(p[i] === l) {\r\n\t\t\t\t\t\t\tc = !c;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(!this.is_disabled(p[i]) && (c || p[i] === o || p[i] === l)) {\r\n\t\t\t\t\t\t\tif (!this.is_hidden(p[i])) {\r\n\t\t\t\t\t\t\t\tthis.select_node(p[i], true, false, e);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis.deselect_node(p[i], true, e);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.trigger('changed', { 'action' : 'select_node', 'node' : this.get_node(obj), 'selected' : this._data.core.selected, 'event' : e });\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif(!this.is_selected(obj)) {\r\n\t\t\t\t\t\tthis.select_node(obj, false, false, e);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.deselect_node(obj, false, e);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * triggered when an node is clicked or intercated with by the user\r\n\t\t\t * @event\r\n\t\t\t * @name activate_node.jstree\r\n\t\t\t * @param {Object} node\r\n\t\t\t * @param {Object} event the ooriginal event (if any) which triggered the call (may be an empty object)\r\n\t\t\t */\r\n\t\t\tthis.trigger('activate_node', { 'node' : this.get_node(obj), 'event' : e });\r\n\t\t},\r\n\t\t/**\r\n\t\t * applies the hover state on a node, called when a node is hovered by the user. Used internally.\r\n\t\t * @private\r\n\t\t * @name hover_node(obj)\r\n\t\t * @param {mixed} obj\r\n\t\t * @trigger hover_node.jstree\r\n\t\t */\r\n\t\thover_node : function (obj) {\r\n\t\t\tobj = this.get_node(obj, true);\r\n\t\t\tif(!obj || !obj.length || obj.children('.jstree-hovered').length) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvar o = this.element.find('.jstree-hovered'), t = this.element;\r\n\t\t\tif(o && o.length) { this.dehover_node(o); }\r\n\r\n\t\t\tobj.children('.jstree-anchor').addClass('jstree-hovered');\r\n\t\t\t/**\r\n\t\t\t * triggered when an node is hovered\r\n\t\t\t * @event\r\n\t\t\t * @name hover_node.jstree\r\n\t\t\t * @param {Object} node\r\n\t\t\t */\r\n\t\t\tthis.trigger('hover_node', { 'node' : this.get_node(obj) });\r\n\t\t\tsetTimeout(function () { t.attr('aria-activedescendant', obj[0].id); }, 0);\r\n\t\t},\r\n\t\t/**\r\n\t\t * removes the hover state from a nodecalled when a node is no longer hovered by the user. Used internally.\r\n\t\t * @private\r\n\t\t * @name dehover_node(obj)\r\n\t\t * @param {mixed} obj\r\n\t\t * @trigger dehover_node.jstree\r\n\t\t */\r\n\t\tdehover_node : function (obj) {\r\n\t\t\tobj = this.get_node(obj, true);\r\n\t\t\tif(!obj || !obj.length || !obj.children('.jstree-hovered').length) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tobj.children('.jstree-anchor').removeClass('jstree-hovered');\r\n\t\t\t/**\r\n\t\t\t * triggered when an node is no longer hovered\r\n\t\t\t * @event\r\n\t\t\t * @name dehover_node.jstree\r\n\t\t\t * @param {Object} node\r\n\t\t\t */\r\n\t\t\tthis.trigger('dehover_node', { 'node' : this.get_node(obj) });\r\n\t\t},\r\n\t\t/**\r\n\t\t * select a node\r\n\t\t * @name select_node(obj [, supress_event, prevent_open])\r\n\t\t * @param {mixed} obj an array can be used to select multiple nodes\r\n\t\t * @param {Boolean} supress_event if set to `true` the `changed.jstree` event won't be triggered\r\n\t\t * @param {Boolean} prevent_open if set to `true` parents of the selected node won't be opened\r\n\t\t * @trigger select_node.jstree, changed.jstree\r\n\t\t */\r\n\t\tselect_node : function (obj, supress_event, prevent_open, e) {\r\n\t\t\tvar dom, t1, t2, th;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.select_node(obj[t1], supress_event, prevent_open, e);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tdom = this.get_node(obj, true);\r\n\t\t\tif(!obj.state.selected) {\r\n\t\t\t\tobj.state.selected = true;\r\n\t\t\t\tthis._data.core.selected.push(obj.id);\r\n\t\t\t\tif(!prevent_open) {\r\n\t\t\t\t\tdom = this._open_to(obj);\r\n\t\t\t\t}\r\n\t\t\t\tif(dom && dom.length) {\r\n\t\t\t\t\tdom.attr('aria-selected', true).children('.jstree-anchor').addClass('jstree-clicked');\r\n\t\t\t\t}\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when an node is selected\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name select_node.jstree\r\n\t\t\t\t * @param {Object} node\r\n\t\t\t\t * @param {Array} selected the current selection\r\n\t\t\t\t * @param {Object} event the event (if any) that triggered this select_node\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('select_node', { 'node' : obj, 'selected' : this._data.core.selected, 'event' : e });\r\n\t\t\t\tif(!supress_event) {\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * triggered when selection changes\r\n\t\t\t\t\t * @event\r\n\t\t\t\t\t * @name changed.jstree\r\n\t\t\t\t\t * @param {Object} node\r\n\t\t\t\t\t * @param {Object} action the action that caused the selection to change\r\n\t\t\t\t\t * @param {Array} selected the current selection\r\n\t\t\t\t\t * @param {Object} event the event (if any) that triggered this changed event\r\n\t\t\t\t\t */\r\n\t\t\t\t\tthis.trigger('changed', { 'action' : 'select_node', 'node' : obj, 'selected' : this._data.core.selected, 'event' : e });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * deselect a node\r\n\t\t * @name deselect_node(obj [, supress_event])\r\n\t\t * @param {mixed} obj an array can be used to deselect multiple nodes\r\n\t\t * @param {Boolean} supress_event if set to `true` the `changed.jstree` event won't be triggered\r\n\t\t * @trigger deselect_node.jstree, changed.jstree\r\n\t\t */\r\n\t\tdeselect_node : function (obj, supress_event, e) {\r\n\t\t\tvar t1, t2, dom;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.deselect_node(obj[t1], supress_event, e);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tdom = this.get_node(obj, true);\r\n\t\t\tif(obj.state.selected) {\r\n\t\t\t\tobj.state.selected = false;\r\n\t\t\t\tthis._data.core.selected = $.vakata.array_remove_item(this._data.core.selected, obj.id);\r\n\t\t\t\tif(dom.length) {\r\n\t\t\t\t\tdom.attr('aria-selected', false).children('.jstree-anchor').removeClass('jstree-clicked');\r\n\t\t\t\t}\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when an node is deselected\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name deselect_node.jstree\r\n\t\t\t\t * @param {Object} node\r\n\t\t\t\t * @param {Array} selected the current selection\r\n\t\t\t\t * @param {Object} event the event (if any) that triggered this deselect_node\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('deselect_node', { 'node' : obj, 'selected' : this._data.core.selected, 'event' : e });\r\n\t\t\t\tif(!supress_event) {\r\n\t\t\t\t\tthis.trigger('changed', { 'action' : 'deselect_node', 'node' : obj, 'selected' : this._data.core.selected, 'event' : e });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * select all nodes in the tree\r\n\t\t * @name select_all([supress_event])\r\n\t\t * @param {Boolean} supress_event if set to `true` the `changed.jstree` event won't be triggered\r\n\t\t * @trigger select_all.jstree, changed.jstree\r\n\t\t */\r\n\t\tselect_all : function (supress_event) {\r\n\t\t\tvar tmp = this._data.core.selected.concat([]), i, j;\r\n\t\t\tthis._data.core.selected = this._model.data[$.jstree.root].children_d.concat();\r\n\t\t\tfor(i = 0, j = this._data.core.selected.length; i < j; i++) {\r\n\t\t\t\tif(this._model.data[this._data.core.selected[i]]) {\r\n\t\t\t\t\tthis._model.data[this._data.core.selected[i]].state.selected = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.redraw(true);\r\n\t\t\t/**\r\n\t\t\t * triggered when all nodes are selected\r\n\t\t\t * @event\r\n\t\t\t * @name select_all.jstree\r\n\t\t\t * @param {Array} selected the current selection\r\n\t\t\t */\r\n\t\t\tthis.trigger('select_all', { 'selected' : this._data.core.selected });\r\n\t\t\tif(!supress_event) {\r\n\t\t\t\tthis.trigger('changed', { 'action' : 'select_all', 'selected' : this._data.core.selected, 'old_selection' : tmp });\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * deselect all selected nodes\r\n\t\t * @name deselect_all([supress_event])\r\n\t\t * @param {Boolean} supress_event if set to `true` the `changed.jstree` event won't be triggered\r\n\t\t * @trigger deselect_all.jstree, changed.jstree\r\n\t\t */\r\n\t\tdeselect_all : function (supress_event) {\r\n\t\t\tvar tmp = this._data.core.selected.concat([]), i, j;\r\n\t\t\tfor(i = 0, j = this._data.core.selected.length; i < j; i++) {\r\n\t\t\t\tif(this._model.data[this._data.core.selected[i]]) {\r\n\t\t\t\t\tthis._model.data[this._data.core.selected[i]].state.selected = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._data.core.selected = [];\r\n\t\t\tthis.element.find('.jstree-clicked').removeClass('jstree-clicked').parent().attr('aria-selected', false);\r\n\t\t\t/**\r\n\t\t\t * triggered when all nodes are deselected\r\n\t\t\t * @event\r\n\t\t\t * @name deselect_all.jstree\r\n\t\t\t * @param {Object} node the previous selection\r\n\t\t\t * @param {Array} selected the current selection\r\n\t\t\t */\r\n\t\t\tthis.trigger('deselect_all', { 'selected' : this._data.core.selected, 'node' : tmp });\r\n\t\t\tif(!supress_event) {\r\n\t\t\t\tthis.trigger('changed', { 'action' : 'deselect_all', 'selected' : this._data.core.selected, 'old_selection' : tmp });\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * checks if a node is selected\r\n\t\t * @name is_selected(obj)\r\n\t\t * @param  {mixed}  obj\r\n\t\t * @return {Boolean}\r\n\t\t */\r\n\t\tis_selected : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn obj.state.selected;\r\n\t\t},\r\n\t\t/**\r\n\t\t * get an array of all selected nodes\r\n\t\t * @name get_selected([full])\r\n\t\t * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\r\n\t\t * @return {Array}\r\n\t\t */\r\n\t\tget_selected : function (full) {\r\n\t\t\treturn full ? $.map(this._data.core.selected, $.proxy(function (i) { return this.get_node(i); }, this)) : this._data.core.selected.slice();\r\n\t\t},\r\n\t\t/**\r\n\t\t * get an array of all top level selected nodes (ignoring children of selected nodes)\r\n\t\t * @name get_top_selected([full])\r\n\t\t * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\r\n\t\t * @return {Array}\r\n\t\t */\r\n\t\tget_top_selected : function (full) {\r\n\t\t\tvar tmp = this.get_selected(true),\r\n\t\t\t\tobj = {}, i, j, k, l;\r\n\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\r\n\t\t\t\tobj[tmp[i].id] = tmp[i];\r\n\t\t\t}\r\n\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\r\n\t\t\t\tfor(k = 0, l = tmp[i].children_d.length; k < l; k++) {\r\n\t\t\t\t\tif(obj[tmp[i].children_d[k]]) {\r\n\t\t\t\t\t\tdelete obj[tmp[i].children_d[k]];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ttmp = [];\r\n\t\t\tfor(i in obj) {\r\n\t\t\t\tif(obj.hasOwnProperty(i)) {\r\n\t\t\t\t\ttmp.push(i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn full ? $.map(tmp, $.proxy(function (i) { return this.get_node(i); }, this)) : tmp;\r\n\t\t},\r\n\t\t/**\r\n\t\t * get an array of all bottom level selected nodes (ignoring selected parents)\r\n\t\t * @name get_bottom_selected([full])\r\n\t\t * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\r\n\t\t * @return {Array}\r\n\t\t */\r\n\t\tget_bottom_selected : function (full) {\r\n\t\t\tvar tmp = this.get_selected(true),\r\n\t\t\t\tobj = [], i, j;\r\n\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\r\n\t\t\t\tif(!tmp[i].children.length) {\r\n\t\t\t\t\tobj.push(tmp[i].id);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn full ? $.map(obj, $.proxy(function (i) { return this.get_node(i); }, this)) : obj;\r\n\t\t},\r\n\t\t/**\r\n\t\t * gets the current state of the tree so that it can be restored later with `set_state(state)`. Used internally.\r\n\t\t * @name get_state()\r\n\t\t * @private\r\n\t\t * @return {Object}\r\n\t\t */\r\n\t\tget_state : function () {\r\n\t\t\tvar state\t= {\r\n\t\t\t\t'core' : {\r\n\t\t\t\t\t'open' : [],\r\n\t\t\t\t\t'loaded' : [],\r\n\t\t\t\t\t'scroll' : {\r\n\t\t\t\t\t\t'left' : this.element.scrollLeft(),\r\n\t\t\t\t\t\t'top' : this.element.scrollTop()\r\n\t\t\t\t\t},\r\n\t\t\t\t\t/*!\r\n\t\t\t\t\t'themes' : {\r\n\t\t\t\t\t\t'name' : this.get_theme(),\r\n\t\t\t\t\t\t'icons' : this._data.core.themes.icons,\r\n\t\t\t\t\t\t'dots' : this._data.core.themes.dots\r\n\t\t\t\t\t},\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t'selected' : []\r\n\t\t\t\t}\r\n\t\t\t}, i;\r\n\t\t\tfor(i in this._model.data) {\r\n\t\t\t\tif(this._model.data.hasOwnProperty(i)) {\r\n\t\t\t\t\tif(i !== $.jstree.root) {\r\n\t\t\t\t\t\tif(this._model.data[i].state.loaded && this.settings.core.loaded_state) {\r\n\t\t\t\t\t\t\tstate.core.loaded.push(i);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(this._model.data[i].state.opened) {\r\n\t\t\t\t\t\t\tstate.core.open.push(i);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(this._model.data[i].state.selected) {\r\n\t\t\t\t\t\t\tstate.core.selected.push(i);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn state;\r\n\t\t},\r\n\t\t/**\r\n\t\t * sets the state of the tree. Used internally.\r\n\t\t * @name set_state(state [, callback])\r\n\t\t * @private\r\n\t\t * @param {Object} state the state to restore. Keep in mind this object is passed by reference and jstree will modify it.\r\n\t\t * @param {Function} callback an optional function to execute once the state is restored.\r\n\t\t * @trigger set_state.jstree\r\n\t\t */\r\n\t\tset_state : function (state, callback) {\r\n\t\t\tif(state) {\r\n\t\t\t\tif(state.core && state.core.selected && state.core.initial_selection === undefined) {\r\n\t\t\t\t\tstate.core.initial_selection = this._data.core.selected.concat([]).sort().join(',');\r\n\t\t\t\t}\r\n\t\t\t\tif(state.core) {\r\n\t\t\t\t\tvar res, n, t, _this, i;\r\n\t\t\t\t\tif(state.core.loaded) {\r\n\t\t\t\t\t\tif(!this.settings.core.loaded_state || !$.isArray(state.core.loaded) || !state.core.loaded.length) {\r\n\t\t\t\t\t\t\tdelete state.core.loaded;\r\n\t\t\t\t\t\t\tthis.set_state(state, callback);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis._load_nodes(state.core.loaded, function (nodes) {\r\n\t\t\t\t\t\t\t\tdelete state.core.loaded;\r\n\t\t\t\t\t\t\t\tthis.set_state(state, callback);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(state.core.open) {\r\n\t\t\t\t\t\tif(!$.isArray(state.core.open) || !state.core.open.length) {\r\n\t\t\t\t\t\t\tdelete state.core.open;\r\n\t\t\t\t\t\t\tthis.set_state(state, callback);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis._load_nodes(state.core.open, function (nodes) {\r\n\t\t\t\t\t\t\t\tthis.open_node(nodes, false, 0);\r\n\t\t\t\t\t\t\t\tdelete state.core.open;\r\n\t\t\t\t\t\t\t\tthis.set_state(state, callback);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(state.core.scroll) {\r\n\t\t\t\t\t\tif(state.core.scroll && state.core.scroll.left !== undefined) {\r\n\t\t\t\t\t\t\tthis.element.scrollLeft(state.core.scroll.left);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(state.core.scroll && state.core.scroll.top !== undefined) {\r\n\t\t\t\t\t\t\tthis.element.scrollTop(state.core.scroll.top);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdelete state.core.scroll;\r\n\t\t\t\t\t\tthis.set_state(state, callback);\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(state.core.selected) {\r\n\t\t\t\t\t\t_this = this;\r\n\t\t\t\t\t\tif (state.core.initial_selection === undefined ||\r\n\t\t\t\t\t\t\tstate.core.initial_selection === this._data.core.selected.concat([]).sort().join(',')\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\tthis.deselect_all();\r\n\t\t\t\t\t\t\t$.each(state.core.selected, function (i, v) {\r\n\t\t\t\t\t\t\t\t_this.select_node(v, false, true);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdelete state.core.initial_selection;\r\n\t\t\t\t\t\tdelete state.core.selected;\r\n\t\t\t\t\t\tthis.set_state(state, callback);\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor(i in state) {\r\n\t\t\t\t\t\tif(state.hasOwnProperty(i) && i !== \"core\" && $.inArray(i, this.settings.plugins) === -1) {\r\n\t\t\t\t\t\t\tdelete state[i];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif($.isEmptyObject(state.core)) {\r\n\t\t\t\t\t\tdelete state.core;\r\n\t\t\t\t\t\tthis.set_state(state, callback);\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif($.isEmptyObject(state)) {\r\n\t\t\t\t\tstate = null;\r\n\t\t\t\t\tif(callback) { callback.call(this); }\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * triggered when a `set_state` call completes\r\n\t\t\t\t\t * @event\r\n\t\t\t\t\t * @name set_state.jstree\r\n\t\t\t\t\t */\r\n\t\t\t\t\tthis.trigger('set_state');\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\t/**\r\n\t\t * refreshes the tree - all nodes are reloaded with calls to `load_node`.\r\n\t\t * @name refresh()\r\n\t\t * @param {Boolean} skip_loading an option to skip showing the loading indicator\r\n\t\t * @param {Mixed} forget_state if set to `true` state will not be reapplied, if set to a function (receiving the current state as argument) the result of that function will be used as state\r\n\t\t * @trigger refresh.jstree\r\n\t\t */\r\n\t\trefresh : function (skip_loading, forget_state) {\r\n\t\t\tthis._data.core.state = forget_state === true ? {} : this.get_state();\r\n\t\t\tif(forget_state && $.isFunction(forget_state)) { this._data.core.state = forget_state.call(this, this._data.core.state); }\r\n\t\t\tthis._cnt = 0;\r\n\t\t\tthis._model.data = {};\r\n\t\t\tthis._model.data[$.jstree.root] = {\r\n\t\t\t\tid : $.jstree.root,\r\n\t\t\t\tparent : null,\r\n\t\t\t\tparents : [],\r\n\t\t\t\tchildren : [],\r\n\t\t\t\tchildren_d : [],\r\n\t\t\t\tstate : { loaded : false }\r\n\t\t\t};\r\n\t\t\tthis._data.core.selected = [];\r\n\t\t\tthis._data.core.last_clicked = null;\r\n\t\t\tthis._data.core.focused = null;\r\n\r\n\t\t\tvar c = this.get_container_ul()[0].className;\r\n\t\t\tif(!skip_loading) {\r\n\t\t\t\tthis.element.html(\"<\"+\"ul class='\"+c+\"' role='group'><\"+\"li class='jstree-initial-node jstree-loading jstree-leaf jstree-last' role='treeitem' id='j\"+this._id+\"_loading'><i class='jstree-icon jstree-ocl'></i><\"+\"a class='jstree-anchor' href='#'><i class='jstree-icon jstree-themeicon-hidden'></i>\" + this.get_string(\"Loading ...\") + \"</a></li></ul>\");\r\n\t\t\t\tthis.element.attr('aria-activedescendant','j'+this._id+'_loading');\r\n\t\t\t}\r\n\t\t\tthis.load_node($.jstree.root, function (o, s) {\r\n\t\t\t\tif(s) {\r\n\t\t\t\t\tthis.get_container_ul()[0].className = c;\r\n\t\t\t\t\tif(this._firstChild(this.get_container_ul()[0])) {\r\n\t\t\t\t\t\tthis.element.attr('aria-activedescendant',this._firstChild(this.get_container_ul()[0]).id);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.set_state($.extend(true, {}, this._data.core.state), function () {\r\n\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t * triggered when a `refresh` call completes\r\n\t\t\t\t\t\t * @event\r\n\t\t\t\t\t\t * @name refresh.jstree\r\n\t\t\t\t\t\t */\r\n\t\t\t\t\t\tthis.trigger('refresh');\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tthis._data.core.state = null;\r\n\t\t\t});\r\n\t\t},\r\n\t\t/**\r\n\t\t * refreshes a node in the tree (reload its children) all opened nodes inside that node are reloaded with calls to `load_node`.\r\n\t\t * @name refresh_node(obj)\r\n\t\t * @param  {mixed} obj the node\r\n\t\t * @trigger refresh_node.jstree\r\n\t\t */\r\n\t\trefresh_node : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\r\n\t\t\tvar opened = [], to_load = [], s = this._data.core.selected.concat([]);\r\n\t\t\tto_load.push(obj.id);\r\n\t\t\tif(obj.state.opened === true) { opened.push(obj.id); }\r\n\t\t\tthis.get_node(obj, true).find('.jstree-open').each(function() { to_load.push(this.id); opened.push(this.id); });\r\n\t\t\tthis._load_nodes(to_load, $.proxy(function (nodes) {\r\n\t\t\t\tthis.open_node(opened, false, 0);\r\n\t\t\t\tthis.select_node(s);\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when a node is refreshed\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name refresh_node.jstree\r\n\t\t\t\t * @param {Object} node - the refreshed node\r\n\t\t\t\t * @param {Array} nodes - an array of the IDs of the nodes that were reloaded\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('refresh_node', { 'node' : obj, 'nodes' : nodes });\r\n\t\t\t}, this), false, true);\r\n\t\t},\r\n\t\t/**\r\n\t\t * set (change) the ID of a node\r\n\t\t * @name set_id(obj, id)\r\n\t\t * @param  {mixed} obj the node\r\n\t\t * @param  {String} id the new ID\r\n\t\t * @return {Boolean}\r\n\t\t * @trigger set_id.jstree\r\n\t\t */\r\n\t\tset_id : function (obj, id) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\r\n\t\t\tvar i, j, m = this._model.data, old = obj.id;\r\n\t\t\tid = id.toString();\r\n\t\t\t// update parents (replace current ID with new one in children and children_d)\r\n\t\t\tm[obj.parent].children[$.inArray(obj.id, m[obj.parent].children)] = id;\r\n\t\t\tfor(i = 0, j = obj.parents.length; i < j; i++) {\r\n\t\t\t\tm[obj.parents[i]].children_d[$.inArray(obj.id, m[obj.parents[i]].children_d)] = id;\r\n\t\t\t}\r\n\t\t\t// update children (replace current ID with new one in parent and parents)\r\n\t\t\tfor(i = 0, j = obj.children.length; i < j; i++) {\r\n\t\t\t\tm[obj.children[i]].parent = id;\r\n\t\t\t}\r\n\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\r\n\t\t\t\tm[obj.children_d[i]].parents[$.inArray(obj.id, m[obj.children_d[i]].parents)] = id;\r\n\t\t\t}\r\n\t\t\ti = $.inArray(obj.id, this._data.core.selected);\r\n\t\t\tif(i !== -1) { this._data.core.selected[i] = id; }\r\n\t\t\t// update model and obj itself (obj.id, this._model.data[KEY])\r\n\t\t\ti = this.get_node(obj.id, true);\r\n\t\t\tif(i) {\r\n\t\t\t\ti.attr('id', id); //.children('.jstree-anchor').attr('id', id + '_anchor').end().attr('aria-labelledby', id + '_anchor');\r\n\t\t\t\tif(this.element.attr('aria-activedescendant') === obj.id) {\r\n\t\t\t\t\tthis.element.attr('aria-activedescendant', id);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tdelete m[obj.id];\r\n\t\t\tobj.id = id;\r\n\t\t\tobj.li_attr.id = id;\r\n\t\t\tm[id] = obj;\r\n\t\t\t/**\r\n\t\t\t * triggered when a node id value is changed\r\n\t\t\t * @event\r\n\t\t\t * @name set_id.jstree\r\n\t\t\t * @param {Object} node\r\n\t\t\t * @param {String} old the old id\r\n\t\t\t */\r\n\t\t\tthis.trigger('set_id',{ \"node\" : obj, \"new\" : obj.id, \"old\" : old });\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\t/**\r\n\t\t * get the text value of a node\r\n\t\t * @name get_text(obj)\r\n\t\t * @param  {mixed} obj the node\r\n\t\t * @return {String}\r\n\t\t */\r\n\t\tget_text : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\treturn (!obj || obj.id === $.jstree.root) ? false : obj.text;\r\n\t\t},\r\n\t\t/**\r\n\t\t * set the text value of a node. Used internally, please use `rename_node(obj, val)`.\r\n\t\t * @private\r\n\t\t * @name set_text(obj, val)\r\n\t\t * @param  {mixed} obj the node, you can pass an array to set the text on multiple nodes\r\n\t\t * @param  {String} val the new text value\r\n\t\t * @return {Boolean}\r\n\t\t * @trigger set_text.jstree\r\n\t\t */\r\n\t\tset_text : function (obj, val) {\r\n\t\t\tvar t1, t2;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.set_text(obj[t1], val);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\r\n\t\t\tobj.text = val;\r\n\t\t\tif(this.get_node(obj, true).length) {\r\n\t\t\t\tthis.redraw_node(obj.id);\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * triggered when a node text value is changed\r\n\t\t\t * @event\r\n\t\t\t * @name set_text.jstree\r\n\t\t\t * @param {Object} obj\r\n\t\t\t * @param {String} text the new value\r\n\t\t\t */\r\n\t\t\tthis.trigger('set_text',{ \"obj\" : obj, \"text\" : val });\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\t/**\r\n\t\t * gets a JSON representation of a node (or the whole tree)\r\n\t\t * @name get_json([obj, options])\r\n\t\t * @param  {mixed} obj\r\n\t\t * @param  {Object} options\r\n\t\t * @param  {Boolean} options.no_state do not return state information\r\n\t\t * @param  {Boolean} options.no_id do not return ID\r\n\t\t * @param  {Boolean} options.no_children do not include children\r\n\t\t * @param  {Boolean} options.no_data do not include node data\r\n\t\t * @param  {Boolean} options.no_li_attr do not include LI attributes\r\n\t\t * @param  {Boolean} options.no_a_attr do not include A attributes\r\n\t\t * @param  {Boolean} options.flat return flat JSON instead of nested\r\n\t\t * @return {Object}\r\n\t\t */\r\n\t\tget_json : function (obj, options, flat) {\r\n\t\t\tobj = this.get_node(obj || $.jstree.root);\r\n\t\t\tif(!obj) { return false; }\r\n\t\t\tif(options && options.flat && !flat) { flat = []; }\r\n\t\t\tvar tmp = {\r\n\t\t\t\t'id' : obj.id,\r\n\t\t\t\t'text' : obj.text,\r\n\t\t\t\t'icon' : this.get_icon(obj),\r\n\t\t\t\t'li_attr' : $.extend(true, {}, obj.li_attr),\r\n\t\t\t\t'a_attr' : $.extend(true, {}, obj.a_attr),\r\n\t\t\t\t'state' : {},\r\n\t\t\t\t'data' : options && options.no_data ? false : $.extend(true, $.isArray(obj.data)?[]:{}, obj.data)\r\n\t\t\t\t//( this.get_node(obj, true).length ? this.get_node(obj, true).data() : obj.data ),\r\n\t\t\t}, i, j;\r\n\t\t\tif(options && options.flat) {\r\n\t\t\t\ttmp.parent = obj.parent;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttmp.children = [];\r\n\t\t\t}\r\n\t\t\tif(!options || !options.no_state) {\r\n\t\t\t\tfor(i in obj.state) {\r\n\t\t\t\t\tif(obj.state.hasOwnProperty(i)) {\r\n\t\t\t\t\t\ttmp.state[i] = obj.state[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tdelete tmp.state;\r\n\t\t\t}\r\n\t\t\tif(options && options.no_li_attr) {\r\n\t\t\t\tdelete tmp.li_attr;\r\n\t\t\t}\r\n\t\t\tif(options && options.no_a_attr) {\r\n\t\t\t\tdelete tmp.a_attr;\r\n\t\t\t}\r\n\t\t\tif(options && options.no_id) {\r\n\t\t\t\tdelete tmp.id;\r\n\t\t\t\tif(tmp.li_attr && tmp.li_attr.id) {\r\n\t\t\t\t\tdelete tmp.li_attr.id;\r\n\t\t\t\t}\r\n\t\t\t\tif(tmp.a_attr && tmp.a_attr.id) {\r\n\t\t\t\t\tdelete tmp.a_attr.id;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(options && options.flat && obj.id !== $.jstree.root) {\r\n\t\t\t\tflat.push(tmp);\r\n\t\t\t}\r\n\t\t\tif(!options || !options.no_children) {\r\n\t\t\t\tfor(i = 0, j = obj.children.length; i < j; i++) {\r\n\t\t\t\t\tif(options && options.flat) {\r\n\t\t\t\t\t\tthis.get_json(obj.children[i], options, flat);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttmp.children.push(this.get_json(obj.children[i], options));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn options && options.flat ? flat : (obj.id === $.jstree.root ? tmp.children : tmp);\r\n\t\t},\r\n\t\t/**\r\n\t\t * create a new node (do not confuse with load_node)\r\n\t\t * @name create_node([par, node, pos, callback, is_loaded])\r\n\t\t * @param  {mixed}   par       the parent node (to create a root node use either \"#\" (string) or `null`)\r\n\t\t * @param  {mixed}   node      the data for the new node (a valid JSON object, or a simple string with the name)\r\n\t\t * @param  {mixed}   pos       the index at which to insert the node, \"first\" and \"last\" are also supported, default is \"last\"\r\n\t\t * @param  {Function} callback a function to be called once the node is created\r\n\t\t * @param  {Boolean} is_loaded internal argument indicating if the parent node was succesfully loaded\r\n\t\t * @return {String}            the ID of the newly create node\r\n\t\t * @trigger model.jstree, create_node.jstree\r\n\t\t */\r\n\t\tcreate_node : function (par, node, pos, callback, is_loaded) {\r\n\t\t\tif(par === null) { par = $.jstree.root; }\r\n\t\t\tpar = this.get_node(par);\r\n\t\t\tif(!par) { return false; }\r\n\t\t\tpos = pos === undefined ? \"last\" : pos;\r\n\t\t\tif(!pos.toString().match(/^(before|after)$/) && !is_loaded && !this.is_loaded(par)) {\r\n\t\t\t\treturn this.load_node(par, function () { this.create_node(par, node, pos, callback, true); });\r\n\t\t\t}\r\n\t\t\tif(!node) { node = { \"text\" : this.get_string('New node') }; }\r\n\t\t\tif(typeof node === \"string\") {\r\n\t\t\t\tnode = { \"text\" : node };\r\n\t\t\t} else {\r\n\t\t\t\tnode = $.extend(true, {}, node);\r\n\t\t\t}\r\n\t\t\tif(node.text === undefined) { node.text = this.get_string('New node'); }\r\n\t\t\tvar tmp, dpc, i, j;\r\n\r\n\t\t\tif(par.id === $.jstree.root) {\r\n\t\t\t\tif(pos === \"before\") { pos = \"first\"; }\r\n\t\t\t\tif(pos === \"after\") { pos = \"last\"; }\r\n\t\t\t}\r\n\t\t\tswitch(pos) {\r\n\t\t\t\tcase \"before\":\r\n\t\t\t\t\ttmp = this.get_node(par.parent);\r\n\t\t\t\t\tpos = $.inArray(par.id, tmp.children);\r\n\t\t\t\t\tpar = tmp;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"after\" :\r\n\t\t\t\t\ttmp = this.get_node(par.parent);\r\n\t\t\t\t\tpos = $.inArray(par.id, tmp.children) + 1;\r\n\t\t\t\t\tpar = tmp;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"inside\":\r\n\t\t\t\tcase \"first\":\r\n\t\t\t\t\tpos = 0;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"last\":\r\n\t\t\t\t\tpos = par.children.length;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tif(!pos) { pos = 0; }\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif(pos > par.children.length) { pos = par.children.length; }\r\n\t\t\tif(!node.id) { node.id = true; }\r\n\t\t\tif(!this.check(\"create_node\", node, par, pos)) {\r\n\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(node.id === true) { delete node.id; }\r\n\t\t\tnode = this._parse_model_from_json(node, par.id, par.parents.concat());\r\n\t\t\tif(!node) { return false; }\r\n\t\t\ttmp = this.get_node(node);\r\n\t\t\tdpc = [];\r\n\t\t\tdpc.push(node);\r\n\t\t\tdpc = dpc.concat(tmp.children_d);\r\n\t\t\tthis.trigger('model', { \"nodes\" : dpc, \"parent\" : par.id });\r\n\r\n\t\t\tpar.children_d = par.children_d.concat(dpc);\r\n\t\t\tfor(i = 0, j = par.parents.length; i < j; i++) {\r\n\t\t\t\tthis._model.data[par.parents[i]].children_d = this._model.data[par.parents[i]].children_d.concat(dpc);\r\n\t\t\t}\r\n\t\t\tnode = tmp;\r\n\t\t\ttmp = [];\r\n\t\t\tfor(i = 0, j = par.children.length; i < j; i++) {\r\n\t\t\t\ttmp[i >= pos ? i+1 : i] = par.children[i];\r\n\t\t\t}\r\n\t\t\ttmp[pos] = node.id;\r\n\t\t\tpar.children = tmp;\r\n\r\n\t\t\tthis.redraw_node(par, true);\r\n\t\t\t/**\r\n\t\t\t * triggered when a node is created\r\n\t\t\t * @event\r\n\t\t\t * @name create_node.jstree\r\n\t\t\t * @param {Object} node\r\n\t\t\t * @param {String} parent the parent's ID\r\n\t\t\t * @param {Number} position the position of the new node among the parent's children\r\n\t\t\t */\r\n\t\t\tthis.trigger('create_node', { \"node\" : this.get_node(node), \"parent\" : par.id, \"position\" : pos });\r\n\t\t\tif(callback) { callback.call(this, this.get_node(node)); }\r\n\t\t\treturn node.id;\r\n\t\t},\r\n\t\t/**\r\n\t\t * set the text value of a node\r\n\t\t * @name rename_node(obj, val)\r\n\t\t * @param  {mixed} obj the node, you can pass an array to rename multiple nodes to the same name\r\n\t\t * @param  {String} val the new text value\r\n\t\t * @return {Boolean}\r\n\t\t * @trigger rename_node.jstree\r\n\t\t */\r\n\t\trename_node : function (obj, val) {\r\n\t\t\tvar t1, t2, old;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.rename_node(obj[t1], val);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\r\n\t\t\told = obj.text;\r\n\t\t\tif(!this.check(\"rename_node\", obj, this.get_parent(obj), val)) {\r\n\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tthis.set_text(obj, val); // .apply(this, Array.prototype.slice.call(arguments))\r\n\t\t\t/**\r\n\t\t\t * triggered when a node is renamed\r\n\t\t\t * @event\r\n\t\t\t * @name rename_node.jstree\r\n\t\t\t * @param {Object} node\r\n\t\t\t * @param {String} text the new value\r\n\t\t\t * @param {String} old the old value\r\n\t\t\t */\r\n\t\t\tthis.trigger('rename_node', { \"node\" : obj, \"text\" : val, \"old\" : old });\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\t/**\r\n\t\t * remove a node\r\n\t\t * @name delete_node(obj)\r\n\t\t * @param  {mixed} obj the node, you can pass an array to delete multiple nodes\r\n\t\t * @return {Boolean}\r\n\t\t * @trigger delete_node.jstree, changed.jstree\r\n\t\t */\r\n\t\tdelete_node : function (obj) {\r\n\t\t\tvar t1, t2, par, pos, tmp, i, j, k, l, c, top, lft;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.delete_node(obj[t1]);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\r\n\t\t\tpar = this.get_node(obj.parent);\r\n\t\t\tpos = $.inArray(obj.id, par.children);\r\n\t\t\tc = false;\r\n\t\t\tif(!this.check(\"delete_node\", obj, par, pos)) {\r\n\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(pos !== -1) {\r\n\t\t\t\tpar.children = $.vakata.array_remove(par.children, pos);\r\n\t\t\t}\r\n\t\t\ttmp = obj.children_d.concat([]);\r\n\t\t\ttmp.push(obj.id);\r\n\t\t\tfor(i = 0, j = obj.parents.length; i < j; i++) {\r\n\t\t\t\tthis._model.data[obj.parents[i]].children_d = $.vakata.array_filter(this._model.data[obj.parents[i]].children_d, function (v) {\r\n\t\t\t\t\treturn $.inArray(v, tmp) === -1;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tfor(k = 0, l = tmp.length; k < l; k++) {\r\n\t\t\t\tif(this._model.data[tmp[k]].state.selected) {\r\n\t\t\t\t\tc = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (c) {\r\n\t\t\t\tthis._data.core.selected = $.vakata.array_filter(this._data.core.selected, function (v) {\r\n\t\t\t\t\treturn $.inArray(v, tmp) === -1;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * triggered when a node is deleted\r\n\t\t\t * @event\r\n\t\t\t * @name delete_node.jstree\r\n\t\t\t * @param {Object} node\r\n\t\t\t * @param {String} parent the parent's ID\r\n\t\t\t */\r\n\t\t\tthis.trigger('delete_node', { \"node\" : obj, \"parent\" : par.id });\r\n\t\t\tif(c) {\r\n\t\t\t\tthis.trigger('changed', { 'action' : 'delete_node', 'node' : obj, 'selected' : this._data.core.selected, 'parent' : par.id });\r\n\t\t\t}\r\n\t\t\tfor(k = 0, l = tmp.length; k < l; k++) {\r\n\t\t\t\tdelete this._model.data[tmp[k]];\r\n\t\t\t}\r\n\t\t\tif($.inArray(this._data.core.focused, tmp) !== -1) {\r\n\t\t\t\tthis._data.core.focused = null;\r\n\t\t\t\ttop = this.element[0].scrollTop;\r\n\t\t\t\tlft = this.element[0].scrollLeft;\r\n\t\t\t\tif(par.id === $.jstree.root) {\r\n\t\t\t\t\tif (this._model.data[$.jstree.root].children[0]) {\r\n\t\t\t\t\t\tthis.get_node(this._model.data[$.jstree.root].children[0], true).children('.jstree-anchor').focus();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.get_node(par, true).children('.jstree-anchor').focus();\r\n\t\t\t\t}\r\n\t\t\t\tthis.element[0].scrollTop  = top;\r\n\t\t\t\tthis.element[0].scrollLeft = lft;\r\n\t\t\t}\r\n\t\t\tthis.redraw_node(par, true);\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\t/**\r\n\t\t * check if an operation is premitted on the tree. Used internally.\r\n\t\t * @private\r\n\t\t * @name check(chk, obj, par, pos)\r\n\t\t * @param  {String} chk the operation to check, can be \"create_node\", \"rename_node\", \"delete_node\", \"copy_node\" or \"move_node\"\r\n\t\t * @param  {mixed} obj the node\r\n\t\t * @param  {mixed} par the parent\r\n\t\t * @param  {mixed} pos the position to insert at, or if \"rename_node\" - the new name\r\n\t\t * @param  {mixed} more some various additional information, for example if a \"move_node\" operations is triggered by DND this will be the hovered node\r\n\t\t * @return {Boolean}\r\n\t\t */\r\n\t\tcheck : function (chk, obj, par, pos, more) {\r\n\t\t\tobj = obj && obj.id ? obj : this.get_node(obj);\r\n\t\t\tpar = par && par.id ? par : this.get_node(par);\r\n\t\t\tvar tmp = chk.match(/^move_node|copy_node|create_node$/i) ? par : obj,\r\n\t\t\t\tchc = this.settings.core.check_callback;\r\n\t\t\tif(chk === \"move_node\" || chk === \"copy_node\") {\r\n\t\t\t\tif((!more || !more.is_multi) && (obj.id === par.id || (chk === \"move_node\" && $.inArray(obj.id, par.children) === pos) || $.inArray(par.id, obj.children_d) !== -1)) {\r\n\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'core', 'id' : 'core_01', 'reason' : 'Moving parent inside child', 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(tmp && tmp.data) { tmp = tmp.data; }\r\n\t\t\tif(tmp && tmp.functions && (tmp.functions[chk] === false || tmp.functions[chk] === true)) {\r\n\t\t\t\tif(tmp.functions[chk] === false) {\r\n\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'core', 'id' : 'core_02', 'reason' : 'Node data prevents function: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\r\n\t\t\t\t}\r\n\t\t\t\treturn tmp.functions[chk];\r\n\t\t\t}\r\n\t\t\tif(chc === false || ($.isFunction(chc) && chc.call(this, chk, obj, par, pos, more) === false) || (chc && chc[chk] === false)) {\r\n\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'core', 'id' : 'core_03', 'reason' : 'User config for core.check_callback prevents function: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\t/**\r\n\t\t * get the last error\r\n\t\t * @name last_error()\r\n\t\t * @return {Object}\r\n\t\t */\r\n\t\tlast_error : function () {\r\n\t\t\treturn this._data.core.last_error;\r\n\t\t},\r\n\t\t/**\r\n\t\t * move a node to a new parent\r\n\t\t * @name move_node(obj, par [, pos, callback, is_loaded])\r\n\t\t * @param  {mixed} obj the node to move, pass an array to move multiple nodes\r\n\t\t * @param  {mixed} par the new parent\r\n\t\t * @param  {mixed} pos the position to insert at (besides integer values, \"first\" and \"last\" are supported, as well as \"before\" and \"after\"), defaults to integer `0`\r\n\t\t * @param  {function} callback a function to call once the move is completed, receives 3 arguments - the node, the new parent and the position\r\n\t\t * @param  {Boolean} is_loaded internal parameter indicating if the parent node has been loaded\r\n\t\t * @param  {Boolean} skip_redraw internal parameter indicating if the tree should be redrawn\r\n\t\t * @param  {Boolean} instance internal parameter indicating if the node comes from another instance\r\n\t\t * @trigger move_node.jstree\r\n\t\t */\r\n\t\tmove_node : function (obj, par, pos, callback, is_loaded, skip_redraw, origin) {\r\n\t\t\tvar t1, t2, old_par, old_pos, new_par, old_ins, is_multi, dpc, tmp, i, j, k, l, p;\r\n\r\n\t\t\tpar = this.get_node(par);\r\n\t\t\tpos = pos === undefined ? 0 : pos;\r\n\t\t\tif(!par) { return false; }\r\n\t\t\tif(!pos.toString().match(/^(before|after)$/) && !is_loaded && !this.is_loaded(par)) {\r\n\t\t\t\treturn this.load_node(par, function () { this.move_node(obj, par, pos, callback, true, false, origin); });\r\n\t\t\t}\r\n\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tif(obj.length === 1) {\r\n\t\t\t\t\tobj = obj[0];\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t//obj = obj.slice();\r\n\t\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\t\tif((tmp = this.move_node(obj[t1], par, pos, callback, is_loaded, false, origin))) {\r\n\t\t\t\t\t\t\tpar = tmp;\r\n\t\t\t\t\t\t\tpos = \"after\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.redraw();\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tobj = obj && obj.id ? obj : this.get_node(obj);\r\n\r\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\r\n\r\n\t\t\told_par = (obj.parent || $.jstree.root).toString();\r\n\t\t\tnew_par = (!pos.toString().match(/^(before|after)$/) || par.id === $.jstree.root) ? par : this.get_node(par.parent);\r\n\t\t\told_ins = origin ? origin : (this._model.data[obj.id] ? this : $.jstree.reference(obj.id));\r\n\t\t\tis_multi = !old_ins || !old_ins._id || (this._id !== old_ins._id);\r\n\t\t\told_pos = old_ins && old_ins._id && old_par && old_ins._model.data[old_par] && old_ins._model.data[old_par].children ? $.inArray(obj.id, old_ins._model.data[old_par].children) : -1;\r\n\t\t\tif(old_ins && old_ins._id) {\r\n\t\t\t\tobj = old_ins._model.data[obj.id];\r\n\t\t\t}\r\n\r\n\t\t\tif(is_multi) {\r\n\t\t\t\tif((tmp = this.copy_node(obj, par, pos, callback, is_loaded, false, origin))) {\r\n\t\t\t\t\tif(old_ins) { old_ins.delete_node(obj); }\r\n\t\t\t\t\treturn tmp;\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t//var m = this._model.data;\r\n\t\t\tif(par.id === $.jstree.root) {\r\n\t\t\t\tif(pos === \"before\") { pos = \"first\"; }\r\n\t\t\t\tif(pos === \"after\") { pos = \"last\"; }\r\n\t\t\t}\r\n\t\t\tswitch(pos) {\r\n\t\t\t\tcase \"before\":\r\n\t\t\t\t\tpos = $.inArray(par.id, new_par.children);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"after\" :\r\n\t\t\t\t\tpos = $.inArray(par.id, new_par.children) + 1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"inside\":\r\n\t\t\t\tcase \"first\":\r\n\t\t\t\t\tpos = 0;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"last\":\r\n\t\t\t\t\tpos = new_par.children.length;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tif(!pos) { pos = 0; }\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif(pos > new_par.children.length) { pos = new_par.children.length; }\r\n\t\t\tif(!this.check(\"move_node\", obj, new_par, pos, { 'core' : true, 'origin' : origin, 'is_multi' : (old_ins && old_ins._id && old_ins._id !== this._id), 'is_foreign' : (!old_ins || !old_ins._id) })) {\r\n\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(obj.parent === new_par.id) {\r\n\t\t\t\tdpc = new_par.children.concat();\r\n\t\t\t\ttmp = $.inArray(obj.id, dpc);\r\n\t\t\t\tif(tmp !== -1) {\r\n\t\t\t\t\tdpc = $.vakata.array_remove(dpc, tmp);\r\n\t\t\t\t\tif(pos > tmp) { pos--; }\r\n\t\t\t\t}\r\n\t\t\t\ttmp = [];\r\n\t\t\t\tfor(i = 0, j = dpc.length; i < j; i++) {\r\n\t\t\t\t\ttmp[i >= pos ? i+1 : i] = dpc[i];\r\n\t\t\t\t}\r\n\t\t\t\ttmp[pos] = obj.id;\r\n\t\t\t\tnew_par.children = tmp;\r\n\t\t\t\tthis._node_changed(new_par.id);\r\n\t\t\t\tthis.redraw(new_par.id === $.jstree.root);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// clean old parent and up\r\n\t\t\t\ttmp = obj.children_d.concat();\r\n\t\t\t\ttmp.push(obj.id);\r\n\t\t\t\tfor(i = 0, j = obj.parents.length; i < j; i++) {\r\n\t\t\t\t\tdpc = [];\r\n\t\t\t\t\tp = old_ins._model.data[obj.parents[i]].children_d;\r\n\t\t\t\t\tfor(k = 0, l = p.length; k < l; k++) {\r\n\t\t\t\t\t\tif($.inArray(p[k], tmp) === -1) {\r\n\t\t\t\t\t\t\tdpc.push(p[k]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\told_ins._model.data[obj.parents[i]].children_d = dpc;\r\n\t\t\t\t}\r\n\t\t\t\told_ins._model.data[old_par].children = $.vakata.array_remove_item(old_ins._model.data[old_par].children, obj.id);\r\n\r\n\t\t\t\t// insert into new parent and up\r\n\t\t\t\tfor(i = 0, j = new_par.parents.length; i < j; i++) {\r\n\t\t\t\t\tthis._model.data[new_par.parents[i]].children_d = this._model.data[new_par.parents[i]].children_d.concat(tmp);\r\n\t\t\t\t}\r\n\t\t\t\tdpc = [];\r\n\t\t\t\tfor(i = 0, j = new_par.children.length; i < j; i++) {\r\n\t\t\t\t\tdpc[i >= pos ? i+1 : i] = new_par.children[i];\r\n\t\t\t\t}\r\n\t\t\t\tdpc[pos] = obj.id;\r\n\t\t\t\tnew_par.children = dpc;\r\n\t\t\t\tnew_par.children_d.push(obj.id);\r\n\t\t\t\tnew_par.children_d = new_par.children_d.concat(obj.children_d);\r\n\r\n\t\t\t\t// update object\r\n\t\t\t\tobj.parent = new_par.id;\r\n\t\t\t\ttmp = new_par.parents.concat();\r\n\t\t\t\ttmp.unshift(new_par.id);\r\n\t\t\t\tp = obj.parents.length;\r\n\t\t\t\tobj.parents = tmp;\r\n\r\n\t\t\t\t// update object children\r\n\t\t\t\ttmp = tmp.concat();\r\n\t\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\r\n\t\t\t\t\tthis._model.data[obj.children_d[i]].parents = this._model.data[obj.children_d[i]].parents.slice(0,p*-1);\r\n\t\t\t\t\tArray.prototype.push.apply(this._model.data[obj.children_d[i]].parents, tmp);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(old_par === $.jstree.root || new_par.id === $.jstree.root) {\r\n\t\t\t\t\tthis._model.force_full_redraw = true;\r\n\t\t\t\t}\r\n\t\t\t\tif(!this._model.force_full_redraw) {\r\n\t\t\t\t\tthis._node_changed(old_par);\r\n\t\t\t\t\tthis._node_changed(new_par.id);\r\n\t\t\t\t}\r\n\t\t\t\tif(!skip_redraw) {\r\n\t\t\t\t\tthis.redraw();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(callback) { callback.call(this, obj, new_par, pos); }\r\n\t\t\t/**\r\n\t\t\t * triggered when a node is moved\r\n\t\t\t * @event\r\n\t\t\t * @name move_node.jstree\r\n\t\t\t * @param {Object} node\r\n\t\t\t * @param {String} parent the parent's ID\r\n\t\t\t * @param {Number} position the position of the node among the parent's children\r\n\t\t\t * @param {String} old_parent the old parent of the node\r\n\t\t\t * @param {Number} old_position the old position of the node\r\n\t\t\t * @param {Boolean} is_multi do the node and new parent belong to different instances\r\n\t\t\t * @param {jsTree} old_instance the instance the node came from\r\n\t\t\t * @param {jsTree} new_instance the instance of the new parent\r\n\t\t\t */\r\n\t\t\tthis.trigger('move_node', { \"node\" : obj, \"parent\" : new_par.id, \"position\" : pos, \"old_parent\" : old_par, \"old_position\" : old_pos, 'is_multi' : (old_ins && old_ins._id && old_ins._id !== this._id), 'is_foreign' : (!old_ins || !old_ins._id), 'old_instance' : old_ins, 'new_instance' : this });\r\n\t\t\treturn obj.id;\r\n\t\t},\r\n\t\t/**\r\n\t\t * copy a node to a new parent\r\n\t\t * @name copy_node(obj, par [, pos, callback, is_loaded])\r\n\t\t * @param  {mixed} obj the node to copy, pass an array to copy multiple nodes\r\n\t\t * @param  {mixed} par the new parent\r\n\t\t * @param  {mixed} pos the position to insert at (besides integer values, \"first\" and \"last\" are supported, as well as \"before\" and \"after\"), defaults to integer `0`\r\n\t\t * @param  {function} callback a function to call once the move is completed, receives 3 arguments - the node, the new parent and the position\r\n\t\t * @param  {Boolean} is_loaded internal parameter indicating if the parent node has been loaded\r\n\t\t * @param  {Boolean} skip_redraw internal parameter indicating if the tree should be redrawn\r\n\t\t * @param  {Boolean} instance internal parameter indicating if the node comes from another instance\r\n\t\t * @trigger model.jstree copy_node.jstree\r\n\t\t */\r\n\t\tcopy_node : function (obj, par, pos, callback, is_loaded, skip_redraw, origin) {\r\n\t\t\tvar t1, t2, dpc, tmp, i, j, node, old_par, new_par, old_ins, is_multi;\r\n\r\n\t\t\tpar = this.get_node(par);\r\n\t\t\tpos = pos === undefined ? 0 : pos;\r\n\t\t\tif(!par) { return false; }\r\n\t\t\tif(!pos.toString().match(/^(before|after)$/) && !is_loaded && !this.is_loaded(par)) {\r\n\t\t\t\treturn this.load_node(par, function () { this.copy_node(obj, par, pos, callback, true, false, origin); });\r\n\t\t\t}\r\n\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tif(obj.length === 1) {\r\n\t\t\t\t\tobj = obj[0];\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t//obj = obj.slice();\r\n\t\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\t\tif((tmp = this.copy_node(obj[t1], par, pos, callback, is_loaded, true, origin))) {\r\n\t\t\t\t\t\t\tpar = tmp;\r\n\t\t\t\t\t\t\tpos = \"after\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.redraw();\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tobj = obj && obj.id ? obj : this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\r\n\r\n\t\t\told_par = (obj.parent || $.jstree.root).toString();\r\n\t\t\tnew_par = (!pos.toString().match(/^(before|after)$/) || par.id === $.jstree.root) ? par : this.get_node(par.parent);\r\n\t\t\told_ins = origin ? origin : (this._model.data[obj.id] ? this : $.jstree.reference(obj.id));\r\n\t\t\tis_multi = !old_ins || !old_ins._id || (this._id !== old_ins._id);\r\n\r\n\t\t\tif(old_ins && old_ins._id) {\r\n\t\t\t\tobj = old_ins._model.data[obj.id];\r\n\t\t\t}\r\n\r\n\t\t\tif(par.id === $.jstree.root) {\r\n\t\t\t\tif(pos === \"before\") { pos = \"first\"; }\r\n\t\t\t\tif(pos === \"after\") { pos = \"last\"; }\r\n\t\t\t}\r\n\t\t\tswitch(pos) {\r\n\t\t\t\tcase \"before\":\r\n\t\t\t\t\tpos = $.inArray(par.id, new_par.children);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"after\" :\r\n\t\t\t\t\tpos = $.inArray(par.id, new_par.children) + 1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"inside\":\r\n\t\t\t\tcase \"first\":\r\n\t\t\t\t\tpos = 0;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"last\":\r\n\t\t\t\t\tpos = new_par.children.length;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tif(!pos) { pos = 0; }\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif(pos > new_par.children.length) { pos = new_par.children.length; }\r\n\t\t\tif(!this.check(\"copy_node\", obj, new_par, pos, { 'core' : true, 'origin' : origin, 'is_multi' : (old_ins && old_ins._id && old_ins._id !== this._id), 'is_foreign' : (!old_ins || !old_ins._id) })) {\r\n\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tnode = old_ins ? old_ins.get_json(obj, { no_id : true, no_data : true, no_state : true }) : obj;\r\n\t\t\tif(!node) { return false; }\r\n\t\t\tif(node.id === true) { delete node.id; }\r\n\t\t\tnode = this._parse_model_from_json(node, new_par.id, new_par.parents.concat());\r\n\t\t\tif(!node) { return false; }\r\n\t\t\ttmp = this.get_node(node);\r\n\t\t\tif(obj && obj.state && obj.state.loaded === false) { tmp.state.loaded = false; }\r\n\t\t\tdpc = [];\r\n\t\t\tdpc.push(node);\r\n\t\t\tdpc = dpc.concat(tmp.children_d);\r\n\t\t\tthis.trigger('model', { \"nodes\" : dpc, \"parent\" : new_par.id });\r\n\r\n\t\t\t// insert into new parent and up\r\n\t\t\tfor(i = 0, j = new_par.parents.length; i < j; i++) {\r\n\t\t\t\tthis._model.data[new_par.parents[i]].children_d = this._model.data[new_par.parents[i]].children_d.concat(dpc);\r\n\t\t\t}\r\n\t\t\tdpc = [];\r\n\t\t\tfor(i = 0, j = new_par.children.length; i < j; i++) {\r\n\t\t\t\tdpc[i >= pos ? i+1 : i] = new_par.children[i];\r\n\t\t\t}\r\n\t\t\tdpc[pos] = tmp.id;\r\n\t\t\tnew_par.children = dpc;\r\n\t\t\tnew_par.children_d.push(tmp.id);\r\n\t\t\tnew_par.children_d = new_par.children_d.concat(tmp.children_d);\r\n\r\n\t\t\tif(new_par.id === $.jstree.root) {\r\n\t\t\t\tthis._model.force_full_redraw = true;\r\n\t\t\t}\r\n\t\t\tif(!this._model.force_full_redraw) {\r\n\t\t\t\tthis._node_changed(new_par.id);\r\n\t\t\t}\r\n\t\t\tif(!skip_redraw) {\r\n\t\t\t\tthis.redraw(new_par.id === $.jstree.root);\r\n\t\t\t}\r\n\t\t\tif(callback) { callback.call(this, tmp, new_par, pos); }\r\n\t\t\t/**\r\n\t\t\t * triggered when a node is copied\r\n\t\t\t * @event\r\n\t\t\t * @name copy_node.jstree\r\n\t\t\t * @param {Object} node the copied node\r\n\t\t\t * @param {Object} original the original node\r\n\t\t\t * @param {String} parent the parent's ID\r\n\t\t\t * @param {Number} position the position of the node among the parent's children\r\n\t\t\t * @param {String} old_parent the old parent of the node\r\n\t\t\t * @param {Number} old_position the position of the original node\r\n\t\t\t * @param {Boolean} is_multi do the node and new parent belong to different instances\r\n\t\t\t * @param {jsTree} old_instance the instance the node came from\r\n\t\t\t * @param {jsTree} new_instance the instance of the new parent\r\n\t\t\t */\r\n\t\t\tthis.trigger('copy_node', { \"node\" : tmp, \"original\" : obj, \"parent\" : new_par.id, \"position\" : pos, \"old_parent\" : old_par, \"old_position\" : old_ins && old_ins._id && old_par && old_ins._model.data[old_par] && old_ins._model.data[old_par].children ? $.inArray(obj.id, old_ins._model.data[old_par].children) : -1,'is_multi' : (old_ins && old_ins._id && old_ins._id !== this._id), 'is_foreign' : (!old_ins || !old_ins._id), 'old_instance' : old_ins, 'new_instance' : this });\r\n\t\t\treturn tmp.id;\r\n\t\t},\r\n\t\t/**\r\n\t\t * cut a node (a later call to `paste(obj)` would move the node)\r\n\t\t * @name cut(obj)\r\n\t\t * @param  {mixed} obj multiple objects can be passed using an array\r\n\t\t * @trigger cut.jstree\r\n\t\t */\r\n\t\tcut : function (obj) {\r\n\t\t\tif(!obj) { obj = this._data.core.selected.concat(); }\r\n\t\t\tif(!$.isArray(obj)) { obj = [obj]; }\r\n\t\t\tif(!obj.length) { return false; }\r\n\t\t\tvar tmp = [], o, t1, t2;\r\n\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\to = this.get_node(obj[t1]);\r\n\t\t\t\tif(o && o.id && o.id !== $.jstree.root) { tmp.push(o); }\r\n\t\t\t}\r\n\t\t\tif(!tmp.length) { return false; }\r\n\t\t\tccp_node = tmp;\r\n\t\t\tccp_inst = this;\r\n\t\t\tccp_mode = 'move_node';\r\n\t\t\t/**\r\n\t\t\t * triggered when nodes are added to the buffer for moving\r\n\t\t\t * @event\r\n\t\t\t * @name cut.jstree\r\n\t\t\t * @param {Array} node\r\n\t\t\t */\r\n\t\t\tthis.trigger('cut', { \"node\" : obj });\r\n\t\t},\r\n\t\t/**\r\n\t\t * copy a node (a later call to `paste(obj)` would copy the node)\r\n\t\t * @name copy(obj)\r\n\t\t * @param  {mixed} obj multiple objects can be passed using an array\r\n\t\t * @trigger copy.jstree\r\n\t\t */\r\n\t\tcopy : function (obj) {\r\n\t\t\tif(!obj) { obj = this._data.core.selected.concat(); }\r\n\t\t\tif(!$.isArray(obj)) { obj = [obj]; }\r\n\t\t\tif(!obj.length) { return false; }\r\n\t\t\tvar tmp = [], o, t1, t2;\r\n\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\to = this.get_node(obj[t1]);\r\n\t\t\t\tif(o && o.id && o.id !== $.jstree.root) { tmp.push(o); }\r\n\t\t\t}\r\n\t\t\tif(!tmp.length) { return false; }\r\n\t\t\tccp_node = tmp;\r\n\t\t\tccp_inst = this;\r\n\t\t\tccp_mode = 'copy_node';\r\n\t\t\t/**\r\n\t\t\t * triggered when nodes are added to the buffer for copying\r\n\t\t\t * @event\r\n\t\t\t * @name copy.jstree\r\n\t\t\t * @param {Array} node\r\n\t\t\t */\r\n\t\t\tthis.trigger('copy', { \"node\" : obj });\r\n\t\t},\r\n\t\t/**\r\n\t\t * get the current buffer (any nodes that are waiting for a paste operation)\r\n\t\t * @name get_buffer()\r\n\t\t * @return {Object} an object consisting of `mode` (\"copy_node\" or \"move_node\"), `node` (an array of objects) and `inst` (the instance)\r\n\t\t */\r\n\t\tget_buffer : function () {\r\n\t\t\treturn { 'mode' : ccp_mode, 'node' : ccp_node, 'inst' : ccp_inst };\r\n\t\t},\r\n\t\t/**\r\n\t\t * check if there is something in the buffer to paste\r\n\t\t * @name can_paste()\r\n\t\t * @return {Boolean}\r\n\t\t */\r\n\t\tcan_paste : function () {\r\n\t\t\treturn ccp_mode !== false && ccp_node !== false; // && ccp_inst._model.data[ccp_node];\r\n\t\t},\r\n\t\t/**\r\n\t\t * copy or move the previously cut or copied nodes to a new parent\r\n\t\t * @name paste(obj [, pos])\r\n\t\t * @param  {mixed} obj the new parent\r\n\t\t * @param  {mixed} pos the position to insert at (besides integer, \"first\" and \"last\" are supported), defaults to integer `0`\r\n\t\t * @trigger paste.jstree\r\n\t\t */\r\n\t\tpaste : function (obj, pos) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || !ccp_mode || !ccp_mode.match(/^(copy_node|move_node)$/) || !ccp_node) { return false; }\r\n\t\t\tif(this[ccp_mode](ccp_node, obj, pos, false, false, false, ccp_inst)) {\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when paste is invoked\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name paste.jstree\r\n\t\t\t\t * @param {String} parent the ID of the receiving node\r\n\t\t\t\t * @param {Array} node the nodes in the buffer\r\n\t\t\t\t * @param {String} mode the performed operation - \"copy_node\" or \"move_node\"\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('paste', { \"parent\" : obj.id, \"node\" : ccp_node, \"mode\" : ccp_mode });\r\n\t\t\t}\r\n\t\t\tccp_node = false;\r\n\t\t\tccp_mode = false;\r\n\t\t\tccp_inst = false;\r\n\t\t},\r\n\t\t/**\r\n\t\t * clear the buffer of previously copied or cut nodes\r\n\t\t * @name clear_buffer()\r\n\t\t * @trigger clear_buffer.jstree\r\n\t\t */\r\n\t\tclear_buffer : function () {\r\n\t\t\tccp_node = false;\r\n\t\t\tccp_mode = false;\r\n\t\t\tccp_inst = false;\r\n\t\t\t/**\r\n\t\t\t * triggered when the copy / cut buffer is cleared\r\n\t\t\t * @event\r\n\t\t\t * @name clear_buffer.jstree\r\n\t\t\t */\r\n\t\t\tthis.trigger('clear_buffer');\r\n\t\t},\r\n\t\t/**\r\n\t\t * put a node in edit mode (input field to rename the node)\r\n\t\t * @name edit(obj [, default_text, callback])\r\n\t\t * @param  {mixed} obj\r\n\t\t * @param  {String} default_text the text to populate the input with (if omitted or set to a non-string value the node's text value is used)\r\n\t\t * @param  {Function} callback a function to be called once the text box is blurred, it is called in the instance's scope and receives the node, a status parameter (true if the rename is successful, false otherwise) and a boolean indicating if the user cancelled the edit. You can access the node's title using .text\r\n\t\t */\r\n\t\tedit : function (obj, default_text, callback) {\r\n\t\t\tvar rtl, w, a, s, t, h1, h2, fn, tmp, cancel = false;\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj) { return false; }\r\n\t\t\tif(!this.check(\"edit\", obj, this.get_parent(obj))) {\r\n\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\ttmp = obj;\r\n\t\t\tdefault_text = typeof default_text === 'string' ? default_text : obj.text;\r\n\t\t\tthis.set_text(obj, \"\");\r\n\t\t\tobj = this._open_to(obj);\r\n\t\t\ttmp.text = default_text;\r\n\r\n\t\t\trtl = this._data.core.rtl;\r\n\t\t\tw  = this.element.width();\r\n\t\t\tthis._data.core.focused = tmp.id;\r\n\t\t\ta  = obj.children('.jstree-anchor').focus();\r\n\t\t\ts  = $('<span>');\r\n\t\t\t/*!\r\n\t\t\toi = obj.children(\"i:visible\"),\r\n\t\t\tai = a.children(\"i:visible\"),\r\n\t\t\tw1 = oi.width() * oi.length,\r\n\t\t\tw2 = ai.width() * ai.length,\r\n\t\t\t*/\r\n\t\t\tt  = default_text;\r\n\t\t\th1 = $(\"<\"+\"div />\", { css : { \"position\" : \"absolute\", \"top\" : \"-200px\", \"left\" : (rtl ? \"0px\" : \"-1000px\"), \"visibility\" : \"hidden\" } }).appendTo(document.body);\r\n\t\t\th2 = $(\"<\"+\"input />\", {\r\n\t\t\t\t\t\t\"value\" : t,\r\n\t\t\t\t\t\t\"class\" : \"jstree-rename-input\",\r\n\t\t\t\t\t\t// \"size\" : t.length,\r\n\t\t\t\t\t\t\"css\" : {\r\n\t\t\t\t\t\t\t\"padding\" : \"0\",\r\n\t\t\t\t\t\t\t\"border\" : \"1px solid silver\",\r\n\t\t\t\t\t\t\t\"box-sizing\" : \"border-box\",\r\n\t\t\t\t\t\t\t\"display\" : \"inline-block\",\r\n\t\t\t\t\t\t\t\"height\" : (this._data.core.li_height) + \"px\",\r\n\t\t\t\t\t\t\t\"lineHeight\" : (this._data.core.li_height) + \"px\",\r\n\t\t\t\t\t\t\t\"width\" : \"150px\" // will be set a bit further down\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\"blur\" : $.proxy(function (e) {\r\n\t\t\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\tvar i = s.children(\".jstree-rename-input\"),\r\n\t\t\t\t\t\t\t\tv = i.val(),\r\n\t\t\t\t\t\t\t\tf = this.settings.core.force_text,\r\n\t\t\t\t\t\t\t\tnv;\r\n\t\t\t\t\t\t\tif(v === \"\") { v = t; }\r\n\t\t\t\t\t\t\th1.remove();\r\n\t\t\t\t\t\t\ts.replaceWith(a);\r\n\t\t\t\t\t\t\ts.remove();\r\n\t\t\t\t\t\t\tt = f ? t : $('<div></div>').append($.parseHTML(t)).html();\r\n\t\t\t\t\t\t\tthis.set_text(obj, t);\r\n\t\t\t\t\t\t\tnv = !!this.rename_node(obj, f ? $('<div></div>').text(v).text() : $('<div></div>').append($.parseHTML(v)).html());\r\n\t\t\t\t\t\t\tif(!nv) {\r\n\t\t\t\t\t\t\t\tthis.set_text(obj, t); // move this up? and fix #483\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tthis._data.core.focused = tmp.id;\r\n\t\t\t\t\t\t\tsetTimeout($.proxy(function () {\r\n\t\t\t\t\t\t\t\tvar node = this.get_node(tmp.id, true);\r\n\t\t\t\t\t\t\t\tif(node.length) {\r\n\t\t\t\t\t\t\t\t\tthis._data.core.focused = tmp.id;\r\n\t\t\t\t\t\t\t\t\tnode.children('.jstree-anchor').focus();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}, this), 0);\r\n\t\t\t\t\t\t\tif(callback) {\r\n\t\t\t\t\t\t\t\tcallback.call(this, tmp, nv, cancel);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\th2 = null;\r\n\t\t\t\t\t\t}, this),\r\n\t\t\t\t\t\t\"keydown\" : function (e) {\r\n\t\t\t\t\t\t\tvar key = e.which;\r\n\t\t\t\t\t\t\tif(key === 27) {\r\n\t\t\t\t\t\t\t\tcancel = true;\r\n\t\t\t\t\t\t\t\tthis.value = t;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(key === 27 || key === 13 || key === 37 || key === 38 || key === 39 || key === 40 || key === 32) {\r\n\t\t\t\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(key === 27 || key === 13) {\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\tthis.blur();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\"click\" : function (e) { e.stopImmediatePropagation(); },\r\n\t\t\t\t\t\t\"mousedown\" : function (e) { e.stopImmediatePropagation(); },\r\n\t\t\t\t\t\t\"keyup\" : function (e) {\r\n\t\t\t\t\t\t\th2.width(Math.min(h1.text(\"pW\" + this.value).width(),w));\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\"keypress\" : function(e) {\r\n\t\t\t\t\t\t\tif(e.which === 13) { return false; }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\tfn = {\r\n\t\t\t\t\t\tfontFamily\t\t: a.css('fontFamily')\t\t|| '',\r\n\t\t\t\t\t\tfontSize\t\t: a.css('fontSize')\t\t\t|| '',\r\n\t\t\t\t\t\tfontWeight\t\t: a.css('fontWeight')\t\t|| '',\r\n\t\t\t\t\t\tfontStyle\t\t: a.css('fontStyle')\t\t|| '',\r\n\t\t\t\t\t\tfontStretch\t\t: a.css('fontStretch')\t\t|| '',\r\n\t\t\t\t\t\tfontVariant\t\t: a.css('fontVariant')\t\t|| '',\r\n\t\t\t\t\t\tletterSpacing\t: a.css('letterSpacing')\t|| '',\r\n\t\t\t\t\t\twordSpacing\t\t: a.css('wordSpacing')\t\t|| ''\r\n\t\t\t\t};\r\n\t\t\ts.attr('class', a.attr('class')).append(a.contents().clone()).append(h2);\r\n\t\t\ta.replaceWith(s);\r\n\t\t\th1.css(fn);\r\n\t\t\th2.css(fn).width(Math.min(h1.text(\"pW\" + h2[0].value).width(),w))[0].select();\r\n\t\t\t$(document).one('mousedown.jstree touchstart.jstree dnd_start.vakata', function (e) {\r\n\t\t\t\tif (h2 && e.target !== h2) {\r\n\t\t\t\t\t$(h2).blur();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * changes the theme\r\n\t\t * @name set_theme(theme_name [, theme_url])\r\n\t\t * @param {String} theme_name the name of the new theme to apply\r\n\t\t * @param {mixed} theme_url  the location of the CSS file for this theme. Omit or set to `false` if you manually included the file. Set to `true` to autoload from the `core.themes.dir` directory.\r\n\t\t * @trigger set_theme.jstree\r\n\t\t */\r\n\t\tset_theme : function (theme_name, theme_url) {\r\n\t\t\tif(!theme_name) { return false; }\r\n\t\t\tif(theme_url === true) {\r\n\t\t\t\tvar dir = this.settings.core.themes.dir;\r\n\t\t\t\tif(!dir) { dir = $.jstree.path + '/themes'; }\r\n\t\t\t\ttheme_url = dir + '/' + theme_name + '/style.css';\r\n\t\t\t}\r\n\t\t\tif(theme_url && $.inArray(theme_url, themes_loaded) === -1) {\r\n\t\t\t\t$('head').append('<'+'link rel=\"stylesheet\" href=\"' + theme_url + '\" type=\"text/css\" />');\r\n\t\t\t\tthemes_loaded.push(theme_url);\r\n\t\t\t}\r\n\t\t\tif(this._data.core.themes.name) {\r\n\t\t\t\tthis.element.removeClass('jstree-' + this._data.core.themes.name);\r\n\t\t\t}\r\n\t\t\tthis._data.core.themes.name = theme_name;\r\n\t\t\tthis.element.addClass('jstree-' + theme_name);\r\n\t\t\tthis.element[this.settings.core.themes.responsive ? 'addClass' : 'removeClass' ]('jstree-' + theme_name + '-responsive');\r\n\t\t\t/**\r\n\t\t\t * triggered when a theme is set\r\n\t\t\t * @event\r\n\t\t\t * @name set_theme.jstree\r\n\t\t\t * @param {String} theme the new theme\r\n\t\t\t */\r\n\t\t\tthis.trigger('set_theme', { 'theme' : theme_name });\r\n\t\t},\r\n\t\t/**\r\n\t\t * gets the name of the currently applied theme name\r\n\t\t * @name get_theme()\r\n\t\t * @return {String}\r\n\t\t */\r\n\t\tget_theme : function () { return this._data.core.themes.name; },\r\n\t\t/**\r\n\t\t * changes the theme variant (if the theme has variants)\r\n\t\t * @name set_theme_variant(variant_name)\r\n\t\t * @param {String|Boolean} variant_name the variant to apply (if `false` is used the current variant is removed)\r\n\t\t */\r\n\t\tset_theme_variant : function (variant_name) {\r\n\t\t\tif(this._data.core.themes.variant) {\r\n\t\t\t\tthis.element.removeClass('jstree-' + this._data.core.themes.name + '-' + this._data.core.themes.variant);\r\n\t\t\t}\r\n\t\t\tthis._data.core.themes.variant = variant_name;\r\n\t\t\tif(variant_name) {\r\n\t\t\t\tthis.element.addClass('jstree-' + this._data.core.themes.name + '-' + this._data.core.themes.variant);\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * gets the name of the currently applied theme variant\r\n\t\t * @name get_theme()\r\n\t\t * @return {String}\r\n\t\t */\r\n\t\tget_theme_variant : function () { return this._data.core.themes.variant; },\r\n\t\t/**\r\n\t\t * shows a striped background on the container (if the theme supports it)\r\n\t\t * @name show_stripes()\r\n\t\t */\r\n\t\tshow_stripes : function () {\r\n\t\t\tthis._data.core.themes.stripes = true;\r\n\t\t\tthis.get_container_ul().addClass(\"jstree-striped\");\r\n\t\t\t/**\r\n\t\t\t * triggered when stripes are shown\r\n\t\t\t * @event\r\n\t\t\t * @name show_stripes.jstree\r\n\t\t\t */\r\n\t\t\tthis.trigger('show_stripes');\r\n\t\t},\r\n\t\t/**\r\n\t\t * hides the striped background on the container\r\n\t\t * @name hide_stripes()\r\n\t\t */\r\n\t\thide_stripes : function () {\r\n\t\t\tthis._data.core.themes.stripes = false;\r\n\t\t\tthis.get_container_ul().removeClass(\"jstree-striped\");\r\n\t\t\t/**\r\n\t\t\t * triggered when stripes are hidden\r\n\t\t\t * @event\r\n\t\t\t * @name hide_stripes.jstree\r\n\t\t\t */\r\n\t\t\tthis.trigger('hide_stripes');\r\n\t\t},\r\n\t\t/**\r\n\t\t * toggles the striped background on the container\r\n\t\t * @name toggle_stripes()\r\n\t\t */\r\n\t\ttoggle_stripes : function () { if(this._data.core.themes.stripes) { this.hide_stripes(); } else { this.show_stripes(); } },\r\n\t\t/**\r\n\t\t * shows the connecting dots (if the theme supports it)\r\n\t\t * @name show_dots()\r\n\t\t */\r\n\t\tshow_dots : function () {\r\n\t\t\tthis._data.core.themes.dots = true;\r\n\t\t\tthis.get_container_ul().removeClass(\"jstree-no-dots\");\r\n\t\t\t/**\r\n\t\t\t * triggered when dots are shown\r\n\t\t\t * @event\r\n\t\t\t * @name show_dots.jstree\r\n\t\t\t */\r\n\t\t\tthis.trigger('show_dots');\r\n\t\t},\r\n\t\t/**\r\n\t\t * hides the connecting dots\r\n\t\t * @name hide_dots()\r\n\t\t */\r\n\t\thide_dots : function () {\r\n\t\t\tthis._data.core.themes.dots = false;\r\n\t\t\tthis.get_container_ul().addClass(\"jstree-no-dots\");\r\n\t\t\t/**\r\n\t\t\t * triggered when dots are hidden\r\n\t\t\t * @event\r\n\t\t\t * @name hide_dots.jstree\r\n\t\t\t */\r\n\t\t\tthis.trigger('hide_dots');\r\n\t\t},\r\n\t\t/**\r\n\t\t * toggles the connecting dots\r\n\t\t * @name toggle_dots()\r\n\t\t */\r\n\t\ttoggle_dots : function () { if(this._data.core.themes.dots) { this.hide_dots(); } else { this.show_dots(); } },\r\n\t\t/**\r\n\t\t * show the node icons\r\n\t\t * @name show_icons()\r\n\t\t */\r\n\t\tshow_icons : function () {\r\n\t\t\tthis._data.core.themes.icons = true;\r\n\t\t\tthis.get_container_ul().removeClass(\"jstree-no-icons\");\r\n\t\t\t/**\r\n\t\t\t * triggered when icons are shown\r\n\t\t\t * @event\r\n\t\t\t * @name show_icons.jstree\r\n\t\t\t */\r\n\t\t\tthis.trigger('show_icons');\r\n\t\t},\r\n\t\t/**\r\n\t\t * hide the node icons\r\n\t\t * @name hide_icons()\r\n\t\t */\r\n\t\thide_icons : function () {\r\n\t\t\tthis._data.core.themes.icons = false;\r\n\t\t\tthis.get_container_ul().addClass(\"jstree-no-icons\");\r\n\t\t\t/**\r\n\t\t\t * triggered when icons are hidden\r\n\t\t\t * @event\r\n\t\t\t * @name hide_icons.jstree\r\n\t\t\t */\r\n\t\t\tthis.trigger('hide_icons');\r\n\t\t},\r\n\t\t/**\r\n\t\t * toggle the node icons\r\n\t\t * @name toggle_icons()\r\n\t\t */\r\n\t\ttoggle_icons : function () { if(this._data.core.themes.icons) { this.hide_icons(); } else { this.show_icons(); } },\r\n\t\t/**\r\n\t\t * show the node ellipsis\r\n\t\t * @name show_icons()\r\n\t\t */\r\n\t\tshow_ellipsis : function () {\r\n\t\t\tthis._data.core.themes.ellipsis = true;\r\n\t\t\tthis.get_container_ul().addClass(\"jstree-ellipsis\");\r\n\t\t\t/**\r\n\t\t\t * triggered when ellisis is shown\r\n\t\t\t * @event\r\n\t\t\t * @name show_ellipsis.jstree\r\n\t\t\t */\r\n\t\t\tthis.trigger('show_ellipsis');\r\n\t\t},\r\n\t\t/**\r\n\t\t * hide the node ellipsis\r\n\t\t * @name hide_ellipsis()\r\n\t\t */\r\n\t\thide_ellipsis : function () {\r\n\t\t\tthis._data.core.themes.ellipsis = false;\r\n\t\t\tthis.get_container_ul().removeClass(\"jstree-ellipsis\");\r\n\t\t\t/**\r\n\t\t\t * triggered when ellisis is hidden\r\n\t\t\t * @event\r\n\t\t\t * @name hide_ellipsis.jstree\r\n\t\t\t */\r\n\t\t\tthis.trigger('hide_ellipsis');\r\n\t\t},\r\n\t\t/**\r\n\t\t * toggle the node ellipsis\r\n\t\t * @name toggle_icons()\r\n\t\t */\r\n\t\ttoggle_ellipsis : function () { if(this._data.core.themes.ellipsis) { this.hide_ellipsis(); } else { this.show_ellipsis(); } },\r\n\t\t/**\r\n\t\t * set the node icon for a node\r\n\t\t * @name set_icon(obj, icon)\r\n\t\t * @param {mixed} obj\r\n\t\t * @param {String} icon the new icon - can be a path to an icon or a className, if using an image that is in the current directory use a `./` prefix, otherwise it will be detected as a class\r\n\t\t */\r\n\t\tset_icon : function (obj, icon) {\r\n\t\t\tvar t1, t2, dom, old;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.set_icon(obj[t1], icon);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\r\n\t\t\told = obj.icon;\r\n\t\t\tobj.icon = icon === true || icon === null || icon === undefined || icon === '' ? true : icon;\r\n\t\t\tdom = this.get_node(obj, true).children(\".jstree-anchor\").children(\".jstree-themeicon\");\r\n\t\t\tif(icon === false) {\r\n\t\t\t\tdom.removeClass('jstree-themeicon-custom ' + old).css(\"background\",\"\").removeAttr(\"rel\");\r\n\t\t\t\tthis.hide_icon(obj);\r\n\t\t\t}\r\n\t\t\telse if(icon === true || icon === null || icon === undefined || icon === '') {\r\n\t\t\t\tdom.removeClass('jstree-themeicon-custom ' + old).css(\"background\",\"\").removeAttr(\"rel\");\r\n\t\t\t\tif(old === false) { this.show_icon(obj); }\r\n\t\t\t}\r\n\t\t\telse if(icon.indexOf(\"/\") === -1 && icon.indexOf(\".\") === -1) {\r\n\t\t\t\tdom.removeClass(old).css(\"background\",\"\");\r\n\t\t\t\tdom.addClass(icon + ' jstree-themeicon-custom').attr(\"rel\",icon);\r\n\t\t\t\tif(old === false) { this.show_icon(obj); }\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdom.removeClass(old).css(\"background\",\"\");\r\n\t\t\t\tdom.addClass('jstree-themeicon-custom').css(\"background\", \"url('\" + icon + \"') center center no-repeat\").attr(\"rel\",icon);\r\n\t\t\t\tif(old === false) { this.show_icon(obj); }\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\t/**\r\n\t\t * get the node icon for a node\r\n\t\t * @name get_icon(obj)\r\n\t\t * @param {mixed} obj\r\n\t\t * @return {String}\r\n\t\t */\r\n\t\tget_icon : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\treturn (!obj || obj.id === $.jstree.root) ? false : obj.icon;\r\n\t\t},\r\n\t\t/**\r\n\t\t * hide the icon on an individual node\r\n\t\t * @name hide_icon(obj)\r\n\t\t * @param {mixed} obj\r\n\t\t */\r\n\t\thide_icon : function (obj) {\r\n\t\t\tvar t1, t2;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.hide_icon(obj[t1]);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj === $.jstree.root) { return false; }\r\n\t\t\tobj.icon = false;\r\n\t\t\tthis.get_node(obj, true).children(\".jstree-anchor\").children(\".jstree-themeicon\").addClass('jstree-themeicon-hidden');\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\t/**\r\n\t\t * show the icon on an individual node\r\n\t\t * @name show_icon(obj)\r\n\t\t * @param {mixed} obj\r\n\t\t */\r\n\t\tshow_icon : function (obj) {\r\n\t\t\tvar t1, t2, dom;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.show_icon(obj[t1]);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj === $.jstree.root) { return false; }\r\n\t\t\tdom = this.get_node(obj, true);\r\n\t\t\tobj.icon = dom.length ? dom.children(\".jstree-anchor\").children(\".jstree-themeicon\").attr('rel') : true;\r\n\t\t\tif(!obj.icon) { obj.icon = true; }\r\n\t\t\tdom.children(\".jstree-anchor\").children(\".jstree-themeicon\").removeClass('jstree-themeicon-hidden');\r\n\t\t\treturn true;\r\n\t\t}\r\n\t});\r\n\r\n\t// helpers\r\n\t$.vakata = {};\r\n\r\n\t$.vakata.search = function(pattern, txt, options) {\r\n\t\toptions = options || {};\r\n\t\tif(options.fuzzy !== false) {\r\n\t\t\toptions.fuzzy = true;\r\n\t\t}\r\n\t\tpattern = options.caseSensitive ? pattern : pattern.toLowerCase();\r\n\t\tvar MATCH_LOCATION\t= options.location || 0,\r\n\t\t\tMATCH_DISTANCE\t= options.distance || 100,\r\n\t\t\tMATCH_THRESHOLD\t= options.threshold || 0.6,\r\n\t\t\tpatternLen = pattern.length;\r\n\t\tif(patternLen > 32) {\r\n\t\t\toptions.fuzzy = false;\r\n\t\t}\r\n\t\tif(options.fuzzy) {\r\n\t\t\tvar matchmask = 1 << (patternLen - 1);\r\n\t\t\tvar pattern_alphabet = (function () {\r\n\t\t\t\tvar mask = {},\r\n\t\t\t\t\ti = 0;\r\n\t\t\t\tfor (i = 0; i < patternLen; i++) {\r\n\t\t\t\t\tmask[pattern.charAt(i)] = 0;\r\n\t\t\t\t}\r\n\t\t\t\tfor (i = 0; i < patternLen; i++) {\r\n\t\t\t\t\tmask[pattern.charAt(i)] |= 1 << (patternLen - i - 1);\r\n\t\t\t\t}\r\n\t\t\t\treturn mask;\r\n\t\t\t})();\r\n\t\t\tvar match_bitapScore = function (e, x) {\r\n\t\t\t\tvar accuracy = e / patternLen,\r\n\t\t\t\t\tproximity = Math.abs(MATCH_LOCATION - x);\r\n\t\t\t\tif(!MATCH_DISTANCE) {\r\n\t\t\t\t\treturn proximity ? 1.0 : accuracy;\r\n\t\t\t\t}\r\n\t\t\t\treturn accuracy + (proximity / MATCH_DISTANCE);\r\n\t\t\t};\r\n\t\t}\r\n\t\tvar search = function (text) {\r\n\t\t\ttext = options.caseSensitive ? text : text.toLowerCase();\r\n\t\t\tif(pattern === text || text.indexOf(pattern) !== -1) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tisMatch: true,\r\n\t\t\t\t\tscore: 0\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\tif(!options.fuzzy) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tisMatch: false,\r\n\t\t\t\t\tscore: 1\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\tvar i, j,\r\n\t\t\t\ttextLen = text.length,\r\n\t\t\t\tscoreThreshold = MATCH_THRESHOLD,\r\n\t\t\t\tbestLoc = text.indexOf(pattern, MATCH_LOCATION),\r\n\t\t\t\tbinMin, binMid,\r\n\t\t\t\tbinMax = patternLen + textLen,\r\n\t\t\t\tlastRd, start, finish, rd, charMatch,\r\n\t\t\t\tscore = 1,\r\n\t\t\t\tlocations = [];\r\n\t\t\tif (bestLoc != -1) {\r\n\t\t\t\tscoreThreshold = Math.min(match_bitapScore(0, bestLoc), scoreThreshold);\r\n\t\t\t\tbestLoc = text.lastIndexOf(pattern, MATCH_LOCATION + patternLen);\r\n\t\t\t\tif (bestLoc != -1) {\r\n\t\t\t\t\tscoreThreshold = Math.min(match_bitapScore(0, bestLoc), scoreThreshold);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbestLoc = -1;\r\n\t\t\tfor (i = 0; i < patternLen; i++) {\r\n\t\t\t\tbinMin = 0;\r\n\t\t\t\tbinMid = binMax;\r\n\t\t\t\twhile (binMin < binMid) {\r\n\t\t\t\t\tif (match_bitapScore(i, MATCH_LOCATION + binMid) <= scoreThreshold) {\r\n\t\t\t\t\t\tbinMin = binMid;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbinMax = binMid;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbinMid = Math.floor((binMax - binMin) / 2 + binMin);\r\n\t\t\t\t}\r\n\t\t\t\tbinMax = binMid;\r\n\t\t\t\tstart = Math.max(1, MATCH_LOCATION - binMid + 1);\r\n\t\t\t\tfinish = Math.min(MATCH_LOCATION + binMid, textLen) + patternLen;\r\n\t\t\t\trd = Array(finish + 2);\r\n\t\t\t\trd[finish + 1] = (1 << i) - 1;\r\n\t\t\t\tfor (j = finish; j >= start; j--) {\r\n\t\t\t\t\tcharMatch = pattern_alphabet[text.charAt(j - 1)];\r\n\t\t\t\t\tif (i === 0) {\r\n\t\t\t\t\t\trd[j] = ((rd[j + 1] << 1) | 1) & charMatch;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\trd[j] = ((rd[j + 1] << 1) | 1) & charMatch | (((lastRd[j + 1] | lastRd[j]) << 1) | 1) | lastRd[j + 1];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (rd[j] & matchmask) {\r\n\t\t\t\t\t\tscore = match_bitapScore(i, j - 1);\r\n\t\t\t\t\t\tif (score <= scoreThreshold) {\r\n\t\t\t\t\t\t\tscoreThreshold = score;\r\n\t\t\t\t\t\t\tbestLoc = j - 1;\r\n\t\t\t\t\t\t\tlocations.push(bestLoc);\r\n\t\t\t\t\t\t\tif (bestLoc > MATCH_LOCATION) {\r\n\t\t\t\t\t\t\t\tstart = Math.max(1, 2 * MATCH_LOCATION - bestLoc);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (match_bitapScore(i + 1, MATCH_LOCATION) > scoreThreshold) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tlastRd = rd;\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\tisMatch: bestLoc >= 0,\r\n\t\t\t\tscore: score\r\n\t\t\t};\r\n\t\t};\r\n\t\treturn txt === true ? { 'search' : search } : search(txt);\r\n\t};\r\n\r\n\t// collect attributes\r\n\t$.vakata.attributes = function(node, with_values) {\r\n\t\tnode = $(node)[0];\r\n\t\tvar attr = with_values ? {} : [];\r\n\t\tif(node && node.attributes) {\r\n\t\t\t$.each(node.attributes, function (i, v) {\r\n\t\t\t\tif($.inArray(v.name.toLowerCase(),['style','contenteditable','hasfocus','tabindex']) !== -1) { return; }\r\n\t\t\t\tif(v.value !== null && $.trim(v.value) !== '') {\r\n\t\t\t\t\tif(with_values) { attr[v.name] = v.value; }\r\n\t\t\t\t\telse { attr.push(v.name); }\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn attr;\r\n\t};\r\n\t$.vakata.array_unique = function(array) {\r\n\t\tvar a = [], i, j, l, o = {};\r\n\t\tfor(i = 0, l = array.length; i < l; i++) {\r\n\t\t\tif(o[array[i]] === undefined) {\r\n\t\t\t\ta.push(array[i]);\r\n\t\t\t\to[array[i]] = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn a;\r\n\t};\r\n\t// remove item from array\r\n\t$.vakata.array_remove = function(array, from) {\r\n\t\tarray.splice(from, 1);\r\n\t\treturn array;\r\n\t\t//var rest = array.slice((to || from) + 1 || array.length);\r\n\t\t//array.length = from < 0 ? array.length + from : from;\r\n\t\t//array.push.apply(array, rest);\r\n\t\t//return array;\r\n\t};\r\n\t// remove item from array\r\n\t$.vakata.array_remove_item = function(array, item) {\r\n\t\tvar tmp = $.inArray(item, array);\r\n\t\treturn tmp !== -1 ? $.vakata.array_remove(array, tmp) : array;\r\n\t};\r\n\t$.vakata.array_filter = function(c,a,b,d,e) {\r\n\t\tif (c.filter) {\r\n\t\t\treturn c.filter(a, b);\r\n\t\t}\r\n\t\td=[];\r\n\t\tfor (e in c) {\r\n\t\t\tif (~~e+''===e+'' && e>=0 && a.call(b,c[e],+e,c)) {\r\n\t\t\t\td.push(c[e]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn d;\r\n\t};\r\n\r\n\r\n\treturn Tree;\r\n\r\n});\r\n\ndefine('skylark-widgets-hierarchy/addons/changed',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"../Hierarchy\"\r\n],function(langx,browser,eventer,noder,geom,$,jstree){\r\n\t\"use strict\";\r\n\r\n\tif($.jstree.plugins.changed) { return; }\r\n\r\n\t$.jstree.plugins.changed = function (options, parent) {\r\n\t\tvar last = [];\r\n\t\tthis.trigger = function (ev, data) {\r\n\t\t\tvar i, j;\r\n\t\t\tif(!data) {\r\n\t\t\t\tdata = {};\r\n\t\t\t}\r\n\t\t\tif(ev.replace('.jstree','') === 'changed') {\r\n\t\t\t\tdata.changed = { selected : [], deselected : [] };\r\n\t\t\t\tvar tmp = {};\r\n\t\t\t\tfor(i = 0, j = last.length; i < j; i++) {\r\n\t\t\t\t\ttmp[last[i]] = 1;\r\n\t\t\t\t}\r\n\t\t\t\tfor(i = 0, j = data.selected.length; i < j; i++) {\r\n\t\t\t\t\tif(!tmp[data.selected[i]]) {\r\n\t\t\t\t\t\tdata.changed.selected.push(data.selected[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttmp[data.selected[i]] = 2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfor(i = 0, j = last.length; i < j; i++) {\r\n\t\t\t\t\tif(tmp[last[i]] === 1) {\r\n\t\t\t\t\t\tdata.changed.deselected.push(last[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tlast = data.selected.slice();\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * triggered when selection changes (the \"changed\" plugin enhances the original event with more data)\r\n\t\t\t * @event\r\n\t\t\t * @name changed.jstree\r\n\t\t\t * @param {Object} node\r\n\t\t\t * @param {Object} action the action that caused the selection to change\r\n\t\t\t * @param {Array} selected the current selection\r\n\t\t\t * @param {Object} changed an object containing two properties `selected` and `deselected` - both arrays of node IDs, which were selected or deselected since the last changed event\r\n\t\t\t * @param {Object} event the event (if any) that triggered this changed event\r\n\t\t\t * @plugin changed\r\n\t\t\t */\r\n\t\t\tparent.trigger.call(this, ev, data);\r\n\t\t};\r\n\t\tthis.refresh = function (skip_loading, forget_state) {\r\n\t\t\tlast = [];\r\n\t\t\treturn parent.refresh.apply(this, arguments);\r\n\t\t};\r\n\t};\r\n\r\n\treturn $;\r\n});\ndefine('skylark-widgets-hierarchy/addons/checkbox',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"../Hierarchy\"\r\n],function(langx,browser,eventer,noder,geom,$,jstree){\r\n\t\"use strict\";\r\n\r\n\tif($.jstree.plugins.checkbox) { return; }\r\n\r\n\tvar _i = document.createElement('I');\r\n\t_i.className = 'jstree-icon jstree-checkbox';\r\n\t_i.setAttribute('role', 'presentation');\r\n\t/**\r\n\t * stores all defaults for the checkbox plugin\r\n\t * @name $.jstree.defaults.checkbox\r\n\t * @plugin checkbox\r\n\t */\r\n\t$.jstree.defaults.checkbox = {\r\n\t\t/**\r\n\t\t * a boolean indicating if checkboxes should be visible (can be changed at a later time using `show_checkboxes()` and `hide_checkboxes`). Defaults to `true`.\r\n\t\t * @name $.jstree.defaults.checkbox.visible\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tvisible\t\t\t\t: true,\r\n\t\t/**\r\n\t\t * a boolean indicating if checkboxes should cascade down and have an undetermined state. Defaults to `true`.\r\n\t\t * @name $.jstree.defaults.checkbox.three_state\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthree_state\t\t\t: true,\r\n\t\t/**\r\n\t\t * a boolean indicating if clicking anywhere on the node should act as clicking on the checkbox. Defaults to `true`.\r\n\t\t * @name $.jstree.defaults.checkbox.whole_node\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\twhole_node\t\t\t: true,\r\n\t\t/**\r\n\t\t * a boolean indicating if the selected style of a node should be kept, or removed. Defaults to `true`.\r\n\t\t * @name $.jstree.defaults.checkbox.keep_selected_style\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tkeep_selected_style\t: true,\r\n\t\t/**\r\n\t\t * This setting controls how cascading and undetermined nodes are applied.\r\n\t\t * If 'up' is in the string - cascading up is enabled, if 'down' is in the string - cascading down is enabled, if 'undetermined' is in the string - undetermined nodes will be used.\r\n\t\t * If `three_state` is set to `true` this setting is automatically set to 'up+down+undetermined'. Defaults to ''.\r\n\t\t * @name $.jstree.defaults.checkbox.cascade\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tcascade\t\t\t\t: '',\r\n\t\t/**\r\n\t\t * This setting controls if checkbox are bound to the general tree selection or to an internal array maintained by the checkbox plugin. Defaults to `true`, only set to `false` if you know exactly what you are doing.\r\n\t\t * @name $.jstree.defaults.checkbox.tie_selection\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\ttie_selection\t\t: true,\r\n\r\n\t\t/**\r\n\t\t * This setting controls if cascading down affects disabled checkboxes\r\n\t\t * @name $.jstree.defaults.checkbox.cascade_to_disabled\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tcascade_to_disabled : true,\r\n\r\n\t\t/**\r\n\t\t * This setting controls if cascading down affects hidden checkboxes\r\n\t\t * @name $.jstree.defaults.checkbox.cascade_to_hidden\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tcascade_to_hidden : true\r\n\t};\r\n\t$.jstree.plugins.checkbox = function (options, parent) {\r\n\t\tthis.bind = function () {\r\n\t\t\tparent.bind.call(this);\r\n\t\t\tthis._data.checkbox.uto = false;\r\n\t\t\tthis._data.checkbox.selected = [];\r\n\t\t\tif(this.settings.checkbox.three_state) {\r\n\t\t\t\tthis.settings.checkbox.cascade = 'up+down+undetermined';\r\n\t\t\t}\r\n\t\t\tthis.element\r\n\t\t\t\t.on(\"init.jstree\", $.proxy(function () {\r\n\t\t\t\t\t\tthis._data.checkbox.visible = this.settings.checkbox.visible;\r\n\t\t\t\t\t\tif(!this.settings.checkbox.keep_selected_style) {\r\n\t\t\t\t\t\t\tthis.element.addClass('jstree-checkbox-no-clicked');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(this.settings.checkbox.tie_selection) {\r\n\t\t\t\t\t\t\tthis.element.addClass('jstree-checkbox-selection');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"loading.jstree\", $.proxy(function () {\r\n\t\t\t\t\t\tthis[ this._data.checkbox.visible ? 'show_checkboxes' : 'hide_checkboxes' ]();\r\n\t\t\t\t\t}, this));\r\n\t\t\tif(this.settings.checkbox.cascade.indexOf('undetermined') !== -1) {\r\n\t\t\t\tthis.element\r\n\t\t\t\t\t.on('changed.jstree uncheck_node.jstree check_node.jstree uncheck_all.jstree check_all.jstree move_node.jstree copy_node.jstree redraw.jstree open_node.jstree', $.proxy(function () {\r\n\t\t\t\t\t\t\t// only if undetermined is in setting\r\n\t\t\t\t\t\t\tif(this._data.checkbox.uto) { clearTimeout(this._data.checkbox.uto); }\r\n\t\t\t\t\t\t\tthis._data.checkbox.uto = setTimeout($.proxy(this._undetermined, this), 50);\r\n\t\t\t\t\t\t}, this));\r\n\t\t\t}\r\n\t\t\tif(!this.settings.checkbox.tie_selection) {\r\n\t\t\t\tthis.element\r\n\t\t\t\t\t.on('model.jstree', $.proxy(function (e, data) {\r\n\t\t\t\t\t\tvar m = this._model.data,\r\n\t\t\t\t\t\t\tp = m[data.parent],\r\n\t\t\t\t\t\t\tdpc = data.nodes,\r\n\t\t\t\t\t\t\ti, j;\r\n\t\t\t\t\t\tfor(i = 0, j = dpc.length; i < j; i++) {\r\n\t\t\t\t\t\t\tm[dpc[i]].state.checked = m[dpc[i]].state.checked || (m[dpc[i]].original && m[dpc[i]].original.state && m[dpc[i]].original.state.checked);\r\n\t\t\t\t\t\t\tif(m[dpc[i]].state.checked) {\r\n\t\t\t\t\t\t\t\tthis._data.checkbox.selected.push(dpc[i]);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this));\r\n\t\t\t}\r\n\t\t\tif(this.settings.checkbox.cascade.indexOf('up') !== -1 || this.settings.checkbox.cascade.indexOf('down') !== -1) {\r\n\t\t\t\tthis.element\r\n\t\t\t\t\t.on('model.jstree', $.proxy(function (e, data) {\r\n\t\t\t\t\t\t\tvar m = this._model.data,\r\n\t\t\t\t\t\t\t\tp = m[data.parent],\r\n\t\t\t\t\t\t\t\tdpc = data.nodes,\r\n\t\t\t\t\t\t\t\tchd = [],\r\n\t\t\t\t\t\t\t\tc, i, j, k, l, tmp, s = this.settings.checkbox.cascade, t = this.settings.checkbox.tie_selection;\r\n\r\n\t\t\t\t\t\t\tif(s.indexOf('down') !== -1) {\r\n\t\t\t\t\t\t\t\t// apply down\r\n\t\t\t\t\t\t\t\tif(p.state[ t ? 'selected' : 'checked' ]) {\r\n\t\t\t\t\t\t\t\t\tfor(i = 0, j = dpc.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\t\tm[dpc[i]].state[ t ? 'selected' : 'checked' ] = true;\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected = this._data[ t ? 'core' : 'checkbox' ].selected.concat(dpc);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tfor(i = 0, j = dpc.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\t\tif(m[dpc[i]].state[ t ? 'selected' : 'checked' ]) {\r\n\t\t\t\t\t\t\t\t\t\t\tfor(k = 0, l = m[dpc[i]].children_d.length; k < l; k++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tm[m[dpc[i]].children_d[k]].state[ t ? 'selected' : 'checked' ] = true;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected = this._data[ t ? 'core' : 'checkbox' ].selected.concat(m[dpc[i]].children_d);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif(s.indexOf('up') !== -1) {\r\n\t\t\t\t\t\t\t\t// apply up\r\n\t\t\t\t\t\t\t\tfor(i = 0, j = p.children_d.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\tif(!m[p.children_d[i]].children.length) {\r\n\t\t\t\t\t\t\t\t\t\tchd.push(m[p.children_d[i]].parent);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tchd = $.vakata.array_unique(chd);\r\n\t\t\t\t\t\t\t\tfor(k = 0, l = chd.length; k < l; k++) {\r\n\t\t\t\t\t\t\t\t\tp = m[chd[k]];\r\n\t\t\t\t\t\t\t\t\twhile(p && p.id !== $.jstree.root) {\r\n\t\t\t\t\t\t\t\t\t\tc = 0;\r\n\t\t\t\t\t\t\t\t\t\tfor(i = 0, j = p.children.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\t\t\tc += m[p.children[i]].state[ t ? 'selected' : 'checked' ];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tif(c === j) {\r\n\t\t\t\t\t\t\t\t\t\t\tp.state[ t ? 'selected' : 'checked' ] = true;\r\n\t\t\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected.push(p.id);\r\n\t\t\t\t\t\t\t\t\t\t\ttmp = this.get_node(p, true);\r\n\t\t\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\r\n\t\t\t\t\t\t\t\t\t\t\t\ttmp.attr('aria-selected', true).children('.jstree-anchor').addClass( t ? 'jstree-clicked' : 'jstree-checked');\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tp = this.get_node(p.parent);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected = $.vakata.array_unique(this._data[ t ? 'core' : 'checkbox' ].selected);\r\n\t\t\t\t\t\t}, this))\r\n\t\t\t\t\t.on(this.settings.checkbox.tie_selection ? 'select_node.jstree' : 'check_node.jstree', $.proxy(function (e, data) {\r\n\t\t\t\t\t\t\tvar self = this,\r\n\t\t\t\t\t\t\t\tobj = data.node,\r\n\t\t\t\t\t\t\t\tm = this._model.data,\r\n\t\t\t\t\t\t\t\tpar = this.get_node(obj.parent),\r\n\t\t\t\t\t\t\t\ti, j, c, tmp, s = this.settings.checkbox.cascade, t = this.settings.checkbox.tie_selection,\r\n\t\t\t\t\t\t\t\tsel = {}, cur = this._data[ t ? 'core' : 'checkbox' ].selected;\r\n\r\n\t\t\t\t\t\t\tfor (i = 0, j = cur.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\tsel[cur[i]] = true;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// apply down\r\n\t\t\t\t\t\t\tif(s.indexOf('down') !== -1) {\r\n\t\t\t\t\t\t\t\t//this._data[ t ? 'core' : 'checkbox' ].selected = $.vakata.array_unique(this._data[ t ? 'core' : 'checkbox' ].selected.concat(obj.children_d));\r\n\t\t\t\t\t\t\t\tvar selectedIds = this._cascade_new_checked_state(obj.id, true);\r\n\t\t\t\t\t\t\t\tvar temp = obj.children_d.concat(obj.id);\r\n\t\t\t\t\t\t\t\tfor (i = 0, j = temp.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\tif (selectedIds.indexOf(temp[i]) > -1) {\r\n\t\t\t\t\t\t\t\t\t\tsel[temp[i]] = true;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tdelete sel[temp[i]];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// apply up\r\n\t\t\t\t\t\t\tif(s.indexOf('up') !== -1) {\r\n\t\t\t\t\t\t\t\twhile(par && par.id !== $.jstree.root) {\r\n\t\t\t\t\t\t\t\t\tc = 0;\r\n\t\t\t\t\t\t\t\t\tfor(i = 0, j = par.children.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\t\tc += m[par.children[i]].state[ t ? 'selected' : 'checked' ];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tif(c === j) {\r\n\t\t\t\t\t\t\t\t\t\tpar.state[ t ? 'selected' : 'checked' ] = true;\r\n\t\t\t\t\t\t\t\t\t\tsel[par.id] = true;\r\n\t\t\t\t\t\t\t\t\t\t//this._data[ t ? 'core' : 'checkbox' ].selected.push(par.id);\r\n\t\t\t\t\t\t\t\t\t\ttmp = this.get_node(par, true);\r\n\t\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\r\n\t\t\t\t\t\t\t\t\t\t\ttmp.attr('aria-selected', true).children('.jstree-anchor').addClass(t ? 'jstree-clicked' : 'jstree-checked');\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tpar = this.get_node(par.parent);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tcur = [];\r\n\t\t\t\t\t\t\tfor (i in sel) {\r\n\t\t\t\t\t\t\t\tif (sel.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\t\tcur.push(i);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected = cur;\r\n\t\t\t\t\t\t}, this))\r\n\t\t\t\t\t.on(this.settings.checkbox.tie_selection ? 'deselect_all.jstree' : 'uncheck_all.jstree', $.proxy(function (e, data) {\r\n\t\t\t\t\t\t\tvar obj = this.get_node($.jstree.root),\r\n\t\t\t\t\t\t\t\tm = this._model.data,\r\n\t\t\t\t\t\t\t\ti, j, tmp;\r\n\t\t\t\t\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\ttmp = m[obj.children_d[i]];\r\n\t\t\t\t\t\t\t\tif(tmp && tmp.original && tmp.original.state && tmp.original.state.undetermined) {\r\n\t\t\t\t\t\t\t\t\ttmp.original.state.undetermined = false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, this))\r\n\t\t\t\t\t.on(this.settings.checkbox.tie_selection ? 'deselect_node.jstree' : 'uncheck_node.jstree', $.proxy(function (e, data) {\r\n\t\t\t\t\t\t\tvar self = this,\r\n\t\t\t\t\t\t\t\tobj = data.node,\r\n\t\t\t\t\t\t\t\tdom = this.get_node(obj, true),\r\n\t\t\t\t\t\t\t\ti, j, tmp, s = this.settings.checkbox.cascade, t = this.settings.checkbox.tie_selection,\r\n\t\t\t\t\t\t\t\tcur = this._data[ t ? 'core' : 'checkbox' ].selected, sel = {},\r\n\t\t\t\t\t\t\t\tstillSelectedIds = [],\r\n\t\t\t\t\t\t\t\tallIds = obj.children_d.concat(obj.id);\r\n\r\n\t\t\t\t\t\t\t// apply down\r\n\t\t\t\t\t\t\tif(s.indexOf('down') !== -1) {\r\n\t\t\t\t\t\t\t\tvar selectedIds = this._cascade_new_checked_state(obj.id, false);\r\n\r\n\t\t\t\t\t\t\t\tcur = cur.filter(function(id) {\r\n\t\t\t\t\t\t\t\t\treturn allIds.indexOf(id) === -1 || selectedIds.indexOf(id) > -1;\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// only apply up if cascade up is enabled and if this node is not selected\r\n\t\t\t\t\t\t\t// (if all child nodes are disabled and cascade_to_disabled === false then this node will till be selected).\r\n\t\t\t\t\t\t\tif(s.indexOf('up') !== -1 && cur.indexOf(obj.id) === -1) {\r\n\t\t\t\t\t\t\t\tfor(i = 0, j = obj.parents.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\ttmp = this._model.data[obj.parents[i]];\r\n\t\t\t\t\t\t\t\t\ttmp.state[ t ? 'selected' : 'checked' ] = false;\r\n\t\t\t\t\t\t\t\t\tif(tmp && tmp.original && tmp.original.state && tmp.original.state.undetermined) {\r\n\t\t\t\t\t\t\t\t\t\ttmp.original.state.undetermined = false;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\ttmp = this.get_node(obj.parents[i], true);\r\n\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\r\n\t\t\t\t\t\t\t\t\t\ttmp.attr('aria-selected', false).children('.jstree-anchor').removeClass(t ? 'jstree-clicked' : 'jstree-checked');\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tcur = cur.filter(function(id) {\r\n\t\t\t\t\t\t\t\t\treturn obj.parents.indexOf(id) === -1;\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected = cur;\r\n\t\t\t\t\t\t}, this));\r\n\t\t\t}\r\n\t\t\tif(this.settings.checkbox.cascade.indexOf('up') !== -1) {\r\n\t\t\t\tthis.element\r\n\t\t\t\t\t.on('delete_node.jstree', $.proxy(function (e, data) {\r\n\t\t\t\t\t\t\t// apply up (whole handler)\r\n\t\t\t\t\t\t\tvar p = this.get_node(data.parent),\r\n\t\t\t\t\t\t\t\tm = this._model.data,\r\n\t\t\t\t\t\t\t\ti, j, c, tmp, t = this.settings.checkbox.tie_selection;\r\n\t\t\t\t\t\t\twhile(p && p.id !== $.jstree.root && !p.state[ t ? 'selected' : 'checked' ]) {\r\n\t\t\t\t\t\t\t\tc = 0;\r\n\t\t\t\t\t\t\t\tfor(i = 0, j = p.children.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\tc += m[p.children[i]].state[ t ? 'selected' : 'checked' ];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif(j > 0 && c === j) {\r\n\t\t\t\t\t\t\t\t\tp.state[ t ? 'selected' : 'checked' ] = true;\r\n\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected.push(p.id);\r\n\t\t\t\t\t\t\t\t\ttmp = this.get_node(p, true);\r\n\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\r\n\t\t\t\t\t\t\t\t\t\ttmp.attr('aria-selected', true).children('.jstree-anchor').addClass(t ? 'jstree-clicked' : 'jstree-checked');\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tp = this.get_node(p.parent);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, this))\r\n\t\t\t\t\t.on('move_node.jstree', $.proxy(function (e, data) {\r\n\t\t\t\t\t\t\t// apply up (whole handler)\r\n\t\t\t\t\t\t\tvar is_multi = data.is_multi,\r\n\t\t\t\t\t\t\t\told_par = data.old_parent,\r\n\t\t\t\t\t\t\t\tnew_par = this.get_node(data.parent),\r\n\t\t\t\t\t\t\t\tm = this._model.data,\r\n\t\t\t\t\t\t\t\tp, c, i, j, tmp, t = this.settings.checkbox.tie_selection;\r\n\t\t\t\t\t\t\tif(!is_multi) {\r\n\t\t\t\t\t\t\t\tp = this.get_node(old_par);\r\n\t\t\t\t\t\t\t\twhile(p && p.id !== $.jstree.root && !p.state[ t ? 'selected' : 'checked' ]) {\r\n\t\t\t\t\t\t\t\t\tc = 0;\r\n\t\t\t\t\t\t\t\t\tfor(i = 0, j = p.children.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\t\tc += m[p.children[i]].state[ t ? 'selected' : 'checked' ];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tif(j > 0 && c === j) {\r\n\t\t\t\t\t\t\t\t\t\tp.state[ t ? 'selected' : 'checked' ] = true;\r\n\t\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected.push(p.id);\r\n\t\t\t\t\t\t\t\t\t\ttmp = this.get_node(p, true);\r\n\t\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\r\n\t\t\t\t\t\t\t\t\t\t\ttmp.attr('aria-selected', true).children('.jstree-anchor').addClass(t ? 'jstree-clicked' : 'jstree-checked');\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tp = this.get_node(p.parent);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tp = new_par;\r\n\t\t\t\t\t\t\twhile(p && p.id !== $.jstree.root) {\r\n\t\t\t\t\t\t\t\tc = 0;\r\n\t\t\t\t\t\t\t\tfor(i = 0, j = p.children.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\tc += m[p.children[i]].state[ t ? 'selected' : 'checked' ];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif(c === j) {\r\n\t\t\t\t\t\t\t\t\tif(!p.state[ t ? 'selected' : 'checked' ]) {\r\n\t\t\t\t\t\t\t\t\t\tp.state[ t ? 'selected' : 'checked' ] = true;\r\n\t\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected.push(p.id);\r\n\t\t\t\t\t\t\t\t\t\ttmp = this.get_node(p, true);\r\n\t\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\r\n\t\t\t\t\t\t\t\t\t\t\ttmp.attr('aria-selected', true).children('.jstree-anchor').addClass(t ? 'jstree-clicked' : 'jstree-checked');\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tif(p.state[ t ? 'selected' : 'checked' ]) {\r\n\t\t\t\t\t\t\t\t\t\tp.state[ t ? 'selected' : 'checked' ] = false;\r\n\t\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected = $.vakata.array_remove_item(this._data[ t ? 'core' : 'checkbox' ].selected, p.id);\r\n\t\t\t\t\t\t\t\t\t\ttmp = this.get_node(p, true);\r\n\t\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\r\n\t\t\t\t\t\t\t\t\t\t\ttmp.attr('aria-selected', false).children('.jstree-anchor').removeClass(t ? 'jstree-clicked' : 'jstree-checked');\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tp = this.get_node(p.parent);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, this));\r\n\t\t\t}\r\n\t\t};\r\n\t\t/**\r\n\t\t * get an array of all nodes whose state is \"undetermined\"\r\n\t\t * @name get_undetermined([full])\r\n\t\t * @param  {boolean} full: if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\r\n\t\t * @return {Array}\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.get_undetermined = function (full) {\r\n\t\t\tif (this.settings.checkbox.cascade.indexOf('undetermined') === -1) {\r\n\t\t\t\treturn [];\r\n\t\t\t}\r\n\t\t\tvar i, j, k, l, o = {}, m = this._model.data, t = this.settings.checkbox.tie_selection, s = this._data[ t ? 'core' : 'checkbox' ].selected, p = [], tt = this, r = [];\r\n\t\t\tfor(i = 0, j = s.length; i < j; i++) {\r\n\t\t\t\tif(m[s[i]] && m[s[i]].parents) {\r\n\t\t\t\t\tfor(k = 0, l = m[s[i]].parents.length; k < l; k++) {\r\n\t\t\t\t\t\tif(o[m[s[i]].parents[k]] !== undefined) {\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(m[s[i]].parents[k] !== $.jstree.root) {\r\n\t\t\t\t\t\t\to[m[s[i]].parents[k]] = true;\r\n\t\t\t\t\t\t\tp.push(m[s[i]].parents[k]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// attempt for server side undetermined state\r\n\t\t\tthis.element.find('.jstree-closed').not(':has(.jstree-children)')\r\n\t\t\t\t.each(function () {\r\n\t\t\t\t\tvar tmp = tt.get_node(this), tmp2;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(!tmp) { return; }\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(!tmp.state.loaded) {\r\n\t\t\t\t\t\tif(tmp.original && tmp.original.state && tmp.original.state.undetermined && tmp.original.state.undetermined === true) {\r\n\t\t\t\t\t\t\tif(o[tmp.id] === undefined && tmp.id !== $.jstree.root) {\r\n\t\t\t\t\t\t\t\to[tmp.id] = true;\r\n\t\t\t\t\t\t\t\tp.push(tmp.id);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tfor(k = 0, l = tmp.parents.length; k < l; k++) {\r\n\t\t\t\t\t\t\t\tif(o[tmp.parents[k]] === undefined && tmp.parents[k] !== $.jstree.root) {\r\n\t\t\t\t\t\t\t\t\to[tmp.parents[k]] = true;\r\n\t\t\t\t\t\t\t\t\tp.push(tmp.parents[k]);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tfor(i = 0, j = tmp.children_d.length; i < j; i++) {\r\n\t\t\t\t\t\t\ttmp2 = m[tmp.children_d[i]];\r\n\t\t\t\t\t\t\tif(!tmp2.state.loaded && tmp2.original && tmp2.original.state && tmp2.original.state.undetermined && tmp2.original.state.undetermined === true) {\r\n\t\t\t\t\t\t\t\tif(o[tmp2.id] === undefined && tmp2.id !== $.jstree.root) {\r\n\t\t\t\t\t\t\t\t\to[tmp2.id] = true;\r\n\t\t\t\t\t\t\t\t\tp.push(tmp2.id);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tfor(k = 0, l = tmp2.parents.length; k < l; k++) {\r\n\t\t\t\t\t\t\t\t\tif(o[tmp2.parents[k]] === undefined && tmp2.parents[k] !== $.jstree.root) {\r\n\t\t\t\t\t\t\t\t\t\to[tmp2.parents[k]] = true;\r\n\t\t\t\t\t\t\t\t\t\tp.push(tmp2.parents[k]);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\tfor (i = 0, j = p.length; i < j; i++) {\r\n\t\t\t\tif(!m[p[i]].state[ t ? 'selected' : 'checked' ]) {\r\n\t\t\t\t\tr.push(full ? m[p[i]] : p[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn r;\r\n\t\t};\r\n\t\t/**\r\n\t\t * set the undetermined state where and if necessary. Used internally.\r\n\t\t * @private\r\n\t\t * @name _undetermined()\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis._undetermined = function () {\r\n\t\t\tif(this.element === null) { return; }\r\n\t\t\tvar p = this.get_undetermined(false), i, j, s;\r\n\r\n\t\t\tthis.element.find('.jstree-undetermined').removeClass('jstree-undetermined');\r\n\t\t\tfor (i = 0, j = p.length; i < j; i++) {\r\n\t\t\t\ts = this.get_node(p[i], true);\r\n\t\t\t\tif(s && s.length) {\r\n\t\t\t\t\ts.children('.jstree-anchor').children('.jstree-checkbox').addClass('jstree-undetermined');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tthis.redraw_node = function(obj, deep, is_callback, force_render) {\r\n\t\t\tobj = parent.redraw_node.apply(this, arguments);\r\n\t\t\tif(obj) {\r\n\t\t\t\tvar i, j, tmp = null, icon = null;\r\n\t\t\t\tfor(i = 0, j = obj.childNodes.length; i < j; i++) {\r\n\t\t\t\t\tif(obj.childNodes[i] && obj.childNodes[i].className && obj.childNodes[i].className.indexOf(\"jstree-anchor\") !== -1) {\r\n\t\t\t\t\t\ttmp = obj.childNodes[i];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(tmp) {\r\n\t\t\t\t\tif(!this.settings.checkbox.tie_selection && this._model.data[obj.id].state.checked) { tmp.className += ' jstree-checked'; }\r\n\t\t\t\t\ticon = _i.cloneNode(false);\r\n\t\t\t\t\tif(this._model.data[obj.id].state.checkbox_disabled) { icon.className += ' jstree-checkbox-disabled'; }\r\n\t\t\t\t\ttmp.insertBefore(icon, tmp.childNodes[0]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(!is_callback && this.settings.checkbox.cascade.indexOf('undetermined') !== -1) {\r\n\t\t\t\tif(this._data.checkbox.uto) { clearTimeout(this._data.checkbox.uto); }\r\n\t\t\t\tthis._data.checkbox.uto = setTimeout($.proxy(this._undetermined, this), 50);\r\n\t\t\t}\r\n\t\t\treturn obj;\r\n\t\t};\r\n\t\t/**\r\n\t\t * show the node checkbox icons\r\n\t\t * @name show_checkboxes()\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.show_checkboxes = function () { this._data.core.themes.checkboxes = true; this.get_container_ul().removeClass(\"jstree-no-checkboxes\"); };\r\n\t\t/**\r\n\t\t * hide the node checkbox icons\r\n\t\t * @name hide_checkboxes()\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.hide_checkboxes = function () { this._data.core.themes.checkboxes = false; this.get_container_ul().addClass(\"jstree-no-checkboxes\"); };\r\n\t\t/**\r\n\t\t * toggle the node icons\r\n\t\t * @name toggle_checkboxes()\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.toggle_checkboxes = function () { if(this._data.core.themes.checkboxes) { this.hide_checkboxes(); } else { this.show_checkboxes(); } };\r\n\t\t/**\r\n\t\t * checks if a node is in an undetermined state\r\n\t\t * @name is_undetermined(obj)\r\n\t\t * @param  {mixed} obj\r\n\t\t * @return {Boolean}\r\n\t\t */\r\n\t\tthis.is_undetermined = function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tvar s = this.settings.checkbox.cascade, i, j, t = this.settings.checkbox.tie_selection, d = this._data[ t ? 'core' : 'checkbox' ].selected, m = this._model.data;\r\n\t\t\tif(!obj || obj.state[ t ? 'selected' : 'checked' ] === true || s.indexOf('undetermined') === -1 || (s.indexOf('down') === -1 && s.indexOf('up') === -1)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(!obj.state.loaded && obj.original.state.undetermined === true) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\r\n\t\t\t\tif($.inArray(obj.children_d[i], d) !== -1 || (!m[obj.children_d[i]].state.loaded && m[obj.children_d[i]].original.state.undetermined)) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\t\t/**\r\n\t\t * disable a node's checkbox\r\n\t\t * @name disable_checkbox(obj)\r\n\t\t * @param {mixed} obj an array can be used too\r\n\t\t * @trigger disable_checkbox.jstree\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.disable_checkbox = function (obj) {\r\n\t\t\tvar t1, t2, dom;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.disable_checkbox(obj[t1]);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tdom = this.get_node(obj, true);\r\n\t\t\tif(!obj.state.checkbox_disabled) {\r\n\t\t\t\tobj.state.checkbox_disabled = true;\r\n\t\t\t\tif(dom && dom.length) {\r\n\t\t\t\t\tdom.children('.jstree-anchor').children('.jstree-checkbox').addClass('jstree-checkbox-disabled');\r\n\t\t\t\t}\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when an node's checkbox is disabled\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name disable_checkbox.jstree\r\n\t\t\t\t * @param {Object} node\r\n\t\t\t\t * @plugin checkbox\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('disable_checkbox', { 'node' : obj });\r\n\t\t\t}\r\n\t\t};\r\n\t\t/**\r\n\t\t * enable a node's checkbox\r\n\t\t * @name disable_checkbox(obj)\r\n\t\t * @param {mixed} obj an array can be used too\r\n\t\t * @trigger enable_checkbox.jstree\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.enable_checkbox = function (obj) {\r\n\t\t\tvar t1, t2, dom;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.enable_checkbox(obj[t1]);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tdom = this.get_node(obj, true);\r\n\t\t\tif(obj.state.checkbox_disabled) {\r\n\t\t\t\tobj.state.checkbox_disabled = false;\r\n\t\t\t\tif(dom && dom.length) {\r\n\t\t\t\t\tdom.children('.jstree-anchor').children('.jstree-checkbox').removeClass('jstree-checkbox-disabled');\r\n\t\t\t\t}\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when an node's checkbox is enabled\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name enable_checkbox.jstree\r\n\t\t\t\t * @param {Object} node\r\n\t\t\t\t * @plugin checkbox\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('enable_checkbox', { 'node' : obj });\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.activate_node = function (obj, e) {\r\n\t\t\tif($(e.target).hasClass('jstree-checkbox-disabled')) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(this.settings.checkbox.tie_selection && (this.settings.checkbox.whole_node || $(e.target).hasClass('jstree-checkbox'))) {\r\n\t\t\t\te.ctrlKey = true;\r\n\t\t\t}\r\n\t\t\tif(this.settings.checkbox.tie_selection || (!this.settings.checkbox.whole_node && !$(e.target).hasClass('jstree-checkbox'))) {\r\n\t\t\t\treturn parent.activate_node.call(this, obj, e);\r\n\t\t\t}\r\n\t\t\tif(this.is_disabled(obj)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(this.is_checked(obj)) {\r\n\t\t\t\tthis.uncheck_node(obj, e);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.check_node(obj, e);\r\n\t\t\t}\r\n\t\t\tthis.trigger('activate_node', { 'node' : this.get_node(obj) });\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Cascades checked state to a node and all its descendants. This function does NOT affect hidden and disabled nodes (or their descendants).\r\n\t\t * However if these unaffected nodes are already selected their ids will be included in the returned array.\r\n\t\t * @private\r\n\t\t * @param {string} id the node ID\r\n\t\t * @param {bool} checkedState should the nodes be checked or not\r\n\t\t * @returns {Array} Array of all node id's (in this tree branch) that are checked.\r\n\t\t */\r\n\t\tthis._cascade_new_checked_state = function (id, checkedState) {\r\n\t\t\tvar self = this;\r\n\t\t\tvar t = this.settings.checkbox.tie_selection;\r\n\t\t\tvar node = this._model.data[id];\r\n\t\t\tvar selectedNodeIds = [];\r\n\t\t\tvar selectedChildrenIds = [], i, j, selectedChildIds;\r\n\r\n\t\t\tif (\r\n\t\t\t\t(this.settings.checkbox.cascade_to_disabled || !node.state.disabled) &&\r\n\t\t\t\t(this.settings.checkbox.cascade_to_hidden || !node.state.hidden)\r\n\t\t\t) {\r\n\t\t\t\t//First try and check/uncheck the children\r\n\t\t\t\tif (node.children) {\r\n\t\t\t\t\tfor (i = 0, j = node.children.length; i < j; i++) {\r\n\t\t\t\t\t\tvar childId = node.children[i];\r\n\t\t\t\t\t\tselectedChildIds = self._cascade_new_checked_state(childId, checkedState);\r\n\t\t\t\t\t\tselectedNodeIds = selectedNodeIds.concat(selectedChildIds);\r\n\t\t\t\t\t\tif (selectedChildIds.indexOf(childId) > -1) {\r\n\t\t\t\t\t\t\tselectedChildrenIds.push(childId);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar dom = self.get_node(node, true);\r\n\r\n\t\t\t\t//A node's state is undetermined if some but not all of it's children are checked/selected .\r\n\t\t\t\tvar undetermined = selectedChildrenIds.length > 0 && selectedChildrenIds.length < node.children.length;\r\n\r\n\t\t\t\tif(node.original && node.original.state && node.original.state.undetermined) {\r\n\t\t\t\t\tnode.original.state.undetermined = undetermined;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//If a node is undetermined then remove selected class\r\n\t\t\t\tif (undetermined) {\r\n\t\t\t\t\tnode.state[ t ? 'selected' : 'checked' ] = false;\r\n\t\t\t\t\tdom.attr('aria-selected', false).children('.jstree-anchor').removeClass(t ? 'jstree-clicked' : 'jstree-checked');\r\n\t\t\t\t}\r\n\t\t\t\t//Otherwise, if the checkedState === true (i.e. the node is being checked now) and all of the node's children are checked (if it has any children),\r\n\t\t\t\t//check the node and style it correctly.\r\n\t\t\t\telse if (checkedState && selectedChildrenIds.length === node.children.length) {\r\n\t\t\t\t\tnode.state[ t ? 'selected' : 'checked' ] = checkedState;\r\n\t\t\t\t\tselectedNodeIds.push(node.id);\r\n\r\n\t\t\t\t\tdom.attr('aria-selected', true).children('.jstree-anchor').addClass(t ? 'jstree-clicked' : 'jstree-checked');\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tnode.state[ t ? 'selected' : 'checked' ] = false;\r\n\t\t\t\t\tdom.attr('aria-selected', false).children('.jstree-anchor').removeClass(t ? 'jstree-clicked' : 'jstree-checked');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tselectedChildIds = this.get_checked_descendants(id);\r\n\r\n\t\t\t\tif (node.state[ t ? 'selected' : 'checked' ]) {\r\n\t\t\t\t\tselectedChildIds.push(node.id);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tselectedNodeIds = selectedNodeIds.concat(selectedChildIds);\r\n\t\t\t}\r\n\r\n\t\t\treturn selectedNodeIds;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Gets ids of nodes selected in branch (of tree) specified by id (does not include the node specified by id)\r\n\t\t * @name get_checked_descendants(obj)\r\n\t\t * @param {string} id the node ID\r\n\t\t * @return {Array} array of IDs\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.get_checked_descendants = function (id) {\r\n\t\t\tvar self = this;\r\n\t\t\tvar t = self.settings.checkbox.tie_selection;\r\n\t\t\tvar node = self._model.data[id];\r\n\r\n\t\t\treturn node.children_d.filter(function(_id) {\r\n\t\t\t\treturn self._model.data[_id].state[ t ? 'selected' : 'checked' ];\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * check a node (only if tie_selection in checkbox settings is false, otherwise select_node will be called internally)\r\n\t\t * @name check_node(obj)\r\n\t\t * @param {mixed} obj an array can be used to check multiple nodes\r\n\t\t * @trigger check_node.jstree\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.check_node = function (obj, e) {\r\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.select_node(obj, false, true, e); }\r\n\t\t\tvar dom, t1, t2, th;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.check_node(obj[t1], e);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tdom = this.get_node(obj, true);\r\n\t\t\tif(!obj.state.checked) {\r\n\t\t\t\tobj.state.checked = true;\r\n\t\t\t\tthis._data.checkbox.selected.push(obj.id);\r\n\t\t\t\tif(dom && dom.length) {\r\n\t\t\t\t\tdom.children('.jstree-anchor').addClass('jstree-checked');\r\n\t\t\t\t}\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when an node is checked (only if tie_selection in checkbox settings is false)\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name check_node.jstree\r\n\t\t\t\t * @param {Object} node\r\n\t\t\t\t * @param {Array} selected the current selection\r\n\t\t\t\t * @param {Object} event the event (if any) that triggered this check_node\r\n\t\t\t\t * @plugin checkbox\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('check_node', { 'node' : obj, 'selected' : this._data.checkbox.selected, 'event' : e });\r\n\t\t\t}\r\n\t\t};\r\n\t\t/**\r\n\t\t * uncheck a node (only if tie_selection in checkbox settings is false, otherwise deselect_node will be called internally)\r\n\t\t * @name uncheck_node(obj)\r\n\t\t * @param {mixed} obj an array can be used to uncheck multiple nodes\r\n\t\t * @trigger uncheck_node.jstree\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.uncheck_node = function (obj, e) {\r\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.deselect_node(obj, false, e); }\r\n\t\t\tvar t1, t2, dom;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.uncheck_node(obj[t1], e);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tdom = this.get_node(obj, true);\r\n\t\t\tif(obj.state.checked) {\r\n\t\t\t\tobj.state.checked = false;\r\n\t\t\t\tthis._data.checkbox.selected = $.vakata.array_remove_item(this._data.checkbox.selected, obj.id);\r\n\t\t\t\tif(dom.length) {\r\n\t\t\t\t\tdom.children('.jstree-anchor').removeClass('jstree-checked');\r\n\t\t\t\t}\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when an node is unchecked (only if tie_selection in checkbox settings is false)\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name uncheck_node.jstree\r\n\t\t\t\t * @param {Object} node\r\n\t\t\t\t * @param {Array} selected the current selection\r\n\t\t\t\t * @param {Object} event the event (if any) that triggered this uncheck_node\r\n\t\t\t\t * @plugin checkbox\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('uncheck_node', { 'node' : obj, 'selected' : this._data.checkbox.selected, 'event' : e });\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t/**\r\n\t\t * checks all nodes in the tree (only if tie_selection in checkbox settings is false, otherwise select_all will be called internally)\r\n\t\t * @name check_all()\r\n\t\t * @trigger check_all.jstree, changed.jstree\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.check_all = function () {\r\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.select_all(); }\r\n\t\t\tvar tmp = this._data.checkbox.selected.concat([]), i, j;\r\n\t\t\tthis._data.checkbox.selected = this._model.data[$.jstree.root].children_d.concat();\r\n\t\t\tfor(i = 0, j = this._data.checkbox.selected.length; i < j; i++) {\r\n\t\t\t\tif(this._model.data[this._data.checkbox.selected[i]]) {\r\n\t\t\t\t\tthis._model.data[this._data.checkbox.selected[i]].state.checked = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.redraw(true);\r\n\t\t\t/**\r\n\t\t\t * triggered when all nodes are checked (only if tie_selection in checkbox settings is false)\r\n\t\t\t * @event\r\n\t\t\t * @name check_all.jstree\r\n\t\t\t * @param {Array} selected the current selection\r\n\t\t\t * @plugin checkbox\r\n\t\t\t */\r\n\t\t\tthis.trigger('check_all', { 'selected' : this._data.checkbox.selected });\r\n\t\t};\r\n\t\t/**\r\n\t\t * uncheck all checked nodes (only if tie_selection in checkbox settings is false, otherwise deselect_all will be called internally)\r\n\t\t * @name uncheck_all()\r\n\t\t * @trigger uncheck_all.jstree\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.uncheck_all = function () {\r\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.deselect_all(); }\r\n\t\t\tvar tmp = this._data.checkbox.selected.concat([]), i, j;\r\n\t\t\tfor(i = 0, j = this._data.checkbox.selected.length; i < j; i++) {\r\n\t\t\t\tif(this._model.data[this._data.checkbox.selected[i]]) {\r\n\t\t\t\t\tthis._model.data[this._data.checkbox.selected[i]].state.checked = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._data.checkbox.selected = [];\r\n\t\t\tthis.element.find('.jstree-checked').removeClass('jstree-checked');\r\n\t\t\t/**\r\n\t\t\t * triggered when all nodes are unchecked (only if tie_selection in checkbox settings is false)\r\n\t\t\t * @event\r\n\t\t\t * @name uncheck_all.jstree\r\n\t\t\t * @param {Object} node the previous selection\r\n\t\t\t * @param {Array} selected the current selection\r\n\t\t\t * @plugin checkbox\r\n\t\t\t */\r\n\t\t\tthis.trigger('uncheck_all', { 'selected' : this._data.checkbox.selected, 'node' : tmp });\r\n\t\t};\r\n\t\t/**\r\n\t\t * checks if a node is checked (if tie_selection is on in the settings this function will return the same as is_selected)\r\n\t\t * @name is_checked(obj)\r\n\t\t * @param  {mixed}  obj\r\n\t\t * @return {Boolean}\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.is_checked = function (obj) {\r\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.is_selected(obj); }\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\r\n\t\t\treturn obj.state.checked;\r\n\t\t};\r\n\t\t/**\r\n\t\t * get an array of all checked nodes (if tie_selection is on in the settings this function will return the same as get_selected)\r\n\t\t * @name get_checked([full])\r\n\t\t * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\r\n\t\t * @return {Array}\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.get_checked = function (full) {\r\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.get_selected(full); }\r\n\t\t\treturn full ? $.map(this._data.checkbox.selected, $.proxy(function (i) { return this.get_node(i); }, this)) : this._data.checkbox.selected;\r\n\t\t};\r\n\t\t/**\r\n\t\t * get an array of all top level checked nodes (ignoring children of checked nodes) (if tie_selection is on in the settings this function will return the same as get_top_selected)\r\n\t\t * @name get_top_checked([full])\r\n\t\t * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\r\n\t\t * @return {Array}\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.get_top_checked = function (full) {\r\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.get_top_selected(full); }\r\n\t\t\tvar tmp = this.get_checked(true),\r\n\t\t\t\tobj = {}, i, j, k, l;\r\n\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\r\n\t\t\t\tobj[tmp[i].id] = tmp[i];\r\n\t\t\t}\r\n\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\r\n\t\t\t\tfor(k = 0, l = tmp[i].children_d.length; k < l; k++) {\r\n\t\t\t\t\tif(obj[tmp[i].children_d[k]]) {\r\n\t\t\t\t\t\tdelete obj[tmp[i].children_d[k]];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ttmp = [];\r\n\t\t\tfor(i in obj) {\r\n\t\t\t\tif(obj.hasOwnProperty(i)) {\r\n\t\t\t\t\ttmp.push(i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn full ? $.map(tmp, $.proxy(function (i) { return this.get_node(i); }, this)) : tmp;\r\n\t\t};\r\n\t\t/**\r\n\t\t * get an array of all bottom level checked nodes (ignoring selected parents) (if tie_selection is on in the settings this function will return the same as get_bottom_selected)\r\n\t\t * @name get_bottom_checked([full])\r\n\t\t * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\r\n\t\t * @return {Array}\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.get_bottom_checked = function (full) {\r\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.get_bottom_selected(full); }\r\n\t\t\tvar tmp = this.get_checked(true),\r\n\t\t\t\tobj = [], i, j;\r\n\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\r\n\t\t\t\tif(!tmp[i].children.length) {\r\n\t\t\t\t\tobj.push(tmp[i].id);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn full ? $.map(obj, $.proxy(function (i) { return this.get_node(i); }, this)) : obj;\r\n\t\t};\r\n\t\tthis.load_node = function (obj, callback) {\r\n\t\t\tvar k, l, i, j, c, tmp;\r\n\t\t\tif(!$.isArray(obj) && !this.settings.checkbox.tie_selection) {\r\n\t\t\t\ttmp = this.get_node(obj);\r\n\t\t\t\tif(tmp && tmp.state.loaded) {\r\n\t\t\t\t\tfor(k = 0, l = tmp.children_d.length; k < l; k++) {\r\n\t\t\t\t\t\tif(this._model.data[tmp.children_d[k]].state.checked) {\r\n\t\t\t\t\t\t\tc = true;\r\n\t\t\t\t\t\t\tthis._data.checkbox.selected = $.vakata.array_remove_item(this._data.checkbox.selected, tmp.children_d[k]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn parent.load_node.apply(this, arguments);\r\n\t\t};\r\n\t\tthis.get_state = function () {\r\n\t\t\tvar state = parent.get_state.apply(this, arguments);\r\n\t\t\tif(this.settings.checkbox.tie_selection) { return state; }\r\n\t\t\tstate.checkbox = this._data.checkbox.selected.slice();\r\n\t\t\treturn state;\r\n\t\t};\r\n\t\tthis.set_state = function (state, callback) {\r\n\t\t\tvar res = parent.set_state.apply(this, arguments);\r\n\t\t\tif(res && state.checkbox) {\r\n\t\t\t\tif(!this.settings.checkbox.tie_selection) {\r\n\t\t\t\t\tthis.uncheck_all();\r\n\t\t\t\t\tvar _this = this;\r\n\t\t\t\t\t$.each(state.checkbox, function (i, v) {\r\n\t\t\t\t\t\t_this.check_node(v);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tdelete state.checkbox;\r\n\t\t\t\tthis.set_state(state, callback);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn res;\r\n\t\t};\r\n\t\tthis.refresh = function (skip_loading, forget_state) {\r\n\t\t\tif(!this.settings.checkbox.tie_selection) {\r\n\t\t\t\tthis._data.checkbox.selected = [];\r\n\t\t\t}\r\n\t\t\treturn parent.refresh.apply(this, arguments);\r\n\t\t};\r\n\t};\r\n\r\n\t// include the checkbox plugin by default\r\n\t// $.jstree.defaults.plugins.push(\"checkbox\");\r\n\r\n\treturn $;\r\n});\r\n\ndefine('skylark-widgets-hierarchy/addons/conditionalselect',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"../Hierarchy\"\r\n],function(langx,browser,eventer,noder,geom,$,jstree){\r\n\t\"use strict\";\r\n\r\n\tif($.jstree.plugins.conditionalselect) { return; }\r\n\r\n\t/**\r\n\t * a callback (function) which is invoked in the instance's scope and receives two arguments - the node and the event that triggered the `activate_node` call. Returning false prevents working with the node, returning true allows invoking activate_node. Defaults to returning `true`.\r\n\t * @name $.jstree.defaults.checkbox.visible\r\n\t * @plugin checkbox\r\n\t */\r\n\t$.jstree.defaults.conditionalselect = function () { return true; };\r\n\t$.jstree.plugins.conditionalselect = function (options, parent) {\r\n\t\t// own function\r\n\t\tthis.activate_node = function (obj, e) {\r\n\t\t\tif(this.settings.conditionalselect.call(this, this.get_node(obj), e)) {\r\n\t\t\t\treturn parent.activate_node.call(this, obj, e);\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\treturn $;\r\n});\ndefine('skylark-widgets-hierarchy/addons/menu',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\"\r\n],function(langx,browser,eventer,noder,geom,$){\r\n\r\n\tvar popup = null;\r\n\tvar right_to_left ;\r\n\r\n\tvar Menu = langx.Evented.inherit({\r\n        klassName: \"Menu\",\r\n\r\n        init : function(elm,options) {\r\n        \tif (!options) {\r\n        \t\toptions = elm;\r\n        \t\telm = null;\r\n        \t}\r\n\t\t\tvar self = this,$el;\r\n\r\n\t\t\tthis._options = langx.mixin({\r\n\t\t\t\t\thide_onmouseleave\t: 0,\r\n\t\t\t\t\ticons\t\t\t\t: true\r\n\r\n\t\t\t},options);\r\n\r\n\t\t\tif (!elm) {\r\n\t\t\t\t$el = this.$el = $(\"<ul class='vakata-context'></ul>\");\r\n\t\t\t} else {\r\n\t\t\t\t$el = this.$el = $(elm);\r\n\t\t\t}\r\n\r\n\t\t\tvar to = false;\r\n\t\t\t$el.on(\"mouseenter\", \"li\", function (e) {\r\n\t\t\t\t\te.stopImmediatePropagation();\r\n\r\n\t\t\t\t\tif(noder.contains(this, e.relatedTarget)) {\r\n\t\t\t\t\t\t// премахнато заради delegate mouseleave по-долу\r\n\t\t\t\t\t\t// $(this).find(\".vakata-context-hover\").removeClass(\"vakata-context-hover\");\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(to) { clearTimeout(to); }\r\n\t\t\t\t\t$el.find(\".vakata-context-hover\").removeClass(\"vakata-context-hover\").end();\r\n\r\n\t\t\t\t\t$(this)\r\n\t\t\t\t\t\t.siblings().find(\"ul\").hide().end().end()\r\n\t\t\t\t\t\t.parentsUntil(\".vakata-context\", \"li\").addBack().addClass(\"vakata-context-hover\");\r\n\t\t\t\t\tself._show_submenu(this);\r\n\t\t\t\t})\r\n\t\t\t\t// тестово - дали не натоварва?\r\n\t\t\t\t.on(\"mouseleave\", \"li\", function (e) {\r\n\t\t\t\t\tif(noder.contains(this, e.relatedTarget)) { return; }\r\n\t\t\t\t\t$(this).find(\".vakata-context-hover\").addBack().removeClass(\"vakata-context-hover\");\r\n\t\t\t\t})\r\n\t\t\t\t.on(\"mouseleave\", function (e) {\r\n\t\t\t\t\t$(this).find(\".vakata-context-hover\").removeClass(\"vakata-context-hover\");\r\n\t\t\t\t\tif(self._options.hide_onmouseleave) {\r\n\t\t\t\t\t\tto = setTimeout(\r\n\t\t\t\t\t\t\t(function (t) {\r\n\t\t\t\t\t\t\t\treturn function () { self.hide(); };\r\n\t\t\t\t\t\t\t}(this)), self._options.hide_onmouseleave);\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.on(\"click\", \"a\", function (e) {\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t//})\r\n\t\t\t\t//.on(\"mouseup\", \"a\", function (e) {\r\n\t\t\t\t\tif(!$(this).blur().parent().hasClass(\"vakata-context-disabled\") && self._execute($(this).attr(\"rel\")) !== false) {\r\n\t\t\t\t\t\tself.hide();\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.on('keydown', 'a', function (e) {\r\n\t\t\t\t\t\tvar o = null;\r\n\t\t\t\t\t\tswitch(e.which) {\r\n\t\t\t\t\t\t\tcase 13:\r\n\t\t\t\t\t\t\tcase 32:\r\n\t\t\t\t\t\t\t\te.type = \"click\";\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\t$(e.currentTarget).trigger(e);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 37:\r\n\t\t\t\t\t\t\t\tself.$el.find(\".vakata-context-hover\").last().closest(\"li\").first().find(\"ul\").hide().find(\".vakata-context-hover\").removeClass(\"vakata-context-hover\").end().end().children('a').focus();\r\n\t\t\t\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 38:\r\n\t\t\t\t\t\t\t\to = self.$el.find(\"ul:visible\").addBack().last().children(\".vakata-context-hover\").removeClass(\"vakata-context-hover\").prevAll(\"li:not(.vakata-context-separator)\").first();\r\n\t\t\t\t\t\t\t\tif(!o.length) { o = self.$el.find(\"ul:visible\").addBack().last().children(\"li:not(.vakata-context-separator)\").last(); }\r\n\t\t\t\t\t\t\t\to.addClass(\"vakata-context-hover\").children('a').focus();\r\n\t\t\t\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 39:\r\n\t\t\t\t\t\t\t\tself.$el.find(\".vakata-context-hover\").last().children(\"ul\").show().children(\"li:not(.vakata-context-separator)\").removeClass(\"vakata-context-hover\").first().addClass(\"vakata-context-hover\").children('a').focus();\r\n\t\t\t\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 40:\r\n\t\t\t\t\t\t\t\to = self.$el.find(\"ul:visible\").addBack().last().children(\".vakata-context-hover\").removeClass(\"vakata-context-hover\").nextAll(\"li:not(.vakata-context-separator)\").first();\r\n\t\t\t\t\t\t\t\tif(!o.length) { o = self.$el.find(\"ul:visible\").addBack().last().children(\"li:not(.vakata-context-separator)\").first(); }\r\n\t\t\t\t\t\t\t\to.addClass(\"vakata-context-hover\").children('a').focus();\r\n\t\t\t\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 27:\r\n\t\t\t\t\t\t\t\tself.hide();\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t//console.log(e.which);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t.on('keydown', function (e) {\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\tvar a = self.$el.find('.vakata-contextmenu-shortcut-' + e.which).parent();\r\n\t\t\t\t\tif(a.parent().not('.vakata-context-disabled')) {\r\n\t\t\t\t\t\ta.click();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\tthis.render();\r\n        },\r\n\r\n        render : function() {\r\n        \tvar items = this._options.items;\r\n\t\t\tif(this._parse(items)) {\r\n\t\t\t\tthis.$el.html(this.html);\r\n\t\t\t}\r\n\t\t\tthis.$el.width('');\r\n        },\r\n\r\n\t\t_trigger : function (event_name) {\r\n\t\t\t$(document).trigger(\"context_\" + event_name + \".sbswt\", {\r\n\t\t\t\t\"reference\"\t: this.reference,\r\n\t\t\t\t\"element\"\t: this.$el,\r\n\t\t\t\t\"position\"\t: {\r\n\t\t\t\t\t\"x\" : this.position_x,\r\n\t\t\t\t\t\"y\" : this.position_y\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},        \r\n\r\n\t\t_execute : function (i) {\r\n\t\t\ti = this.items[i];\r\n\t\t\treturn i && (!i._disabled || (langx.isFunction(i._disabled) && !i._disabled({ \"item\" : i, \"reference\" : this.reference, \"element\" : this.$el }))) && i.action ? i.action.call(null, {\r\n\t\t\t\t\t\t\"item\"\t\t: i,\r\n\t\t\t\t\t\t\"reference\"\t: this.reference,\r\n\t\t\t\t\t\t\"element\"\t: this.$el,\r\n\t\t\t\t\t\t\"position\"\t: {\r\n\t\t\t\t\t\t\t\"x\" : this.position_x,\r\n\t\t\t\t\t\t\t\"y\" : this.position_y\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}) : false;\r\n\t\t},\r\n\t\t_parse : function (o, is_callback) {\r\n\t\t\tvar self = this,\r\n\t\t\t\treference = self._options.reference;\r\n\r\n\t\t\tif(!o) { return false; }\r\n\t\t\tif(!is_callback) {\r\n\t\t\t\tself.html\t\t= \"\";\r\n\t\t\t\tself.items\t= [];\r\n\t\t\t}\r\n\t\t\tvar str = \"\",\r\n\t\t\t\tsep = false,\r\n\t\t\t\ttmp;\r\n\r\n\t\t\tif(is_callback) { str += \"<\"+\"ul>\"; }\r\n\t\t\tlangx.each(o, function (i, val) {\r\n\t\t\t\tif(!val) { return true; }\r\n\t\t\t\tself.items.push(val);\r\n\t\t\t\tif(!sep && val.separator_before) {\r\n\t\t\t\t\tstr += \"<\"+\"li class='vakata-context-separator'><\"+\"a href='#' \" + (self._options.icons ? '' : 'style=\"margin-left:0px;\"') + \">&#160;<\"+\"/a><\"+\"/li>\";\r\n\t\t\t\t}\r\n\t\t\t\tsep = false;\r\n\t\t\t\tstr += \"<\"+\"li class='\" + (val._class || \"\") + (val._disabled === true || (langx.isFunction(val._disabled) && val._disabled({ \"item\" : val, \"reference\" : reference, \"element\" : self.$el })) ? \" vakata-contextmenu-disabled \" : \"\") + \"' \"+(val.shortcut?\" data-shortcut='\"+val.shortcut+\"' \":'')+\">\";\r\n\t\t\t\tstr += \"<\"+\"a href='#' rel='\" + (self.items.length - 1) + \"' \" + (val.title ? \"title='\" + val.title + \"'\" : \"\") + \">\";\r\n\t\t\t\tif(self._options.icons) {\r\n\t\t\t\t\tstr += \"<\"+\"i \";\r\n\t\t\t\t\tif(val.icon) {\r\n\t\t\t\t\t\tif(val.icon.indexOf(\"/\") !== -1 || val.icon.indexOf(\".\") !== -1) { str += \" style='background:url(\\\"\" + val.icon + \"\\\") center center no-repeat' \"; }\r\n\t\t\t\t\t\telse { str += \" class='\" + val.icon + \"' \"; }\r\n\t\t\t\t\t}\r\n\t\t\t\t\tstr += \"><\"+\"/i><\"+\"span class='vakata-contextmenu-sep'>&#160;<\"+\"/span>\";\r\n\t\t\t\t}\r\n\t\t\t\tstr += (langx.isFunction(val.label) ? val.label({ \"item\" : i, \"reference\" : reference, \"element\" : self.$el }) : val.label) + (val.shortcut?' <span class=\"vakata-contextmenu-shortcut vakata-contextmenu-shortcut-'+val.shortcut+'\">'+ (val.shortcut_label || '') +'</span>':'') + \"<\"+\"/a>\";\r\n\t\t\t\tif(val.submenu) {\r\n\t\t\t\t\ttmp = self._parse(val.submenu, true);\r\n\t\t\t\t\tif(tmp) { str += tmp; }\r\n\t\t\t\t}\r\n\t\t\t\tstr += \"<\"+\"/li>\";\r\n\t\t\t\tif(val.separator_after) {\r\n\t\t\t\t\tstr += \"<\"+\"li class='vakata-context-separator'><\"+\"a href='#' \" + (self._options.icons ? '' : 'style=\"margin-left:0px;\"') + \">&#160;<\"+\"/a><\"+\"/li>\";\r\n\t\t\t\t\tsep = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tstr  = str.replace(/<li class\\='vakata-context-separator'\\><\\/li\\>$/,\"\");\r\n\t\t\tif(is_callback) { str += \"</ul>\"; }\r\n\t\t\t/**\r\n\t\t\t * triggered on the document when the contextmenu is parsed (HTML is built)\r\n\t\t\t * @event\r\n\t\t\t * @plugin contextmenu\r\n\t\t\t * @name context_parse.vakata\r\n\t\t\t * @param {jQuery} reference the element that was right clicked\r\n\t\t\t * @param {jQuery} element the DOM element of the menu itself\r\n\t\t\t * @param {Object} position the x & y coordinates of the menu\r\n\t\t\t */\r\n\t\t\tif(!is_callback) { self.html = str; self._trigger(\"parse\"); }\r\n\t\t\treturn str.length > 10 ? str : false;\r\n\t\t},\r\n\t\t_show_submenu : function (o) {\r\n\t\t\to = $(o);\r\n\t\t\tif(!o.length || !o.children(\"ul\").length) { return; }\r\n\t\t\tvar e = o.children(\"ul\"),\r\n\t\t\t\txl = o.offset().left,\r\n\t\t\t\tx = xl + o.outerWidth(),\r\n\t\t\t\ty = o.offset().top,\r\n\t\t\t\tw = e.width(),\r\n\t\t\t\th = e.height(),\r\n\t\t\t\tdw = $(window).width() + $(window).scrollLeft(),\r\n\t\t\t\tdh = $(window).height() + $(window).scrollTop();\r\n\t\t\t// може да се спести е една проверка - дали няма някой от класовете вече нагоре\r\n\t\t\tif(right_to_left) {\r\n\t\t\t\to[x - (w + 10 + o.outerWidth()) < 0 ? \"addClass\" : \"removeClass\"](\"vakata-context-left\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\to[x + w > dw  && xl > dw - x ? \"addClass\" : \"removeClass\"](\"vakata-context-right\");\r\n\t\t\t}\r\n\t\t\tif(y + h + 10 > dh) {\r\n\t\t\t\te.css(\"bottom\",\"-1px\");\r\n\t\t\t}\r\n\r\n\t\t\t//if does not fit - stick it to the side\r\n\t\t\tif (o.hasClass('vakata-context-right')) {\r\n\t\t\t\tif (xl < w) {\r\n\t\t\t\t\te.css(\"margin-right\", xl - w);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (dw - x < w) {\r\n\t\t\t\t\te.css(\"margin-left\", dw - x - w);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\te.show();\r\n\t\t},\r\n\t\tshow : function (reference, position, data) {\r\n\t\t\tvar o, e, x, y, w, h, dw, dh, cond = true;\r\n\t\t\tswitch(cond) {\r\n\t\t\t\tcase (!position && !reference):\r\n\t\t\t\t\treturn false;\r\n\t\t\t\tcase (!!position && !!reference):\r\n\t\t\t\t\tthis.reference\t= reference;\r\n\t\t\t\t\tthis.position_x\t= position.x;\r\n\t\t\t\t\tthis.position_y\t= position.y;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase (!position && !!reference):\r\n\t\t\t\t\tthis.reference\t= reference;\r\n\t\t\t\t\to = reference.offset();\r\n\t\t\t\t\tthis.position_x\t= o.left + reference.outerHeight();\r\n\t\t\t\t\tthis.position_y\t= o.top;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase (!!position && !reference):\r\n\t\t\t\t\tthis.position_x\t= position.x;\r\n\t\t\t\t\tthis.position_y\t= position.y;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif(!!reference && !data && $(reference).data('vakata_contextmenu')) {\r\n\t\t\t\tdata = $(reference).data('vakata_contextmenu');\r\n\t\t\t}\r\n\r\n\t\t\tif(this.items.length) {\r\n\t\t\t\tthis.$el.appendTo(document.body);\r\n\t\t\t\te = this.$el;\r\n\t\t\t\tx = this.position_x;\r\n\t\t\t\ty = this.position_y;\r\n\t\t\t\tw = e.width();\r\n\t\t\t\th = e.height();\r\n\t\t\t\tdw = $(window).width() + $(window).scrollLeft();\r\n\t\t\t\tdh = $(window).height() + $(window).scrollTop();\r\n\t\t\t\tif(right_to_left) {\r\n\t\t\t\t\tx -= (e.outerWidth() - $(reference).outerWidth());\r\n\t\t\t\t\tif(x < $(window).scrollLeft() + 20) {\r\n\t\t\t\t\t\tx = $(window).scrollLeft() + 20;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(x + w + 20 > dw) {\r\n\t\t\t\t\tx = dw - (w + 20);\r\n\t\t\t\t}\r\n\t\t\t\tif(y + h + 20 > dh) {\r\n\t\t\t\t\ty = dh - (h + 20);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.$el\r\n\t\t\t\t\t.css({ \"left\" : x, \"top\" : y })\r\n\t\t\t\t\t.show()\r\n\t\t\t\t\t.find('a').first().focus().parent().addClass(\"vakata-context-hover\");\r\n\t\t\t\tthis.is_visible = true;\r\n\r\n\t\t\t\tpopup = this;\r\n\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered on the document when the contextmenu is shown\r\n\t\t\t\t * @event\r\n\t\t\t\t * @plugin contextmenu\r\n\t\t\t\t * @name context_show.vakata\r\n\t\t\t\t * @param {jQuery} reference the element that was right clicked\r\n\t\t\t\t * @param {jQuery} element the DOM element of the menu itself\r\n\t\t\t\t * @param {Object} position the x & y coordinates of the menu\r\n\t\t\t\t */\r\n\t\t\t\tthis._trigger(\"show\");\r\n\t\t\t}\r\n\t\t},\r\n\t\thide : function () {\r\n\t\t\tif(this.is_visible) {\r\n\t\t\t\tthis.$el.hide().find(\"ul\").hide().end().find(':focus').blur().end().detach();\r\n\t\t\t\tthis.is_visible = false;\r\n\t\t\t\tpopup = null;\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered on the document when the contextmenu is hidden\r\n\t\t\t\t * @event\r\n\t\t\t\t * @plugin contextmenu\r\n\t\t\t\t * @name context_hide.vakata\r\n\t\t\t\t * @param {jQuery} reference the element that was right clicked\r\n\t\t\t\t * @param {jQuery} element the DOM element of the menu itself\r\n\t\t\t\t * @param {Object} position the x & y coordinates of the menu\r\n\t\t\t\t */\r\n\t\t\t\tthis._trigger(\"hide\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n    });\t\r\n\r\n\t$(function () {\r\n\t\tright_to_left = $(document.body).css(\"direction\") === \"rtl\";\r\n\r\n\t\t$(document)\r\n\t\t\t.on(\"mousedown.sbswt.popup\", function (e) {\r\n\t\t\t\tif(popup && popup.$el[0] !== e.target  && !noder.contains(popup.$el[0], e.target)) {\r\n\t\t\t\t\tpopup.hide();\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.on(\"context_show.sbswt.popup\", function (e, data) {\r\n\t\t\t\tpopup.$el.find(\"li:has(ul)\").children(\"a\").addClass(\"vakata-context-parent\");\r\n\t\t\t\tif(right_to_left) {\r\n\t\t\t\t\tpopup.$el.addClass(\"vakata-context-rtl\").css(\"direction\", \"rtl\");\r\n\t\t\t\t}\r\n\t\t\t\t// also apply a RTL class?\r\n\t\t\t\tpopup.$el.find(\"ul\").hide().end();\r\n\t\t\t});\r\n\t});\r\n\r\n\tMenu.popup = function (reference, position, data) {\r\n\t\tvar m = new Menu({\r\n\t\t\treference : reference,\r\n\t\t\titems : data\r\n\t\t});\r\n\t\tm.show(reference,position);\r\n\t};\r\n\r\n\tMenu.hide = function() {\r\n\t\tif (popup) {\r\n\t\t\tpopup.hide();\r\n\t\t}\r\n\t}\r\n\r\n\treturn Menu;\r\n\r\n});\ndefine('skylark-widgets-hierarchy/addons/contextmenu',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"./menu\",\r\n  \"../Hierarchy\"\r\n],function(langx,browser,eventer,noder,geom,$, menu,jstree){\r\n\r\n\t\"use strict\";\r\n\r\n\tif($.jstree.plugins.contextmenu) { return; }\r\n\r\n\t/**\r\n\t * stores all defaults for the contextmenu plugin\r\n\t * @name $.jstree.defaults.contextmenu\r\n\t * @plugin contextmenu\r\n\t */\r\n\t$.jstree.defaults.contextmenu = {\r\n\t\t/**\r\n\t\t * a boolean indicating if the node should be selected when the context menu is invoked on it. Defaults to `true`.\r\n\t\t * @name $.jstree.defaults.contextmenu.select_node\r\n\t\t * @plugin contextmenu\r\n\t\t */\r\n\t\tselect_node : true,\r\n\t\t/**\r\n\t\t * a boolean indicating if the menu should be shown aligned with the node. Defaults to `true`, otherwise the mouse coordinates are used.\r\n\t\t * @name $.jstree.defaults.contextmenu.show_at_node\r\n\t\t * @plugin contextmenu\r\n\t\t */\r\n\t\tshow_at_node : true,\r\n\t\t/**\r\n\t\t * an object of actions, or a function that accepts a node and a callback function and calls the callback function with an object of actions available for that node (you can also return the items too).\r\n\t\t *\r\n\t\t * Each action consists of a key (a unique name) and a value which is an object with the following properties (only label and action are required). Once a menu item is activated the `action` function will be invoked with an object containing the following keys: item - the contextmenu item definition as seen below, reference - the DOM node that was used (the tree node), element - the contextmenu DOM element, position - an object with x/y properties indicating the position of the menu.\r\n\t\t *\r\n\t\t * * `separator_before` - a boolean indicating if there should be a separator before this item\r\n\t\t * * `separator_after` - a boolean indicating if there should be a separator after this item\r\n\t\t * * `_disabled` - a boolean indicating if this action should be disabled\r\n\t\t * * `label` - a string - the name of the action (could be a function returning a string)\r\n\t\t * * `title` - a string - an optional tooltip for the item\r\n\t\t * * `action` - a function to be executed if this item is chosen, the function will receive \r\n\t\t * * `icon` - a string, can be a path to an icon or a className, if using an image that is in the current directory use a `./` prefix, otherwise it will be detected as a class\r\n\t\t * * `shortcut` - keyCode which will trigger the action if the menu is open (for example `113` for rename, which equals F2)\r\n\t\t * * `shortcut_label` - shortcut label (like for example `F2` for rename)\r\n\t\t * * `submenu` - an object with the same structure as $.jstree.defaults.contextmenu.items which can be used to create a submenu - each key will be rendered as a separate option in a submenu that will appear once the current item is hovered\r\n\t\t *\r\n\t\t * @name $.jstree.defaults.contextmenu.items\r\n\t\t * @plugin contextmenu\r\n\t\t */\r\n\t\titems : function (o, cb) { // Could be an object directly\r\n\t\t\treturn {\r\n\t\t\t\t\"create\" : {\r\n\t\t\t\t\t\"separator_before\"\t: false,\r\n\t\t\t\t\t\"separator_after\"\t: true,\r\n\t\t\t\t\t\"_disabled\"\t\t\t: false, //(this.check(\"create_node\", data.reference, {}, \"last\")),\r\n\t\t\t\t\t\"label\"\t\t\t\t: \"Create\",\r\n\t\t\t\t\t\"action\"\t\t\t: function (data) {\r\n\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference),\r\n\t\t\t\t\t\t\tobj = inst.get_node(data.reference);\r\n\t\t\t\t\t\tinst.create_node(obj, {}, \"last\", function (new_node) {\r\n\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\tinst.edit(new_node);\r\n\t\t\t\t\t\t\t} catch (ex) {\r\n\t\t\t\t\t\t\t\tsetTimeout(function () { inst.edit(new_node); },0);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t\"rename\" : {\r\n\t\t\t\t\t\"separator_before\"\t: false,\r\n\t\t\t\t\t\"separator_after\"\t: false,\r\n\t\t\t\t\t\"_disabled\"\t\t\t: false, //(this.check(\"rename_node\", data.reference, this.get_parent(data.reference), \"\")),\r\n\t\t\t\t\t\"label\"\t\t\t\t: \"Rename\",\r\n\t\t\t\t\t/*!\r\n\t\t\t\t\t\"shortcut\"\t\t\t: 113,\r\n\t\t\t\t\t\"shortcut_label\"\t: 'F2',\r\n\t\t\t\t\t\"icon\"\t\t\t\t: \"glyphicon glyphicon-leaf\",\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t\"action\"\t\t\t: function (data) {\r\n\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference),\r\n\t\t\t\t\t\t\tobj = inst.get_node(data.reference);\r\n\t\t\t\t\t\tinst.edit(obj);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t\"remove\" : {\r\n\t\t\t\t\t\"separator_before\"\t: false,\r\n\t\t\t\t\t\"icon\"\t\t\t\t: false,\r\n\t\t\t\t\t\"separator_after\"\t: false,\r\n\t\t\t\t\t\"_disabled\"\t\t\t: false, //(this.check(\"delete_node\", data.reference, this.get_parent(data.reference), \"\")),\r\n\t\t\t\t\t\"label\"\t\t\t\t: \"Delete\",\r\n\t\t\t\t\t\"action\"\t\t\t: function (data) {\r\n\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference),\r\n\t\t\t\t\t\t\tobj = inst.get_node(data.reference);\r\n\t\t\t\t\t\tif(inst.is_selected(obj)) {\r\n\t\t\t\t\t\t\tinst.delete_node(inst.get_selected());\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tinst.delete_node(obj);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t\"ccp\" : {\r\n\t\t\t\t\t\"separator_before\"\t: true,\r\n\t\t\t\t\t\"icon\"\t\t\t\t: false,\r\n\t\t\t\t\t\"separator_after\"\t: false,\r\n\t\t\t\t\t\"label\"\t\t\t\t: \"Edit\",\r\n\t\t\t\t\t\"action\"\t\t\t: false,\r\n\t\t\t\t\t\"submenu\" : {\r\n\t\t\t\t\t\t\"cut\" : {\r\n\t\t\t\t\t\t\t\"separator_before\"\t: false,\r\n\t\t\t\t\t\t\t\"separator_after\"\t: false,\r\n\t\t\t\t\t\t\t\"label\"\t\t\t\t: \"Cut\",\r\n\t\t\t\t\t\t\t\"action\"\t\t\t: function (data) {\r\n\t\t\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference),\r\n\t\t\t\t\t\t\t\t\tobj = inst.get_node(data.reference);\r\n\t\t\t\t\t\t\t\tif(inst.is_selected(obj)) {\r\n\t\t\t\t\t\t\t\t\tinst.cut(inst.get_top_selected());\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tinst.cut(obj);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\"copy\" : {\r\n\t\t\t\t\t\t\t\"separator_before\"\t: false,\r\n\t\t\t\t\t\t\t\"icon\"\t\t\t\t: false,\r\n\t\t\t\t\t\t\t\"separator_after\"\t: false,\r\n\t\t\t\t\t\t\t\"label\"\t\t\t\t: \"Copy\",\r\n\t\t\t\t\t\t\t\"action\"\t\t\t: function (data) {\r\n\t\t\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference),\r\n\t\t\t\t\t\t\t\t\tobj = inst.get_node(data.reference);\r\n\t\t\t\t\t\t\t\tif(inst.is_selected(obj)) {\r\n\t\t\t\t\t\t\t\t\tinst.copy(inst.get_top_selected());\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tinst.copy(obj);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\"paste\" : {\r\n\t\t\t\t\t\t\t\"separator_before\"\t: false,\r\n\t\t\t\t\t\t\t\"icon\"\t\t\t\t: false,\r\n\t\t\t\t\t\t\t\"_disabled\"\t\t\t: function (data) {\r\n\t\t\t\t\t\t\t\treturn !$.jstree.reference(data.reference).can_paste();\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\"separator_after\"\t: false,\r\n\t\t\t\t\t\t\t\"label\"\t\t\t\t: \"Paste\",\r\n\t\t\t\t\t\t\t\"action\"\t\t\t: function (data) {\r\n\t\t\t\t\t\t\t\tvar inst = $.jstree.reference(data.reference),\r\n\t\t\t\t\t\t\t\t\tobj = inst.get_node(data.reference);\r\n\t\t\t\t\t\t\t\tinst.paste(obj);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n\r\n\t$.jstree.plugins.contextmenu = function (options, parent) {\r\n\t\tthis.bind = function () {\r\n\t\t\tparent.bind.call(this);\r\n\r\n\t\t\tvar last_ts = 0, cto = null, ex, ey;\r\n\t\t\tthis.element\r\n\t\t\t\t.on(\"init.jstree loading.jstree ready.jstree\", $.proxy(function () {\r\n\t\t\t\t\t\tthis.get_container_ul().addClass('jstree-contextmenu');\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"contextmenu.jstree\", \".jstree-anchor\", $.proxy(function (e, data) {\r\n\t\t\t\t\t\tif (e.target.tagName.toLowerCase() === 'input') {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\tlast_ts = e.ctrlKey ? +new Date() : 0;\r\n\t\t\t\t\t\tif(data || cto) {\r\n\t\t\t\t\t\t\tlast_ts = (+new Date()) + 10000;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(cto) {\r\n\t\t\t\t\t\t\tclearTimeout(cto);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(!this.is_loading(e.currentTarget)) {\r\n\t\t\t\t\t\t\tthis.show_contextmenu(e.currentTarget, e.pageX, e.pageY, e);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"click.jstree\", \".jstree-anchor\", $.proxy(function (e) {\r\n\t\t\t\t\t\tif(this._data.contextmenu.visible && (!last_ts || (+new Date()) - last_ts > 250)) { // work around safari & macOS ctrl+click\r\n\t\t\t\t\t\t\tmenu.hide();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tlast_ts = 0;\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"touchstart.jstree\", \".jstree-anchor\", function (e) {\r\n\t\t\t\t\t\tif(!e.originalEvent || !e.originalEvent.changedTouches || !e.originalEvent.changedTouches[0]) {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tex = e.originalEvent.changedTouches[0].clientX;\r\n\t\t\t\t\t\tey = e.originalEvent.changedTouches[0].clientY;\r\n\t\t\t\t\t\tcto = setTimeout(function () {\r\n\t\t\t\t\t\t\t$(e.currentTarget).trigger('contextmenu', true);\r\n\t\t\t\t\t\t}, 750);\r\n\t\t\t\t\t})\r\n\t\t\t\t.on('touchmove.vakata.jstree', function (e) {\r\n\t\t\t\t\t\tif(cto && e.originalEvent && e.originalEvent.changedTouches && e.originalEvent.changedTouches[0] && (Math.abs(ex - e.originalEvent.changedTouches[0].clientX) > 10 || Math.abs(ey - e.originalEvent.changedTouches[0].clientY) > 10)) {\r\n\t\t\t\t\t\t\tclearTimeout(cto);\r\n\t\t\t\t\t\t\tmenu.hide();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t.on('touchend.vakata.jstree', function (e) {\r\n\t\t\t\t\t\tif(cto) {\r\n\t\t\t\t\t\t\tclearTimeout(cto);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t/*!\r\n\t\t\tif(!('oncontextmenu' in document.body) && ('ontouchstart' in document.body)) {\r\n\t\t\t\tvar el = null, tm = null;\r\n\t\t\t\tthis.element\r\n\t\t\t\t\t.on(\"touchstart\", \".jstree-anchor\", function (e) {\r\n\t\t\t\t\t\tel = e.currentTarget;\r\n\t\t\t\t\t\ttm = +new Date();\r\n\t\t\t\t\t\t$(document).one(\"touchend\", function (e) {\r\n\t\t\t\t\t\t\te.target = document.elementFromPoint(e.originalEvent.targetTouches[0].pageX - window.pageXOffset, e.originalEvent.targetTouches[0].pageY - window.pageYOffset);\r\n\t\t\t\t\t\t\te.currentTarget = e.target;\r\n\t\t\t\t\t\t\ttm = ((+(new Date())) - tm);\r\n\t\t\t\t\t\t\tif(e.target === el && tm > 600 && tm < 1000) {\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\t$(el).trigger('contextmenu', e);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tel = null;\r\n\t\t\t\t\t\t\ttm = null;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t\t$(document).on(\"context_hide.sbswt.popup\", $.proxy(function (e, data) {\r\n\t\t\t\tthis._data.contextmenu.visible = false;\r\n\t\t\t\t$(data.reference).removeClass('jstree-context');\r\n\t\t\t}, this));\r\n\t\t};\r\n\t\tthis.teardown = function () {\r\n\t\t\tif(this._data.contextmenu.visible) {\r\n\t\t\t\tmenu.hide();\r\n\t\t\t}\r\n\t\t\tparent.teardown.call(this);\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * prepare and show the context menu for a node\r\n\t\t * @name show_contextmenu(obj [, x, y])\r\n\t\t * @param {mixed} obj the node\r\n\t\t * @param {Number} x the x-coordinate relative to the document to show the menu at\r\n\t\t * @param {Number} y the y-coordinate relative to the document to show the menu at\r\n\t\t * @param {Object} e the event if available that triggered the contextmenu\r\n\t\t * @plugin contextmenu\r\n\t\t * @trigger show_contextmenu.jstree\r\n\t\t */\r\n\t\tthis.show_contextmenu = function (obj, x, y, e) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\r\n\t\t\tvar s = this.settings.contextmenu,\r\n\t\t\t\td = this.get_node(obj, true),\r\n\t\t\t\ta = d.children(\".jstree-anchor\"),\r\n\t\t\t\to = false,\r\n\t\t\t\ti = false;\r\n\t\t\tif(s.show_at_node || x === undefined || y === undefined) {\r\n\t\t\t\to = a.offset();\r\n\t\t\t\tx = o.left;\r\n\t\t\t\ty = o.top + this._data.core.li_height;\r\n\t\t\t}\r\n\t\t\tif(this.settings.contextmenu.select_node && !this.is_selected(obj)) {\r\n\t\t\t\tthis.activate_node(obj, e);\r\n\t\t\t}\r\n\r\n\t\t\ti = s.items;\r\n\t\t\tif($.isFunction(i)) {\r\n\t\t\t\ti = i.call(this, obj, $.proxy(function (i) {\r\n\t\t\t\t\tthis._show_contextmenu(obj, x, y, i);\r\n\t\t\t\t}, this));\r\n\t\t\t}\r\n\t\t\tif($.isPlainObject(i)) {\r\n\t\t\t\tthis._show_contextmenu(obj, x, y, i);\r\n\t\t\t}\r\n\t\t};\r\n\t\t/**\r\n\t\t * show the prepared context menu for a node\r\n\t\t * @name _show_contextmenu(obj, x, y, i)\r\n\t\t * @param {mixed} obj the node\r\n\t\t * @param {Number} x the x-coordinate relative to the document to show the menu at\r\n\t\t * @param {Number} y the y-coordinate relative to the document to show the menu at\r\n\t\t * @param {Number} i the object of items to show\r\n\t\t * @plugin contextmenu\r\n\t\t * @trigger show_contextmenu.jstree\r\n\t\t * @private\r\n\t\t */\r\n\t\tthis._show_contextmenu = function (obj, x, y, i) {\r\n\t\t\tvar d = this.get_node(obj, true),\r\n\t\t\t\ta = d.children(\".jstree-anchor\");\r\n\t\t\t$(document).one(\"context_show.sbswt.popup\", $.proxy(function (e, data) {\r\n\t\t\t\tvar cls = 'jstree-contextmenu jstree-' + this.get_theme() + '-contextmenu';\r\n\t\t\t\t$(data.element).addClass(cls);\r\n\t\t\t\ta.addClass('jstree-context');\r\n\t\t\t}, this));\r\n\t\t\tthis._data.contextmenu.visible = true;\r\n\t\t\tmenu.popup(a, { 'x' : x, 'y' : y }, i);\r\n\t\t\t/**\r\n\t\t\t * triggered when the contextmenu is shown for a node\r\n\t\t\t * @event\r\n\t\t\t * @name show_contextmenu.jstree\r\n\t\t\t * @param {Object} node the node\r\n\t\t\t * @param {Number} x the x-coordinate of the menu relative to the document\r\n\t\t\t * @param {Number} y the y-coordinate of the menu relative to the document\r\n\t\t\t * @plugin contextmenu\r\n\t\t\t */\r\n\t\t\tthis.trigger('show_contextmenu', { \"node\" : obj, \"x\" : x, \"y\" : y });\r\n\t\t};\r\n\t};\r\n\r\n\t// $.jstree.defaults.plugins.push(\"contextmenu\");\r\n\r\n\treturn $;\r\n\t\r\n});\r\n\ndefine('skylark-widgets-hierarchy/addons/dnd',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"../Hierarchy\"\r\n],function(langx,browser,eventer,noder,geom,$,jstree){\r\n\r\n\t\"use strict\";\r\n\r\n\tif($.jstree.plugins.dnd) { return; }\r\n\r\n\t/**\r\n\t * stores all defaults for the drag'n'drop plugin\r\n\t * @name $.jstree.defaults.dnd\r\n\t * @plugin dnd\r\n\t */\r\n\t$.jstree.defaults.dnd = {\r\n\t\t/**\r\n\t\t * a boolean indicating if a copy should be possible while dragging (by pressint the meta key or Ctrl). Defaults to `true`.\r\n\t\t * @name $.jstree.defaults.dnd.copy\r\n\t\t * @plugin dnd\r\n\t\t */\r\n\t\tcopy : true,\r\n\t\t/**\r\n\t\t * a number indicating how long a node should remain hovered while dragging to be opened. Defaults to `500`.\r\n\t\t * @name $.jstree.defaults.dnd.open_timeout\r\n\t\t * @plugin dnd\r\n\t\t */\r\n\t\topen_timeout : 500,\r\n\t\t/**\r\n\t\t * a function invoked each time a node is about to be dragged, invoked in the tree's scope and receives the nodes about to be dragged as an argument (array) and the event that started the drag - return `false` to prevent dragging\r\n\t\t * @name $.jstree.defaults.dnd.is_draggable\r\n\t\t * @plugin dnd\r\n\t\t */\r\n\t\tis_draggable : true,\r\n\t\t/**\r\n\t\t * a boolean indicating if checks should constantly be made while the user is dragging the node (as opposed to checking only on drop), default is `true`\r\n\t\t * @name $.jstree.defaults.dnd.check_while_dragging\r\n\t\t * @plugin dnd\r\n\t\t */\r\n\t\tcheck_while_dragging : true,\r\n\t\t/**\r\n\t\t * a boolean indicating if nodes from this tree should only be copied with dnd (as opposed to moved), default is `false`\r\n\t\t * @name $.jstree.defaults.dnd.always_copy\r\n\t\t * @plugin dnd\r\n\t\t */\r\n\t\talways_copy : false,\r\n\t\t/**\r\n\t\t * when dropping a node \"inside\", this setting indicates the position the node should go to - it can be an integer or a string: \"first\" (same as 0) or \"last\", default is `0`\r\n\t\t * @name $.jstree.defaults.dnd.inside_pos\r\n\t\t * @plugin dnd\r\n\t\t */\r\n\t\tinside_pos : 0,\r\n\t\t/**\r\n\t\t * when starting the drag on a node that is selected this setting controls if all selected nodes are dragged or only the single node, default is `true`, which means all selected nodes are dragged when the drag is started on a selected node\r\n\t\t * @name $.jstree.defaults.dnd.drag_selection\r\n\t\t * @plugin dnd\r\n\t\t */\r\n\t\tdrag_selection : true,\r\n\t\t/**\r\n\t\t * controls whether dnd works on touch devices. If left as boolean true dnd will work the same as in desktop browsers, which in some cases may impair scrolling. If set to boolean false dnd will not work on touch devices. There is a special third option - string \"selected\" which means only selected nodes can be dragged on touch devices.\r\n\t\t * @name $.jstree.defaults.dnd.touch\r\n\t\t * @plugin dnd\r\n\t\t */\r\n\t\ttouch : true,\r\n\t\t/**\r\n\t\t * controls whether items can be dropped anywhere on the node, not just on the anchor, by default only the node anchor is a valid drop target. Works best with the wholerow plugin. If enabled on mobile depending on the interface it might be hard for the user to cancel the drop, since the whole tree container will be a valid drop target.\r\n\t\t * @name $.jstree.defaults.dnd.large_drop_target\r\n\t\t * @plugin dnd\r\n\t\t */\r\n\t\tlarge_drop_target : false,\r\n\t\t/**\r\n\t\t * controls whether a drag can be initiated from any part of the node and not just the text/icon part, works best with the wholerow plugin. Keep in mind it can cause problems with tree scrolling on mobile depending on the interface - in that case set the touch option to \"selected\".\r\n\t\t * @name $.jstree.defaults.dnd.large_drag_target\r\n\t\t * @plugin dnd\r\n\t\t */\r\n\t\tlarge_drag_target : false,\r\n\t\t/**\r\n\t\t * controls whether use HTML5 dnd api instead of classical. That will allow better integration of dnd events with other HTML5 controls.\r\n\t\t * @reference http://caniuse.com/#feat=dragndrop\r\n\t\t * @name $.jstree.defaults.dnd.use_html5\r\n\t\t * @plugin dnd\r\n\t\t */\r\n\t\tuse_html5: false\r\n\t};\r\n\tvar drg, elm;\r\n\t// TODO: now check works by checking for each node individually, how about max_children, unique, etc?\r\n\t$.jstree.plugins.dnd = function (options, parent) {\r\n\t\tthis.init = function (el, options) {\r\n\t\t\tparent.init.call(this, el, options);\r\n\t\t\tthis.settings.dnd.use_html5 = this.settings.dnd.use_html5 && ('draggable' in document.createElement('span'));\r\n\t\t};\r\n\t\tthis.bind = function () {\r\n\t\t\tparent.bind.call(this);\r\n\r\n\t\t\tthis.element\r\n\t\t\t\t.on(this.settings.dnd.use_html5 ? 'dragstart.jstree' : 'mousedown.jstree touchstart.jstree', this.settings.dnd.large_drag_target ? '.jstree-node' : '.jstree-anchor', $.proxy(function (e) {\r\n\t\t\t\t\t\tif(this.settings.dnd.large_drag_target && $(e.target).closest('.jstree-node')[0] !== e.currentTarget) {\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(e.type === \"touchstart\" && (!this.settings.dnd.touch || (this.settings.dnd.touch === 'selected' && !$(e.currentTarget).closest('.jstree-node').children('.jstree-anchor').hasClass('jstree-clicked')))) {\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar obj = this.get_node(e.target),\r\n\t\t\t\t\t\t\tmlt = this.is_selected(obj) && this.settings.dnd.drag_selection ? this.get_top_selected().length : 1,\r\n\t\t\t\t\t\t\ttxt = (mlt > 1 ? mlt + ' ' + this.get_string('nodes') : this.get_text(e.currentTarget));\r\n\t\t\t\t\t\tif(this.settings.core.force_text) {\r\n\t\t\t\t\t\t\ttxt = $.vakata.html.escape(txt);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(obj && obj.id && obj.id !== $.jstree.root && (e.which === 1 || e.type === \"touchstart\" || e.type === \"dragstart\") &&\r\n\t\t\t\t\t\t\t(this.settings.dnd.is_draggable === true || ($.isFunction(this.settings.dnd.is_draggable) && this.settings.dnd.is_draggable.call(this, (mlt > 1 ? this.get_top_selected(true) : [obj]), e)))\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\tdrg = { 'jstree' : true, 'origin' : this, 'obj' : this.get_node(obj,true), 'nodes' : mlt > 1 ? this.get_top_selected() : [obj.id] };\r\n\t\t\t\t\t\t\telm = e.currentTarget;\r\n\t\t\t\t\t\t\tif (this.settings.dnd.use_html5) {\r\n\t\t\t\t\t\t\t\t$.vakata.dnd._trigger('start', e, { 'helper': $(), 'element': elm, 'data': drg });\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthis.element.trigger('mousedown.jstree');\r\n\t\t\t\t\t\t\t\treturn $.vakata.dnd.start(e, drg, '<div id=\"jstree-dnd\" class=\"jstree-' + this.get_theme() + ' jstree-' + this.get_theme() + '-' + this.get_theme_variant() + ' ' + ( this.settings.core.themes.responsive ? ' jstree-dnd-responsive' : '' ) + '\"><i class=\"jstree-icon jstree-er\"></i>' + txt + '<ins class=\"jstree-copy\" style=\"display:none;\">+</ins></div>');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this));\r\n\t\t\tif (this.settings.dnd.use_html5) {\r\n\t\t\t\tthis.element\r\n\t\t\t\t\t.on('dragover.jstree', function (e) {\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t$.vakata.dnd._trigger('move', e, { 'helper': $(), 'element': elm, 'data': drg });\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t//.on('dragenter.jstree', this.settings.dnd.large_drop_target ? '.jstree-node' : '.jstree-anchor', $.proxy(function (e) {\r\n\t\t\t\t\t//\t\te.preventDefault();\r\n\t\t\t\t\t//\t\t$.vakata.dnd._trigger('move', e, { 'helper': $(), 'element': elm, 'data': drg });\r\n\t\t\t\t\t//\t\treturn false;\r\n\t\t\t\t\t//\t}, this))\r\n\t\t\t\t\t.on('drop.jstree', $.proxy(function (e) {\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t$.vakata.dnd._trigger('stop', e, { 'helper': $(), 'element': elm, 'data': drg });\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}, this));\r\n\t\t\t}\r\n\t\t};\r\n\t\tthis.redraw_node = function(obj, deep, callback, force_render) {\r\n\t\t\tobj = parent.redraw_node.apply(this, arguments);\r\n\t\t\tif (obj && this.settings.dnd.use_html5) {\r\n\t\t\t\tif (this.settings.dnd.large_drag_target) {\r\n\t\t\t\t\tobj.setAttribute('draggable', true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar i, j, tmp = null;\r\n\t\t\t\t\tfor(i = 0, j = obj.childNodes.length; i < j; i++) {\r\n\t\t\t\t\t\tif(obj.childNodes[i] && obj.childNodes[i].className && obj.childNodes[i].className.indexOf(\"jstree-anchor\") !== -1) {\r\n\t\t\t\t\t\t\ttmp = obj.childNodes[i];\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(tmp) {\r\n\t\t\t\t\t\ttmp.setAttribute('draggable', true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn obj;\r\n\t\t};\r\n\t};\r\n\r\n\t$(function() {\r\n\t\t// bind only once for all instances\r\n\t\tvar lastmv = false,\r\n\t\t\tlaster = false,\r\n\t\t\tlastev = false,\r\n\t\t\topento = false,\r\n\t\t\tmarker = $('<div id=\"jstree-marker\">&#160;</div>').hide(); //.appendTo('body');\r\n\r\n\t\t$(document)\r\n\t\t\t.on('dnd_start.vakata.jstree', function (e, data) {\r\n\t\t\t\tlastmv = false;\r\n\t\t\t\tlastev = false;\r\n\t\t\t\tif(!data || !data.data || !data.data.jstree) { return; }\r\n\t\t\t\tmarker.appendTo(document.body); //.show();\r\n\t\t\t})\r\n\t\t\t.on('dnd_move.vakata.jstree', function (e, data) {\r\n\t\t\t\tvar isDifferentNode = data.event.target !== lastev.target;\r\n\t\t\t\tif(opento) {\r\n\t\t\t\t\tif (!data.event || data.event.type !== 'dragover' || isDifferentNode) {\r\n\t\t\t\t\t\tclearTimeout(opento);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(!data || !data.data || !data.data.jstree) { return; }\r\n\r\n\t\t\t\t// if we are hovering the marker image do nothing (can happen on \"inside\" drags)\r\n\t\t\t\tif(data.event.target.id && data.event.target.id === 'jstree-marker') {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tlastev = data.event;\r\n\r\n\t\t\t\tvar ins = $.jstree.reference(data.event.target),\r\n\t\t\t\t\tref = false,\r\n\t\t\t\t\toff = false,\r\n\t\t\t\t\trel = false,\r\n\t\t\t\t\ttmp, l, t, h, p, i, o, ok, t1, t2, op, ps, pr, ip, tm, is_copy, pn;\r\n\t\t\t\t// if we are over an instance\r\n\t\t\t\tif(ins && ins._data && ins._data.dnd) {\r\n\t\t\t\t\tmarker.attr('class', 'jstree-' + ins.get_theme() + ( ins.settings.core.themes.responsive ? ' jstree-dnd-responsive' : '' ));\r\n\t\t\t\t\tis_copy = data.data.origin && (data.data.origin.settings.dnd.always_copy || (data.data.origin.settings.dnd.copy && (data.event.metaKey || data.event.ctrlKey)));\r\n\t\t\t\t\tdata.helper\r\n\t\t\t\t\t\t.children().attr('class', 'jstree-' + ins.get_theme() + ' jstree-' + ins.get_theme() + '-' + ins.get_theme_variant() + ' ' + ( ins.settings.core.themes.responsive ? ' jstree-dnd-responsive' : '' ))\r\n\t\t\t\t\t\t.find('.jstree-copy').first()[ is_copy ? 'show' : 'hide' ]();\r\n\r\n\t\t\t\t\t// if are hovering the container itself add a new root node\r\n\t\t\t\t\t//console.log(data.event);\r\n\t\t\t\t\tif( (data.event.target === ins.element[0] || data.event.target === ins.get_container_ul()[0]) && ins.get_container_ul().children().length === 0) {\r\n\t\t\t\t\t\tok = true;\r\n\t\t\t\t\t\tfor(t1 = 0, t2 = data.data.nodes.length; t1 < t2; t1++) {\r\n\t\t\t\t\t\t\tok = ok && ins.check( (data.data.origin && (data.data.origin.settings.dnd.always_copy || (data.data.origin.settings.dnd.copy && (data.event.metaKey || data.event.ctrlKey)) ) ? \"copy_node\" : \"move_node\"), (data.data.origin && data.data.origin !== ins ? data.data.origin.get_node(data.data.nodes[t1]) : data.data.nodes[t1]), $.jstree.root, 'last', { 'dnd' : true, 'ref' : ins.get_node($.jstree.root), 'pos' : 'i', 'origin' : data.data.origin, 'is_multi' : (data.data.origin && data.data.origin !== ins), 'is_foreign' : (!data.data.origin) });\r\n\t\t\t\t\t\t\tif(!ok) { break; }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(ok) {\r\n\t\t\t\t\t\t\tlastmv = { 'ins' : ins, 'par' : $.jstree.root, 'pos' : 'last' };\r\n\t\t\t\t\t\t\tmarker.hide();\r\n\t\t\t\t\t\t\tdata.helper.find('.jstree-icon').first().removeClass('jstree-er').addClass('jstree-ok');\r\n\t\t\t\t\t\t\tif (data.event.originalEvent && data.event.originalEvent.dataTransfer) {\r\n\t\t\t\t\t\t\t\tdata.event.originalEvent.dataTransfer.dropEffect = is_copy ? 'copy' : 'move';\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t// if we are hovering a tree node\r\n\t\t\t\t\t\tref = ins.settings.dnd.large_drop_target ? $(data.event.target).closest('.jstree-node').children('.jstree-anchor') : $(data.event.target).closest('.jstree-anchor');\r\n\t\t\t\t\t\tif(ref && ref.length && ref.parent().is('.jstree-closed, .jstree-open, .jstree-leaf')) {\r\n\t\t\t\t\t\t\toff = ref.offset();\r\n\t\t\t\t\t\t\trel = (data.event.pageY !== undefined ? data.event.pageY : data.event.originalEvent.pageY) - off.top;\r\n\t\t\t\t\t\t\th = ref.outerHeight();\r\n\t\t\t\t\t\t\tif(rel < h / 3) {\r\n\t\t\t\t\t\t\t\to = ['b', 'i', 'a'];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if(rel > h - h / 3) {\r\n\t\t\t\t\t\t\t\to = ['a', 'i', 'b'];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\to = rel > h / 2 ? ['i', 'a', 'b'] : ['i', 'b', 'a'];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t$.each(o, function (j, v) {\r\n\t\t\t\t\t\t\t\tswitch(v) {\r\n\t\t\t\t\t\t\t\t\tcase 'b':\r\n\t\t\t\t\t\t\t\t\t\tl = off.left - 6;\r\n\t\t\t\t\t\t\t\t\t\tt = off.top;\r\n\t\t\t\t\t\t\t\t\t\tp = ins.get_parent(ref);\r\n\t\t\t\t\t\t\t\t\t\ti = ref.parent().index();\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\tcase 'i':\r\n\t\t\t\t\t\t\t\t\t\tip = ins.settings.dnd.inside_pos;\r\n\t\t\t\t\t\t\t\t\t\ttm = ins.get_node(ref.parent());\r\n\t\t\t\t\t\t\t\t\t\tl = off.left - 2;\r\n\t\t\t\t\t\t\t\t\t\tt = off.top + h / 2 + 1;\r\n\t\t\t\t\t\t\t\t\t\tp = tm.id;\r\n\t\t\t\t\t\t\t\t\t\ti = ip === 'first' ? 0 : (ip === 'last' ? tm.children.length : Math.min(ip, tm.children.length));\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\tcase 'a':\r\n\t\t\t\t\t\t\t\t\t\tl = off.left - 6;\r\n\t\t\t\t\t\t\t\t\t\tt = off.top + h;\r\n\t\t\t\t\t\t\t\t\t\tp = ins.get_parent(ref);\r\n\t\t\t\t\t\t\t\t\t\ti = ref.parent().index() + 1;\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tok = true;\r\n\t\t\t\t\t\t\t\tfor(t1 = 0, t2 = data.data.nodes.length; t1 < t2; t1++) {\r\n\t\t\t\t\t\t\t\t\top = data.data.origin && (data.data.origin.settings.dnd.always_copy || (data.data.origin.settings.dnd.copy && (data.event.metaKey || data.event.ctrlKey))) ? \"copy_node\" : \"move_node\";\r\n\t\t\t\t\t\t\t\t\tps = i;\r\n\t\t\t\t\t\t\t\t\tif(op === \"move_node\" && v === 'a' && (data.data.origin && data.data.origin === ins) && p === ins.get_parent(data.data.nodes[t1])) {\r\n\t\t\t\t\t\t\t\t\t\tpr = ins.get_node(p);\r\n\t\t\t\t\t\t\t\t\t\tif(ps > $.inArray(data.data.nodes[t1], pr.children)) {\r\n\t\t\t\t\t\t\t\t\t\t\tps -= 1;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tok = ok && ( (ins && ins.settings && ins.settings.dnd && ins.settings.dnd.check_while_dragging === false) || ins.check(op, (data.data.origin && data.data.origin !== ins ? data.data.origin.get_node(data.data.nodes[t1]) : data.data.nodes[t1]), p, ps, { 'dnd' : true, 'ref' : ins.get_node(ref.parent()), 'pos' : v, 'origin' : data.data.origin, 'is_multi' : (data.data.origin && data.data.origin !== ins), 'is_foreign' : (!data.data.origin) }) );\r\n\t\t\t\t\t\t\t\t\tif(!ok) {\r\n\t\t\t\t\t\t\t\t\t\tif(ins && ins.last_error) { laster = ins.last_error(); }\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif(v === 'i' && ref.parent().is('.jstree-closed') && ins.settings.dnd.open_timeout) {\r\n\t\t\t\t\t\t\t\t\tif (!data.event || data.event.type !== 'dragover' || isDifferentNode) {\r\n\t\t\t\t\t\t\t\t\t\tif (opento) { clearTimeout(opento); }\r\n\t\t\t\t\t\t\t\t\t\topento = setTimeout((function (x, z) { return function () { x.open_node(z); }; }(ins, ref)), ins.settings.dnd.open_timeout);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif(ok) {\r\n\t\t\t\t\t\t\t\t\tpn = ins.get_node(p, true);\r\n\t\t\t\t\t\t\t\t\tif (!pn.hasClass('.jstree-dnd-parent')) {\r\n\t\t\t\t\t\t\t\t\t\t$('.jstree-dnd-parent').removeClass('jstree-dnd-parent');\r\n\t\t\t\t\t\t\t\t\t\tpn.addClass('jstree-dnd-parent');\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tlastmv = { 'ins' : ins, 'par' : p, 'pos' : v === 'i' && ip === 'last' && i === 0 && !ins.is_loaded(tm) ? 'last' : i };\r\n\t\t\t\t\t\t\t\t\tmarker.css({ 'left' : l + 'px', 'top' : t + 'px' }).show();\r\n\t\t\t\t\t\t\t\t\tdata.helper.find('.jstree-icon').first().removeClass('jstree-er').addClass('jstree-ok');\r\n\t\t\t\t\t\t\t\t\tif (data.event.originalEvent && data.event.originalEvent.dataTransfer) {\r\n\t\t\t\t\t\t\t\t\t\tdata.event.originalEvent.dataTransfer.dropEffect = is_copy ? 'copy' : 'move';\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tlaster = {};\r\n\t\t\t\t\t\t\t\t\to = true;\r\n\t\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tif(o === true) { return; }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t$('.jstree-dnd-parent').removeClass('jstree-dnd-parent');\r\n\t\t\t\tlastmv = false;\r\n\t\t\t\tdata.helper.find('.jstree-icon').removeClass('jstree-ok').addClass('jstree-er');\r\n\t\t\t\tif (data.event.originalEvent && data.event.originalEvent.dataTransfer) {\r\n\t\t\t\t\tdata.event.originalEvent.dataTransfer.dropEffect = 'none';\r\n\t\t\t\t}\r\n\t\t\t\tmarker.hide();\r\n\t\t\t})\r\n\t\t\t.on('dnd_scroll.vakata.jstree', function (e, data) {\r\n\t\t\t\tif(!data || !data.data || !data.data.jstree) { return; }\r\n\t\t\t\tmarker.hide();\r\n\t\t\t\tlastmv = false;\r\n\t\t\t\tlastev = false;\r\n\t\t\t\tdata.helper.find('.jstree-icon').first().removeClass('jstree-ok').addClass('jstree-er');\r\n\t\t\t})\r\n\t\t\t.on('dnd_stop.vakata.jstree', function (e, data) {\r\n\t\t\t\t$('.jstree-dnd-parent').removeClass('jstree-dnd-parent');\r\n\t\t\t\tif(opento) { clearTimeout(opento); }\r\n\t\t\t\tif(!data || !data.data || !data.data.jstree) { return; }\r\n\t\t\t\tmarker.hide().detach();\r\n\t\t\t\tvar i, j, nodes = [];\r\n\t\t\t\tif(lastmv) {\r\n\t\t\t\t\tfor(i = 0, j = data.data.nodes.length; i < j; i++) {\r\n\t\t\t\t\t\tnodes[i] = data.data.origin ? data.data.origin.get_node(data.data.nodes[i]) : data.data.nodes[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlastmv.ins[ data.data.origin && (data.data.origin.settings.dnd.always_copy || (data.data.origin.settings.dnd.copy && (data.event.metaKey || data.event.ctrlKey))) ? 'copy_node' : 'move_node' ](nodes, lastmv.par, lastmv.pos, false, false, false, data.data.origin);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\ti = $(data.event.target).closest('.jstree');\r\n\t\t\t\t\tif(i.length && laster && laster.error && laster.error === 'check') {\r\n\t\t\t\t\t\ti = i.jstree(true);\r\n\t\t\t\t\t\tif(i) {\r\n\t\t\t\t\t\t\ti.settings.core.error.call(this, laster);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tlastev = false;\r\n\t\t\t\tlastmv = false;\r\n\t\t\t})\r\n\t\t\t.on('keyup.jstree keydown.jstree', function (e, data) {\r\n\t\t\t\tdata = $.vakata.dnd._get();\r\n\t\t\t\tif(data && data.data && data.data.jstree) {\r\n\t\t\t\t\tif (e.type === \"keyup\" && e.which === 27) {\r\n\t\t\t\t\t\tif (opento) { clearTimeout(opento); }\r\n\t\t\t\t\t\tlastmv = false;\r\n\t\t\t\t\t\tlaster = false;\r\n\t\t\t\t\t\tlastev = false;\r\n\t\t\t\t\t\topento = false;\r\n\t\t\t\t\t\tmarker.hide().detach();\r\n\t\t\t\t\t\t$.vakata.dnd._clean();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdata.helper.find('.jstree-copy').first()[ data.data.origin && (data.data.origin.settings.dnd.always_copy || (data.data.origin.settings.dnd.copy && (e.metaKey || e.ctrlKey))) ? 'show' : 'hide' ]();\r\n\t\t\t\t\t\tif(lastev) {\r\n\t\t\t\t\t\t\tlastev.metaKey = e.metaKey;\r\n\t\t\t\t\t\t\tlastev.ctrlKey = e.ctrlKey;\r\n\t\t\t\t\t\t\t$.vakata.dnd._trigger('move', lastev);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t});\r\n\r\n\t// helpers\r\n\t(function ($) {\r\n\t\t$.vakata.html = {\r\n\t\t\tdiv : $('<div />'),\r\n\t\t\tescape : function (str) {\r\n\t\t\t\treturn $.vakata.html.div.text(str).html();\r\n\t\t\t},\r\n\t\t\tstrip : function (str) {\r\n\t\t\t\treturn $.vakata.html.div.empty().append($.parseHTML(str)).text();\r\n\t\t\t}\r\n\t\t};\r\n\t\t// private variable\r\n\t\tvar vakata_dnd = {\r\n\t\t\telement\t: false,\r\n\t\t\ttarget\t: false,\r\n\t\t\tis_down\t: false,\r\n\t\t\tis_drag\t: false,\r\n\t\t\thelper\t: false,\r\n\t\t\thelper_w: 0,\r\n\t\t\tdata\t: false,\r\n\t\t\tinit_x\t: 0,\r\n\t\t\tinit_y\t: 0,\r\n\t\t\tscroll_l: 0,\r\n\t\t\tscroll_t: 0,\r\n\t\t\tscroll_e: false,\r\n\t\t\tscroll_i: false,\r\n\t\t\tis_touch: false\r\n\t\t};\r\n\t\t$.vakata.dnd = {\r\n\t\t\tsettings : {\r\n\t\t\t\tscroll_speed\t\t: 10,\r\n\t\t\t\tscroll_proximity\t: 20,\r\n\t\t\t\thelper_left\t\t\t: 5,\r\n\t\t\t\thelper_top\t\t\t: 10,\r\n\t\t\t\tthreshold\t\t\t: 5,\r\n\t\t\t\tthreshold_touch\t\t: 10\r\n\t\t\t},\r\n\t\t\t_trigger : function (event_name, e, data) {\r\n\t\t\t\tif (data === undefined) {\r\n\t\t\t\t\tdata = $.vakata.dnd._get();\r\n\t\t\t\t}\r\n\t\t\t\tdata.event = e;\r\n\t\t\t\t$(document).trigger(\"dnd_\" + event_name + \".vakata\", data);\r\n\t\t\t},\r\n\t\t\t_get : function () {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t\"data\"\t\t: vakata_dnd.data,\r\n\t\t\t\t\t\"element\"\t: vakata_dnd.element,\r\n\t\t\t\t\t\"helper\"\t: vakata_dnd.helper\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\t\t_clean : function () {\r\n\t\t\t\tif(vakata_dnd.helper) { vakata_dnd.helper.remove(); }\r\n\t\t\t\tif(vakata_dnd.scroll_i) { clearInterval(vakata_dnd.scroll_i); vakata_dnd.scroll_i = false; }\r\n\t\t\t\tvakata_dnd = {\r\n\t\t\t\t\telement\t: false,\r\n\t\t\t\t\ttarget\t: false,\r\n\t\t\t\t\tis_down\t: false,\r\n\t\t\t\t\tis_drag\t: false,\r\n\t\t\t\t\thelper\t: false,\r\n\t\t\t\t\thelper_w: 0,\r\n\t\t\t\t\tdata\t: false,\r\n\t\t\t\t\tinit_x\t: 0,\r\n\t\t\t\t\tinit_y\t: 0,\r\n\t\t\t\t\tscroll_l: 0,\r\n\t\t\t\t\tscroll_t: 0,\r\n\t\t\t\t\tscroll_e: false,\r\n\t\t\t\t\tscroll_i: false,\r\n\t\t\t\t\tis_touch: false\r\n\t\t\t\t};\r\n\t\t\t\t$(document).off(\"mousemove.vakata.jstree touchmove.vakata.jstree\", $.vakata.dnd.drag);\r\n\t\t\t\t$(document).off(\"mouseup.vakata.jstree touchend.vakata.jstree\", $.vakata.dnd.stop);\r\n\t\t\t},\r\n\t\t\t_scroll : function (init_only) {\r\n\t\t\t\tif(!vakata_dnd.scroll_e || (!vakata_dnd.scroll_l && !vakata_dnd.scroll_t)) {\r\n\t\t\t\t\tif(vakata_dnd.scroll_i) { clearInterval(vakata_dnd.scroll_i); vakata_dnd.scroll_i = false; }\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tif(!vakata_dnd.scroll_i) {\r\n\t\t\t\t\tvakata_dnd.scroll_i = setInterval($.vakata.dnd._scroll, 100);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tif(init_only === true) { return false; }\r\n\r\n\t\t\t\tvar i = vakata_dnd.scroll_e.scrollTop(),\r\n\t\t\t\t\tj = vakata_dnd.scroll_e.scrollLeft();\r\n\t\t\t\tvakata_dnd.scroll_e.scrollTop(i + vakata_dnd.scroll_t * $.vakata.dnd.settings.scroll_speed);\r\n\t\t\t\tvakata_dnd.scroll_e.scrollLeft(j + vakata_dnd.scroll_l * $.vakata.dnd.settings.scroll_speed);\r\n\t\t\t\tif(i !== vakata_dnd.scroll_e.scrollTop() || j !== vakata_dnd.scroll_e.scrollLeft()) {\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * triggered on the document when a drag causes an element to scroll\r\n\t\t\t\t\t * @event\r\n\t\t\t\t\t * @plugin dnd\r\n\t\t\t\t\t * @name dnd_scroll.vakata\r\n\t\t\t\t\t * @param {Mixed} data any data supplied with the call to $.vakata.dnd.start\r\n\t\t\t\t\t * @param {DOM} element the DOM element being dragged\r\n\t\t\t\t\t * @param {jQuery} helper the helper shown next to the mouse\r\n\t\t\t\t\t * @param {jQuery} event the element that is scrolling\r\n\t\t\t\t\t */\r\n\t\t\t\t\t$.vakata.dnd._trigger(\"scroll\", vakata_dnd.scroll_e);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tstart : function (e, data, html) {\r\n\t\t\t\tif(e.type === \"touchstart\" && e.originalEvent && e.originalEvent.changedTouches && e.originalEvent.changedTouches[0]) {\r\n\t\t\t\t\te.pageX = e.originalEvent.changedTouches[0].pageX;\r\n\t\t\t\t\te.pageY = e.originalEvent.changedTouches[0].pageY;\r\n\t\t\t\t\te.target = document.elementFromPoint(e.originalEvent.changedTouches[0].pageX - window.pageXOffset, e.originalEvent.changedTouches[0].pageY - window.pageYOffset);\r\n\t\t\t\t}\r\n\t\t\t\tif(vakata_dnd.is_drag) { $.vakata.dnd.stop({}); }\r\n\t\t\t\ttry {\r\n\t\t\t\t\te.currentTarget.unselectable = \"on\";\r\n\t\t\t\t\te.currentTarget.onselectstart = function() { return false; };\r\n\t\t\t\t\tif(e.currentTarget.style) {\r\n\t\t\t\t\t\te.currentTarget.style.touchAction = \"none\";\r\n\t\t\t\t\t\te.currentTarget.style.msTouchAction = \"none\";\r\n\t\t\t\t\t\te.currentTarget.style.MozUserSelect = \"none\";\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch(ignore) { }\r\n\t\t\t\tvakata_dnd.init_x\t= e.pageX;\r\n\t\t\t\tvakata_dnd.init_y\t= e.pageY;\r\n\t\t\t\tvakata_dnd.data\t\t= data;\r\n\t\t\t\tvakata_dnd.is_down\t= true;\r\n\t\t\t\tvakata_dnd.element\t= e.currentTarget;\r\n\t\t\t\tvakata_dnd.target\t= e.target;\r\n\t\t\t\tvakata_dnd.is_touch\t= e.type === \"touchstart\";\r\n\t\t\t\tif(html !== false) {\r\n\t\t\t\t\tvakata_dnd.helper = $(\"<div id='vakata-dnd'></div>\").html(html).css({\r\n\t\t\t\t\t\t\"display\"\t\t: \"block\",\r\n\t\t\t\t\t\t\"margin\"\t\t: \"0\",\r\n\t\t\t\t\t\t\"padding\"\t\t: \"0\",\r\n\t\t\t\t\t\t\"position\"\t\t: \"absolute\",\r\n\t\t\t\t\t\t\"top\"\t\t\t: \"-2000px\",\r\n\t\t\t\t\t\t\"lineHeight\"\t: \"16px\",\r\n\t\t\t\t\t\t\"zIndex\"\t\t: \"10000\"\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t$(document).on(\"mousemove.vakata.jstree touchmove.vakata.jstree\", $.vakata.dnd.drag);\r\n\t\t\t\t$(document).on(\"mouseup.vakata.jstree touchend.vakata.jstree\", $.vakata.dnd.stop);\r\n\t\t\t\treturn false;\r\n\t\t\t},\r\n\t\t\tdrag : function (e) {\r\n\t\t\t\tif(e.type === \"touchmove\" && e.originalEvent && e.originalEvent.changedTouches && e.originalEvent.changedTouches[0]) {\r\n\t\t\t\t\te.pageX = e.originalEvent.changedTouches[0].pageX;\r\n\t\t\t\t\te.pageY = e.originalEvent.changedTouches[0].pageY;\r\n\t\t\t\t\te.target = document.elementFromPoint(e.originalEvent.changedTouches[0].pageX - window.pageXOffset, e.originalEvent.changedTouches[0].pageY - window.pageYOffset);\r\n\t\t\t\t}\r\n\t\t\t\tif(!vakata_dnd.is_down) { return; }\r\n\t\t\t\tif(!vakata_dnd.is_drag) {\r\n\t\t\t\t\tif(\r\n\t\t\t\t\t\tMath.abs(e.pageX - vakata_dnd.init_x) > (vakata_dnd.is_touch ? $.vakata.dnd.settings.threshold_touch : $.vakata.dnd.settings.threshold) ||\r\n\t\t\t\t\t\tMath.abs(e.pageY - vakata_dnd.init_y) > (vakata_dnd.is_touch ? $.vakata.dnd.settings.threshold_touch : $.vakata.dnd.settings.threshold)\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tif(vakata_dnd.helper) {\r\n\t\t\t\t\t\t\tvakata_dnd.helper.appendTo(document.body);\r\n\t\t\t\t\t\t\tvakata_dnd.helper_w = vakata_dnd.helper.outerWidth();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvakata_dnd.is_drag = true;\r\n\t\t\t\t\t\t$(vakata_dnd.target).one('click.vakata', false);\r\n\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t * triggered on the document when a drag starts\r\n\t\t\t\t\t\t * @event\r\n\t\t\t\t\t\t * @plugin dnd\r\n\t\t\t\t\t\t * @name dnd_start.vakata\r\n\t\t\t\t\t\t * @param {Mixed} data any data supplied with the call to $.vakata.dnd.start\r\n\t\t\t\t\t\t * @param {DOM} element the DOM element being dragged\r\n\t\t\t\t\t\t * @param {jQuery} helper the helper shown next to the mouse\r\n\t\t\t\t\t\t * @param {Object} event the event that caused the start (probably mousemove)\r\n\t\t\t\t\t\t */\r\n\t\t\t\t\t\t$.vakata.dnd._trigger(\"start\", e);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse { return; }\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar d  = false, w  = false,\r\n\t\t\t\t\tdh = false, wh = false,\r\n\t\t\t\t\tdw = false, ww = false,\r\n\t\t\t\t\tdt = false, dl = false,\r\n\t\t\t\t\tht = false, hl = false;\r\n\r\n\t\t\t\tvakata_dnd.scroll_t = 0;\r\n\t\t\t\tvakata_dnd.scroll_l = 0;\r\n\t\t\t\tvakata_dnd.scroll_e = false;\r\n\t\t\t\t$($(e.target).parentsUntil(\"body\").addBack().get().reverse())\r\n\t\t\t\t\t.filter(function () {\r\n\t\t\t\t\t\treturn\t(/^auto|scroll$/).test($(this).css(\"overflow\")) &&\r\n\t\t\t\t\t\t\t\t(this.scrollHeight > this.offsetHeight || this.scrollWidth > this.offsetWidth);\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.each(function () {\r\n\t\t\t\t\t\tvar t = $(this), o = t.offset();\r\n\t\t\t\t\t\tif(this.scrollHeight > this.offsetHeight) {\r\n\t\t\t\t\t\t\tif(o.top + t.height() - e.pageY < $.vakata.dnd.settings.scroll_proximity)\t{ vakata_dnd.scroll_t = 1; }\r\n\t\t\t\t\t\t\tif(e.pageY - o.top < $.vakata.dnd.settings.scroll_proximity)\t\t\t\t{ vakata_dnd.scroll_t = -1; }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(this.scrollWidth > this.offsetWidth) {\r\n\t\t\t\t\t\t\tif(o.left + t.width() - e.pageX < $.vakata.dnd.settings.scroll_proximity)\t{ vakata_dnd.scroll_l = 1; }\r\n\t\t\t\t\t\t\tif(e.pageX - o.left < $.vakata.dnd.settings.scroll_proximity)\t\t\t\t{ vakata_dnd.scroll_l = -1; }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(vakata_dnd.scroll_t || vakata_dnd.scroll_l) {\r\n\t\t\t\t\t\t\tvakata_dnd.scroll_e = $(this);\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\tif(!vakata_dnd.scroll_e) {\r\n\t\t\t\t\td  = $(document); w = $(window);\r\n\t\t\t\t\tdh = d.height(); wh = w.height();\r\n\t\t\t\t\tdw = d.width(); ww = w.width();\r\n\t\t\t\t\tdt = d.scrollTop(); dl = d.scrollLeft();\r\n\t\t\t\t\tif(dh > wh && e.pageY - dt < $.vakata.dnd.settings.scroll_proximity)\t\t{ vakata_dnd.scroll_t = -1;  }\r\n\t\t\t\t\tif(dh > wh && wh - (e.pageY - dt) < $.vakata.dnd.settings.scroll_proximity)\t{ vakata_dnd.scroll_t = 1; }\r\n\t\t\t\t\tif(dw > ww && e.pageX - dl < $.vakata.dnd.settings.scroll_proximity)\t\t{ vakata_dnd.scroll_l = -1; }\r\n\t\t\t\t\tif(dw > ww && ww - (e.pageX - dl) < $.vakata.dnd.settings.scroll_proximity)\t{ vakata_dnd.scroll_l = 1; }\r\n\t\t\t\t\tif(vakata_dnd.scroll_t || vakata_dnd.scroll_l) {\r\n\t\t\t\t\t\tvakata_dnd.scroll_e = d;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(vakata_dnd.scroll_e) { $.vakata.dnd._scroll(true); }\r\n\r\n\t\t\t\tif(vakata_dnd.helper) {\r\n\t\t\t\t\tht = parseInt(e.pageY + $.vakata.dnd.settings.helper_top, 10);\r\n\t\t\t\t\thl = parseInt(e.pageX + $.vakata.dnd.settings.helper_left, 10);\r\n\t\t\t\t\tif(dh && ht + 25 > dh) { ht = dh - 50; }\r\n\t\t\t\t\tif(dw && hl + vakata_dnd.helper_w > dw) { hl = dw - (vakata_dnd.helper_w + 2); }\r\n\t\t\t\t\tvakata_dnd.helper.css({\r\n\t\t\t\t\t\tleft\t: hl + \"px\",\r\n\t\t\t\t\t\ttop\t\t: ht + \"px\"\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered on the document when a drag is in progress\r\n\t\t\t\t * @event\r\n\t\t\t\t * @plugin dnd\r\n\t\t\t\t * @name dnd_move.vakata\r\n\t\t\t\t * @param {Mixed} data any data supplied with the call to $.vakata.dnd.start\r\n\t\t\t\t * @param {DOM} element the DOM element being dragged\r\n\t\t\t\t * @param {jQuery} helper the helper shown next to the mouse\r\n\t\t\t\t * @param {Object} event the event that caused this to trigger (most likely mousemove)\r\n\t\t\t\t */\r\n\t\t\t\t$.vakata.dnd._trigger(\"move\", e);\r\n\t\t\t\treturn false;\r\n\t\t\t},\r\n\t\t\tstop : function (e) {\r\n\t\t\t\tif(e.type === \"touchend\" && e.originalEvent && e.originalEvent.changedTouches && e.originalEvent.changedTouches[0]) {\r\n\t\t\t\t\te.pageX = e.originalEvent.changedTouches[0].pageX;\r\n\t\t\t\t\te.pageY = e.originalEvent.changedTouches[0].pageY;\r\n\t\t\t\t\te.target = document.elementFromPoint(e.originalEvent.changedTouches[0].pageX - window.pageXOffset, e.originalEvent.changedTouches[0].pageY - window.pageYOffset);\r\n\t\t\t\t}\r\n\t\t\t\tif(vakata_dnd.is_drag) {\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * triggered on the document when a drag stops (the dragged element is dropped)\r\n\t\t\t\t\t * @event\r\n\t\t\t\t\t * @plugin dnd\r\n\t\t\t\t\t * @name dnd_stop.vakata\r\n\t\t\t\t\t * @param {Mixed} data any data supplied with the call to $.vakata.dnd.start\r\n\t\t\t\t\t * @param {DOM} element the DOM element being dragged\r\n\t\t\t\t\t * @param {jQuery} helper the helper shown next to the mouse\r\n\t\t\t\t\t * @param {Object} event the event that caused the stop\r\n\t\t\t\t\t */\r\n\t\t\t\t\tif (e.target !== vakata_dnd.target) {\r\n\t\t\t\t\t\t$(vakata_dnd.target).off('click.vakata');\r\n\t\t\t\t\t}\r\n\t\t\t\t\t$.vakata.dnd._trigger(\"stop\", e);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif(e.type === \"touchend\" && e.target === vakata_dnd.target) {\r\n\t\t\t\t\t\tvar to = setTimeout(function () { $(e.target).click(); }, 100);\r\n\t\t\t\t\t\t$(e.target).one('click', function() { if(to) { clearTimeout(to); } });\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t$.vakata.dnd._clean();\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t};\r\n\t}($));\r\n\r\n\t// include the dnd plugin by default\r\n\t// $.jstree.defaults.plugins.push(\"dnd\");\r\n\r\n\treturn $;\r\n\t\r\n});\r\n\ndefine('skylark-widgets-hierarchy/addons/massload',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"../Hierarchy\"\r\n],function(langx,browser,eventer,noder,geom,$,jstree){\r\n\r\n\t\"use strict\";\r\n\r\n\tif($.jstree.plugins.massload) { return; }\r\n\r\n\t/**\r\n\t * massload configuration\r\n\t *\r\n\t * It is possible to set this to a standard jQuery-like AJAX config.\r\n\t * In addition to the standard jQuery ajax options here you can supply functions for `data` and `url`, the functions will be run in the current instance's scope and a param will be passed indicating which node IDs need to be loaded, the return value of those functions will be used.\r\n\t *\r\n\t * You can also set this to a function, that function will receive the node IDs being loaded as argument and a second param which is a function (callback) which should be called with the result.\r\n\t *\r\n\t * Both the AJAX and the function approach rely on the same return value - an object where the keys are the node IDs, and the value is the children of that node as an array.\r\n\t *\r\n\t *\t{\r\n\t *\t\t\"id1\" : [{ \"text\" : \"Child of ID1\", \"id\" : \"c1\" }, { \"text\" : \"Another child of ID1\", \"id\" : \"c2\" }],\r\n\t *\t\t\"id2\" : [{ \"text\" : \"Child of ID2\", \"id\" : \"c3\" }]\r\n\t *\t}\r\n\t * \r\n\t * @name $.jstree.defaults.massload\r\n\t * @plugin massload\r\n\t */\r\n\t$.jstree.defaults.massload = null;\r\n\t$.jstree.plugins.massload = function (options, parent) {\r\n\t\tthis.init = function (el, options) {\r\n\t\t\tthis._data.massload = {};\r\n\t\t\tparent.init.call(this, el, options);\r\n\t\t};\r\n\t\tthis._load_nodes = function (nodes, callback, is_callback, force_reload) {\r\n\t\t\tvar s = this.settings.massload,\r\n\t\t\t\tnodesString = JSON.stringify(nodes),\r\n\t\t\t\ttoLoad = [],\r\n\t\t\t\tm = this._model.data,\r\n\t\t\t\ti, j, dom;\r\n\t\t\tif (!is_callback) {\r\n\t\t\t\tfor(i = 0, j = nodes.length; i < j; i++) {\r\n\t\t\t\t\tif(!m[nodes[i]] || ( (!m[nodes[i]].state.loaded && !m[nodes[i]].state.failed) || force_reload) ) {\r\n\t\t\t\t\t\ttoLoad.push(nodes[i]);\r\n\t\t\t\t\t\tdom = this.get_node(nodes[i], true);\r\n\t\t\t\t\t\tif (dom && dom.length) {\r\n\t\t\t\t\t\t\tdom.addClass(\"jstree-loading\").attr('aria-busy',true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis._data.massload = {};\r\n\t\t\t\tif (toLoad.length) {\r\n\t\t\t\t\tif($.isFunction(s)) {\r\n\t\t\t\t\t\treturn s.call(this, toLoad, $.proxy(function (data) {\r\n\t\t\t\t\t\t\tvar i, j;\r\n\t\t\t\t\t\t\tif(data) {\r\n\t\t\t\t\t\t\t\tfor(i in data) {\r\n\t\t\t\t\t\t\t\t\tif(data.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\t\t\tthis._data.massload[i] = data[i];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tfor(i = 0, j = nodes.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\tdom = this.get_node(nodes[i], true);\r\n\t\t\t\t\t\t\t\tif (dom && dom.length) {\r\n\t\t\t\t\t\t\t\t\tdom.removeClass(\"jstree-loading\").attr('aria-busy',false);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tparent._load_nodes.call(this, nodes, callback, is_callback, force_reload);\r\n\t\t\t\t\t\t}, this));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(typeof s === 'object' && s && s.url) {\r\n\t\t\t\t\t\ts = $.extend(true, {}, s);\r\n\t\t\t\t\t\tif($.isFunction(s.url)) {\r\n\t\t\t\t\t\t\ts.url = s.url.call(this, toLoad);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif($.isFunction(s.data)) {\r\n\t\t\t\t\t\t\ts.data = s.data.call(this, toLoad);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn $.ajax(s)\r\n\t\t\t\t\t\t\t.done($.proxy(function (data,t,x) {\r\n\t\t\t\t\t\t\t\t\tvar i, j;\r\n\t\t\t\t\t\t\t\t\tif(data) {\r\n\t\t\t\t\t\t\t\t\t\tfor(i in data) {\r\n\t\t\t\t\t\t\t\t\t\t\tif(data.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tthis._data.massload[i] = data[i];\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tfor(i = 0, j = nodes.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\t\tdom = this.get_node(nodes[i], true);\r\n\t\t\t\t\t\t\t\t\t\tif (dom && dom.length) {\r\n\t\t\t\t\t\t\t\t\t\t\tdom.removeClass(\"jstree-loading\").attr('aria-busy',false);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tparent._load_nodes.call(this, nodes, callback, is_callback, force_reload);\r\n\t\t\t\t\t\t\t\t}, this))\r\n\t\t\t\t\t\t\t.fail($.proxy(function (f) {\r\n\t\t\t\t\t\t\t\t\tparent._load_nodes.call(this, nodes, callback, is_callback, force_reload);\r\n\t\t\t\t\t\t\t\t}, this));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn parent._load_nodes.call(this, nodes, callback, is_callback, force_reload);\r\n\t\t};\r\n\t\tthis._load_node = function (obj, callback) {\r\n\t\t\tvar data = this._data.massload[obj.id],\r\n\t\t\t\trslt = null, dom;\r\n\t\t\tif(data) {\r\n\t\t\t\trslt = this[typeof data === 'string' ? '_append_html_data' : '_append_json_data'](\r\n\t\t\t\t\tobj,\r\n\t\t\t\t\ttypeof data === 'string' ? $($.parseHTML(data)).filter(function () { return this.nodeType !== 3; }) : data,\r\n\t\t\t\t\tfunction (status) { callback.call(this, status); }\r\n\t\t\t\t);\r\n\t\t\t\tdom = this.get_node(obj.id, true);\r\n\t\t\t\tif (dom && dom.length) {\r\n\t\t\t\t\tdom.removeClass(\"jstree-loading\").attr('aria-busy',false);\r\n\t\t\t\t}\r\n\t\t\t\tdelete this._data.massload[obj.id];\r\n\t\t\t\treturn rslt;\r\n\t\t\t}\r\n\t\t\treturn parent._load_node.call(this, obj, callback);\r\n\t\t};\r\n\t};\r\n\r\n\treturn $;\r\n\t\r\n});\ndefine('skylark-widgets-hierarchy/addons/search',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"../Hierarchy\"\r\n],function(langx,browser,eventer,noder,geom,$,jstree){\r\n\r\n\t\"use strict\";\r\n\r\n\tif($.jstree.plugins.search) { return; }\r\n\r\n\t/**\r\n\t * stores all defaults for the search plugin\r\n\t * @name $.jstree.defaults.search\r\n\t * @plugin search\r\n\t */\r\n\t$.jstree.defaults.search = {\r\n\t\t/**\r\n\t\t * a jQuery-like AJAX config, which jstree uses if a server should be queried for results.\r\n\t\t *\r\n\t\t * A `str` (which is the search string) parameter will be added with the request, an optional `inside` parameter will be added if the search is limited to a node id. The expected result is a JSON array with nodes that need to be opened so that matching nodes will be revealed.\r\n\t\t * Leave this setting as `false` to not query the server. You can also set this to a function, which will be invoked in the instance's scope and receive 3 parameters - the search string, the callback to call with the array of nodes to load, and the optional node ID to limit the search to\r\n\t\t * @name $.jstree.defaults.search.ajax\r\n\t\t * @plugin search\r\n\t\t */\r\n\t\tajax : false,\r\n\t\t/**\r\n\t\t * Indicates if the search should be fuzzy or not (should `chnd3` match `child node 3`). Default is `false`.\r\n\t\t * @name $.jstree.defaults.search.fuzzy\r\n\t\t * @plugin search\r\n\t\t */\r\n\t\tfuzzy : false,\r\n\t\t/**\r\n\t\t * Indicates if the search should be case sensitive. Default is `false`.\r\n\t\t * @name $.jstree.defaults.search.case_sensitive\r\n\t\t * @plugin search\r\n\t\t */\r\n\t\tcase_sensitive : false,\r\n\t\t/**\r\n\t\t * Indicates if the tree should be filtered (by default) to show only matching nodes (keep in mind this can be a heavy on large trees in old browsers).\r\n\t\t * This setting can be changed at runtime when calling the search method. Default is `false`.\r\n\t\t * @name $.jstree.defaults.search.show_only_matches\r\n\t\t * @plugin search\r\n\t\t */\r\n\t\tshow_only_matches : false,\r\n\t\t/**\r\n\t\t * Indicates if the children of matched element are shown (when show_only_matches is true)\r\n\t\t * This setting can be changed at runtime when calling the search method. Default is `false`.\r\n\t\t * @name $.jstree.defaults.search.show_only_matches_children\r\n\t\t * @plugin search\r\n\t\t */\r\n\t\tshow_only_matches_children : false,\r\n\t\t/**\r\n\t\t * Indicates if all nodes opened to reveal the search result, should be closed when the search is cleared or a new search is performed. Default is `true`.\r\n\t\t * @name $.jstree.defaults.search.close_opened_onclear\r\n\t\t * @plugin search\r\n\t\t */\r\n\t\tclose_opened_onclear : true,\r\n\t\t/**\r\n\t\t * Indicates if only leaf nodes should be included in search results. Default is `false`.\r\n\t\t * @name $.jstree.defaults.search.search_leaves_only\r\n\t\t * @plugin search\r\n\t\t */\r\n\t\tsearch_leaves_only : false,\r\n\t\t/**\r\n\t\t * If set to a function it wil be called in the instance's scope with two arguments - search string and node (where node will be every node in the structure, so use with caution).\r\n\t\t * If the function returns a truthy value the node will be considered a match (it might not be displayed if search_only_leaves is set to true and the node is not a leaf). Default is `false`.\r\n\t\t * @name $.jstree.defaults.search.search_callback\r\n\t\t * @plugin search\r\n\t\t */\r\n\t\tsearch_callback : false\r\n\t};\r\n\r\n\t$.jstree.plugins.search = function (options, parent) {\r\n\t\tthis.bind = function () {\r\n\t\t\tparent.bind.call(this);\r\n\r\n\t\t\tthis._data.search.str = \"\";\r\n\t\t\tthis._data.search.dom = $();\r\n\t\t\tthis._data.search.res = [];\r\n\t\t\tthis._data.search.opn = [];\r\n\t\t\tthis._data.search.som = false;\r\n\t\t\tthis._data.search.smc = false;\r\n\t\t\tthis._data.search.hdn = [];\r\n\r\n\t\t\tthis.element\r\n\t\t\t\t.on(\"search.jstree\", $.proxy(function (e, data) {\r\n\t\t\t\t\t\tif(this._data.search.som && data.res.length) {\r\n\t\t\t\t\t\t\tvar m = this._model.data, i, j, p = [], k, l;\r\n\t\t\t\t\t\t\tfor(i = 0, j = data.res.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\tif(m[data.res[i]] && !m[data.res[i]].state.hidden) {\r\n\t\t\t\t\t\t\t\t\tp.push(data.res[i]);\r\n\t\t\t\t\t\t\t\t\tp = p.concat(m[data.res[i]].parents);\r\n\t\t\t\t\t\t\t\t\tif(this._data.search.smc) {\r\n\t\t\t\t\t\t\t\t\t\tfor (k = 0, l = m[data.res[i]].children_d.length; k < l; k++) {\r\n\t\t\t\t\t\t\t\t\t\t\tif (m[m[data.res[i]].children_d[k]] && !m[m[data.res[i]].children_d[k]].state.hidden) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tp.push(m[data.res[i]].children_d[k]);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tp = $.vakata.array_remove_item($.vakata.array_unique(p), $.jstree.root);\r\n\t\t\t\t\t\t\tthis._data.search.hdn = this.hide_all(true);\r\n\t\t\t\t\t\t\tthis.show_node(p, true);\r\n\t\t\t\t\t\t\tthis.redraw(true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"clear_search.jstree\", $.proxy(function (e, data) {\r\n\t\t\t\t\t\tif(this._data.search.som && data.res.length) {\r\n\t\t\t\t\t\t\tthis.show_node(this._data.search.hdn, true);\r\n\t\t\t\t\t\t\tthis.redraw(true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this));\r\n\t\t};\r\n\t\t/**\r\n\t\t * used to search the tree nodes for a given string\r\n\t\t * @name search(str [, skip_async])\r\n\t\t * @param {String} str the search string\r\n\t\t * @param {Boolean} skip_async if set to true server will not be queried even if configured\r\n\t\t * @param {Boolean} show_only_matches if set to true only matching nodes will be shown (keep in mind this can be very slow on large trees or old browsers)\r\n\t\t * @param {mixed} inside an optional node to whose children to limit the search\r\n\t\t * @param {Boolean} append if set to true the results of this search are appended to the previous search\r\n\t\t * @plugin search\r\n\t\t * @trigger search.jstree\r\n\t\t */\r\n\t\tthis.search = function (str, skip_async, show_only_matches, inside, append, show_only_matches_children) {\r\n\t\t\tif(str === false || $.trim(str.toString()) === \"\") {\r\n\t\t\t\treturn this.clear_search();\r\n\t\t\t}\r\n\t\t\tinside = this.get_node(inside);\r\n\t\t\tinside = inside && inside.id ? inside.id : null;\r\n\t\t\tstr = str.toString();\r\n\t\t\tvar s = this.settings.search,\r\n\t\t\t\ta = s.ajax ? s.ajax : false,\r\n\t\t\t\tm = this._model.data,\r\n\t\t\t\tf = null,\r\n\t\t\t\tr = [],\r\n\t\t\t\tp = [], i, j;\r\n\t\t\tif(this._data.search.res.length && !append) {\r\n\t\t\t\tthis.clear_search();\r\n\t\t\t}\r\n\t\t\tif(show_only_matches === undefined) {\r\n\t\t\t\tshow_only_matches = s.show_only_matches;\r\n\t\t\t}\r\n\t\t\tif(show_only_matches_children === undefined) {\r\n\t\t\t\tshow_only_matches_children = s.show_only_matches_children;\r\n\t\t\t}\r\n\t\t\tif(!skip_async && a !== false) {\r\n\t\t\t\tif($.isFunction(a)) {\r\n\t\t\t\t\treturn a.call(this, str, $.proxy(function (d) {\r\n\t\t\t\t\t\t\tif(d && d.d) { d = d.d; }\r\n\t\t\t\t\t\t\tthis._load_nodes(!$.isArray(d) ? [] : $.vakata.array_unique(d), function () {\r\n\t\t\t\t\t\t\t\tthis.search(str, true, show_only_matches, inside, append, show_only_matches_children);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}, this), inside);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\ta = $.extend({}, a);\r\n\t\t\t\t\tif(!a.data) { a.data = {}; }\r\n\t\t\t\t\ta.data.str = str;\r\n\t\t\t\t\tif(inside) {\r\n\t\t\t\t\t\ta.data.inside = inside;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (this._data.search.lastRequest) {\r\n\t\t\t\t\t\tthis._data.search.lastRequest.abort();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._data.search.lastRequest = $.ajax(a)\r\n\t\t\t\t\t\t.fail($.proxy(function () {\r\n\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'ajax', 'plugin' : 'search', 'id' : 'search_01', 'reason' : 'Could not load search parents', 'data' : JSON.stringify(a) };\r\n\t\t\t\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\r\n\t\t\t\t\t\t}, this))\r\n\t\t\t\t\t\t.done($.proxy(function (d) {\r\n\t\t\t\t\t\t\tif(d && d.d) { d = d.d; }\r\n\t\t\t\t\t\t\tthis._load_nodes(!$.isArray(d) ? [] : $.vakata.array_unique(d), function () {\r\n\t\t\t\t\t\t\t\tthis.search(str, true, show_only_matches, inside, append, show_only_matches_children);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}, this));\r\n\t\t\t\t\treturn this._data.search.lastRequest;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(!append) {\r\n\t\t\t\tthis._data.search.str = str;\r\n\t\t\t\tthis._data.search.dom = $();\r\n\t\t\t\tthis._data.search.res = [];\r\n\t\t\t\tthis._data.search.opn = [];\r\n\t\t\t\tthis._data.search.som = show_only_matches;\r\n\t\t\t\tthis._data.search.smc = show_only_matches_children;\r\n\t\t\t}\r\n\r\n\t\t\tf = new $.vakata.search(str, true, { caseSensitive : s.case_sensitive, fuzzy : s.fuzzy });\r\n\t\t\t$.each(m[inside ? inside : $.jstree.root].children_d, function (ii, i) {\r\n\t\t\t\tvar v = m[i];\r\n\t\t\t\tif(v.text && !v.state.hidden && (!s.search_leaves_only || (v.state.loaded && v.children.length === 0)) && ( (s.search_callback && s.search_callback.call(this, str, v)) || (!s.search_callback && f.search(v.text).isMatch) ) ) {\r\n\t\t\t\t\tr.push(i);\r\n\t\t\t\t\tp = p.concat(v.parents);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif(r.length) {\r\n\t\t\t\tp = $.vakata.array_unique(p);\r\n\t\t\t\tfor(i = 0, j = p.length; i < j; i++) {\r\n\t\t\t\t\tif(p[i] !== $.jstree.root && m[p[i]] && this.open_node(p[i], null, 0) === true) {\r\n\t\t\t\t\t\tthis._data.search.opn.push(p[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(!append) {\r\n\t\t\t\t\tthis._data.search.dom = $(this.element[0].querySelectorAll('#' + $.map(r, function (v) { return \"0123456789\".indexOf(v[0]) !== -1 ? '\\\\3' + v[0] + ' ' + v.substr(1).replace($.jstree.idregex,'\\\\$&') : v.replace($.jstree.idregex,'\\\\$&'); }).join(', #')));\r\n\t\t\t\t\tthis._data.search.res = r;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._data.search.dom = this._data.search.dom.add($(this.element[0].querySelectorAll('#' + $.map(r, function (v) { return \"0123456789\".indexOf(v[0]) !== -1 ? '\\\\3' + v[0] + ' ' + v.substr(1).replace($.jstree.idregex,'\\\\$&') : v.replace($.jstree.idregex,'\\\\$&'); }).join(', #'))));\r\n\t\t\t\t\tthis._data.search.res = $.vakata.array_unique(this._data.search.res.concat(r));\r\n\t\t\t\t}\r\n\t\t\t\tthis._data.search.dom.children(\".jstree-anchor\").addClass('jstree-search');\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * triggered after search is complete\r\n\t\t\t * @event\r\n\t\t\t * @name search.jstree\r\n\t\t\t * @param {jQuery} nodes a jQuery collection of matching nodes\r\n\t\t\t * @param {String} str the search string\r\n\t\t\t * @param {Array} res a collection of objects represeing the matching nodes\r\n\t\t\t * @plugin search\r\n\t\t\t */\r\n\t\t\tthis.trigger('search', { nodes : this._data.search.dom, str : str, res : this._data.search.res, show_only_matches : show_only_matches });\r\n\t\t};\r\n\t\t/**\r\n\t\t * used to clear the last search (removes classes and shows all nodes if filtering is on)\r\n\t\t * @name clear_search()\r\n\t\t * @plugin search\r\n\t\t * @trigger clear_search.jstree\r\n\t\t */\r\n\t\tthis.clear_search = function () {\r\n\t\t\tif(this.settings.search.close_opened_onclear) {\r\n\t\t\t\tthis.close_node(this._data.search.opn, 0);\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * triggered after search is complete\r\n\t\t\t * @event\r\n\t\t\t * @name clear_search.jstree\r\n\t\t\t * @param {jQuery} nodes a jQuery collection of matching nodes (the result from the last search)\r\n\t\t\t * @param {String} str the search string (the last search string)\r\n\t\t\t * @param {Array} res a collection of objects represeing the matching nodes (the result from the last search)\r\n\t\t\t * @plugin search\r\n\t\t\t */\r\n\t\t\tthis.trigger('clear_search', { 'nodes' : this._data.search.dom, str : this._data.search.str, res : this._data.search.res });\r\n\t\t\tif(this._data.search.res.length) {\r\n\t\t\t\tthis._data.search.dom = $(this.element[0].querySelectorAll('#' + $.map(this._data.search.res, function (v) {\r\n\t\t\t\t\treturn \"0123456789\".indexOf(v[0]) !== -1 ? '\\\\3' + v[0] + ' ' + v.substr(1).replace($.jstree.idregex,'\\\\$&') : v.replace($.jstree.idregex,'\\\\$&');\r\n\t\t\t\t}).join(', #')));\r\n\t\t\t\tthis._data.search.dom.children(\".jstree-anchor\").removeClass(\"jstree-search\");\r\n\t\t\t}\r\n\t\t\tthis._data.search.str = \"\";\r\n\t\t\tthis._data.search.res = [];\r\n\t\t\tthis._data.search.opn = [];\r\n\t\t\tthis._data.search.dom = $();\r\n\t\t};\r\n\r\n\t\tthis.redraw_node = function(obj, deep, callback, force_render) {\r\n\t\t\tobj = parent.redraw_node.apply(this, arguments);\r\n\t\t\tif(obj) {\r\n\t\t\t\tif($.inArray(obj.id, this._data.search.res) !== -1) {\r\n\t\t\t\t\tvar i, j, tmp = null;\r\n\t\t\t\t\tfor(i = 0, j = obj.childNodes.length; i < j; i++) {\r\n\t\t\t\t\t\tif(obj.childNodes[i] && obj.childNodes[i].className && obj.childNodes[i].className.indexOf(\"jstree-anchor\") !== -1) {\r\n\t\t\t\t\t\t\ttmp = obj.childNodes[i];\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(tmp) {\r\n\t\t\t\t\t\ttmp.className += ' jstree-search';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn obj;\r\n\t\t};\r\n\t};\r\n\r\n\t// helpers\r\n\t(function ($) {\r\n\t\t// from http://kiro.me/projects/fuse.html\r\n\t\t$.vakata.search = function(pattern, txt, options) {\r\n\t\t\toptions = options || {};\r\n\t\t\toptions = $.extend({}, $.vakata.search.defaults, options);\r\n\t\t\tif(options.fuzzy !== false) {\r\n\t\t\t\toptions.fuzzy = true;\r\n\t\t\t}\r\n\t\t\tpattern = options.caseSensitive ? pattern : pattern.toLowerCase();\r\n\t\t\tvar MATCH_LOCATION\t= options.location,\r\n\t\t\t\tMATCH_DISTANCE\t= options.distance,\r\n\t\t\t\tMATCH_THRESHOLD\t= options.threshold,\r\n\t\t\t\tpatternLen = pattern.length,\r\n\t\t\t\tmatchmask, pattern_alphabet, match_bitapScore, search;\r\n\t\t\tif(patternLen > 32) {\r\n\t\t\t\toptions.fuzzy = false;\r\n\t\t\t}\r\n\t\t\tif(options.fuzzy) {\r\n\t\t\t\tmatchmask = 1 << (patternLen - 1);\r\n\t\t\t\tpattern_alphabet = (function () {\r\n\t\t\t\t\tvar mask = {},\r\n\t\t\t\t\t\ti = 0;\r\n\t\t\t\t\tfor (i = 0; i < patternLen; i++) {\r\n\t\t\t\t\t\tmask[pattern.charAt(i)] = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor (i = 0; i < patternLen; i++) {\r\n\t\t\t\t\t\tmask[pattern.charAt(i)] |= 1 << (patternLen - i - 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn mask;\r\n\t\t\t\t}());\r\n\t\t\t\tmatch_bitapScore = function (e, x) {\r\n\t\t\t\t\tvar accuracy = e / patternLen,\r\n\t\t\t\t\t\tproximity = Math.abs(MATCH_LOCATION - x);\r\n\t\t\t\t\tif(!MATCH_DISTANCE) {\r\n\t\t\t\t\t\treturn proximity ? 1.0 : accuracy;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn accuracy + (proximity / MATCH_DISTANCE);\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\tsearch = function (text) {\r\n\t\t\t\ttext = options.caseSensitive ? text : text.toLowerCase();\r\n\t\t\t\tif(pattern === text || text.indexOf(pattern) !== -1) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tisMatch: true,\r\n\t\t\t\t\t\tscore: 0\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\tif(!options.fuzzy) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tisMatch: false,\r\n\t\t\t\t\t\tscore: 1\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\tvar i, j,\r\n\t\t\t\t\ttextLen = text.length,\r\n\t\t\t\t\tscoreThreshold = MATCH_THRESHOLD,\r\n\t\t\t\t\tbestLoc = text.indexOf(pattern, MATCH_LOCATION),\r\n\t\t\t\t\tbinMin, binMid,\r\n\t\t\t\t\tbinMax = patternLen + textLen,\r\n\t\t\t\t\tlastRd, start, finish, rd, charMatch,\r\n\t\t\t\t\tscore = 1,\r\n\t\t\t\t\tlocations = [];\r\n\t\t\t\tif (bestLoc !== -1) {\r\n\t\t\t\t\tscoreThreshold = Math.min(match_bitapScore(0, bestLoc), scoreThreshold);\r\n\t\t\t\t\tbestLoc = text.lastIndexOf(pattern, MATCH_LOCATION + patternLen);\r\n\t\t\t\t\tif (bestLoc !== -1) {\r\n\t\t\t\t\t\tscoreThreshold = Math.min(match_bitapScore(0, bestLoc), scoreThreshold);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbestLoc = -1;\r\n\t\t\t\tfor (i = 0; i < patternLen; i++) {\r\n\t\t\t\t\tbinMin = 0;\r\n\t\t\t\t\tbinMid = binMax;\r\n\t\t\t\t\twhile (binMin < binMid) {\r\n\t\t\t\t\t\tif (match_bitapScore(i, MATCH_LOCATION + binMid) <= scoreThreshold) {\r\n\t\t\t\t\t\t\tbinMin = binMid;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tbinMax = binMid;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbinMid = Math.floor((binMax - binMin) / 2 + binMin);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbinMax = binMid;\r\n\t\t\t\t\tstart = Math.max(1, MATCH_LOCATION - binMid + 1);\r\n\t\t\t\t\tfinish = Math.min(MATCH_LOCATION + binMid, textLen) + patternLen;\r\n\t\t\t\t\trd = new Array(finish + 2);\r\n\t\t\t\t\trd[finish + 1] = (1 << i) - 1;\r\n\t\t\t\t\tfor (j = finish; j >= start; j--) {\r\n\t\t\t\t\t\tcharMatch = pattern_alphabet[text.charAt(j - 1)];\r\n\t\t\t\t\t\tif (i === 0) {\r\n\t\t\t\t\t\t\trd[j] = ((rd[j + 1] << 1) | 1) & charMatch;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\trd[j] = ((rd[j + 1] << 1) | 1) & charMatch | (((lastRd[j + 1] | lastRd[j]) << 1) | 1) | lastRd[j + 1];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (rd[j] & matchmask) {\r\n\t\t\t\t\t\t\tscore = match_bitapScore(i, j - 1);\r\n\t\t\t\t\t\t\tif (score <= scoreThreshold) {\r\n\t\t\t\t\t\t\t\tscoreThreshold = score;\r\n\t\t\t\t\t\t\t\tbestLoc = j - 1;\r\n\t\t\t\t\t\t\t\tlocations.push(bestLoc);\r\n\t\t\t\t\t\t\t\tif (bestLoc > MATCH_LOCATION) {\r\n\t\t\t\t\t\t\t\t\tstart = Math.max(1, 2 * MATCH_LOCATION - bestLoc);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (match_bitapScore(i + 1, MATCH_LOCATION) > scoreThreshold) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlastRd = rd;\r\n\t\t\t\t}\r\n\t\t\t\treturn {\r\n\t\t\t\t\tisMatch: bestLoc >= 0,\r\n\t\t\t\t\tscore: score\r\n\t\t\t\t};\r\n\t\t\t};\r\n\t\t\treturn txt === true ? { 'search' : search } : search(txt);\r\n\t\t};\r\n\t\t$.vakata.search.defaults = {\r\n\t\t\tlocation : 0,\r\n\t\t\tdistance : 100,\r\n\t\t\tthreshold : 0.6,\r\n\t\t\tfuzzy : false,\r\n\t\t\tcaseSensitive : false\r\n\t\t};\r\n\t}($));\r\n\r\n\t// include the search plugin by default\r\n\t// $.jstree.defaults.plugins.push(\"search\");\r\n\r\n\treturn $;\r\n\t\r\n});\r\n\ndefine('skylark-widgets-hierarchy/addons/sort',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"../Hierarchy\"\r\n],function(langx,browser,eventer,noder,geom,$,jstree){\r\n\r\n\t\"use strict\";\r\n\r\n\tif($.jstree.plugins.sort) { return; }\r\n\r\n\t/**\r\n\t * the settings function used to sort the nodes.\r\n\t * It is executed in the tree's context, accepts two nodes as arguments and should return `1` or `-1`.\r\n\t * @name $.jstree.defaults.sort\r\n\t * @plugin sort\r\n\t */\r\n\t$.jstree.defaults.sort = function (a, b) {\r\n\t\t//return this.get_type(a) === this.get_type(b) ? (this.get_text(a) > this.get_text(b) ? 1 : -1) : this.get_type(a) >= this.get_type(b);\r\n\t\treturn this.get_text(a) > this.get_text(b) ? 1 : -1;\r\n\t};\r\n\t$.jstree.plugins.sort = function (options, parent) {\r\n\t\tthis.bind = function () {\r\n\t\t\tparent.bind.call(this);\r\n\t\t\tthis.element\r\n\t\t\t\t.on(\"model.jstree\", $.proxy(function (e, data) {\r\n\t\t\t\t\t\tthis.sort(data.parent, true);\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"rename_node.jstree create_node.jstree\", $.proxy(function (e, data) {\r\n\t\t\t\t\t\tthis.sort(data.parent || data.node.parent, false);\r\n\t\t\t\t\t\tthis.redraw_node(data.parent || data.node.parent, true);\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"move_node.jstree copy_node.jstree\", $.proxy(function (e, data) {\r\n\t\t\t\t\t\tthis.sort(data.parent, false);\r\n\t\t\t\t\t\tthis.redraw_node(data.parent, true);\r\n\t\t\t\t\t}, this));\r\n\t\t};\r\n\t\t/**\r\n\t\t * used to sort a node's children\r\n\t\t * @private\r\n\t\t * @name sort(obj [, deep])\r\n\t\t * @param  {mixed} obj the node\r\n\t\t * @param {Boolean} deep if set to `true` nodes are sorted recursively.\r\n\t\t * @plugin sort\r\n\t\t * @trigger search.jstree\r\n\t\t */\r\n\t\tthis.sort = function (obj, deep) {\r\n\t\t\tvar i, j;\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(obj && obj.children && obj.children.length) {\r\n\t\t\t\tobj.children.sort($.proxy(this.settings.sort, this));\r\n\t\t\t\tif(deep) {\r\n\t\t\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\r\n\t\t\t\t\t\tthis.sort(obj.children_d[i], false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\t// include the sort plugin by default\r\n\t// $.jstree.defaults.plugins.push(\"sort\");\r\n\r\n\treturn $;\r\n\t\r\n});\ndefine('skylark-widgets-hierarchy/addons/state',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"../Hierarchy\"\r\n],function(langx,browser,eventer,noder,geom,$,jstree){\r\n\r\n\t\"use strict\";\r\n\r\n\tif($.jstree.plugins.state) { return; }\r\n\r\n\tvar to = false;\r\n\t/**\r\n\t * stores all defaults for the state plugin\r\n\t * @name $.jstree.defaults.state\r\n\t * @plugin state\r\n\t */\r\n\t$.jstree.defaults.state = {\r\n\t\t/**\r\n\t\t * A string for the key to use when saving the current tree (change if using multiple trees in your project). Defaults to `jstree`.\r\n\t\t * @name $.jstree.defaults.state.key\r\n\t\t * @plugin state\r\n\t\t */\r\n\t\tkey\t\t: 'jstree',\r\n\t\t/**\r\n\t\t * A space separated list of events that trigger a state save. Defaults to `changed.jstree open_node.jstree close_node.jstree`.\r\n\t\t * @name $.jstree.defaults.state.events\r\n\t\t * @plugin state\r\n\t\t */\r\n\t\tevents\t: 'changed.jstree open_node.jstree close_node.jstree check_node.jstree uncheck_node.jstree',\r\n\t\t/**\r\n\t\t * Time in milliseconds after which the state will expire. Defaults to 'false' meaning - no expire.\r\n\t\t * @name $.jstree.defaults.state.ttl\r\n\t\t * @plugin state\r\n\t\t */\r\n\t\tttl\t\t: false,\r\n\t\t/**\r\n\t\t * A function that will be executed prior to restoring state with one argument - the state object. Can be used to clear unwanted parts of the state.\r\n\t\t * @name $.jstree.defaults.state.filter\r\n\t\t * @plugin state\r\n\t\t */\r\n\t\tfilter\t: false,\r\n\t\t/**\r\n\t\t * Should loaded nodes be restored (setting this to true means that it is possible that the whole tree will be loaded for some users - use with caution). Defaults to `false`\r\n\t\t * @name $.jstree.defaults.state.preserve_loaded\r\n\t\t * @plugin state\r\n\t\t */\r\n\t\tpreserve_loaded : false\r\n\t};\r\n\t$.jstree.plugins.state = function (options, parent) {\r\n\t\tthis.bind = function () {\r\n\t\t\tparent.bind.call(this);\r\n\t\t\tvar bind = $.proxy(function () {\r\n\t\t\t\tthis.element.on(this.settings.state.events, $.proxy(function () {\r\n\t\t\t\t\tif(to) { clearTimeout(to); }\r\n\t\t\t\t\tto = setTimeout($.proxy(function () { this.save_state(); }, this), 100);\r\n\t\t\t\t}, this));\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when the state plugin is finished restoring the state (and immediately after ready if there is no state to restore).\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name state_ready.jstree\r\n\t\t\t\t * @plugin state\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('state_ready');\r\n\t\t\t}, this);\r\n\t\t\tthis.element\r\n\t\t\t\t.on(\"ready.jstree\", $.proxy(function (e, data) {\r\n\t\t\t\t\t\tthis.element.one(\"restore_state.jstree\", bind);\r\n\t\t\t\t\t\tif(!this.restore_state()) { bind(); }\r\n\t\t\t\t\t}, this));\r\n\t\t};\r\n\t\t/**\r\n\t\t * save the state\r\n\t\t * @name save_state()\r\n\t\t * @plugin state\r\n\t\t */\r\n\t\tthis.save_state = function () {\r\n\t\t\tvar tm = this.get_state();\r\n\t\t\tif (!this.settings.state.preserve_loaded) {\r\n\t\t\t\tdelete tm.core.loaded;\r\n\t\t\t}\r\n\t\t\tvar st = { 'state' : tm, 'ttl' : this.settings.state.ttl, 'sec' : +(new Date()) };\r\n\t\t\t$.vakata.storage.set(this.settings.state.key, JSON.stringify(st));\r\n\t\t};\r\n\t\t/**\r\n\t\t * restore the state from the user's computer\r\n\t\t * @name restore_state()\r\n\t\t * @plugin state\r\n\t\t */\r\n\t\tthis.restore_state = function () {\r\n\t\t\tvar k = $.vakata.storage.get(this.settings.state.key);\r\n\t\t\tif(!!k) { try { k = JSON.parse(k); } catch(ex) { return false; } }\r\n\t\t\tif(!!k && k.ttl && k.sec && +(new Date()) - k.sec > k.ttl) { return false; }\r\n\t\t\tif(!!k && k.state) { k = k.state; }\r\n\t\t\tif(!!k && $.isFunction(this.settings.state.filter)) { k = this.settings.state.filter.call(this, k); }\r\n\t\t\tif(!!k) {\r\n\t\t\t\tif (!this.settings.state.preserve_loaded) {\r\n\t\t\t\t\tdelete k.core.loaded;\r\n\t\t\t\t}\r\n\t\t\t\tthis.element.one(\"set_state.jstree\", function (e, data) { data.instance.trigger('restore_state', { 'state' : $.extend(true, {}, k) }); });\r\n\t\t\t\tthis.set_state(k);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\t\t/**\r\n\t\t * clear the state on the user's computer\r\n\t\t * @name clear_state()\r\n\t\t * @plugin state\r\n\t\t */\r\n\t\tthis.clear_state = function () {\r\n\t\t\treturn $.vakata.storage.del(this.settings.state.key);\r\n\t\t};\r\n\t};\r\n\r\n\t(function ($, undefined) {\r\n\t\t$.vakata.storage = {\r\n\t\t\t// simply specifying the functions in FF throws an error\r\n\t\t\tset : function (key, val) { return window.localStorage.setItem(key, val); },\r\n\t\t\tget : function (key) { return window.localStorage.getItem(key); },\r\n\t\t\tdel : function (key) { return window.localStorage.removeItem(key); }\r\n\t\t};\r\n\t}($));\r\n\r\n\t// include the state plugin by default\r\n\t// $.jstree.defaults.plugins.push(\"state\");\r\n\r\n\treturn $;\r\n\t\r\n});\ndefine('skylark-widgets-hierarchy/addons/treegrid',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"./menu\",\r\n  \"../Hierarchy\"\r\n],function(langx,browser,eventer,noder,geom,$,menu,jstree){\r\n    var BLANKRE = /^\\s*$/g,\r\n        IDREGEX = /[\\\\:&!^|()\\[\\]<>@*'+~#\";,= \\/${}%]/g,\r\n        escapeId = function(id) {\r\n            return (id || \"\").replace(IDREGEX, '\\\\$&');\r\n        },\r\n        NODE_DATA_ATTR = \"data-jstreegrid\",\r\n        COL_DATA_ATTR = \"data-jstreegrid-column\",\r\n        SEARCHCLASS = \"jstree-search\",\r\n        SPECIAL_TITLE = \"_DATA_\",\r\n        LEVELINDENT = 24,\r\n        styled = false,\r\n        MINCOLWIDTH = 10,\r\n        generateCellId = function(tree, id) {\r\n            return (\"jstree_\" + tree + \"_grid_\" + escapeId(id) + \"_col\");\r\n        },\r\n        getIds = function(nodes) {\r\n            return $.makeArray(nodes.map(function() {\r\n                return this.id;\r\n            }));\r\n        },\r\n        findDataCell = function(uniq, ids, col, scope) {\r\n            if (scope == undefined) {\r\n                scope = $();\r\n            };\r\n            if (ids === null || ids === undefined || ids.length === 0) {\r\n                return scope;\r\n            }\r\n            var ret = $(),\r\n                columns = [].concat(col),\r\n                cellId;\r\n            if (typeof(ids) === \"string\") {\r\n                cellId = generateCellId(uniq, ids);\r\n                ret = columns.map(function(col) {\r\n                    return \"#\" + cellId + col;\r\n                }).join(\", \");\r\n            } else {\r\n                ret = []\r\n                ids.forEach(function(elm, i) {\r\n                    var cellId = generateCellId(uniq, elm);\r\n                    ret = ret.concat(columns.map(function(col) {\r\n                        return \"#\" + cellId + col;\r\n                    }));\r\n                });\r\n                ret = ret.join(\", \");\r\n            }\r\n            return columns.length == 1 ? scope.find(ret) : $(ret);\r\n        },\r\n        isClickedSep = false,\r\n        toResize = null,\r\n        oldMouseX = 0,\r\n        newMouseX = 0,\r\n\r\n        /*jslint regexp:true */\r\n        htmlstripre = /<\\/?[^>]+>/gi,\r\n        /*jslint regexp:false */\r\n\r\n        getIndent = function(node, tree) {\r\n            var div, i, li, width;\r\n\r\n            // did we already save it for this tree?\r\n            tree._gridSettings = tree._gridSettings || {};\r\n            if (tree._gridSettings.indent > 0) {\r\n                width = tree._gridSettings.indent;\r\n            } else {\r\n                // create a new div on the DOM but not visible on the page\r\n                div = $(\"<div></div>\");\r\n                i = node.prev(\"i\");\r\n                li = i.parent();\r\n                // add to that div all of the classes on the tree root\r\n                div.addClass(tree.get_node(\"#\", true).attr(\"class\"));\r\n\r\n                // move the li to the temporary div root\r\n                li.appendTo(div);\r\n\r\n                // attach to the body quickly\r\n                div.appendTo($(\"body\"));\r\n\r\n                // get the width\r\n                width = i.width() || LEVELINDENT;\r\n\r\n                // detach the li from the new div and destroy the new div\r\n                li.detach();\r\n                div.remove();\r\n\r\n                // save it for the future\r\n                tree._gridSettings.indent = width;\r\n            }\r\n\r\n\r\n            return (width);\r\n\r\n        },\r\n\r\n        copyData = function(fromtree, from, totree, to, recurse) {\r\n            var i, j;\r\n            to.data = $.extend(true, {}, from.data);\r\n            if (from && from.children_d && recurse) {\r\n                for (i = 0, j = from.children_d.length; i < j; i++) {\r\n                    copyData(fromtree, fromtree.get_node(from.children_d[i]), totree, totree.get_node(to.children_d[i]), recurse);\r\n                }\r\n            }\r\n        },\r\n\r\n        findLastClosedNode = function(tree, id) {\r\n            // first get our node\r\n            var ret, node = tree.get_node(id),\r\n                children = node.children;\r\n            // is it closed?\r\n            if (!children || children.length <= 0 || !node.state.opened) {\r\n                ret = id;\r\n            } else {\r\n                ret = findLastClosedNode(tree, children[children.length - 1]);\r\n            }\r\n            return (ret);\r\n        },\r\n\r\n        renderAWidth = function(node, tree) {\r\n            var depth, width,\r\n                fullWidth = parseInt(tree.settings.grid.columns[0].width, 10) + parseInt(tree._gridSettings.treeWidthDiff, 10);\r\n            // need to use a selector in jquery 1.4.4+\r\n            depth = tree.get_node(node).parents.length;\r\n            width = fullWidth - depth * getIndent(node, tree);\r\n            // the following line is no longer needed, since we are doing this inside a <td>\r\n            //a.css({\"vertical-align\": \"top\", \"overflow\":\"hidden\"});\r\n            return (fullWidth);\r\n        },\r\n        renderATitle = function(node, t, tree) {\r\n            var a = node.hasClass(\"jstree-anchor\") ? node : node.children(\"[class~='jstree-anchor']\"),\r\n                title, col = tree.settings.grid.columns[0];\r\n            // get the title\r\n            title = \"\";\r\n            if (col.title) {\r\n                if (col.title === SPECIAL_TITLE) {\r\n                    title = tree.get_text(t);\r\n                } else if (t.attr(col.title)) {\r\n                    title = t.attr(col.title);\r\n                }\r\n            }\r\n            // strip out HTML\r\n            title = title.replace(htmlstripre, '');\r\n            if (title) {\r\n                a.attr(\"title\", title);\r\n            }\r\n        },\r\n        getCellData = function(value, data) {\r\n            var val;\r\n            // get the contents of the cell - value could be a string or a function\r\n            if (value !== undefined && value !== null) {\r\n                if (typeof(value) === \"function\") {\r\n                    val = value(data);\r\n                } else if (data.data !== null && data.data !== undefined && data.data[value] !== undefined) {\r\n                    val = data.data[value];\r\n                } else {\r\n                    val = \"\";\r\n                }\r\n            } else {\r\n                val = \"\";\r\n            }\r\n            return val;\r\n        };\r\n\r\n    $.jstree.defaults.grid = {\r\n        width: 'auto'\r\n    };\r\n\r\n    $.jstree.plugins.grid = function(options, parent) {\r\n        this._initialize = function() {\r\n            if (!this._initialized) {\r\n                var s = this.settings.grid || {},\r\n                    styles, container = this.element,\r\n                    i,\r\n                    gs = this._gridSettings = {\r\n                        columns: s.columns || [],\r\n                        treeClass: \"jstree-grid-col-0\",\r\n                        context: s.contextmenu || false,\r\n                        columnWidth: s.columnWidth,\r\n                        defaultConf: {\r\n                            \"*display\": \"inline\",\r\n                            \"*+display\": \"inline\"\r\n                        },\r\n                        isThemeroller: !!this._data.themeroller,\r\n                        treeWidthDiff: 0,\r\n                        resizable: s.resizable,\r\n                        draggable: s.draggable,\r\n                        stateful: s.stateful,\r\n                        indent: 0,\r\n                        sortOrder: 'text',\r\n                        sortAsc: true,\r\n                        caseInsensitive: s.caseInsensitive,\r\n                        fixedHeader: s.fixedHeader !== false,\r\n                        width: s.width,\r\n                        height: s.height,\r\n                        gridcontextmenu: s.gridcontextmenu,\r\n                        treecol: 0,\r\n                        gridcols: []\r\n                    },\r\n                    cols = gs.columns,\r\n                    treecol = 0,\r\n                    columnSearch = false;\r\n                if (gs.gridcontextmenu === true) {\r\n                    gs.gridcontextmenu = function(grid, tree, node, val, col, t, target) {\r\n                        return {\r\n                            \"edit\": {\r\n                                label: \"Edit\",\r\n                                \"action\": function(data) {\r\n                                    var obj = t.get_node(node);\r\n                                    grid._edit(obj, col, target);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                } else if (gs.gridcontextmenu === false) {\r\n                    gs.gridcontextmenu = false;\r\n                }\r\n                // find which column our tree shuld go in\r\n                for (var i = 0, len = s.columns.length; i < len; i++) {\r\n                    if (s.columns[i].tree) {\r\n                        // save which column it was\r\n                        treecol = i;\r\n                        gs.treecol = treecol;\r\n                    } else {\r\n                        gs.gridcols.push(i);\r\n                    }\r\n                }\r\n                // set a unique ID for this table\r\n                this.uniq = Math.ceil(Math.random() * 1000);\r\n                this.rootid = container.attr(\"id\");\r\n\r\n                var msie = /msie/.test(navigator.userAgent.toLowerCase());\r\n                if (msie) {\r\n                    var version = parseFloat(navigator.appVersion.split(\"MSIE\")[1]);\r\n                    if (version < 8) {\r\n                        gs.defaultConf.display = \"inline\";\r\n                        gs.defaultConf.zoom = \"1\";\r\n                    }\r\n                }\r\n\r\n                // set up the classes we need\r\n                if (!styled) {\r\n                    styled = true;\r\n                    styles = [\r\n                        '.jstree-grid-cell {vertical-align: top; overflow:hidden;margin-left:0;position:relative;width: 100%;padding-left:7px;white-space: nowrap;}',\r\n                        '.jstree-grid-cell span {margin-right:0px;margin-right:0px;*display:inline;*+display:inline;white-space: nowrap;}',\r\n                        '.jstree-grid-separator {position:absolute; top:0; right:0; height:24px; margin-left: -2px; border-width: 0 2px 0 0; *display:inline; *+display:inline; margin-right:0px;width:0px;}',\r\n                        '.jstree-grid-header-cell {overflow: hidden; white-space: nowrap;padding: 1px 3px 2px 5px; cursor: default;}',\r\n                        '.jstree-grid-header-themeroller {border: 0; padding: 1px 3px;}',\r\n                        '.jstree-grid-header-regular {position:relative; background-color: #EBF3FD; z-index: 1;}',\r\n                        '.jstree-grid-hidden {display: none;}',\r\n                        '.jstree-grid-resizable-separator {cursor: col-resize; width: 2px;}',\r\n                        '.jstree-grid-separator-regular {border-color: #d0d0d0; border-style: solid;}',\r\n                        '.jstree-grid-cell-themeroller {border: none !important; background: transparent !important;}',\r\n                        '.jstree-grid-wrapper {table-layout: fixed; width: 100%; overflow: auto; position: relative;}',\r\n                        '.jstree-grid-midwrapper {display: table-row;}',\r\n                        '.jstree-grid-width-auto {width:auto;display:block;}',\r\n                        '.jstree-grid-column {display: table-cell; overflow: hidden;}',\r\n                        '.jstree-grid-ellipsis {text-overflow: ellipsis;}',\r\n                        '.jstree-grid-col-0 {width: 100%;}'\r\n                    ];\r\n                    $('<style type=\"text/css\">' + styles.join(\"\\n\") + '</style>').appendTo(\"head\");\r\n                }\r\n                this.gridWrapper = $(\"<div></div>\").addClass(\"jstree-grid-wrapper\").insertAfter(container);\r\n                this.midWrapper = $(\"<div></div>\").addClass(\"jstree-grid-midwrapper\").appendTo(this.gridWrapper);\r\n                // set the wrapper width\r\n                if (s.width) {\r\n                    this.gridWrapper.width(s.width);\r\n                }\r\n                if (s.height) {\r\n                    this.gridWrapper.height(s.height);\r\n                }\r\n                // create the data columns\r\n                for (var i = 0, len = cols.length; i < len; i++) {\r\n                    // create the column\r\n                    $(\"<div></div>\").addClass(\"jstree-default jstree-grid-column jstree-grid-column-\" + i + \" jstree-grid-column-root-\" + this.rootid).appendTo(this.midWrapper);\r\n                }\r\n                this.midWrapper.children(\"div:eq(\" + treecol + \")\").append(container);\r\n                container.addClass(\"jstree-grid-cell\");\r\n\r\n                //move header with scroll\r\n                if (gs.fixedHeader) {\r\n                    this.gridWrapper.scroll(function() {\r\n                        $(this).find('.jstree-grid-header').css('top', $(this).scrollTop());\r\n                    });\r\n                }\r\n\r\n                // copy original sort function\r\n                var defaultSort = $.proxy(this.settings.sort, this);\r\n\r\n                // override sort function\r\n                this.settings.sort = function(a, b) {\r\n                    var bigger, colrefs = this.colrefs;\r\n\r\n                    if (gs.sortOrder === 'text') {\r\n                        var caseInsensitiveSort = this.get_text(a).toLowerCase().localeCompare(this.get_text(b).toLowerCase());\r\n                        bigger = gs.caseInsensitive ? (caseInsensitiveSort === 1) : (defaultSort(a, b) === 1);\r\n                    } else {\r\n                        // gs.sortOrder just refers to the unique random name for this column\r\n                        // we need to get the correct value\r\n                        var nodeA = this.get_node(a),\r\n                            nodeB = this.get_node(b),\r\n                            value = colrefs[gs.sortOrder].value,\r\n                            valueA = typeof(value) === 'function' ? value(nodeA) : nodeA.data[value],\r\n                            valueB = typeof(value) === 'function' ? value(nodeB) : nodeB.data[value];\r\n                        if (typeof(valueA) && typeof(valueB) !== 'undefined') {\r\n                            bigger = gs.caseInsensitive ? valueA.toLowerCase() > valueB.toLowerCase() : valueA > valueB;\r\n                        }\r\n                    }\r\n\r\n                    if (!gs.sortAsc)\r\n                        bigger = !bigger;\r\n\r\n                    return bigger ? 1 : -1;\r\n                };\r\n\r\n                // sortable columns when jQuery UI is available\r\n                if (gs.draggable) {\r\n                    if (!$.ui || !$.ui.sortable) {\r\n                        console.warn('[jstree-grid] draggable option requires jQuery UI');\r\n                    } else {\r\n                        var from, to;\r\n\r\n                        $(this.midWrapper).sortable({\r\n                            axis: \"x\",\r\n                            handle: \".jstree-grid-header\",\r\n                            cancel: \".jstree-grid-separator\",\r\n                            start: function(event, ui) {\r\n                                from = ui.item.index();\r\n                            },\r\n                            stop: function(event, ui) {\r\n                                to = ui.item.index();\r\n                                gs.columns.splice(to, 0, gs.columns.splice(from, 1)[0]);\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n\r\n                //public function. validate searchObject keys, set columnSearch flag, calls jstree search and reset columnSearch flag\r\n                this.searchColumn = function(searchObj) {\r\n                    var validatedSearchObj = {};\r\n\r\n                    if (typeof searchObj == 'object') {\r\n                        for (var columnIndex in searchObj) {\r\n                            if (searchObj.hasOwnProperty(columnIndex)) {\r\n                                // keys should be the index of a column. This means the following:\r\n                                // only integers and smaller than the number of columns and bigger or equal to 0\r\n                                // (possilbe idea for in the future: ability to set key as a more human readable term like the column header and then map it here to an index)\r\n                                if (columnIndex % 1 === 0 && columnIndex < cols.length && columnIndex >= 0) {\r\n                                    validatedSearchObj[columnIndex] = searchObj[columnIndex];\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    columnSearch = validatedSearchObj;\r\n\r\n                    if (Object.keys(validatedSearchObj).length !== 0) {\r\n                        //the search string doesn't matter. we'll use the search string in the columnSearch object!\r\n                        this.search('someValue');\r\n                    } else { // nothing to search so reset jstree's search by passing an empty string\r\n                        this.search('');\r\n                    }\r\n                    columnSearch = false;\r\n                }\r\n\r\n\r\n                // set default search for each column with no user defined search function (used when doing a columnSearch)\r\n                for (var i = 0, len = cols.length; i < len; i++) {\r\n                    var column = cols[i];\r\n                    if (typeof(column.search_callback) !== \"function\") {\r\n                        // no search callback so set default function\r\n                        column.search_callback = function(str, columnValue, node, column) {\r\n                            var f = new $.vakata.search(str, true, {\r\n                                caseSensitive: searchSettings.case_sensitive,\r\n                                fuzzy: searchSettings.fuzzy\r\n                            });\r\n\r\n                            return f.search(columnValue).isMatch;\r\n\r\n                        };\r\n                    }\r\n                }\r\n\r\n                // if there was no overridden search_callback, we will provide it\r\n                // it will use the default per-node search algorithm, augmented by searching our data nodes\r\n                var searchSettings = this.settings.search;\r\n                var omniSearchCallback = searchSettings.search_callback;\r\n\r\n                if (!omniSearchCallback) {\r\n                    omniSearchCallback = function(str, node) {\r\n                        var i, f = new $.vakata.search(str, true, {\r\n                                caseSensitive: searchSettings.case_sensitive,\r\n                                fuzzy: searchSettings.fuzzy\r\n                            }),\r\n                            matched = f.search(node.text).isMatch,\r\n                            col;\r\n\r\n                        // only bother looking in each cell if it was not yet matched\r\n                        if (!matched) {\r\n                            for (var i = 0, len = cols.length; i < len; i++) {\r\n                                if (treecol === i) {\r\n                                    continue;\r\n                                }\r\n                                col = cols[i];\r\n                                matched = f.search(getCellData(col.value, node)).isMatch;\r\n                                if (matched) {\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                        return matched;\r\n                    }\r\n                }\r\n\r\n                searchSettings.search_callback = function(str, node) {\r\n                    var matched = false;\r\n                    if (columnSearch) {\r\n                        //using logical AND for column searches (more options in the future)\r\n                        for (var columnIndex in columnSearch) {\r\n                            if (columnSearch.hasOwnProperty(columnIndex)) {\r\n                                var searchValue = columnSearch[columnIndex];\r\n                                if (searchValue == '') {\r\n                                    continue;\r\n                                }\r\n                                var col = cols[columnIndex];\r\n                                if (treecol == columnIndex) {\r\n                                    matched = col.search_callback(searchValue, node.text, node, col)\r\n                                } else {\r\n                                    matched = col.search_callback(searchValue, getCellData(col.value, node), node, col)\r\n                                }\r\n\r\n                                if (!matched) {\r\n                                    break; //found one that didn't match\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        container.trigger(\"columnSearch_grid.jstree\");\r\n                    } else {\r\n                        matched = omniSearchCallback(str, node);\r\n                        container.trigger(\"omniSearch_grid.jstree\");\r\n                    }\r\n                    return matched;\r\n                };\r\n                this._initialized = true;\r\n            }\r\n        };\r\n        this.init = function(el, options) {\r\n            parent.init.call(this, el, options);\r\n            this._initialize();\r\n        };\r\n        this.bind = function() {\r\n            parent.bind.call(this);\r\n            this._initialize();\r\n            this.element\r\n                .on(\"move_node.jstree create_node.jstree clean_node.jstree change_node.jstree\", $.proxy(function(e, data) {\r\n                    var target = this.get_node(data || \"#\", true);\r\n                    var id = _guid();\r\n                    this._detachColumns(id);\r\n                    this._prepare_grid(target);\r\n                    this._reattachColumns(id);\r\n                }, this))\r\n                .on(\"delete_node.jstree\", $.proxy(function(e, data) {\r\n                    if (data.node.id !== undefined) {\r\n                        var grid = this.gridWrapper,\r\n                            removeNodes = [data.node.id],\r\n                            i;\r\n                        // add children to remove list\r\n                        if (data.node && data.node.children_d) {\r\n                            removeNodes = removeNodes.concat(data.node.children_d);\r\n                        }\r\n                        findDataCell(this.uniq, removeNodes, this._gridSettings.gridcols).remove();\r\n                    }\r\n                }, this))\r\n                .on(\"show_node.jstree\", $.proxy(function(e, data) {\r\n                    this._hideOrShowTree(data.node, false);\r\n                }, this))\r\n                .on(\"hide_node.jstree\", $.proxy(function(e, data) {\r\n                    this._hideOrShowTree(data.node, true);\r\n                }, this))\r\n                .on(\"close_node.jstree\", $.proxy(function(e, data) {\r\n                    this._hide_grid(data.node);\r\n                }, this))\r\n                .on(\"open_node.jstree\", $.proxy(function(e, data) {}, this))\r\n                .on(\"load_node.jstree\", $.proxy(function(e, data) {}, this))\r\n                .on(\"loaded.jstree\", $.proxy(function(e) {\r\n                    this._prepare_headers();\r\n                    this.element.trigger(\"loaded_grid.jstree\");\r\n                }, this))\r\n                .on(\"ready.jstree\", $.proxy(function(e, data) {\r\n                    // find the line-height of the first known node\r\n                    var anchorHeight = this.element.find(\"[class~='jstree-anchor']:first\").outerHeight(),\r\n                        q,\r\n                        cls = this.element.attr(\"class\") || \"\";\r\n                    $('<style type=\"text/css\">div.jstree-grid-cell-root-' + this.rootid + ' {line-height: ' + anchorHeight + 'px; height: ' + anchorHeight + 'px;}</style>').appendTo(\"head\");\r\n\r\n                    // add container classes to the wrapper - EXCEPT those that are added by jstree, i.e. \"jstree\" and \"jstree-*\"\r\n                    q = cls.split(/\\s+/).map(function(i) {\r\n                        var match = i.match(/^jstree(-|$)/);\r\n                        return (match ? \"\" : i);\r\n                    });\r\n                    this.gridWrapper.addClass(q.join(\" \"));\r\n\r\n                }, this))\r\n                .on(\"move_node.jstree\", $.proxy(function(e, data) {\r\n                    var node = data.new_instance.element;\r\n                    //renderAWidth(node,this);\r\n                    // check all the children, because we could drag a tree over\r\n                    node.find(\"li > a\").each($.proxy(function(i, elm) {\r\n                        //renderAWidth($(elm),this);\r\n                    }, this));\r\n\r\n                }, this))\r\n                .on(\"hover_node.jstree\", $.proxy(function(node, selected, event) {\r\n                    var id = selected.node.id;\r\n                    if (this._hover_node !== null && this._hover_node !== undefined) {\r\n                        findDataCell(this.uniq, this._hover_node, this._gridSettings.gridcols).removeClass(\"jstree-hovered\");\r\n                    }\r\n                    this._hover_node = id;\r\n                    findDataCell(this.uniq, id, this._gridSettings.gridcols).addClass(\"jstree-hovered\");\r\n                }, this))\r\n                .on(\"dehover_node.jstree\", $.proxy(function(node, selected, event) {\r\n                    var id = selected.node.id;\r\n                    this._hover_node = null;\r\n                    findDataCell(this.uniq, id, this._gridSettings.gridcols).removeClass(\"jstree-hovered\");\r\n                }, this))\r\n                .on(\"select_node.jstree\", $.proxy(function(node, selected, event) {\r\n                    var id = selected.node.id;\r\n                    findDataCell(this.uniq, id, this._gridSettings.gridcols).addClass(\"jstree-clicked\");\r\n                    this.get_node(selected.node.id, true).children(\"div.jstree-grid-cell\").addClass(\"jstree-clicked\");\r\n                }, this))\r\n                .on(\"deselect_node.jstree\", $.proxy(function(node, selected, event) {\r\n                    var id = selected.node.id;\r\n                    findDataCell(this.uniq, id, this._gridSettings.gridcols).removeClass(\"jstree-clicked\");\r\n                }, this))\r\n                .on(\"deselect_all.jstree\", $.proxy(function(node, selected, event) {\r\n                    // get all of the ids that were unselected\r\n                    var ids = selected.node || [],\r\n                        i;\r\n                    findDataCell(this.uniq, ids, this._gridSettings.gridcols).removeClass(\"jstree-clicked\");\r\n                }, this))\r\n                .on(\"search.jstree\", $.proxy(function(e, data) {\r\n                    // search sometimes filters, so we need to hide all of the appropriate grid cells as well, and show only the matches\r\n                    var grid = this.gridWrapper,\r\n                        that = this,\r\n                        nodesToShow, startTime = new Date().getTime(),\r\n                        ids = getIds(data.nodes.filter(\".jstree-node\")),\r\n                        endTime;\r\n                    this.holdingCells = {};\r\n                    if (data.nodes.length) {\r\n                        var id = _guid();\r\n                        // save the cells we will hide\r\n                        var cells = grid.find('div.jstree-grid-cell-regular');\r\n                        this._detachColumns(id);\r\n                        if (this._data.search.som) {\r\n                            // create the list of nodes we want to look at\r\n                            if (this._data.search.smc) {\r\n                                nodesToShow = data.nodes.add(data.nodes.find('.jstree-node'));\r\n                            }\r\n                            nodesToShow = (nodesToShow || data.nodes).add(data.nodes.parentsUntil(\".jstree\"));\r\n\r\n                            // hide all of the grid cells\r\n                            cells.hide();\r\n                            // show only those that match\r\n                            nodesToShow.filter(\".jstree-node\").each(function(i, node) {\r\n                                var id = node.id;\r\n                                if (id) {\r\n                                    that._prepare_grid(node);\r\n                                    for (var i = 0, len = that._gridSettings.gridcols.length; i < len; i++) {\r\n                                        if (i === that._gridSettings.treecol) {\r\n                                            continue;\r\n                                        }\r\n                                        findDataCell(that.uniq, id, that._gridSettings.gridcols[i], $(that._domManipulation.columns[i])).show();\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n\r\n                        for (var i = 0, len = this._gridSettings.gridcols.length; i < len; i++) {\r\n                            if (i === this._gridSettings.treecol) {\r\n                                continue;\r\n                            }\r\n                            findDataCell(that.uniq, ids, this._gridSettings.gridcols[i], $(this._domManipulation.columns[i])).addClass(SEARCHCLASS);\r\n                        }\r\n                        this._reattachColumns(id);\r\n                        endTime = new Date().getTime();\r\n                        this.element.trigger(\"search-complete.jstree-grid\", [{\r\n                            time: endTime - startTime\r\n                        }]);\r\n                    }\r\n                    return true;\r\n                }, this))\r\n                .on(\"clear_search.jstree\", $.proxy(function(e, data) {\r\n                    // search has been cleared, so we need to show all rows\r\n                    var grid = this.gridWrapper,\r\n                        ids = getIds(data.nodes.filter(\".jstree-node\"));\r\n                    grid.find('div.jstree-grid-cell').show();\r\n                    findDataCell(this.uniq, ids, this._gridSettings.gridcols).removeClass(SEARCHCLASS);\r\n                    return true;\r\n                }, this))\r\n                .on(\"copy_node.jstree\", function(e, data) {\r\n                    var newtree = data.new_instance,\r\n                        oldtree = data.old_instance,\r\n                        obj = newtree.get_node(data.node, true);\r\n                    copyData(oldtree, data.original, newtree, data.node, true);\r\n                    newtree._detachColumns(obj.id);\r\n                    newtree._prepare_grid(obj);\r\n                    newtree._reattachColumns(obj.id);\r\n                    return true;\r\n                })\r\n                .on(\"show_ellipsis.jstree\", $.proxy(function(e, data) {\r\n                    this.gridWrapper.find(\".jstree-grid-cell\").add(\".jstree-grid-header\", this.gridWrapper).addClass(\"jstree-grid-ellipsis\");\r\n                    return true;\r\n                }, this))\r\n                .on(\"hide_ellipsis.jstree\", $.proxy(function(e, data) {\r\n                    this.gridWrapper.find(\".jstree-grid-cell\").add(\".jstree-grid-header\", this.gridWrapper).removeClass(\"jstree-grid-ellipsis\");\r\n                    return true;\r\n                }, this));\r\n            if (this._gridSettings.isThemeroller) {\r\n                this.element\r\n                    .on(\"select_node.jstree\", $.proxy(function(e, data) {\r\n                        data.rslt.obj.children(\"[class~='jstree-anchor']\").nextAll(\"div\").addClass(\"ui-state-active\");\r\n                    }, this))\r\n                    .on(\"deselect_node.jstree deselect_all.jstree\", $.proxy(function(e, data) {\r\n                        data.rslt.obj.children(\"[class~='jstree-anchor']\").nextAll(\"div\").removeClass(\"ui-state-active\");\r\n                    }, this))\r\n                    .on(\"hover_node.jstree\", $.proxy(function(e, data) {\r\n                        data.rslt.obj.children(\"[class~='jstree-anchor']\").nextAll(\"div\").addClass(\"ui-state-hover\");\r\n                    }, this))\r\n                    .on(\"dehover_node.jstree\", $.proxy(function(e, data) {\r\n                        data.rslt.obj.children(\"[class~='jstree-anchor']\").nextAll(\"div\").removeClass(\"ui-state-hover\");\r\n                    }, this));\r\n            }\r\n\r\n            if (this._gridSettings.stateful) {\r\n                this.element\r\n                    .on(\"resize_column.jstree-grid\", $.proxy(function(e, col, width) {\r\n                        localStorage['jstree-root-' + this.rootid + '-column-' + col] = width;\r\n                    }, this));\r\n            }\r\n        };\r\n\r\n        // tear down the tree entirely\r\n        this.teardown = function() {\r\n            var gw = this.gridWrapper,\r\n                container = this.element,\r\n                gridparent = gw.parent();\r\n            container.detach();\r\n            gw.remove();\r\n            gridparent.append(container);\r\n            parent.teardown.call(this);\r\n        };\r\n        // clean the grid in case of redraw or refresh entire tree\r\n        this._clean_grid = function(target, id) {\r\n            var grid = this.gridWrapper;\r\n            if (target) {\r\n                findDataCell(this.uniq, id, this._gridSettings.gridcols).remove();\r\n            } else {\r\n                // get all of the `div` children in all of the `td` in dataRow except for :first (that is the tree itself) and remove\r\n                grid.find(\"div.jstree-grid-cell-regular\").remove();\r\n            }\r\n        };\r\n        // prepare the headers\r\n        this._prepare_headers = function() {\r\n            var header, i, col, _this = this,\r\n                gs = this._gridSettings,\r\n                cols = gs.columns || [],\r\n                width, defaultWidth = gs.columnWidth,\r\n                resizable = gs.resizable || false,\r\n                cl, ccl, val, name, last, tr = gs.isThemeroller,\r\n                classAdd = (tr ? \"themeroller\" : \"regular\"),\r\n                puller,\r\n                hasHeaders = false,\r\n                gridparent = this.gridparent,\r\n                rootid = this.rootid,\r\n                conf = gs.defaultConf,\r\n                coluuid,\r\n                borPadWidth = 0,\r\n                totalWidth = 0;\r\n\r\n            // save the original parent so we can reparent on destroy\r\n            this.parent = gridparent;\r\n\r\n            // save the references to columns by unique ID\r\n            this.colrefs = {};\r\n\r\n\r\n            // create the headers\r\n            for (var i = 0, len = cols.length; i < len; i++) {\r\n                //col = $(\"<col/>\");\r\n                //col.appendTo(colgroup);\r\n                cl = cols[i].headerClass || \"\";\r\n                ccl = cols[i].columnClass || \"\";\r\n                val = cols[i].header || \"\";\r\n                do {\r\n                    coluuid = String(Math.floor(Math.random() * 10000));\r\n                } while (this.colrefs[coluuid] !== undefined);\r\n                // create a unique name for this column\r\n                name = cols[i].value ? coluuid : \"text\";\r\n                this.colrefs[name] = cols[i];\r\n\r\n                if (val) {\r\n                    hasHeaders = true;\r\n                }\r\n                if (gs.stateful && localStorage['jstree-root-' + rootid + '-column-' + i])\r\n                    width = localStorage['jstree-root-' + rootid + '-column-' + i];\r\n                else\r\n                    width = cols[i].width || defaultWidth;\r\n\r\n                var minWidth = cols[i].minWidth || width;\r\n                var maxWidth = cols[i].maxWidth || width;\r\n\r\n                // we only deal with borders if width is not auto and not percentages\r\n                borPadWidth = tr ? 1 + 6 : 2 + 8; // account for the borders and padding\r\n                if (width !== 'auto' && typeof(width) !== \"string\") {\r\n                    width -= borPadWidth;\r\n                }\r\n                col = this.midWrapper.children(\"div.jstree-grid-column-\" + i);\r\n                last = $(\"<div></div>\").css(conf).addClass(\"jstree-grid-div-\" + this.uniq + \"-\" + i + \" \" + (tr ? \"ui-widget-header \" : \"\") + \" jstree-grid-header jstree-grid-header-cell jstree-grid-header-\" + classAdd + \" \" + cl + \" \" + ccl).html(val);\r\n                last.addClass((tr ? \"ui-widget-header \" : \"\") + \"jstree-grid-header jstree-grid-header-\" + classAdd);\r\n                if (this.settings.core.themes.ellipsis === true) {\r\n                    last.addClass('jstree-grid-ellipsis');\r\n                }\r\n                last.prependTo(col);\r\n                last.attr(COL_DATA_ATTR, name);\r\n                totalWidth += last.outerWidth();\r\n                puller = $(\"<div class='jstree-grid-separator jstree-grid-separator-\" + classAdd + (tr ? \" ui-widget-header\" : \"\") + (resizable ? \" jstree-grid-resizable-separator\" : \"\") + \"'>&nbsp;</div>\").appendTo(last);\r\n                col.width(width);\r\n                col.css(\"min-width\", minWidth);\r\n                col.css(\"max-width\", maxWidth);\r\n            }\r\n\r\n            last.addClass((tr ? \"ui-widget-header \" : \"\") + \"jstree-grid-header jstree-grid-header-last jstree-grid-header-\" + classAdd);\r\n            // if there is no width given for the last column, do it via automatic\r\n            if (cols[cols.length - 1].width === undefined) {\r\n                totalWidth -= width;\r\n                col.css({\r\n                    width: \"auto\"\r\n                });\r\n                last.addClass(\"jstree-grid-width-auto\").next(\".jstree-grid-separator\").remove();\r\n            }\r\n            if (hasHeaders) {\r\n                // save the offset of the div from the body\r\n                //gs.divOffset = header.parent().offset().left;\r\n                gs.header = header;\r\n            } else {\r\n                $(\"div.jstree-grid-header\").hide();\r\n            }\r\n\r\n            if (!this.bound && resizable) {\r\n                this.bound = true;\r\n                $(document).mouseup(function() {\r\n                    var ref, cols, width, headers, currentTree, colNum;\r\n                    if (isClickedSep) {\r\n                        colNum = toResize.prevAll(\".jstree-grid-column\").length;\r\n                        currentTree = toResize.closest(\".jstree-grid-wrapper\").find(\".jstree\");\r\n                        ref = $.jstree.reference(currentTree);\r\n                        cols = ref.settings.grid.columns;\r\n                        headers = toResize.parent().children(\"div.jstree-grid-column\");\r\n                        if (isNaN(colNum) || colNum < 0) {\r\n                            ref._gridSettings.treeWidthDiff = currentTree.find(\"ins:eq(0)\").width() + currentTree.find(\"[class~='jstree-anchor']:eq(0)\").width() - ref._gridSettings.columns[0].width;\r\n                        }\r\n                        width = ref._gridSettings.columns[colNum].width = parseFloat(toResize.css(\"width\"));\r\n                        isClickedSep = false;\r\n                        toResize = null;\r\n\r\n                        currentTree.trigger(\"resize_column.jstree-grid\", [colNum, width]);\r\n                    }\r\n                }).mousemove(function(e) {\r\n                    if (isClickedSep) {\r\n                        newMouseX = e.pageX;\r\n                        var diff = newMouseX - oldMouseX,\r\n                            oldPrevHeaderInner,\r\n                            oldPrevColWidth, newPrevColWidth;\r\n\r\n                        if (diff !== 0) {\r\n                            oldPrevHeaderInner = toResize.width();\r\n                            oldPrevColWidth = parseFloat(toResize.css(\"width\"));\r\n\r\n                            // handle a Chrome issue with columns set to auto\r\n                            // thanks to Brabus https://github.com/side-by-side\r\n                            if (!oldPrevColWidth) {\r\n                                oldPrevColWidth = toResize.innerWidth();\r\n                            }\r\n\r\n                            // make sure that diff cannot be beyond the left/right limits\r\n                            diff = diff < 0 ? Math.max(diff, -oldPrevHeaderInner) : diff;\r\n                            newPrevColWidth = oldPrevColWidth + diff;\r\n\r\n                            // only do this if we are not shrinking past 0 on left - and limit it to that amount\r\n                            if ((diff > 0 || oldPrevHeaderInner > 0) && newPrevColWidth > MINCOLWIDTH) {\r\n                                toResize.width(newPrevColWidth + \"px\");\r\n                                toResize.css(\"min-width\", newPrevColWidth + \"px\");\r\n                                toResize.css(\"max-width\", newPrevColWidth + \"px\");\r\n                                oldMouseX = newMouseX;\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n                this.gridWrapper.on(\"selectstart\", \".jstree-grid-resizable-separator\", function() {\r\n                        return false;\r\n                    }).on(\"mousedown\", \".jstree-grid-resizable-separator\", function(e) {\r\n                        isClickedSep = true;\r\n                        oldMouseX = e.pageX;\r\n                        toResize = $(this).closest(\"div.jstree-grid-column\");\r\n                        // the max rightmost position we will allow is the right-most of the wrapper minus a buffer (10)\r\n                        return false;\r\n                    })\r\n                    .on(\"dblclick\", \".jstree-grid-resizable-separator\", function(e) {\r\n                        var clickedSep = $(this),\r\n                            col = clickedSep.closest(\"div.jstree-grid-column\"),\r\n                            oldPrevColWidth = parseFloat(col.css(\"width\")),\r\n                            newWidth = 0,\r\n                            diff,\r\n                            colNum = col.prevAll(\".jstree-grid-column\").length,\r\n                            oldPrevHeaderInner = col.width(),\r\n                            newPrevColWidth;\r\n\r\n\r\n                        //find largest width\r\n                        col.find(\".jstree-grid-cell\").each(function() {\r\n                            var item = $(this),\r\n                                width;\r\n                            item.css(\"position\", \"absolute\");\r\n                            item.css(\"width\", \"auto\");\r\n                            width = item.outerWidth();\r\n                            item.css(\"position\", \"relative\");\r\n\r\n                            if (width > newWidth) {\r\n                                newWidth = width;\r\n                            }\r\n                        });\r\n\r\n                        diff = newWidth - oldPrevColWidth;\r\n\r\n                        // make sure that diff cannot be beyond the left limits\r\n                        diff = diff < 0 ? Math.max(diff, -oldPrevHeaderInner) : diff;\r\n                        newPrevColWidth = (oldPrevColWidth + diff) + \"px\";\r\n\r\n                        col.width(newPrevColWidth);\r\n                        col.css(\"min-width\", newPrevColWidth);\r\n                        col.css(\"max-width\", newPrevColWidth);\r\n\r\n                        $(this).closest(\".jstree-grid-wrapper\").find(\".jstree\").trigger(\"resize_column.jstree-grid\", [colNum, newPrevColWidth]);\r\n                    })\r\n                    .on(\"click\", \".jstree-grid-separator\", function(e) {\r\n                        // don't sort after resize\r\n                        e.stopPropagation();\r\n                    });\r\n            }\r\n            this.gridWrapper.on(\"click\", \".jstree-grid-header-cell\", function(e) {\r\n                if (!_this.sort) {\r\n                    return;\r\n                }\r\n\r\n                // get column\r\n                var name = $(this).attr(COL_DATA_ATTR);\r\n\r\n                // sort order\r\n                var symbol;\r\n                if (gs.sortOrder === name && gs.sortAsc === true) {\r\n                    gs.sortAsc = false;\r\n                    symbol = \"&darr;\";\r\n                } else {\r\n                    gs.sortOrder = name;\r\n                    gs.sortAsc = true;\r\n                    symbol = \"&uarr;\";\r\n                }\r\n\r\n                // add sort arrow\r\n                $(this.closest('.jstree-grid-wrapper')).find(\".jstree-grid-sort-icon\").remove();\r\n                $(\"<span></span>\").addClass(\"jstree-grid-sort-icon\").appendTo($(this)).html(symbol);\r\n\r\n                // sort by column\r\n                var rootNode = _this.get_node('#');\r\n                _this.sort(rootNode, true);\r\n                _this.redraw_node(rootNode, true);\r\n            });\r\n\r\n        };\r\n\r\n        this._domManipulation = null; // We'll store the column nodes in this object and an id for the grid-node that started the manipulation { id: \"id of the node that started the manipulation\", columns: { Key-Value-Pair col-No: Column }}\r\n\r\n        function _guid() {\r\n            function s4() {\r\n                return Math.floor((1 + Math.random()) * 0x10000)\r\n                    .toString(16)\r\n                    .substring(1);\r\n            }\r\n            return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\r\n                s4() + '-' + s4() + s4() + s4();\r\n        }\r\n        /*\r\n         * Trys to detach the tree columns on massive dom manipulations\r\n         */\r\n        this._detachColumns = function(id) {\r\n            // if the columns are not detached, then detach them\r\n            if (this._domManipulation == null) {\r\n                var cols = this._gridSettings.columns || [],\r\n                    treecol = this._gridSettings.treecol,\r\n                    mw = this.midWrapper;\r\n                this._domManipulation = {\r\n                    id: id,\r\n                    columns: {}\r\n                };\r\n                for (var i = 0, len = cols.length; i < len; i++) {\r\n                    //if (treecol === i) {\r\n                    //  continue;\r\n                    //}\r\n                    this._domManipulation.columns[i] = mw.children(\".jstree-grid-column-\" + i)[0];\r\n                    this._domManipulation.columns[i].parentNode.removeChild(this._domManipulation.columns[i]);\r\n                }\r\n            }\r\n            return this._domManipulation;\r\n        }\r\n\r\n        this._reattachColumns = function(id) {\r\n            if (this._domManipulation == null) {\r\n                return false;\r\n            }\r\n            if (this._domManipulation.id === id) {\r\n                var cols = this._gridSettings.columns || [],\r\n                    treecol = this._gridSettings.treecol,\r\n                    mw = this.midWrapper;\r\n                for (var i = 0, len = cols.length; i < len; i++) {\r\n                    //if (treecol === i) {\r\n                    //  continue;\r\n                    //}\r\n                    mw[0].appendChild(this._domManipulation.columns[i]);\r\n                }\r\n                this._domManipulation = null;\r\n            }\r\n            return true;\r\n        }\r\n\r\n        /*\r\n         * Override open_node to detach the columns before redrawing child-nodes, and do reattach them afterwarts\r\n         */\r\n        this.open_node = function(obj, callback, animation) {\r\n            var isArray = $.isArray(obj);\r\n            var node = null;\r\n            if (!isArray) {\r\n                node = this.get_node(obj);\r\n                if (node.id === \"#\") {\r\n                    return;\r\n                } // wtf??? we ar in the root and do not need a open!\r\n            }\r\n            var id = isArray ? _guid() : node.id;\r\n            this._detachColumns(id);\r\n            var ret = parent.open_node.call(this, obj, callback, animation);\r\n            this._reattachColumns(id);\r\n            return ret;\r\n        }\r\n\r\n        /*\r\n         * Override redraw_node to correctly insert the grid\r\n         */\r\n        this.redraw_node = function(obj, deep, is_callback, force_render) {\r\n            var id = $.isArray(obj) ? _guid() : this.get_node(obj).id;\r\n            // we detach the columns once\r\n            this._detachColumns(id);\r\n            // first allow the parent to redraw the node\r\n            obj = parent.redraw_node.call(this, obj, deep, is_callback, force_render);\r\n            // next prepare the grid for a redrawn node - but only if ths node is not hidden (search does that)\r\n            if (obj) {\r\n                this._prepare_grid(obj);\r\n            }\r\n            // don't forget to reattach\r\n            this._reattachColumns(id);\r\n            return obj;\r\n        };\r\n        this.refresh = function() {\r\n            this._clean_grid();\r\n            return parent.refresh.apply(this, arguments);\r\n        };\r\n        /*\r\n         * Override set_id to update cell attributes\r\n         */\r\n        this.set_id = function(obj, id) {\r\n            var old, uniq = this.uniq;\r\n            if (obj) {\r\n                old = obj.id;\r\n            }\r\n            var result = parent.set_id.apply(this, arguments);\r\n            if (result) {\r\n                if (old !== undefined) {\r\n                    var grid = this.gridWrapper,\r\n                        oldNodes = [old],\r\n                        i;\r\n                    // get children\r\n                    if (obj && obj.children_d) {\r\n                        oldNodes = oldNodes.concat(obj.children_d);\r\n                    }\r\n                    // update id in children\r\n                    findDataCell(uniq, oldNodes, this._gridSettings.gridcols)\r\n                        .attr(NODE_DATA_ATTR, obj.id)\r\n                        .removeClass(generateCellId(uniq, old))\r\n                        .addClass(generateCellId(uniq, obj.id))\r\n                        .each(function(i, node) {\r\n                            $(node).attr('id', generateCellId(uniq, obj.id) + (i + 1));\r\n                        });\r\n                }\r\n            }\r\n            return result;\r\n        };\r\n\r\n        this._hideOrShowTree = function(node, hide) {\r\n            //Hides or shows a tree\r\n            this._detachColumns(node.id);\r\n            // show cells in each detachted column\r\n            this._hideOrShowNode(node, hide, this._gridSettings.columns || [], this._gridSettings.treecol);\r\n            this._reattachColumns(node.id);\r\n        }\r\n        this._hideOrShowNode = function(node, hide, cols, treecol) {\r\n            //Hides or shows a node with recursive calls to all open child-nodes\r\n            for (var i = 0, len = cols.length; i < len; i++) {\r\n                if (i === treecol) {\r\n                    continue;\r\n                }\r\n                var cells = findDataCell(this.uniq, node.id, i, $(this._domManipulation.columns[i]));\r\n                if (hide) {\r\n                    cells.addClass(\"jstree-grid-hidden\");\r\n                } else {\r\n                    cells.removeClass(\"jstree-grid-hidden\");\r\n                }\r\n            }\r\n            if (node.state.opened && node.children) {\r\n                for (var i = 0, len = node.children.length; i < len; i++) {\r\n                    this._hideOrShowNode(this.get_node(node.children[i]), hide, cols, treecol);\r\n                }\r\n            }\r\n        }\r\n        this._hide_grid = function(node) {\r\n            if (!node) {\r\n                return true;\r\n            }\r\n            this._detachColumns(node.id);\r\n            var children = node.children ? node.children : [],\r\n                cols = this._gridSettings.columns || [],\r\n                treecol = this._gridSettings.treecol;\r\n            // try to remove all children\r\n            for (var i = 0, len = children.length; i < len; i++) {\r\n                var child = this.get_node(children[i]);\r\n                // go through each column, remove all children with the correct ID name\r\n                for (var j = 0, lenj = cols.length; j < lenj; j++) {\r\n                    if (j === treecol) {\r\n                        continue;\r\n                    }\r\n                    findDataCell(this.uniq, child.id, j, $(this._domManipulation.columns[j])).remove();\r\n                }\r\n                if (child.state.opened) {\r\n                    this._hide_grid(child);\r\n                }\r\n            }\r\n\r\n\r\n            this._reattachColumns(node.id);\r\n        };\r\n        this.holdingCells = {};\r\n        this.getHoldingCells = function(obj, col, hc) {\r\n            if (obj.state.hidden || !obj.state.opened) {\r\n                return $();\r\n            }\r\n            var ret = $(),\r\n                children = obj.children || [],\r\n                child, i, uniq = this.uniq;\r\n            // run through each child, render it, and then render its children recursively\r\n            for (i = 0; i < children.length; i++) {\r\n                child = generateCellId(uniq, children[i]) + col;\r\n                if (hc[child]) {\r\n                    ret = ret.add(hc[child]).add(this.getHoldingCells(this.get_node(children[i]), col, hc));\r\n                    //delete hc[child];\r\n                }\r\n            }\r\n            return (ret);\r\n        };\r\n\r\n        /**\r\n         * put a grid cell in edit mode (input field to edit the data)\r\n         * @name edit(obj, col)\r\n         * @param  {mixed} obj\r\n         * @param  {obj} col definition\r\n         * @param  {element} cell element, either span or wrapping div\r\n         */\r\n        this._edit = function(obj, col, element) {\r\n            if (!obj) {\r\n                return false;\r\n            }\r\n            if (!obj.data) {\r\n                obj.data = {};\r\n            }\r\n            if (element) {\r\n                element = $(element);\r\n                if (element.prop(\"tagName\").toLowerCase() === \"div\") {\r\n                    element = element.children(\"span:first\");\r\n                }\r\n            } else {\r\n                // need to find the element - later\r\n                return false;\r\n            }\r\n            var rtl = this._data.core.rtl,\r\n                w = this.element.width(),\r\n                t = obj.data[col.value],\r\n                h1 = $(\"<\" + \"div />\", {\r\n                    css: {\r\n                        \"position\": \"absolute\",\r\n                        \"top\": \"-200px\",\r\n                        \"left\": (rtl ? \"0px\" : \"-1000px\"),\r\n                        \"visibility\": \"hidden\"\r\n                    }\r\n                }).appendTo(\"body\"),\r\n                h2 = $(\"<\" + \"input />\", {\r\n                    \"value\": t,\r\n                    \"class\": \"jstree-rename-input\",\r\n                    \"css\": {\r\n                        \"padding\": \"0\",\r\n                        \"border\": \"1px solid silver\",\r\n                        \"box-sizing\": \"border-box\",\r\n                        \"display\": \"inline-block\",\r\n                        \"height\": (this._data.core.li_height) + \"px\",\r\n                        \"lineHeight\": (this._data.core.li_height) + \"px\",\r\n                        \"width\": \"150px\" // will be set a bit further down\r\n                    },\r\n                    \"blur\": $.proxy(function() {\r\n                        var v = h2.val();\r\n                        // save the value if changed\r\n                        if (v === \"\" || v === t) {\r\n                            v = t;\r\n                        } else {\r\n                            obj.data[col.value] = v;\r\n                            this.element.trigger('update_cell.jstree-grid', {\r\n                                node: obj,\r\n                                col: col.value,\r\n                                value: v,\r\n                                old: t\r\n                            });\r\n                            var id = _guid();\r\n                            this._detachColumns(id);\r\n                            this._prepare_grid(this.get_node(obj, true));\r\n                            this._reattachColumns(id);\r\n                        }\r\n                        h2.remove();\r\n                        element.show();\r\n                    }, this),\r\n                    \"keydown\": function(event) {\r\n                        var key = event.which;\r\n                        if (key === 27) {\r\n                            this.value = t;\r\n                        }\r\n                        if (key === 27 || key === 13 || key === 37 || key === 38 || key === 39 || key === 40 || key === 32) {\r\n                            event.stopImmediatePropagation();\r\n                        }\r\n                        if (key === 27 || key === 13) {\r\n                            event.preventDefault();\r\n                            this.blur();\r\n                        }\r\n                    },\r\n                    \"click\": function(e) {\r\n                        e.stopImmediatePropagation();\r\n                    },\r\n                    \"mousedown\": function(e) {\r\n                        e.stopImmediatePropagation();\r\n                    },\r\n                    \"keyup\": function(event) {\r\n                        h2.width(Math.min(h1.text(\"pW\" + this.value).width(), w));\r\n                    },\r\n                    \"keypress\": function(event) {\r\n                        if (event.which === 13) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                }),\r\n                fn = {\r\n                    fontFamily: element.css('fontFamily') || '',\r\n                    fontSize: element.css('fontSize') || '',\r\n                    fontWeight: element.css('fontWeight') || '',\r\n                    fontStyle: element.css('fontStyle') || '',\r\n                    fontStretch: element.css('fontStretch') || '',\r\n                    fontVariant: element.css('fontVariant') || '',\r\n                    letterSpacing: element.css('letterSpacing') || '',\r\n                    wordSpacing: element.css('wordSpacing') || ''\r\n                };\r\n            element.hide();\r\n            element.parent().append(h2);\r\n            h2.css(fn).width(Math.min(h1.text(\"pW\" + h2[0].value).width(), w))[0].select();\r\n        };\r\n\r\n        this.grid_hide_column = function(col) {\r\n            this.midWrapper.find(\".jstree-grid-column-\" + col).hide();\r\n        };\r\n        this.grid_show_column = function(col) {\r\n            this.midWrapper.find(\".jstree-grid-column-\" + col).show();\r\n        };\r\n\r\n        this._prepare_grid = function(obj) {\r\n            var gs = this._gridSettings,\r\n                c = gs.treeClass,\r\n                _this = this,\r\n                t,\r\n                cols = gs.columns || [],\r\n                width, tr = gs.isThemeroller,\r\n                uniq = this.uniq,\r\n                treecol = gs.treecol,\r\n                tree = this.element,\r\n                rootid = this.rootid,\r\n                classAdd = (tr ? \"themeroller\" : \"regular\"),\r\n                img, objData = this.get_node(obj),\r\n                defaultWidth = gs.columnWidth,\r\n                conf = gs.defaultConf,\r\n                cellClickHandler = function(tree, node, val, col, t) {\r\n                    return function(e) {\r\n                        //node = tree.find(\"#\"+node.attr(\"id\"));\r\n                        var event = eventer.create(\"select_cell.jstree-grid\");\r\n                        tree.trigger(event, [{\r\n                            value: val,\r\n                            column: col.header,\r\n                            node: node,\r\n                            grid: $(this),\r\n                            sourceName: col.value\r\n                        }]);\r\n                        if (!event.isDefaultPrevented()) {\r\n                            node.children(\".jstree-anchor\").trigger(\"click.jstree\", e);\r\n                        }\r\n                    };\r\n                },\r\n                cellRightClickHandler = function(tree, node, val, col, t) {\r\n                    return function(e) {\r\n                        if (gs.gridcontextmenu) {\r\n                            e.preventDefault();\r\n                            menu.popup(this, {\r\n                                'x': e.pageX,\r\n                                'y': e.pageY\r\n                            }, gs.gridcontextmenu(_this, tree, node, val, col, t, e.target));\r\n                        }\r\n                    };\r\n                },\r\n                hoverInHandler = function(node, jsTreeInstance) {\r\n                    return function() {\r\n                        jsTreeInstance.hover_node(node);\r\n                    };\r\n                },\r\n                hoverOutHandler = function(node, jsTreeInstance) {\r\n                    return function() {\r\n                        jsTreeInstance.dehover_node(node);\r\n                    };\r\n                },\r\n                i, val, cl, wcl, ccl, a, last, valClass, wideValClass, span, paddingleft, title, gridCellName, gridCellParentId, gridCellParent,\r\n                gridCellPrev, gridCellPrevId, gridCellNext, gridCellNextId, gridCellChild, gridCellChildId,\r\n                col, content, tmpWidth, mw = this.midWrapper,\r\n                column, lid = objData.id,\r\n                highlightSearch, isClicked,\r\n                peers = this.get_node(objData.parent).children,\r\n                // find my position in the list of peers. \"peers\" is the list of everyone at my level under my parent, in order\r\n                pos = $.inArray(lid, peers),\r\n                hc = this.holdingCells,\r\n                rendered = false,\r\n                closed;\r\n            // get our column definition\r\n            t = $(obj);\r\n\r\n            // find the a children\r\n            a = t.children(\"[class~='jstree-anchor']\");\r\n            highlightSearch = a.hasClass(SEARCHCLASS);\r\n            isClicked = a.hasClass(\"jstree-clicked\");\r\n\r\n            if (a.length === 1) {\r\n                closed = !objData.state.opened;\r\n                gridCellName = generateCellId(uniq, lid);\r\n                gridCellParentId = objData.parent === \"#\" ? null : objData.parent;\r\n                a.addClass(c);\r\n                //renderAWidth(a,_this);\r\n                renderATitle(a, t, _this);\r\n                last = a;\r\n\r\n                // calculate position ids once\r\n                gridCellPrevId = pos <= 0 ? objData.parent : findLastClosedNode(this, peers[pos - 1]);\r\n                gridCellNextId = pos >= peers.length - 1 ? \"NULL\" : peers[pos + 1];\r\n                gridCellChildId = objData.children && objData.children.length > 0 ? objData.children[0] : \"NULL\";\r\n\r\n                // find which column our tree shuld go in\r\n                var s = this.settings.grid;\r\n                for (var i = 0, len = cols.length; i < len; i++) {\r\n                    if (treecol === i) {\r\n                        continue;\r\n                    }\r\n                    col = cols[i];\r\n                    column = this._domManipulation == null ? mw.children(\"div:eq(\" + i + \")\") : $(this._domManipulation.columns[i]); //Geht the detached column not mw.children(\"div:eq(\"+i+\")\");\r\n                    // get the cellClass, the wideCellClass, and the columnClass\r\n                    cl = col.cellClass || \"\";\r\n                    wcl = col.wideCellClass || \"\";\r\n                    ccl = col.columnClass || \"\";\r\n\r\n                    // add a column class to the Column\r\n                    column.addClass(ccl);\r\n\r\n\r\n                    // get the contents of the cell - value could be a string or a function\r\n                    val = getCellData(col.value, objData);\r\n\r\n                    if (typeof(col.format) === \"function\") {\r\n                        val = col.format(val);\r\n                    }\r\n\r\n                    // put images instead of text if needed\r\n                    if (col.images) {\r\n                        img = col.images[val] || col.images[\"default\"];\r\n                        if (img) {\r\n                            content = img[0] === \"*\" ? '<span class=\"' + img.substr(1) + '\"></span>' : '<img src=\"' + img + '\">';\r\n                        }\r\n                    } else {\r\n                        content = val;\r\n                    }\r\n\r\n                    // content cannot be blank, or it messes up heights\r\n                    if (content === undefined || content === null || BLANKRE.test(content)) {\r\n                        content = \"&nbsp;\";\r\n                    }\r\n\r\n                    // get the valueClass\r\n                    valClass = col.valueClass && objData.data !== null && objData.data !== undefined ? objData.data[col.valueClass] || \"\" : \"\";\r\n                    if (valClass && col.valueClassPrefix && col.valueClassPrefix !== \"\") {\r\n                        valClass = col.valueClassPrefix + valClass;\r\n                    }\r\n                    // get the wideValueClass\r\n                    wideValClass = col.wideValueClass && objData.data !== null && objData.data !== undefined ? objData.data[col.wideValueClass] || \"\" : \"\";\r\n                    if (wideValClass && col.wideValueClassPrefix && col.wideValueClassPrefix !== \"\") {\r\n                        wideValClass = col.wideValueClassPrefix + wideValClass;\r\n                    }\r\n                    // get the title\r\n                    title = col.title && objData.data !== null && objData.data !== undefined ? objData.data[col.title] || \"\" : \"\";\r\n                    // strip out HTML\r\n                    title = title.replace(htmlstripre, '');\r\n\r\n                    // get the width\r\n                    paddingleft = 7;\r\n                    width = col.width || defaultWidth;\r\n                    if (width !== 'auto') {\r\n                        width = tmpWidth || (width - paddingleft);\r\n                    }\r\n\r\n                    last = findDataCell(uniq, lid, i, column);\r\n                    if (!last || last.length < 1) {\r\n                        last = $(\"<div></div>\");\r\n                        $(\"<span></span>\").appendTo(last);\r\n                        last.attr(\"id\", gridCellName + i);\r\n                        last.addClass(gridCellName);\r\n                        last.attr(NODE_DATA_ATTR, lid);\r\n                        if (highlightSearch) {\r\n                            last.addClass(SEARCHCLASS);\r\n                        } else {\r\n                            last.removeClass(SEARCHCLASS);\r\n                        }\r\n                        if (isClicked) {\r\n                            last.addClass(\"jstree-clicked\");\r\n                        } else {\r\n                            last.removeClass(\"jstree-clicked\");\r\n                        }\r\n                        if (this.settings.core.themes.ellipsis === true && i !== treecol) {\r\n                            last.addClass('jstree-grid-ellipsis');\r\n                        }\r\n\r\n                    }\r\n\r\n                    // we need to check the hidden-state and see if we need to hide the node\r\n                    if (objData.state.hidden) {\r\n                        last.addClass(\"jstree-grid-hidden\");\r\n                    } else {\r\n                        last.removeClass(\"jstree-grid-hidden\");\r\n                    }\r\n\r\n                    // we need to put it in the dataCell - after the parent, but the position matters\r\n                    // if we have no parent, then we are one of the root nodes, but still need to look at peers\r\n\r\n\r\n                    // if we are first, i.e. pos === 0, we go right after the parent;\r\n                    // if we are not first, and our previous peer (one before us) is closed, we go right after the previous peer cell\r\n                    // if we are not first, and our previous peer is opened, then we have to find its youngest & lowest closed child (incl. leaf)\r\n                    //\r\n                    // probably be much easier to go *before* our next one\r\n                    // but that one might not be drawn yet\r\n                    // here is the logic for jstree drawing:\r\n                    //   it draws peers from first to last or from last to first\r\n                    //   it draws children before a parent\r\n                    //\r\n                    // so I can rely on my *parent* not being drawn, but I cannot rely on my previous peer or my next peer being drawn\r\n\r\n                    // so we do the following:\r\n                    //   1- We are the first child: install after the parent\r\n                    //   2- Our previous peer is already drawn: install after the previous peer\r\n                    //   3- Our previous peer is not drawn, we have a child that is drawn: install right before our first child\r\n                    //   4- Our previous peer is not drawn, we have no child that is drawn, our next peer is drawn: install right before our next peer\r\n                    //   5- Our previous peer is not drawn, we have no child that is drawn, our next peer is not drawn: install right after parent\r\n                    gridCellPrev = findDataCell(uniq, gridCellPrevId, i, column);\r\n                    gridCellNext = findDataCell(uniq, gridCellNextId, i, column);\r\n                    gridCellChild = findDataCell(uniq, gridCellChildId, i, column);\r\n                    gridCellParent = findDataCell(uniq, gridCellParentId, i, column);\r\n\r\n\r\n                    // if our parent is already drawn, then we put this in the right order under our parent\r\n                    if (gridCellParentId) {\r\n                        if (gridCellParent && gridCellParent.length > 0) {\r\n                            if (gridCellPrev && gridCellPrev.length > 0) {\r\n                                last.insertAfter(gridCellPrev);\r\n                            } else if (gridCellChild && gridCellChild.length > 0) {\r\n                                last.insertBefore(gridCellChild);\r\n                            } else if (gridCellNext && gridCellNext.length > 0) {\r\n                                last.insertBefore(gridCellNext);\r\n                            } else {\r\n                                last.insertAfter(gridCellParent);\r\n                            }\r\n                            rendered = true;\r\n                        } else {\r\n                            rendered = false;\r\n                        }\r\n                        // always put it in the holding cells, and then sort when the parent comes in, in case parent is (re)drawn later\r\n                        hc[gridCellName + i] = last;\r\n                    } else {\r\n                        if (gridCellPrev && gridCellPrev.length > 0) {\r\n                            last.insertAfter(gridCellPrev);\r\n                        } else if (gridCellChild && gridCellChild.length > 0) {\r\n                            last.insertBefore(gridCellChild);\r\n                        } else if (gridCellNext && gridCellNext.length > 0) {\r\n                            last.insertBefore(gridCellNext);\r\n                        } else {\r\n                            last.appendTo(column);\r\n                        }\r\n                        rendered = true;\r\n                    }\r\n                    // do we have any children waiting for this cell? walk down through the children/grandchildren/etc tree\r\n                    if (rendered) {\r\n                        var toRen = this.getHoldingCells(objData, i, hc);\r\n                        last.after(toRen);\r\n                    }\r\n                    // need to make the height of this match the line height of the tree. How?\r\n                    span = last.children(\"span\");\r\n\r\n                    // create a span inside the div, so we can control what happens in the whole div versus inside just the text/background\r\n                    span.addClass(cl + \" \" + valClass).html(content);\r\n                    last = last.css(conf).addClass(\"jstree-grid-cell jstree-grid-cell-regular jstree-grid-cell-root-\" + rootid + \" jstree-grid-cell-\" + classAdd + \" \" + wcl + \" \" + wideValClass + (tr ? \" ui-state-default\" : \"\")).addClass(\"jstree-grid-col-\" + i).addClass(\"jstree-animated\");\r\n                    // add click handler for clicking inside a grid cell\r\n                    last.click(cellClickHandler(tree, t, val, col, this));\r\n                    last.on(\"contextmenu\", cellRightClickHandler(tree, t, val, col, this));\r\n                    last.hover(hoverInHandler(t, this), hoverOutHandler(t, this));\r\n\r\n                    if (title) {\r\n                        span.attr(\"title\", title);\r\n                    }\r\n\r\n                    tree.trigger(\"render_cell.jstree-grid\", [{\r\n                        value: val,\r\n                        column: col.header,\r\n                        node: t,\r\n                        sourceName: col.value\r\n                    }]);\r\n                }\r\n                last.addClass(\"jstree-grid-cell-last\" + (tr ? \" ui-state-default\" : \"\"));\r\n                // if there is no width given for the last column, do it via automatic\r\n                if (cols[cols.length - 1].width === undefined) {\r\n                    last.addClass(\"jstree-grid-width-auto\").next(\".jstree-grid-separator\").remove();\r\n                }\r\n            }\r\n            this.element.css({\r\n                'overflow-y': 'auto !important'\r\n            });\r\n        };\r\n        // clean up holding cells\r\n        this.holdingCells = {};\r\n\r\n        // need to do alternating background colors or borders\r\n    };\r\n\r\n    return $;\r\n});\ndefine('skylark-widgets-hierarchy/addons/types',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"../Hierarchy\"\r\n],function(langx,browser,eventer,noder,geom,$,jstree){\r\n\t\"use strict\";\r\n\r\n\tif($.jstree.plugins.types) { return; }\r\n\r\n\t/**\r\n\t * An object storing all types as key value pairs, where the key is the type name and the value is an object that could contain following keys (all optional).\r\n\t *\r\n\t * * `max_children` the maximum number of immediate children this node type can have. Do not specify or set to `-1` for unlimited.\r\n\t * * `max_depth` the maximum number of nesting this node type can have. A value of `1` would mean that the node can have children, but no grandchildren. Do not specify or set to `-1` for unlimited.\r\n\t * * `valid_children` an array of node type strings, that nodes of this type can have as children. Do not specify or set to `-1` for no limits.\r\n\t * * `icon` a string - can be a path to an icon or a className, if using an image that is in the current directory use a `./` prefix, otherwise it will be detected as a class. Omit to use the default icon from your theme.\r\n\t * * `li_attr` an object of values which will be used to add HTML attributes on the resulting LI DOM node (merged with the node's own data)\r\n\t * * `a_attr` an object of values which will be used to add HTML attributes on the resulting A DOM node (merged with the node's own data)\r\n\t *\r\n\t * There are two predefined types:\r\n\t *\r\n\t * * `#` represents the root of the tree, for example `max_children` would control the maximum number of root nodes.\r\n\t * * `default` represents the default node - any settings here will be applied to all nodes that do not have a type specified.\r\n\t *\r\n\t * @name $.jstree.defaults.types\r\n\t * @plugin types\r\n\t */\r\n\t$.jstree.defaults.types = {\r\n\t\t'default' : {}\r\n\t};\r\n\t$.jstree.defaults.types[$.jstree.root] = {};\r\n\r\n\t$.jstree.plugins.types = function (options, parent) {\r\n\t\tthis.init = function (el, options) {\r\n\t\t\tvar i, j;\r\n\t\t\tif(options && options.types && options.types['default']) {\r\n\t\t\t\tfor(i in options.types) {\r\n\t\t\t\t\tif(i !== \"default\" && i !== $.jstree.root && options.types.hasOwnProperty(i)) {\r\n\t\t\t\t\t\tfor(j in options.types['default']) {\r\n\t\t\t\t\t\t\tif(options.types['default'].hasOwnProperty(j) && options.types[i][j] === undefined) {\r\n\t\t\t\t\t\t\t\toptions.types[i][j] = options.types['default'][j];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tparent.init.call(this, el, options);\r\n\t\t\tthis._model.data[$.jstree.root].type = $.jstree.root;\r\n\t\t};\r\n\t\tthis.refresh = function (skip_loading, forget_state) {\r\n\t\t\tparent.refresh.call(this, skip_loading, forget_state);\r\n\t\t\tthis._model.data[$.jstree.root].type = $.jstree.root;\r\n\t\t};\r\n\t\tthis.bind = function () {\r\n\t\t\tthis.element\r\n\t\t\t\t.on('model.jstree', $.proxy(function (e, data) {\r\n\t\t\t\t\t\tvar m = this._model.data,\r\n\t\t\t\t\t\t\tdpc = data.nodes,\r\n\t\t\t\t\t\t\tt = this.settings.types,\r\n\t\t\t\t\t\t\ti, j, c = 'default', k;\r\n\t\t\t\t\t\tfor(i = 0, j = dpc.length; i < j; i++) {\r\n\t\t\t\t\t\t\tc = 'default';\r\n\t\t\t\t\t\t\tif(m[dpc[i]].original && m[dpc[i]].original.type && t[m[dpc[i]].original.type]) {\r\n\t\t\t\t\t\t\t\tc = m[dpc[i]].original.type;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(m[dpc[i]].data && m[dpc[i]].data.jstree && m[dpc[i]].data.jstree.type && t[m[dpc[i]].data.jstree.type]) {\r\n\t\t\t\t\t\t\t\tc = m[dpc[i]].data.jstree.type;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tm[dpc[i]].type = c;\r\n\t\t\t\t\t\t\tif(m[dpc[i]].icon === true && t[c].icon !== undefined) {\r\n\t\t\t\t\t\t\t\tm[dpc[i]].icon = t[c].icon;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(t[c].li_attr !== undefined && typeof t[c].li_attr === 'object') {\r\n\t\t\t\t\t\t\t\tfor (k in t[c].li_attr) {\r\n\t\t\t\t\t\t\t\t\tif (t[c].li_attr.hasOwnProperty(k)) {\r\n\t\t\t\t\t\t\t\t\t\tif (k === 'id') {\r\n\t\t\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\telse if (m[dpc[i]].li_attr[k] === undefined) {\r\n\t\t\t\t\t\t\t\t\t\t\tm[dpc[i]].li_attr[k] = t[c].li_attr[k];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\telse if (k === 'class') {\r\n\t\t\t\t\t\t\t\t\t\t\tm[dpc[i]].li_attr['class'] = t[c].li_attr['class'] + ' ' + m[dpc[i]].li_attr['class'];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(t[c].a_attr !== undefined && typeof t[c].a_attr === 'object') {\r\n\t\t\t\t\t\t\t\tfor (k in t[c].a_attr) {\r\n\t\t\t\t\t\t\t\t\tif (t[c].a_attr.hasOwnProperty(k)) {\r\n\t\t\t\t\t\t\t\t\t\tif (k === 'id') {\r\n\t\t\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\telse if (m[dpc[i]].a_attr[k] === undefined) {\r\n\t\t\t\t\t\t\t\t\t\t\tm[dpc[i]].a_attr[k] = t[c].a_attr[k];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\telse if (k === 'href' && m[dpc[i]].a_attr[k] === '#') {\r\n\t\t\t\t\t\t\t\t\t\t\tm[dpc[i]].a_attr['href'] = t[c].a_attr['href'];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\telse if (k === 'class') {\r\n\t\t\t\t\t\t\t\t\t\t\tm[dpc[i]].a_attr['class'] = t[c].a_attr['class'] + ' ' + m[dpc[i]].a_attr['class'];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tm[$.jstree.root].type = $.jstree.root;\r\n\t\t\t\t\t}, this));\r\n\t\t\tparent.bind.call(this);\r\n\t\t};\r\n\t\tthis.get_json = function (obj, options, flat) {\r\n\t\t\tvar i, j,\r\n\t\t\t\tm = this._model.data,\r\n\t\t\t\topt = options ? $.extend(true, {}, options, {no_id:false}) : {},\r\n\t\t\t\ttmp = parent.get_json.call(this, obj, opt, flat);\r\n\t\t\tif(tmp === false) { return false; }\r\n\t\t\tif($.isArray(tmp)) {\r\n\t\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\r\n\t\t\t\t\ttmp[i].type = tmp[i].id && m[tmp[i].id] && m[tmp[i].id].type ? m[tmp[i].id].type : \"default\";\r\n\t\t\t\t\tif(options && options.no_id) {\r\n\t\t\t\t\t\tdelete tmp[i].id;\r\n\t\t\t\t\t\tif(tmp[i].li_attr && tmp[i].li_attr.id) {\r\n\t\t\t\t\t\t\tdelete tmp[i].li_attr.id;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(tmp[i].a_attr && tmp[i].a_attr.id) {\r\n\t\t\t\t\t\t\tdelete tmp[i].a_attr.id;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttmp.type = tmp.id && m[tmp.id] && m[tmp.id].type ? m[tmp.id].type : \"default\";\r\n\t\t\t\tif(options && options.no_id) {\r\n\t\t\t\t\ttmp = this._delete_ids(tmp);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn tmp;\r\n\t\t};\r\n\t\tthis._delete_ids = function (tmp) {\r\n\t\t\tif($.isArray(tmp)) {\r\n\t\t\t\tfor(var i = 0, j = tmp.length; i < j; i++) {\r\n\t\t\t\t\ttmp[i] = this._delete_ids(tmp[i]);\r\n\t\t\t\t}\r\n\t\t\t\treturn tmp;\r\n\t\t\t}\r\n\t\t\tdelete tmp.id;\r\n\t\t\tif(tmp.li_attr && tmp.li_attr.id) {\r\n\t\t\t\tdelete tmp.li_attr.id;\r\n\t\t\t}\r\n\t\t\tif(tmp.a_attr && tmp.a_attr.id) {\r\n\t\t\t\tdelete tmp.a_attr.id;\r\n\t\t\t}\r\n\t\t\tif(tmp.children && $.isArray(tmp.children)) {\r\n\t\t\t\ttmp.children = this._delete_ids(tmp.children);\r\n\t\t\t}\r\n\t\t\treturn tmp;\r\n\t\t};\r\n\t\tthis.check = function (chk, obj, par, pos, more) {\r\n\t\t\tif(parent.check.call(this, chk, obj, par, pos, more) === false) { return false; }\r\n\t\t\tobj = obj && obj.id ? obj : this.get_node(obj);\r\n\t\t\tpar = par && par.id ? par : this.get_node(par);\r\n\t\t\tvar m = obj && obj.id ? (more && more.origin ? more.origin : $.jstree.reference(obj.id)) : null, tmp, d, i, j;\r\n\t\t\tm = m && m._model && m._model.data ? m._model.data : null;\r\n\t\t\tswitch(chk) {\r\n\t\t\t\tcase \"create_node\":\r\n\t\t\t\tcase \"move_node\":\r\n\t\t\t\tcase \"copy_node\":\r\n\t\t\t\t\tif(chk !== 'move_node' || $.inArray(obj.id, par.children) === -1) {\r\n\t\t\t\t\t\ttmp = this.get_rules(par);\r\n\t\t\t\t\t\tif(tmp.max_children !== undefined && tmp.max_children !== -1 && tmp.max_children === par.children.length) {\r\n\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'types', 'id' : 'types_01', 'reason' : 'max_children prevents function: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(tmp.valid_children !== undefined && tmp.valid_children !== -1 && $.inArray((obj.type || 'default'), tmp.valid_children) === -1) {\r\n\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'types', 'id' : 'types_02', 'reason' : 'valid_children prevents function: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(m && obj.children_d && obj.parents) {\r\n\t\t\t\t\t\t\td = 0;\r\n\t\t\t\t\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\td = Math.max(d, m[obj.children_d[i]].parents.length);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\td = d - obj.parents.length + 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(d <= 0 || d === undefined) { d = 1; }\r\n\t\t\t\t\t\tdo {\r\n\t\t\t\t\t\t\tif(tmp.max_depth !== undefined && tmp.max_depth !== -1 && tmp.max_depth < d) {\r\n\t\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'types', 'id' : 'types_03', 'reason' : 'max_depth prevents function: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\r\n\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tpar = this.get_node(par.parent);\r\n\t\t\t\t\t\t\ttmp = this.get_rules(par);\r\n\t\t\t\t\t\t\td++;\r\n\t\t\t\t\t\t} while(par);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t};\r\n\t\t/**\r\n\t\t * used to retrieve the type settings object for a node\r\n\t\t * @name get_rules(obj)\r\n\t\t * @param {mixed} obj the node to find the rules for\r\n\t\t * @return {Object}\r\n\t\t * @plugin types\r\n\t\t */\r\n\t\tthis.get_rules = function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj) { return false; }\r\n\t\t\tvar tmp = this.get_type(obj, true);\r\n\t\t\tif(tmp.max_depth === undefined) { tmp.max_depth = -1; }\r\n\t\t\tif(tmp.max_children === undefined) { tmp.max_children = -1; }\r\n\t\t\tif(tmp.valid_children === undefined) { tmp.valid_children = -1; }\r\n\t\t\treturn tmp;\r\n\t\t};\r\n\t\t/**\r\n\t\t * used to retrieve the type string or settings object for a node\r\n\t\t * @name get_type(obj [, rules])\r\n\t\t * @param {mixed} obj the node to find the rules for\r\n\t\t * @param {Boolean} rules if set to `true` instead of a string the settings object will be returned\r\n\t\t * @return {String|Object}\r\n\t\t * @plugin types\r\n\t\t */\r\n\t\tthis.get_type = function (obj, rules) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\treturn (!obj) ? false : ( rules ? $.extend({ 'type' : obj.type }, this.settings.types[obj.type]) : obj.type);\r\n\t\t};\r\n\t\t/**\r\n\t\t * used to change a node's type\r\n\t\t * @name set_type(obj, type)\r\n\t\t * @param {mixed} obj the node to change\r\n\t\t * @param {String} type the new type\r\n\t\t * @plugin types\r\n\t\t */\r\n\t\tthis.set_type = function (obj, type) {\r\n\t\t\tvar m = this._model.data, t, t1, t2, old_type, old_icon, k, d, a;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.set_type(obj[t1], type);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tt = this.settings.types;\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!t[type] || !obj) { return false; }\r\n\t\t\td = this.get_node(obj, true);\r\n\t\t\tif (d && d.length) {\r\n\t\t\t\ta = d.children('.jstree-anchor');\r\n\t\t\t}\r\n\t\t\told_type = obj.type;\r\n\t\t\told_icon = this.get_icon(obj);\r\n\t\t\tobj.type = type;\r\n\t\t\tif(old_icon === true || !t[old_type] || (t[old_type].icon !== undefined && old_icon === t[old_type].icon)) {\r\n\t\t\t\tthis.set_icon(obj, t[type].icon !== undefined ? t[type].icon : true);\r\n\t\t\t}\r\n\r\n\t\t\t// remove old type props\r\n\t\t\tif(t[old_type] && t[old_type].li_attr !== undefined && typeof t[old_type].li_attr === 'object') {\r\n\t\t\t\tfor (k in t[old_type].li_attr) {\r\n\t\t\t\t\tif (t[old_type].li_attr.hasOwnProperty(k)) {\r\n\t\t\t\t\t\tif (k === 'id') {\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (k === 'class') {\r\n\t\t\t\t\t\t\tm[obj.id].li_attr['class'] = (m[obj.id].li_attr['class'] || '').replace(t[old_type].li_attr[k], '');\r\n\t\t\t\t\t\t\tif (d) { d.removeClass(t[old_type].li_attr[k]); }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (m[obj.id].li_attr[k] === t[old_type].li_attr[k]) {\r\n\t\t\t\t\t\t\tm[obj.id].li_attr[k] = null;\r\n\t\t\t\t\t\t\tif (d) { d.removeAttr(k); }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(t[old_type] && t[old_type].a_attr !== undefined && typeof t[old_type].a_attr === 'object') {\r\n\t\t\t\tfor (k in t[old_type].a_attr) {\r\n\t\t\t\t\tif (t[old_type].a_attr.hasOwnProperty(k)) {\r\n\t\t\t\t\t\tif (k === 'id') {\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (k === 'class') {\r\n\t\t\t\t\t\t\tm[obj.id].a_attr['class'] = (m[obj.id].a_attr['class'] || '').replace(t[old_type].a_attr[k], '');\r\n\t\t\t\t\t\t\tif (a) { a.removeClass(t[old_type].a_attr[k]); }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (m[obj.id].a_attr[k] === t[old_type].a_attr[k]) {\r\n\t\t\t\t\t\t\tif (k === 'href') {\r\n\t\t\t\t\t\t\t\tm[obj.id].a_attr[k] = '#';\r\n\t\t\t\t\t\t\t\tif (a) { a.attr('href', '#'); }\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tdelete m[obj.id].a_attr[k];\r\n\t\t\t\t\t\t\t\tif (a) { a.removeAttr(k); }\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// add new props\r\n\t\t\tif(t[type].li_attr !== undefined && typeof t[type].li_attr === 'object') {\r\n\t\t\t\tfor (k in t[type].li_attr) {\r\n\t\t\t\t\tif (t[type].li_attr.hasOwnProperty(k)) {\r\n\t\t\t\t\t\tif (k === 'id') {\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (m[obj.id].li_attr[k] === undefined) {\r\n\t\t\t\t\t\t\tm[obj.id].li_attr[k] = t[type].li_attr[k];\r\n\t\t\t\t\t\t\tif (d) {\r\n\t\t\t\t\t\t\t\tif (k === 'class') {\r\n\t\t\t\t\t\t\t\t\td.addClass(t[type].li_attr[k]);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\td.attr(k, t[type].li_attr[k]);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (k === 'class') {\r\n\t\t\t\t\t\t\tm[obj.id].li_attr['class'] = t[type].li_attr[k] + ' ' + m[obj.id].li_attr['class'];\r\n\t\t\t\t\t\t\tif (d) { d.addClass(t[type].li_attr[k]); }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(t[type].a_attr !== undefined && typeof t[type].a_attr === 'object') {\r\n\t\t\t\tfor (k in t[type].a_attr) {\r\n\t\t\t\t\tif (t[type].a_attr.hasOwnProperty(k)) {\r\n\t\t\t\t\t\tif (k === 'id') {\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (m[obj.id].a_attr[k] === undefined) {\r\n\t\t\t\t\t\t\tm[obj.id].a_attr[k] = t[type].a_attr[k];\r\n\t\t\t\t\t\t\tif (a) {\r\n\t\t\t\t\t\t\t\tif (k === 'class') {\r\n\t\t\t\t\t\t\t\t\ta.addClass(t[type].a_attr[k]);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\ta.attr(k, t[type].a_attr[k]);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (k === 'href' && m[obj.id].a_attr[k] === '#') {\r\n\t\t\t\t\t\t\tm[obj.id].a_attr['href'] = t[type].a_attr['href'];\r\n\t\t\t\t\t\t\tif (a) { a.attr('href', t[type].a_attr['href']); }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (k === 'class') {\r\n\t\t\t\t\t\t\tm[obj.id].a_attr['class'] = t[type].a_attr['class'] + ' ' + m[obj.id].a_attr['class'];\r\n\t\t\t\t\t\t\tif (a) { a.addClass(t[type].a_attr[k]); }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t};\r\n\t};\r\n\t// include the types plugin by default\r\n\t// $.jstree.defaults.plugins.push(\"types\");\r\n\treturn $;\r\n\t\r\n});\r\n\ndefine('skylark-widgets-hierarchy/addons/unique',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"../Hierarchy\"\r\n],function(langx,browser,eventer,noder,geom,$,jstree){\r\n\t\"use strict\";\r\n\r\n\tif($.jstree.plugins.unique) { return; }\r\n\r\n\t/**\r\n\t * stores all defaults for the unique plugin\r\n\t * @name $.jstree.defaults.unique\r\n\t * @plugin unique\r\n\t */\r\n\t$.jstree.defaults.unique = {\r\n\t\t/**\r\n\t\t * Indicates if the comparison should be case sensitive. Default is `false`.\r\n\t\t * @name $.jstree.defaults.unique.case_sensitive\r\n\t\t * @plugin unique\r\n\t\t */\r\n\t\tcase_sensitive : false,\r\n\t\t/**\r\n\t\t * Indicates if white space should be trimmed before the comparison. Default is `false`.\r\n\t\t * @name $.jstree.defaults.unique.trim_whitespace\r\n\t\t * @plugin unique\r\n\t\t */\r\n\t\ttrim_whitespace : false,\r\n\t\t/**\r\n\t\t * A callback executed in the instance's scope when a new node is created and the name is already taken, the two arguments are the conflicting name and the counter. The default will produce results like `New node (2)`.\r\n\t\t * @name $.jstree.defaults.unique.duplicate\r\n\t\t * @plugin unique\r\n\t\t */\r\n\t\tduplicate : function (name, counter) {\r\n\t\t\treturn name + ' (' + counter + ')';\r\n\t\t}\r\n\t};\r\n\r\n\t$.jstree.plugins.unique = function (options, parent) {\r\n\t\tthis.check = function (chk, obj, par, pos, more) {\r\n\t\t\tif(parent.check.call(this, chk, obj, par, pos, more) === false) { return false; }\r\n\t\t\tobj = obj && obj.id ? obj : this.get_node(obj);\r\n\t\t\tpar = par && par.id ? par : this.get_node(par);\r\n\t\t\tif(!par || !par.children) { return true; }\r\n\t\t\tvar n = chk === \"rename_node\" ? pos : obj.text,\r\n\t\t\t\tc = [],\r\n\t\t\t\ts = this.settings.unique.case_sensitive,\r\n\t\t\t\tw = this.settings.unique.trim_whitespace,\r\n\t\t\t\tm = this._model.data, i, j, t;\r\n\t\t\tfor(i = 0, j = par.children.length; i < j; i++) {\r\n\t\t\t\tt = m[par.children[i]].text;\r\n\t\t\t\tif (!s) {\r\n\t\t\t\t\tt = t.toLowerCase();\r\n\t\t\t\t}\r\n\t\t\t\tif (w) {\r\n\t\t\t\t\tt = t.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\r\n\t\t\t\t}\r\n\t\t\t\tc.push(t);\r\n\t\t\t}\r\n\t\t\tif(!s) { n = n.toLowerCase(); }\r\n\t\t\tif (w) { n = n.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, ''); }\r\n\t\t\tswitch(chk) {\r\n\t\t\t\tcase \"delete_node\":\r\n\t\t\t\t\treturn true;\r\n\t\t\t\tcase \"rename_node\":\r\n\t\t\t\t\tt = obj.text || '';\r\n\t\t\t\t\tif (!s) {\r\n\t\t\t\t\t\tt = t.toLowerCase();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (w) {\r\n\t\t\t\t\t\tt = t.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\r\n\t\t\t\t\t}\r\n\t\t\t\t\ti = ($.inArray(n, c) === -1 || (obj.text && t === n));\r\n\t\t\t\t\tif(!i) {\r\n\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'unique', 'id' : 'unique_01', 'reason' : 'Child with name ' + n + ' already exists. Preventing: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn i;\r\n\t\t\t\tcase \"create_node\":\r\n\t\t\t\t\ti = ($.inArray(n, c) === -1);\r\n\t\t\t\t\tif(!i) {\r\n\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'unique', 'id' : 'unique_04', 'reason' : 'Child with name ' + n + ' already exists. Preventing: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn i;\r\n\t\t\t\tcase \"copy_node\":\r\n\t\t\t\t\ti = ($.inArray(n, c) === -1);\r\n\t\t\t\t\tif(!i) {\r\n\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'unique', 'id' : 'unique_02', 'reason' : 'Child with name ' + n + ' already exists. Preventing: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn i;\r\n\t\t\t\tcase \"move_node\":\r\n\t\t\t\t\ti = ( (obj.parent === par.id && (!more || !more.is_multi)) || $.inArray(n, c) === -1);\r\n\t\t\t\t\tif(!i) {\r\n\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'unique', 'id' : 'unique_03', 'reason' : 'Child with name ' + n + ' already exists. Preventing: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn i;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t};\r\n\t\tthis.create_node = function (par, node, pos, callback, is_loaded) {\r\n\t\t\tif(!node || node.text === undefined) {\r\n\t\t\t\tif(par === null) {\r\n\t\t\t\t\tpar = $.jstree.root;\r\n\t\t\t\t}\r\n\t\t\t\tpar = this.get_node(par);\r\n\t\t\t\tif(!par) {\r\n\t\t\t\t\treturn parent.create_node.call(this, par, node, pos, callback, is_loaded);\r\n\t\t\t\t}\r\n\t\t\t\tpos = pos === undefined ? \"last\" : pos;\r\n\t\t\t\tif(!pos.toString().match(/^(before|after)$/) && !is_loaded && !this.is_loaded(par)) {\r\n\t\t\t\t\treturn parent.create_node.call(this, par, node, pos, callback, is_loaded);\r\n\t\t\t\t}\r\n\t\t\t\tif(!node) { node = {}; }\r\n\t\t\t\tvar tmp, n, dpc, i, j, m = this._model.data, s = this.settings.unique.case_sensitive, w = this.settings.unique.trim_whitespace, cb = this.settings.unique.duplicate, t;\r\n\t\t\t\tn = tmp = this.get_string('New node');\r\n\t\t\t\tdpc = [];\r\n\t\t\t\tfor(i = 0, j = par.children.length; i < j; i++) {\r\n\t\t\t\t\tt = m[par.children[i]].text;\r\n\t\t\t\t\tif (!s) {\r\n\t\t\t\t\t\tt = t.toLowerCase();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (w) {\r\n\t\t\t\t\t\tt = t.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdpc.push(t);\r\n\t\t\t\t}\r\n\t\t\t\ti = 1;\r\n\t\t\t\tt = n;\r\n\t\t\t\tif (!s) {\r\n\t\t\t\t\tt = t.toLowerCase();\r\n\t\t\t\t}\r\n\t\t\t\tif (w) {\r\n\t\t\t\t\tt = t.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\r\n\t\t\t\t}\r\n\t\t\t\twhile($.inArray(t, dpc) !== -1) {\r\n\t\t\t\t\tn = cb.call(this, tmp, (++i)).toString();\r\n\t\t\t\t\tt = n;\r\n\t\t\t\t\tif (!s) {\r\n\t\t\t\t\t\tt = t.toLowerCase();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (w) {\r\n\t\t\t\t\t\tt = t.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tnode.text = n;\r\n\t\t\t}\r\n\t\t\treturn parent.create_node.call(this, par, node, pos, callback, is_loaded);\r\n\t\t};\r\n\t};\r\n\r\n\t// include the unique plugin by default\r\n\t// $.jstree.defaults.plugins.push(\"unique\");\r\n\treturn $;\r\n\t\r\n});\r\n\ndefine('skylark-widgets-hierarchy/addons/wholerow',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"../Hierarchy\"\r\n],function(langx,browser,eventer,noder,geom,$,jstree){\r\n\t\"use strict\";\r\n\r\n\tif($.jstree.plugins.wholerow) { return; }\r\n\r\n\tvar div = document.createElement('DIV');\r\n\tdiv.setAttribute('unselectable','on');\r\n\tdiv.setAttribute('role','presentation');\r\n\tdiv.className = 'jstree-wholerow';\r\n\tdiv.innerHTML = '&#160;';\r\n\t$.jstree.plugins.wholerow = function (options, parent) {\r\n\t\tthis.bind = function () {\r\n\t\t\tparent.bind.call(this);\r\n\r\n\t\t\tthis.element\r\n\t\t\t\t.on('ready.jstree set_state.jstree', $.proxy(function () {\r\n\t\t\t\t\t\tthis.hide_dots();\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"init.jstree loading.jstree ready.jstree\", $.proxy(function () {\r\n\t\t\t\t\t\t//div.style.height = this._data.core.li_height + 'px';\r\n\t\t\t\t\t\tthis.get_container_ul().addClass('jstree-wholerow-ul');\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"deselect_all.jstree\", $.proxy(function (e, data) {\r\n\t\t\t\t\t\tthis.element.find('.jstree-wholerow-clicked').removeClass('jstree-wholerow-clicked');\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"changed.jstree\", $.proxy(function (e, data) {\r\n\t\t\t\t\t\tthis.element.find('.jstree-wholerow-clicked').removeClass('jstree-wholerow-clicked');\r\n\t\t\t\t\t\tvar tmp = false, i, j;\r\n\t\t\t\t\t\tfor(i = 0, j = data.selected.length; i < j; i++) {\r\n\t\t\t\t\t\t\ttmp = this.get_node(data.selected[i], true);\r\n\t\t\t\t\t\t\tif(tmp && tmp.length) {\r\n\t\t\t\t\t\t\t\ttmp.children('.jstree-wholerow').addClass('jstree-wholerow-clicked');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"open_node.jstree\", $.proxy(function (e, data) {\r\n\t\t\t\t\t\tthis.get_node(data.node, true).find('.jstree-clicked').parent().children('.jstree-wholerow').addClass('jstree-wholerow-clicked');\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"hover_node.jstree dehover_node.jstree\", $.proxy(function (e, data) {\r\n\t\t\t\t\t\tif(e.type === \"hover_node\" && this.is_disabled(data.node)) { return; }\r\n\t\t\t\t\t\tthis.get_node(data.node, true).children('.jstree-wholerow')[e.type === \"hover_node\"?\"addClass\":\"removeClass\"]('jstree-wholerow-hovered');\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"contextmenu.jstree\", \".jstree-wholerow\", $.proxy(function (e) {\r\n\t\t\t\t\t\tif (this._data.contextmenu) {\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\tvar tmp = $.Event('contextmenu', { metaKey : e.metaKey, ctrlKey : e.ctrlKey, altKey : e.altKey, shiftKey : e.shiftKey, pageX : e.pageX, pageY : e.pageY });\r\n\t\t\t\t\t\t\t$(e.currentTarget).closest(\".jstree-node\").children(\".jstree-anchor\").first().trigger(tmp);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t/*!\r\n\t\t\t\t.on(\"mousedown.jstree touchstart.jstree\", \".jstree-wholerow\", function (e) {\r\n\t\t\t\t\t\tif(e.target === e.currentTarget) {\r\n\t\t\t\t\t\t\tvar a = $(e.currentTarget).closest(\".jstree-node\").children(\".jstree-anchor\");\r\n\t\t\t\t\t\t\te.target = a[0];\r\n\t\t\t\t\t\t\ta.trigger(e);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t*/\r\n\t\t\t\t.on(\"click.jstree\", \".jstree-wholerow\", function (e) {\r\n\t\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\t\tvar tmp = $.Event('click', { metaKey : e.metaKey, ctrlKey : e.ctrlKey, altKey : e.altKey, shiftKey : e.shiftKey });\r\n\t\t\t\t\t\t$(e.currentTarget).closest(\".jstree-node\").children(\".jstree-anchor\").first().trigger(tmp).focus();\r\n\t\t\t\t\t})\r\n\t\t\t\t.on(\"dblclick.jstree\", \".jstree-wholerow\", function (e) {\r\n\t\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\t\tvar tmp = $.Event('dblclick', { metaKey : e.metaKey, ctrlKey : e.ctrlKey, altKey : e.altKey, shiftKey : e.shiftKey });\r\n\t\t\t\t\t\t$(e.currentTarget).closest(\".jstree-node\").children(\".jstree-anchor\").first().trigger(tmp).focus();\r\n\t\t\t\t\t})\r\n\t\t\t\t.on(\"click.jstree\", \".jstree-leaf > .jstree-ocl\", $.proxy(function (e) {\r\n\t\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\t\tvar tmp = $.Event('click', { metaKey : e.metaKey, ctrlKey : e.ctrlKey, altKey : e.altKey, shiftKey : e.shiftKey });\r\n\t\t\t\t\t\t$(e.currentTarget).closest(\".jstree-node\").children(\".jstree-anchor\").first().trigger(tmp).focus();\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"mouseover.jstree\", \".jstree-wholerow, .jstree-icon\", $.proxy(function (e) {\r\n\t\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\t\tif(!this.is_disabled(e.currentTarget)) {\r\n\t\t\t\t\t\t\tthis.hover_node(e.currentTarget);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"mouseleave.jstree\", \".jstree-node\", $.proxy(function (e) {\r\n\t\t\t\t\t\tthis.dehover_node(e.currentTarget);\r\n\t\t\t\t\t}, this));\r\n\t\t};\r\n\t\tthis.teardown = function () {\r\n\t\t\tif(this.settings.wholerow) {\r\n\t\t\t\tthis.element.find(\".jstree-wholerow\").remove();\r\n\t\t\t}\r\n\t\t\tparent.teardown.call(this);\r\n\t\t};\r\n\t\tthis.redraw_node = function(obj, deep, callback, force_render) {\r\n\t\t\tobj = parent.redraw_node.apply(this, arguments);\r\n\t\t\tif(obj) {\r\n\t\t\t\tvar tmp = div.cloneNode(true);\r\n\t\t\t\t//tmp.style.height = this._data.core.li_height + 'px';\r\n\t\t\t\tif($.inArray(obj.id, this._data.core.selected) !== -1) { tmp.className += ' jstree-wholerow-clicked'; }\r\n\t\t\t\tif(this._data.core.focused && this._data.core.focused === obj.id) { tmp.className += ' jstree-wholerow-hovered'; }\r\n\t\t\t\tobj.insertBefore(tmp, obj.childNodes[0]);\r\n\t\t\t}\r\n\t\t\treturn obj;\r\n\t\t};\r\n\t};\r\n\t// include the wholerow plugin by default\r\n\t// $.jstree.defaults.plugins.push(\"wholerow\");\r\n\r\n\treturn $;\r\n\r\n});\r\n\ndefine('skylark-widgets-hierarchy/main',[\r\n    \"skylark-domx-query\",\r\n    \"./Hierarchy\",\r\n    \"./addons/changed\",\r\n    \"./addons/checkbox\",\r\n    \"./addons/conditionalselect\",\r\n    \"./addons/contextmenu\",\r\n    \"./addons/dnd\",\r\n    \"./addons/massload\",\r\n    \"./addons/search\",\r\n    \"./addons/sort\",\r\n    \"./addons/state\",\r\n    \"./addons/treegrid\",\r\n    \"./addons/types\",\r\n    \"./addons/unique\",\r\n    \"./addons/wholerow\"\r\n], function($) {\r\n    return $;\r\n});\ndefine('skylark-widgets-hierarchy', ['skylark-widgets-hierarchy/main'], function (main) { return main; });\n\n"]}