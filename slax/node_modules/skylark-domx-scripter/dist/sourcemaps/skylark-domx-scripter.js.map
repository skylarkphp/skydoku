{"version":3,"sources":["skylark-domx-scripter.js"],"names":["define","skylark","langx","noder","finder","head","document","getElementsByTagName","scriptsByUrl","scriptElementsById","count","rscriptType","scripter","preservedScriptAttributes","type","src","nonce","noModule","evaluate","code","node","doc","i","val","script","createElement","text","getAttribute","setAttribute","appendChild","parentNode","removeChild","this","mixin","loadJavaScript","url","loadedCallback","errorCallback","state","loadedCallbacks","errorCallbacks","push","onload","onerror","id","async","defer","startTime","Date","getTime","callbacks","length","deleteJavaScript","remove","html","value","result","undefined","scripts","querySelectorAll","node1","test","textContent","attach","$","fn","wraps","wrapper_value","main"],"mappings":";;;;;;;+zBAAAA,EAAA,kCACA,wBACA,sBACA,qBACA,uBACA,SAAAC,EAAAC,EAAAC,EAAAC,GAEA,IAAAC,EAAAC,SAAAC,qBAAA,QAAA,GACAC,KACAC,KACAC,EAAA,EAEAC,EAAA,qCAEA,SAAAC,IACA,OAAAA,EAIA,IAAAC,GACAC,MAAA,EACAC,KAAA,EACAC,OAAA,EACAC,UAAA,GAGA,SAAAC,EAAAC,EAAAC,EAAAC,GAGA,IAAAC,EAAAC,EACAC,GAHAH,EAAAA,GAAAf,UAGAmB,cAAA,UAGA,GADAD,EAAAE,KAAAP,EACAC,EACA,IAAAE,KAAAT,GAYAU,EAAAH,EAAAE,IAAAF,EAAAO,cAAAP,EAAAO,aAAAL,KAEAE,EAAAI,aAAAN,EAAAC,GAMA,OAFAF,EAAAhB,KAAAwB,YAAAL,GAAAM,WAAAC,YAAAP,GAEAQ,KAwBA,OArBA9B,EAAA+B,MAAArB,GAOAsB,eAAA,SAAAC,EAAAC,EAAAC,GACA,IAAAb,EAAAhB,EAAA2B,GAYA,GAXAX,IACAA,EAAAhB,EAAA2B,IACAG,MAAA,EACAC,mBACAC,oBAIAhB,EAAAe,gBAAAE,KAAAL,GACAZ,EAAAgB,eAAAC,KAAAJ,GAEA,IAAAb,EAAAc,MACAd,EAAAJ,KAAAsB,cACA,IAAA,IAAAlB,EAAAc,MACAd,EAAAJ,KAAAuB,cAhFA,CACA,IAAAvB,EAAAI,EAAAJ,KAAAd,SAAAmB,cAAA,UACAmB,EAAApB,EAAAoB,GAAAlC,IAEAU,EAAAN,KAAA,kBACAM,EAAAyB,OAAA,EACAzB,EAAA0B,OAAA,EACAC,WAAA,IAAAC,MAAAC,UACA5C,EAAAwB,YAAAT,GAEAA,EAAAsB,OAAA,WACAlB,EAAAc,MAAA,EAKA,IAHA,IAAAY,EAAA1B,EAAAe,gBACAjB,EAAA4B,EAAAC,OAEA7B,KACA4B,EAAA5B,KAEAE,EAAAe,mBACAf,EAAAgB,mBAEApB,EAAAuB,QAAA,WACAnB,EAAAc,OAAA,EAIA,IAHA,IAAAY,EAAA1B,EAAAgB,eACAlB,EAAA4B,EAAAC,OAEA7B,KACA4B,EAAA5B,KAEAE,EAAAe,mBACAf,EAAAgB,mBAEApB,EAAAL,IAAAoB,EAEA1B,EAAAmC,GAAAxB,EAEA,OAAAI,EAAAoB,IAMAQ,iBAAA,SAAAR,GACA,IAAAxB,EAAAX,EAAAmC,GACA,GAAAxB,EAAA,CACA,IAAAe,EAAAf,EAAAL,IACAZ,EAAAkD,OAAAjC,UACAX,EAAAmC,UACApC,EAAA2B,KAIAjB,SAAAA,EAEAoC,KAAA,SAAAlC,EAAAmC,GAEA,IAAAC,EAAArD,EAAAmD,KAAAlC,EAAAmC,GAEA,QAAAE,IAAAF,EAAA,CAGA,IAFA,IAAAG,EAAAtC,EAAAuC,iBAAA,UAEArC,EAAA,EAAAA,EAAAoC,EAAAP,OAAA7B,IAAA,CACA,IAAAsC,EAAAF,EAAApC,GACAX,EAAAkD,KAAAD,EAAA9C,MAAA,KACAI,EAAA0C,EAAAE,YAAAF,GAGA,OAAA5B,KAEA,OAAAwB,KAQAvD,EAAA8D,OAAA,gBAAAnD,KAEAZ,EAAA,8BACA,aACA,sBACA,SAAAY,EAAAoD,GAIA,OAFAA,EAAAC,GAAAX,KAAAU,EAAAE,MAAAC,cAAAvD,EAAA0C,KAAA1C,EAAAA,EAAA0C,MAEA1C,IAEAZ,EAAA,yBAAA,8BAAA,SAAAoE,GAAA,OAAAA","file":"../skylark-domx-scripter.js","sourcesContent":["define('skylark-domx-scripter/scripter',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-finder\"\r\n], function(skylark, langx, noder, finder) {\r\n\r\n    var head = document.getElementsByTagName('head')[0],\r\n        scriptsByUrl = {},\r\n        scriptElementsById = {},\r\n        count = 0;\r\n\r\n    var rscriptType = ( /^$|^module$|\\/(?:java|ecma)script/i );\r\n\r\n    function scripter() {\r\n        return scripter;\r\n    }\r\n\r\n\r\n    var preservedScriptAttributes = {\r\n        type: true,\r\n        src: true,\r\n        nonce: true,\r\n        noModule: true\r\n    };\r\n\r\n    function evaluate(code,node, doc ) {\r\n        doc = doc || document;\r\n\r\n        var i, val,\r\n            script = doc.createElement(\"script\");\r\n\r\n        script.text = code;\r\n        if ( node ) {\r\n            for ( i in preservedScriptAttributes ) {\r\n\r\n                // Support: Firefox 64+, Edge 18+\r\n                // Some browsers don't support the \"nonce\" property on scripts.\r\n                // On the other hand, just using `getAttribute` is not enough as\r\n                // the `nonce` attribute is reset to an empty string whenever it\r\n                // becomes browsing-context connected.\r\n                // See https://github.com/whatwg/html/issues/2369\r\n                // See https://html.spec.whatwg.org/#nonce-attributes\r\n                // The `node.getAttribute` check was added for the sake of\r\n                // `jQuery.globalEval` so that it can fake a nonce-containing node\r\n                // via an object.\r\n                val = node[ i ] || node.getAttribute && node.getAttribute( i );\r\n                if ( val ) {\r\n                    script.setAttribute( i, val );\r\n                }\r\n            }\r\n        }\r\n        doc.head.appendChild( script ).parentNode.removeChild( script );\r\n\r\n        return this;\r\n    }\r\n\r\n    langx.mixin(scripter, {\r\n        /*\r\n         * Load a script from a url into the document.\r\n         * @param {} url\r\n         * @param {} loadedCallback\r\n         * @param {} errorCallback\r\n         */\r\n        loadJavaScript: function(url, loadedCallback, errorCallback) {\r\n            var script = scriptsByUrl[url];\r\n            if (!script) {\r\n                script = scriptsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                }\r\n            }\r\n\r\n            script.loadedCallbacks.push(loadedCallback);\r\n            script.errorCallbacks.push(errorCallback);\r\n\r\n            if (script.state === 1) {\r\n                script.node.onload();\r\n            } else if (script.state === -1) {\r\n                script.node.onerror();\r\n            } else {\r\n                var node = script.node = document.createElement(\"script\"),\r\n                    id = script.id = (count++);\r\n\r\n                node.type = \"text/javascript\";\r\n                node.async = false;\r\n                node.defer = false;\r\n                startTime = new Date().getTime();\r\n                head.appendChild(node);\r\n\r\n                node.onload = function() {\r\n                        script.state = 1;\r\n\r\n                        var callbacks = script.loadedCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    },\r\n                    node.onerror = function() {\r\n                        script.state = -1;\r\n                        var callbacks = script.errorCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    };\r\n                node.src = url;\r\n\r\n                scriptElementsById[id] = node;\r\n            }\r\n            return script.id;\r\n        },\r\n        /*\r\n         * Remove the specified script from the document.\r\n         * @param {Number} id\r\n         */\r\n        deleteJavaScript: function(id) {\r\n            var node = scriptElementsById[id];\r\n            if (node) {\r\n                var url = node.src;\r\n                noder.remove(node);\r\n                delete scriptElementsById[id];\r\n                delete scriptsByUrl[url];\r\n            }\r\n        },\r\n\r\n        evaluate : evaluate,\r\n\r\n        html : function(node,value) {\r\n\r\n            var result = noder.html(node,value);\r\n\r\n            if (value !== undefined) {\r\n                var scripts = node.querySelectorAll('script');\r\n\r\n                for (var i =0; i<scripts.length; i++) {\r\n                    var node1 = scripts[i];\r\n                    if (rscriptType.test( node1.type || \"\" ) ) {\r\n                      evaluate(node1.textContent,node1);\r\n                    }\r\n                }       \r\n                return this;         \r\n            } else {\r\n                return result;\r\n            }\r\n\r\n\r\n\r\n        }\r\n    });\r\n\r\n    return skylark.attach(\"domx.scripter\", scripter);\r\n});\ndefine('skylark-domx-scripter/main',[\r\n\t\"./scripter\",\r\n\t\"skylark-domx-query\"\r\n],function(scripter,$){\r\n\r\n    $.fn.html = $.wraps.wrapper_value(scripter.html, scripter, scripter.html);\r\n\r\n\treturn scripter;\r\n});\ndefine('skylark-domx-scripter', ['skylark-domx-scripter/main'], function (main) { return main; });\n\n"]}