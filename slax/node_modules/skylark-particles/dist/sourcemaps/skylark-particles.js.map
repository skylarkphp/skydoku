{"version":3,"sources":["skylark-particles.js"],"names":["define","skylark","$","jsonData","particles","number","value","density","enable","value_area","color","shape","type","stroke","width","polygon","nb_sides","image","src","height","opacity","random","anim","speed","opacity_min","sync","size","size_min","line_linked","distance","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","grab","bubble","duration","repulse","push","particles_nb","remove","retina_detect","test","navigator","userAgent","pJS","tag_id","params","canvas_el","document","querySelector","this","canvas","el","w","offsetWidth","h","offsetHeight","array","mouse","fn","interact","vendors","tmp","Object","deepExtend","obj","size_value","size_anim_speed","move_speed","line_linked_distance","line_linked_width","mode_grab_distance","mode_bubble_distance","mode_bubble_size","mode_repulse_distance","retinaInit","window","devicePixelRatio","pxratio","retina","canvasInit","ctx","getContext","canvasSize","addEventListener","particlesEmpty","particlesCreate","particlesDraw","densityAutoParticles","canvasPaint","fillRect","canvasClear","clearRect","particle","position","radius","Math","size_status","vs","x","y","checkOverlap","Array","color_selected","floor","length","rgb","hexToRgb","undefined","r","g","b","s","l","hsl","opacity_status","vo","velbase","vx","vy","vx_i","vy_i","shape_type","shape_selected","sh","img","ratio","img_type","source_svg","createSvgImg","pushing","loaded","prototype","draw","p","radius_bubble","opacity_bubble","color_value","fillStyle","beginPath","arc","PI","rect","drawShape","img_obj","drawImage","closePath","strokeStyle","lineWidth","fill","i","particlesUpdate","ms","new_pos","x_left","x_right","y_top","y_bottom","isInArray","grabParticle","bubbleParticle","repulseParticle","j","p2","linkParticles","attractParticles","bounceParticles","particlesRefresh","cancelRequestAnimFrame","checkAnimFrame","drawAnimFrame","count_svg","start","p1","dx","dy","dist","sqrt","opacity_line","color_line","color_rgb_line","moveTo","lineTo","ax","ay","dist_p","pushParticles","nb","pos","pos_x","pos_y","removeParticles","splice","dx_mouse","dy_mouse","dist_mouse","init","status","dif","bubble_clicking","click_pos_x","click_pos_y","time_spent","Date","getTime","click_time","bubble_duration_end","process","bubble_param","particles_param","p_obj_bubble","p_obj","id","value_tmp","normVec","repulseRadius","repulseFactor","pow","min","max","repulse_finish","repulse_count","repulse_clicking","d","force","f","atan2","cos","sin","eventsListeners","parentNode","e","clientX","clientY","offsetX","offsetY","setTimeout","area","nb_particles","missing_particles","abs","svgXml","coloredSvgXml","replace","m","svg","Blob","DOMURL","URL","webkitURL","url","createObjectURL","Image","revokeObjectURL","destroypJS","cancelAnimationFrame","pJSDom","c","startX","startY","sideLength","sideCountNumerator","sideCountDenominator","sideCount","decimalSides","interiorAngleDegrees","interiorAngle","save","translate","rotate","restore","exportImg","open","toDataURL","loadImg","img_error","xhr","XMLHttpRequest","onreadystatechange","data","readyState","currentTarget","response","checkBeforeDraw","console","log","send","requestAnimFrame","check","substr","startAnimation","stopAnimation","len","hex","result","exec","parseInt","indexOf","destination","source","property","constructor","arguments","callee","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","webkitCancelRequestAnimationFrame","mozCancelRequestAnimationFrame","oCancelRequestAnimationFrame","msCancelRequestAnimationFrame","clearTimeout","particlesJS","pJS_tag","getElementById","exist_canvas","getElementsByClassName","removeChild","createElement","className","style","appendChild","pjs","attach","main"],"mappings":"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","file":"../skylark-particles.js","sourcesContent":["/* -----------------------------------------------\r\n/* Author : Vincent Garreau  - vincentgarreau.com\r\n/* MIT license: http://opensource.org/licenses/MIT\r\n/* Demo / Generator : vincentgarreau.com/particles.js\r\n/* GitHub : github.com/VincentGarreau/particles.js\r\n/* How to use? : Check the GitHub README\r\n/* v2.0.0\r\n/* ----------------------------------------------- */\r\ndefine('skylark-particles/particles',[\r\n    \"skylark-langx-ns\",\r\n    \"skylark-utils-dom/query\",\r\n], function(skylark,$) {\r\n    var shapeSize = { w: 100, h: 100 },\r\n        number = { v: 80, d: 800 },\r\n        size = { v: 3, s: 30 },\r\n        moveSpeed = 3;\r\n\r\n    var jsonData = {\r\n        \"particles\": {\r\n            \"number\": { \"value\": 80, \"density\": { \"enable\": true, \"value_area\": 800 } },\r\n            \"color\": { \"value\": \"#ffffff\" },\r\n            \"shape\": { \"type\": \"circle\", \"stroke\": { \"width\": 0, \"color\": \"#000000\" }, \"polygon\": { \"nb_sides\": 6 }, \"image\": { \"src\": \"img/github.svg\", \"width\": 100, \"height\": 100 } },\r\n            \"opacity\": { \"value\": 0.5, \"random\": false, \"anim\": { \"enable\": false, \"speed\": 0.5, \"opacity_min\": 0.1, \"sync\": false } },\r\n            \"size\": { \"value\": 3, \"random\": true, \"anim\": { \"enable\": false, \"speed\": 30, \"size_min\": 0.1, \"sync\": false } },\r\n            \"line_linked\": { \"enable\": true, \"distance\": 150, \"color\": \"#ffffff\", \"opacity\": 0.4, \"width\": 1 },\r\n            \"move\": { \"enable\": true, \"speed\": 3, \"direction\": \"none\", \"random\": false, \"straight\": false, \"out_mode\": \"out\", \"bounce\": false, \"attract\": { \"enable\": false, \"rotateX\": 600, \"rotateY\": 1200 } }\r\n        },\r\n        \"interactivity\": {\r\n            \"detect_on\": \"canvas\",\r\n            \"events\": {\r\n                \"onhover\": { \"enable\": true, \"mode\": \"repulse\" },\r\n                \"onclick\": { \"enable\": false, \"mode\": \"push\" },\r\n                \"resize\": true\r\n            },\r\n            \"modes\": {\r\n                \"grab\": { \"distance\": 400, \"line_linked\": { \"opacity\": 1 } },\r\n                \"bubble\": { \"distance\": 400, \"size\": 40, \"duration\": 2, \"opacity\": 8, \"speed\": 3 },\r\n                \"repulse\": { \"distance\": 200, \"duration\": 0.4 },\r\n                \"push\": { \"particles_nb\": 4 },\r\n                \"remove\": { \"particles_nb\": 2 }\r\n            }\r\n        },\r\n        \"retina_detect\": true\r\n    };\r\n    if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\r\n         jsonData = {\r\n        \"particles\": {\r\n            \"number\": { \"value\": 10, \"density\": { \"enable\": true, \"value_area\": 100 } },\r\n            \"color\": { \"value\": \"#ffffff\" },\r\n            \"shape\": { \"type\": \"circle\", \"stroke\": { \"width\": 0, \"color\": \"#000000\" }, \"polygon\": { \"nb_sides\": 6 }, \"image\": { \"src\": \"img/github.svg\", \"width\": 50, \"height\": 50 } },\r\n            \"opacity\": { \"value\": 0.5, \"random\": false, \"anim\": { \"enable\": false, \"speed\": 0.5, \"opacity_min\": 0.1, \"sync\": false } },\r\n            \"size\": { \"value\": 1, \"random\": true, \"anim\": { \"enable\": false, \"speed\": 10, \"size_min\": 0.1, \"sync\": false } },\r\n            \"line_linked\": { \"enable\": true, \"distance\": 80, \"color\": \"#ffffff\", \"opacity\": 0.6, \"width\": 1 },\r\n            \"move\": { \"enable\": true, \"speed\": 3, \"direction\": \"none\", \"random\": false, \"straight\": false, \"out_mode\": \"out\", \"bounce\": false, \"attract\": { \"enable\": false, \"rotateX\": 600, \"rotateY\": 1200 } }\r\n        },\r\n        \"interactivity\": {\r\n            \"detect_on\": \"canvas\",\r\n            \"events\": {\r\n                \"onhover\": { \"enable\": true, \"mode\": \"repulse\" },\r\n                \"onclick\": { \"enable\": false, \"mode\": \"push\" },\r\n                \"resize\": true\r\n            },\r\n            \"modes\": {\r\n                \"grab\": { \"distance\": 100, \"line_linked\": { \"opacity\": 1 } },\r\n                \"bubble\": { \"distance\": 100, \"size\": 10, \"duration\": 2, \"opacity\": 8, \"speed\": 1 },\r\n                \"repulse\": { \"distance\": 100, \"duration\": 0.4 },\r\n                \"push\": { \"particles_nb\": 8 },\r\n                \"remove\": { \"particles_nb\": 2 }\r\n            }\r\n        },\r\n        \"retina_detect\": true\r\n    };\r\n    }\r\n    var pJS = function(tag_id, params) {\r\n\r\n        var canvas_el = document.querySelector('#' + tag_id + ' > .particles-js-canvas-el');\r\n\r\n        /* particles.js variables with default values */\r\n        this.pJS = {\r\n            canvas: {\r\n                el: canvas_el,\r\n                w: canvas_el.offsetWidth,\r\n                h: canvas_el.offsetHeight\r\n            },\r\n            particles: {\r\n                number: {\r\n                    value: 400,\r\n                    density: {\r\n                        enable: true,\r\n                        value_area: 800\r\n                    }\r\n                },\r\n                color: {\r\n                    value: '#fff'\r\n                },\r\n                shape: {\r\n                    type: 'circle',\r\n                    stroke: {\r\n                        width: 0,\r\n                        color: '#ff0000'\r\n                    },\r\n                    polygon: {\r\n                        nb_sides: 5\r\n                    },\r\n                    image: {\r\n                        src: '',\r\n                        width: 100,\r\n                        height: 100\r\n                    }\r\n                },\r\n                opacity: {\r\n                    value: 1,\r\n                    random: false,\r\n                    anim: {\r\n                        enable: false,\r\n                        speed: 2,\r\n                        opacity_min: 0,\r\n                        sync: false\r\n                    }\r\n                },\r\n                size: {\r\n                    value: 20,\r\n                    random: false,\r\n                    anim: {\r\n                        enable: false,\r\n                        speed: 20,\r\n                        size_min: 0,\r\n                        sync: false\r\n                    }\r\n                },\r\n                line_linked: {\r\n                    enable: true,\r\n                    distance: 100,\r\n                    color: '#fff',\r\n                    opacity: 1,\r\n                    width: 1\r\n                },\r\n                move: {\r\n                    enable: true,\r\n                    speed: 2,\r\n                    direction: 'none',\r\n                    random: false,\r\n                    straight: false,\r\n                    out_mode: 'out',\r\n                    bounce: false,\r\n                    attract: {\r\n                        enable: false,\r\n                        rotateX: 3000,\r\n                        rotateY: 3000\r\n                    }\r\n                },\r\n                array: []\r\n            },\r\n            interactivity: {\r\n                detect_on: 'canvas',\r\n                events: {\r\n                    onhover: {\r\n                        enable: true,\r\n                        mode: 'grab'\r\n                    },\r\n                    onclick: {\r\n                        enable: true,\r\n                        mode: 'push'\r\n                    },\r\n                    resize: true\r\n                },\r\n                modes: {\r\n                    grab: {\r\n                        distance: 100,\r\n                        line_linked: {\r\n                            opacity: 1\r\n                        }\r\n                    },\r\n                    bubble: {\r\n                        distance: 200,\r\n                        size: 80,\r\n                        duration: 0.4\r\n                    },\r\n                    repulse: {\r\n                        distance: 200,\r\n                        duration: 0.4\r\n                    },\r\n                    push: {\r\n                        particles_nb: 4\r\n                    },\r\n                    remove: {\r\n                        particles_nb: 2\r\n                    }\r\n                },\r\n                mouse: {}\r\n            },\r\n            retina_detect: false,\r\n            fn: {\r\n                interact: {},\r\n                modes: {},\r\n                vendors: {}\r\n            },\r\n            tmp: {}\r\n        };\r\n\r\n        var pJS = this.pJS;\r\n\r\n        /* params settings */\r\n        if (params) {\r\n            Object.deepExtend(pJS, params);\r\n        }\r\n\r\n        pJS.tmp.obj = {\r\n            size_value: pJS.particles.size.value,\r\n            size_anim_speed: pJS.particles.size.anim.speed,\r\n            move_speed: pJS.particles.move.speed,\r\n            line_linked_distance: pJS.particles.line_linked.distance,\r\n            line_linked_width: pJS.particles.line_linked.width,\r\n            mode_grab_distance: pJS.interactivity.modes.grab.distance,\r\n            mode_bubble_distance: pJS.interactivity.modes.bubble.distance,\r\n            mode_bubble_size: pJS.interactivity.modes.bubble.size,\r\n            mode_repulse_distance: pJS.interactivity.modes.repulse.distance\r\n        };\r\n\r\n\r\n        pJS.fn.retinaInit = function() {\r\n\r\n            if (pJS.retina_detect && window.devicePixelRatio > 1) {\r\n                pJS.canvas.pxratio = window.devicePixelRatio;\r\n                pJS.tmp.retina = true;\r\n            } else {\r\n                pJS.canvas.pxratio = 1;\r\n                pJS.tmp.retina = false;\r\n            }\r\n\r\n            pJS.canvas.w = pJS.canvas.el.offsetWidth * pJS.canvas.pxratio;\r\n            pJS.canvas.h = pJS.canvas.el.offsetHeight * pJS.canvas.pxratio;\r\n\r\n            pJS.particles.size.value = pJS.tmp.obj.size_value * pJS.canvas.pxratio;\r\n            pJS.particles.size.anim.speed = pJS.tmp.obj.size_anim_speed * pJS.canvas.pxratio;\r\n            pJS.particles.move.speed = pJS.tmp.obj.move_speed * pJS.canvas.pxratio;\r\n            pJS.particles.line_linked.distance = pJS.tmp.obj.line_linked_distance * pJS.canvas.pxratio;\r\n            pJS.interactivity.modes.grab.distance = pJS.tmp.obj.mode_grab_distance * pJS.canvas.pxratio;\r\n            pJS.interactivity.modes.bubble.distance = pJS.tmp.obj.mode_bubble_distance * pJS.canvas.pxratio;\r\n            pJS.particles.line_linked.width = pJS.tmp.obj.line_linked_width * pJS.canvas.pxratio;\r\n            pJS.interactivity.modes.bubble.size = pJS.tmp.obj.mode_bubble_size * pJS.canvas.pxratio;\r\n            pJS.interactivity.modes.repulse.distance = pJS.tmp.obj.mode_repulse_distance * pJS.canvas.pxratio;\r\n\r\n        };\r\n\r\n\r\n\r\n        /* ---------- pJS functions - canvas ------------ */\r\n\r\n        pJS.fn.canvasInit = function() {\r\n            pJS.canvas.ctx = pJS.canvas.el.getContext('2d');\r\n        };\r\n\r\n        pJS.fn.canvasSize = function() {\r\n\r\n            pJS.canvas.el.width = pJS.canvas.w;\r\n            pJS.canvas.el.height = pJS.canvas.h;\r\n\r\n            if (pJS && pJS.interactivity.events.resize) {\r\n\r\n                window.addEventListener('resize', function() {\r\n\r\n                    pJS.canvas.w = pJS.canvas.el.offsetWidth;\r\n                    pJS.canvas.h = pJS.canvas.el.offsetHeight;\r\n\r\n                    /* resize canvas */\r\n                    if (pJS.tmp.retina) {\r\n                        pJS.canvas.w *= pJS.canvas.pxratio;\r\n                        pJS.canvas.h *= pJS.canvas.pxratio;\r\n                    }\r\n\r\n                    pJS.canvas.el.width = pJS.canvas.w;\r\n                    pJS.canvas.el.height = pJS.canvas.h;\r\n\r\n                    /* repaint canvas on anim disabled */\r\n                    if (!pJS.particles.move.enable) {\r\n                        pJS.fn.particlesEmpty();\r\n                        pJS.fn.particlesCreate();\r\n                        pJS.fn.particlesDraw();\r\n                        pJS.fn.vendors.densityAutoParticles();\r\n                    }\r\n\r\n                    /* density particles enabled */\r\n                    pJS.fn.vendors.densityAutoParticles();\r\n\r\n                });\r\n\r\n            }\r\n\r\n        };\r\n\r\n\r\n        pJS.fn.canvasPaint = function() {\r\n            pJS.canvas.ctx.fillRect(0, 0, pJS.canvas.w, pJS.canvas.h);\r\n        };\r\n\r\n        pJS.fn.canvasClear = function() {\r\n            pJS.canvas.ctx.clearRect(0, 0, pJS.canvas.w, pJS.canvas.h);\r\n        };\r\n\r\n\r\n        /* --------- pJS functions - particles ----------- */\r\n\r\n        pJS.fn.particle = function(color, opacity, position) {\r\n\r\n            /* size */\r\n            this.radius = (pJS.particles.size.random ? Math.random() : 1) * pJS.particles.size.value;\r\n            if (pJS.particles.size.anim.enable) {\r\n                this.size_status = false;\r\n                this.vs = pJS.particles.size.anim.speed / 100;\r\n                if (!pJS.particles.size.anim.sync) {\r\n                    this.vs = this.vs * Math.random();\r\n                }\r\n            }\r\n\r\n            /* position */\r\n            this.x = position ? position.x : Math.random() * pJS.canvas.w;\r\n            this.y = position ? position.y : Math.random() * pJS.canvas.h;\r\n\r\n            /* check position  - into the canvas */\r\n            if (this.x > pJS.canvas.w - this.radius * 2) this.x = this.x - this.radius;\r\n            else if (this.x < this.radius * 2) this.x = this.x + this.radius;\r\n            if (this.y > pJS.canvas.h - this.radius * 2) this.y = this.y - this.radius;\r\n            else if (this.y < this.radius * 2) this.y = this.y + this.radius;\r\n\r\n            /* check position - avoid overlap */\r\n            if (pJS.particles.move.bounce) {\r\n                pJS.fn.vendors.checkOverlap(this, position);\r\n            }\r\n\r\n            /* color */\r\n            this.color = {};\r\n            if (typeof(color.value) == 'object') {\r\n\r\n                if (color.value instanceof Array) {\r\n                    var color_selected = color.value[Math.floor(Math.random() * pJS.particles.color.value.length)];\r\n                    this.color.rgb = hexToRgb(color_selected);\r\n                } else {\r\n                    if (color.value.r != undefined && color.value.g != undefined && color.value.b != undefined) {\r\n                        this.color.rgb = {\r\n                            r: color.value.r,\r\n                            g: color.value.g,\r\n                            b: color.value.b\r\n                        }\r\n                    }\r\n                    if (color.value.h != undefined && color.value.s != undefined && color.value.l != undefined) {\r\n                        this.color.hsl = {\r\n                            h: color.value.h,\r\n                            s: color.value.s,\r\n                            l: color.value.l\r\n                        }\r\n                    }\r\n                }\r\n\r\n            } else if (color.value == 'random') {\r\n                this.color.rgb = {\r\n                    r: (Math.floor(Math.random() * (255 - 0 + 1)) + 0),\r\n                    g: (Math.floor(Math.random() * (255 - 0 + 1)) + 0),\r\n                    b: (Math.floor(Math.random() * (255 - 0 + 1)) + 0)\r\n                }\r\n            } else if (typeof(color.value) == 'string') {\r\n                this.color = color;\r\n                this.color.rgb = hexToRgb(this.color.value);\r\n            }\r\n\r\n            /* opacity */\r\n            this.opacity = (pJS.particles.opacity.random ? Math.random() : 1) * pJS.particles.opacity.value;\r\n            if (pJS.particles.opacity.anim.enable) {\r\n                this.opacity_status = false;\r\n                this.vo = pJS.particles.opacity.anim.speed / 100;\r\n                if (!pJS.particles.opacity.anim.sync) {\r\n                    this.vo = this.vo * Math.random();\r\n                }\r\n            }\r\n\r\n            /* animation - velocity for speed */\r\n            var velbase = {}\r\n            switch (pJS.particles.move.direction) {\r\n                case 'top':\r\n                    velbase = { x: 0, y: -1 };\r\n                    break;\r\n                case 'top-right':\r\n                    velbase = { x: 0.5, y: -0.5 };\r\n                    break;\r\n                case 'right':\r\n                    velbase = { x: 1, y: -0 };\r\n                    break;\r\n                case 'bottom-right':\r\n                    velbase = { x: 0.5, y: 0.5 };\r\n                    break;\r\n                case 'bottom':\r\n                    velbase = { x: 0, y: 1 };\r\n                    break;\r\n                case 'bottom-left':\r\n                    velbase = { x: -0.5, y: 1 };\r\n                    break;\r\n                case 'left':\r\n                    velbase = { x: -1, y: 0 };\r\n                    break;\r\n                case 'top-left':\r\n                    velbase = { x: -0.5, y: -0.5 };\r\n                    break;\r\n                default:\r\n                    velbase = { x: 0, y: 0 };\r\n                    break;\r\n            }\r\n\r\n            if (pJS.particles.move.straight) {\r\n                this.vx = velbase.x;\r\n                this.vy = velbase.y;\r\n                if (pJS.particles.move.random) {\r\n                    this.vx = this.vx * (Math.random());\r\n                    this.vy = this.vy * (Math.random());\r\n                }\r\n            } else {\r\n                this.vx = velbase.x + Math.random() - 0.5;\r\n                this.vy = velbase.y + Math.random() - 0.5;\r\n            }\r\n\r\n            // var theta = 2.0 * Math.PI * Math.random();\r\n            // this.vx = Math.cos(theta);\r\n            // this.vy = Math.sin(theta);\r\n\r\n            this.vx_i = this.vx;\r\n            this.vy_i = this.vy;\r\n\r\n\r\n\r\n            /* if shape is image */\r\n\r\n            var shape_type = pJS.particles.shape.type;\r\n            if (typeof(shape_type) == 'object') {\r\n                if (shape_type instanceof Array) {\r\n                    var shape_selected = shape_type[Math.floor(Math.random() * shape_type.length)];\r\n                    this.shape = shape_selected;\r\n                }\r\n            } else {\r\n                this.shape = shape_type;\r\n            }\r\n\r\n            if (this.shape == 'image') {\r\n                var sh = pJS.particles.shape;\r\n                this.img = {\r\n                    src: sh.image.src,\r\n                    ratio: sh.image.width / sh.image.height\r\n                }\r\n                if (!this.img.ratio) this.img.ratio = 1;\r\n                if (pJS.tmp.img_type == 'svg' && pJS.tmp.source_svg != undefined) {\r\n                    pJS.fn.vendors.createSvgImg(this);\r\n                    if (pJS.tmp.pushing) {\r\n                        this.img.loaded = false;\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n\r\n        };\r\n\r\n\r\n        pJS.fn.particle.prototype.draw = function() {\r\n\r\n            var p = this;\r\n\r\n            if (p.radius_bubble != undefined) {\r\n                var radius = p.radius_bubble;\r\n            } else {\r\n                var radius = p.radius;\r\n            }\r\n\r\n            if (p.opacity_bubble != undefined) {\r\n                var opacity = p.opacity_bubble;\r\n            } else {\r\n                var opacity = p.opacity;\r\n            }\r\n\r\n            if (p.color.rgb) {\r\n                var color_value = 'rgba(' + p.color.rgb.r + ',' + p.color.rgb.g + ',' + p.color.rgb.b + ',' + opacity + ')';\r\n            } else {\r\n                var color_value = 'hsla(' + p.color.hsl.h + ',' + p.color.hsl.s + '%,' + p.color.hsl.l + '%,' + opacity + ')';\r\n            }\r\n\r\n            pJS.canvas.ctx.fillStyle = color_value;\r\n            pJS.canvas.ctx.beginPath();\r\n\r\n            switch (p.shape) {\r\n\r\n                case 'circle':\r\n                    pJS.canvas.ctx.arc(p.x, p.y, radius, 0, Math.PI * 2, false);\r\n                    break;\r\n\r\n                case 'edge':\r\n                    pJS.canvas.ctx.rect(p.x - radius, p.y - radius, radius * 2, radius * 2);\r\n                    break;\r\n\r\n                case 'triangle':\r\n                    pJS.fn.vendors.drawShape(pJS.canvas.ctx, p.x - radius, p.y + radius / 1.66, radius * 2, 3, 2);\r\n                    break;\r\n\r\n                case 'polygon':\r\n                    pJS.fn.vendors.drawShape(\r\n                        pJS.canvas.ctx,\r\n                        p.x - radius / (pJS.particles.shape.polygon.nb_sides / 3.5), // startX\r\n                        p.y - radius / (2.66 / 3.5), // startY\r\n                        radius * 2.66 / (pJS.particles.shape.polygon.nb_sides / 3), // sideLength\r\n                        pJS.particles.shape.polygon.nb_sides, // sideCountNumerator\r\n                        1 // sideCountDenominator\r\n                    );\r\n                    break;\r\n\r\n                case 'star':\r\n                    pJS.fn.vendors.drawShape(\r\n                        pJS.canvas.ctx,\r\n                        p.x - radius * 2 / (pJS.particles.shape.polygon.nb_sides / 4), // startX\r\n                        p.y - radius / (2 * 2.66 / 3.5), // startY\r\n                        radius * 2 * 2.66 / (pJS.particles.shape.polygon.nb_sides / 3), // sideLength\r\n                        pJS.particles.shape.polygon.nb_sides, // sideCountNumerator\r\n                        2 // sideCountDenominator\r\n                    );\r\n                    break;\r\n\r\n                case 'image':\r\n\r\n                    function draw() {\r\n                        pJS.canvas.ctx.drawImage(\r\n                            img_obj,\r\n                            p.x - radius,\r\n                            p.y - radius,\r\n                            radius * 2,\r\n                            radius * 2 / p.img.ratio\r\n                        );\r\n                    }\r\n\r\n                    if (pJS.tmp.img_type == 'svg') {\r\n                        var img_obj = p.img.obj;\r\n                    } else {\r\n                        var img_obj = pJS.tmp.img_obj;\r\n                    }\r\n\r\n                    if (img_obj) {\r\n                        draw();\r\n                    }\r\n\r\n                    break;\r\n\r\n            }\r\n\r\n            pJS.canvas.ctx.closePath();\r\n\r\n            if (pJS.particles.shape.stroke.width > 0) {\r\n                pJS.canvas.ctx.strokeStyle = pJS.particles.shape.stroke.color;\r\n                pJS.canvas.ctx.lineWidth = pJS.particles.shape.stroke.width;\r\n                pJS.canvas.ctx.stroke();\r\n            }\r\n\r\n            pJS.canvas.ctx.fill();\r\n\r\n        };\r\n\r\n\r\n        pJS.fn.particlesCreate = function() {\r\n            for (var i = 0; i < pJS.particles.number.value; i++) {\r\n                pJS.particles.array.push(new pJS.fn.particle(pJS.particles.color, pJS.particles.opacity.value));\r\n            }\r\n        };\r\n\r\n        pJS.fn.particlesUpdate = function() {\r\n\r\n            for (var i = 0; i < pJS.particles.array.length; i++) {\r\n\r\n                /* the particle */\r\n                var p = pJS.particles.array[i];\r\n\r\n                // var d = ( dx = pJS.interactivity.mouse.click_pos_x - p.x ) * dx + ( dy = pJS.interactivity.mouse.click_pos_y - p.y ) * dy;\r\n                // var f = -BANG_SIZE / d;\r\n                // if ( d < BANG_SIZE ) {\r\n                //     var t = Math.atan2( dy, dx );\r\n                //     p.vx = f * Math.cos(t);\r\n                //     p.vy = f * Math.sin(t);\r\n                // }\r\n\r\n                /* move the particle */\r\n                if (pJS.particles.move.enable) {\r\n                    var ms = pJS.particles.move.speed / 2;\r\n                    p.x += p.vx * ms;\r\n                    p.y += p.vy * ms;\r\n                }\r\n\r\n                /* change opacity status */\r\n                if (pJS.particles.opacity.anim.enable) {\r\n                    if (p.opacity_status == true) {\r\n                        if (p.opacity >= pJS.particles.opacity.value) p.opacity_status = false;\r\n                        p.opacity += p.vo;\r\n                    } else {\r\n                        if (p.opacity <= pJS.particles.opacity.anim.opacity_min) p.opacity_status = true;\r\n                        p.opacity -= p.vo;\r\n                    }\r\n                    if (p.opacity < 0) p.opacity = 0;\r\n                }\r\n\r\n                /* change size */\r\n                if (pJS.particles.size.anim.enable) {\r\n                    if (p.size_status == true) {\r\n                        if (p.radius >= pJS.particles.size.value) p.size_status = false;\r\n                        p.radius += p.vs;\r\n                    } else {\r\n                        if (p.radius <= pJS.particles.size.anim.size_min) p.size_status = true;\r\n                        p.radius -= p.vs;\r\n                    }\r\n                    if (p.radius < 0) p.radius = 0;\r\n                }\r\n\r\n                /* change particle position if it is out of canvas */\r\n                if (pJS.particles.move.out_mode == 'bounce') {\r\n                    var new_pos = {\r\n                        x_left: p.radius,\r\n                        x_right: pJS.canvas.w,\r\n                        y_top: p.radius,\r\n                        y_bottom: pJS.canvas.h\r\n                    }\r\n                } else {\r\n                    var new_pos = {\r\n                        x_left: -p.radius,\r\n                        x_right: pJS.canvas.w + p.radius,\r\n                        y_top: -p.radius,\r\n                        y_bottom: pJS.canvas.h + p.radius\r\n                    }\r\n                }\r\n\r\n                if (p.x - p.radius > pJS.canvas.w) {\r\n                    p.x = new_pos.x_left;\r\n                    p.y = Math.random() * pJS.canvas.h;\r\n                } else if (p.x + p.radius < 0) {\r\n                    p.x = new_pos.x_right;\r\n                    p.y = Math.random() * pJS.canvas.h;\r\n                }\r\n                if (p.y - p.radius > pJS.canvas.h) {\r\n                    p.y = new_pos.y_top;\r\n                    p.x = Math.random() * pJS.canvas.w;\r\n                } else if (p.y + p.radius < 0) {\r\n                    p.y = new_pos.y_bottom;\r\n                    p.x = Math.random() * pJS.canvas.w;\r\n                }\r\n\r\n                /* out of canvas modes */\r\n                switch (pJS.particles.move.out_mode) {\r\n                    case 'bounce':\r\n                        if (p.x + p.radius > pJS.canvas.w) p.vx = -p.vx;\r\n                        else if (p.x - p.radius < 0) p.vx = -p.vx;\r\n                        if (p.y + p.radius > pJS.canvas.h) p.vy = -p.vy;\r\n                        else if (p.y - p.radius < 0) p.vy = -p.vy;\r\n                        break;\r\n                }\r\n\r\n                /* events */\r\n                if (isInArray('grab', pJS.interactivity.events.onhover.mode)) {\r\n                    pJS.fn.modes.grabParticle(p);\r\n                }\r\n\r\n                if (isInArray('bubble', pJS.interactivity.events.onhover.mode) || isInArray('bubble', pJS.interactivity.events.onclick.mode)) {\r\n                    pJS.fn.modes.bubbleParticle(p);\r\n                }\r\n\r\n                if (isInArray('repulse', pJS.interactivity.events.onhover.mode) || isInArray('repulse', pJS.interactivity.events.onclick.mode)) {\r\n                    pJS.fn.modes.repulseParticle(p);\r\n                }\r\n\r\n                /* interaction auto between particles */\r\n                if (pJS.particles.line_linked.enable || pJS.particles.move.attract.enable) {\r\n                    for (var j = i + 1; j < pJS.particles.array.length; j++) {\r\n                        var p2 = pJS.particles.array[j];\r\n\r\n                        /* link particles */\r\n                        if (pJS.particles.line_linked.enable) {\r\n                            pJS.fn.interact.linkParticles(p, p2);\r\n                        }\r\n\r\n                        /* attract particles */\r\n                        if (pJS.particles.move.attract.enable) {\r\n                            pJS.fn.interact.attractParticles(p, p2);\r\n                        }\r\n\r\n                        /* bounce particles */\r\n                        if (pJS.particles.move.bounce) {\r\n                            pJS.fn.interact.bounceParticles(p, p2);\r\n                        }\r\n\r\n                    }\r\n                }\r\n\r\n\r\n            }\r\n\r\n        };\r\n\r\n        pJS.fn.particlesDraw = function() {\r\n\r\n            /* clear canvas */\r\n            pJS.canvas.ctx.clearRect(0, 0, pJS.canvas.w, pJS.canvas.h);\r\n\r\n            /* update each particles param */\r\n            pJS.fn.particlesUpdate();\r\n\r\n            /* draw each particle */\r\n            for (var i = 0; i < pJS.particles.array.length; i++) {\r\n                var p = pJS.particles.array[i];\r\n                p.draw();\r\n            }\r\n\r\n        };\r\n\r\n        pJS.fn.particlesEmpty = function() {\r\n            pJS.particles.array = [];\r\n        };\r\n\r\n        pJS.fn.particlesRefresh = function() {\r\n\r\n            /* init all */\r\n            cancelRequestAnimFrame(pJS.fn.checkAnimFrame);\r\n            cancelRequestAnimFrame(pJS.fn.drawAnimFrame);\r\n            pJS.tmp.source_svg = undefined;\r\n            pJS.tmp.img_obj = undefined;\r\n            pJS.tmp.count_svg = 0;\r\n            pJS.fn.particlesEmpty();\r\n            pJS.fn.canvasClear();\r\n\r\n            /* restart */\r\n            pJS.fn.vendors.start();\r\n\r\n        };\r\n\r\n\r\n        /* ---------- pJS functions - particles interaction ------------ */\r\n\r\n        pJS.fn.interact.linkParticles = function(p1, p2) {\r\n\r\n            var dx = p1.x - p2.x,\r\n                dy = p1.y - p2.y,\r\n                dist = Math.sqrt(dx * dx + dy * dy);\r\n\r\n            /* draw a line between p1 and p2 if the distance between them is under the config distance */\r\n            if (dist <= pJS.particles.line_linked.distance) {\r\n\r\n                var opacity_line = pJS.particles.line_linked.opacity - (dist / (1 / pJS.particles.line_linked.opacity)) / pJS.particles.line_linked.distance;\r\n\r\n                if (opacity_line > 0) {\r\n\r\n                    /* style */\r\n                    var color_line = pJS.particles.line_linked.color_rgb_line;\r\n                    pJS.canvas.ctx.strokeStyle = 'rgba(' + color_line.r + ',' + color_line.g + ',' + color_line.b + ',' + opacity_line + ')';\r\n                    pJS.canvas.ctx.lineWidth = pJS.particles.line_linked.width;\r\n                    //pJS.canvas.ctx.lineCap = 'round'; /* performance issue */\r\n\r\n                    /* path */\r\n                    pJS.canvas.ctx.beginPath();\r\n                    pJS.canvas.ctx.moveTo(p1.x, p1.y);\r\n                    pJS.canvas.ctx.lineTo(p2.x, p2.y);\r\n                    pJS.canvas.ctx.stroke();\r\n                    pJS.canvas.ctx.closePath();\r\n\r\n                }\r\n\r\n            }\r\n\r\n        };\r\n\r\n\r\n        pJS.fn.interact.attractParticles = function(p1, p2) {\r\n\r\n            /* condensed particles */\r\n            var dx = p1.x - p2.x,\r\n                dy = p1.y - p2.y,\r\n                dist = Math.sqrt(dx * dx + dy * dy);\r\n\r\n            if (dist <= pJS.particles.line_linked.distance) {\r\n\r\n                var ax = dx / (pJS.particles.move.attract.rotateX * 1000),\r\n                    ay = dy / (pJS.particles.move.attract.rotateY * 1000);\r\n\r\n                p1.vx -= ax;\r\n                p1.vy -= ay;\r\n\r\n                p2.vx += ax;\r\n                p2.vy += ay;\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n        pJS.fn.interact.bounceParticles = function(p1, p2) {\r\n\r\n            var dx = p1.x - p2.x,\r\n                dy = p1.y - p2.y,\r\n                dist = Math.sqrt(dx * dx + dy * dy),\r\n                dist_p = p1.radius + p2.radius;\r\n\r\n            if (dist <= dist_p) {\r\n                p1.vx = -p1.vx;\r\n                p1.vy = -p1.vy;\r\n\r\n                p2.vx = -p2.vx;\r\n                p2.vy = -p2.vy;\r\n            }\r\n\r\n        }\r\n\r\n\r\n        /* ---------- pJS functions - modes events ------------ */\r\n\r\n        pJS.fn.modes.pushParticles = function(nb, pos) {\r\n\r\n            pJS.tmp.pushing = true;\r\n\r\n            for (var i = 0; i < nb; i++) {\r\n                pJS.particles.array.push(\r\n                    new pJS.fn.particle(\r\n                        pJS.particles.color,\r\n                        pJS.particles.opacity.value, {\r\n                            'x': pos ? pos.pos_x : Math.random() * pJS.canvas.w,\r\n                            'y': pos ? pos.pos_y : Math.random() * pJS.canvas.h\r\n                        }\r\n                    )\r\n                )\r\n                if (i == nb - 1) {\r\n                    if (!pJS.particles.move.enable) {\r\n                        pJS.fn.particlesDraw();\r\n                    }\r\n                    pJS.tmp.pushing = false;\r\n                }\r\n            }\r\n\r\n        };\r\n\r\n\r\n        pJS.fn.modes.removeParticles = function(nb) {\r\n\r\n            pJS.particles.array.splice(0, nb);\r\n            if (!pJS.particles.move.enable) {\r\n                pJS.fn.particlesDraw();\r\n            }\r\n\r\n        };\r\n\r\n\r\n        pJS.fn.modes.bubbleParticle = function(p) {\r\n\r\n            /* on hover event */\r\n            if (pJS.interactivity.events.onhover.enable && isInArray('bubble', pJS.interactivity.events.onhover.mode)) {\r\n\r\n                var dx_mouse = p.x - pJS.interactivity.mouse.pos_x,\r\n                    dy_mouse = p.y - pJS.interactivity.mouse.pos_y,\r\n                    dist_mouse = Math.sqrt(dx_mouse * dx_mouse + dy_mouse * dy_mouse),\r\n                    ratio = 1 - dist_mouse / pJS.interactivity.modes.bubble.distance;\r\n\r\n                function init() {\r\n                    p.opacity_bubble = p.opacity;\r\n                    p.radius_bubble = p.radius;\r\n                }\r\n\r\n                /* mousemove - check ratio */\r\n                if (dist_mouse <= pJS.interactivity.modes.bubble.distance) {\r\n\r\n                    if (ratio >= 0 && pJS.interactivity.status == 'mousemove') {\r\n\r\n                        /* size */\r\n                        if (pJS.interactivity.modes.bubble.size != pJS.particles.size.value) {\r\n\r\n                            if (pJS.interactivity.modes.bubble.size > pJS.particles.size.value) {\r\n                                var size = p.radius + (pJS.interactivity.modes.bubble.size * ratio);\r\n                                if (size >= 0) {\r\n                                    p.radius_bubble = size;\r\n                                }\r\n                            } else {\r\n                                var dif = p.radius - pJS.interactivity.modes.bubble.size,\r\n                                    size = p.radius - (dif * ratio);\r\n                                if (size > 0) {\r\n                                    p.radius_bubble = size;\r\n                                } else {\r\n                                    p.radius_bubble = 0;\r\n                                }\r\n                            }\r\n\r\n                        }\r\n\r\n                        /* opacity */\r\n                        if (pJS.interactivity.modes.bubble.opacity != pJS.particles.opacity.value) {\r\n\r\n                            if (pJS.interactivity.modes.bubble.opacity > pJS.particles.opacity.value) {\r\n                                var opacity = pJS.interactivity.modes.bubble.opacity * ratio;\r\n                                if (opacity > p.opacity && opacity <= pJS.interactivity.modes.bubble.opacity) {\r\n                                    p.opacity_bubble = opacity;\r\n                                }\r\n                            } else {\r\n                                var opacity = p.opacity - (pJS.particles.opacity.value - pJS.interactivity.modes.bubble.opacity) * ratio;\r\n                                if (opacity < p.opacity && opacity >= pJS.interactivity.modes.bubble.opacity) {\r\n                                    p.opacity_bubble = opacity;\r\n                                }\r\n                            }\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                } else {\r\n                    init();\r\n                }\r\n\r\n\r\n                /* mouseleave */\r\n                if (pJS.interactivity.status == 'mouseleave') {\r\n                    init();\r\n                }\r\n\r\n            }\r\n\r\n            /* on click event */\r\n            else if (pJS.interactivity.events.onclick.enable && isInArray('bubble', pJS.interactivity.events.onclick.mode)) {\r\n\r\n\r\n                if (pJS.tmp.bubble_clicking) {\r\n                    var dx_mouse = p.x - pJS.interactivity.mouse.click_pos_x,\r\n                        dy_mouse = p.y - pJS.interactivity.mouse.click_pos_y,\r\n                        dist_mouse = Math.sqrt(dx_mouse * dx_mouse + dy_mouse * dy_mouse),\r\n                        time_spent = (new Date().getTime() - pJS.interactivity.mouse.click_time) / 1000;\r\n\r\n                    if (time_spent > pJS.interactivity.modes.bubble.duration) {\r\n                        pJS.tmp.bubble_duration_end = true;\r\n                    }\r\n\r\n                    if (time_spent > pJS.interactivity.modes.bubble.duration * 2) {\r\n                        pJS.tmp.bubble_clicking = false;\r\n                        pJS.tmp.bubble_duration_end = false;\r\n                    }\r\n                }\r\n\r\n\r\n                function process(bubble_param, particles_param, p_obj_bubble, p_obj, id) {\r\n\r\n                    if (bubble_param != particles_param) {\r\n\r\n                        if (!pJS.tmp.bubble_duration_end) {\r\n                            if (dist_mouse <= pJS.interactivity.modes.bubble.distance) {\r\n                                if (p_obj_bubble != undefined) var obj = p_obj_bubble;\r\n                                else var obj = p_obj;\r\n                                if (obj != bubble_param) {\r\n                                    var value = p_obj - (time_spent * (p_obj - bubble_param) / pJS.interactivity.modes.bubble.duration);\r\n                                    if (id == 'size') p.radius_bubble = value;\r\n                                    if (id == 'opacity') p.opacity_bubble = value;\r\n                                }\r\n                            } else {\r\n                                if (id == 'size') p.radius_bubble = undefined;\r\n                                if (id == 'opacity') p.opacity_bubble = undefined;\r\n                            }\r\n                        } else {\r\n                            if (p_obj_bubble != undefined) {\r\n                                var value_tmp = p_obj - (time_spent * (p_obj - bubble_param) / pJS.interactivity.modes.bubble.duration),\r\n                                    dif = bubble_param - value_tmp;\r\n                                value = bubble_param + dif;\r\n                                if (id == 'size') p.radius_bubble = value;\r\n                                if (id == 'opacity') p.opacity_bubble = value;\r\n                            }\r\n                        }\r\n\r\n                    }\r\n\r\n                }\r\n\r\n                if (pJS.tmp.bubble_clicking) {\r\n                    /* size */\r\n                    process(pJS.interactivity.modes.bubble.size, pJS.particles.size.value, p.radius_bubble, p.radius, 'size');\r\n                    /* opacity */\r\n                    process(pJS.interactivity.modes.bubble.opacity, pJS.particles.opacity.value, p.opacity_bubble, p.opacity, 'opacity');\r\n                }\r\n\r\n            }\r\n\r\n        };\r\n\r\n\r\n        pJS.fn.modes.repulseParticle = function(p) {\r\n\r\n            if (pJS.interactivity.events.onhover.enable && isInArray('repulse', pJS.interactivity.events.onhover.mode) && pJS.interactivity.status == 'mousemove') {\r\n\r\n                var dx_mouse = p.x - pJS.interactivity.mouse.pos_x,\r\n                    dy_mouse = p.y - pJS.interactivity.mouse.pos_y,\r\n                    dist_mouse = Math.sqrt(dx_mouse * dx_mouse + dy_mouse * dy_mouse);\r\n\r\n                var normVec = { x: dx_mouse / dist_mouse, y: dy_mouse / dist_mouse },\r\n                    repulseRadius = pJS.interactivity.modes.repulse.distance,\r\n                    velocity = 100,\r\n                    repulseFactor = clamp((1 / repulseRadius) * (-1 * Math.pow(dist_mouse / repulseRadius, 2) + 1) * repulseRadius * velocity, 0, 50);\r\n\r\n                var pos = {\r\n                    x: p.x + normVec.x * repulseFactor,\r\n                    y: p.y + normVec.y * repulseFactor\r\n                }\r\n\r\n                if (pJS.particles.move.out_mode == 'bounce') {\r\n                    if (pos.x - p.radius > 0 && pos.x + p.radius < pJS.canvas.w) p.x = pos.x;\r\n                    if (pos.y - p.radius > 0 && pos.y + p.radius < pJS.canvas.h) p.y = pos.y;\r\n                } else {\r\n                    p.x = pos.x;\r\n                    p.y = pos.y;\r\n                }\r\n\r\n            } else if (pJS.interactivity.events.onclick.enable && isInArray('repulse', pJS.interactivity.events.onclick.mode)) {\r\n\r\n                if (!pJS.tmp.repulse_finish) {\r\n                    pJS.tmp.repulse_count++;\r\n                    if (pJS.tmp.repulse_count == pJS.particles.array.length) {\r\n                        pJS.tmp.repulse_finish = true;\r\n                    }\r\n                }\r\n\r\n                if (pJS.tmp.repulse_clicking) {\r\n\r\n                    var repulseRadius = Math.pow(pJS.interactivity.modes.repulse.distance / 6, 3);\r\n\r\n                    var dx = pJS.interactivity.mouse.click_pos_x - p.x,\r\n                        dy = pJS.interactivity.mouse.click_pos_y - p.y,\r\n                        d = dx * dx + dy * dy;\r\n\r\n                    var force = -repulseRadius / d * 1;\r\n\r\n                    function process() {\r\n\r\n                        var f = Math.atan2(dy, dx);\r\n                        p.vx = force * Math.cos(f);\r\n                        p.vy = force * Math.sin(f);\r\n\r\n                        if (pJS.particles.move.out_mode == 'bounce') {\r\n                            var pos = {\r\n                                x: p.x + p.vx,\r\n                                y: p.y + p.vy\r\n                            }\r\n                            if (pos.x + p.radius > pJS.canvas.w) p.vx = -p.vx;\r\n                            else if (pos.x - p.radius < 0) p.vx = -p.vx;\r\n                            if (pos.y + p.radius > pJS.canvas.h) p.vy = -p.vy;\r\n                            else if (pos.y - p.radius < 0) p.vy = -p.vy;\r\n                        }\r\n\r\n                    }\r\n\r\n                    // default\r\n                    if (d <= repulseRadius) {\r\n                        process();\r\n                    }\r\n\r\n                    // bang - slow motion mode\r\n                    // if(!pJS.tmp.repulse_finish){\r\n                    //   if(d <= repulseRadius){\r\n                    //     process();\r\n                    //   }\r\n                    // }else{\r\n                    //   process();\r\n                    // }\r\n\r\n\r\n                } else {\r\n\r\n                    if (pJS.tmp.repulse_clicking == false) {\r\n\r\n                        p.vx = p.vx_i;\r\n                        p.vy = p.vy_i;\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n\r\n        pJS.fn.modes.grabParticle = function(p) {\r\n\r\n            if (pJS.interactivity.events.onhover.enable && pJS.interactivity.status == 'mousemove') {\r\n\r\n                var dx_mouse = p.x - pJS.interactivity.mouse.pos_x,\r\n                    dy_mouse = p.y - pJS.interactivity.mouse.pos_y,\r\n                    dist_mouse = Math.sqrt(dx_mouse * dx_mouse + dy_mouse * dy_mouse);\r\n\r\n                /* draw a line between the cursor and the particle if the distance between them is under the config distance */\r\n                if (dist_mouse <= pJS.interactivity.modes.grab.distance) {\r\n\r\n                    var opacity_line = pJS.interactivity.modes.grab.line_linked.opacity - (dist_mouse / (1 / pJS.interactivity.modes.grab.line_linked.opacity)) / pJS.interactivity.modes.grab.distance;\r\n\r\n                    if (opacity_line > 0) {\r\n\r\n                        /* style */\r\n                        var color_line = pJS.particles.line_linked.color_rgb_line;\r\n                        pJS.canvas.ctx.strokeStyle = 'rgba(' + color_line.r + ',' + color_line.g + ',' + color_line.b + ',' + opacity_line + ')';\r\n                        pJS.canvas.ctx.lineWidth = pJS.particles.line_linked.width;\r\n                        //pJS.canvas.ctx.lineCap = 'round'; /* performance issue */\r\n\r\n                        /* path */\r\n                        pJS.canvas.ctx.beginPath();\r\n                        pJS.canvas.ctx.moveTo(p.x, p.y);\r\n                        pJS.canvas.ctx.lineTo(pJS.interactivity.mouse.pos_x, pJS.interactivity.mouse.pos_y);\r\n                        pJS.canvas.ctx.stroke();\r\n                        pJS.canvas.ctx.closePath();\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n        };\r\n\r\n\r\n\r\n        /* ---------- pJS functions - vendors ------------ */\r\n\r\n        pJS.fn.vendors.eventsListeners = function() {\r\n\r\n            /* events target element */\r\n            if (pJS.interactivity.detect_on == 'window') {\r\n                pJS.interactivity.el = window;\r\n            } else {\r\n                pJS.interactivity.el = pJS.canvas.el;\r\n                if (pJS.interactivity.el.parentNode && pJS.interactivity.el.parentNode.parentNode) {\r\n                    pJS.interactivity.el = pJS.interactivity.el.parentNode.parentNode;\r\n                }\r\n            }\r\n\r\n\r\n            /* detect mouse pos - on hover / click event */\r\n            if (pJS.interactivity.events.onhover.enable || pJS.interactivity.events.onclick.enable) {\r\n\r\n                /* el on mousemove */\r\n                pJS.interactivity.el.addEventListener('mousemove', function(e) {\r\n\r\n                    if (pJS.interactivity.el == window) {\r\n                        var pos_x = e.clientX,\r\n                            pos_y = e.clientY;\r\n                    } else {\r\n                        var pos_x = e.offsetX || e.clientX,\r\n                            pos_y = e.offsetY || e.clientY;\r\n                    }\r\n\r\n                    pJS.interactivity.mouse.pos_x = pos_x;\r\n                    pJS.interactivity.mouse.pos_y = pos_y;\r\n\r\n                    if (pJS.tmp.retina) {\r\n                        pJS.interactivity.mouse.pos_x *= pJS.canvas.pxratio;\r\n                        pJS.interactivity.mouse.pos_y *= pJS.canvas.pxratio;\r\n                    }\r\n\r\n                    pJS.interactivity.status = 'mousemove';\r\n\r\n                });\r\n\r\n                /* el on onmouseleave */\r\n                pJS.interactivity.el.addEventListener('mouseleave', function(e) {\r\n\r\n                    pJS.interactivity.mouse.pos_x = null;\r\n                    pJS.interactivity.mouse.pos_y = null;\r\n                    pJS.interactivity.status = 'mouseleave';\r\n\r\n                });\r\n\r\n            }\r\n\r\n            /* on click event */\r\n            if (pJS.interactivity.events.onclick.enable) {\r\n\r\n                pJS.interactivity.el.addEventListener('click', function() {\r\n\r\n                    pJS.interactivity.mouse.click_pos_x = pJS.interactivity.mouse.pos_x;\r\n                    pJS.interactivity.mouse.click_pos_y = pJS.interactivity.mouse.pos_y;\r\n                    pJS.interactivity.mouse.click_time = new Date().getTime();\r\n\r\n                    if (pJS.interactivity.events.onclick.enable) {\r\n\r\n                        switch (pJS.interactivity.events.onclick.mode) {\r\n\r\n                            case 'push':\r\n                                if (pJS.particles.move.enable) {\r\n                                    pJS.fn.modes.pushParticles(pJS.interactivity.modes.push.particles_nb, pJS.interactivity.mouse);\r\n                                } else {\r\n                                    if (pJS.interactivity.modes.push.particles_nb == 1) {\r\n                                        pJS.fn.modes.pushParticles(pJS.interactivity.modes.push.particles_nb, pJS.interactivity.mouse);\r\n                                    } else if (pJS.interactivity.modes.push.particles_nb > 1) {\r\n                                        pJS.fn.modes.pushParticles(pJS.interactivity.modes.push.particles_nb);\r\n                                    }\r\n                                }\r\n                                break;\r\n\r\n                            case 'remove':\r\n                                pJS.fn.modes.removeParticles(pJS.interactivity.modes.remove.particles_nb);\r\n                                break;\r\n\r\n                            case 'bubble':\r\n                                pJS.tmp.bubble_clicking = true;\r\n                                break;\r\n\r\n                            case 'repulse':\r\n                                pJS.tmp.repulse_clicking = true;\r\n                                pJS.tmp.repulse_count = 0;\r\n                                pJS.tmp.repulse_finish = false;\r\n                                setTimeout(function() {\r\n                                    pJS.tmp.repulse_clicking = false;\r\n                                }, pJS.interactivity.modes.repulse.duration * 1000)\r\n                                break;\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                });\r\n\r\n            }\r\n\r\n\r\n        };\r\n\r\n        pJS.fn.vendors.densityAutoParticles = function() {\r\n\r\n            if (pJS.particles.number.density.enable) {\r\n\r\n                /* calc area */\r\n                var area = pJS.canvas.el.width * pJS.canvas.el.height / 1000;\r\n                if (pJS.tmp.retina) {\r\n                    area = area / (pJS.canvas.pxratio * 2);\r\n                }\r\n\r\n                /* calc number of particles based on density area */\r\n                var nb_particles = area * pJS.particles.number.value / pJS.particles.number.density.value_area;\r\n\r\n                /* add or remove X particles */\r\n                var missing_particles = pJS.particles.array.length - nb_particles;\r\n                if (missing_particles < 0) pJS.fn.modes.pushParticles(Math.abs(missing_particles));\r\n                else pJS.fn.modes.removeParticles(missing_particles);\r\n\r\n            }\r\n\r\n        };\r\n\r\n\r\n        pJS.fn.vendors.checkOverlap = function(p1, position) {\r\n            for (var i = 0; i < pJS.particles.array.length; i++) {\r\n                var p2 = pJS.particles.array[i];\r\n\r\n                var dx = p1.x - p2.x,\r\n                    dy = p1.y - p2.y,\r\n                    dist = Math.sqrt(dx * dx + dy * dy);\r\n\r\n                if (dist <= p1.radius + p2.radius) {\r\n                    p1.x = position ? position.x : Math.random() * pJS.canvas.w;\r\n                    p1.y = position ? position.y : Math.random() * pJS.canvas.h;\r\n                    pJS.fn.vendors.checkOverlap(p1);\r\n                }\r\n            }\r\n        };\r\n\r\n\r\n        pJS.fn.vendors.createSvgImg = function(p) {\r\n\r\n            /* set color to svg element */\r\n            var svgXml = pJS.tmp.source_svg,\r\n                rgbHex = /#([0-9A-F]{3,6})/gi,\r\n                coloredSvgXml = svgXml.replace(rgbHex, function(m, r, g, b) {\r\n                    if (p.color.rgb) {\r\n                        var color_value = 'rgba(' + p.color.rgb.r + ',' + p.color.rgb.g + ',' + p.color.rgb.b + ',' + p.opacity + ')';\r\n                    } else {\r\n                        var color_value = 'hsla(' + p.color.hsl.h + ',' + p.color.hsl.s + '%,' + p.color.hsl.l + '%,' + p.opacity + ')';\r\n                    }\r\n                    return color_value;\r\n                });\r\n\r\n            /* prepare to create img with colored svg */\r\n            var svg = new Blob([coloredSvgXml], { type: 'image/svg+xml;charset=utf-8' }),\r\n                DOMURL = window.URL || window.webkitURL || window,\r\n                url = DOMURL.createObjectURL(svg);\r\n\r\n            /* create particle img obj */\r\n            var img = new Image();\r\n            img.addEventListener('load', function() {\r\n                p.img.obj = img;\r\n                p.img.loaded = true;\r\n                DOMURL.revokeObjectURL(url);\r\n                pJS.tmp.count_svg++;\r\n            });\r\n            img.src = url;\r\n\r\n        };\r\n\r\n\r\n        pJS.fn.vendors.destroypJS = function() {\r\n            cancelAnimationFrame(pJS.fn.drawAnimFrame);\r\n            canvas_el.remove();\r\n            pJSDom = null;\r\n        };\r\n\r\n\r\n        pJS.fn.vendors.drawShape = function(c, startX, startY, sideLength, sideCountNumerator, sideCountDenominator) {\r\n\r\n            // By Programming Thomas - https://programmingthomas.wordpress.com/2013/04/03/n-sided-shapes/\r\n            var sideCount = sideCountNumerator * sideCountDenominator;\r\n            var decimalSides = sideCountNumerator / sideCountDenominator;\r\n            var interiorAngleDegrees = (180 * (decimalSides - 2)) / decimalSides;\r\n            var interiorAngle = Math.PI - Math.PI * interiorAngleDegrees / 180; // convert to radians\r\n            c.save();\r\n            c.beginPath();\r\n            c.translate(startX, startY);\r\n            c.moveTo(0, 0);\r\n            for (var i = 0; i < sideCount; i++) {\r\n                c.lineTo(sideLength, 0);\r\n                c.translate(sideLength, 0);\r\n                c.rotate(interiorAngle);\r\n            }\r\n            //c.stroke();\r\n            c.fill();\r\n            c.restore();\r\n\r\n        };\r\n\r\n        pJS.fn.vendors.exportImg = function() {\r\n            window.open(pJS.canvas.el.toDataURL('image/png'), '_blank');\r\n        };\r\n\r\n\r\n        pJS.fn.vendors.loadImg = function(type) {\r\n\r\n            pJS.tmp.img_error = undefined;\r\n\r\n            if (pJS.particles.shape.image.src != '') {\r\n\r\n                if (type == 'svg') {\r\n\r\n                    var xhr = new XMLHttpRequest();\r\n                    xhr.open('GET', pJS.particles.shape.image.src);\r\n                    xhr.onreadystatechange = function(data) {\r\n                        if (xhr.readyState == 4) {\r\n                            if (xhr.status == 200) {\r\n                                pJS.tmp.source_svg = data.currentTarget.response;\r\n                                pJS.fn.vendors.checkBeforeDraw();\r\n                            } else {\r\n                                console.log('Error pJS - Image not found');\r\n                                pJS.tmp.img_error = true;\r\n                            }\r\n                        }\r\n                    }\r\n                    xhr.send();\r\n\r\n                } else {\r\n\r\n                    var img = new Image();\r\n                    img.addEventListener('load', function() {\r\n                        pJS.tmp.img_obj = img;\r\n                        pJS.fn.vendors.checkBeforeDraw();\r\n                    });\r\n                    img.src = pJS.particles.shape.image.src;\r\n\r\n                }\r\n\r\n            } else {\r\n                console.log('Error pJS - No image.src');\r\n                pJS.tmp.img_error = true;\r\n            }\r\n\r\n        };\r\n\r\n\r\n        pJS.fn.vendors.draw = function() {\r\n\r\n            if (pJS.particles.shape.type == 'image') {\r\n\r\n                if (pJS.tmp.img_type == 'svg') {\r\n\r\n                    if (pJS.tmp.count_svg >= pJS.particles.number.value) {\r\n                        pJS.fn.particlesDraw();\r\n                        if (!pJS.particles.move.enable) cancelRequestAnimFrame(pJS.fn.drawAnimFrame);\r\n                        else pJS.fn.drawAnimFrame = requestAnimFrame(pJS.fn.vendors.draw);\r\n                    } else {\r\n                        //console.log('still loading...');\r\n                        if (!pJS.tmp.img_error) pJS.fn.drawAnimFrame = requestAnimFrame(pJS.fn.vendors.draw);\r\n                    }\r\n\r\n                } else {\r\n\r\n                    if (pJS.tmp.img_obj != undefined) {\r\n                        pJS.fn.particlesDraw();\r\n                        if (!pJS.particles.move.enable) cancelRequestAnimFrame(pJS.fn.drawAnimFrame);\r\n                        else pJS.fn.drawAnimFrame = requestAnimFrame(pJS.fn.vendors.draw);\r\n                    } else {\r\n                        if (!pJS.tmp.img_error) pJS.fn.drawAnimFrame = requestAnimFrame(pJS.fn.vendors.draw);\r\n                    }\r\n\r\n                }\r\n\r\n            } else {\r\n                pJS.fn.particlesDraw();\r\n                if (!pJS.particles.move.enable) cancelRequestAnimFrame(pJS.fn.drawAnimFrame);\r\n                else pJS.fn.drawAnimFrame = requestAnimFrame(pJS.fn.vendors.draw);\r\n            }\r\n\r\n        };\r\n\r\n\r\n        pJS.fn.vendors.checkBeforeDraw = function() {\r\n\r\n            // if shape is image\r\n            if (pJS.particles.shape.type == 'image') {\r\n\r\n                if (pJS.tmp.img_type == 'svg' && pJS.tmp.source_svg == undefined) {\r\n                    pJS.tmp.checkAnimFrame = requestAnimFrame(check);\r\n                } else {\r\n                    //console.log('images loaded! cancel check');\r\n                    cancelRequestAnimFrame(pJS.tmp.checkAnimFrame);\r\n                    if (!pJS.tmp.img_error) {\r\n                        pJS.fn.vendors.init();\r\n                        pJS.fn.vendors.draw();\r\n                    }\r\n\r\n                }\r\n\r\n            } else {\r\n                pJS.fn.vendors.init();\r\n                pJS.fn.vendors.draw();\r\n            }\r\n\r\n        };\r\n\r\n\r\n        pJS.fn.vendors.init = function() {\r\n\r\n            /* init canvas + particles */\r\n            pJS.fn.retinaInit();\r\n            pJS.fn.canvasInit();\r\n            pJS.fn.canvasSize();\r\n            pJS.fn.canvasPaint();\r\n            pJS.fn.particlesCreate();\r\n            pJS.fn.vendors.densityAutoParticles();\r\n\r\n            /* particles.line_linked - convert hex colors to rgb */\r\n            pJS.particles.line_linked.color_rgb_line = hexToRgb(pJS.particles.line_linked.color);\r\n\r\n        };\r\n\r\n\r\n        pJS.fn.vendors.start = function() {\r\n\r\n            if (isInArray('image', pJS.particles.shape.type)) {\r\n                pJS.tmp.img_type = pJS.particles.shape.image.src.substr(pJS.particles.shape.image.src.length - 3);\r\n                pJS.fn.vendors.loadImg(pJS.tmp.img_type);\r\n            } else {\r\n                pJS.fn.vendors.checkBeforeDraw();\r\n            }\r\n\r\n        };\r\n\r\n        pJS.fn.vendors.startAnimation = function() {\r\n            requestAnimFrame(pJS.fn.vendors.draw);\r\n        };\r\n\r\n        pJS.fn.vendors.stopAnimation = function() {\r\n            cancelRequestAnimFrame(pJS.fn.drawAnimFrame);\r\n            pJSDom = pJSDom || [];\r\n            for (var i = 0, len = pJSDom.length; i < len; i++) {\r\n                if (pJSDom[i].pJS.fn.vendors === this) {\r\n                    pJSDom.splice(i, 1);\r\n                }\r\n            }\r\n        };\r\n\r\n        /* ---------- pJS - start ------------ */\r\n\r\n\r\n        pJS.fn.vendors.eventsListeners();\r\n\r\n        pJS.fn.vendors.start();\r\n    };\r\n\r\n    /* ---------- global functions - vendors ------------ */\r\n\r\n    Object.deepExtend = function(destination, source) {\r\n        for (var property in source) {\r\n            if (source[property] && source[property].constructor &&\r\n                source[property].constructor === Object) {\r\n                destination[property] = destination[property] || {};\r\n                arguments.callee(destination[property], source[property]);\r\n            } else {\r\n                destination[property] = source[property];\r\n            }\r\n        }\r\n        return destination;\r\n    };\r\n\r\n    window.requestAnimFrame = (function() {\r\n        return window.requestAnimationFrame ||\r\n            window.webkitRequestAnimationFrame ||\r\n            window.mozRequestAnimationFrame ||\r\n            window.oRequestAnimationFrame ||\r\n            window.msRequestAnimationFrame ||\r\n            function(callback) {\r\n                window.setTimeout(callback, 1000 / 60);\r\n            };\r\n    })();\r\n\r\n    window.cancelRequestAnimFrame = (function() {\r\n        return window.cancelAnimationFrame ||\r\n            window.webkitCancelRequestAnimationFrame ||\r\n            window.mozCancelRequestAnimationFrame ||\r\n            window.oCancelRequestAnimationFrame ||\r\n            window.msCancelRequestAnimationFrame ||\r\n            clearTimeout\r\n    })();\r\n\r\n    function hexToRgb(hex) {\r\n        // By Tim Down - http://stackoverflow.com/a/5624139/3493650\r\n        // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\r\n        var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\r\n        hex = hex.replace(shorthandRegex, function(m, r, g, b) {\r\n            return r + r + g + g + b + b;\r\n        });\r\n        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n        return result ? {\r\n            r: parseInt(result[1], 16),\r\n            g: parseInt(result[2], 16),\r\n            b: parseInt(result[3], 16)\r\n        } : null;\r\n    };\r\n\r\n    function clamp(number, min, max) {\r\n        return Math.min(Math.max(number, min), max);\r\n    };\r\n\r\n    function isInArray(value, array) {\r\n        return array.indexOf(value) > -1;\r\n    }\r\n\r\n\r\n    /* ---------- particles.js functions - start ------------ */\r\n\r\n    var pJSDom = [];\r\n\r\n    var particlesJS = function(tag_id, params) {\r\n\r\n        //console.log(params);\r\n\r\n        /* no string id? so it's object params, and set the id with default id */\r\n        if (typeof(tag_id) != 'string') {\r\n            params = tag_id;\r\n            tag_id = 'particles-js';\r\n        }\r\n\r\n        /* no id? set the id to default id */\r\n        if (!tag_id) {\r\n            tag_id = 'particles-js';\r\n        }\r\n\r\n        /* pJS elements */\r\n        var pJS_tag = document.getElementById(tag_id),\r\n            pJS_canvas_class = 'particles-js-canvas-el',\r\n            exist_canvas = pJS_tag.getElementsByClassName(pJS_canvas_class);\r\n\r\n        /* remove canvas if exists into the pJS target tag */\r\n        if (exist_canvas.length) {\r\n            while (exist_canvas.length > 0) {\r\n                pJS_tag.removeChild(exist_canvas[0]);\r\n            }\r\n        }\r\n\r\n        /* create canvas element */\r\n        var canvas_el = document.createElement('canvas');\r\n        canvas_el.className = pJS_canvas_class;\r\n\r\n        /* set size canvas */\r\n        canvas_el.style.width = \"100%\";\r\n        canvas_el.style.height = \"100%\";\r\n\r\n        /* append canvas */\r\n        var canvas = document.getElementById(tag_id).appendChild(canvas_el);\r\n\r\n        /* launch particle.js */\r\n        var pjs = new pJS(tag_id, params);\r\n        if (canvas != null) {\r\n            pJSDom.push(pjs);\r\n        }\r\n        return pjs.pJS;\r\n\r\n    };\r\n\r\n    function particles(tag_id, data, callback) {\r\n        var pjs = particlesJS(tag_id, data || jsonData);\r\n        if (callback) callback();\r\n        return pjs;\r\n    };\r\n\r\n    return skylark.attach(\"intg.particles\",particles);\r\n});\r\n\ndefine('skylark-particles/main',[\"./particles\"],function(particles){\r\n\treturn particles;\r\n});\ndefine('skylark-particles', ['skylark-particles/main'], function (main) { return main; });\n\n"]}