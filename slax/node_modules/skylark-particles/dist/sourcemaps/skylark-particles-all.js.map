{"version":3,"sources":["skylark-particles-all.js"],"names":["define","obj1","path","obj2","split","length","ns","i","name","_attach","skylark","attach","obj","main","jsonData","particles","number","value","density","enable","value_area","color","shape","type","stroke","width","polygon","nb_sides","image","src","height","opacity","random","anim","speed","opacity_min","sync","size","size_min","line_linked","distance","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","grab","bubble","duration","repulse","push","particles_nb","remove","retina_detect","test","navigator","userAgent","pJS","tag_id","params","canvas_el","document","querySelector","this","canvas","el","w","offsetWidth","h","offsetHeight","array","mouse","fn","interact","vendors","tmp","Object","deepExtend","size_value","size_anim_speed","move_speed","line_linked_distance","line_linked_width","mode_grab_distance","mode_bubble_distance","mode_bubble_size","mode_repulse_distance","retinaInit","window","devicePixelRatio","pxratio","retina","canvasInit","ctx","getContext","canvasSize","addEventListener","particlesEmpty","particlesCreate","particlesDraw","densityAutoParticles","canvasPaint","fillRect","canvasClear","clearRect","particle","position","radius","Math","size_status","vs","x","y","checkOverlap","Array","color_selected","floor","rgb","hexToRgb","undefined","r","g","b","s","l","hsl","opacity_status","vo","velbase","vx","vy","vx_i","vy_i","shape_type","shape_selected","sh","img","ratio","img_type","source_svg","createSvgImg","pushing","loaded","prototype","draw","p","radius_bubble","opacity_bubble","color_value","fillStyle","beginPath","arc","PI","rect","drawShape","img_obj","drawImage","closePath","strokeStyle","lineWidth","fill","particlesUpdate","ms","new_pos","x_left","x_right","y_top","y_bottom","isInArray","grabParticle","bubbleParticle","repulseParticle","j","p2","linkParticles","attractParticles","bounceParticles","particlesRefresh","cancelRequestAnimFrame","checkAnimFrame","drawAnimFrame","count_svg","start","p1","dx","dy","dist","sqrt","opacity_line","color_line","color_rgb_line","moveTo","lineTo","ax","ay","dist_p","pushParticles","nb","pos","pos_x","pos_y","removeParticles","splice","dx_mouse","dy_mouse","dist_mouse","init","status","dif","bubble_clicking","click_pos_x","click_pos_y","time_spent","Date","getTime","click_time","bubble_duration_end","process","bubble_param","particles_param","p_obj_bubble","p_obj","id","value_tmp","normVec","repulseRadius","repulseFactor","pow","min","max","repulse_finish","repulse_count","repulse_clicking","d","force","f","atan2","cos","sin","eventsListeners","parentNode","e","clientX","clientY","offsetX","offsetY","setTimeout","area","nb_particles","missing_particles","abs","svgXml","coloredSvgXml","replace","m","svg","Blob","DOMURL","URL","webkitURL","url","createObjectURL","Image","revokeObjectURL","destroypJS","cancelAnimationFrame","pJSDom","c","startX","startY","sideLength","sideCountNumerator","sideCountDenominator","sideCount","decimalSides","interiorAngleDegrees","interiorAngle","save","translate","rotate","restore","exportImg","open","toDataURL","loadImg","img_error","xhr","XMLHttpRequest","onreadystatechange","data","readyState","currentTarget","response","checkBeforeDraw","console","log","send","requestAnimFrame","check","substr","startAnimation","stopAnimation","len","hex","result","exec","parseInt","indexOf","destination","source","property","constructor","arguments","callee","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","webkitCancelRequestAnimationFrame","mozCancelRequestAnimationFrame","oCancelRequestAnimationFrame","msCancelRequestAnimationFrame","clearTimeout","particlesJS","pJS_tag","getElementById","exist_canvas","getElementsByClassName","removeChild","createElement","className","style","appendChild","pjs"],"mappings":"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","file":"../skylark-particles-all.js","sourcesContent":["define('skylark-langx-ns/_attach',[],function(){\r\n    return  function attach(obj1,path,obj2) {\r\n        if (typeof path == \"string\") {\r\n            path = path.split(\".\");//[path]\r\n        };\r\n        var length = path.length,\r\n            ns=obj1,\r\n            i=0,\r\n            name = path[i++];\r\n\r\n        while (i < length) {\r\n            ns = ns[name] = ns[name] || {};\r\n            name = path[i++];\r\n        }\r\n\r\n        return ns[name] = obj2;\r\n    }\r\n});\ndefine('skylark-langx-ns/ns',[\r\n    \"./_attach\"\r\n], function(_attach) {\r\n    var skylark = {\r\n    \tattach : function(path,obj) {\r\n    \t\treturn _attach(skylark,path,obj);\r\n    \t}\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-langx-ns/main',[\r\n\t\"./ns\"\r\n],function(skylark){\r\n\treturn skylark;\r\n});\ndefine('skylark-langx-ns', ['skylark-langx-ns/main'], function (main) { return main; });\n\n/* -----------------------------------------------\r\n/* Author : Vincent Garreau  - vincentgarreau.com\r\n/* MIT license: http://opensource.org/licenses/MIT\r\n/* Demo / Generator : vincentgarreau.com/particles.js\r\n/* GitHub : github.com/VincentGarreau/particles.js\r\n/* How to use? : Check the GitHub README\r\n/* v2.0.0\r\n/* ----------------------------------------------- */\r\ndefine('skylark-particles/particles',[\r\n    \"skylark-langx-ns\"\r\n], function(skylark) {\r\n    var shapeSize = { w: 100, h: 100 },\r\n        number = { v: 80, d: 800 },\r\n        size = { v: 3, s: 30 },\r\n        moveSpeed = 3;\r\n\r\n    var jsonData = {\r\n        \"particles\": {\r\n            \"number\": { \"value\": 80, \"density\": { \"enable\": true, \"value_area\": 800 } },\r\n            \"color\": { \"value\": \"#ffffff\" },\r\n            \"shape\": { \"type\": \"circle\", \"stroke\": { \"width\": 0, \"color\": \"#000000\" }, \"polygon\": { \"nb_sides\": 6 }, \"image\": { \"src\": \"img/github.svg\", \"width\": 100, \"height\": 100 } },\r\n            \"opacity\": { \"value\": 0.5, \"random\": false, \"anim\": { \"enable\": false, \"speed\": 0.5, \"opacity_min\": 0.1, \"sync\": false } },\r\n            \"size\": { \"value\": 3, \"random\": true, \"anim\": { \"enable\": false, \"speed\": 30, \"size_min\": 0.1, \"sync\": false } },\r\n            \"line_linked\": { \"enable\": true, \"distance\": 150, \"color\": \"#ffffff\", \"opacity\": 0.4, \"width\": 1 },\r\n            \"move\": { \"enable\": true, \"speed\": 3, \"direction\": \"none\", \"random\": false, \"straight\": false, \"out_mode\": \"out\", \"bounce\": false, \"attract\": { \"enable\": false, \"rotateX\": 600, \"rotateY\": 1200 } }\r\n        },\r\n        \"interactivity\": {\r\n            \"detect_on\": \"canvas\",\r\n            \"events\": {\r\n                \"onhover\": { \"enable\": true, \"mode\": \"repulse\" },\r\n                \"onclick\": { \"enable\": false, \"mode\": \"push\" },\r\n                \"resize\": true\r\n            },\r\n            \"modes\": {\r\n                \"grab\": { \"distance\": 400, \"line_linked\": { \"opacity\": 1 } },\r\n                \"bubble\": { \"distance\": 400, \"size\": 40, \"duration\": 2, \"opacity\": 8, \"speed\": 3 },\r\n                \"repulse\": { \"distance\": 200, \"duration\": 0.4 },\r\n                \"push\": { \"particles_nb\": 4 },\r\n                \"remove\": { \"particles_nb\": 2 }\r\n            }\r\n        },\r\n        \"retina_detect\": true\r\n    };\r\n    if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\r\n         jsonData = {\r\n        \"particles\": {\r\n            \"number\": { \"value\": 10, \"density\": { \"enable\": true, \"value_area\": 100 } },\r\n            \"color\": { \"value\": \"#ffffff\" },\r\n            \"shape\": { \"type\": \"circle\", \"stroke\": { \"width\": 0, \"color\": \"#000000\" }, \"polygon\": { \"nb_sides\": 6 }, \"image\": { \"src\": \"img/github.svg\", \"width\": 50, \"height\": 50 } },\r\n            \"opacity\": { \"value\": 0.5, \"random\": false, \"anim\": { \"enable\": false, \"speed\": 0.5, \"opacity_min\": 0.1, \"sync\": false } },\r\n            \"size\": { \"value\": 1, \"random\": true, \"anim\": { \"enable\": false, \"speed\": 10, \"size_min\": 0.1, \"sync\": false } },\r\n            \"line_linked\": { \"enable\": true, \"distance\": 80, \"color\": \"#ffffff\", \"opacity\": 0.6, \"width\": 1 },\r\n            \"move\": { \"enable\": true, \"speed\": 3, \"direction\": \"none\", \"random\": false, \"straight\": false, \"out_mode\": \"out\", \"bounce\": false, \"attract\": { \"enable\": false, \"rotateX\": 600, \"rotateY\": 1200 } }\r\n        },\r\n        \"interactivity\": {\r\n            \"detect_on\": \"canvas\",\r\n            \"events\": {\r\n                \"onhover\": { \"enable\": true, \"mode\": \"repulse\" },\r\n                \"onclick\": { \"enable\": false, \"mode\": \"push\" },\r\n                \"resize\": true\r\n            },\r\n            \"modes\": {\r\n                \"grab\": { \"distance\": 100, \"line_linked\": { \"opacity\": 1 } },\r\n                \"bubble\": { \"distance\": 100, \"size\": 10, \"duration\": 2, \"opacity\": 8, \"speed\": 1 },\r\n                \"repulse\": { \"distance\": 100, \"duration\": 0.4 },\r\n                \"push\": { \"particles_nb\": 8 },\r\n                \"remove\": { \"particles_nb\": 2 }\r\n            }\r\n        },\r\n        \"retina_detect\": true\r\n    };\r\n    }\r\n    var pJS = function(tag_id, params) {\r\n\r\n        var canvas_el = document.querySelector('#' + tag_id + ' > .particles-js-canvas-el');\r\n\r\n        /* particles.js variables with default values */\r\n        this.pJS = {\r\n            canvas: {\r\n                el: canvas_el,\r\n                w: canvas_el.offsetWidth,\r\n                h: canvas_el.offsetHeight\r\n            },\r\n            particles: {\r\n                number: {\r\n                    value: 400,\r\n                    density: {\r\n                        enable: true,\r\n                        value_area: 800\r\n                    }\r\n                },\r\n                color: {\r\n                    value: '#fff'\r\n                },\r\n                shape: {\r\n                    type: 'circle',\r\n                    stroke: {\r\n                        width: 0,\r\n                        color: '#ff0000'\r\n                    },\r\n                    polygon: {\r\n                        nb_sides: 5\r\n                    },\r\n                    image: {\r\n                        src: '',\r\n                        width: 100,\r\n                        height: 100\r\n                    }\r\n                },\r\n                opacity: {\r\n                    value: 1,\r\n                    random: false,\r\n                    anim: {\r\n                        enable: false,\r\n                        speed: 2,\r\n                        opacity_min: 0,\r\n                        sync: false\r\n                    }\r\n                },\r\n                size: {\r\n                    value: 20,\r\n                    random: false,\r\n                    anim: {\r\n                        enable: false,\r\n                        speed: 20,\r\n                        size_min: 0,\r\n                        sync: false\r\n                    }\r\n                },\r\n                line_linked: {\r\n                    enable: true,\r\n                    distance: 100,\r\n                    color: '#fff',\r\n                    opacity: 1,\r\n                    width: 1\r\n                },\r\n                move: {\r\n                    enable: true,\r\n                    speed: 2,\r\n                    direction: 'none',\r\n                    random: false,\r\n                    straight: false,\r\n                    out_mode: 'out',\r\n                    bounce: false,\r\n                    attract: {\r\n                        enable: false,\r\n                        rotateX: 3000,\r\n                        rotateY: 3000\r\n                    }\r\n                },\r\n                array: []\r\n            },\r\n            interactivity: {\r\n                detect_on: 'canvas',\r\n                events: {\r\n                    onhover: {\r\n                        enable: true,\r\n                        mode: 'grab'\r\n                    },\r\n                    onclick: {\r\n                        enable: true,\r\n                        mode: 'push'\r\n                    },\r\n                    resize: true\r\n                },\r\n                modes: {\r\n                    grab: {\r\n                        distance: 100,\r\n                        line_linked: {\r\n                            opacity: 1\r\n                        }\r\n                    },\r\n                    bubble: {\r\n                        distance: 200,\r\n                        size: 80,\r\n                        duration: 0.4\r\n                    },\r\n                    repulse: {\r\n                        distance: 200,\r\n                        duration: 0.4\r\n                    },\r\n                    push: {\r\n                        particles_nb: 4\r\n                    },\r\n                    remove: {\r\n                        particles_nb: 2\r\n                    }\r\n                },\r\n                mouse: {}\r\n            },\r\n            retina_detect: false,\r\n            fn: {\r\n                interact: {},\r\n                modes: {},\r\n                vendors: {}\r\n            },\r\n            tmp: {}\r\n        };\r\n\r\n        var pJS = this.pJS;\r\n\r\n        /* params settings */\r\n        if (params) {\r\n            Object.deepExtend(pJS, params);\r\n        }\r\n\r\n        pJS.tmp.obj = {\r\n            size_value: pJS.particles.size.value,\r\n            size_anim_speed: pJS.particles.size.anim.speed,\r\n            move_speed: pJS.particles.move.speed,\r\n            line_linked_distance: pJS.particles.line_linked.distance,\r\n            line_linked_width: pJS.particles.line_linked.width,\r\n            mode_grab_distance: pJS.interactivity.modes.grab.distance,\r\n            mode_bubble_distance: pJS.interactivity.modes.bubble.distance,\r\n            mode_bubble_size: pJS.interactivity.modes.bubble.size,\r\n            mode_repulse_distance: pJS.interactivity.modes.repulse.distance\r\n        };\r\n\r\n\r\n        pJS.fn.retinaInit = function() {\r\n\r\n            if (pJS.retina_detect && window.devicePixelRatio > 1) {\r\n                pJS.canvas.pxratio = window.devicePixelRatio;\r\n                pJS.tmp.retina = true;\r\n            } else {\r\n                pJS.canvas.pxratio = 1;\r\n                pJS.tmp.retina = false;\r\n            }\r\n\r\n            pJS.canvas.w = pJS.canvas.el.offsetWidth * pJS.canvas.pxratio;\r\n            pJS.canvas.h = pJS.canvas.el.offsetHeight * pJS.canvas.pxratio;\r\n\r\n            pJS.particles.size.value = pJS.tmp.obj.size_value * pJS.canvas.pxratio;\r\n            pJS.particles.size.anim.speed = pJS.tmp.obj.size_anim_speed * pJS.canvas.pxratio;\r\n            pJS.particles.move.speed = pJS.tmp.obj.move_speed * pJS.canvas.pxratio;\r\n            pJS.particles.line_linked.distance = pJS.tmp.obj.line_linked_distance * pJS.canvas.pxratio;\r\n            pJS.interactivity.modes.grab.distance = pJS.tmp.obj.mode_grab_distance * pJS.canvas.pxratio;\r\n            pJS.interactivity.modes.bubble.distance = pJS.tmp.obj.mode_bubble_distance * pJS.canvas.pxratio;\r\n            pJS.particles.line_linked.width = pJS.tmp.obj.line_linked_width * pJS.canvas.pxratio;\r\n            pJS.interactivity.modes.bubble.size = pJS.tmp.obj.mode_bubble_size * pJS.canvas.pxratio;\r\n            pJS.interactivity.modes.repulse.distance = pJS.tmp.obj.mode_repulse_distance * pJS.canvas.pxratio;\r\n\r\n        };\r\n\r\n\r\n\r\n        /* ---------- pJS functions - canvas ------------ */\r\n\r\n        pJS.fn.canvasInit = function() {\r\n            pJS.canvas.ctx = pJS.canvas.el.getContext('2d');\r\n        };\r\n\r\n        pJS.fn.canvasSize = function() {\r\n\r\n            pJS.canvas.el.width = pJS.canvas.w;\r\n            pJS.canvas.el.height = pJS.canvas.h;\r\n\r\n            if (pJS && pJS.interactivity.events.resize) {\r\n\r\n                window.addEventListener('resize', function() {\r\n\r\n                    pJS.canvas.w = pJS.canvas.el.offsetWidth;\r\n                    pJS.canvas.h = pJS.canvas.el.offsetHeight;\r\n\r\n                    /* resize canvas */\r\n                    if (pJS.tmp.retina) {\r\n                        pJS.canvas.w *= pJS.canvas.pxratio;\r\n                        pJS.canvas.h *= pJS.canvas.pxratio;\r\n                    }\r\n\r\n                    pJS.canvas.el.width = pJS.canvas.w;\r\n                    pJS.canvas.el.height = pJS.canvas.h;\r\n\r\n                    /* repaint canvas on anim disabled */\r\n                    if (!pJS.particles.move.enable) {\r\n                        pJS.fn.particlesEmpty();\r\n                        pJS.fn.particlesCreate();\r\n                        pJS.fn.particlesDraw();\r\n                        pJS.fn.vendors.densityAutoParticles();\r\n                    }\r\n\r\n                    /* density particles enabled */\r\n                    pJS.fn.vendors.densityAutoParticles();\r\n\r\n                });\r\n\r\n            }\r\n\r\n        };\r\n\r\n\r\n        pJS.fn.canvasPaint = function() {\r\n            pJS.canvas.ctx.fillRect(0, 0, pJS.canvas.w, pJS.canvas.h);\r\n        };\r\n\r\n        pJS.fn.canvasClear = function() {\r\n            pJS.canvas.ctx.clearRect(0, 0, pJS.canvas.w, pJS.canvas.h);\r\n        };\r\n\r\n\r\n        /* --------- pJS functions - particles ----------- */\r\n\r\n        pJS.fn.particle = function(color, opacity, position) {\r\n\r\n            /* size */\r\n            this.radius = (pJS.particles.size.random ? Math.random() : 1) * pJS.particles.size.value;\r\n            if (pJS.particles.size.anim.enable) {\r\n                this.size_status = false;\r\n                this.vs = pJS.particles.size.anim.speed / 100;\r\n                if (!pJS.particles.size.anim.sync) {\r\n                    this.vs = this.vs * Math.random();\r\n                }\r\n            }\r\n\r\n            /* position */\r\n            this.x = position ? position.x : Math.random() * pJS.canvas.w;\r\n            this.y = position ? position.y : Math.random() * pJS.canvas.h;\r\n\r\n            /* check position  - into the canvas */\r\n            if (this.x > pJS.canvas.w - this.radius * 2) this.x = this.x - this.radius;\r\n            else if (this.x < this.radius * 2) this.x = this.x + this.radius;\r\n            if (this.y > pJS.canvas.h - this.radius * 2) this.y = this.y - this.radius;\r\n            else if (this.y < this.radius * 2) this.y = this.y + this.radius;\r\n\r\n            /* check position - avoid overlap */\r\n            if (pJS.particles.move.bounce) {\r\n                pJS.fn.vendors.checkOverlap(this, position);\r\n            }\r\n\r\n            /* color */\r\n            this.color = {};\r\n            if (typeof(color.value) == 'object') {\r\n\r\n                if (color.value instanceof Array) {\r\n                    var color_selected = color.value[Math.floor(Math.random() * pJS.particles.color.value.length)];\r\n                    this.color.rgb = hexToRgb(color_selected);\r\n                } else {\r\n                    if (color.value.r != undefined && color.value.g != undefined && color.value.b != undefined) {\r\n                        this.color.rgb = {\r\n                            r: color.value.r,\r\n                            g: color.value.g,\r\n                            b: color.value.b\r\n                        }\r\n                    }\r\n                    if (color.value.h != undefined && color.value.s != undefined && color.value.l != undefined) {\r\n                        this.color.hsl = {\r\n                            h: color.value.h,\r\n                            s: color.value.s,\r\n                            l: color.value.l\r\n                        }\r\n                    }\r\n                }\r\n\r\n            } else if (color.value == 'random') {\r\n                this.color.rgb = {\r\n                    r: (Math.floor(Math.random() * (255 - 0 + 1)) + 0),\r\n                    g: (Math.floor(Math.random() * (255 - 0 + 1)) + 0),\r\n                    b: (Math.floor(Math.random() * (255 - 0 + 1)) + 0)\r\n                }\r\n            } else if (typeof(color.value) == 'string') {\r\n                this.color = color;\r\n                this.color.rgb = hexToRgb(this.color.value);\r\n            }\r\n\r\n            /* opacity */\r\n            this.opacity = (pJS.particles.opacity.random ? Math.random() : 1) * pJS.particles.opacity.value;\r\n            if (pJS.particles.opacity.anim.enable) {\r\n                this.opacity_status = false;\r\n                this.vo = pJS.particles.opacity.anim.speed / 100;\r\n                if (!pJS.particles.opacity.anim.sync) {\r\n                    this.vo = this.vo * Math.random();\r\n                }\r\n            }\r\n\r\n            /* animation - velocity for speed */\r\n            var velbase = {}\r\n            switch (pJS.particles.move.direction) {\r\n                case 'top':\r\n                    velbase = { x: 0, y: -1 };\r\n                    break;\r\n                case 'top-right':\r\n                    velbase = { x: 0.5, y: -0.5 };\r\n                    break;\r\n                case 'right':\r\n                    velbase = { x: 1, y: -0 };\r\n                    break;\r\n                case 'bottom-right':\r\n                    velbase = { x: 0.5, y: 0.5 };\r\n                    break;\r\n                case 'bottom':\r\n                    velbase = { x: 0, y: 1 };\r\n                    break;\r\n                case 'bottom-left':\r\n                    velbase = { x: -0.5, y: 1 };\r\n                    break;\r\n                case 'left':\r\n                    velbase = { x: -1, y: 0 };\r\n                    break;\r\n                case 'top-left':\r\n                    velbase = { x: -0.5, y: -0.5 };\r\n                    break;\r\n                default:\r\n                    velbase = { x: 0, y: 0 };\r\n                    break;\r\n            }\r\n\r\n            if (pJS.particles.move.straight) {\r\n                this.vx = velbase.x;\r\n                this.vy = velbase.y;\r\n                if (pJS.particles.move.random) {\r\n                    this.vx = this.vx * (Math.random());\r\n                    this.vy = this.vy * (Math.random());\r\n                }\r\n            } else {\r\n                this.vx = velbase.x + Math.random() - 0.5;\r\n                this.vy = velbase.y + Math.random() - 0.5;\r\n            }\r\n\r\n            // var theta = 2.0 * Math.PI * Math.random();\r\n            // this.vx = Math.cos(theta);\r\n            // this.vy = Math.sin(theta);\r\n\r\n            this.vx_i = this.vx;\r\n            this.vy_i = this.vy;\r\n\r\n\r\n\r\n            /* if shape is image */\r\n\r\n            var shape_type = pJS.particles.shape.type;\r\n            if (typeof(shape_type) == 'object') {\r\n                if (shape_type instanceof Array) {\r\n                    var shape_selected = shape_type[Math.floor(Math.random() * shape_type.length)];\r\n                    this.shape = shape_selected;\r\n                }\r\n            } else {\r\n                this.shape = shape_type;\r\n            }\r\n\r\n            if (this.shape == 'image') {\r\n                var sh = pJS.particles.shape;\r\n                this.img = {\r\n                    src: sh.image.src,\r\n                    ratio: sh.image.width / sh.image.height\r\n                }\r\n                if (!this.img.ratio) this.img.ratio = 1;\r\n                if (pJS.tmp.img_type == 'svg' && pJS.tmp.source_svg != undefined) {\r\n                    pJS.fn.vendors.createSvgImg(this);\r\n                    if (pJS.tmp.pushing) {\r\n                        this.img.loaded = false;\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n\r\n        };\r\n\r\n\r\n        pJS.fn.particle.prototype.draw = function() {\r\n\r\n            var p = this;\r\n\r\n            if (p.radius_bubble != undefined) {\r\n                var radius = p.radius_bubble;\r\n            } else {\r\n                var radius = p.radius;\r\n            }\r\n\r\n            if (p.opacity_bubble != undefined) {\r\n                var opacity = p.opacity_bubble;\r\n            } else {\r\n                var opacity = p.opacity;\r\n            }\r\n\r\n            if (p.color.rgb) {\r\n                var color_value = 'rgba(' + p.color.rgb.r + ',' + p.color.rgb.g + ',' + p.color.rgb.b + ',' + opacity + ')';\r\n            } else {\r\n                var color_value = 'hsla(' + p.color.hsl.h + ',' + p.color.hsl.s + '%,' + p.color.hsl.l + '%,' + opacity + ')';\r\n            }\r\n\r\n            pJS.canvas.ctx.fillStyle = color_value;\r\n            pJS.canvas.ctx.beginPath();\r\n\r\n            switch (p.shape) {\r\n\r\n                case 'circle':\r\n                    pJS.canvas.ctx.arc(p.x, p.y, radius, 0, Math.PI * 2, false);\r\n                    break;\r\n\r\n                case 'edge':\r\n                    pJS.canvas.ctx.rect(p.x - radius, p.y - radius, radius * 2, radius * 2);\r\n                    break;\r\n\r\n                case 'triangle':\r\n                    pJS.fn.vendors.drawShape(pJS.canvas.ctx, p.x - radius, p.y + radius / 1.66, radius * 2, 3, 2);\r\n                    break;\r\n\r\n                case 'polygon':\r\n                    pJS.fn.vendors.drawShape(\r\n                        pJS.canvas.ctx,\r\n                        p.x - radius / (pJS.particles.shape.polygon.nb_sides / 3.5), // startX\r\n                        p.y - radius / (2.66 / 3.5), // startY\r\n                        radius * 2.66 / (pJS.particles.shape.polygon.nb_sides / 3), // sideLength\r\n                        pJS.particles.shape.polygon.nb_sides, // sideCountNumerator\r\n                        1 // sideCountDenominator\r\n                    );\r\n                    break;\r\n\r\n                case 'star':\r\n                    pJS.fn.vendors.drawShape(\r\n                        pJS.canvas.ctx,\r\n                        p.x - radius * 2 / (pJS.particles.shape.polygon.nb_sides / 4), // startX\r\n                        p.y - radius / (2 * 2.66 / 3.5), // startY\r\n                        radius * 2 * 2.66 / (pJS.particles.shape.polygon.nb_sides / 3), // sideLength\r\n                        pJS.particles.shape.polygon.nb_sides, // sideCountNumerator\r\n                        2 // sideCountDenominator\r\n                    );\r\n                    break;\r\n\r\n                case 'image':\r\n\r\n                    function draw() {\r\n                        pJS.canvas.ctx.drawImage(\r\n                            img_obj,\r\n                            p.x - radius,\r\n                            p.y - radius,\r\n                            radius * 2,\r\n                            radius * 2 / p.img.ratio\r\n                        );\r\n                    }\r\n\r\n                    if (pJS.tmp.img_type == 'svg') {\r\n                        var img_obj = p.img.obj;\r\n                    } else {\r\n                        var img_obj = pJS.tmp.img_obj;\r\n                    }\r\n\r\n                    if (img_obj) {\r\n                        draw();\r\n                    }\r\n\r\n                    break;\r\n\r\n            }\r\n\r\n            pJS.canvas.ctx.closePath();\r\n\r\n            if (pJS.particles.shape.stroke.width > 0) {\r\n                pJS.canvas.ctx.strokeStyle = pJS.particles.shape.stroke.color;\r\n                pJS.canvas.ctx.lineWidth = pJS.particles.shape.stroke.width;\r\n                pJS.canvas.ctx.stroke();\r\n            }\r\n\r\n            pJS.canvas.ctx.fill();\r\n\r\n        };\r\n\r\n\r\n        pJS.fn.particlesCreate = function() {\r\n            for (var i = 0; i < pJS.particles.number.value; i++) {\r\n                pJS.particles.array.push(new pJS.fn.particle(pJS.particles.color, pJS.particles.opacity.value));\r\n            }\r\n        };\r\n\r\n        pJS.fn.particlesUpdate = function() {\r\n\r\n            for (var i = 0; i < pJS.particles.array.length; i++) {\r\n\r\n                /* the particle */\r\n                var p = pJS.particles.array[i];\r\n\r\n                // var d = ( dx = pJS.interactivity.mouse.click_pos_x - p.x ) * dx + ( dy = pJS.interactivity.mouse.click_pos_y - p.y ) * dy;\r\n                // var f = -BANG_SIZE / d;\r\n                // if ( d < BANG_SIZE ) {\r\n                //     var t = Math.atan2( dy, dx );\r\n                //     p.vx = f * Math.cos(t);\r\n                //     p.vy = f * Math.sin(t);\r\n                // }\r\n\r\n                /* move the particle */\r\n                if (pJS.particles.move.enable) {\r\n                    var ms = pJS.particles.move.speed / 2;\r\n                    p.x += p.vx * ms;\r\n                    p.y += p.vy * ms;\r\n                }\r\n\r\n                /* change opacity status */\r\n                if (pJS.particles.opacity.anim.enable) {\r\n                    if (p.opacity_status == true) {\r\n                        if (p.opacity >= pJS.particles.opacity.value) p.opacity_status = false;\r\n                        p.opacity += p.vo;\r\n                    } else {\r\n                        if (p.opacity <= pJS.particles.opacity.anim.opacity_min) p.opacity_status = true;\r\n                        p.opacity -= p.vo;\r\n                    }\r\n                    if (p.opacity < 0) p.opacity = 0;\r\n                }\r\n\r\n                /* change size */\r\n                if (pJS.particles.size.anim.enable) {\r\n                    if (p.size_status == true) {\r\n                        if (p.radius >= pJS.particles.size.value) p.size_status = false;\r\n                        p.radius += p.vs;\r\n                    } else {\r\n                        if (p.radius <= pJS.particles.size.anim.size_min) p.size_status = true;\r\n                        p.radius -= p.vs;\r\n                    }\r\n                    if (p.radius < 0) p.radius = 0;\r\n                }\r\n\r\n                /* change particle position if it is out of canvas */\r\n                if (pJS.particles.move.out_mode == 'bounce') {\r\n                    var new_pos = {\r\n                        x_left: p.radius,\r\n                        x_right: pJS.canvas.w,\r\n                        y_top: p.radius,\r\n                        y_bottom: pJS.canvas.h\r\n                    }\r\n                } else {\r\n                    var new_pos = {\r\n                        x_left: -p.radius,\r\n                        x_right: pJS.canvas.w + p.radius,\r\n                        y_top: -p.radius,\r\n                        y_bottom: pJS.canvas.h + p.radius\r\n                    }\r\n                }\r\n\r\n                if (p.x - p.radius > pJS.canvas.w) {\r\n                    p.x = new_pos.x_left;\r\n                    p.y = Math.random() * pJS.canvas.h;\r\n                } else if (p.x + p.radius < 0) {\r\n                    p.x = new_pos.x_right;\r\n                    p.y = Math.random() * pJS.canvas.h;\r\n                }\r\n                if (p.y - p.radius > pJS.canvas.h) {\r\n                    p.y = new_pos.y_top;\r\n                    p.x = Math.random() * pJS.canvas.w;\r\n                } else if (p.y + p.radius < 0) {\r\n                    p.y = new_pos.y_bottom;\r\n                    p.x = Math.random() * pJS.canvas.w;\r\n                }\r\n\r\n                /* out of canvas modes */\r\n                switch (pJS.particles.move.out_mode) {\r\n                    case 'bounce':\r\n                        if (p.x + p.radius > pJS.canvas.w) p.vx = -p.vx;\r\n                        else if (p.x - p.radius < 0) p.vx = -p.vx;\r\n                        if (p.y + p.radius > pJS.canvas.h) p.vy = -p.vy;\r\n                        else if (p.y - p.radius < 0) p.vy = -p.vy;\r\n                        break;\r\n                }\r\n\r\n                /* events */\r\n                if (isInArray('grab', pJS.interactivity.events.onhover.mode)) {\r\n                    pJS.fn.modes.grabParticle(p);\r\n                }\r\n\r\n                if (isInArray('bubble', pJS.interactivity.events.onhover.mode) || isInArray('bubble', pJS.interactivity.events.onclick.mode)) {\r\n                    pJS.fn.modes.bubbleParticle(p);\r\n                }\r\n\r\n                if (isInArray('repulse', pJS.interactivity.events.onhover.mode) || isInArray('repulse', pJS.interactivity.events.onclick.mode)) {\r\n                    pJS.fn.modes.repulseParticle(p);\r\n                }\r\n\r\n                /* interaction auto between particles */\r\n                if (pJS.particles.line_linked.enable || pJS.particles.move.attract.enable) {\r\n                    for (var j = i + 1; j < pJS.particles.array.length; j++) {\r\n                        var p2 = pJS.particles.array[j];\r\n\r\n                        /* link particles */\r\n                        if (pJS.particles.line_linked.enable) {\r\n                            pJS.fn.interact.linkParticles(p, p2);\r\n                        }\r\n\r\n                        /* attract particles */\r\n                        if (pJS.particles.move.attract.enable) {\r\n                            pJS.fn.interact.attractParticles(p, p2);\r\n                        }\r\n\r\n                        /* bounce particles */\r\n                        if (pJS.particles.move.bounce) {\r\n                            pJS.fn.interact.bounceParticles(p, p2);\r\n                        }\r\n\r\n                    }\r\n                }\r\n\r\n\r\n            }\r\n\r\n        };\r\n\r\n        pJS.fn.particlesDraw = function() {\r\n\r\n            /* clear canvas */\r\n            pJS.canvas.ctx.clearRect(0, 0, pJS.canvas.w, pJS.canvas.h);\r\n\r\n            /* update each particles param */\r\n            pJS.fn.particlesUpdate();\r\n\r\n            /* draw each particle */\r\n            for (var i = 0; i < pJS.particles.array.length; i++) {\r\n                var p = pJS.particles.array[i];\r\n                p.draw();\r\n            }\r\n\r\n        };\r\n\r\n        pJS.fn.particlesEmpty = function() {\r\n            pJS.particles.array = [];\r\n        };\r\n\r\n        pJS.fn.particlesRefresh = function() {\r\n\r\n            /* init all */\r\n            cancelRequestAnimFrame(pJS.fn.checkAnimFrame);\r\n            cancelRequestAnimFrame(pJS.fn.drawAnimFrame);\r\n            pJS.tmp.source_svg = undefined;\r\n            pJS.tmp.img_obj = undefined;\r\n            pJS.tmp.count_svg = 0;\r\n            pJS.fn.particlesEmpty();\r\n            pJS.fn.canvasClear();\r\n\r\n            /* restart */\r\n            pJS.fn.vendors.start();\r\n\r\n        };\r\n\r\n\r\n        /* ---------- pJS functions - particles interaction ------------ */\r\n\r\n        pJS.fn.interact.linkParticles = function(p1, p2) {\r\n\r\n            var dx = p1.x - p2.x,\r\n                dy = p1.y - p2.y,\r\n                dist = Math.sqrt(dx * dx + dy * dy);\r\n\r\n            /* draw a line between p1 and p2 if the distance between them is under the config distance */\r\n            if (dist <= pJS.particles.line_linked.distance) {\r\n\r\n                var opacity_line = pJS.particles.line_linked.opacity - (dist / (1 / pJS.particles.line_linked.opacity)) / pJS.particles.line_linked.distance;\r\n\r\n                if (opacity_line > 0) {\r\n\r\n                    /* style */\r\n                    var color_line = pJS.particles.line_linked.color_rgb_line;\r\n                    pJS.canvas.ctx.strokeStyle = 'rgba(' + color_line.r + ',' + color_line.g + ',' + color_line.b + ',' + opacity_line + ')';\r\n                    pJS.canvas.ctx.lineWidth = pJS.particles.line_linked.width;\r\n                    //pJS.canvas.ctx.lineCap = 'round'; /* performance issue */\r\n\r\n                    /* path */\r\n                    pJS.canvas.ctx.beginPath();\r\n                    pJS.canvas.ctx.moveTo(p1.x, p1.y);\r\n                    pJS.canvas.ctx.lineTo(p2.x, p2.y);\r\n                    pJS.canvas.ctx.stroke();\r\n                    pJS.canvas.ctx.closePath();\r\n\r\n                }\r\n\r\n            }\r\n\r\n        };\r\n\r\n\r\n        pJS.fn.interact.attractParticles = function(p1, p2) {\r\n\r\n            /* condensed particles */\r\n            var dx = p1.x - p2.x,\r\n                dy = p1.y - p2.y,\r\n                dist = Math.sqrt(dx * dx + dy * dy);\r\n\r\n            if (dist <= pJS.particles.line_linked.distance) {\r\n\r\n                var ax = dx / (pJS.particles.move.attract.rotateX * 1000),\r\n                    ay = dy / (pJS.particles.move.attract.rotateY * 1000);\r\n\r\n                p1.vx -= ax;\r\n                p1.vy -= ay;\r\n\r\n                p2.vx += ax;\r\n                p2.vy += ay;\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n        pJS.fn.interact.bounceParticles = function(p1, p2) {\r\n\r\n            var dx = p1.x - p2.x,\r\n                dy = p1.y - p2.y,\r\n                dist = Math.sqrt(dx * dx + dy * dy),\r\n                dist_p = p1.radius + p2.radius;\r\n\r\n            if (dist <= dist_p) {\r\n                p1.vx = -p1.vx;\r\n                p1.vy = -p1.vy;\r\n\r\n                p2.vx = -p2.vx;\r\n                p2.vy = -p2.vy;\r\n            }\r\n\r\n        }\r\n\r\n\r\n        /* ---------- pJS functions - modes events ------------ */\r\n\r\n        pJS.fn.modes.pushParticles = function(nb, pos) {\r\n\r\n            pJS.tmp.pushing = true;\r\n\r\n            for (var i = 0; i < nb; i++) {\r\n                pJS.particles.array.push(\r\n                    new pJS.fn.particle(\r\n                        pJS.particles.color,\r\n                        pJS.particles.opacity.value, {\r\n                            'x': pos ? pos.pos_x : Math.random() * pJS.canvas.w,\r\n                            'y': pos ? pos.pos_y : Math.random() * pJS.canvas.h\r\n                        }\r\n                    )\r\n                )\r\n                if (i == nb - 1) {\r\n                    if (!pJS.particles.move.enable) {\r\n                        pJS.fn.particlesDraw();\r\n                    }\r\n                    pJS.tmp.pushing = false;\r\n                }\r\n            }\r\n\r\n        };\r\n\r\n\r\n        pJS.fn.modes.removeParticles = function(nb) {\r\n\r\n            pJS.particles.array.splice(0, nb);\r\n            if (!pJS.particles.move.enable) {\r\n                pJS.fn.particlesDraw();\r\n            }\r\n\r\n        };\r\n\r\n\r\n        pJS.fn.modes.bubbleParticle = function(p) {\r\n\r\n            /* on hover event */\r\n            if (pJS.interactivity.events.onhover.enable && isInArray('bubble', pJS.interactivity.events.onhover.mode)) {\r\n\r\n                var dx_mouse = p.x - pJS.interactivity.mouse.pos_x,\r\n                    dy_mouse = p.y - pJS.interactivity.mouse.pos_y,\r\n                    dist_mouse = Math.sqrt(dx_mouse * dx_mouse + dy_mouse * dy_mouse),\r\n                    ratio = 1 - dist_mouse / pJS.interactivity.modes.bubble.distance;\r\n\r\n                function init() {\r\n                    p.opacity_bubble = p.opacity;\r\n                    p.radius_bubble = p.radius;\r\n                }\r\n\r\n                /* mousemove - check ratio */\r\n                if (dist_mouse <= pJS.interactivity.modes.bubble.distance) {\r\n\r\n                    if (ratio >= 0 && pJS.interactivity.status == 'mousemove') {\r\n\r\n                        /* size */\r\n                        if (pJS.interactivity.modes.bubble.size != pJS.particles.size.value) {\r\n\r\n                            if (pJS.interactivity.modes.bubble.size > pJS.particles.size.value) {\r\n                                var size = p.radius + (pJS.interactivity.modes.bubble.size * ratio);\r\n                                if (size >= 0) {\r\n                                    p.radius_bubble = size;\r\n                                }\r\n                            } else {\r\n                                var dif = p.radius - pJS.interactivity.modes.bubble.size,\r\n                                    size = p.radius - (dif * ratio);\r\n                                if (size > 0) {\r\n                                    p.radius_bubble = size;\r\n                                } else {\r\n                                    p.radius_bubble = 0;\r\n                                }\r\n                            }\r\n\r\n                        }\r\n\r\n                        /* opacity */\r\n                        if (pJS.interactivity.modes.bubble.opacity != pJS.particles.opacity.value) {\r\n\r\n                            if (pJS.interactivity.modes.bubble.opacity > pJS.particles.opacity.value) {\r\n                                var opacity = pJS.interactivity.modes.bubble.opacity * ratio;\r\n                                if (opacity > p.opacity && opacity <= pJS.interactivity.modes.bubble.opacity) {\r\n                                    p.opacity_bubble = opacity;\r\n                                }\r\n                            } else {\r\n                                var opacity = p.opacity - (pJS.particles.opacity.value - pJS.interactivity.modes.bubble.opacity) * ratio;\r\n                                if (opacity < p.opacity && opacity >= pJS.interactivity.modes.bubble.opacity) {\r\n                                    p.opacity_bubble = opacity;\r\n                                }\r\n                            }\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                } else {\r\n                    init();\r\n                }\r\n\r\n\r\n                /* mouseleave */\r\n                if (pJS.interactivity.status == 'mouseleave') {\r\n                    init();\r\n                }\r\n\r\n            }\r\n\r\n            /* on click event */\r\n            else if (pJS.interactivity.events.onclick.enable && isInArray('bubble', pJS.interactivity.events.onclick.mode)) {\r\n\r\n\r\n                if (pJS.tmp.bubble_clicking) {\r\n                    var dx_mouse = p.x - pJS.interactivity.mouse.click_pos_x,\r\n                        dy_mouse = p.y - pJS.interactivity.mouse.click_pos_y,\r\n                        dist_mouse = Math.sqrt(dx_mouse * dx_mouse + dy_mouse * dy_mouse),\r\n                        time_spent = (new Date().getTime() - pJS.interactivity.mouse.click_time) / 1000;\r\n\r\n                    if (time_spent > pJS.interactivity.modes.bubble.duration) {\r\n                        pJS.tmp.bubble_duration_end = true;\r\n                    }\r\n\r\n                    if (time_spent > pJS.interactivity.modes.bubble.duration * 2) {\r\n                        pJS.tmp.bubble_clicking = false;\r\n                        pJS.tmp.bubble_duration_end = false;\r\n                    }\r\n                }\r\n\r\n\r\n                function process(bubble_param, particles_param, p_obj_bubble, p_obj, id) {\r\n\r\n                    if (bubble_param != particles_param) {\r\n\r\n                        if (!pJS.tmp.bubble_duration_end) {\r\n                            if (dist_mouse <= pJS.interactivity.modes.bubble.distance) {\r\n                                if (p_obj_bubble != undefined) var obj = p_obj_bubble;\r\n                                else var obj = p_obj;\r\n                                if (obj != bubble_param) {\r\n                                    var value = p_obj - (time_spent * (p_obj - bubble_param) / pJS.interactivity.modes.bubble.duration);\r\n                                    if (id == 'size') p.radius_bubble = value;\r\n                                    if (id == 'opacity') p.opacity_bubble = value;\r\n                                }\r\n                            } else {\r\n                                if (id == 'size') p.radius_bubble = undefined;\r\n                                if (id == 'opacity') p.opacity_bubble = undefined;\r\n                            }\r\n                        } else {\r\n                            if (p_obj_bubble != undefined) {\r\n                                var value_tmp = p_obj - (time_spent * (p_obj - bubble_param) / pJS.interactivity.modes.bubble.duration),\r\n                                    dif = bubble_param - value_tmp;\r\n                                value = bubble_param + dif;\r\n                                if (id == 'size') p.radius_bubble = value;\r\n                                if (id == 'opacity') p.opacity_bubble = value;\r\n                            }\r\n                        }\r\n\r\n                    }\r\n\r\n                }\r\n\r\n                if (pJS.tmp.bubble_clicking) {\r\n                    /* size */\r\n                    process(pJS.interactivity.modes.bubble.size, pJS.particles.size.value, p.radius_bubble, p.radius, 'size');\r\n                    /* opacity */\r\n                    process(pJS.interactivity.modes.bubble.opacity, pJS.particles.opacity.value, p.opacity_bubble, p.opacity, 'opacity');\r\n                }\r\n\r\n            }\r\n\r\n        };\r\n\r\n\r\n        pJS.fn.modes.repulseParticle = function(p) {\r\n\r\n            if (pJS.interactivity.events.onhover.enable && isInArray('repulse', pJS.interactivity.events.onhover.mode) && pJS.interactivity.status == 'mousemove') {\r\n\r\n                var dx_mouse = p.x - pJS.interactivity.mouse.pos_x,\r\n                    dy_mouse = p.y - pJS.interactivity.mouse.pos_y,\r\n                    dist_mouse = Math.sqrt(dx_mouse * dx_mouse + dy_mouse * dy_mouse);\r\n\r\n                var normVec = { x: dx_mouse / dist_mouse, y: dy_mouse / dist_mouse },\r\n                    repulseRadius = pJS.interactivity.modes.repulse.distance,\r\n                    velocity = 100,\r\n                    repulseFactor = clamp((1 / repulseRadius) * (-1 * Math.pow(dist_mouse / repulseRadius, 2) + 1) * repulseRadius * velocity, 0, 50);\r\n\r\n                var pos = {\r\n                    x: p.x + normVec.x * repulseFactor,\r\n                    y: p.y + normVec.y * repulseFactor\r\n                }\r\n\r\n                if (pJS.particles.move.out_mode == 'bounce') {\r\n                    if (pos.x - p.radius > 0 && pos.x + p.radius < pJS.canvas.w) p.x = pos.x;\r\n                    if (pos.y - p.radius > 0 && pos.y + p.radius < pJS.canvas.h) p.y = pos.y;\r\n                } else {\r\n                    p.x = pos.x;\r\n                    p.y = pos.y;\r\n                }\r\n\r\n            } else if (pJS.interactivity.events.onclick.enable && isInArray('repulse', pJS.interactivity.events.onclick.mode)) {\r\n\r\n                if (!pJS.tmp.repulse_finish) {\r\n                    pJS.tmp.repulse_count++;\r\n                    if (pJS.tmp.repulse_count == pJS.particles.array.length) {\r\n                        pJS.tmp.repulse_finish = true;\r\n                    }\r\n                }\r\n\r\n                if (pJS.tmp.repulse_clicking) {\r\n\r\n                    var repulseRadius = Math.pow(pJS.interactivity.modes.repulse.distance / 6, 3);\r\n\r\n                    var dx = pJS.interactivity.mouse.click_pos_x - p.x,\r\n                        dy = pJS.interactivity.mouse.click_pos_y - p.y,\r\n                        d = dx * dx + dy * dy;\r\n\r\n                    var force = -repulseRadius / d * 1;\r\n\r\n                    function process() {\r\n\r\n                        var f = Math.atan2(dy, dx);\r\n                        p.vx = force * Math.cos(f);\r\n                        p.vy = force * Math.sin(f);\r\n\r\n                        if (pJS.particles.move.out_mode == 'bounce') {\r\n                            var pos = {\r\n                                x: p.x + p.vx,\r\n                                y: p.y + p.vy\r\n                            }\r\n                            if (pos.x + p.radius > pJS.canvas.w) p.vx = -p.vx;\r\n                            else if (pos.x - p.radius < 0) p.vx = -p.vx;\r\n                            if (pos.y + p.radius > pJS.canvas.h) p.vy = -p.vy;\r\n                            else if (pos.y - p.radius < 0) p.vy = -p.vy;\r\n                        }\r\n\r\n                    }\r\n\r\n                    // default\r\n                    if (d <= repulseRadius) {\r\n                        process();\r\n                    }\r\n\r\n                    // bang - slow motion mode\r\n                    // if(!pJS.tmp.repulse_finish){\r\n                    //   if(d <= repulseRadius){\r\n                    //     process();\r\n                    //   }\r\n                    // }else{\r\n                    //   process();\r\n                    // }\r\n\r\n\r\n                } else {\r\n\r\n                    if (pJS.tmp.repulse_clicking == false) {\r\n\r\n                        p.vx = p.vx_i;\r\n                        p.vy = p.vy_i;\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n\r\n        pJS.fn.modes.grabParticle = function(p) {\r\n\r\n            if (pJS.interactivity.events.onhover.enable && pJS.interactivity.status == 'mousemove') {\r\n\r\n                var dx_mouse = p.x - pJS.interactivity.mouse.pos_x,\r\n                    dy_mouse = p.y - pJS.interactivity.mouse.pos_y,\r\n                    dist_mouse = Math.sqrt(dx_mouse * dx_mouse + dy_mouse * dy_mouse);\r\n\r\n                /* draw a line between the cursor and the particle if the distance between them is under the config distance */\r\n                if (dist_mouse <= pJS.interactivity.modes.grab.distance) {\r\n\r\n                    var opacity_line = pJS.interactivity.modes.grab.line_linked.opacity - (dist_mouse / (1 / pJS.interactivity.modes.grab.line_linked.opacity)) / pJS.interactivity.modes.grab.distance;\r\n\r\n                    if (opacity_line > 0) {\r\n\r\n                        /* style */\r\n                        var color_line = pJS.particles.line_linked.color_rgb_line;\r\n                        pJS.canvas.ctx.strokeStyle = 'rgba(' + color_line.r + ',' + color_line.g + ',' + color_line.b + ',' + opacity_line + ')';\r\n                        pJS.canvas.ctx.lineWidth = pJS.particles.line_linked.width;\r\n                        //pJS.canvas.ctx.lineCap = 'round'; /* performance issue */\r\n\r\n                        /* path */\r\n                        pJS.canvas.ctx.beginPath();\r\n                        pJS.canvas.ctx.moveTo(p.x, p.y);\r\n                        pJS.canvas.ctx.lineTo(pJS.interactivity.mouse.pos_x, pJS.interactivity.mouse.pos_y);\r\n                        pJS.canvas.ctx.stroke();\r\n                        pJS.canvas.ctx.closePath();\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n        };\r\n\r\n\r\n\r\n        /* ---------- pJS functions - vendors ------------ */\r\n\r\n        pJS.fn.vendors.eventsListeners = function() {\r\n\r\n            /* events target element */\r\n            if (pJS.interactivity.detect_on == 'window') {\r\n                pJS.interactivity.el = window;\r\n            } else {\r\n                pJS.interactivity.el = pJS.canvas.el;\r\n                if (pJS.interactivity.el.parentNode && pJS.interactivity.el.parentNode.parentNode) {\r\n                    pJS.interactivity.el = pJS.interactivity.el.parentNode.parentNode;\r\n                }\r\n            }\r\n\r\n\r\n            /* detect mouse pos - on hover / click event */\r\n            if (pJS.interactivity.events.onhover.enable || pJS.interactivity.events.onclick.enable) {\r\n\r\n                /* el on mousemove */\r\n                pJS.interactivity.el.addEventListener('mousemove', function(e) {\r\n\r\n                    if (pJS.interactivity.el == window) {\r\n                        var pos_x = e.clientX,\r\n                            pos_y = e.clientY;\r\n                    } else {\r\n                        var pos_x = e.offsetX || e.clientX,\r\n                            pos_y = e.offsetY || e.clientY;\r\n                    }\r\n\r\n                    pJS.interactivity.mouse.pos_x = pos_x;\r\n                    pJS.interactivity.mouse.pos_y = pos_y;\r\n\r\n                    if (pJS.tmp.retina) {\r\n                        pJS.interactivity.mouse.pos_x *= pJS.canvas.pxratio;\r\n                        pJS.interactivity.mouse.pos_y *= pJS.canvas.pxratio;\r\n                    }\r\n\r\n                    pJS.interactivity.status = 'mousemove';\r\n\r\n                });\r\n\r\n                /* el on onmouseleave */\r\n                pJS.interactivity.el.addEventListener('mouseleave', function(e) {\r\n\r\n                    pJS.interactivity.mouse.pos_x = null;\r\n                    pJS.interactivity.mouse.pos_y = null;\r\n                    pJS.interactivity.status = 'mouseleave';\r\n\r\n                });\r\n\r\n            }\r\n\r\n            /* on click event */\r\n            if (pJS.interactivity.events.onclick.enable) {\r\n\r\n                pJS.interactivity.el.addEventListener('click', function() {\r\n\r\n                    pJS.interactivity.mouse.click_pos_x = pJS.interactivity.mouse.pos_x;\r\n                    pJS.interactivity.mouse.click_pos_y = pJS.interactivity.mouse.pos_y;\r\n                    pJS.interactivity.mouse.click_time = new Date().getTime();\r\n\r\n                    if (pJS.interactivity.events.onclick.enable) {\r\n\r\n                        switch (pJS.interactivity.events.onclick.mode) {\r\n\r\n                            case 'push':\r\n                                if (pJS.particles.move.enable) {\r\n                                    pJS.fn.modes.pushParticles(pJS.interactivity.modes.push.particles_nb, pJS.interactivity.mouse);\r\n                                } else {\r\n                                    if (pJS.interactivity.modes.push.particles_nb == 1) {\r\n                                        pJS.fn.modes.pushParticles(pJS.interactivity.modes.push.particles_nb, pJS.interactivity.mouse);\r\n                                    } else if (pJS.interactivity.modes.push.particles_nb > 1) {\r\n                                        pJS.fn.modes.pushParticles(pJS.interactivity.modes.push.particles_nb);\r\n                                    }\r\n                                }\r\n                                break;\r\n\r\n                            case 'remove':\r\n                                pJS.fn.modes.removeParticles(pJS.interactivity.modes.remove.particles_nb);\r\n                                break;\r\n\r\n                            case 'bubble':\r\n                                pJS.tmp.bubble_clicking = true;\r\n                                break;\r\n\r\n                            case 'repulse':\r\n                                pJS.tmp.repulse_clicking = true;\r\n                                pJS.tmp.repulse_count = 0;\r\n                                pJS.tmp.repulse_finish = false;\r\n                                setTimeout(function() {\r\n                                    pJS.tmp.repulse_clicking = false;\r\n                                }, pJS.interactivity.modes.repulse.duration * 1000)\r\n                                break;\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                });\r\n\r\n            }\r\n\r\n\r\n        };\r\n\r\n        pJS.fn.vendors.densityAutoParticles = function() {\r\n\r\n            if (pJS.particles.number.density.enable) {\r\n\r\n                /* calc area */\r\n                var area = pJS.canvas.el.width * pJS.canvas.el.height / 1000;\r\n                if (pJS.tmp.retina) {\r\n                    area = area / (pJS.canvas.pxratio * 2);\r\n                }\r\n\r\n                /* calc number of particles based on density area */\r\n                var nb_particles = area * pJS.particles.number.value / pJS.particles.number.density.value_area;\r\n\r\n                /* add or remove X particles */\r\n                var missing_particles = pJS.particles.array.length - nb_particles;\r\n                if (missing_particles < 0) pJS.fn.modes.pushParticles(Math.abs(missing_particles));\r\n                else pJS.fn.modes.removeParticles(missing_particles);\r\n\r\n            }\r\n\r\n        };\r\n\r\n\r\n        pJS.fn.vendors.checkOverlap = function(p1, position) {\r\n            for (var i = 0; i < pJS.particles.array.length; i++) {\r\n                var p2 = pJS.particles.array[i];\r\n\r\n                var dx = p1.x - p2.x,\r\n                    dy = p1.y - p2.y,\r\n                    dist = Math.sqrt(dx * dx + dy * dy);\r\n\r\n                if (dist <= p1.radius + p2.radius) {\r\n                    p1.x = position ? position.x : Math.random() * pJS.canvas.w;\r\n                    p1.y = position ? position.y : Math.random() * pJS.canvas.h;\r\n                    pJS.fn.vendors.checkOverlap(p1);\r\n                }\r\n            }\r\n        };\r\n\r\n\r\n        pJS.fn.vendors.createSvgImg = function(p) {\r\n\r\n            /* set color to svg element */\r\n            var svgXml = pJS.tmp.source_svg,\r\n                rgbHex = /#([0-9A-F]{3,6})/gi,\r\n                coloredSvgXml = svgXml.replace(rgbHex, function(m, r, g, b) {\r\n                    if (p.color.rgb) {\r\n                        var color_value = 'rgba(' + p.color.rgb.r + ',' + p.color.rgb.g + ',' + p.color.rgb.b + ',' + p.opacity + ')';\r\n                    } else {\r\n                        var color_value = 'hsla(' + p.color.hsl.h + ',' + p.color.hsl.s + '%,' + p.color.hsl.l + '%,' + p.opacity + ')';\r\n                    }\r\n                    return color_value;\r\n                });\r\n\r\n            /* prepare to create img with colored svg */\r\n            var svg = new Blob([coloredSvgXml], { type: 'image/svg+xml;charset=utf-8' }),\r\n                DOMURL = window.URL || window.webkitURL || window,\r\n                url = DOMURL.createObjectURL(svg);\r\n\r\n            /* create particle img obj */\r\n            var img = new Image();\r\n            img.addEventListener('load', function() {\r\n                p.img.obj = img;\r\n                p.img.loaded = true;\r\n                DOMURL.revokeObjectURL(url);\r\n                pJS.tmp.count_svg++;\r\n            });\r\n            img.src = url;\r\n\r\n        };\r\n\r\n\r\n        pJS.fn.vendors.destroypJS = function() {\r\n            cancelAnimationFrame(pJS.fn.drawAnimFrame);\r\n            canvas_el.remove();\r\n            pJSDom = null;\r\n        };\r\n\r\n\r\n        pJS.fn.vendors.drawShape = function(c, startX, startY, sideLength, sideCountNumerator, sideCountDenominator) {\r\n\r\n            // By Programming Thomas - https://programmingthomas.wordpress.com/2013/04/03/n-sided-shapes/\r\n            var sideCount = sideCountNumerator * sideCountDenominator;\r\n            var decimalSides = sideCountNumerator / sideCountDenominator;\r\n            var interiorAngleDegrees = (180 * (decimalSides - 2)) / decimalSides;\r\n            var interiorAngle = Math.PI - Math.PI * interiorAngleDegrees / 180; // convert to radians\r\n            c.save();\r\n            c.beginPath();\r\n            c.translate(startX, startY);\r\n            c.moveTo(0, 0);\r\n            for (var i = 0; i < sideCount; i++) {\r\n                c.lineTo(sideLength, 0);\r\n                c.translate(sideLength, 0);\r\n                c.rotate(interiorAngle);\r\n            }\r\n            //c.stroke();\r\n            c.fill();\r\n            c.restore();\r\n\r\n        };\r\n\r\n        pJS.fn.vendors.exportImg = function() {\r\n            window.open(pJS.canvas.el.toDataURL('image/png'), '_blank');\r\n        };\r\n\r\n\r\n        pJS.fn.vendors.loadImg = function(type) {\r\n\r\n            pJS.tmp.img_error = undefined;\r\n\r\n            if (pJS.particles.shape.image.src != '') {\r\n\r\n                if (type == 'svg') {\r\n\r\n                    var xhr = new XMLHttpRequest();\r\n                    xhr.open('GET', pJS.particles.shape.image.src);\r\n                    xhr.onreadystatechange = function(data) {\r\n                        if (xhr.readyState == 4) {\r\n                            if (xhr.status == 200) {\r\n                                pJS.tmp.source_svg = data.currentTarget.response;\r\n                                pJS.fn.vendors.checkBeforeDraw();\r\n                            } else {\r\n                                console.log('Error pJS - Image not found');\r\n                                pJS.tmp.img_error = true;\r\n                            }\r\n                        }\r\n                    }\r\n                    xhr.send();\r\n\r\n                } else {\r\n\r\n                    var img = new Image();\r\n                    img.addEventListener('load', function() {\r\n                        pJS.tmp.img_obj = img;\r\n                        pJS.fn.vendors.checkBeforeDraw();\r\n                    });\r\n                    img.src = pJS.particles.shape.image.src;\r\n\r\n                }\r\n\r\n            } else {\r\n                console.log('Error pJS - No image.src');\r\n                pJS.tmp.img_error = true;\r\n            }\r\n\r\n        };\r\n\r\n\r\n        pJS.fn.vendors.draw = function() {\r\n\r\n            if (pJS.particles.shape.type == 'image') {\r\n\r\n                if (pJS.tmp.img_type == 'svg') {\r\n\r\n                    if (pJS.tmp.count_svg >= pJS.particles.number.value) {\r\n                        pJS.fn.particlesDraw();\r\n                        if (!pJS.particles.move.enable) cancelRequestAnimFrame(pJS.fn.drawAnimFrame);\r\n                        else pJS.fn.drawAnimFrame = requestAnimFrame(pJS.fn.vendors.draw);\r\n                    } else {\r\n                        //console.log('still loading...');\r\n                        if (!pJS.tmp.img_error) pJS.fn.drawAnimFrame = requestAnimFrame(pJS.fn.vendors.draw);\r\n                    }\r\n\r\n                } else {\r\n\r\n                    if (pJS.tmp.img_obj != undefined) {\r\n                        pJS.fn.particlesDraw();\r\n                        if (!pJS.particles.move.enable) cancelRequestAnimFrame(pJS.fn.drawAnimFrame);\r\n                        else pJS.fn.drawAnimFrame = requestAnimFrame(pJS.fn.vendors.draw);\r\n                    } else {\r\n                        if (!pJS.tmp.img_error) pJS.fn.drawAnimFrame = requestAnimFrame(pJS.fn.vendors.draw);\r\n                    }\r\n\r\n                }\r\n\r\n            } else {\r\n                pJS.fn.particlesDraw();\r\n                if (!pJS.particles.move.enable) cancelRequestAnimFrame(pJS.fn.drawAnimFrame);\r\n                else pJS.fn.drawAnimFrame = requestAnimFrame(pJS.fn.vendors.draw);\r\n            }\r\n\r\n        };\r\n\r\n\r\n        pJS.fn.vendors.checkBeforeDraw = function() {\r\n\r\n            // if shape is image\r\n            if (pJS.particles.shape.type == 'image') {\r\n\r\n                if (pJS.tmp.img_type == 'svg' && pJS.tmp.source_svg == undefined) {\r\n                    pJS.tmp.checkAnimFrame = requestAnimFrame(check);\r\n                } else {\r\n                    //console.log('images loaded! cancel check');\r\n                    cancelRequestAnimFrame(pJS.tmp.checkAnimFrame);\r\n                    if (!pJS.tmp.img_error) {\r\n                        pJS.fn.vendors.init();\r\n                        pJS.fn.vendors.draw();\r\n                    }\r\n\r\n                }\r\n\r\n            } else {\r\n                pJS.fn.vendors.init();\r\n                pJS.fn.vendors.draw();\r\n            }\r\n\r\n        };\r\n\r\n\r\n        pJS.fn.vendors.init = function() {\r\n\r\n            /* init canvas + particles */\r\n            pJS.fn.retinaInit();\r\n            pJS.fn.canvasInit();\r\n            pJS.fn.canvasSize();\r\n            pJS.fn.canvasPaint();\r\n            pJS.fn.particlesCreate();\r\n            pJS.fn.vendors.densityAutoParticles();\r\n\r\n            /* particles.line_linked - convert hex colors to rgb */\r\n            pJS.particles.line_linked.color_rgb_line = hexToRgb(pJS.particles.line_linked.color);\r\n\r\n        };\r\n\r\n\r\n        pJS.fn.vendors.start = function() {\r\n\r\n            if (isInArray('image', pJS.particles.shape.type)) {\r\n                pJS.tmp.img_type = pJS.particles.shape.image.src.substr(pJS.particles.shape.image.src.length - 3);\r\n                pJS.fn.vendors.loadImg(pJS.tmp.img_type);\r\n            } else {\r\n                pJS.fn.vendors.checkBeforeDraw();\r\n            }\r\n\r\n        };\r\n\r\n        pJS.fn.vendors.startAnimation = function() {\r\n            requestAnimFrame(pJS.fn.vendors.draw);\r\n        };\r\n\r\n        pJS.fn.vendors.stopAnimation = function() {\r\n            cancelRequestAnimFrame(pJS.fn.drawAnimFrame);\r\n            pJSDom = pJSDom || [];\r\n            for (var i = 0, len = pJSDom.length; i < len; i++) {\r\n                if (pJSDom[i].pJS.fn.vendors === this) {\r\n                    pJSDom.splice(i, 1);\r\n                }\r\n            }\r\n        };\r\n\r\n        /* ---------- pJS - start ------------ */\r\n\r\n\r\n        pJS.fn.vendors.eventsListeners();\r\n\r\n        pJS.fn.vendors.start();\r\n    };\r\n\r\n    /* ---------- global functions - vendors ------------ */\r\n\r\n    Object.deepExtend = function(destination, source) {\r\n        for (var property in source) {\r\n            if (source[property] && source[property].constructor &&\r\n                source[property].constructor === Object) {\r\n                destination[property] = destination[property] || {};\r\n                arguments.callee(destination[property], source[property]);\r\n            } else {\r\n                destination[property] = source[property];\r\n            }\r\n        }\r\n        return destination;\r\n    };\r\n\r\n    window.requestAnimFrame = (function() {\r\n        return window.requestAnimationFrame ||\r\n            window.webkitRequestAnimationFrame ||\r\n            window.mozRequestAnimationFrame ||\r\n            window.oRequestAnimationFrame ||\r\n            window.msRequestAnimationFrame ||\r\n            function(callback) {\r\n                window.setTimeout(callback, 1000 / 60);\r\n            };\r\n    })();\r\n\r\n    window.cancelRequestAnimFrame = (function() {\r\n        return window.cancelAnimationFrame ||\r\n            window.webkitCancelRequestAnimationFrame ||\r\n            window.mozCancelRequestAnimationFrame ||\r\n            window.oCancelRequestAnimationFrame ||\r\n            window.msCancelRequestAnimationFrame ||\r\n            clearTimeout\r\n    })();\r\n\r\n    function hexToRgb(hex) {\r\n        // By Tim Down - http://stackoverflow.com/a/5624139/3493650\r\n        // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\r\n        var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\r\n        hex = hex.replace(shorthandRegex, function(m, r, g, b) {\r\n            return r + r + g + g + b + b;\r\n        });\r\n        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n        return result ? {\r\n            r: parseInt(result[1], 16),\r\n            g: parseInt(result[2], 16),\r\n            b: parseInt(result[3], 16)\r\n        } : null;\r\n    };\r\n\r\n    function clamp(number, min, max) {\r\n        return Math.min(Math.max(number, min), max);\r\n    };\r\n\r\n    function isInArray(value, array) {\r\n        return array.indexOf(value) > -1;\r\n    }\r\n\r\n\r\n    /* ---------- particles.js functions - start ------------ */\r\n\r\n    var pJSDom = [];\r\n\r\n    var particlesJS = function(tag_id, params) {\r\n\r\n        //console.log(params);\r\n\r\n        /* no string id? so it's object params, and set the id with default id */\r\n        if (typeof(tag_id) != 'string') {\r\n            params = tag_id;\r\n            tag_id = 'particles-js';\r\n        }\r\n\r\n        /* no id? set the id to default id */\r\n        if (!tag_id) {\r\n            tag_id = 'particles-js';\r\n        }\r\n\r\n        /* pJS elements */\r\n        var pJS_tag = document.getElementById(tag_id),\r\n            pJS_canvas_class = 'particles-js-canvas-el',\r\n            exist_canvas = pJS_tag.getElementsByClassName(pJS_canvas_class);\r\n\r\n        /* remove canvas if exists into the pJS target tag */\r\n        if (exist_canvas.length) {\r\n            while (exist_canvas.length > 0) {\r\n                pJS_tag.removeChild(exist_canvas[0]);\r\n            }\r\n        }\r\n\r\n        /* create canvas element */\r\n        var canvas_el = document.createElement('canvas');\r\n        canvas_el.className = pJS_canvas_class;\r\n\r\n        /* set size canvas */\r\n        canvas_el.style.width = \"100%\";\r\n        canvas_el.style.height = \"100%\";\r\n\r\n        /* append canvas */\r\n        var canvas = document.getElementById(tag_id).appendChild(canvas_el);\r\n\r\n        /* launch particle.js */\r\n        var pjs = new pJS(tag_id, params);\r\n        if (canvas != null) {\r\n            pJSDom.push(pjs);\r\n        }\r\n        return pjs.pJS;\r\n\r\n    };\r\n\r\n    function particles(tag_id, data, callback) {\r\n        var pjs = particlesJS(tag_id, data || jsonData);\r\n        if (callback) callback();\r\n        return pjs;\r\n    };\r\n\r\n    return skylark.attach(\"intg.particles\",particles);\r\n});\r\n\ndefine('skylark-particles/main',[\"./particles\"],function(particles){\r\n\treturn particles;\r\n});\ndefine('skylark-particles', ['skylark-particles/main'], function (main) { return main; });\n\n"]}