{"version":3,"sources":["primitives/model/selection.js"],"names":["define","a","b","Selection","[object Object]","ranges","primIndex","this","other","length","i","here","there","equalCursorPos","anchor","head","out","Range","copyPos","empty","pos","end","range","cmp","from","to","minPos","maxPos","line","ch","normalizeSelection","cm","mayTouch","options","selectionsMayTouch","prim","sort","indexOf","cur","prev","diff","inv","splice","simpleSelection"],"mappings":"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","file":"../../../primitives/model/selection.js","sourcesContent":["define([\n    '../line/pos',\n    '../util/misc'\n], function (a, b) {\n    'use strict';\n    class Selection {\n        constructor(ranges, primIndex) {\n            this.ranges = ranges;\n            this.primIndex = primIndex;\n        }\n        primary() {\n            return this.ranges[this.primIndex];\n        }\n        equals(other) {\n            if (other == this)\n                return true;\n            if (other.primIndex != this.primIndex || other.ranges.length != this.ranges.length)\n                return false;\n            for (let i = 0; i < this.ranges.length; i++) {\n                let here = this.ranges[i], there = other.ranges[i];\n                if (!a.equalCursorPos(here.anchor, there.anchor) || !a.equalCursorPos(here.head, there.head))\n                    return false;\n            }\n            return true;\n        }\n        deepCopy() {\n            let out = [];\n            for (let i = 0; i < this.ranges.length; i++)\n                out[i] = new Range(a.copyPos(this.ranges[i].anchor), a.copyPos(this.ranges[i].head));\n            return new Selection(out, this.primIndex);\n        }\n        somethingSelected() {\n            for (let i = 0; i < this.ranges.length; i++)\n                if (!this.ranges[i].empty())\n                    return true;\n            return false;\n        }\n        contains(pos, end) {\n            if (!end)\n                end = pos;\n            for (let i = 0; i < this.ranges.length; i++) {\n                let range = this.ranges[i];\n                if (a.cmp(end, range.from()) >= 0 && a.cmp(pos, range.to()) <= 0)\n                    return i;\n            }\n            return -1;\n        }\n    }\n    class Range {\n        constructor(anchor, head) {\n            this.anchor = anchor;\n            this.head = head;\n        }\n        from() {\n            return a.minPos(this.anchor, this.head);\n        }\n        to() {\n            return a.maxPos(this.anchor, this.head);\n        }\n        empty() {\n            return this.head.line == this.anchor.line && this.head.ch == this.anchor.ch;\n        }\n    }\n    function normalizeSelection(cm, ranges, primIndex) {\n        let mayTouch = cm && cm.options.selectionsMayTouch;\n        let prim = ranges[primIndex];\n        ranges.sort((a, b) => a.cmp(a.from(), b.from()));\n        primIndex = b.indexOf(ranges, prim);\n        for (let i = 1; i < ranges.length; i++) {\n            let cur = ranges[i], prev = ranges[i - 1];\n            let diff = a.cmp(prev.to(), cur.from());\n            if (mayTouch && !cur.empty() ? diff > 0 : diff >= 0) {\n                let from = a.minPos(prev.from(), cur.from()), to = a.maxPos(prev.to(), cur.to());\n                let inv = prev.empty() ? cur.from() == cur.head : prev.from() == prev.head;\n                if (i <= primIndex)\n                    --primIndex;\n                ranges.splice(--i, 2, new Range(inv ? to : from, inv ? from : to));\n            }\n        }\n        return new Selection(ranges, primIndex);\n    }\n    function simpleSelection(anchor, head) {\n        return new Selection([new Range(anchor, head || anchor)], 0);\n    }\n    return {\n        Selection: Selection,\n        Range: Range,\n        normalizeSelection: normalizeSelection,\n        simpleSelection: simpleSelection\n    };\n});"]}