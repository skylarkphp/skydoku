{"version":3,"sources":["primitives/edit/options.js"],"names":["define","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","Init","toString","guttersChanged","cm","updateGutters","regChange","alignHorizontally","dragDropChanged","value","old","funcs","display","dragFunctions","toggle","on","off","scroller","start","enter","over","leave","drop","wrappingChanged","options","lineWrapping","addClass","wrapper","sizer","style","minWidth","sizerWidth","rmClass","findMaxLine","estimateLineHeights","clearCaches","setTimeout","updateScrollbars","defaults","optionHandlers","defineOptions","CodeMirror","option","name","deflt","handle","notOnInit","val","defineOption","setValue","doc","modeOption","loadMode","resetModeState","lineSep","newBreaks","lineNo","first","iter","line","pos","found","text","indexOf","length","push","Pos","replaceRange","ch","state","specialChars","RegExp","source","test","refresh","defaultSpecialCharPlaceholder","mobile","Error","getInputField","spellcheck","autocorrect","autocapitalize","windows","themeChanged","next","getKeyMap","prev","detach","attach","setGuttersForLineNumbers","gutters","left","compensateForHScroll","initScrollbars","scrollbars","setScrollTop","scrollTop","setScrollLeft","scrollLeft","integer","updateSelection","onBlur","input","blur","readOnlyChanged","reset","history","undoDepth","resetPosition","getField","tabIndex","setDirection"],"mappings":"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","file":"../../../primitives/edit/options.js","sourcesContent":["define([\n    '../display/focus',\n    '../display/gutters',\n    '../display/line_numbers',\n    '../display/mode_state',\n    '../display/scrollbars',\n    '../display/selection',\n    '../display/view_tracking',\n    '../input/keymap',\n    '../line/line_data',\n    '../line/pos',\n    '../line/spans',\n    '../measurement/position_measurement',\n    '../model/changes',\n    '../util/browser',\n    '../util/dom',\n    '../util/event',\n    './utils'\n], function (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {\n    'use strict';\n    let Init = {\n        toString: function () {\n            return 'CodeMirror.Init';\n        }\n    };\n    let defaults = {};\n    let optionHandlers = {};\n    function defineOptions(CodeMirror) {\n        let optionHandlers = CodeMirror.optionHandlers;\n        function option(name, deflt, handle, notOnInit) {\n            CodeMirror.defaults[name] = deflt;\n            if (handle)\n                optionHandlers[name] = notOnInit ? (cm, val, old) => {\n                    if (old != Init)\n                        handle(cm, val, old);\n                } : handle;\n        }\n        CodeMirror.defineOption = option;\n        CodeMirror.Init = Init;\n        option('value', '', (cm, val) => cm.setValue(val), true);\n        option('mode', null, (cm, val) => {\n            cm.doc.modeOption = val;\n            d.loadMode(cm);\n        }, true);\n        option('indentUnit', 2, d.loadMode, true);\n        option('indentWithTabs', false);\n        option('smartIndent', true);\n        option('tabSize', 4, cm => {\n            d.resetModeState(cm);\n            l.clearCaches(cm);\n            g.regChange(cm);\n        }, true);\n        option('lineSeparator', null, (cm, val) => {\n            cm.doc.lineSep = val;\n            if (!val)\n                return;\n            let newBreaks = [], lineNo = cm.doc.first;\n            cm.doc.iter(line => {\n                for (let pos = 0;;) {\n                    let found = line.text.indexOf(val, pos);\n                    if (found == -1)\n                        break;\n                    pos = found + val.length;\n                    newBreaks.push(j.Pos(lineNo, found));\n                }\n                lineNo++;\n            });\n            for (let i = newBreaks.length - 1; i >= 0; i--)\n                m.replaceRange(cm.doc, val, newBreaks[i], j.Pos(newBreaks[i].line, newBreaks[i].ch + val.length));\n        });\n        option('specialChars', /[\\u0000-\\u001f\\u007f-\\u009f\\u00ad\\u061c\\u200b-\\u200f\\u2028\\u2029\\ufeff]/g, (cm, val, old) => {\n            cm.state.specialChars = new RegExp(val.source + (val.test('\\t') ? '' : '|\\t'), 'g');\n            if (old != Init)\n                cm.refresh();\n        });\n        option('specialCharPlaceholder', i.defaultSpecialCharPlaceholder, cm => cm.refresh(), true);\n        option('electricChars', true);\n        option('inputStyle', n.mobile ? 'contenteditable' : 'textarea', () => {\n            throw new Error('inputStyle can not (yet) be changed in a running editor');\n        }, true);\n        option('spellcheck', false, (cm, val) => cm.getInputField().spellcheck = val, true);\n        option('autocorrect', false, (cm, val) => cm.getInputField().autocorrect = val, true);\n        option('autocapitalize', false, (cm, val) => cm.getInputField().autocapitalize = val, true);\n        option('rtlMoveVisually', !n.windows);\n        option('wholeLineUpdateBefore', true);\n        option('theme', 'default', cm => {\n            q.themeChanged(cm);\n            guttersChanged(cm);\n        }, true);\n        option('keyMap', 'default', (cm, val, old) => {\n            let next = h.getKeyMap(val);\n            let prev = old != Init && h.getKeyMap(old);\n            if (prev && prev.detach)\n                prev.detach(cm, next);\n            if (next.attach)\n                next.attach(cm, prev || null);\n        });\n        option('extraKeys', null);\n        option('configureMouse', null);\n        option('lineWrapping', false, wrappingChanged, true);\n        option('gutters', [], cm => {\n            b.setGuttersForLineNumbers(cm.options);\n            guttersChanged(cm);\n        }, true);\n        option('fixedGutter', true, (cm, val) => {\n            cm.display.gutters.style.left = val ? l.compensateForHScroll(cm.display) + 'px' : '0';\n            cm.refresh();\n        }, true);\n        option('coverGutterNextToScrollbar', false, cm => e.updateScrollbars(cm), true);\n        option('scrollbarStyle', 'native', cm => {\n            e.initScrollbars(cm);\n            e.updateScrollbars(cm);\n            cm.display.scrollbars.setScrollTop(cm.doc.scrollTop);\n            cm.display.scrollbars.setScrollLeft(cm.doc.scrollLeft);\n        }, true);\n        option('lineNumbers', false, cm => {\n            b.setGuttersForLineNumbers(cm.options);\n            guttersChanged(cm);\n        }, true);\n        option('firstLineNumber', 1, guttersChanged, true);\n        option('lineNumberFormatter', integer => integer, guttersChanged, true);\n        option('showCursorWhenSelecting', false, f.updateSelection, true);\n        option('resetSelectionOnContextMenu', true);\n        option('lineWiseCopyCut', true);\n        option('pasteLinesPerSelection', true);\n        option('selectionsMayTouch', false);\n        option('readOnly', false, (cm, val) => {\n            if (val == 'nocursor') {\n                a.onBlur(cm);\n                cm.display.input.blur();\n            }\n            cm.display.input.readOnlyChanged(val);\n        });\n        option('disableInput', false, (cm, val) => {\n            if (!val)\n                cm.display.input.reset();\n        }, true);\n        option('dragDrop', true, dragDropChanged);\n        option('allowDropFileTypes', null);\n        option('cursorBlinkRate', 530);\n        option('cursorScrollMargin', 0);\n        option('cursorHeight', 1, f.updateSelection, true);\n        option('singleCursorHeightPerLine', true, f.updateSelection, true);\n        option('workTime', 100);\n        option('workDelay', 100);\n        option('flattenSpans', true, d.resetModeState, true);\n        option('addModeClass', false, d.resetModeState, true);\n        option('pollInterval', 100);\n        option('undoDepth', 200, (cm, val) => cm.doc.history.undoDepth = val);\n        option('historyEventDelay', 1250);\n        option('viewportMargin', 10, cm => cm.refresh(), true);\n        option('maxHighlightLength', 10000, d.resetModeState, true);\n        option('moveInputWithCursor', true, (cm, val) => {\n            if (!val)\n                cm.display.input.resetPosition();\n        });\n        option('tabindex', null, (cm, val) => cm.display.input.getField().tabIndex = val || '');\n        option('autofocus', null);\n        option('direction', 'ltr', (cm, val) => cm.doc.setDirection(val), true);\n        option('phrases', null);\n    }\n    function guttersChanged(cm) {\n        b.updateGutters(cm);\n        g.regChange(cm);\n        c.alignHorizontally(cm);\n    }\n    function dragDropChanged(cm, value, old) {\n        let wasOn = old && old != Init;\n        if (!value != !wasOn) {\n            let funcs = cm.display.dragFunctions;\n            let toggle = value ? p.on : p.off;\n            toggle(cm.display.scroller, 'dragstart', funcs.start);\n            toggle(cm.display.scroller, 'dragenter', funcs.enter);\n            toggle(cm.display.scroller, 'dragover', funcs.over);\n            toggle(cm.display.scroller, 'dragleave', funcs.leave);\n            toggle(cm.display.scroller, 'drop', funcs.drop);\n        }\n    }\n    function wrappingChanged(cm) {\n        if (cm.options.lineWrapping) {\n            o.addClass(cm.display.wrapper, 'CodeMirror-wrap');\n            cm.display.sizer.style.minWidth = '';\n            cm.display.sizerWidth = null;\n        } else {\n            o.rmClass(cm.display.wrapper, 'CodeMirror-wrap');\n            k.findMaxLine(cm);\n        }\n        l.estimateLineHeights(cm);\n        g.regChange(cm);\n        l.clearCaches(cm);\n        setTimeout(() => e.updateScrollbars(cm), 100);\n    }\n    return {\n        Init: Init,\n        defaults: defaults,\n        optionHandlers: optionHandlers,\n        defineOptions: defineOptions\n    };\n});"]}