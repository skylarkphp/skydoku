{"version":3,"sources":["skylark-storages-diskfs-all.js"],"names":["define","obj1","path","obj2","split","length","ns","i","name","_attach","skylark","attach","obj","main","diskfs","class2type","toString","type","forEach","toLowerCase","String","call","isEmptyObject","isFunction","value","isHtmlNode","nodeType","isNumber","isObject","isString","isWindow","window","isArray","object","constructor","Array","isArrayLike","isBoolean","isDefined","isDocument","DOCUMENT_NODE","isEmpty","isNull","isNumeric","isPlainObject","Object","getPrototypeOf","prototype","isSameOrigin","href","origin","location","protocol","hostname","port","startsWith","isSymbol","isObjectLike","objectToString","symbolTag","isUndefined","undefined","types","downlad","data","navigator","msSaveBlob","dataURItoBlob","a","document","createElement","Blob","URL","createObjectURL","setAttribute","dispatchEvent","CustomEvent","INFINITY","MAX_INTEGER","NAN","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","toFinite","toNumber","sign","other","valueOf","replace","isBinary","test","slice","toInteger","result","remainder","numbers","eq","deepEq","hasOwnProperty","keysFunc","defaults","SymbolProto","Symbol","allKeys","keys","key","push","has","_mixin","target","source","deep","safe","_parseMixinArgs","args","params","arguments","shift","pop","sources","mixin","apply","this","values","b","aStack","bStack","className","areArrays","aCtor","bCtor","clone","src","checkCloneMethod","copy","index","l","each","callback","undef","extend","arg","isEqual","includes","collection","fromIndex","guard","nativeMax","indexOf","baseIndexOf","isMatch","attrs","omit","prop1","prop2","pn","pick","removeItem","items","item","idx","splice","fallback","prop","safeMixin","objects","filter","baseFindIndex","array","predicate","fromRight","baseIsNaN","flatten","j","compact","first","n","func","grep","out","inArray","makeArray","offset","startWith","concat","merge","second","arr","fn","map","elements","reduce","initialValue","uniq","arrays","delegate","TMP","props","tmp","templateSettings","evaluate","interpolate","escape","debounce","wait","timeout","context","clearTimeout","setTimeout","defer","requestAnimationFrame","setTimeoutout","noop","proxy","unshift","TypeError","returnTrue","returnFalse","template","text","settings","oldSettings","render","matcher","RegExp","noMatch","join","match","escapeRegExp","escapeChar","variable","Function","e","_","argument","funcs","PGLISTENERS","PGNOTIFIES","Promise","always","handler","then","done","fail","catch","Deferred","self","p","promise","resolve","reject","_resolve","_reject","wrapPromise","d","added","state","isResolved","isRejected","onResolved","onRejected","onProgress","progress","__ctx__","pipe","resolveWith","_resolved","notify","listener","error","reason","rejectWith","_rejected","errback","progback","all","bind","race","when","valueOrPromise","receivedPromise","nativePromise","deferred","cancel","err","immediate","read","readFile","file","reader","FileReader","onload","evt","onerror","code","alert","asArrayBuffer","readAsArrayBuffer","asDataUrl","readAsDataURL","asText","readAsText","readImage","fileObj","img","Image","dataUrl","fileInput","maxFileSize","select","directory","multiple","accept","title","fileSelected","picked","input","selectFiles","pickedFiles","size","style","position","left","top","opacity","body","appendChild","onchange","entries","webkitEntries","webentry","files","webkitdirectory","click","one","entry","onError","isFile","relativePath","isDirectory","dirReader","createReader","readEntries"],"mappings":"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","file":"../skylark-storages-diskfs-all.js","sourcesContent":["define('skylark-langx-ns/_attach',[],function(){\r\n    return  function attach(obj1,path,obj2) {\r\n        if (typeof path == \"string\") {\r\n            path = path.split(\".\");//[path]\r\n        };\r\n        var length = path.length,\r\n            ns=obj1,\r\n            i=0,\r\n            name = path[i++];\r\n\r\n        while (i < length) {\r\n            ns = ns[name] = ns[name] || {};\r\n            name = path[i++];\r\n        }\r\n\r\n        return ns[name] = obj2;\r\n    }\r\n});\ndefine('skylark-langx-ns/ns',[\r\n    \"./_attach\"\r\n], function(_attach) {\r\n    var skylark = {\r\n    \tattach : function(path,obj) {\r\n    \t\treturn _attach(skylark,path,obj);\r\n    \t}\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-langx-ns/main',[\r\n\t\"./ns\"\r\n],function(skylark){\r\n\treturn skylark;\r\n});\ndefine('skylark-langx-ns', ['skylark-langx-ns/main'], function (main) { return main; });\n\ndefine('skylark-langx/skylark',[\r\n    \"skylark-langx-ns\"\r\n], function(ns) {\r\n\treturn ns;\r\n});\r\n\ndefine('skylark-storages-diskfs/diskfs',[\r\n    \"skylark-langx/skylark\"\r\n], function(skylark) {\r\n\r\n    function dataURLtoBlob(dataurl) {\r\n        var arr = dataurl.split(','),\r\n            mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]),\r\n            n = bstr.length,\r\n            u8arr = new Uint8Array(n);\r\n        while (n--) {\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new Blob([u8arr], { type: mime });\r\n    }\r\n\r\n\r\n    var diskfs = function() {\r\n        return diskfs;\r\n    };\r\n\r\n    return skylark.attach(\"storages.diskfs\", diskfs);\r\n});\ndefine('skylark-langx-types/types',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n    var toString = {}.toString;\r\n    \r\n    var type = (function() {\r\n        var class2type = {};\r\n\r\n        // Populate the class2type map\r\n        \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split(\" \").forEach(function(name) {\r\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n        });\r\n\r\n        return function type(obj) {\r\n            return obj == null ? String(obj) :\r\n                class2type[toString.call(obj)] || \"object\";\r\n        };\r\n    })();\r\n\r\n    function isArray(object) {\r\n        return object && object.constructor === Array;\r\n    }\r\n\r\n\r\n    /**\r\n     * Checks if `value` is array-like. A value is considered array-like if it's\r\n     * not a function/string/element and has a `value.length` that's an integer greater than or\r\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\r\n     *\r\n     * @category Lang\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\r\n     * @example\r\n     *\r\n     * isArrayLike([1, 2, 3])\r\n     * // => true\r\n     *\r\n     * isArrayLike(document.body.children)\r\n     * // => false\r\n     *\r\n     * isArrayLike('abc')\r\n     * // => true\r\n     *\r\n     * isArrayLike(Function)\r\n     * // => false\r\n     */    \r\n    function isArrayLike(obj) {\r\n        return !isString(obj) && !isHtmlNode(obj) && typeof obj.length == 'number' && !isFunction(obj);\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is classified as a boolean primitive or object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\r\n     * @example\r\n     *\r\n     * isBoolean(false)\r\n     * // => true\r\n     *\r\n     * isBoolean(null)\r\n     * // => false\r\n     */\r\n    function isBoolean(obj) {\r\n        return typeof(obj) === \"boolean\";\r\n    }\r\n\r\n    function isDefined(obj) {\r\n        return typeof obj !== 'undefined';\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\r\n    }\r\n\r\n    function isEmptyObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n            if (obj[name] !== null) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    /**\r\n     * Checks if `value` is classified as a `Function` object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\r\n     * @example\r\n     *\r\n     * isFunction(parseInt)\r\n     * // => true\r\n     *\r\n     * isFunction(/abc/)\r\n     * // => false\r\n     */\r\n    function isFunction(value) {\r\n        return type(value) == \"function\";\r\n    }\r\n\r\n    function isHtmlNode(obj) {\r\n        return obj && obj.nodeType; // obj instanceof Node; //Consider the elements in IFRAME\r\n    }\r\n\r\n    function isInstanceOf( /*Object*/ value, /*Type*/ type) {\r\n        //Tests whether the value is an instance of a type.\r\n        if (value === undefined) {\r\n            return false;\r\n        } else if (value === null || type == Object) {\r\n            return true;\r\n        } else if (typeof value === \"number\") {\r\n            return type === Number;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else if (typeof value === \"boolean\") {\r\n            return type === Boolean;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else {\r\n            return (value instanceof type) || (value && value.isInstanceOf ? value.isInstanceOf(type) : false);\r\n        }\r\n    }\r\n\r\n    function isNull(value) {\r\n      return type(value) === \"null\";\r\n    }\r\n\r\n    function isNumber(obj) {\r\n        return typeof obj == 'number';\r\n    }\r\n\r\n    function isObject(obj) {\r\n        return type(obj) == \"object\";\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return obj && obj == obj.window;\r\n    }\r\n\r\n    function isSameOrigin(href) {\r\n        if (href) {\r\n            var origin = location.protocol + '//' + location.hostname;\r\n            if (location.port) {\r\n                origin += ':' + location.port;\r\n            }\r\n            return href.startsWith(origin);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is classified as a `Symbol` primitive or object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\r\n     * @example\r\n     *\r\n     * _.isSymbol(Symbol.iterator);\r\n     * // => true\r\n     *\r\n     * _.isSymbol('abc');\r\n     * // => false\r\n     */\r\n    function isSymbol(value) {\r\n      return typeof value == 'symbol' ||\r\n        (isObjectLike(value) && objectToString.call(value) == symbolTag);\r\n    }\r\n\r\n    function isUndefined(value) {\r\n      return value === undefined\r\n    }\r\n\r\n    return skylark.attach(\"langx.types\",{\r\n\r\n        isArray: isArray,\r\n\r\n        isArrayLike: isArrayLike,\r\n\r\n        isBoolean: isBoolean,\r\n\r\n        isDefined: isDefined,\r\n\r\n        isDocument: isDocument,\r\n\r\n        isEmpty : isEmptyObject,\r\n\r\n        isEmptyObject: isEmptyObject,\r\n\r\n        isFunction: isFunction,\r\n\r\n        isHtmlNode: isHtmlNode,\r\n\r\n        isNull: isNull,\r\n\r\n        isNumber: isNumber,\r\n\r\n        isNumeric: isNumber,\r\n\r\n        isObject: isObject,\r\n\r\n        isPlainObject: isPlainObject,\r\n\r\n        isString: isString,\r\n\r\n        isSameOrigin: isSameOrigin,\r\n\r\n        isSymbol : isSymbol,\r\n\r\n        isUndefined: isUndefined,\r\n\r\n        isWindow: isWindow,\r\n\r\n        type: type\r\n    });\r\n\r\n});\ndefine('skylark-langx-types/main',[\r\n\t\"./types\"\r\n],function(types){\r\n\treturn types;\r\n});\ndefine('skylark-langx-types', ['skylark-langx-types/main'], function (main) { return main; });\n\ndefine('skylark-langx/types',[\r\n    \"skylark-langx-types\"\r\n],function(types){\r\n    return types;\r\n});\ndefine('skylark-storages-diskfs/download',[\r\n    \"skylark-langx/types\",\r\n    \"./diskfs\"\r\n],function(types,diskfs){\r\n\r\n    function downloadFile(data, name) {\r\n        if (window.navigator.msSaveBlob) {\r\n            if (types.isString(data)) {\r\n                data = dataURItoBlob(data);\r\n            }\r\n            window.navigator.msSaveBlob(data, name);\r\n        } else {\r\n            var a = document.createElement('a');\r\n            if (data instanceof Blob) {\r\n                data = URL.createObjectURL(data);\r\n            }\r\n            a.href = data;\r\n            a.setAttribute('download', name || 'noname');\r\n            a.dispatchEvent(new CustomEvent('click'));\r\n        }\r\n    }\r\n\r\n    return diskfs.downlad = downloadFile;\r\n\r\n});\r\n\ndefine('skylark-langx-numbers/numbers',[\r\n    \"skylark-langx-ns\",\r\n    \"skylark-langx-types\"\r\n],function(skylark,types){\r\n\tvar isObject = types.isObject,\r\n\t\tisSymbol = types.isSymbol;\r\n\r\n\tvar INFINITY = 1 / 0,\r\n\t    MAX_SAFE_INTEGER = 9007199254740991,\r\n\t    MAX_INTEGER = 1.7976931348623157e+308,\r\n\t    NAN = 0 / 0;\r\n\r\n\t/** Used to match leading and trailing whitespace. */\r\n\tvar reTrim = /^\\s+|\\s+$/g;\r\n\r\n\t/** Used to detect bad signed hexadecimal string values. */\r\n\tvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\r\n\r\n\t/** Used to detect binary string values. */\r\n\tvar reIsBinary = /^0b[01]+$/i;\r\n\r\n\t/** Used to detect octal string values. */\r\n\tvar reIsOctal = /^0o[0-7]+$/i;\r\n\r\n\t/** Used to detect unsigned integer values. */\r\n\tvar reIsUint = /^(?:0|[1-9]\\d*)$/;\r\n\r\n\t/** Built-in method references without a dependency on `root`. */\r\n\tvar freeParseInt = parseInt;\r\n\r\n\t/**\r\n\t * Converts `value` to a finite number.\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @since 4.12.0\r\n\t * @category Lang\r\n\t * @param {*} value The value to convert.\r\n\t * @returns {number} Returns the converted number.\r\n\t * @example\r\n\t *\r\n\t * _.toFinite(3.2);\r\n\t * // => 3.2\r\n\t *\r\n\t * _.toFinite(Number.MIN_VALUE);\r\n\t * // => 5e-324\r\n\t *\r\n\t * _.toFinite(Infinity);\r\n\t * // => 1.7976931348623157e+308\r\n\t *\r\n\t * _.toFinite('3.2');\r\n\t * // => 3.2\r\n\t */\r\n\tfunction toFinite(value) {\r\n\t  if (!value) {\r\n\t    return value === 0 ? value : 0;\r\n\t  }\r\n\t  value = toNumber(value);\r\n\t  if (value === INFINITY || value === -INFINITY) {\r\n\t    var sign = (value < 0 ? -1 : 1);\r\n\t    return sign * MAX_INTEGER;\r\n\t  }\r\n\t  return value === value ? value : 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts `value` to an integer.\r\n\t *\r\n\t * **Note:** This method is loosely based on\r\n\t * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @param {*} value The value to convert.\r\n\t * @returns {number} Returns the converted integer.\r\n\t * @example\r\n\t *\r\n\t * _.toInteger(3.2);\r\n\t * // => 3\r\n\t *\r\n\t * _.toInteger(Number.MIN_VALUE);\r\n\t * // => 0\r\n\t *\r\n\t * _.toInteger(Infinity);\r\n\t * // => 1.7976931348623157e+308\r\n\t *\r\n\t * _.toInteger('3.2');\r\n\t * // => 3\r\n\t */\r\n\tfunction toInteger(value) {\r\n\t  var result = toFinite(value),\r\n\t      remainder = result % 1;\r\n\r\n\t  return result === result ? (remainder ? result - remainder : result) : 0;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Converts `value` to a number.\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @since 4.0.0\r\n\t * @category Lang\r\n\t * @param {*} value The value to process.\r\n\t * @returns {number} Returns the number.\r\n\t * @example\r\n\t *\r\n\t * _.toNumber(3.2);\r\n\t * // => 3.2\r\n\t *\r\n\t * _.toNumber(Number.MIN_VALUE);\r\n\t * // => 5e-324\r\n\t *\r\n\t * _.toNumber(Infinity);\r\n\t * // => Infinity\r\n\t *\r\n\t * _.toNumber('3.2');\r\n\t * // => 3.2\r\n\t */\r\n\tfunction toNumber(value) {\r\n\t  if (typeof value == 'number') {\r\n\t    return value;\r\n\t  }\r\n\t  if (isSymbol(value)) {\r\n\t    return NAN;\r\n\t  }\r\n\t  if (isObject(value)) {\r\n\t    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\r\n\t    value = isObject(other) ? (other + '') : other;\r\n\t  }\r\n\t  if (typeof value != 'string') {\r\n\t    return value === 0 ? value : +value;\r\n\t  }\r\n\t  value = value.replace(reTrim, '');\r\n\t  var isBinary = reIsBinary.test(value);\r\n\t  return (isBinary || reIsOctal.test(value))\r\n\t    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\r\n\t    : (reIsBadHex.test(value) ? NAN : +value);\r\n\t}\r\n\r\n\treturn  skylark.attach(\"langx.numbers\",{\r\n\t\ttoFinite : toFinite,\r\n\t\ttoNumber : toNumber,\r\n\t\ttoInteger : toInteger\r\n\t});\r\n});\ndefine('skylark-langx-numbers/main',[\r\n\t\"./numbers\"\r\n],function(numbers){\r\n\treturn numbers;\r\n});\ndefine('skylark-langx-numbers', ['skylark-langx-numbers/main'], function (main) { return main; });\n\ndefine('skylark-langx-objects/objects',[\r\n    \"skylark-langx-ns/ns\",\r\n    \"skylark-langx-ns/_attach\",\r\n\t\"skylark-langx-types\",\r\n    \"skylark-langx-numbers\"\r\n],function(skylark,_attach,types,numbers){\r\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty,\r\n        slice = Array.prototype.slice,\r\n        isBoolean = types.isBoolean,\r\n        isFunction = types.isFunction,\r\n\t\tisObject = types.isObject,\r\n\t\tisPlainObject = types.isPlainObject,\r\n\t\tisArray = types.isArray,\r\n        isArrayLike = types.isArrayLike,\r\n        isString = types.isString,\r\n        toInteger = numbers.toInteger;\r\n\r\n     // An internal function for creating assigner functions.\r\n    function createAssigner(keysFunc, defaults) {\r\n        return function(obj) {\r\n          var length = arguments.length;\r\n          if (defaults) obj = Object(obj);  \r\n          if (length < 2 || obj == null) return obj;\r\n          for (var index = 1; index < length; index++) {\r\n            var source = arguments[index],\r\n                keys = keysFunc(source),\r\n                l = keys.length;\r\n            for (var i = 0; i < l; i++) {\r\n              var key = keys[i];\r\n              if (!defaults || obj[key] === void 0) obj[key] = source[key];\r\n            }\r\n          }\r\n          return obj;\r\n       };\r\n    }\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    var eq, deepEq;\r\n    var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\r\n\r\n    eq = function(a, b, aStack, bStack) {\r\n        // Identical objects are equal. `0 === -0`, but they aren't identical.\r\n        // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n        if (a === b) return a !== 0 || 1 / a === 1 / b;\r\n        // `null` or `undefined` only equal to itself (strict comparison).\r\n        if (a == null || b == null) return false;\r\n        // `NaN`s are equivalent, but non-reflexive.\r\n        if (a !== a) return b !== b;\r\n        // Exhaust primitive checks\r\n        var type = typeof a;\r\n        if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\r\n        return deepEq(a, b, aStack, bStack);\r\n    };\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    deepEq = function(a, b, aStack, bStack) {\r\n        // Unwrap any wrapped objects.\r\n        //if (a instanceof _) a = a._wrapped;\r\n        //if (b instanceof _) b = b._wrapped;\r\n        // Compare `[[Class]]` names.\r\n        var className = toString.call(a);\r\n        if (className !== toString.call(b)) return false;\r\n        switch (className) {\r\n            // Strings, numbers, regular expressions, dates, and booleans are compared by value.\r\n            case '[object RegExp]':\r\n            // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\r\n            case '[object String]':\r\n                // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n                // equivalent to `new String(\"5\")`.\r\n                return '' + a === '' + b;\r\n            case '[object Number]':\r\n                // `NaN`s are equivalent, but non-reflexive.\r\n                // Object(NaN) is equivalent to NaN.\r\n                if (+a !== +a) return +b !== +b;\r\n                // An `egal` comparison is performed for other numeric values.\r\n                return +a === 0 ? 1 / +a === 1 / b : +a === +b;\r\n            case '[object Date]':\r\n            case '[object Boolean]':\r\n                // Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n                // millisecond representations. Note that invalid dates with millisecond representations\r\n                // of `NaN` are not equivalent.\r\n                return +a === +b;\r\n            case '[object Symbol]':\r\n                return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\r\n        }\r\n\r\n        var areArrays = className === '[object Array]';\r\n        if (!areArrays) {\r\n            if (typeof a != 'object' || typeof b != 'object') return false;\r\n            // Objects with different constructors are not equivalent, but `Object`s or `Array`s\r\n            // from different frames are.\r\n            var aCtor = a.constructor, bCtor = b.constructor;\r\n            if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\r\n                               isFunction(bCtor) && bCtor instanceof bCtor)\r\n                          && ('constructor' in a && 'constructor' in b)) {\r\n                return false;\r\n            }\r\n        }\r\n        // Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n\r\n        // Initializing stack of traversed objects.\r\n        // It's done here since we only need them for objects and arrays comparison.\r\n        aStack = aStack || [];\r\n        bStack = bStack || [];\r\n        var length = aStack.length;\r\n        while (length--) {\r\n            // Linear search. Performance is inversely proportional to the number of\r\n            // unique nested structures.\r\n            if (aStack[length] === a) return bStack[length] === b;\r\n        }\r\n\r\n        // Add the first object to the stack of traversed objects.\r\n        aStack.push(a);\r\n        bStack.push(b);\r\n\r\n        // Recursively compare objects and arrays.\r\n        if (areArrays) {\r\n            // Compare array lengths to determine if a deep comparison is necessary.\r\n            length = a.length;\r\n            if (length !== b.length) return false;\r\n            // Deep compare the contents, ignoring non-numeric properties.\r\n            while (length--) {\r\n                if (!eq(a[length], b[length], aStack, bStack)) return false;\r\n            }\r\n        } else {\r\n            // Deep compare objects.\r\n            var keys = Object.keys(a), key;\r\n            length = keys.length;\r\n            // Ensure that both objects contain the same number of properties before comparing deep equality.\r\n            if (Object.keys(b).length !== length) return false;\r\n            while (length--) {\r\n                // Deep compare each member\r\n                key = keys[length];\r\n                if (!(b[key]!==undefined && eq(a[key], b[key], aStack, bStack))) return false;\r\n            }\r\n        }\r\n        // Remove the first object from the stack of traversed objects.\r\n        aStack.pop();\r\n        bStack.pop();\r\n        return true;\r\n    };\r\n\r\n    // Retrieve all the property names of an object.\r\n    function allKeys(obj) {\r\n        if (!isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function each(obj, callback) {\r\n        var length, key, i, undef, value;\r\n\r\n        if (obj) {\r\n            length = obj.length;\r\n\r\n            if (length === undef) {\r\n                // Loop object items\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        value = obj[key];\r\n                        if (callback.call(value, key, value) === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Loop array items\r\n                for (i = 0; i < length; i++) {\r\n                    value = obj[i];\r\n                    if (callback.call(value, i, value) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function extend(target) {\r\n        var deep, args = slice.call(arguments, 1);\r\n        if (typeof target == 'boolean') {\r\n            deep = target\r\n            target = args.shift()\r\n        }\r\n        if (args.length == 0) {\r\n            args = [target];\r\n            target = this;\r\n        }\r\n        args.forEach(function(arg) {\r\n            mixin(target, arg, deep);\r\n        });\r\n        return target;\r\n    }\r\n\r\n    // Retrieve the names of an object's own properties.\r\n    // Delegates to **ECMAScript 5**'s native `Object.keys`.\r\n    function keys(obj) {\r\n        if (isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) if (has(obj, key)) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function has(obj, path) {\r\n        if (!isArray(path)) {\r\n            return obj != null && hasOwnProperty.call(obj, path);\r\n        }\r\n        var length = path.length;\r\n        for (var i = 0; i < length; i++) {\r\n            var key = path[i];\r\n            if (obj == null || !hasOwnProperty.call(obj, key)) {\r\n                return false;\r\n            }\r\n            obj = obj[key];\r\n        }\r\n        return !!length;\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\r\n     * checked for a substring of `value`, otherwise\r\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\r\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\r\n     * the offset from the end of `collection`.\r\n     *\r\n     * @static\r\n     * @memberOf _\r\n     * @since 0.1.0\r\n     * @category Collection\r\n     * @param {Array|Object|string} collection The collection to inspect.\r\n     * @param {*} value The value to search for.\r\n     * @param {number} [fromIndex=0] The index to search from.\r\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\r\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\r\n     * @example\r\n     *\r\n     * _.includes([1, 2, 3], 1);\r\n     * // => true\r\n     *\r\n     * _.includes([1, 2, 3], 1, 2);\r\n     * // => false\r\n     *\r\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\r\n     * // => true\r\n     *\r\n     * _.includes('abcd', 'bc');\r\n     * // => true\r\n     */\r\n    function includes(collection, value, fromIndex, guard) {\r\n      collection = isArrayLike(collection) ? collection : values(collection);\r\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\r\n\r\n      var length = collection.length;\r\n      if (fromIndex < 0) {\r\n        fromIndex = nativeMax(length + fromIndex, 0);\r\n      }\r\n      return isString(collection)\r\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\r\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\r\n    }\r\n\r\n\r\n   // Perform a deep comparison to check if two objects are equal.\r\n    function isEqual(a, b) {\r\n        return eq(a, b);\r\n    }\r\n\r\n    // Returns whether an object has a given set of `key:value` pairs.\r\n    function isMatch(object, attrs) {\r\n        var keys = keys(attrs), length = keys.length;\r\n        if (object == null) return !length;\r\n        var obj = Object(object);\r\n        for (var i = 0; i < length; i++) {\r\n          var key = keys[i];\r\n          if (attrs[key] !== obj[key] || !(key in obj)) return false;\r\n        }\r\n        return true;\r\n    }    \r\n\r\n    function _mixin(target, source, deep, safe) {\r\n        for (var key in source) {\r\n            //if (!source.hasOwnProperty(key)) {\r\n            //    continue;\r\n            //}\r\n            if (safe && target[key] !== undefined) {\r\n                continue;\r\n            }\r\n            if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n                if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\r\n                    target[key] = {};\r\n                }\r\n                if (isArray(source[key]) && !isArray(target[key])) {\r\n                    target[key] = [];\r\n                }\r\n                _mixin(target[key], source[key], deep, safe);\r\n            } else if (source[key] !== undefined) {\r\n                target[key] = source[key]\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function _parseMixinArgs(args) {\r\n        var params = slice.call(arguments, 0),\r\n            target = params.shift(),\r\n            deep = false;\r\n        if (isBoolean(params[params.length - 1])) {\r\n            deep = params.pop();\r\n        }\r\n\r\n        return {\r\n            target: target,\r\n            sources: params,\r\n            deep: deep\r\n        };\r\n    }\r\n\r\n    function mixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, false);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n   // Return a copy of the object without the blacklisted properties.\r\n    function omit(obj, prop1,prop2) {\r\n        if (!obj) {\r\n            return null;\r\n        }\r\n        var result = mixin({},obj);\r\n        for(var i=1;i<arguments.length;i++) {\r\n            var pn = arguments[i];\r\n            if (pn in obj) {\r\n                delete result[pn];\r\n            }\r\n        }\r\n        return result;\r\n\r\n    }\r\n\r\n   // Return a copy of the object only containing the whitelisted properties.\r\n    function pick(obj,prop1,prop2) {\r\n        if (!obj) {\r\n            return null;\r\n        }\r\n        var result = {};\r\n        for(var i=1;i<arguments.length;i++) {\r\n            var pn = arguments[i];\r\n            if (pn in obj) {\r\n                result[pn] = obj[pn];\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function removeItem(items, item) {\r\n        if (isArray(items)) {\r\n            var idx = items.indexOf(item);\r\n            if (idx != -1) {\r\n                items.splice(idx, 1);\r\n            }\r\n        } else if (isPlainObject(items)) {\r\n            for (var key in items) {\r\n                if (items[key] == item) {\r\n                    delete items[key];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function result(obj, path, fallback) {\r\n        if (!isArray(path)) {\r\n            path = path.split(\".\");//[path]\r\n        };\r\n        var length = path.length;\r\n        if (!length) {\r\n          return isFunction(fallback) ? fallback.call(obj) : fallback;\r\n        }\r\n        for (var i = 0; i < length; i++) {\r\n          var prop = obj == null ? void 0 : obj[path[i]];\r\n          if (prop === void 0) {\r\n            prop = fallback;\r\n            i = length; // Ensure we don't continue iterating.\r\n          }\r\n          obj = isFunction(prop) ? prop.call(obj) : prop;\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    function safeMixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, true);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    // Retrieve the values of an object's properties.\r\n    function values(obj) {\r\n        var keys = allKeys(obj);\r\n        var length = keys.length;\r\n        var values = Array(length);\r\n        for (var i = 0; i < length; i++) {\r\n            values[i] = obj[keys[i]];\r\n        }\r\n        return values;\r\n    }\r\n\r\n    function clone( /*anything*/ src,checkCloneMethod) {\r\n        var copy;\r\n        if (src === undefined || src === null) {\r\n            copy = src;\r\n        } else if (checkCloneMethod && src.clone) {\r\n            copy = src.clone();\r\n        } else if (isArray(src)) {\r\n            copy = [];\r\n            for (var i = 0; i < src.length; i++) {\r\n                copy.push(clone(src[i]));\r\n            }\r\n        } else if (isPlainObject(src)) {\r\n            copy = {};\r\n            for (var key in src) {\r\n                copy[key] = clone(src[key]);\r\n            }\r\n        } else {\r\n            copy = src;\r\n        }\r\n\r\n        return copy;\r\n\r\n    }\r\n\r\n    return skylark.attach(\"langx.objects\",{\r\n        allKeys: allKeys,\r\n\r\n        attach : _attach,\r\n\r\n        clone: clone,\r\n\r\n        defaults : createAssigner(allKeys, true),\r\n\r\n        each : each,\r\n\r\n        extend : extend,\r\n\r\n        has: has,\r\n\r\n        isEqual: isEqual,   \r\n\r\n        includes: includes,\r\n\r\n        isMatch: isMatch,\r\n\r\n        keys: keys,\r\n\r\n        mixin: mixin,\r\n\r\n        omit: omit,\r\n\r\n        pick: pick,\r\n\r\n        removeItem: removeItem,\r\n\r\n        result : result,\r\n        \r\n        safeMixin: safeMixin,\r\n\r\n        values: values\r\n    });\r\n\r\n\r\n});\ndefine('skylark-langx-objects/main',[\r\n\t\"./objects\"\r\n],function(objects){\r\n\treturn objects;\r\n});\ndefine('skylark-langx-objects', ['skylark-langx-objects/main'], function (main) { return main; });\n\ndefine('skylark-langx-arrays/arrays',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\"\r\n],function(skylark,types,objects){\r\n\tvar filter = Array.prototype.filter,\r\n\t\tisArrayLike = types.isArrayLike;\r\n\r\n    /**\r\n     * The base implementation of `_.findIndex` and `_.findLastIndex` without\r\n     * support for iteratee shorthands.\r\n     *\r\n     * @param {Array} array The array to inspect.\r\n     * @param {Function} predicate The function invoked per iteration.\r\n     * @param {number} fromIndex The index to search from.\r\n     * @param {boolean} [fromRight] Specify iterating from right to left.\r\n     * @returns {number} Returns the index of the matched value, else `-1`.\r\n     */\r\n    function baseFindIndex(array, predicate, fromIndex, fromRight) {\r\n      var length = array.length,\r\n          index = fromIndex + (fromRight ? 1 : -1);\r\n\r\n      while ((fromRight ? index-- : ++index < length)) {\r\n        if (predicate(array[index], index, array)) {\r\n          return index;\r\n        }\r\n      }\r\n      return -1;\r\n    }\r\n\r\n    /**\r\n     * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\r\n     *\r\n     * @param {Array} array The array to inspect.\r\n     * @param {*} value The value to search for.\r\n     * @param {number} fromIndex The index to search from.\r\n     * @returns {number} Returns the index of the matched value, else `-1`.\r\n     */\r\n    function baseIndexOf(array, value, fromIndex) {\r\n      if (value !== value) {\r\n        return baseFindIndex(array, baseIsNaN, fromIndex);\r\n      }\r\n      var index = fromIndex - 1,\r\n          length = array.length;\r\n\r\n      while (++index < length) {\r\n        if (array[index] === value) {\r\n          return index;\r\n        }\r\n      }\r\n      return -1;\r\n    }\r\n\r\n    /**\r\n     * The base implementation of `isNaN` without support for number objects.\r\n     *\r\n     * @private\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\r\n     */\r\n    function baseIsNaN(value) {\r\n      return value !== value;\r\n    }\r\n\r\n\r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n\r\n    function filter2(array,func) {\r\n      return filter.call(array,func);\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0; i < array.length; i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j < item.length; j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        objects.each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item);\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n       if (isArrayLike(obj) ) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n      }\r\n\r\n      // array of single index\r\n      return [ obj ];             \r\n    }\r\n\r\n\r\n    function forEach (arr, fn) {\r\n      if (arr.forEach) return arr.forEach(fn)\r\n      for (var i = 0; i < arr.length; i++) fn(arr[i], i);\r\n    }\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n\r\n    function merge( first, second ) {\r\n      var l = second.length,\r\n          i = first.length,\r\n          j = 0;\r\n\r\n      if ( typeof l === \"number\" ) {\r\n        for ( ; j < l; j++ ) {\r\n          first[ i++ ] = second[ j ];\r\n        }\r\n      } else {\r\n        while ( second[j] !== undefined ) {\r\n          first[ i++ ] = second[ j++ ];\r\n        }\r\n      }\r\n\r\n      first.length = i;\r\n\r\n      return first;\r\n    }\r\n\r\n    function reduce(array,callback,initialValue) {\r\n        return Array.prototype.reduce.call(array,callback,initialValue);\r\n    }\r\n\r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    return skylark.attach(\"langx.arrays\",{\r\n        baseFindIndex: baseFindIndex,\r\n\r\n        baseIndexOf : baseIndexOf,\r\n        \r\n        compact: compact,\r\n\r\n        first : function(items,n) {\r\n            if (n) {\r\n                return items.slice(0,n);\r\n            } else {\r\n                return items[0];\r\n            }\r\n        },\r\n\r\n        filter : filter2,\r\n        \r\n        flatten: flatten,\r\n\r\n        grep: grep,\r\n\r\n        inArray: inArray,\r\n\r\n        makeArray: makeArray,\r\n\r\n        merge : merge,\r\n\r\n        forEach : forEach,\r\n\r\n        map : map,\r\n        \r\n        reduce : reduce,\r\n\r\n        uniq : uniq\r\n\r\n    });\r\n});\ndefine('skylark-langx-arrays/main',[\r\n\t\"./arrays\"\r\n],function(arrays){\r\n\treturn arrays;\r\n});\ndefine('skylark-langx-arrays', ['skylark-langx-arrays/main'], function (main) { return main; });\n\ndefine('skylark-langx-funcs/funcs',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\"\r\n],function(skylark,types,objects){\r\n\tvar mixin = objects.mixin,\r\n        slice = Array.prototype.slice,\r\n        isFunction = types.isFunction,\r\n        isString = types.isString;\r\n\r\n    function defer(fn) {\r\n        if (requestAnimationFrame) {\r\n            requestAnimationFrame(fn);\r\n        } else {\r\n            setTimeoutout(fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function noop() {\r\n    }\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n    function debounce(fn, wait) {\r\n        var timeout;\r\n        return function () {\r\n            var context = this, args = arguments;\r\n            var later = function () {\r\n                timeout = null;\r\n                fn.apply(context, args);\r\n            };\r\n            if (timeout) clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n   \r\n    var delegate = (function() {\r\n        // boodman/crockford delegation w/ cornford optimization\r\n        function TMP() {}\r\n        return function(obj, props) {\r\n            TMP.prototype = obj;\r\n            var tmp = new TMP();\r\n            TMP.prototype = null;\r\n            if (props) {\r\n                mixin(tmp, props);\r\n            }\r\n            return tmp; // Object\r\n        };\r\n    })();\r\n\r\n  var templateSettings = {\r\n    evaluate: /<%([\\s\\S]+?)%>/g,\r\n    interpolate: /<%=([\\s\\S]+?)%>/g,\r\n    escape: /<%-([\\s\\S]+?)%>/g\r\n  };\r\n\r\n\r\n  function template(text, settings, oldSettings) {\r\n    if (!settings && oldSettings) settings = oldSettings;\r\n    settings = objects.defaults({}, settings,templateSettings);\r\n\r\n    // Combine delimiters into one regular expression via alternation.\r\n    var matcher = RegExp([\r\n      (settings.escape || noMatch).source,\r\n      (settings.interpolate || noMatch).source,\r\n      (settings.evaluate || noMatch).source\r\n    ].join('|') + '|$', 'g');\r\n\r\n    // Compile the template source, escaping string literals appropriately.\r\n    var index = 0;\r\n    var source = \"__p+='\";\r\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\r\n      source += text.slice(index, offset).replace(escapeRegExp, escapeChar);\r\n      index = offset + match.length;\r\n\r\n      if (escape) {\r\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\r\n      } else if (interpolate) {\r\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\r\n      } else if (evaluate) {\r\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\r\n      }\r\n\r\n      // Adobe VMs need the match returned to produce the correct offset.\r\n      return match;\r\n    });\r\n    source += \"';\\n\";\r\n\r\n    // If a variable is not specified, place data values in local scope.\r\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\r\n\r\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\r\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\r\n      source + 'return __p;\\n';\r\n\r\n    var render;\r\n    try {\r\n      render = new Function(settings.variable || 'obj', '_', source);\r\n    } catch (e) {\r\n      e.source = source;\r\n      throw e;\r\n    }\r\n\r\n    var template = function(data) {\r\n      return render.call(this, data, _);\r\n    };\r\n\r\n    // Provide the compiled source as a convenience for precompilation.\r\n    var argument = settings.variable || 'obj';\r\n    template.source = 'function(' + argument + '){\\n' + source + '}';\r\n\r\n    return template;\r\n  };\r\n\r\n    return skylark.attach(\"langx.funcs\",{\r\n        debounce: debounce,\r\n\r\n        delegate: delegate,\r\n\r\n        defer: defer,\r\n\r\n        noop : noop,\r\n\r\n        proxy: proxy,\r\n\r\n        returnTrue: function() {\r\n            return true;\r\n        },\r\n\r\n        returnFalse: function() {\r\n            return false;\r\n        },\r\n\r\n        templateSettings : templateSettings,\r\n        template : template\r\n    });\r\n});\ndefine('skylark-langx-funcs/main',[\r\n\t\"./funcs\"\r\n],function(funcs){\r\n\treturn funcs;\r\n});\ndefine('skylark-langx-funcs', ['skylark-langx-funcs/main'], function (main) { return main; });\n\ndefine('skylark-langx-async/Deferred',[\r\n    \"skylark-langx-arrays\",\r\n\t\"skylark-langx-funcs\",\r\n    \"skylark-langx-objects\"\r\n],function(arrays,funcs,objects){\r\n    \"use strict\";\r\n    \r\n    var  PGLISTENERS = Symbol ? Symbol() : '__pglisteners',\r\n         PGNOTIFIES = Symbol ? Symbol() : '__pgnotifies';\r\n\r\n    var slice = Array.prototype.slice,\r\n        proxy = funcs.proxy,\r\n        makeArray = arrays.makeArray,\r\n        result = objects.result,\r\n        mixin = objects.mixin;\r\n\r\n    mixin(Promise.prototype,{\r\n        always: function(handler) {\r\n            //this.done(handler);\r\n            //this.fail(handler);\r\n            this.then(handler,handler);\r\n            return this;\r\n        },\r\n        done : function() {\r\n            for (var i = 0;i<arguments.length;i++) {\r\n                this.then(arguments[i]);\r\n            }\r\n            return this;\r\n        },\r\n        fail : function(handler) { \r\n            //return mixin(Promise.prototype.catch.call(this,handler),added);\r\n            //return this.then(null,handler);\r\n            this.catch(handler);\r\n            return this;\r\n         }\r\n    });\r\n\r\n\r\n    var Deferred = function() {\r\n        var self = this,\r\n            p = this.promise = new Promise(function(resolve, reject) {\r\n                self._resolve = resolve;\r\n                self._reject = reject;\r\n            });\r\n\r\n        wrapPromise(p,self);\r\n\r\n        this[PGLISTENERS] = [];\r\n        this[PGNOTIFIES] = [];\r\n\r\n        //this.resolve = Deferred.prototype.resolve.bind(this);\r\n        //this.reject = Deferred.prototype.reject.bind(this);\r\n        //this.progress = Deferred.prototype.progress.bind(this);\r\n\r\n    };\r\n\r\n    function wrapPromise(p,d) {\r\n        var   added = {\r\n                state : function() {\r\n                    if (d.isResolved()) {\r\n                        return 'resolved';\r\n                    }\r\n                    if (d.isRejected()) {\r\n                        return 'rejected';\r\n                    }\r\n                    return 'pending';\r\n                },\r\n                then : function(onResolved,onRejected,onProgress) {\r\n                    if (onProgress) {\r\n                        this.progress(onProgress);\r\n                    }\r\n                    return wrapPromise(Promise.prototype.then.call(this,\r\n                            onResolved && function(args) {\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onResolved.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onResolved(args);\r\n                                }\r\n                            },\r\n                            onRejected && function(args){\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onRejected.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onRejected(args);\r\n                                }\r\n                            }));\r\n                },\r\n                progress : function(handler) {\r\n                    d[PGNOTIFIES].forEach(function (value) {\r\n                        handler(value);\r\n                    });\r\n                    d[PGLISTENERS].push(handler);\r\n                    return this;\r\n                }\r\n\r\n            };\r\n\r\n        added.pipe = added.then;\r\n        return mixin(p,added);\r\n\r\n    }\r\n\r\n    Deferred.prototype.resolve = function(value) {\r\n        var args = slice.call(arguments);\r\n        return this.resolveWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.resolveWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._resolve(args);\r\n        this._resolved = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.notify = function(value) {\r\n        try {\r\n            this[PGNOTIFIES].push(value);\r\n\r\n            return this[PGLISTENERS].forEach(function (listener) {\r\n                return listener(value);\r\n            });\r\n        } catch (error) {\r\n          this.reject(error);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        var args = slice.call(arguments);\r\n        return this.rejectWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.rejectWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._reject(args);\r\n        this._rejected = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.isResolved = function() {\r\n        return !!this._resolved;\r\n    };\r\n\r\n    Deferred.prototype.isRejected = function() {\r\n        return !!this._rejected;\r\n    };\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        var p = result(this,\"promise\");\r\n        return p.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.prototype.progress = function(progback){\r\n        var p = result(this,\"promise\");\r\n        return p.progress(progback);\r\n    };\r\n   \r\n    Deferred.prototype.catch = function(errback) {\r\n        var p = result(this,\"promise\");\r\n        return p.catch(errback);\r\n    };\r\n\r\n\r\n    Deferred.prototype.done  = function() {\r\n        var p = result(this,\"promise\");\r\n        return p.done.apply(p,arguments);\r\n    };\r\n\r\n    Deferred.prototype.fail = function(errback) {\r\n        var p = result(this,\"promise\");\r\n        return p.fail(errback);\r\n    };\r\n\r\n\r\n    Deferred.all = function(array) {\r\n        //return wrapPromise(Promise.all(array));\r\n        var d = new Deferred();\r\n        Promise.all(array).then(d.resolve.bind(d),d.reject.bind(d));\r\n        return result(d,\"promise\");\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return wrapPromise(Promise.race(array));\r\n    };\r\n\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n        } else if (!nativePromise) {\r\n            var deferred = new Deferred(valueOrPromise.cancel);\r\n            valueOrPromise.then(proxy(deferred.resolve,deferred), proxy(deferred.reject,deferred), deferred.notify);\r\n            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve.apply(d,arguments);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n    return Deferred;\r\n});\ndefine('skylark-storages-diskfs/read',[\r\n    \"skylark-langx-async/Deferred\",\r\n    \"./diskfs\"\r\n],function(Deferred, diskfs){\r\n\r\n    function readFile(file, params) {\r\n        params = params || {};\r\n        var d = new Deferred,\r\n            reader = new FileReader();\r\n\r\n        reader.onload = function(evt) {\r\n            d.resolve(evt.target.result);\r\n        };\r\n        reader.onerror = function(e) {\r\n            var code = e.target.error.code;\r\n            if (code === 2) {\r\n                alert('please don\\'t open this page using protocol fill:///');\r\n            } else {\r\n                alert('error code: ' + code);\r\n            }\r\n        };\r\n\r\n        if (params.asArrayBuffer) {\r\n            reader.readAsArrayBuffer(file);\r\n        } else if (params.asDataUrl) {\r\n            reader.readAsDataURL(file);\r\n        } else if (params.asText) {\r\n            reader.readAsText(file);\r\n        } else {\r\n            reader.readAsArrayBuffer(file);\r\n        }\r\n\r\n        return d.promise;\r\n    }\r\n\r\n    return diskfs.read = diskfs.readFile = readFile;\r\n    \r\n});\r\n\ndefine('skylark-langx/Deferred',[\r\n    \"skylark-langx-async/Deferred\"\r\n],function(Deferred){\r\n    return Deferred;\r\n});\ndefine('skylark-storages-diskfs/readImage',[\r\n    \"skylark-langx/Deferred\",\r\n    \"./diskfs\",\r\n    \"./read\"\r\n],function(Deferred, diskfs,read){\r\n\r\n\tfunction readImage(fileObj) {\r\n        var d = new Deferred,\r\n\t    \timg = new Image();\r\n\r\n\t    img.onload = function() {\r\n\t      d.resolve(img);\r\n\t    };\r\n\t    img.onerror = function(e) {\r\n\t      d.reject(e);\r\n\t    };\r\n\r\n\t    read(fileObj,{\r\n\t    \tasDataUrl : true\r\n\t    }).then(function(dataUrl){\r\n\t        img.src = dataUrl;\r\n\t    }).catch(function(e){\r\n\t    \td.reject(e);\r\n\t    });\r\n\r\n\t    return d.promise;\r\n\t}\r\n\r\n\treturn diskfs.readImage = readImage;\r\n\r\n});\ndefine('skylark-storages-diskfs/select',[\r\n    \"./diskfs\"\r\n],function(diskfs){\r\n    var fileInput,\r\n        fileInputForm,\r\n        fileSelected,\r\n        maxFileSize = 1 / 0;\r\n\r\n    function select(params) {\r\n        params = params || {};\r\n        var directory = params.directory || false,\r\n            multiple = params.multiple || false,\r\n            accept = params.accept || \"\", //'image/gif,image/jpeg,image/jpg,image/png,image/svg'\r\n            title = params.title || \"\",\r\n            fileSelected = params.picked;\r\n        if (!fileInput) {\r\n            var input = fileInput = document.createElement(\"input\");\r\n\r\n            function selectFiles(pickedFiles) {\r\n                for (var i = pickedFiles.length; i--;) {\r\n                    if (pickedFiles[i].size > maxFileSize) {\r\n                        pickedFiles.splice(i, 1);\r\n                    }\r\n                }\r\n                fileSelected(pickedFiles);\r\n            }\r\n\r\n            input.type = \"file\";\r\n            input.style.position = \"fixed\";\r\n            input.style.left = 0;\r\n            input.style.top = 0;\r\n            input.style.opacity = .001;\r\n            document.body.appendChild(input);\r\n\r\n            input.onchange = function(e) {\r\n                var entries = e.target.webkitEntries || e.target.entries;\r\n\r\n                if (entries && entries.length) {\r\n                    webentry.all(entries).then(function(files) {\r\n                        selectFiles(files);\r\n                    });\r\n                } else {\r\n                    selectFiles(Array.prototype.slice.call(e.target.files));\r\n                }\r\n                // reset to \"\", so selecting the same file next time still trigger the change handler\r\n                input.value = \"\";\r\n            };\r\n        }\r\n        fileInput.multiple = multiple;\r\n        fileInput.accept = accept;\r\n        fileInput.title = title;\r\n\r\n        fileInput.webkitdirectory = directory;\r\n        fileInput.click();\r\n    }\r\n\r\n    return diskfs.select = select;\r\n});\r\n\r\n\ndefine('skylark-langx/arrays',[\r\n\t\"skylark-langx-arrays\"\r\n],function(arrays){\r\n  return arrays;\r\n});\n define('skylark-storages-diskfs/webentry',[\r\n    \"skylark-langx/arrays\",\r\n    \"skylark-langx/Deferred\",\r\n    \"./diskfs\"\r\n],function(arrays,Deferred, diskfs){\r\n    var concat = Array.prototype.concat;\r\n    var webentry = (function() {\r\n        function one(entry, path) {\r\n            var d = new Deferred(),\r\n                onError = function(e) {\r\n                    d.reject(e);\r\n                };\r\n\r\n            path = path || '';\r\n            if (entry.isFile) {\r\n                entry.file(function(file) {\r\n                    file.relativePath = path;\r\n                    d.resolve(file);\r\n                }, onError);\r\n            } else if (entry.isDirectory) {\r\n                var dirReader = entry.createReader();\r\n                dirReader.readEntries(function(entries) {\r\n                    all(\r\n                        entries,\r\n                        path + entry.name + '/'\r\n                    ).then(function(files) {\r\n                        d.resolve(files);\r\n                    }).catch(onError);\r\n                }, onError);\r\n            } else {\r\n                // Return an empy list for file system items\r\n                // other than files or directories:\r\n                d.resolve([]);\r\n            }\r\n            return d.promise;\r\n        }\r\n\r\n        function all(entries, path) {\r\n            return Deferred.all(\r\n                arrays.map(entries, function(entry) {\r\n                    return one(entry, path);\r\n                })\r\n            ).then(function() {\r\n                return concat.apply([], arguments);\r\n            });\r\n        }\r\n\r\n        return {\r\n            one: one,\r\n            all: all\r\n        };\r\n    })();\r\n\r\n    return diskfs.webentry = webentry;\r\n});\ndefine('skylark-storages-diskfs/main',[\r\n\t\"./diskfs\",\r\n\t\"./download\",\r\n\t\"./read\",\r\n\t\"./readImage\",\r\n\t\"./select\",\r\n\t\"./webentry\"\r\n],function(diskfs){\r\n\treturn diskfs;\r\n});\ndefine('skylark-storages-diskfs', ['skylark-storages-diskfs/main'], function (main) { return main; });\n\n"]}