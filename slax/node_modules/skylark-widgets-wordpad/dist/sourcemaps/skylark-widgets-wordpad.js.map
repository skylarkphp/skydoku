{"version":3,"sources":["skylark-widgets-wordpad.js"],"names":["define","i18n","zh-CN","html","emoji","mark","blockquote","bold","code","color","coloredText","hr","image","externalImage","uploadImage","uploadFailed","uploadError","imageUrl","imageSize","imageAlt","restoreImageSize","uploading","indent","outdent","italic","link","linkText","linkUrl","linkTarget","openLinkInCurrentWindow","openLinkInNewWindow","removeLink","ol","ul","strikethrough","table","deleteRow","insertRowAbove","insertRowBelow","deleteColumn","insertColumnLeft","insertColumnRight","deleteTable","title","normalText","underline","alignment","alignCenter","alignLeft","alignRight","selectLanguage","fontScale","fontScaleXLarge","fontScaleLarge","fontScaleNormal","fontScaleSmall","fontScaleXSmall","video","videoSize","uploadVideoBtn","videoPlaceholder","en-US","ja","translate","args","key","ref","result","arguments","length","Array","prototype","slice","call","this","locale","replace","p0","p","position","parseInt","shift","langx","$","Widget","ToolButton","inherit","options","template","menu","menuWrapper","menuItem","separator","_construct","opts","action","toolbar","editor","_init","render","_this","el","on","e","noFocus","param","preventDefault","needFocus","editable","inputManager","focused","hasClass","focus","wrapper","toggleClass","siblings","removeClass","is","offset","left","outerWidth","css","right","trigger","data","command","btn","currentTarget","state","updates","undefined","_doActive","value","_doDisabled","iconClassOf","icon","classes","icons","setIcon","find","addClass","text","addToolItem","_elm","attr","name","appendTo","renderMenu","$menuBtnEl","$menuItemEl","k","len","ref1","results","isArray","menuEl","data-param","push","params","execute","get","tooltip","htmlTag","disableTag","_options","active","disabled","shortcut","general","actions","items","_Toolbar","addons","Toolbar","pluginName","_render","buttons","prependTo","findAction","toolItemCtor","addSeparator","toolbarHidden","hide","findButton","button","list","addButton","Xhr","id","Uploader","Evented","init","mixin","files","queue","count","file","splice","inArray","connectionCount","upload","window","originalEvent","returnValue","_t","url","fileKey","headers","generateId","f","i","FileList","makeArray","obj","getFile","extend","_xhrUpload","fileObj","File","Blob","fileName","size","fileSize","ext","split","pop","toLowerCase","formData","v","FormData","append","xhr","X-File-Name","encodeURIComponent","post","processData","contentType","progress","lengthComputable","loaded","total","then","catch","status","cancel","abort","destroy","off","document","leaveConfirm","skylark","Editable","uploader","Wordpad","klassName","header","fontColor","listul","listol","fullscreen","alignJustify","srcNodeRef","placeholder","placeholderImage","placeholderPoster","uploadOpts","_actions","textarea","Error","self","classPrefix","body","type","toolbarFloat","toolbarFloatOffset","_placeholder","setValue","val","trim","triggerHandler","concat","apply","insertBefore","placeholderEl","blur","insertAfter","children","util","isEmptyNode","indentWidth","show","hidePopover","getValue","sync","constructor","each","popover","closest","selection","clear","removeData","remove","attach","_Action","Action","set","clipboard","pasting","setActive","setDisabled","hotkeys","add","tag","formatter","_allowedTags","_status","_disableStatus","endNodes","startNodes","filter","_activeStatus","endNode","startNode","node","Popover","top","target","_initLabelWidth","$fields","_labelWidth","field","$field","$label","Math","max","width","$target","refresh","reflow","editorOffset","maxLeft","targetH","targetOffset","outerHeight","height","min","AlignmentAction","_execute","align","BlockquoteAction","BoldAction","os","mac","isActive","CodePopover","lang","_tpl","langs","codeLanguages","selectEl","selected","removeAttr","CodeAction","$el","pre","decorate","undecorate","_checkMode","range","cloneContents","blockNodes","join","collapsed","inlineMode","$pre","$code","match","contents","unwrap","wrapInner","_inlineCommand","_blockCommand","blockCode","inlineCode","ColorAction","EmojiAction","merge","_allowedAttributes","FontScaleAction","FullScrennAction","cls","editablePadding","isFullscreen","_resize","HrAction","CodeMirror","Pos","defaultOptions","initialBeautify","autoBeautify","javascript","beautifyFunc","completionFunc","cm","change","indexOf","getOptions","doc","mode","beautify","onChange","shouldComplete","bracketChar","bracketCount","getRange","to","searchCount","lineCount","lineText","getLine","setCursor","defineOption","old","Init","indentUnit","getOption","cmOptions","indent_size","defineExtension","htmlConfig","autoSelfClosers","area","base","br","col","embed","frame","img","input","keygen","meta","source","track","wbr","menuitem","implicitlyClosed","dd","li","optgroup","option","rp","rt","tbody","td","tfoot","th","tr","contextGrabbers","dt","address","article","aside","dir","div","dl","fieldset","footer","form","h1","h2","h3","h4","h5","h6","hgroup","nav","section","thead","doNotIndent","allowUnquoted","allowMissing","caseFold","xmlConfig","allowMissingTagName","defineMode","editorConf","config_","setStyle","config","defaults","htmlMode","prop","inText","stream","chain","parser","tokenize","ch","next","eat","inBlock","eatWhile","doctype","depth","inTag","quote","closure","baseState","tagName","tagStart","test","eol","isInAttribute","stringStartCol","column","style","terminator","popContext","context","prev","maybePopContext","nextTagName","parentTagName","hasOwnProperty","tagNameState","closeTagNameState","current","attrState","matchClosing","closeState","closeStateErr","_stream","attrEqState","startOfLine","indented","noIndent","attrValueState","attrContinuedState","isInText","startState","baseIndent","token","sol","indentation","eatSpace","textAfter","fullLine","Pass","multilineTagIndentPastTag","multilineTagIndentFactor","alignCDATA","tagAfter","exec","grabbers","electricInput","blockCommentStart","blockCommentEnd","configuration","helperType","skipAttribute","defineMIME","mimeModes","keySet","array","keys","parserConfig","inline","propertyKeywords","resolveMode","override","tokenHooks","documentTypes","mediaTypes","mediaFeatures","mediaValueKeywords","nonStandardPropertyKeywords","fontProperties","counterDescriptors","colorKeywords","valueKeywords","allowNested","lineComment","supportsAtComponent","ret","tp","tokenString","escaped","backUp","tokenParenthesized","Context","pushContext","pass","states","popAndPass","n","wordAsValue","word","stateArg","charAt","block","maybeprop","propBlock","parens","pseudo","atBlock","atComponentBlock","atBlock_parens","restricted_atBlock_before","restricted_atBlock","keyframes","at","interpolation","peek","cx","electricChars","blockCommentContinue","fold","documentTypes_","mediaTypes_","mediaFeatures_","mediaValueKeywords_","propertyKeywords_","nonStandardPropertyKeywords_","colorKeywords_","valueKeywords_","allWords","tokenCComment","maybeEnd","registerHelper","/","skipToEnd",":","#","@","&","content","statementIndent","jsonldMode","jsonld","jsonMode","json","isTS","typescript","wordRE","wordCharacters","keywords","kw","A","B","C","D","operator","atom","if","while","with","else","do","try","finally","return","break","continue","new","delete","void","throw","debugger","var","const","let","function","for","switch","case","default","in","typeof","instanceof","true","false","null","NaN","Infinity","class","super","yield","export","import","extends","await","isOperatorChar","isJsonldKeyword","cont","tokenBase","tokenComment","expressionAllowed","inSet","readRegexp","tokenQuasi","lexical","lastType","propertyIsEnumerable","brackets","findFatArrow","fatArrowAt","arrow","string","start","m","index","sawSomething","pos","bracket","atomicTypes","number","variable","regexp","jsonld-keyword","JSLexical","info","inScope","varname","localVars","vars","marked","cc","inList","register","newContext","registerVarScoped","inner","Var","globalVars","isModifier","defaultVars","pushcontext","pushblockcontext","popcontext","pushlex","outer","lex","poplex","expect","wanted","exp","statement","vardef","parenExpr","maybeexpression","maybeelse","functiondef","forspec","className","enumdef","typename","typeexpr","pattern","expression","maybelabel","maybeCatchBinding","afterExport","afterImport","funarg","expressionInner","expressionNoComma","noComma","arrowBodyNoComma","arrowBody","commasep","maybeop","maybeoperatorNoComma","maybeoperatorComma","classExpression","arrayLiteral","contCommasep","objprop","quasi","targetNoComma","maybeTypeArgs","maybeTarget","me","expr","property","continueQuasi","_","getterSetter","afterprop","maybetype","what","end","sep","proceed","mayberettype","isKW","afterType","typeprop","typearg","maybeReturnType","functiondecl","typeparam","maybeTypeDefault","maybeAssign","vardefCont","eltpattern","proppattern","_type","forspec1","forspec2","classNameAfter","classBody","classfield","isInterface","maybeFrom","exportField","importSpec","maybeMoreImports","maybeAs","enummember","basecolumn","combinator","parseJS","firstChar","c","closing","isContinuedStatement","doubleIndentSwitch","closeBrackets","skipExpression","defaultTags","script","attrRegexpCache","getAttrValue","RegExp","getAttrRegexp","getTagRegexp","anchored","addTags","from","dest","unshift","getMode","tags","configTags","configScript","scriptTypes","matches","htmlState","modeSpec","tagInfo","tagText","spec","findMatchingMode","endTagA","endTag","localState","localMode","pat","cur","close","search","maybeBackup","copyState","local","line","innerMode","HtmlAction","_resizeTextarea","codemirrorOptions","lineWrapping","dragDrop","autoCloseTags","matchTags","autoCloseBrackets","matchBrackets","indentWithTabs","tabSize","hintOptions","completionSingle","lineNumbers","CodeMirrorEditor","fromTextArea","beautifyHTML","_textareaPadding","innerHeight","scrollHeight","ImagePopover","tpl","srcEl","widthEl","heightEl","altEl","which","createRange","setRangeAfter","_loadImage","_resizeImg","inputEl","$img","_restoreImg","alt","_initUploader","$uploadBtn","picker","multiple","accept","picked","onlySetVal","isNumber","src","callback","loadImage","blob","dataURLtoBlob","selectFile","readImage","ImageAction","item","imageAction","selectNode","support","onselectionchange","$contents","startContainer","eq","startOffset","$masks","mask","$mask","parent","$uploadItem","createImage","uploadProgress","proxy","throttle","percent","toFixed","img_path","JSON","parse","uploadedImagePath","_error","success","statusText","responseText","msg","positionMask","imgOffset","wrapperOffset","Image","onload","data-image-size","isFunction","onerror","deleteContents","insertNode","click","one","select","IndentAction","hotkey","tabIndent","ItalicAction","LinkPopover","textEl","urlEl","unlinkEl","selectTarget","throttledValueChanged","shiftKey","txtNode","createTextNode","replaceWith","LinkAction","rangeAtEndOf","noder","ListAction","MarkAction","$end","$start","save","unmark","restore","endContainer","setStartBefore","setEndAfter","$mark","extractContents","ele","commonAncestorContainer","OrderListAction","OutdentAction","StrikethroughAction","tables","TableAction","_allowedStyles","_initShortcuts","_initResize","$container","containerNode","setRangeAtEndOf","keystroke","$node","_tdNav","$td","direction","$anotherTr","$tr","resizable","cssClasses","resizeHandle","editMenu","$table","createMenu","createTable","$trs","num","prevAll","addBack","$closestBlock","colNum","rowNum","last","after","setRangeAtStartOf","tableDecorate","row","phBr","refreshTableWidth","newTr","insertRow","deleteCol","newTd","insertCol","$block","TitleAction","UnderlineAction","UnorderListAction","VideoPopover","_loadVideo","videoData","loadVideo","$video","reUrlYoutube","reUrlVimeo","VideoAction","videoContainerClass","iframe","_insert","$videoWrap","wrap","_create","poster","iframeStart","iframeEnd","$video1","data-link","data-width","data-height","_remove","AlignmentButton","upperFirst","ColorButton","$link","$p","hex","rgb","getComputedStyle","getPropertyValue","_convertRgbToHex","r","g","b","componentToHex","toString","rgbToHex","EmojiButton","$list","_i","_len","_ref","imagePath","images","clone","data-emoji","data-non-image","TableButton","TitleButton","main"],"mappings":";;;;;;;g4BAAAA,EAAA,kCAEA,WAEA,IAAAC,GACAC,SACAC,KAAA,SACAC,MAAA,KACAC,KAAA,KACAC,WAAA,KACAC,KAAA,OACAC,KAAA,OACAC,MAAA,OACAC,YAAA,OACAC,GAAA,MACAC,MAAA,OACAC,cAAA,OACAC,YAAA,OACAC,aAAA,QACAC,YAAA,QACAC,SAAA,OACAC,UAAA,OACAC,SAAA,OACAC,iBAAA,SACAC,UAAA,OACAC,OAAA,OACAC,QAAA,OACAC,OAAA,OACAC,KAAA,OACAC,SAAA,OACAC,QAAA,OACAC,WAAA,OACAC,wBAAA,WACAC,oBAAA,UACAC,WAAA,OACAC,GAAA,OACAC,GAAA,OACAC,cAAA,QACAC,MAAA,KACAC,UAAA,MACAC,eAAA,SACAC,eAAA,SACAC,aAAA,MACAC,iBAAA,SACAC,kBAAA,SACAC,YAAA,OACAC,MAAA,KACAC,WAAA,OACAC,UAAA,QACAC,UAAA,OACAC,YAAA,KACAC,UAAA,KACAC,WAAA,KACAC,eAAA,SACAC,UAAA,OACAC,gBAAA,OACAC,eAAA,OACAC,gBAAA,OACAC,eAAA,OACAC,gBAAA,OACAC,MAAA,KACAC,UAAA,KACAC,eAAA,KACAC,iBAAA,UAEAC,SACA1D,KAAA,cACAC,MAAA,QACAC,KAAA,OACAC,WAAA,cACAC,KAAA,OACAC,KAAA,OACAC,MAAA,aACAC,YAAA,eACAC,GAAA,kBACAC,MAAA,eACAC,cAAA,iBACAC,YAAA,eACAC,aAAA,gBACAC,YAAA,6BACAC,SAAA,MAhFAC,UAAA,OACAC,SAAA,MACAC,iBAAA,sBACAC,UAAA,YACAC,OAAA,SACAC,QAAA,UACAC,OAAA,SACAC,KAAA,cACAC,SAAA,OACAC,QAAA,MACAC,WAAA,SACAC,wBAAA,8BACAC,oBAAA,0BACAC,WAAA,cACAC,GAAA,eACAC,GAAA,iBACAC,cAAA,gBACAC,MAAA,QACAC,UAAA,aACAC,eAAA,mBACAC,eAAA,mBACAC,aAAA,gBACAC,iBAAA,qBACAC,kBAAA,sBACAC,YAAA,eACAC,MAAA,QACAC,WAAA,OACAC,UAAA,YACAC,UAAA,YACAC,YAAA,eACAC,UAAA,aACAC,WAAA,cACAC,eAAA,kBACAC,UAAA,YACAC,gBAAA,eACAC,eAAA,aACAC,gBAAA,cACAC,eAAA,aACAC,gBAAA,eACAC,MAAA,QACAC,UAAA,OACAC,eAAA,SACAC,iBAAA,oBAGAE,IACA3D,KAAA,aACAC,MAAA,KACAC,KAAA,MACAC,WAAA,UACAC,KAAA,KACAC,KAAA,SACAC,MAAA,SACAC,YAAA,QACAC,GAAA,MACAC,MAAA,UACAC,cAAA,SACAC,YAAA,SACAC,aAAA,gBACAC,YAAA,YACAC,SAAA,WACAC,UAAA,WACAC,SAAA,WACAC,iBAAA,gBACAC,UAAA,UACAC,OAAA,YACAC,QAAA,YACAC,OAAA,KACAC,KAAA,SACAC,SAAA,UACAC,QAAA,SACAC,WAAA,aACAC,wBAAA,aACAC,oBAAA,aACAC,WAAA,SACAC,GAAA,OACAC,GAAA,OACAC,cAAA,MACAC,MAAA,OACAC,UAAA,OACAC,eAAA,SACAC,eAAA,SACAC,aAAA,OACAC,iBAAA,SACAC,kBAAA,SACAC,YAAA,UACAC,MAAA,OACAC,WAAA,KACAC,UAAA,KACAC,UAAA,KACAC,YAAA,OACAC,UAAA,MACAC,WAAA,MACAC,eAAA,QACAC,UAAA,WACAC,gBAAA,UACAC,eAAA,SACAC,gBAAA,QACAC,eAAA,SACAC,gBAAA,UACAC,MAAA,MACAC,UAAA,MACAC,eAAA,KACAC,iBAAA,cAGAG,UAAA,WACA,IAAAC,EAAAC,EAAAC,EAAAC,EAGA,OAFAF,EAAAG,UAAA,GAAAJ,EAAA,GAAAI,UAAAC,OAAAC,MAAAC,UAAAC,MAAAC,KAAAL,UAAA,MACAD,GAAA,OAAAD,EAAAjE,EAAAyE,KAAAC,SAAAT,EAAAD,QAAA,IAAA,GACAD,EAAAK,OAAA,GAGAF,EAAAA,EAAAS,QAAA,0BAAA,SAAAC,EAAAC,EAAAC,GACA,OAAAA,EACAD,EAAAd,EAAAgB,SAAAD,GAAA,GAEAD,EAAAd,EAAAiB,WAGAL,QAAA,OAAA,MATAT,IAcA,OAAAlE,IAEAD,EAAA,sCACA,sBACA,qBACA,8BACA,UACA,SAAAkF,EAAAC,EAAAC,EAAAnF,GACA,IAEAoF,EAAAD,EAAAE,SAEAC,SACAC,SAAA,yGAEAC,MACAC,YAAA,mCACAC,SAAA,sGACAC,UAAA,6CAKAC,WAAA,SAAAC,GACApB,KAAAqB,OAAAD,EAAAC,OACArB,KAAAsB,QAAAF,EAAAE,QACAtB,KAAAuB,OAAAH,EAAAE,QAAAC,OACAb,EAAAb,UAAAsB,WAAApB,KAAAC,KAAAoB,IAGAI,MAAA,WAEAxB,KAAAyB,SACA,IAAAC,EAAA1B,KACAA,KAAA2B,GAAAC,GAAA,YAAA,SAAAC,GACA,IAAAC,EAAAC,EAGA,OAFAF,EAAAG,iBACAF,EAAAJ,EAAAO,YAAAP,EAAAH,OAAAW,SAAAC,aAAAC,SACAV,EAAAC,GAAAU,SAAA,cAGAP,GACAJ,EAAAH,OAAAe,QAEAZ,EAAAX,MACAW,EAAAa,QAAAC,YAAA,WAAAC,SAAA,MAAAC,YAAA,WACAhB,EAAAa,QAAAI,GAAA,cACAjB,EAAAV,YAAA4B,SAAAC,KAAAnB,EAAAV,YAAA8B,aAAA,EAAApB,EAAAH,OAAAgB,QAAAK,SAAAC,KAAAnB,EAAAH,OAAAgB,QAAAO,aACA,GACApB,EAAAV,YAAA+B,KACAF,KAAA,OACAG,MAAA,IAGAtB,EAAAuB,QAAA,gBAEA,IAEAlB,EAAAL,EAAAC,GAAAuB,KAAA,SACAxB,EAAAyB,QAAApB,IACA,MAEA/B,KAAAuC,QAAAX,GAAA,QAAA,cAAA,SAAAC,GACA,IAAAuB,EAAAtB,EAAAC,EAKA,OAJAF,EAAAG,iBACAoB,EAAA3C,EAAAoB,EAAAwB,eACA3B,EAAAa,QAAAG,YAAA,WACAZ,EAAAJ,EAAAO,YAAAP,EAAAH,OAAAW,SAAAC,aAAAC,SACAgB,EAAAf,SAAA,cAAAP,IAGAJ,EAAAJ,QAAAiB,QAAAG,YAAA,WACAX,EAAAqB,EAAAF,KAAA,SACAxB,EAAAyB,QAAApB,IACA,KAEA/B,KAAAuC,QAAAX,GAAA,YAAA,cAAA,SAAAC,GACA,OAAA,IAGA7B,KAAAqB,OAAAiC,MAAA1B,GAAA,UAAA,SAAAC,EAAAvC,GACA,IAAAiE,EAAAjE,EAAA4D,UACAM,IAAAD,EAAA,QACA7B,EAAA+B,UAAAF,EAAA,OAAAG,YAGAF,IAAAD,EAAA,UACA7B,EAAAiC,YAAAJ,EAAA,SAAAG,UAMAD,UAAA,SAAAC,GACA,OAAA1D,KAAA2B,GAAAa,YAAA,SAAAkB,IAGAC,YAAA,SAAAD,GACA,OAAA1D,KAAA2B,GAAAa,YAAA,WAAAkB,IAGAE,YAAA,SAAAC,GACA,OAAAA,EACA7D,KAAAuB,OAAAV,QAAAiD,QAAAC,MAAAF,GACA7D,KAAAuB,OAAAV,QAAAiD,QAAAC,MAAAF,GAEA,6BAAAA,EAGA,IAIAG,QAAA,SAAAH,GACA,OAAA7D,KAAA2B,GAAAsC,KAAA,QAAAvB,cAAAwB,SAAAlE,KAAA4D,YAAAC,IAAAM,KAAAnE,KAAAmE,OAGA1C,OAAA,WASA,GANAzB,KAAAsB,QAAA8C,YAAApE,MACAA,KAAAuC,QAAA9B,EAAAT,KAAAqE,MAEArE,KAAA2B,GAAA3B,KAAAuC,QAAA0B,KAAA,kBACAjE,KAAA2B,GAAA2C,KAAA,QAAAtE,KAAA/B,OAAAiG,SAAA,gBAAAlE,KAAAuE,MAAArB,KAAA,SAAAlD,MACAA,KAAAgE,QAAAhE,KAAA6D,MACA7D,KAAAe,KAKA,OAFAf,KAAAgB,YAAAP,EAAAT,KAAAa,QAAAE,KAAAC,aAAAwD,SAAAxE,KAAAuC,SACAvC,KAAAgB,YAAAkD,SAAA,gBAAAlE,KAAAuE,MACAvE,KAAAyE,cAGAA,WAAA,WACA,IAAAC,EAAAC,EAAAC,EAAAC,EAAA5D,EAAAzB,EAAAsF,EAAAC,EACA,GAAAvE,EAAAwE,QAAAhF,KAAAe,MAAA,CAMA,IAHAf,KAAAiF,OAAAxE,EAAA,SAAA+D,SAAAxE,KAAAgB,aACAxB,EAAAQ,KAAAe,KACAgE,KACAH,EAAA,EAAAC,EAAArF,EAAAG,OAAAiF,EAAAC,EAAAD,IAEA,OADA3D,EAAAzB,EAAAoF,KAKAD,EAAAlE,EAAAT,KAAAa,QAAAE,KAAAE,UAAAuD,SAAAxE,KAAAiF,QACAP,EAAAC,EAAAV,KAAA,eAAAK,MACArG,MAAA,OAAA6G,EAAA7D,EAAAhD,OAAA6G,EAAA7D,EAAAkD,KACAe,aAAAjE,EAAAc,QACAmC,SAAA,aAAAjD,EAAAsD,MACAtD,EAAA4C,KACAkB,EAAAI,KAAAT,EAAAT,KAAA,QAAAC,SAAAlE,KAAA4D,YAAA3C,EAAA4C,QAEAkB,EAAAI,KAAAT,EAAAT,KAAA,QAAAE,KAAAlD,EAAAkD,QAXA1D,EAAAT,KAAAa,QAAAE,KAAAG,WAAAsD,SAAAxE,KAAAiF,QAcA,OAAAF,IAGA5B,QAAA,SAAAiC,GACApF,KAAAqB,OAAAgE,QAAAD,IAGAb,MACAe,IAAA,WACA,OAAAtF,KAAAqB,OAAAkD,OAIAV,MACAyB,IAAA,WACA,OAAAtF,KAAAqB,OAAAwC,OAIA5F,OACAqH,IAAA,WACA,OAAAtF,KAAAqB,OAAAkE,SAAAhK,EAAA8D,UAAAW,KAAAqB,OAAAkD,QAKAJ,MACAmB,IAAA,WACA,OAAAtF,KAAAqB,OAAA8C,OAIAqB,SACAF,IAAA,WACA,OAAAtF,KAAAqB,OAAAmE,UAIAC,YACAH,IAAA,WACA,OAAAtF,KAAAqB,OAAAoE,aAIA1E,MACAuE,IAAA,WACA,OAAAtF,KAAAqB,OAAAN,OAIAmB,UACAoD,IAAA,WACA,OAAAtF,KAAA0F,SAAAxD,WAIAyD,QACAL,IAAA,WACA,OAAAtF,KAAAqB,OAAAsE,SAIAC,UACAN,IAAA,WACA,OAAAtF,KAAAqB,OAAAuE,WAIA3D,WACAqD,IAAA,WACA,OAAAtF,KAAAqB,OAAAY,YAKA4D,UACAP,IAAA,WACA,OAAAtF,KAAAqB,OAAAwE,aAQA,OAAAlF,IAGArF,EAAA,oCAAA,WACA,OACAwK,WAIAC,WAIAzE,SACA0E,aAOA1K,EAAA,mCACA,sBACA,qBACA,8BACA,eACA,YACA,SAAAkF,EAAAC,EAAAwF,EAAAtF,EAAAuF,GAEA,IAAAC,EAAAF,EAAArF,SACAwF,WAAA,uBAEAjF,WAAA,SAAAI,EAAAH,GACApB,KAAAuB,OAAAA,EACA0E,EAAApG,UAAAsB,WAAApB,KAAAC,KAAAoB,IAGAI,MAAA,WACAyE,EAAApG,UAAA2B,MAAAzB,KAAAC,MACAA,KAAAqG,aA+CA,OA1CAF,EAAAtG,UAAAwG,QAAA,WACA,IAAAzB,EAAAC,EAAAN,EAAA/E,EAKA,IAJAQ,KAAAsG,WAEAtG,KAAAuC,QAAA9B,EAAAT,KAAAqE,MAAAkC,UAAAvG,KAAAuB,OAAAgB,SACA/C,EAAAQ,KAAAoB,KAAAE,QACAsD,EAAA,EAAAC,EAAArF,EAAAG,OAAAiF,EAAAC,EAAAD,IAEA,GAAA,OADAL,EAAA/E,EAAAoF,IACA,CAKA,IAAAvD,EAAArB,KAAAuB,OAAAiF,WAAAjC,GACAkC,EAAAP,EAAA5E,QAAA0E,MAAAzB,GAEAkC,IACAA,EAAA9F,GAGAX,KAAAsG,QAAAnB,KAAA,IAAAsB,GACApF,OAAAA,EACAC,QAAAtB,aAbAA,KAAA0G,eAgBA,GAAA1G,KAAAoB,KAAAuF,cACA,OAAA3G,KAAAuC,QAAAqE,QAIAT,EAAAtG,UAAAgH,WAAA,SAAAtC,GACA,IAAAuC,EAEA,OAAA,OADAA,EAAA9G,KAAA+G,KAAA9C,KAAA,iBAAAM,GAAArB,KAAA,WACA4D,EAAA,MAGAX,EAAAa,UAAA,SAAA5D,GACA,OAAApD,KAAAsG,QAAAlD,EAAAvD,UAAA0E,MAAAnB,GAGA+C,EAAAG,WAEAH,IAGA7K,EAAA,oCACA,sBACA,qBACA,wBACA,SAAAkF,EAAAC,EAAAwG,GAEA,IA2CAC,EA3CAC,EAAA3G,EAAA4G,QAAAxG,SACAyG,KAAA,SAAAxG,GAMA,IAAAa,EALA1B,KAAAa,QAAAL,EAAA8G,SAAAtH,KAAAa,QAAAA,GAEAb,KAAAuH,SACAvH,KAAAwH,SACAxH,KAAAkH,KAAAC,EAAAM,MACAzH,KAAA4B,GAAA,kBAAAF,EASA1B,KARA,SAAA6B,EAAA6F,GAEA,OADAhG,EAAA6F,MAAAI,OAAAnH,EAAAoH,QAAAF,EAAAhG,EAAA6F,OAAA,GACA7F,EAAA8F,MAAA7H,OAAA,GAAA+B,EAAA6F,MAAA5H,OAAA+B,EAAAb,QAAAgH,gBACAnG,EAAAoG,OAAApG,EAAA8F,MAAAjH,SAEAmB,EAAA/E,WAAA,KAIA8D,EAAAsH,QAAAnG,GAAA,yBAAA5B,KAAAkH,GAAA,SAAAxF,GACA,OAAA,SAAAG,GACA,GAAAH,EAAA/E,UAIA,OADAkF,EAAAmG,cAAAC,YAAAvG,EAAAwG,GAAA,gBACAxG,EAAAwG,GAAA,iBANA,CAQAlI,UAkLA,OA7KAmH,EAAAM,MAAA,EAEAN,EAAAtH,UAAAgB,SACAsH,IAAA,GACA/C,OAAA,KACAgD,QAAA,cACAP,gBAAA,EACAQ,QAAA,MAKAlB,EAAAtH,UAAAyI,YAEApB,EAAA,EACA,WACA,OAAAA,GAAA,IAIAC,EAAAtH,UAAAiI,OAAA,SAAAJ,EAAA7G,GACA,IAAA0H,EAAAC,EAAAjJ,EAAAsF,EAIA,GAHA,MAAAhE,IACAA,MAEA,MAAA6G,EAAA,CAGA,GAAAlH,EAAAwE,QAAA0C,IAAAA,aAAAe,SACA,IAAAD,EAAA,EAAA3D,EAAA6C,EAAA/H,OAAA6I,EAAA3D,EAAA2D,IACAD,EAAAb,EAAAc,GACAxI,KAAA8H,OAAAS,EAAA1H,QAEAJ,EAAAiH,GAAA/E,GAAA,gBACApD,EAAAkB,EAAAiH,GAAApD,KAAA,WAEAzD,EAAAuH,QAAA7I,GAEAS,KAAA8H,OAAAtH,EAAAkI,UAAAjI,EAAAiH,GAAA,GAAAH,OAAA1G,IACA6G,EAAAR,IAAAQ,EAAAiB,MACAjB,EAAA1H,KAAA4I,QAAAlB,IAEA,GAAAA,GAAAA,EAAAiB,IAIA,GADAnI,EAAAqI,OAAAnB,EAAA7G,GACAb,KAAAuH,MAAA5H,QAAAK,KAAAa,QAAAgH,gBACA7H,KAAAwH,MAAArC,KAAAuC,QAGA,IAAA,IAAA1H,KAAAiD,QAAA,eAAAyE,GAKA,OAFA1H,KAAAuH,MAAApC,KAAAuC,GACA1H,KAAA8I,WAAApB,GACA1H,KAAArD,WAAA,IAGAwK,EAAAtH,UAAA+I,QAAA,SAAAG,GACA,IAAAxE,EAAA/E,EAAAsF,EACA,OAAAiE,aAAAhB,OAAAiB,MAAAD,aAAAhB,OAAAkB,MACA1E,EAAA,OAAA/E,EAAAuJ,EAAAG,UAAA1J,EAAAuJ,EAAAxE,MAKA2C,GAAAlH,KAAAsI,aACAH,IAAAnI,KAAAa,QAAAsH,IACA/C,OAAApF,KAAAa,QAAAuE,OACAgD,QAAApI,KAAAa,QAAAuH,QACA7D,KAAAA,EACA8D,QAAArI,KAAAa,QAAAwH,QACAc,KAAA,OAAArE,EAAAiE,EAAAK,UAAAtE,EAAAiE,EAAAI,KACAE,IAAA9E,EAAAA,EAAA+E,MAAA,KAAAC,MAAAC,cAAA,GACAb,IAAAI,IAXA,MAeA5B,EAAAtH,UAAAiJ,WAAA,SAAApB,GACA,IAAA+B,EAAA7E,EAAApF,EAAAkK,EAIA,IAHAD,EAAA,IAAAE,UACAC,OAAAlC,EAAAU,QAAAV,EAAAiB,KACAc,EAAAG,OAAA,oBAAAlC,EAAAnD,MACAmD,EAAAtC,OAEA,IAAAR,KADApF,EAAAkI,EAAAtC,OAEAsE,EAAAlK,EAAAoF,GACA6E,EAAAG,OAAAhF,EAAA8E,GAKA,IAAAG,EAAAnC,EAAAmC,IAAA,IAAA5C,GACAkB,IAAAnI,KAAAa,QAAAsH,MAGAE,GACAyB,cAAAC,mBAAArC,EAAAnD,OAGA,GAAAmD,EAAAW,QAEA,IAAAzD,KADApF,EAAAkI,EAAAW,QAEAqB,EAAAlK,EAAAoF,GACAyD,EAAAzD,GAAA8E,EAIA,IAAAhI,EAAA1B,KAsBA,OApBA6J,EAAAG,MACA9G,KAAAuG,EACAQ,aAAA,EACAC,aAAA,EACA7B,QAAAA,IACA8B,SAAA,SAAAtI,GACA,GAAAA,EAAAuI,iBAGA,OAAA1I,EAAAuB,QAAA,iBAAAyE,EAAA7F,EAAAwI,OAAAxI,EAAAyI,SACAC,KAAA,SAAA9K,GACAiC,EAAAuB,QAAA,gBAAAyE,EAAAjI,GAEAiC,EAAAuB,QAAA,oBAEAuH,MAAA,SAAA3I,EAAA4I,GACA/I,EAAAuB,QAAA,cAAAyE,EAAAmC,GACAnI,EAAAuB,QAAA,oBAGA4G,GAGA1C,EAAAtH,UAAA6K,OAAA,SAAAhD,GACA,IAAAa,EAAAC,EAAA3D,EAAArF,EACA,IAAAkI,EAAAR,GAEA,IADA1H,EAAAQ,KAAAuH,MACAiB,EAAA,EAAA3D,EAAArF,EAAAG,OAAA6I,EAAA3D,EAAA2D,IAEA,IADAD,EAAA/I,EAAAgJ,IACAtB,KAAA,EAAAQ,EAAA,CACAA,EAAAa,EACA,MAQA,OAJAvI,KAAAiD,QAAA,gBAAAyE,IACAA,EAAAmC,KACAnC,EAAAmC,IAAAc,QAEAjD,EAAAmC,IAAA,MAIA1C,EAAAtH,UAAA+K,QAAA,WACA,IAAAlD,EAAAc,EAAA3D,EAAArF,EAGA,IAFAQ,KAAAwH,MAAA7H,OAAA,EACAH,EAAAQ,KAAAuH,MACAiB,EAAA,EAAA3D,EAAArF,EAAAG,OAAA6I,EAAA3D,EAAA2D,IACAd,EAAAlI,EAAAgJ,GACAxI,KAAA0K,OAAAhD,GAGA,OADAjH,EAAAsH,QAAA8C,IAAA,aAAA7K,KAAAkH,IACAzG,EAAAqK,UAAAD,IAAA,aAAA7K,KAAAkH,KAGAC,EAAA5L,MACAC,SACAuP,aAAA,uBAIA5D,EAAAlH,OAAA,QAEA,SAAAY,GACA,OAAA,IAAAsG,EAAAtG,MAKAvF,EAAA,mCACA,wBACA,sBACA,qBACA,iCACA,8BACA,YACA,aACA,SACA,YAEA,SAAA0P,EAAAxK,EAAAC,EAAAwK,EAAAvK,EAAAyF,EAAA+E,EAAA3P,EAAA2K,GAEA,IAAAiF,EAAAzK,EAAAE,SACAwK,UAAA,UACAhF,WAAA,eAEAvF,SACAiD,SACAC,OACAtI,KAAA,cAEA4P,OAAA,eAEAxP,KAAA,aACAiB,OAAA,eACAqB,UAAA,kBACAX,cAAA,sBACAiB,UAAA,oBACA6M,UAAA,aACA3P,KAAA,eAEAC,WAAA,oBACA2P,OAAA,gBACAC,OAAA,gBACA1P,KAAA,aACA2B,MAAA,cAEAgO,WAAA,eAEA/P,MAAA,gBACAqB,KAAA,aACAb,MAAA,kBACA6C,MAAA,qBACA9C,GAAA,cAEAW,OAAA,eACAC,QAAA,eACAyB,UAAA,mBACAD,YAAA,qBACAE,WAAA,oBACAmN,aAAA,wBAIAC,WAAA,KACAC,YAAA,GACA1F,QACAH,SACA7J,OACA2P,iBAAA,oBAEA9M,OACA+M,kBAAA,sBAGAxK,SACA0E,OACAtK,YAOA0J,UACA0C,QAAA,EACAhH,SAAA,iMAIAU,MAAA,WAMA,IAAAD,EAAAwK,EAKA,GAVA/L,KAAAgM,YAGAhM,KAAAoB,KAAApB,KAAAa,QAGAb,KAAAiM,SAAAxL,EAAAT,KAAAa,QAAA8K,YAEA3L,KAAAa,QAAA+K,YAAA5L,KAAAa,QAAA+K,aAAA5L,KAAAiM,SAAA3H,KAAA,gBAEAtE,KAAAiM,SAAAtM,OACA,MAAA,IAAAuM,MAAA,wCAKA,OADA3K,EAAAvB,KAAAiM,SAAA/I,KAAA,aAEA3B,EAAAqJ,UAEA5K,KAAAkH,KAAAiE,EAAA1D,MACAzH,KAAAqG,UAGA,IAAA8F,EAAAnM,KA+BA,GA9BAA,KAAAkC,SAAA,IAAA+I,EAAAjL,KAAAqE,MACA+H,YAAA,gBACAH,SAAAjM,KAAAiM,SACAI,KAAArM,KAAAqM,OAIArM,KAAAkC,SAAAN,GAAA,MAAA,SAAAC,EAAAqB,GACA,OAAAiJ,EAAAlJ,QAAApB,EAAAyK,KAAApJ,KAGAlD,KAAAa,QAAAiH,QAAAoD,IACAa,EAAA,iBAAA/L,KAAAa,QAAAiH,OAAA9H,KAAAa,QAAAiH,UACA9H,KAAAkL,SAAAA,EAAAa,IAGA/L,KAAAsB,QAAA,IAAA6E,EAAAnG,MACAsB,QAAAtB,KAAAa,QAAAS,QACAiL,aAAAvM,KAAAa,QAAA0L,aACA5F,cAAA3G,KAAAa,QAAA8F,cACA6F,mBAAAxM,KAAAa,QAAA2L,qBAIAxM,KAAAa,QAAA+K,aACA5L,KAAA4B,GAAA,eAAA,WACA,OAAAuK,EAAAM,iBAGAzM,KAAA0M,SAAA1M,KAAAiM,SAAAU,MAAAC,QAAA,IACA5M,KAAAiM,SAAA3H,KAAA,aACA,OAAA6H,EAAA7J,WAwJA,OAhJA6I,EAAAtL,UAAAgN,eAAA1B,EAAAtL,UAAAoD,QAAA,SAAAqJ,EAAApJ,GACA,IAAA5D,EAMA,OALAA,GAAAgN,GACApJ,IACA5D,EAAAA,EAAAwN,OAAA5J,IAEA1C,EAAA4G,QAAAvH,UAAAoD,QAAA8J,MAAA/M,KAAAV,GACAU,MAsBAmL,EAAA1D,MAAA,EAGA0D,EAAAtL,UAAAwG,QAAA,WACA,IAAA9G,EAAAC,EAAAuF,EAAA4H,EAaA,GAVA3M,KAAA2B,GAAAlB,EAAAT,KAAAqE,MAAA2I,aAAAhN,KAAAiM,UAEAjM,KAAAuC,QAAAvC,KAAA2B,GAAAsC,KAAA,oBACAjE,KAAAqM,KAAArM,KAAAuC,QAAA0B,KAAA,iBACAjE,KAAAiN,cAAAjN,KAAAuC,QAAA0B,KAAA,wBAAA2F,OAAA5J,KAAAa,QAAA+K,aACA5L,KAAA2B,GAAAuB,KAAA,UAAAlD,MACAA,KAAAuC,QAAAqH,OAAA5J,KAAAiM,UACAjM,KAAAiM,SAAA/I,KAAA,UAAAlD,MAAAkN,OACAlN,KAAAqM,KAAA/H,KAAA,WAAAtE,KAAAiM,SAAA3H,KAAA,aAEAtE,KAAAa,QAAAuE,OAAA,CAGA,IAAA7F,KAFAC,EAAAQ,KAAAa,QAAAuE,OACAL,KACAvF,EACAmN,EAAAnN,EAAAD,GACAwF,EAAAI,KAAA1E,EAAA,YACA6L,KAAA,SACA/H,KAAAhF,EACAmE,MAAAiJ,IACAQ,YAAAnN,KAAAiM,WAEA,OAAAlH,IAIAoG,EAAAtL,UAAA4M,aAAA,WACA,IAAAW,EAEA,OAAA,KADAA,EAAApN,KAAAqM,KAAAe,YACAzN,QAAA,IAAAyN,EAAAzN,QAAAK,KAAAkC,SAAAmL,KAAAC,YAAAF,IAAA9M,SAAA8M,EAAArK,IAAA,gBAAA,GAAA/C,KAAAa,QAAA0M,YACAvN,KAAAiN,cAAAO,OAEAxN,KAAAiN,cAAArG,QAIAuE,EAAAtL,UAAA6M,SAAA,SAAAC,GAKA,OAJA3M,KAAAyN,cAEAzN,KAAAkC,SAAAwK,SAAAC,GAEA3M,KAAAiD,QAAA,iBAGAkI,EAAAtL,UAAA6N,SAAA,WACA,OAAA1N,KAAAkC,SAAAwL,YAGAvC,EAAAtL,UAAA8N,KAAA,WAEA,OADA3N,KAAAkC,SAAAyL,OACA3N,MAGAmL,EAAAtL,UAAAyC,MAAA,WAEA,OADAtC,KAAAkC,SAAAI,QACAtC,MAGAmL,EAAAtL,UAAAqN,KAAA,WAEA,OADAlN,KAAAkC,SAAAgL,OACAlN,MAGAmL,EAAAtL,UAAA2G,WAAA,SAAAjC,GACA,IAAAlD,EAAArB,KAAAgM,SAAAzH,GACA,IAAAlD,EAAA,CACA,IAAArB,KAAA4N,YAAA1H,OAAAH,QAAAxB,GACA,MAAA,IAAA2H,MAAA,2BAAA3H,GAGAlD,EAAArB,KAAAgM,SAAAzH,GAAA,IAAAvE,KAAA4N,YAAA1H,OAAAH,QAAAxB,IACAhD,OAAAvB,OAGAA,KAAAgM,SAAA7G,KAAA9D,GAGA,OAAAA,GAGA8J,EAAAtL,UAAA4N,YAAA,WACA,OAAAzN,KAAA2B,GAAAsC,KAAA,oBAAA4J,KAAA,SAAArF,EAAAsF,GAEA,IADAA,EAAArN,EAAAqN,GAAA5K,KAAA,YACAyC,OACA,OAAAmI,EAAAlH,UAKAuE,EAAAtL,UAAA+K,QAAA,WASA,OARA5K,KAAAiD,QAAA,WACAjD,KAAAiM,SAAA8B,QAAA,QAAAlD,IAAA,qBAAA7K,KAAAkH,IACAlH,KAAAgO,UAAAC,QACAjO,KAAAmC,aAAAC,SAAA,EACApC,KAAAiM,SAAAe,aAAAhN,KAAA2B,IAAAiF,OAAA+F,IAAA,IAAAuB,WAAA,WACAlO,KAAA2B,GAAAwM,SACA1N,EAAAqK,UAAAD,IAAA,YAAA7K,KAAAkH,IACAzG,EAAAsH,QAAA8C,IAAA,YAAA7K,KAAAkH,IACAlH,KAAA6K,OAIAM,EAAAhF,QAAAA,EAEAgF,EAAA5P,KAAAA,EAEA4P,EAAAjF,OAAAA,EAGA8E,EAAAoD,OAAA,kBAAAjD,KAIA7P,EAAA,kCACA,sBACA,8BACA,YACA,UACA,SAAAkF,EAAA6N,EAAAlD,EAAA5P,GACA,IAEA+S,EAAAD,EAAAzN,SACA4E,QAAA,GAEAC,WAAA,GAEA1E,MAAA,EAEA4E,QACAL,IAAA,WACA,OAAAtF,KAAAsD,MAAAgC,IAAA,WAGAiJ,IAAA,SAAA7K,GACA,OAAA1D,KAAAsD,MAAAiL,IAAA,SAAA7K,KAMAkC,UACAN,IAAA,WACA,OAAAtF,KAAAsD,MAAAgC,IAAA,aAGAiJ,IAAA,SAAA7K,GACA,OAAA1D,KAAAsD,MAAAiL,IAAA,WAAA7K,KAKAzB,WAAA,EAEAd,WAAA,SAAAC,GACAiN,EAAAxO,UAAAsB,WAAA4L,MAAA/M,KAAAN,WAGAM,KAAA/B,MAAA1C,EAAA8D,UAAAW,KAAAuE,MAEA,IAAA7C,EAAA1B,KAEAA,KAAAuB,OAAAK,GAAA,OAAA,WAGA,GADAF,EAAAH,OAAA8K,KAAA1J,GAAA,aAAAjB,EAAAH,OAAA8K,KAAA1J,GAAA,uBACAjB,EAAAH,OAAAW,SAAAsM,UAAAC,QAIA,OADA/M,EAAAgN,WAAA,GACAhN,EAAAiN,aAAA,KAGA,MAAA3O,KAAA6F,UACA7F,KAAAuB,OAAAW,SAAA0M,QAAAC,IAAA7O,KAAA6F,SAAA,SAAAhE,GAGA,OADAH,EAAA2D,WACA,IAIA,IAAA7F,EAAAQ,KAAAwF,QAAA8D,MAAA,KACA,IAAA1E,EAAA,EAAAC,IAAArF,EAAAG,OAAAiF,EAAAC,IAAAD,IACAkK,IAAAtP,EAAAoF,GACAkK,IAAAtO,EAAAoM,KAAAkC,KACAA,KAAAtO,EAAAoH,QAAAkH,IAAA9O,KAAAuB,OAAAW,SAAA6M,UAAAC,cAAA,GACAhP,KAAAuB,OAAAW,SAAA6M,UAAAC,aAAA7J,KAAA2J,KAGA9O,KAAAuB,OAAAK,GAAA,mBAAA,SAAAC,GACA,GAAAH,EAAAH,OAAAW,SAAAC,aAAAC,QACA,OAAAV,EAAAuN,YAIAjP,KAAAwB,SAGAA,MAAA,aAKA0N,eAAA,WACA,IAAAtJ,EAAAuJ,EAAAC,EAQA,OAPAA,EAAApP,KAAAuB,OAAAW,SAAA8L,UAAAoB,aACAD,EAAAnP,KAAAuB,OAAAW,SAAA8L,UAAAmB,WACAvJ,EAAAwJ,EAAAC,OAAArP,KAAAyF,YAAA9F,OAAA,GAAAwP,EAAAE,OAAArP,KAAAyF,YAAA9F,OAAA,EACAK,KAAA2O,YAAA/I,GACA5F,KAAA4F,UACA5F,KAAA0O,WAAA,GAEA1O,KAAA4F,UAGA0J,cAAA,WACA,IAAA3J,EAAA4J,EAAAJ,EAAAK,EAAAJ,EAQA,OAPAA,EAAApP,KAAAuB,OAAAW,SAAA8L,UAAAoB,aACAD,EAAAnP,KAAAuB,OAAAW,SAAA8L,UAAAmB,WACAK,EAAAJ,EAAAC,OAAArP,KAAAwF,SACA+J,EAAAJ,EAAAE,OAAArP,KAAAwF,SACAG,EAAA6J,EAAA7P,OAAA,GAAA4P,EAAA5P,OAAA,GAAA6P,EAAA7M,GAAA4M,GACAvP,KAAAyP,KAAA9J,EAAA6J,EAAA,KACAxP,KAAA0O,UAAA/I,GACA3F,KAAA2F,QAGAsJ,QAAA,WAEA,GADAjP,KAAAkP,kBACAlP,KAAA4F,SAGA,OAAA5F,KAAAsP,iBAGAZ,UAAA,SAAA/I,GACAA,IAAA3F,KAAA2F,SAGA3F,KAAA2F,OAAAA,IAGAgJ,YAAA,SAAA/I,GACAA,IAAA5F,KAAA4F,WAGA5F,KAAA4F,SAAAA,MASA,OAJA0I,EAAAzO,UAAAqI,GAAA3M,EAAA8D,UAEAiP,EAAA/S,KAAAA,EAEA+S,IAGAhT,EAAA,mCACA,sBACA,qBACA,YACA,UACA,SAAAkF,EAAAC,EAAA0K,EAAA5P,GAEA,IAAAmU,EAAAlP,EAAA4G,QAAAxG,SACAyG,KAAA,SAAAjG,GACApB,KAAAqB,OAAAD,EAAAC,OACArB,KAAAuB,OAAAH,EAAAC,OAAAE,OACAvB,KAAAwB,WA2IA,OAtIAkO,EAAA7P,UAAA+C,QACA+M,IAAA,EACA9M,KAAA,GAGA6M,EAAA7P,UAAA+P,OAAA,KAEAF,EAAA7P,UAAA8F,QAAA,EAEA+J,EAAA7P,UAAA2B,MAAA,WAGA,IAAAE,EAKA,OAPA1B,KAAA2B,GAAAlB,EAAA,uCAAA+D,SAAAxE,KAAAuB,OAAAI,IAAAuB,KAAA,UAAAlD,MACAA,KAAAyB,SACAzB,KAAA2B,GAAAC,GAAA,cAAAF,EAIA1B,KAHA,SAAA6B,GACA,OAAAH,EAAAC,GAAAuC,SAAA,YAGAlE,KAAA2B,GAAAC,GAAA,aAAA,SAAAF,GACA,OAAA,SAAAG,GACA,OAAAH,EAAAC,GAAAe,YAAA,UAFA,CAIA1C,QAGA0P,EAAA7P,UAAA4B,OAAA,aAEAiO,EAAA7P,UAAAgQ,gBAAA,WACA,IAAAC,EAMApO,EAJA,IADAoO,EAAA9P,KAAA2B,GAAAsC,KAAA,oBACAtE,OAAA,EAeA,OAZAK,KAAA+P,YAAA,EACAD,EAAAjC,MAAAnM,EAUA1B,KATA,SAAAwI,EAAAwH,GACA,IAAAC,EAAAC,EAGA,GAFAD,EAAAxP,EAAAuP,IACAE,EAAAD,EAAAhM,KAAA,UACAtE,OAAA,EAGA,OAAA+B,EAAAqO,YAAAI,KAAAC,IAAA1O,EAAAqO,YAAAG,EAAAG,YAGAP,EAAA7L,KAAA,SAAAoM,MAAArQ,KAAA+P,cAGAL,EAAA7P,UAAA2N,KAAA,SAAA8C,EAAAjQ,GAIA,GAHA,MAAAA,IACAA,EAAA,UAEA,MAAAiQ,EAaA,OAVAtQ,KAAA2B,GAAAc,SAAA,oBAAAoL,KAAA,SAAArF,EAAAsF,GAEA,IADAA,EAAArN,EAAAqN,GAAA5K,KAAA,YACAyC,OACA,OAAAmI,EAAAlH,SAGA5G,KAAA2F,QAAA3F,KAAA4P,QACA5P,KAAA4P,OAAAlN,YAAA,YAEA1C,KAAA4P,OAAAU,EAAApM,SAAA,YACAlE,KAAA2F,QACA3F,KAAAuQ,QAAAlQ,GACAL,KAAAiD,QAAA,iBAEAjD,KAAA2F,QAAA,EACA3F,KAAA2B,GAAAoB,KACAF,MAAA,OACA2K,OACAxN,KAAA+P,aACA/P,KAAA6P,kBAEA7P,KAAAuB,OAAAW,SAAAmL,KAAAmD,SACAxQ,KAAAuQ,QAAAlQ,GACAL,KAAAiD,QAAA,iBAIAyM,EAAA7P,UAAA+G,KAAA,WACA,GAAA5G,KAAA2F,OASA,OANA3F,KAAA4P,QACA5P,KAAA4P,OAAAlN,YAAA,YAEA1C,KAAA4P,OAAA,KACA5P,KAAA2F,QAAA,EACA3F,KAAA2B,GAAAiF,OACA5G,KAAAiD,QAAA,gBAGAyM,EAAA7P,UAAA0Q,QAAA,SAAAlQ,GACA,IAAAoQ,EAAA5N,EAAA6N,EAAAC,EAAAC,EAAAjB,EAIA,GAHA,MAAAtP,IACAA,EAAA,UAEAL,KAAA2F,OAaA,OAVA8K,EAAAzQ,KAAAuB,OAAAI,GAAAiB,SACAgO,EAAA5Q,KAAA4P,OAAAhN,SACA+N,EAAA3Q,KAAA4P,OAAAiB,cACA,WAAAxQ,EACAsP,EAAAiB,EAAAjB,IAAAc,EAAAd,IAAAgB,EACA,QAAAtQ,IACAsP,EAAAiB,EAAAjB,IAAAc,EAAAd,IAAA3P,KAAA2B,GAAAmP,UAEAJ,EAAA1Q,KAAAuB,OAAAgB,QAAA8N,QAAArQ,KAAA2B,GAAAmB,aAAA,GACAD,EAAAsN,KAAAY,IAAAH,EAAA/N,KAAA4N,EAAA5N,KAAA6N,GACA1Q,KAAA2B,GAAAoB,KACA4M,IAAAA,EAAA3P,KAAA4C,OAAA+M,IACA9M,KAAAA,EAAA7C,KAAA4C,OAAAC,QAIA6M,EAAA7P,UAAA+K,QAAA,WAIA,OAHA5K,KAAA4P,OAAA,KACA5P,KAAA2F,QAAA,EACA3F,KAAAuB,OAAAsJ,IAAA,gBACA7K,KAAA2B,GAAAwM,UAGAuB,EAAA7P,UAAAqI,GAAA,SAAA3D,GACA,IAAAjF,EAGA,OAFAA,EAAA,GAAAI,UAAAC,OAAAC,MAAAC,UAAAC,MAAAC,KAAAL,UAAA,MACAnE,EAAA8D,UAAA0N,MAAAxR,EAAA+D,IAIA6L,EAAAuE,QAAAA,EAEAA,IAIApU,EAAA,0DACA,qBACA,eACA,eACA,cACA,SAAAmF,EAAAyF,EAAAoI,EAAA/S,GACA,IAAAyV,EAAA1C,EAAA1N,SACA2D,KAAA,YAEAV,KAAA,YAEA2B,QAAA,4BAEAhE,MAAA,WACA8M,EAAAzO,UAAA2B,MAAAzB,KAAAC,MACAA,KAAAe,OAEAwD,KAAA,OACAJ,KAAA5I,EAAA8D,UAAA,aACAwE,KAAA,YACA9B,MAAA,SAEAwC,KAAA,SACAJ,KAAA5I,EAAA8D,UAAA,eACAwE,KAAA,cACA9B,MAAA,WAEAwC,KAAA,QACAJ,KAAA5I,EAAA8D,UAAA,cACAwE,KAAA,aACA9B,MAAA,WAMAkP,SAAA,SAAAC,GACA,OAAAlR,KAAAuB,OAAAW,SAAA9D,UAAA8S,EAAAlR,KAAAwF,UAGAkJ,UAAA,SAAAwC,GACA,MAAAA,IACAA,EAAA,QAEA,SAAAA,GAAA,WAAAA,GAAA,UAAAA,IACAA,EAAA,QAEA5C,EAAAzO,UAAA6O,UAAA3O,KAAAC,KAAAkR,IAGAjC,QAAA,WACA,IAAAvL,EAAA1D,KAAAuB,OAAAW,SAAAuI,OAAA,YAAAzK,KAAAwF,SACA,OAAA9B,GACA1D,KAAA2O,aAAA,GACA3O,KAAA0O,UAAAhL,KAEA1D,KAAA2O,aAAA,GACA3O,KAAA0O,UAAA,YAKA,OAAAxI,EAAAH,QAAA3H,UAAA4S,IAEA1V,EAAA,2DACA,qBACA,eACA,gBACA,SAAAmF,EAAAyF,EAAAoI,GACA,IAAA6C,EAAA7C,EAAA1N,SACA2D,KAAA,aAEAV,KAAA,aAEA2B,QAAA,aAEAC,WAAA,aAEAwL,SAAA,WACA,OAAAjR,KAAAuB,OAAAW,SAAAtG,WAAAoE,KAAAyF,eAOA,OAFAS,EAAAH,QAAAnK,WAAAuV,EAEAA,IAEA7V,EAAA,qDACA,qBACA,eACA,gBACA,SAAAmF,EAAAyF,EAAAoI,GAEA,IAAA8C,EAAA9C,EAAA1N,SACA2D,KAAA,OAEAV,KAAA,OAEA2B,QAAA,YAEAC,WAAA,MAEAI,SAAA,QAEArE,MAAA,WAOA,OANAxB,KAAAuB,OAAAW,SAAAmL,KAAAgE,GAAAC,IACAtR,KAAA/B,MAAA+B,KAAA/B,MAAA,gBAEA+B,KAAA/B,MAAA+B,KAAA/B,MAAA,gBACA+B,KAAA6F,SAAA,UAEAyI,EAAAzO,UAAA2B,MAAAzB,KAAAC,OAGAsP,cAAA,WACA,IAAA3J,EAGA,OAFAA,EAAA3F,KAAAuB,OAAAW,SAAAqP,SAAA,QACAvR,KAAA0O,UAAA/I,GACA3F,KAAA2F,QAGAsL,SAAA,WACA,OAAAjR,KAAAuB,OAAAW,SAAArG,UAQA,OAFAqK,EAAAH,QAAAlK,KAAAuV,EAEAA,IAEA9V,EAAA,sDACA,qBACA,eACA,iBACA,SAAAmF,EAAAyF,EAAAwJ,GAEA,IAAA8B,EAAA9B,EAAA9O,SACAa,OAAA,WACA,IAAAmD,EAAA6M,EAAA5M,EAAArF,EA2EAkC,EAPA,IAnEA1B,KAAA0R,KAAA,2HAAA1R,KAAAkI,GAAA,kBAAA,6CACAlI,KAAA2R,MAAA3R,KAAAuB,OAAAV,QAAA+Q,iBAEArN,KAAA,OACAb,MAAA,SAEAa,KAAA,MACAb,MAAA,QAEAa,KAAA,KACAb,MAAA,OAEAa,KAAA,MACAb,MAAA,QAEAa,KAAA,SACAb,MAAA,WAEAa,KAAA,OACAb,MAAA,SAEAa,KAAA,OACAb,MAAA,SAEAa,KAAA,OACAb,MAAA,SAEAa,KAAA,eACAb,MAAA,iBAEAa,KAAA,WACAb,MAAA,SAEAa,KAAA,OACAb,MAAA,SAEAa,KAAA,OACAb,MAAA,SAEAa,KAAA,aACAb,MAAA,OAEAa,KAAA,WACAb,MAAA,aAEAa,KAAA,cACAb,MAAA,OAEAa,KAAA,MACAb,MAAA,QAEAa,KAAA,OACAb,MAAA,SAEAa,KAAA,SACAb,MAAA,WAEAa,KAAA,OACAb,MAAA,SAEAa,KAAA,MACAb,MAAA,QAGA1D,KAAA2B,GAAAuC,SAAA,gBAAA0F,OAAA5J,KAAA0R,MACA1R,KAAA6R,SAAA7R,KAAA2B,GAAAsC,KAAA,gBACAzE,EAAAQ,KAAA2R,MACA/M,EAAA,EAAAC,EAAArF,EAAAG,OAAAiF,EAAAC,EAAAD,IACA6M,EAAAjS,EAAAoF,GACAnE,EAAA,aACA0D,KAAAsN,EAAAlN,KACAb,MAAA+N,EAAA/N,QACAc,SAAAxE,KAAA6R,UAiBA,OAfA7R,KAAA6R,SAAAjQ,GAAA,UAAAF,EAcA1B,KAbA,SAAA6B,GACA,IAAAiQ,EAUA,OATApQ,EAAA+P,KAAA/P,EAAAmQ,SAAAlF,MACAmF,EAAApQ,EAAAkO,OAAAvN,SAAA,YACAX,EAAAkO,OAAAlN,cAAAqP,WAAA,cACA,IAAArQ,EAAA+P,MACA/P,EAAAkO,OAAAtL,KAAA,YAAA5C,EAAA+P,MAEAK,GACApQ,EAAAkO,OAAA1L,SAAA,YAEAxC,EAAAH,OAAA0B,QAAA,mBAGAjD,KAAAuB,OAAAK,GAAA,eAAA,SAAAF,GACA,OAAA,SAAAG,GACA,GAAAH,EAAAiE,OACA,OAAAjE,EAAA6O,WAHA,CAMAvQ,QAGAwN,KAAA,WACA,IAAAlO,EAIA,OAHAA,EAAA,GAAAI,UAAAC,OAAAC,MAAAC,UAAAC,MAAAC,KAAAL,UAAA,MACAgQ,EAAA7P,UAAA2N,KAAAT,MAAA/M,KAAAV,GACAU,KAAAyR,KAAAzR,KAAA4P,OAAAtL,KAAA,aACA,MAAAtE,KAAAyR,KACAzR,KAAA6R,SAAAlF,IAAA3M,KAAAyR,MAEAzR,KAAA6R,SAAAlF,KAAA,MAKA,OAAA6E,IAEAlW,EAAA,qDACA,qBACA,eACA,eACA,iBACA,SAAAmF,EAAAyF,EAAAoI,EAAAkD,GAGA,IAAAQ,EAAA1D,EAAA1N,SACA2D,KAAA,OAEAV,KAAA,OAEA2B,QAAA,MAEAC,WAAA,gBAEAjE,MAAA,WAEA,IAAAE,EAOA,OARA4M,EAAAzO,UAAA2B,MAAAzB,KAAAC,MACAA,KAAAuB,OAAAK,GAAA,YAAAF,EAMA1B,KALA,SAAA6B,EAAAoQ,GACA,OAAAA,EAAAhO,KAAA,OAAA4J,KAAA,SAAArF,EAAA0J,GACA,OAAAxQ,EAAAyQ,SAAA1R,EAAAyR,SAIAlS,KAAAuB,OAAAK,GAAA,aAAA,SAAAF,GACA,OAAA,SAAAG,EAAAoQ,GACA,OAAAA,EAAAhO,KAAA,OAAA4J,KAAA,SAAArF,EAAA0J,GACA,OAAAxQ,EAAA0Q,WAAA3R,EAAAyR,OAHA,CAMAlS,QAGAqS,WAAA,WACA,IAAAC,EAEA,OADAA,EAAAtS,KAAAuB,OAAAW,SAAA8L,UAAAsE,QACA7R,EAAA6R,EAAAC,iBAAAtO,KAAAjE,KAAAuB,OAAAW,SAAAmL,KAAAmF,WAAAC,KAAA,MAAA,GAAAH,EAAAI,WAAA,IAAA1S,KAAAuB,OAAAW,SAAA8L,UAAAoB,aAAAC,OAAA,QAAA1P,QACAK,KAAA2S,YAAA,EACA3S,KAAAwF,QAAA,QAEAxF,KAAA2S,YAAA,EACA3S,KAAAwF,QAAA,SAIAyJ,QAAA,WAGA,GAFAjP,KAAAqS,aACA/D,EAAAzO,UAAAoP,QAAAlP,KAAAC,OACAA,KAAA2S,WAGA,OAAA3S,KAAA2F,QACA3F,KAAA8N,UACA9N,KAAA8N,QAAA,IAAA0D,GACAnQ,OAAArB,QAGAA,KAAA8N,QAAAN,KAAAxN,KAAAyP,OAEAzP,KAAA8N,QACA9N,KAAA8N,QAAAlH,YADA,GAMAuL,SAAA,SAAAS,GACA,IAAAC,EAAApB,EAAAjS,EAAAsF,EAEA,IADA+N,EAAAD,EAAA3O,KAAA,WACAtE,OAAA,IACA8R,EAAA,OAAAjS,EAAAqT,EAAAvO,KAAA,WAAA,OAAAQ,EAAAtF,EAAAsT,MAAA,eAAAhO,EAAA,QAAA,EACA+N,EAAAE,WAAAC,SACAvB,GACA,OAAAmB,EAAAtO,KAAA,YAAAmN,IAKAW,WAAA,SAAAQ,GACA,IAAAC,EAAApB,EAMA,OALAA,EAAAmB,EAAAtO,KAAA,aACAuO,EAAApS,EAAA,WACAgR,IAAA,IAAAA,GACAoB,EAAA3O,SAAA,QAAAuN,GAEAmB,EAAAK,UAAAJ,GAAAd,WAAA,cAGAd,SAAA,WACA,OAAAjR,KAAA2S,WACA3S,KAAAkT,iBAEAlT,KAAAmT,iBAIAA,cAAA,WACA,OAAAnT,KAAAuB,OAAAW,SAAAkR,UAAApT,KAAAwF,QAAAxF,KAAAyF,aAGAyN,eAAA,WACA,OAAAlT,KAAAuB,OAAAW,SAAAmR,WAAArT,KAAA2F,WAOA,OAFAO,EAAAH,QAAAjK,KAAAkW,EAEAA,IAGA1W,EAAA,sDACA,qBACA,eACA,eACA,cACA,SAAAmF,EAAAyF,EAAAoI,EAAA/S,GAGA,IAAA+X,EAAAhF,EAAA1N,SACA2D,KAAA,QAEAV,KAAA,YAEA4B,WAAA,MAEA1E,MAAA,IAOA,OAHAmF,EAAAH,QAAAhK,MAAAuX,EAGAA,IAGAhY,EAAA,sDACA,sBACA,qBACA,eACA,gBACA,SAAAkF,EAAAC,EAAAyF,EAAAoI,GACA,IAAAiF,EAAAjF,EAAA1N,SACA2D,KAAA,QAEAV,KAAA,QAEA9C,MAAA,EAEAS,MAAA,WACA8M,EAAAzO,UAAA2B,MAAAuL,MAAA/M,MACAQ,EAAAgT,MAAAxT,KAAAuB,OAAAW,SAAA6M,UAAA0E,mBAAA,KAAA,aAAA,WAQA,OAFAvN,EAAAH,QAAArK,MAAA6X,EAEAA,IAGAjY,EAAA,0DACA,qBACA,eACA,eACA,cACA,SAAAmF,EAAAyF,EAAAoI,EAAA/S,GAEA,IAAAmY,EAAApF,EAAA1N,SACA2D,KAAA,YAEAV,KAAA,YAEA2B,QAAA,OAEAC,WAAA,0BAGAjE,MAAA,WAwBA,OAvBAxB,KAAAe,OAEAwD,KAAA,OACAJ,KAAA5I,EAAA8D,UAAA,mBACA0C,MAAA,MAEAwC,KAAA,OACAJ,KAAA5I,EAAA8D,UAAA,kBACA0C,MAAA,MAEAwC,KAAA,OACAJ,KAAA5I,EAAA8D,UAAA,mBACA0C,MAAA,MAEAwC,KAAA,MACAJ,KAAA5I,EAAA8D,UAAA,kBACA0C,MAAA,MAEAwC,KAAA,MACAJ,KAAA5I,EAAA8D,UAAA,mBACA0C,MAAA,MAGAuM,EAAAzO,UAAA2B,MAAAzB,KAAAC,OAGAsP,cAAA,WACA,IAAA3J,EAAA4J,EAAAJ,EAAAK,EAAAJ,EAQA,OAPApP,KAAAuB,OAAAW,SAAA8L,UAAAsE,QACAlD,EAAApP,KAAAuB,OAAAW,SAAA8L,UAAAoB,aACAD,EAAAnP,KAAAuB,OAAAW,SAAA8L,UAAAmB,WACAK,EAAAJ,EAAAC,OAAA,4BACAE,EAAAJ,EAAAE,OAAA,4BACA1J,EAAAyJ,EAAAzP,OAAA,GAAAwP,EAAAxP,OAAA,GAAA6P,EAAA7M,GAAA4M,GACAvP,KAAA0O,UAAA/I,GACA3F,KAAA2F,QAGAsL,SAAA,SAAAlP,GACA,OAAA/B,KAAAuB,OAAAW,SAAAzD,UAAAsD,MAOA,OAFAmE,EAAAH,QAAAtH,UAAAiV,EAEAA,IAEApY,EAAA,2DACA,qBACA,eACA,eACA,cACA,SAAAmF,EAAAyF,EAAAoI,EAAA/S,GAGA,IAAAoY,EAAArF,EAAA1N,SACA2D,KAAA,aAEAV,KAAA,aAEA5B,WAAA,EAEAT,MAAA,WACA8M,EAAAzO,UAAA2B,MAAAzB,KAAAC,MAEAA,KAAA+H,OAAAtH,EAAAsH,QACA/H,KAAAqM,KAAA5L,EAAA,QACAT,KAAAkC,SAAAlC,KAAAuB,OAAA8K,MAIA5B,OAAA,WACA,OAAAzK,KAAA0O,UAAA1O,KAAAqM,KAAAhK,SAAArC,KAAA4N,YAAAgG,OAGA3C,SAAA,WACA,IAAA4C,EAAAC,EAKApS,EAaA,OAjBA1B,KAAAqM,KAAA7J,YAAAxC,KAAA4N,YAAAgG,MACAE,EAAA9T,KAAAqM,KAAAhK,SAAArC,KAAA4N,YAAAgG,OAEAC,EAAA7T,KAAAkC,SAAA2O,cAAA7Q,KAAAkC,SAAA4O,SACA9Q,KAAA+H,OAAAnG,GAAA,6BAAA5B,KAAAuB,OAAA2F,IAAAxF,EAMA1B,KALA,WACA,OAAA0B,EAAAqS,SACAjD,OAAApP,EAAAqG,OAAA+I,SAAArQ,EAAAiB,EAAAH,OAAAD,QAAA+C,MAAAwM,cAAAgD,QAKA7T,KAAA+H,OAAA8C,IAAA,6BAAA7K,KAAAuB,OAAA2F,IAKAlH,KAAA0O,UAAAoF,IAGAC,QAAA,SAAA5K,GACA,OAAAnJ,KAAAkC,SAAA4O,OAAA3H,EAAA2H,WAeA,OAXA6C,EAAAC,IAAA,qBAEAD,EAAApY,MACAC,SACAiQ,WAAA,OAKAvF,EAAAH,QAAA0F,WAAAkI,EAEAA,IAGArY,EAAA,mDACA,qBACA,eACA,gBACA,SAAAmF,EAAAyF,EAAAoI,GAEA,IAAA0F,EAAA1F,EAAA1N,SAEA2D,KAAA,KAEAV,KAAA,KAEA2B,QAAA,KAEAyJ,QAAA,aAEAgC,SAAA,WACA,OAAAjR,KAAAuB,OAAAW,SAAAjG,QAQA,OAFAiK,EAAAH,QAAA9J,GAAA+X,EAEAA,IAEA1Y,EAAA,8CACA,sBACA,oBACA,SAAAkF,EAAAyT,GACA,aACA,IAAAC,EAAAD,EAAAC,IAEAC,GACAC,iBAAA,EACAC,cAAA,EACAC,YACAC,aAAA,KACAC,eAAA,SAAAC,EAAAC,GACA,OAAA,KAAA,IAAA,IAAA,KAAAC,QAAAD,EAAAvQ,KAAA,MAGApB,KACAwR,aAAA,KACAC,eAAA,SAAAC,EAAAC,GACA,OAAA,KAAA,IAAA,KAAAC,QAAAD,EAAAvQ,KAAA,MAGA1I,MACA8Y,aAAA,KACAC,eAAA,SAAAC,EAAAC,GACA,OAAA,KAAA,KAAAC,QAAAD,EAAAvQ,KAAA,OAKA,SAAAyQ,EAAAH,GACA,GAAAA,GAAAA,EAAAI,KAAAJ,EAAAI,IAAAC,MAAAL,EAAAnR,MAGA,MAAA,eAAAmR,EAAAI,IAAAC,KAAAvQ,KACAkQ,EAAAnR,MAAAyR,SAAAT,WACA,QAAAG,EAAAI,IAAAC,KAAAvQ,KACAkQ,EAAAnR,MAAAyR,SAAAhS,IACA,cAAA0R,EAAAI,IAAAC,KAAAvQ,KACAkQ,EAAAnR,MAAAyR,SAAAtZ,UADA,EAIA,SAAAsZ,EAAAN,GACA,IAAA5T,EAAA+T,EAAAH,GAEA5T,GAAAA,EAAA0T,cACAE,EAAA/H,SAAA7L,EAAA0T,aAAAE,EAAA/G,WAAA7M,IAYA,SAAAmU,EAAAP,EAAAC,GACA,KAAAD,EAAAnR,MAAAyR,UAAAN,EAAAnR,MAAAyR,SAAAV,eAVA,SAAAI,EAAAC,GACA,IAAA7T,EAAA+T,EAAAH,GAEA,QAAA5T,EAAA2T,gBACA3T,EAAA2T,eAAAC,EAAAC,GASAO,CAAAR,EAAAC,GAAA,CACA,IAAAQ,EAAAR,EAAAvQ,KAAA,GACAgR,EAAAV,EAAAW,SAAA,IAAAlB,EAAA,EAAA,GAAAQ,EAAAW,IAAA/L,MAAA4L,GAAAvV,OAEAoV,EAAAN,GAIA,IAFA,IAAAa,EAAA,EAEA9M,EAAA,EAAAA,EAAAiM,EAAAc,YAAA/M,IAAA,CAIA,IAHA,IAAA5F,GAAA,EACA4S,EAAAf,EAAAgB,QAAAjN,IAEA,KAAA5F,EAAA4S,EAAAb,QAAAO,EAAAtS,EAAA,KAGA,GAAAuS,MAFAG,EAEA,CACAb,EAAAiB,UAAA,IAAAxB,EAAA1L,EAAA5F,EAAA,IACA,MAIA,GAAAuS,IAAAG,EACA,QAKArB,EAAA0B,aAAA,YAAA,EAAA,SAAAlB,EAAA9H,EAAAiJ,GAGA,GAFAA,GAAAA,IAAA3B,EAAA4B,MACApB,EAAA5J,IAAA,SAAAmK,GACArI,EAAA,CACA,IAAAmJ,EAAArB,EAAAsB,UAAA,cAEAC,GACA1B,YACA2B,YAAAH,GAEA/S,KACAkT,YAAAH,GAEAra,MACAwa,YAAAH,IAKArB,EAAAnR,MAAAyR,SADA,iBAAApI,EACAnM,EAAA8G,SAAA6M,EAAA6B,EAAArJ,GAAA,GAEAnM,EAAA8G,SAAA6M,EAAA6B,GAAA,GAEAvB,EAAAnR,MAAAyR,SAAAX,iBACAW,EAAAN,GAEAA,EAAA7S,GAAA,SAAAoT,MAIAf,EAAAiC,gBAAA,WAAA,WACAnB,EAAA/U,UAMA1E,EAAA,mCAAA,oBAAA,SAAA2Y,GAGA,IAAAkC,GACAC,iBAAAC,MAAA,EAAAC,MAAA,EAAAC,IAAA,EAAAC,KAAA,EAAArT,SAAA,EACAsT,OAAA,EAAAC,OAAA,EAAAza,IAAA,EAAA0a,KAAA,EAAAC,OAAA,EACAC,QAAA,EAAA9Z,MAAA,EAAA+Z,MAAA,EAAA/U,OAAA,EAAAgV,QAAA,EACAC,OAAA,EAAAC,KAAA,EAAAC,UAAA,GACAC,kBAAAC,IAAA,EAAAC,IAAA,EAAAC,UAAA,EAAAC,QAAA,EAAAnX,GAAA,EACAoX,IAAA,EAAAC,IAAA,EAAAC,OAAA,EAAAC,IAAA,EAAAC,OAAA,EACAC,IAAA,EAAAC,IAAA,GACAC,iBACAX,IAAAA,IAAA,EAAAY,IAAA,GACAA,IAAAZ,IAAA,EAAAY,IAAA,GACAX,IAAAA,IAAA,GACAE,QAAAA,QAAA,EAAAD,UAAA,GACAA,UAAAA,UAAA,GACAlX,GAAA6X,SAAA,EAAAC,SAAA,EAAAC,OAAA,EAAAvc,YAAA,EAAAwc,KAAA,EACAC,KAAA,EAAAC,IAAA,EAAAC,UAAA,EAAAC,QAAA,EAAAC,MAAA,EACAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EACA1N,QAAA,EAAA2N,QAAA,EAAA/c,IAAA,EAAA8E,MAAA,EAAAkY,KAAA,EAAA3b,IAAA,EACA8C,GAAA,EAAA8R,KAAA,EAAAgH,SAAA,EAAAzb,OAAA,EAAAF,IAAA,GACAia,IAAAA,IAAA,EAAAC,IAAA,GACAA,IAAAD,IAAA,EAAAC,IAAA,GACAC,OAAAA,OAAA,EAAAE,OAAA,GACAD,IAAAA,IAAA,EAAAE,IAAA,GACAD,OAAAF,OAAA,GACAG,IAAAF,IAAA,EAAAE,IAAA,GACAsB,OAAAzB,OAAA,EAAAE,OAAA,GACAE,IAAAA,IAAA,IAEAsB,aAAAlH,KAAA,GACAmH,eAAA,EACAC,cAAA,EACAC,UAAA,GAGAC,GACApD,mBACAe,oBACAY,mBACAqB,eACAC,eAAA,EACAC,cAAA,EACAG,qBAAA,EACAF,UAAA,GAGAtF,EAAAyF,WAAA,MAAA,SAAAC,EAAAC,GACA,IAOAtN,EAAAuN,EAPA/D,EAAA6D,EAAA7D,WACAgE,KACAC,EAAAH,EAAAI,SAAA7D,EAAAqD,EACA,IAAA,IAAAS,KAAAF,EAAAD,EAAAG,GAAAF,EAAAE,GACA,IAAA,IAAAA,KAAAL,EAAAE,EAAAG,GAAAL,EAAAK,GAKA,SAAAC,EAAAC,EAAA7W,GACA,SAAA8W,EAAAC,GAEA,OADA/W,EAAAgX,SAAAD,EACAA,EAAAF,EAAA7W,GAGA,IAAAiX,EAAAJ,EAAAK,OACA,MAAA,KAAAD,EACAJ,EAAAM,IAAA,KACAN,EAAAM,IAAA,KACAN,EAAArH,MAAA,UAAAsH,EAAAM,EAAA,OAAA,QACA,KACAP,EAAArH,MAAA,MACAsH,EAAAM,EAAA,UAAA,WACAP,EAAArH,MAAA,WAAA,GAAA,IACAqH,EAAAQ,SAAA,aACAP,EAoFA,SAAAQ,EAAAC,GACA,OAAA,SAAAV,EAAA7W,GAEA,IADA,IAAAiX,EACA,OAAAA,EAAAJ,EAAAK,SAAA,CACA,GAAA,KAAAD,EAEA,OADAjX,EAAAgX,SAAAM,EAAAC,EAAA,GACAvX,EAAAgX,SAAAH,EAAA7W,GACA,GAAA,KAAAiX,EAAA,CACA,GAAA,GAAAM,EAAA,CACAvX,EAAAgX,SAAAJ,EACA,MAGA,OADA5W,EAAAgX,SAAAM,EAAAC,EAAA,GACAvX,EAAAgX,SAAAH,EAAA7W,IAIA,MAAA,QArGAsX,CAAA,KAEA,KAEAT,EAAAM,IAAA,MACAN,EAAAQ,SAAA,aACArX,EAAAgX,SAAAI,EAAA,OAAA,MACA,SAEApO,EAAA6N,EAAAM,IAAA,KAAA,WAAA,UACAnX,EAAAgX,SAAAQ,EACA,eAEA,KAAAP,GAEAJ,EAAAM,IAAA,KACAN,EAAAM,IAAA,KACAN,EAAAQ,SAAA,eAAAR,EAAAM,IAAA,KAEAN,EAAAQ,SAAA,SAAAR,EAAAM,IAAA,KAGAN,EAAAQ,SAAA,cAAAR,EAAAM,IAAA,MAEA,OAAA,SAEAN,EAAAQ,SAAA,SACA,MAKA,SAAAG,EAAAX,EAAA7W,GACA,IAwBAyX,EACAC,EAzBAT,EAAAJ,EAAAK,OACA,GAAA,KAAAD,GAAA,KAAAA,GAAAJ,EAAAM,IAAA,KAGA,OAFAnX,EAAAgX,SAAAJ,EACA5N,EAAA,KAAAiO,EAAA,SAAA,eACA,cACA,GAAA,KAAAA,EAEA,OADAjO,EAAA,SACA,KACA,GAAA,KAAAiO,EAAA,CACAjX,EAAAgX,SAAAJ,EACA5W,EAAAA,MAAA2X,EACA3X,EAAA4X,QAAA5X,EAAA6X,SAAA,KACA,IAAAX,EAAAlX,EAAAgX,SAAAH,EAAA7W,GACA,OAAAkX,EAAAA,EAAA,aAAA,YACA,MAAA,SAAAY,KAAAb,IACAjX,EAAAgX,UASAS,EATAR,GAUAS,EAAA,SAAAb,EAAA7W,GACA,MAAA6W,EAAAkB,OACA,GAAAlB,EAAAK,QAAAO,EAAA,CACAzX,EAAAgX,SAAAQ,EACA,MAGA,MAAA,WAEAQ,eAAA,EACAN,GAnBA1X,EAAAiY,eAAApB,EAAAqB,SACAlY,EAAAgX,SAAAH,EAAA7W,KAEA6W,EAAArH,MAAA,4CACA,QAkBA,SAAA4H,EAAAe,EAAAC,GACA,OAAA,SAAAvB,EAAA7W,GACA,MAAA6W,EAAAkB,OAAA,CACA,GAAAlB,EAAArH,MAAA4I,GAAA,CACApY,EAAAgX,SAAAJ,EACA,MAEAC,EAAAK,OAEA,OAAAiB,GAiCA,SAAAE,EAAArY,GACAA,EAAAsY,UAAAtY,EAAAsY,QAAAtY,EAAAsY,QAAAC,MAEA,SAAAC,EAAAxY,EAAAyY,GAEA,IADA,IAAAC,IACA,CACA,IAAA1Y,EAAAsY,QACA,OAGA,GADAI,EAAA1Y,EAAAsY,QAAAV,SACApB,EAAA/B,gBAAAkE,eAAAD,KACAlC,EAAA/B,gBAAAiE,GAAAC,eAAAF,GACA,OAEAJ,EAAArY,IAIA,SAAA2X,EAAA3O,EAAA6N,EAAA7W,GACA,MAAA,WAAAgJ,GACAhJ,EAAA6X,SAAAhB,EAAAqB,SACAU,GACA,YAAA5P,EACA6P,EAEAlB,EAGA,SAAAiB,EAAA5P,EAAA6N,EAAA7W,GACA,MAAA,QAAAgJ,GACAhJ,EAAA4X,QAAAf,EAAAiC,UACAvC,EAAA,MACAwC,GACAvC,EAAAL,qBAAA,UAAAnN,GACAuN,EAAA,cACAwC,EAAA/P,EAAA6N,EAAA7W,KAEAuW,EAAA,QACAqC,GAGA,SAAAC,EAAA7P,EAAA6N,EAAA7W,GACA,GAAA,QAAAgJ,EAAA,CACA,IAAA4O,EAAAf,EAAAiC,UAIA,OAHA9Y,EAAAsY,SAAAtY,EAAAsY,QAAAV,SAAAA,GACApB,EAAA3C,iBAAA8E,eAAA3Y,EAAAsY,QAAAV,UACAS,EAAArY,GACAA,EAAAsY,SAAAtY,EAAAsY,QAAAV,SAAAA,IAAA,IAAApB,EAAAwC,cACAzC,EAAA,MACA0C,IAEA1C,EAAA,YACA2C,GAEA,OAAA1C,EAAAL,qBAAA,UAAAnN,GACAuN,EAAA,cACA0C,EAAAjQ,EAAA6N,EAAA7W,KAEAuW,EAAA,QACA2C,GAIA,SAAAD,EAAAjQ,EAAAmQ,EAAAnZ,GACA,MAAA,UAAAgJ,GACAuN,EAAA,QACA0C,IAEAZ,EAAArY,GACA2X,GAEA,SAAAuB,EAAAlQ,EAAA6N,EAAA7W,GAEA,OADAuW,EAAA,QACA0C,EAAAjQ,EAAA6N,EAAA7W,GAGA,SAAA+Y,EAAA/P,EAAAmQ,EAAAnZ,GACA,GAAA,QAAAgJ,EAEA,OADAuN,EAAA,YACA6C,EACA,GAAA,UAAApQ,GAAA,gBAAAA,EAAA,CACA,IAAA4O,EAAA5X,EAAA4X,QAAAC,EAAA7X,EAAA6X,SASA,OARA7X,EAAA4X,QAAA5X,EAAA6X,SAAA,KACA,gBAAA7O,GACAwN,EAAA1D,gBAAA6F,eAAAf,GACAY,EAAAxY,EAAA4X,IAEAY,EAAAxY,EAAA4X,GACA5X,EAAAsY,QAAA,IAhGA,SAAAtY,EAAA4X,EAAAyB,GACA3c,KAAA6b,KAAAvY,EAAAsY,QACA5b,KAAAkb,QAAAA,EACAlb,KAAApD,OAAA0G,EAAAsZ,SACA5c,KAAA2c,YAAAA,GACA7C,EAAAV,YAAA6C,eAAAf,IAAA5X,EAAAsY,SAAAtY,EAAAsY,QAAAiB,YACA7c,KAAA6c,UAAA,GA0FA,CAAAvZ,EAAA4X,EAAAC,GAAA7X,EAAAsZ,WAEA3B,EAGA,OADApB,EAAA,QACAwC,EAEA,SAAAK,EAAApQ,EAAA6N,EAAA7W,GACA,MAAA,UAAAgJ,EAAAwQ,GACAhD,EAAAR,eAAAO,EAAA,SACAwC,EAAA/P,EAAA6N,EAAA7W,IAEA,SAAAwZ,EAAAxQ,EAAA6N,EAAA7W,GACA,MAAA,UAAAgJ,EAAAyQ,EACA,QAAAzQ,GAAAwN,EAAAT,eAAAQ,EAAA,SAAAwC,IACAxC,EAAA,QACAwC,EAAA/P,EAAA6N,EAAA7W,IAEA,SAAAyZ,EAAAzQ,EAAA6N,EAAA7W,GACA,MAAA,UAAAgJ,EAAAyQ,EACAV,EAAA/P,EAAA6N,EAAA7W,GAGA,OAlMA4W,EAAA8C,UAAA,GAmMAC,WAAA,SAAAC,GACA,IAAA5Z,GAAAgX,SAAAJ,EACA5W,MAAA2X,EACA2B,SAAAM,GAAA,EACAhC,QAAA,KAAAC,SAAA,KACAS,QAAA,MAEA,OADA,MAAAsB,IAAA5Z,EAAA4Z,WAAAA,GACA5Z,GAGA6Z,MAAA,SAAAhD,EAAA7W,GAIA,IAHAA,EAAA4X,SAAAf,EAAAiD,QACA9Z,EAAAsZ,SAAAzC,EAAAkD,eAEAlD,EAAAmD,WAAA,OAAA,KACAhR,EAAA,KACA,IAAAmP,EAAAnY,EAAAgX,SAAAH,EAAA7W,GAOA,OANAmY,GAAAnP,IAAA,WAAAmP,IACA5B,EAAA,KACAvW,EAAAA,MAAAA,EAAAA,MAAAgJ,GAAAmP,EAAAtB,EAAA7W,GACAuW,IACA4B,EAAA,SAAA5B,EAAA4B,EAAA,SAAA5B,IAEA4B,GAGA7e,OAAA,SAAA0G,EAAAia,EAAAC,GACA,IAAA5B,EAAAtY,EAAAsY,QAEA,GAAAtY,EAAAgX,SAAAgB,cACA,OAAAhY,EAAA6X,UAAA7X,EAAAsZ,SACAtZ,EAAAiY,eAAA,EAEAjY,EAAAsZ,SAAA9G,EAEA,GAAA8F,GAAAA,EAAAiB,SAAA,OAAA5I,EAAAwJ,KACA,GAAAna,EAAAgX,UAAAQ,GAAAxX,EAAAgX,UAAAJ,EACA,OAAAsD,EAAAA,EAAA1K,MAAA,UAAA,GAAAnT,OAAA,EAEA,GAAA2D,EAAA4X,QACA,OAAA,IAAApB,EAAA4D,0BACApa,EAAA6X,SAAA7X,EAAA4X,QAAAvb,OAAA,EAEA2D,EAAA6X,SAAArF,GAAAgE,EAAA6D,0BAAA,GAEA,GAAA7D,EAAA8D,YAAA,cAAAxC,KAAAmC,GAAA,OAAA,EACA,IAAAM,EAAAN,GAAA,sBAAAO,KAAAP,GACA,GAAAM,GAAAA,EAAA,GACA,KAAAjC,GAAA,CACA,GAAAA,EAAAV,SAAA2C,EAAA,GAAA,CACAjC,EAAAA,EAAAC,KACA,MACA,IAAA/B,EAAA3C,iBAAA8E,eAAAL,EAAAV,SAGA,MAFAU,EAAAA,EAAAC,UAKA,GAAAgC,EACA,KAAAjC,GAAA,CACA,IAAAmC,EAAAjE,EAAA/B,gBAAA6D,EAAAV,SACA,IAAA6C,IAAAA,EAAA9B,eAAA4B,EAAA,IAGA,MAFAjC,EAAAA,EAAAC,KAKA,KAAAD,GAAAA,EAAAC,OAAAD,EAAAe,aACAf,EAAAA,EAAAC,KACA,OAAAD,EAAAA,EAAAhf,OAAAkZ,EACAxS,EAAA4Z,YAAA,GAGAc,cAAA,gBACAC,kBAAA,UACAC,gBAAA,SAEAC,cAAArE,EAAAE,SAAA,OAAA,MACAoE,WAAAtE,EAAAE,SAAA,OAAA,MAEAqE,cAAA,SAAA/a,GACAA,EAAAA,OAAAwZ,IACAxZ,EAAAA,MAAA+Y,OAKApI,EAAAqK,WAAA,WAAA,OACArK,EAAAqK,WAAA,kBAAA,OACArK,EAAAsK,UAAAtC,eAAA,cACAhI,EAAAqK,WAAA,aAAA/Z,KAAA,MAAAyV,UAAA,MAOA1e,EAAA,mCAAA,oBAAA,SAAA2Y,GAuZA,SAAAuK,EAAAC,GAEA,IADA,IAAAC,KACAlW,EAAA,EAAAA,EAAAiW,EAAA9e,SAAA6I,EACAkW,EAAAD,EAAAjW,GAAAgB,gBAAA,EAEA,OAAAkV,EAzZAzK,EAAAyF,WAAA,MAAA,SAAAI,EAAA6E,GACA,IAAAC,EAAAD,EAAAC,OACAD,EAAAE,mBAAAF,EAAA1K,EAAA6K,YAAA,aAEA,IAgBAxS,EAAAyS,EAhBAjJ,EAAAgE,EAAAhE,WACAkJ,EAAAL,EAAAK,WACAC,EAAAN,EAAAM,kBACAC,EAAAP,EAAAO,eACAC,EAAAR,EAAAQ,kBACAC,EAAAT,EAAAS,uBACAP,EAAAF,EAAAE,qBACAQ,EAAAV,EAAAU,gCACAC,EAAAX,EAAAW,mBACAC,EAAAZ,EAAAY,uBACAC,EAAAb,EAAAa,kBACAC,EAAAd,EAAAc,kBACAC,EAAAf,EAAAe,YACAC,EAAAhB,EAAAgB,YACAC,GAAA,IAAAjB,EAAAiB,oBAGA,SAAAC,EAAApE,EAAAqE,GAAA,OAAAxT,EAAAwT,EAAArE,EA0DA,SAAAsE,EAAAhF,GACA,OAAA,SAAAZ,EAAA7W,GAEA,IADA,IAAAiX,EAAAyF,GAAA,EACA,OAAAzF,EAAAJ,EAAAK,SAAA,CACA,GAAAD,GAAAQ,IAAAiF,EAAA,CACA,KAAAjF,GAAAZ,EAAA8F,OAAA,GACA,MAEAD,GAAAA,GAAA,MAAAzF,EAGA,OADAA,GAAAQ,IAAAiF,GAAA,KAAAjF,KAAAzX,EAAAgX,SAAA,MACAuF,EAAA,SAAA,WAIA,SAAAK,EAAA/F,EAAA7W,GAMA,OALA6W,EAAAK,OACAL,EAAArH,MAAA,cAAA,GAGAxP,EAAAgX,SAAA,KAFAhX,EAAAgX,SAAAyF,EAAA,KAGAF,EAAA,KAAA,KAKA,SAAAM,EAAA7T,EAAA1P,EAAAif,GACA7b,KAAAsM,KAAAA,EACAtM,KAAApD,OAAAA,EACAoD,KAAA6b,KAAAA,EAGA,SAAAuE,EAAA9c,EAAA6W,EAAA7N,EAAA1P,GAEA,OADA0G,EAAAsY,QAAA,IAAAuE,EAAA7T,EAAA6N,EAAAkD,gBAAA,IAAAzgB,EAAA,EAAAkZ,GAAAxS,EAAAsY,SACAtP,EAGA,SAAAqP,EAAArY,GAGA,OAFAA,EAAAsY,QAAAC,OACAvY,EAAAsY,QAAAtY,EAAAsY,QAAAC,MACAvY,EAAAsY,QAAAtP,KAGA,SAAA+T,EAAA/T,EAAA6N,EAAA7W,GACA,OAAAgd,EAAAhd,EAAAsY,QAAAtP,MAAAA,EAAA6N,EAAA7W,GAEA,SAAAid,EAAAjU,EAAA6N,EAAA7W,EAAAkd,GACA,IAAA,IAAAhY,EAAAgY,GAAA,EAAAhY,EAAA,EAAAA,IACAlF,EAAAsY,QAAAtY,EAAAsY,QAAAC,KACA,OAAAwE,EAAA/T,EAAA6N,EAAA7W,GAKA,SAAAmd,EAAAtG,GACA,IAAAuG,EAAAvG,EAAAiC,UAAA5S,cAEAuV,EADAU,EAAAxD,eAAAyE,GACA,OACAlB,EAAAvD,eAAAyE,GACA,UAEA,WAGA,IAAAJ,GAEA3Q,IAAA,SAAArD,EAAA6N,EAAA7W,GACA,GAAA,KAAAgJ,EACA,OAAA8T,EAAA9c,EAAA6W,EAAA,SACA,GAAA,KAAA7N,GAAAhJ,EAAAsY,QAAAC,KACA,OAAAF,EAAArY,GACA,GAAAsc,GAAA,cAAAxE,KAAA9O,GACA,OAAA8T,EAAA9c,EAAA6W,EAAA,oBACA,GAAA,uBAAAiB,KAAA9O,GACA,OAAA8T,EAAA9c,EAAA6W,EAAA,iBACA,GAAA,+CAAAiB,KAAA9O,GACA,OAAA8T,EAAA9c,EAAA6W,EAAA,WACA,GAAA,+BAAAiB,KAAA9O,GAEA,OADAhJ,EAAAqd,SAAArU,EACA,4BACA,GAAA,sCAAA8O,KAAA9O,GACA,MAAA,YACA,GAAAA,GAAA,KAAAA,EAAAsU,OAAA,GACA,OAAAR,EAAA9c,EAAA6W,EAAA,MACA,GAAA,QAAA7N,EACAyS,EAAA,eACA,GAAA,QAAAzS,EACAyS,EAAA,UACA,CAAA,GAAA,uBAAAzS,EACA,MAAA,YACA,GAAA,iBAAAA,EACA,OAAA8T,EAAA9c,EAAA6W,EAAA,iBACA,GAAA,KAAA7N,EACA,MAAA,SACA,GAAAoT,GAAA,KAAApT,EACA,OAAA8T,EAAA9c,EAAA6W,EAAA,UAEA,OAAA7W,EAAAsY,QAAAtP,MAGAuU,MAAA,SAAAvU,EAAA6N,EAAA7W,GACA,GAAA,QAAAgJ,EAAA,CACA,IAAAoU,EAAAvG,EAAAiC,UAAA5S,cACA,OAAAqV,EAAA5C,eAAAyE,IACA3B,EAAA,WACA,aACAM,EAAApD,eAAAyE,IACA3B,EAAA,WACA,aACAW,GACAX,EAAA5E,EAAArH,MAAA,iBAAA,GAAA,WAAA,MACA,UAEAiM,GAAA,SACA,aAEA,MAAA,QAAAzS,EACA,QACAoT,GAAA,QAAApT,GAAA,aAAAA,EAIAgU,EAAA3Q,IAAArD,EAAA6N,EAAA7W,IAHAyb,EAAA,QACA,UAMA+B,UAAA,SAAAxU,EAAA6N,EAAA7W,GACA,MAAA,KAAAgJ,EAAA8T,EAAA9c,EAAA6W,EAAA,QACAkG,EAAA/T,EAAA6N,EAAA7W,IAGA2W,KAAA,SAAA3N,EAAA6N,EAAA7W,GACA,GAAA,KAAAgJ,EAAA,OAAAqP,EAAArY,GACA,GAAA,KAAAgJ,GAAAoT,EAAA,OAAAU,EAAA9c,EAAA6W,EAAA,aACA,GAAA,KAAA7N,GAAA,KAAAA,EAAA,OAAAiU,EAAAjU,EAAA6N,EAAA7W,GACA,GAAA,KAAAgJ,EAAA,OAAA8T,EAAA9c,EAAA6W,EAAA,UAEA,GAAA,QAAA7N,GAAA,sDAAA8O,KAAAjB,EAAAiC,YAEA,GAAA,QAAA9P,EACAmU,EAAAtG,QACA,GAAA,iBAAA7N,EACA,OAAA8T,EAAA9c,EAAA6W,EAAA,sBAJA4E,GAAA,SAMA,MAAA,QAGAgC,UAAA,SAAAzU,EAAAmQ,EAAAnZ,GACA,MAAA,KAAAgJ,EAAAqP,EAAArY,GACA,QAAAgJ,GAAAyS,EAAA,WAAA,aACAzb,EAAAsY,QAAAtP,MAGA0U,OAAA,SAAA1U,EAAA6N,EAAA7W,GACA,MAAA,KAAAgJ,GAAA,KAAAA,EAAAiU,EAAAjU,EAAA6N,EAAA7W,GACA,KAAAgJ,EAAAqP,EAAArY,GACA,KAAAgJ,EAAA8T,EAAA9c,EAAA6W,EAAA,UACA,iBAAA7N,EAAA8T,EAAA9c,EAAA6W,EAAA,kBACA,QAAA7N,GAAAmU,EAAAtG,GACA,WAGA8G,OAAA,SAAA3U,EAAA6N,EAAA7W,GACA,MAAA,QAAAgJ,EAAA,SAEA,QAAAA,GACAyS,EAAA,aACAzb,EAAAsY,QAAAtP,MAEA+T,EAAA/T,EAAA6N,EAAA7W,IAGA2b,cAAA,SAAA3S,EAAA6N,EAAA7W,GACA,MAAA,QAAAgJ,GAAA2S,EAAAhD,eAAA9B,EAAAiC,YACA2C,EAAA,MACAzb,EAAAsY,QAAAtP,MAEAgU,EAAAY,QAAA5U,EAAA6N,EAAA7W,IAIA4d,QAAA,SAAA5U,EAAA6N,EAAA7W,GACA,GAAA,KAAAgJ,EAAA,OAAA8T,EAAA9c,EAAA6W,EAAA,kBACA,GAAA,KAAA7N,GAAA,KAAAA,EAAA,OAAAiU,EAAAjU,EAAA6N,EAAA7W,GACA,GAAA,KAAAgJ,EAAA,OAAAqP,EAAArY,IAAA8c,EAAA9c,EAAA6W,EAAAuF,EAAA,QAAA,OAEA,GAAA,iBAAApT,EAAA,OAAA8T,EAAA9c,EAAA6W,EAAA,iBAEA,GAAA,QAAA7N,EAAA,CACA,IAAAoU,EAAAvG,EAAAiC,UAAA5S,cAEAuV,EADA,QAAA2B,GAAA,OAAAA,GAAA,OAAAA,GAAA,MAAAA,EACA,UACAxB,EAAAjD,eAAAyE,GACA,YACAvB,EAAAlD,eAAAyE,GACA,WACAtB,EAAAnD,eAAAyE,GACA,UACA7B,EAAA5C,eAAAyE,GACA,WACArB,EAAApD,eAAAyE,GACA,WACAjB,EAAAxD,eAAAyE,GACA,OACAlB,EAAAvD,eAAAyE,GACA,UAEA,QAEA,OAAApd,EAAAsY,QAAAtP,MAGA6U,iBAAA,SAAA7U,EAAA6N,EAAA7W,GACA,MAAA,KAAAgJ,EACAiU,EAAAjU,EAAA6N,EAAA7W,GACA,KAAAgJ,EACAqP,EAAArY,IAAA8c,EAAA9c,EAAA6W,EAAAuF,EAAA,QAAA,OAAA,IACA,QAAApT,IACAyS,EAAA,SACAzb,EAAAsY,QAAAtP,OAGA8U,eAAA,SAAA9U,EAAA6N,EAAA7W,GACA,MAAA,KAAAgJ,EAAAqP,EAAArY,GACA,KAAAgJ,GAAA,KAAAA,EAAAiU,EAAAjU,EAAA6N,EAAA7W,EAAA,GACAgd,EAAAY,QAAA5U,EAAA6N,EAAA7W,IAGA+d,0BAAA,SAAA/U,EAAA6N,EAAA7W,GACA,MAAA,KAAAgJ,EACA8T,EAAA9c,EAAA6W,EAAA,sBACA,QAAA7N,GAAA,kBAAAhJ,EAAAqd,UACA5B,EAAA,WACA,6BAEAsB,EAAA/T,EAAA6N,EAAA7W,IAGAge,mBAAA,SAAAhV,EAAA6N,EAAA7W,GACA,MAAA,KAAAgJ,GACAhJ,EAAAqd,SAAA,KACAhF,EAAArY,IAEA,QAAAgJ,GAGAyS,EAFA,cAAAzb,EAAAqd,WAAArB,EAAArD,eAAA9B,EAAAiC,UAAA5S,gBACA,kBAAAlG,EAAAqd,WAAApB,EAAAtD,eAAA9B,EAAAiC,UAAA5S,eACA,QAEA,WACA,aAEA,sBAGA+X,UAAA,SAAAjV,EAAA6N,EAAA7W,GACA,MAAA,QAAAgJ,GAAAyS,EAAA,WAAA,aACA,KAAAzS,EAAA8T,EAAA9c,EAAA6W,EAAA,OACAkG,EAAA/T,EAAA6N,EAAA7W,IAGAke,GAAA,SAAAlV,EAAA6N,EAAA7W,GACA,MAAA,KAAAgJ,EAAAqP,EAAArY,GACA,KAAAgJ,GAAA,KAAAA,EAAAiU,EAAAjU,EAAA6N,EAAA7W,IACA,QAAAgJ,EAAAyS,EAAA,MACA,QAAAzS,IAAAyS,EAAA,WACA,OAGA0C,cAAA,SAAAnV,EAAA6N,EAAA7W,GACA,MAAA,KAAAgJ,EAAAqP,EAAArY,GACA,KAAAgJ,GAAA,KAAAA,EAAAiU,EAAAjU,EAAA6N,EAAA7W,IACA,QAAAgJ,EAAAyS,EAAA,WACA,YAAAzS,GAAA,KAAAA,GAAA,KAAAA,IAAAyS,EAAA,SACA,mBAGA,OACA9B,WAAA,SAAA3G,GACA,OAAAgE,SAAA,KACAhX,MAAAsb,EAAA,QAAA,MACA+B,SAAA,KACA/E,QAAA,IAAAuE,EAAAvB,EAAA,QAAA,MAAAtI,GAAA,EAAA,QAGA6G,MAAA,SAAAhD,EAAA7W,GACA,IAAAA,EAAAgX,UAAAH,EAAAmD,WAAA,OAAA,KACA,IAAA7B,GAAAnY,EAAAgX,UApVA,SAAAH,EAAA7W,GACA,IAAAiX,EAAAJ,EAAAK,OACA,GAAAwE,EAAAzE,GAAA,CACA,IAAA9a,EAAAuf,EAAAzE,GAAAJ,EAAA7W,GACA,IAAA,IAAA7D,EAAA,OAAAA,EAEA,GAAA,KAAA8a,EAEA,OADAJ,EAAAQ,SAAA,YACAkF,EAAA,MAAA1F,EAAAiC,WACA,GAAA,KAAA7B,IAAA,KAAAA,GAAA,KAAAA,IAAAJ,EAAAM,IAAA,KACA,OAAAoF,EAAA,KAAA,WACA,GAAA,KAAAtF,GAAA,KAAAA,EAEA,OADAjX,EAAAgX,SAAAyF,EAAAxF,GACAjX,EAAAgX,SAAAH,EAAA7W,GACA,GAAA,KAAAiX,EAEA,OADAJ,EAAAQ,SAAA,YACAkF,EAAA,OAAA,QACA,GAAA,KAAAtF,EAEA,OADAJ,EAAArH,MAAA,WACA+M,EAAA,UAAA,aACA,GAAA,KAAAzE,KAAAb,IAAA,KAAAA,GAAAJ,EAAAM,IAAA,MAEA,OADAN,EAAAQ,SAAA,UACAkF,EAAA,SAAA,QACA,GAAA,MAAAtF,EAYA,MAAA,WAAAa,KAAAb,GACAsF,EAAA,KAAA,aACA,KAAAtF,GAAAJ,EAAArH,MAAA,yBACA+M,EAAA,YAAA,aACA,iBAAAzE,KAAAb,GACAsF,EAAA,KAAAtF,GACAJ,EAAArH,MAAA,kBACA,kCAAAsI,KAAAjB,EAAAiC,UAAA5S,iBACAlG,EAAAgX,SAAA4F,GAEAL,EAAA,kBAAA,aACA,WAAAzE,KAAAb,IACAJ,EAAAQ,SAAA,YACAkF,EAAA,WAAA,SAEAA,EAAA,KAAA,MA1BA,GAAA,QAAAzE,KAAAjB,EAAAuH,QAEA,OADAvH,EAAAQ,SAAA,UACAkF,EAAA,SAAA,QACA,GAAA1F,EAAArH,MAAA,eAEA,OADAqH,EAAAQ,SAAA,YACAR,EAAArH,MAAA,SAAA,GACA+M,EAAA,aAAA,uBACAA,EAAA,aAAA,YACA,GAAA1F,EAAArH,MAAA,SACA,OAAA+M,EAAA,OAAA,UAmTA1F,EAAA7W,GAQA,OAPAmY,GAAA,iBAAAA,IACAnP,EAAAmP,EAAA,GACAA,EAAAA,EAAA,IAEAsD,EAAAtD,EACA,WAAAnP,IACAhJ,EAAAA,MAAAgd,EAAAhd,EAAAA,OAAAgJ,EAAA6N,EAAA7W,IACAyb,GAGAniB,OAAA,SAAA0G,EAAAia,GACA,IAAAoE,EAAAre,EAAAsY,QAAArB,EAAAgD,GAAAA,EAAAqD,OAAA,GACAhkB,EAAA+kB,EAAA/kB,OAcA,MAbA,QAAA+kB,EAAArV,MAAA,KAAAiO,GAAA,KAAAA,IAAAoH,EAAAA,EAAA9F,MACA8F,EAAA9F,OACA,KAAAtB,GAAA,SAAAoH,EAAArV,MAAA,OAAAqV,EAAArV,MACA,iBAAAqV,EAAArV,MAAA,sBAAAqV,EAAArV,MAIA,KAAAiO,GAAA,UAAAoH,EAAArV,MAAA,kBAAAqV,EAAArV,QACA,KAAAiO,GAAA,MAAAoH,EAAArV,MAAA,WAAAqV,EAAArV,QAEA1P,EAAAuT,KAAAC,IAAA,EAAAuR,EAAA/kB,OAAAkZ,KALA6L,EAAAA,EAAA9F,KACAjf,EAAA+kB,EAAA/kB,SAOAA,GAGAglB,cAAA,IACA3D,kBAAA,KACAC,gBAAA,KACA2D,qBAAA,MACAlC,YAAAA,EACAmC,KAAA,WAYA,IAAAC,GACA,SAAA,SAAA,MAAA,cACA9C,EAAAT,EAAAuD,GAEAC,GACA,MAAA,QAAA,UAAA,WAAA,QAAA,aAAA,SACA,MAAA,KAAA,YACA9C,EAAAV,EAAAwD,GAEAC,GACA,QAAA,YAAA,YAAA,SAAA,aAAA,aACA,eAAA,mBAAA,mBAAA,gBACA,oBAAA,oBAAA,eACA,mBAAA,mBAAA,sBACA,0BAAA,0BAAA,QAAA,YACA,YAAA,cAAA,kBAAA,kBACA,aAAA,iBAAA,iBAAA,aACA,iBAAA,iBAAA,OAAA,OAAA,cACA,qBAAA,yBAAA,yBACA,UAAA,cAAA,QAAA,aACA9C,EAAAX,EAAAyD,GAEAC,GACA,YAAA,WAAA,OAAA,SAAA,OAAA,YAAA,QACA,YAAA,eACA9C,EAAAZ,EAAA0D,GAEAC,GACA,gBAAA,cAAA,aAAA,mBACA,qBAAA,eAAA,YAAA,kBACA,sBAAA,qBAAA,sBACA,4BAAA,iBAAA,uBACA,4BAAA,aAAA,UAAA,sBACA,aAAA,wBAAA,wBAAA,kBACA,mBAAA,mBAAA,oBAAA,sBACA,oBAAA,kBAAA,iBAAA,UACA,QAAA,iBAAA,iBAAA,iBACA,kBAAA,SAAA,gBAAA,sBACA,4BAAA,6BACA,sBAAA,sBAAA,kBACA,eAAA,eAAA,sBACA,sBAAA,qBAAA,sBACA,qBAAA,cAAA,oBACA,oBAAA,oBAAA,gBAAA,eACA,qBAAA,qBAAA,qBACA,iBAAA,eAAA,aAAA,mBACA,yBAAA,0BAAA,mBACA,mBAAA,eAAA,SAAA,uBACA,aAAA,aAAA,cAAA,eAAA,eACA,eAAA,cAAA,QAAA,OAAA,QAAA,gBAAA,eACA,cAAA,aAAA,cAAA,oBACA,oBAAA,oBAAA,cAAA,eACA,UAAA,UAAA,oBAAA,gBAAA,OAAA,MACA,YAAA,aAAA,SAAA,YAAA,UACA,oBAAA,4BACA,2BAAA,6BACA,4BAAA,oBAAA,qBACA,YAAA,cAAA,MAAA,eAAA,OAAA,aACA,iBAAA,YAAA,YAAA,cAAA,YACA,QAAA,eAAA,YAAA,YAAA,OAAA,wBACA,cAAA,eAAA,yBAAA,YAAA,mBACA,eAAA,aAAA,iBAAA,eACA,0BAAA,oBAAA,0BACA,yBAAA,uBAAA,wBACA,cAAA,OAAA,YAAA,oBAAA,iBACA,iBAAA,cAAA,kBAAA,kBACA,oBAAA,WAAA,WAAA,eAAA,eACA,iBAAA,gBAAA,sBAAA,wBACA,qBAAA,sBAAA,SAAA,UACA,OAAA,oBAAA,kBAAA,mBACA,mBAAA,kBAAA,gBAAA,eAAA,OAAA,iBACA,aAAA,cAAA,gBAAA,qBACA,sBAAA,yBAAA,aACA,mBAAA,sBAAA,kBAAA,SACA,gBAAA,cAAA,eAAA,aACA,QAAA,oBAAA,eACA,qBAAA,gBAAA,gBAAA,aACA,YAAA,aAAA,YAAA,iBAAA,UAAA,WAAA,YACA,WAAA,YAAA,SAAA,aAAA,kBACA,UAAA,QAAA,UAAA,UACA,gBAAA,iBAAA,gBAAA,gBACA,WAAA,iBAAA,gBAAA,aAAA,aACA,UAAA,iBAAA,eAAA,gBAAA,cACA,OAAA,mBAAA,oBAAA,oBACA,cAAA,QAAA,cAAA,eAAA,cACA,qBAAA,QAAA,cAAA,gBAAA,cAAA,aAAA,cAAA,WACA,qBAAA,mBAAA,SAAA,qBACA,sBAAA,sBAAA,kBACA,mBAAA,SAAA,OAAA,aAAA,cAAA,WACA,QAAA,WAAA,iBAAA,aAAA,gBACA,gBAAA,YAAA,wBAAA,eAAA,eACA,gBAAA,OAAA,QAAA,WAAA,eACA,gBAAA,oBAAA,cAAA,SAAA,aACA,WAAA,eAAA,SAAA,cAAA,aACA,kBAAA,aAAA,kBAAA,kBACA,wBAAA,uBAAA,uBACA,wBAAA,gBAAA,sBACA,yBAAA,sBAAA,cACA,cAAA,eAAA,eAAA,gBAAA,cACA,mBAAA,sBAAA,iBAAA,0BACA,YAAA,MAAA,YAAA,mBAAA,kBACA,aAAA,mBAAA,sBACA,sBAAA,6BAAA,eACA,cAAA,iBAAA,aAAA,gBAAA,iBACA,eAAA,cAAA,cAAA,aAAA,eACA,eAAA,SAAA,cAAA,SAAA,QAAA,cAAA,aACA,eAAA,YAAA,UAEA,YAAA,YAAA,OAAA,oBAAA,SAAA,cACA,gBAAA,iBAAA,aAAA,eAAA,iBACA,sBAAA,8BACA,kBAAA,OAAA,eAAA,YAAA,kBACA,SAAA,aAAA,aAAA,eAAA,kBAAA,SACA,mBAAA,oBAAA,iBAAA,kBACA,oBAAA,iBAAA,eAAA,iBACA,iBAAA,oBAAA,+BACA,6BAAA,cAAA,gBACAtD,EAAAL,EAAA2D,GAEAC,GACA,wBAAA,uBAAA,8BACA,uBAAA,4BAAA,yBACA,2BAAA,wBAAA,eACA,4BAAA,yBAAA,6BACA,iCAAA,QACA/C,EAAAb,EAAA4D,GAKA9C,EAAAd,GAFA,cAAA,MAAA,gBAAA,eAAA,wBACA,eAAA,cAAA,eAMAe,EAAAf,GAFA,mBAAA,WAAA,WAAA,MAAA,SAAA,QACA,WAAA,SAAA,UAAA,WAGA6D,GACA,YAAA,eAAA,OAAA,aAAA,QAAA,QACA,SAAA,QAAA,iBAAA,OAAA,aAAA,QACA,YAAA,YAAA,aAAA,YAAA,QAAA,iBACA,WAAA,UAAA,OAAA,WAAA,WAAA,gBACA,WAAA,YAAA,YAAA,cAAA,iBACA,aAAA,aAAA,UAAA,aAAA,eACA,gBAAA,gBAAA,gBAAA,aACA,WAAA,cAAA,UAAA,aAAA,YACA,cAAA,cAAA,UAAA,YAAA,aACA,OAAA,YAAA,OAAA,OAAA,QAAA,cAAA,WACA,UAAA,YAAA,SAAA,QAAA,QAAA,WACA,gBAAA,YAAA,eAAA,YAAA,aACA,YAAA,uBAAA,YAAA,aAAA,YACA,cAAA,gBAAA,eAAA,iBACA,iBAAA,cAAA,OAAA,YAAA,QAAA,UACA,SAAA,mBAAA,aAAA,eAAA,eACA,iBAAA,kBAAA,oBAAA,kBACA,kBAAA,eAAA,YAAA,YAAA,WACA,cAAA,OAAA,UAAA,QAAA,YAAA,SAAA,YACA,SAAA,gBAAA,YAAA,gBAAA,gBACA,aAAA,YAAA,OAAA,OAAA,OAAA,aACA,SAAA,gBAAA,MAAA,YAAA,YAAA,cACA,SAAA,aAAA,WAAA,WAAA,SAAA,SAAA,UACA,YAAA,YAAA,OAAA,cAAA,YAAA,MACA,OAAA,UAAA,SAAA,YAAA,SAAA,QAAA,QACA,aAAA,SAAA,eACA7C,EAAAhB,EAAA6D,GAEAC,GACA,QAAA,WAAA,eAAA,WAAA,gBAAA,OACA,oBAAA,QAAA,QAAA,MAAA,aAAA,aAAA,YACA,SAAA,UAAA,kBAAA,cAAA,eACA,eAAA,WAAA,YAAA,OAAA,OAAA,YAAA,QAAA,eAAA,aACA,eAAA,aAAA,YAAA,WAAA,QAAA,gBAAA,SACA,UAAA,QAAA,QAAA,aAAA,OAAA,SAAA,SAAA,aACA,OAAA,SAAA,QAAA,YAAA,aAAA,UAAA,SAAA,eACA,aAAA,kBAAA,eAAA,aAAA,OAAA,YACA,aAAA,sBAAA,UAAA,cAAA,QACA,OAAA,SAAA,WAAA,SAAA,cAAA,qBACA,oBAAA,kBAAA,QAAA,OAAA,cACA,aAAA,WAAA,QAAA,aAAA,cAAA,SAAA,iBACA,UAAA,YAAA,UAAA,UAAA,WACA,cAAA,eAAA,aAAA,OAAA,UAAA,WAAA,QAAA,OACA,QAAA,YAAA,eAAA,UAAA,SAAA,SAAA,SAAA,UACA,uBAAA,UAAA,iBAAA,QAAA,mBACA,iBAAA,kBAAA,mBAAA,aAAA,aACA,OAAA,UAAA,oBAAA,kBAAA,WACA,WAAA,eACA,SAAA,SAAA,OAAA,WAAA,OAAA,UAAA,cAAA,WACA,UAAA,UAAA,WAAA,QAAA,MAAA,WAAA,mBACA,yBAAA,uBAAA,yBACA,yBAAA,0BACA,0BAAA,0BACA,wBAAA,0BACA,2BAAA,0BACA,0BAAA,0BAAA,wBACA,mBAAA,YAAA,YAAA,WAAA,UAAA,kBACA,iBAAA,UAAA,OAAA,OAAA,QAAA,OAAA,OAAA,WAAA,aAAA,YACA,WAAA,OAAA,qBAAA,WAAA,WAAA,OAAA,SACA,WAAA,WAAA,OAAA,SAAA,mBAAA,aAAA,SACA,OAAA,SAAA,OAAA,SAAA,YAAA,gBACA,WAAA,iBAAA,aAAA,MAAA,OAAA,MAAA,OAAA,SACA,iBAAA,kBAAA,sBAAA,WACA,iBAAA,WAAA,UAAA,UAAA,SAAA,cACA,eAAA,cAAA,cAAA,eAAA,QAAA,SAAA,YAAA,SACA,SAAA,kBAAA,oBAAA,UAAA,UACA,WAAA,iBAAA,WAAA,QACA,uBAAA,sBAAA,wBACA,YAAA,MAAA,QAAA,SAAA,OAAA,QAAA,UAAA,UACA,eAAA,SAAA,kBAAA,QAAA,YAAA,UAAA,WACA,QAAA,UAAA,OAAA,QAAA,cAAA,iBACA,cAAA,oBAAA,cAAA,kBACA,cAAA,YAAA,MAAA,aAAA,YAAA,QAAA,SAAA,WACA,4BAAA,6BACA,0BAAA,oBAAA,oBACA,kCAAA,sBACA,yBAAA,4BAAA,eACA,oBAAA,+BAAA,sBACA,gCAAA,2BAAA,SACA,OAAA,WAAA,kBAAA,gBACA,qBAAA,WAAA,cAAA,SAAA,gBACA,MAAA,YAAA,YAAA,OAAA,WAAA,WAAA,UAAA,WACA,WAAA,YAAA,cAAA,iBAAA,UACA,gBAAA,YAAA,OAAA,SAAA,cAAA,SACA,YAAA,UAAA,UAAA,YAAA,cAAA,UAAA,QAAA,UAAA,aACA,qBAAA,gBAAA,QAAA,QAAA,SACA,UAAA,gBAAA,UAAA,WAAA,UAAA,cACA,UAAA,OAAA,SAAA,UAAA,cAAA,cAAA,eACA,UAAA,UAAA,WAAA,MAAA,WAAA,WAAA,cACA,WAAA,cAAA,kBAAA,QAAA,YACA,aAAA,4BAAA,YAAA,SACA,WAAA,SAAA,4BACA,4BAAA,WAAA,WAAA,QAAA,UACA,MAAA,OAAA,QAAA,QAAA,SAAA,WAAA,UAAA,UACA,UAAA,QAAA,MAAA,aAAA,cAAA,MAAA,SAAA,UACA,WAAA,aAAA,aAAA,QAAA,UAAA,SAAA,SAAA,SAAA,SACA,SAAA,YAAA,kBAAA,YAAA,cACA,4BAAA,yBACA,6BAAA,iCAAA,aAAA,WACA,iBAAA,gBAAA,WAAA,QAAA,OAAA,SACA,sBAAA,wBAAA,SACA,OAAA,QAAA,QAAA,mBAAA,QAAA,oBACA,kBAAA,yBAAA,uBAAA,OACA,QAAA,aAAA,gBAAA,UAAA,aAAA,QAAA,SACA,cAAA,YAAA,aAAA,cAAA,QAAA,eAAA,gBAAA,eAAA,YAAA,SACA,gBAAA,QAAA,SAAA,aAAA,UAAA,SAAA,MACA,uBAAA,QAAA,YAAA,WAAA,UAAA,YAAA,QACA,gBAAA,aAAA,eAAA,qBACA,qBAAA,qBAAA,YAAA,kBACA,QACA,SAAA,OAAA,cAAA,WAAA,WAAA,YAAA,OACA,QAAA,OAAA,mBAAA,aAAA,kBACA,oBAAA,eAAA,UAAA,QAAA,cACA,sBAAA,cAAA,sBAAA,KAAA,MACA,sBAAA,wBAAA,YACA,YAAA,cAAA,aAAA,aAAA,aACA,cAAA,kBAAA,iBAAA,YAAA,QAAA,KACA,cAAA,iBAAA,cAAA,oBACA,cAAA,kBAAA,cAAA,YAAA,OAAA,MACA,MAAA,WAAA,gBAAA,UAAA,cAAA,iBACA,gBAAA,SAAA,WAAA,OAAA,OAAA,QACA,SAAA,cAAA,aAAA,QAAA,OAAA,eAAA,UAAA,UAAA,MACA,WAAA,YACA7C,EAAAjB,EAAA8D,GAEAC,EAAAR,EAAAjV,OAAAkV,GAAAlV,OAAAmV,GAAAnV,OAAAoV,GACApV,OAAAqV,GAAArV,OAAAsV,GAAAtV,OAAAuV,GACAvV,OAAAwV,GAGA,SAAAE,EAAArI,EAAA7W,GAEA,IADA,IAAAiX,EAAAkI,GAAA,EACA,OAAAlI,EAAAJ,EAAAK,SAAA,CACA,GAAAiI,GAAA,KAAAlI,EAAA,CACAjX,EAAAgX,SAAA,KACA,MAEAmI,EAAA,KAAAlI,EAEA,OAAA,UAAA,WAXAtG,EAAAyO,eAAA,YAAA,MAAAH,GAcAtO,EAAAqK,WAAA,YACAW,cAAAA,EACAC,WAAAA,EACAC,cAAAA,EACAC,mBAAAA,EACAP,iBAAAA,EACAQ,4BAAAA,EACAC,eAAAA,EACAC,mBAAAA,EACAC,cAAAA,EACAC,cAAAA,EACAT,YACA2D,IAAA,SAAAxI,EAAA7W,GACA,QAAA6W,EAAAM,IAAA,OACAnX,EAAAgX,SAAAkI,EACAA,EAAArI,EAAA7W,MAGAiB,KAAA,QAGA0P,EAAAqK,WAAA,eACAY,WAAAA,EACAC,cAAAA,EACAC,mBAAAA,EACAP,iBAAAA,EACAQ,4BAAAA,EACAG,cAAAA,EACAC,cAAAA,EACAH,eAAAA,EACAI,aAAA,EACAC,YAAA,KACAX,YACA2D,IAAA,SAAAxI,EAAA7W,GACA,OAAA6W,EAAAM,IAAA,MACAN,EAAAyI,aACA,UAAA,YACAzI,EAAAM,IAAA,MACAnX,EAAAgX,SAAAkI,EACAA,EAAArI,EAAA7W,KAEA,WAAA,aAGAuf,IAAA,SAAA1I,GACA,QAAAA,EAAArH,MAAA,SAAA,KACA,KAAA,OAGArS,EAAA,SAAA0Z,GAEA,OADAA,EAAArH,MAAA,WACAqH,EAAArH,MAAA,SAAA,IACA,aAAA,wBACA,aAAA,aAEAgQ,IAAA,SAAA3I,GACA,QAAAA,EAAAM,IAAA,OACA,KAAA,mBAGAlW,KAAA,MACA6Z,WAAA,SAGAnK,EAAAqK,WAAA,eACAY,WAAAA,EACAC,cAAAA,EACAC,mBAAAA,EACAP,iBAAAA,EACAQ,4BAAAA,EACAG,cAAAA,EACAC,cAAAA,EACAH,eAAAA,EACAI,aAAA,EACAC,YAAA,KACAX,YACA2D,IAAA,SAAAxI,EAAA7W,GACA,OAAA6W,EAAAM,IAAA,MACAN,EAAAyI,aACA,UAAA,YACAzI,EAAAM,IAAA,MACAnX,EAAAgX,SAAAkI,EACAA,EAAArI,EAAA7W,KAEA,WAAA,aAGAyf,IAAA,SAAA5I,GACA,OAAAA,EAAAM,IAAA,MAAA,KAAA,kBACAN,EAAArH,MAAA,yGAAA,KACAqH,EAAAQ,SAAA,YACAR,EAAArH,MAAA,SAAA,IACA,aAAA,wBACA,aAAA,cAEAkQ,IAAA,WACA,OAAA,OAAA,UAGAze,KAAA,MACA6Z,WAAA,SAGAnK,EAAAqK,WAAA,cACAW,cAAAA,EACAC,WAAAA,EACAC,cAAAA,EACAN,iBAAAA,EACAQ,4BAAAA,EACAC,eAAAA,EACAC,mBAAAA,EACAC,cAAAA,EACAC,cAAAA,EACAG,qBAAA,EACAZ,YACA2D,IAAA,SAAAxI,EAAA7W,GACA,QAAA6W,EAAAM,IAAA,OACAnX,EAAAgX,SAAAkI,EACAA,EAAArI,EAAA7W,MAGAiB,KAAA,MACA6Z,WAAA,UAQA9iB,EAAA,iDAAA,oBAAA,SAAA2Y,GAGAA,EAAAyF,WAAA,aAAA,SAAAI,EAAA6E,GACA,IA6CArS,EAAA2W,EA7CAnN,EAAAgE,EAAAhE,WACAoN,EAAAvE,EAAAuE,gBACAC,EAAAxE,EAAAyE,OACAC,EAAA1E,EAAA2E,MAAAH,EACAI,EAAA5E,EAAA6E,WACAC,EAAA9E,EAAA+E,gBAAA,mBAIAC,EAAA,WACA,SAAAC,EAAAtX,GAAA,OAAAA,KAAAA,EAAAmP,MAAA,WACA,IAAAoI,EAAAD,EAAA,aAAAE,EAAAF,EAAA,aAAAG,EAAAH,EAAA,aAAAI,EAAAJ,EAAA,aACAK,EAAAL,EAAA,YAAAM,GAAA5X,KAAA,OAAAmP,MAAA,QAEA,OACA0I,GAAAP,EAAA,MAAAQ,MAAAP,EAAAQ,KAAAR,EAAAS,KAAAR,EAAAS,GAAAT,EAAAU,IAAAV,EAAAW,QAAAX,EACAY,OAAAV,EAAAW,MAAAX,EAAAY,SAAAZ,EAAAa,IAAAjB,EAAA,OAAAkB,OAAAf,EAAAgB,KAAAhB,EAAAiB,MAAAjB,EACAkB,SAAArB,EAAA,YAAAsB,IAAAtB,EAAA,OAAAuB,MAAAvB,EAAA,OAAAwB,IAAAxB,EAAA,OACAyB,SAAAzB,EAAA,YAAApZ,MAAAoZ,EAAA,SACA0B,IAAA1B,EAAA,OAAA2B,OAAA3B,EAAA,UAAA4B,KAAA5B,EAAA,QAAA6B,QAAA7B,EAAA,WACA8B,GAAAzB,EAAA0B,OAAA1B,EAAA2B,WAAA3B,EACA4B,KAAA3B,EAAA4B,MAAA5B,EAAA6B,KAAA7B,EAAA1gB,UAAA0gB,EAAA8B,IAAA9B,EAAA+B,SAAA/B,EACAlkB,KAAA4jB,EAAA,QAAAsC,MAAAtC,EAAA,SAAAuC,MAAAvC,EAAA,QACAwC,MAAArC,EAAAsC,OAAAzC,EAAA,UAAA0C,OAAA1C,EAAA,UAAA2C,QAAAxC,EACAyC,MAAAzC,GAfA,GAmBA0C,EAAA,oBACAC,EAAA,wFAiBA,SAAA7G,EAAAC,EAAArE,EAAAkL,GAEA,OADAra,EAAAwT,EAAAmD,EAAA0D,EACAlL,EAEA,SAAAmL,EAAAzM,EAAA7W,GACA,IA+DAyX,EA/DAR,EAAAJ,EAAAK,OACA,GAAA,KAAAD,GAAA,KAAAA,EAEA,OADAjX,EAAAgX,UA6DAS,EA7DAR,EA8DA,SAAAJ,EAAA7W,GACA,IAAAkX,EAAAwF,GAAA,EACA,GAAAmD,GAAA,KAAAhJ,EAAAuH,QAAAvH,EAAArH,MAAA4T,GAEA,OADApjB,EAAAgX,SAAAsM,EACA/G,EAAA,iBAAA,QAEA,KAAA,OAAArF,EAAAL,EAAAK,UACAA,GAAAO,GAAAiF,IACAA,GAAAA,GAAA,MAAAxF,EAGA,OADAwF,IAAA1c,EAAAgX,SAAAsM,GACA/G,EAAA,SAAA,YAxEAvc,EAAAgX,SAAAH,EAAA7W,GACA,GAAA,KAAAiX,GAAAJ,EAAArH,MAAA,0BACA,OAAA+M,EAAA,SAAA,UACA,GAAA,KAAAtF,GAAAJ,EAAArH,MAAA,MACA,OAAA+M,EAAA,SAAA,QACA,GAAA,qBAAAzE,KAAAb,GACA,OAAAsF,EAAAtF,GACA,GAAA,KAAAA,GAAAJ,EAAAM,IAAA,KACA,OAAAoF,EAAA,KAAA,YACA,GAAA,KAAAtF,GAAAJ,EAAArH,MAAA,oCACA,OAAA+M,EAAA,SAAA,UACA,GAAA,KAAAzE,KAAAb,GAEA,OADAJ,EAAArH,MAAA,2CACA+M,EAAA,SAAA,UACA,GAAA,KAAAtF,EACA,OAAAJ,EAAAM,IAAA,MACAnX,EAAAgX,SAAAuM,EACAA,EAAA1M,EAAA7W,IACA6W,EAAAM,IAAA,MACAN,EAAAyI,YACA/C,EAAA,UAAA,YACAiH,GAAA3M,EAAA7W,EAAA,IA5CA,SAAA6W,GACA,IAAAK,EAAAwF,GAAA,EAAA+G,GAAA,EACA,KAAA,OAAAvM,EAAAL,EAAAK,SAAA,CACA,IAAAwF,EAAA,CACA,GAAA,KAAAxF,IAAAuM,EAAA,OACA,KAAAvM,EAAAuM,GAAA,EACAA,GAAA,KAAAvM,IAAAuM,GAAA,GAEA/G,GAAAA,GAAA,MAAAxF,GAqCAwM,CAAA7M,GACAA,EAAArH,MAAA,qCACA+M,EAAA,SAAA,cAEA1F,EAAAM,IAAA,KACAoF,EAAA,WAAA,WAAA1F,EAAAiC,YAEA,GAAA,KAAA7B,EAEA,OADAjX,EAAAgX,SAAA2M,EACAA,EAAA9M,EAAA7W,GACA,GAAA,KAAAiX,EAEA,OADAJ,EAAAyI,YACA/C,EAAA,QAAA,SACA,GAAA4G,EAAArL,KAAAb,GASA,MARA,KAAAA,GAAAjX,EAAA4jB,SAAA,KAAA5jB,EAAA4jB,QAAA5a,OACA6N,EAAAM,IAAA,KACA,KAAAF,GAAA,KAAAA,GAAAJ,EAAAM,IAAA,KACA,WAAAW,KAAAb,KACAJ,EAAAM,IAAAF,GACA,KAAAA,GAAAJ,EAAAM,IAAAF,KAGAsF,EAAA,WAAA,WAAA1F,EAAAiC,WACA,GAAAqH,EAAArI,KAAAb,GAAA,CACAJ,EAAAQ,SAAA8I,GACA,IAAA/C,EAAAvG,EAAAiC,UACA,GAAA,KAAA9Y,EAAA6jB,SAAA,CACA,GAAAxD,EAAAyD,qBAAA1G,GAAA,CACA,IAAAkD,EAAAD,EAAAjD,GACA,OAAAb,EAAA+D,EAAAtX,KAAAsX,EAAAnI,MAAAiF,GAEA,GAAA,SAAAA,GAAAvG,EAAArH,MAAA,8BAAA,GACA,OAAA+M,EAAA,QAAA,UAAAa,GAEA,OAAAb,EAAA,WAAA,WAAAa,IAoBA,SAAAmG,EAAA1M,EAAA7W,GAEA,IADA,IAAAiX,EAAAkI,GAAA,EACAlI,EAAAJ,EAAAK,QAAA,CACA,GAAA,KAAAD,GAAAkI,EAAA,CACAnf,EAAAgX,SAAAsM,EACA,MAEAnE,EAAA,KAAAlI,EAEA,OAAAsF,EAAA,UAAA,WAGA,SAAAoH,EAAA9M,EAAA7W,GAEA,IADA,IAAAkX,EAAAwF,GAAA,EACA,OAAAxF,EAAAL,EAAAK,SAAA,CACA,IAAAwF,IAAA,KAAAxF,GAAA,KAAAA,GAAAL,EAAAM,IAAA,MAAA,CACAnX,EAAAgX,SAAAsM,EACA,MAEA5G,GAAAA,GAAA,MAAAxF,EAEA,OAAAqF,EAAA,QAAA,WAAA1F,EAAAiC,WAGA,IAAAiL,EAAA,SAQA,SAAAC,EAAAnN,EAAA7W,GACAA,EAAAikB,aAAAjkB,EAAAikB,WAAA,MACA,IAAAC,EAAArN,EAAAsN,OAAA9S,QAAA,KAAAwF,EAAAuN,OACA,KAAAF,EAAA,GAAA,CAEA,GAAAjE,EAAA,CACA,IAAAoE,EAAA,6CAAA7J,KAAA3D,EAAAsN,OAAA3nB,MAAAqa,EAAAuN,MAAAF,IACAG,IAAAH,EAAAG,EAAAC,OAIA,IADA,IAAA/M,EAAA,EAAAgN,GAAA,EACAC,EAAAN,EAAA,EAAAM,GAAA,IAAAA,EAAA,CACA,IAAAvN,EAAAJ,EAAAsN,OAAA7G,OAAAkH,GACAC,EAAAV,EAAA1S,QAAA4F,GACA,GAAAwN,GAAA,GAAAA,EAAA,EAAA,CACA,IAAAlN,EAAA,GAAAiN,EAAA,MACA,GAAA,KAAAjN,EAAA,CAAA,KAAAN,IAAAsN,GAAA,GAAA,YACA,GAAAE,GAAA,GAAAA,EAAA,IACAlN,OACA,GAAA4I,EAAArI,KAAAb,GACAsN,GAAA,MACA,CAAA,GAAA,SAAAzM,KAAAb,GACA,OACA,GAAAsN,IAAAhN,EAAA,GACAiN,EACA,QAGAD,IAAAhN,IAAAvX,EAAAikB,WAAAO,IAKA,IAAAE,GAAA9D,MAAA,EAAA+D,QAAA,EAAAC,UAAA,EAAAT,QAAA,EAAAU,QAAA,EAAAnoB,MAAA,EAAAooB,kBAAA,GAEA,SAAAC,EAAAzL,EAAApB,EAAAlP,EAAA4E,EAAA2K,EAAAyM,GACAtoB,KAAA4c,SAAAA,EACA5c,KAAAwb,OAAAA,EACAxb,KAAAsM,KAAAA,EACAtM,KAAA6b,KAAAA,EACA7b,KAAAsoB,KAAAA,EACA,MAAApX,IAAAlR,KAAAkR,MAAAA,GAGA,SAAAqX,EAAAjlB,EAAAklB,GACA,IAAA,IAAA9e,EAAApG,EAAAmlB,UAAA/e,EAAAA,EAAAA,EAAA8Q,KACA,GAAA9Q,EAAAnF,MAAAikB,EAAA,OAAA,EACA,IAAA,IAAA7G,EAAAre,EAAAsY,QAAA+F,EAAAA,EAAAA,EAAA9F,KACA,IAAA,IAAAnS,EAAAiY,EAAA+G,KAAAhf,EAAAA,EAAAA,EAAA8Q,KACA,GAAA9Q,EAAAnF,MAAAikB,EAAA,OAAA,EA2BA,IAAA7G,GAAAre,MAAA,KAAAkY,OAAA,KAAAmN,OAAA,KAAAC,GAAA,MACA,SAAAvI,IACA,IAAA,IAAA7X,EAAA9I,UAAAC,OAAA,EAAA6I,GAAA,EAAAA,IAAAmZ,EAAAiH,GAAAzjB,KAAAzF,UAAA8I,IAEA,SAAAme,IAEA,OADAtG,EAAAtT,MAAA,KAAArN,YACA,EAEA,SAAAmpB,EAAAtkB,EAAAwC,GACA,IAAA,IAAA2C,EAAA3C,EAAA2C,EAAAA,EAAAA,EAAA8Q,KAAA,GAAA9Q,EAAAnF,MAAAA,EAAA,OAAA,EACA,OAAA,EAEA,SAAAukB,EAAAN,GACA,IAAAllB,EAAAqe,EAAAre,MAEA,GADAqe,EAAAgH,OAAA,MACArlB,EAAAsY,QACA,GAAA,OAAAtY,EAAA4jB,QAAAoB,MAAAhlB,EAAAsY,SAAAtY,EAAAsY,QAAAiF,MAAA,CAEA,IAAAkI,EAcA,SAAAC,EAAAR,EAAA5M,GACA,GAAAA,EAEA,CAAA,GAAAA,EAAAiF,MAAA,CACA,IAAAoI,EAAAD,EAAAR,EAAA5M,EAAAC,MACA,OAAAoN,EACAA,GAAArN,EAAAC,KAAAD,EACA,IAAAuE,EAAA8I,EAAArN,EAAA8M,MAAA,GAFA,KAGA,OAAAG,EAAAL,EAAA5M,EAAA8M,MACA9M,EAEA,IAAAuE,EAAAvE,EAAAC,KAAA,IAAAqN,EAAAV,EAAA5M,EAAA8M,OAAA,GATA,OAAA,KAhBAM,CAAAR,EAAAllB,EAAAsY,SACA,GAAA,MAAAmN,EAEA,YADAzlB,EAAAsY,QAAAmN,QAGA,IAAAF,EAAAL,EAAAllB,EAAAmlB,WAEA,YADAnlB,EAAAmlB,UAAA,IAAAS,EAAAV,EAAAllB,EAAAmlB,YAKA9J,EAAAwK,aAAAN,EAAAL,EAAAllB,EAAA6lB,cACA7lB,EAAA6lB,WAAA,IAAAD,EAAAV,EAAAllB,EAAA6lB,aAiBA,SAAAC,EAAA7kB,GACA,MAAA,UAAAA,GAAA,WAAAA,GAAA,aAAAA,GAAA,YAAAA,GAAA,YAAAA,EAKA,SAAA4b,EAAAtE,EAAA6M,EAAA7H,GAAA7gB,KAAA6b,KAAAA,EAAA7b,KAAA0oB,KAAAA,EAAA1oB,KAAA6gB,MAAAA,EACA,SAAAqI,EAAA3kB,EAAAiW,GAAAxa,KAAAuE,KAAAA,EAAAvE,KAAAwa,KAAAA,EAEA,IAAA6O,EAAA,IAAAH,EAAA,OAAA,IAAAA,EAAA,YAAA,OACA,SAAAI,IACA3H,EAAAre,MAAAsY,QAAA,IAAAuE,EAAAwB,EAAAre,MAAAsY,QAAA+F,EAAAre,MAAAmlB,WAAA,GACA9G,EAAAre,MAAAmlB,UAAAY,EAEA,SAAAE,IACA5H,EAAAre,MAAAsY,QAAA,IAAAuE,EAAAwB,EAAAre,MAAAsY,QAAA+F,EAAAre,MAAAmlB,WAAA,GACA9G,EAAAre,MAAAmlB,UAAA,KAEA,SAAAe,IACA7H,EAAAre,MAAAmlB,UAAA9G,EAAAre,MAAAsY,QAAA8M,KACA/G,EAAAre,MAAAsY,QAAA+F,EAAAre,MAAAsY,QAAAC,KAGA,SAAA4N,EAAAnd,EAAAgc,GACA,IAAA7oB,EAAA,WACA,IAAA6D,EAAAqe,EAAAre,MAAA1G,EAAA0G,EAAAsZ,SACA,GAAA,QAAAtZ,EAAA4jB,QAAA5a,KAAA1P,EAAA0G,EAAA4jB,QAAAtK,cACA,IAAA,IAAA8M,EAAApmB,EAAA4jB,QAAAwC,GAAA,KAAAA,EAAApd,MAAAod,EAAAxY,MAAAwY,EAAAA,EAAA7N,KACAjf,EAAA8sB,EAAA9M,SACAtZ,EAAA4jB,QAAA,IAAAmB,EAAAzrB,EAAA+kB,EAAAxH,OAAAqB,SAAAlP,EAAA,KAAAhJ,EAAA4jB,QAAAoB,IAGA,OADA7oB,EAAAkqB,KAAA,EACAlqB,EAEA,SAAAmqB,IACA,IAAAtmB,EAAAqe,EAAAre,MACAA,EAAA4jB,QAAArL,OACA,KAAAvY,EAAA4jB,QAAA5a,OACAhJ,EAAAsZ,SAAAtZ,EAAA4jB,QAAAtK,UACAtZ,EAAA4jB,QAAA5jB,EAAA4jB,QAAArL,MAKA,SAAAgO,EAAAC,GAMA,OALA,SAAAC,EAAAzd,GACA,OAAAA,GAAAwd,EAAAnD,IACA,KAAAmD,GAAA,KAAAxd,GAAA,KAAAA,GAAA,KAAAA,EAAA+T,IACAsG,EAAAoD,IAKA,SAAAC,EAAA1d,EAAA5I,GACA,MAAA,OAAA4I,EAAAqa,EAAA8C,EAAA,SAAA/lB,GAAAumB,GAAAJ,EAAA,KAAAD,GACA,aAAAtd,EAAAqa,EAAA8C,EAAA,QAAAS,EAAAF,EAAAJ,GACA,aAAAtd,EAAAqa,EAAA8C,EAAA,QAAAO,EAAAJ,GACA,aAAAtd,EAAAqV,EAAAxH,OAAArH,MAAA,SAAA,GAAA6T,IAAAA,EAAA8C,EAAA,QAAAU,EAAAN,EAAA,KAAAD,GACA,YAAAtd,EAAAqa,EAAAkD,EAAA,MACA,KAAAvd,EAAAqa,EAAA8C,EAAA,KAAAF,EAAA1I,GAAA+I,EAAAJ,GACA,KAAAld,EAAAqa,IACA,MAAAra,GACA,QAAAqV,EAAAre,MAAA4jB,QAAAoB,MAAA3G,EAAAre,MAAAslB,GAAAjH,EAAAre,MAAAslB,GAAAjpB,OAAA,IAAAiqB,GACAjI,EAAAre,MAAAslB,GAAArf,KAAAoY,GACAgF,EAAA8C,EAAA,QAAAS,EAAAF,EAAAJ,EAAAQ,KAEA,YAAA9d,EAAAqa,EAAA0D,IACA,OAAA/d,EAAAqa,EAAA8C,EAAA,QAAAa,GAAAN,EAAAJ,GACA,SAAAtd,GAAAiX,GAAA,aAAA7f,GACAie,EAAAgH,OAAA,UACAhC,EAAA8C,EAAA,OAAA,SAAAnd,EAAAA,EAAA5I,GAAA6mB,GAAAX,IAEA,YAAAtd,EACAiX,GAAA,WAAA7f,GACAie,EAAAgH,OAAA,UACAhC,EAAAqD,IACAzG,IAAA,UAAA7f,GAAA,QAAAA,GAAA,QAAAA,IAAAie,EAAAxH,OAAArH,MAAA,UAAA,IACA6O,EAAAgH,OAAA,UACA,QAAAjlB,EAAAijB,EAAA6D,IACA,QAAA9mB,EAAAijB,EAAA8D,GAAAZ,EAAA,YAAAa,GAAAb,EAAA,MACAlD,EAAA8C,EAAA,QAAAkB,GAAAd,EAAA,KAAAJ,EAAA,KAAA5I,GAAA+I,EAAAA,IACArG,GAAA,aAAA7f,GACAie,EAAAgH,OAAA,UACAhC,EAAA8C,EAAA,QAAAmB,EAAAZ,EAAAJ,IACArG,GAAA,YAAA7f,GACAie,EAAAgH,OAAA,UACAhC,EAAAqD,IAEArD,EAAA8C,EAAA,QAAAoB,GAGA,UAAAve,EAAAqa,EAAA8C,EAAA,QAAAS,EAAAL,EAAA,KAAAJ,EAAA,IAAA,UAAAF,EACA1I,GAAA+I,EAAAA,EAAAJ,GACA,QAAAld,EAAAqa,EAAAiE,EAAAf,EAAA,MACA,WAAAvd,EAAAqa,EAAAkD,EAAA,MACA,SAAAvd,EAAAqa,EAAA8C,EAAA,QAAAH,EAAAwB,EAAAd,EAAAJ,EAAAJ,GACA,UAAAld,EAAAqa,EAAA8C,EAAA,QAAAsB,GAAAnB,GACA,UAAAtd,EAAAqa,EAAA8C,EAAA,QAAAuB,GAAApB,GACA,SAAAtd,EAAAqa,EAAAqD,GACA,KAAAtmB,EAAAijB,EAAAiE,EAAAZ,GACA3J,EAAAoJ,EAAA,QAAAmB,EAAAf,EAAA,KAAAD,GAEA,SAAAkB,EAAAxe,GACA,GAAA,KAAAA,EAAA,OAAAqa,EAAAsE,GAAApB,EAAA,MAEA,SAAAe,EAAAte,EAAA5I,GACA,OAAAwnB,EAAA5e,EAAA5I,GAAA,GAEA,SAAAynB,EAAA7e,EAAA5I,GACA,OAAAwnB,EAAA5e,EAAA5I,GAAA,GAEA,SAAAwmB,EAAA5d,GACA,MAAA,KAAAA,EAAA+T,IACAsG,EAAA8C,EAAA,KAAAmB,EAAAf,EAAA,KAAAD,GAEA,SAAAsB,EAAA5e,EAAA5I,EAAA0nB,GACA,GAAAzJ,EAAAre,MAAAikB,YAAA5F,EAAAxH,OAAAuN,MAAA,CACA,IAAArb,EAAA+e,EAAAC,EAAAC,EACA,GAAA,KAAAhf,EAAA,OAAAqa,EAAA2C,EAAAG,EAAA,KAAA8B,GAAAN,GAAA,KAAArB,EAAAC,EAAA,MAAAxd,EAAAmd,GACA,GAAA,YAAAld,EAAA,OAAA+T,EAAAiJ,EAAAqB,GAAAd,EAAA,MAAAxd,EAAAmd,GAGA,IAAAgC,EAAAJ,EAAAK,EAAAC,EACA,OAAA1D,EAAA/L,eAAA3P,GAAAqa,EAAA6E,GACA,YAAAlf,EAAAqa,EAAA0D,GAAAmB,GACA,SAAAlf,GAAAiX,GAAA,aAAA7f,GAAAie,EAAAgH,OAAA,UAAAhC,EAAA8C,EAAA,QAAAkC,GAAA/B,IACA,aAAAtd,GAAA,SAAAA,EAAAqa,EAAAyE,EAAAD,EAAAP,GACA,KAAAte,EAAAqa,EAAA8C,EAAA,KAAAU,EAAAN,EAAA,KAAAD,EAAA4B,GACA,YAAAlf,GAAA,UAAAA,EAAAqa,EAAAyE,EAAAD,EAAAP,GACA,KAAAte,EAAAqa,EAAA8C,EAAA,KAAAmC,GAAAhC,EAAA4B,GACA,KAAAlf,EAAAuf,GAAAC,GAAA,IAAA,KAAAN,GACA,SAAAlf,EAAA+T,EAAA0L,EAAAP,GACA,OAAAlf,EAAAqa,EAwDA,SAAAyE,GACA,OAAA,SAAA9e,GACA,MAAA,KAAAA,EAAAqa,EAAAyE,EAAAY,EAAApc,GACA,YAAAtD,GAAAiX,EAAAoD,EAAAsF,GAAAb,EAAAK,EAAAC,GACArL,EAAA+K,EAAAD,EAAAP,IA5DAsB,CAAAd,IACA,UAAA9e,EAAAqa,EAAAiE,GACAjE,IAEA,SAAAwD,EAAA7d,GACA,OAAAA,EAAAwG,MAAA,cAAAuN,IACAA,EAAAuK,GAGA,SAAAc,EAAApf,EAAA5I,GACA,MAAA,KAAA4I,EAAAqa,EAAAiE,GACAa,EAAAnf,EAAA5I,GAAA,GAEA,SAAA+nB,EAAAnf,EAAA5I,EAAA0nB,GACA,IAAAe,EAAA,GAAAf,EAAAM,EAAAD,EACAW,EAAA,GAAAhB,EAAAR,EAAAO,EACA,MAAA,MAAA7e,EAAAqa,EAAA2C,EAAA8B,EAAAC,EAAAC,EAAA9B,GACA,YAAAld,EACA,UAAA8O,KAAA1X,IAAA6f,GAAA,KAAA7f,EAAAijB,EAAAwF,GACA5I,GAAA,KAAA7f,GAAAie,EAAAxH,OAAArH,MAAA,wBAAA,GACA6T,EAAA8C,EAAA,KAAA8B,GAAAb,GAAA,KAAAd,EAAAuC,GACA,KAAAzoB,EAAAijB,EAAAiE,EAAAf,EAAA,KAAAuC,GACAzF,EAAAyF,GAEA,SAAA9f,EAAA+T,EAAA0L,EAAAI,GACA,KAAA7f,EACA,KAAAA,EAAAuf,GAAAV,EAAA,IAAA,OAAAgB,GACA,KAAA7f,EAAAqa,EAAA0F,GAAAF,GACA,KAAA7f,EAAAqa,EAAA8C,EAAA,KAAAU,EAAAN,EAAA,KAAAD,EAAAuC,GACA5I,GAAA,MAAA7f,GAAAie,EAAAgH,OAAA,UAAAhC,EAAA+D,GAAAyB,IACA,UAAA7f,GACAqV,EAAAre,MAAA6jB,SAAAxF,EAAAgH,OAAA,WACAhH,EAAAxH,OAAA8F,OAAA0B,EAAAxH,OAAA2N,IAAAnG,EAAAxH,OAAAuN,MAAA,GACAf,EAAAyF,SAHA,OALA,EAWA,SAAAL,EAAAzf,EAAA5I,GACA,MAAA,SAAA4I,EAAA+T,IACA,MAAA3c,EAAA5D,MAAA4D,EAAA/D,OAAA,GAAAgnB,EAAAoF,GACApF,EAAAiE,EAAA0B,GAEA,SAAAA,EAAAhgB,GACA,GAAA,KAAAA,EAGA,OAFAqV,EAAAgH,OAAA,WACAhH,EAAAre,MAAAgX,SAAA2M,EACAN,EAAAoF,GAGA,SAAAT,EAAAhf,GAEA,OADAgb,EAAA3F,EAAAxH,OAAAwH,EAAAre,OACA+c,EAAA,KAAA/T,EAAA0d,EAAAY,GAEA,SAAAS,EAAA/e,GAEA,OADAgb,EAAA3F,EAAAxH,OAAAwH,EAAAre,OACA+c,EAAA,KAAA/T,EAAA0d,EAAAmB,GASA,SAAAvb,EAAA2c,EAAA7oB,GACA,GAAA,UAAAA,EAAA,OAAAie,EAAAgH,OAAA,UAAAhC,EAAA+E,GAEA,SAAAM,EAAAO,EAAA7oB,GACA,GAAA,UAAAA,EAAA,OAAAie,EAAAgH,OAAA,UAAAhC,EAAA8E,GAEA,SAAAZ,EAAAve,GACA,MAAA,KAAAA,EAAAqa,EAAAiD,EAAAI,GACA3J,EAAAqL,EAAA7B,EAAA,KAAAD,GAEA,SAAAyC,GAAA/f,GACA,GAAA,YAAAA,EAAA,OAAAqV,EAAAgH,OAAA,WAAAhC,IAEA,SAAAmF,GAAAxf,EAAA5I,GACA,GAAA,SAAA4I,EAEA,OADAqV,EAAAgH,OAAA,WACAhC,EAAAmF,IACA,GAAA,YAAAxf,GAAA,WAAAqV,EAAAlG,MAAA,CAEA,OADAkG,EAAAgH,OAAA,WACA,OAAAjlB,GAAA,OAAAA,EAAAijB,EAAA6F,KAEAjJ,GAAA5B,EAAAre,MAAAikB,YAAA5F,EAAAxH,OAAAuN,QAAAC,EAAAhG,EAAAxH,OAAArH,MAAA,YAAA,MACA6O,EAAAre,MAAAikB,WAAA5F,EAAAxH,OAAA2N,IAAAH,EAAA,GAAAhoB,QACAgnB,EAAA8F,KAHA,IAAA9E,MAIA,CAAA,GAAA,UAAArb,GAAA,UAAAA,EAEA,OADAqV,EAAAgH,OAAAxF,EAAA,WAAAxB,EAAAlG,MAAA,YACAkL,EAAA8F,IACA,GAAA,kBAAAngB,EACA,OAAAqa,EAAA8F,IACA,GAAAlJ,GAAA6F,EAAA1lB,GAEA,OADAie,EAAAgH,OAAA,UACAhC,EAAAmF,IACA,GAAA,KAAAxf,EACA,OAAAqa,EAAAiE,EAAA8B,GAAA7C,EAAA,KAAA4C,IACA,GAAA,UAAAngB,EACA,OAAAqa,EAAAwE,EAAAsB,IACA,GAAA,KAAA/oB,EAEA,OADAie,EAAAgH,OAAA,UACAhC,EAAAmF,IACA,GAAA,KAAAxf,EACA,OAAA+T,EAAAoM,KAGA,SAAAD,GAAAlgB,GACA,MAAA,YAAAA,EAAA+T,EAAAoM,KACA9K,EAAAgH,OAAA,WACAhC,EAAA0D,KAEA,SAAAoC,GAAAngB,GACA,MAAA,KAAAA,EAAAqa,EAAAwE,GACA,KAAA7e,EAAA+T,EAAAgK,SAAA,EAEA,SAAAkB,GAAAoB,EAAAC,EAAAC,GACA,SAAAC,EAAAxgB,EAAA5I,GACA,GAAAmpB,EAAAA,EAAAlY,QAAArI,IAAA,EAAA,KAAAA,EAAA,CACA,IAAAqd,EAAAhI,EAAAre,MAAA4jB,QAEA,MADA,QAAAyC,EAAArB,OAAAqB,EAAA7B,KAAA6B,EAAA7B,KAAA,GAAA,GACAnB,EAAA,SAAAra,EAAA5I,GACA,OAAA4I,GAAAsgB,GAAAlpB,GAAAkpB,EAAAvM,IACAA,EAAAsM,IACAG,GAEA,OAAAxgB,GAAAsgB,GAAAlpB,GAAAkpB,EAAAjG,IACAkG,GAAAA,EAAAlY,QAAA,MAAA,EAAA0L,EAAAsM,GACAhG,EAAAkD,EAAA+C,IAEA,OAAA,SAAAtgB,EAAA5I,GACA,OAAA4I,GAAAsgB,GAAAlpB,GAAAkpB,EAAAjG,IACAtG,EAAAsM,EAAAG,IAGA,SAAAjB,GAAAc,EAAAC,EAAAtE,GACA,IAAA,IAAA9f,EAAA,EAAAA,EAAA9I,UAAAC,OAAA6I,IACAmZ,EAAAiH,GAAAzjB,KAAAzF,UAAA8I,IACA,OAAAme,EAAA8C,EAAAmD,EAAAtE,GAAAiD,GAAAoB,EAAAC,GAAAhD,GAEA,SAAA/I,GAAAvU,GACA,MAAA,KAAAA,EAAAqa,IACAtG,EAAA2J,EAAAnJ,IAEA,SAAA6L,GAAApgB,EAAA5I,GACA,GAAA6f,EAAA,CACA,GAAA,KAAAjX,GAAA,MAAA5I,EAAA,OAAAijB,EAAA+D,IACA,GAAA,KAAAhnB,EAAA,OAAAijB,EAAA+F,KAGA,SAAAK,GAAAzgB,GACA,GAAAiX,GAAA,KAAAjX,EACA,OAAAqV,EAAAxH,OAAArH,MAAA,kBAAA,GAAA6T,EAAAiE,EAAAoC,GAAAtC,IACA/D,EAAA+D,IAGA,SAAAsC,GAAAT,EAAA7oB,GACA,GAAA,MAAAA,EAEA,OADAie,EAAAgH,OAAA,UACAhC,IAGA,SAAA+D,GAAApe,EAAA5I,GACA,MAAA,SAAAA,GAAA,UAAAA,GAAA,SAAAA,GACAie,EAAAgH,OAAA,UACAhC,EAAA,UAAAjjB,EAAAynB,EAAAT,KAEA,YAAApe,GAAA,QAAA5I,GACAie,EAAAgH,OAAA,OACAhC,EAAAsG,KAEA,KAAAvpB,GAAA,KAAAA,EAAAijB,EAAA+D,IACA,UAAApe,GAAA,UAAAA,GAAA,QAAAA,EAAAqa,EAAAsG,IACA,KAAA3gB,EAAAqa,EAAA8C,EAAA,KAAA8B,GAAAb,GAAA,IAAA,KAAAd,EAAAqD,IACA,KAAA3gB,EAAAqa,EAAA8C,EAAA,KAAA8B,GAAA2B,GAAA,IAAA,MAAAtD,EAAAqD,IACA,KAAA3gB,EAAAqa,EAAA4E,GAAA4B,GAAA,KAAAC,GAAAH,IACA,KAAA3gB,EAAAqa,EAAA4E,GAAAb,GAAA,KAAAA,SAAA,EAEA,SAAA0C,GAAA9gB,GACA,GAAA,MAAAA,EAAA,OAAAqa,EAAA+D,IAEA,SAAAwC,GAAA5gB,EAAA5I,GACA,MAAA,YAAA4I,GAAA,WAAAqV,EAAAlG,OACAkG,EAAAgH,OAAA,WACAhC,EAAAuG,KACA,KAAAxpB,GAAA,UAAA4I,GAAA,UAAAA,EACAqa,EAAAuG,IACA,KAAA5gB,EACAqa,EAAA+D,IACA,KAAApe,EACAqa,EAAAkD,EAAA,YAAA6C,GAAA7C,EAAA,KAAAqD,IACA,KAAA5gB,EACA+T,EAAAgN,GAAAH,SADA,EAIA,SAAAC,GAAA7gB,EAAA5I,GACA,MAAA,YAAA4I,GAAAqV,EAAAxH,OAAArH,MAAA,YAAA,IAAA,KAAApP,EAAAijB,EAAAwG,IACA,KAAA7gB,EAAAqa,EAAA+D,IACA,UAAApe,EAAAqa,EAAAwG,IACA9M,EAAAqK,IAEA,SAAAuC,GAAA3gB,EAAA5I,GACA,MAAA,KAAAA,EAAAijB,EAAA8C,EAAA,KAAA8B,GAAAb,GAAA,KAAAd,EAAAqD,IACA,KAAAvpB,GAAA,KAAA4I,GAAA,KAAA5I,EAAAijB,EAAA+D,IACA,KAAApe,EAAAqa,EAAA+D,GAAAb,EAAA,KAAAoD,IACA,WAAAvpB,GAAA,cAAAA,GAAAie,EAAAgH,OAAA,UAAAhC,EAAA+D,KACA,KAAAhnB,EAAAijB,EAAA+D,GAAAb,EAAA,KAAAa,SAAA,EAEA,SAAAuB,GAAAM,EAAA7oB,GACA,GAAA,KAAAA,EAAA,OAAAijB,EAAA8C,EAAA,KAAA8B,GAAAb,GAAA,KAAAd,EAAAqD,IAEA,SAAAK,KACA,OAAAjN,EAAAqK,GAAA6C,IAEA,SAAAA,GAAAhB,EAAA7oB,GACA,GAAA,KAAAA,EAAA,OAAAijB,EAAA+D,IAEA,SAAAT,GAAAsC,EAAA7oB,GACA,MAAA,QAAAA,GAAAie,EAAAgH,OAAA,UAAAhC,EAAA6D,KACAnK,EAAAsK,GAAA+B,GAAAc,GAAAC,IAEA,SAAA9C,GAAAre,EAAA5I,GACA,OAAA6f,GAAA6F,EAAA1lB,IAAAie,EAAAgH,OAAA,UAAAhC,EAAAgE,KACA,YAAAre,GAAAwc,EAAAplB,GAAAijB,KACA,UAAAra,EAAAqa,EAAAgE,IACA,KAAAre,EAAAuf,GAAA6B,GAAA,KACA,KAAAphB,EAAAuf,GAAA8B,GAAA,UAAA,EAEA,SAAAA,GAAArhB,EAAA5I,GACA,MAAA,YAAA4I,GAAAqV,EAAAxH,OAAArH,MAAA,SAAA,IAIA,YAAAxG,IAAAqV,EAAAgH,OAAA,YACA,UAAArc,EAAAqa,EAAAgE,IACA,KAAAre,EAAA+T,IACA,KAAA/T,EAAAqa,EAAAiE,EAAAf,EAAA,KAAAA,EAAA,KAAA8D,IACAhH,EAAAkD,EAAA,KAAAc,GAAA6C,MAPA1E,EAAAplB,GACAijB,EAAA6G,KAQA,SAAAE,KACA,OAAArN,EAAAsK,GAAA6C,IAEA,SAAAA,GAAAI,EAAAlqB,GACA,GAAA,KAAAA,EAAA,OAAAijB,EAAAwE,GAEA,SAAAsC,GAAAnhB,GACA,GAAA,KAAAA,EAAA,OAAAqa,EAAAsD,IAEA,SAAAG,GAAA9d,EAAA5I,GACA,GAAA,aAAA4I,GAAA,QAAA5I,EAAA,OAAAijB,EAAA8C,EAAA,OAAA,QAAAO,EAAAJ,GAEA,SAAAU,GAAAhe,EAAA5I,GACA,MAAA,SAAAA,EAAAijB,EAAA2D,IACA,KAAAhe,EAAAqa,EAAA8C,EAAA,KAAAoE,GAAAjE,QAAA,EAEA,SAAAiE,GAAAvhB,GACA,MAAA,OAAAA,EAAAqa,EAAAsD,GAAA6D,IACA,YAAAxhB,EAAAqa,EAAAmH,IACAzN,EAAAyN,IAEA,SAAAA,GAAAxhB,EAAA5I,GACA,MAAA,KAAA4I,EAAAqa,IACA,KAAAra,EAAAqa,EAAAmH,IACA,MAAApqB,GAAA,MAAAA,GAAAie,EAAAgH,OAAA,UAAAhC,EAAAiE,EAAAkD,KACAzN,EAAAuK,EAAAkD,IAEA,SAAAzD,GAAA/d,EAAA5I,GACA,MAAA,KAAAA,GAAAie,EAAAgH,OAAA,UAAAhC,EAAA0D,KACA,YAAA/d,GAAAwc,EAAAplB,GAAAijB,EAAA0D,KACA,KAAA/d,EAAAqa,EAAA2C,EAAAG,EAAA,KAAA8B,GAAAN,GAAA,KAAArB,EAAAmD,GAAA/C,EAAAR,GACAjG,GAAA,KAAA7f,EAAAijB,EAAA8C,EAAA,KAAA8B,GAAA+B,GAAA,KAAA1D,EAAAS,SAAA,EAEA,SAAAgD,GAAA/gB,EAAA5I,GACA,MAAA,KAAAA,GAAAie,EAAAgH,OAAA,UAAAhC,EAAA0G,KACA,YAAA/gB,GAAAwc,EAAAplB,GAAAijB,EAAA0G,KACA,KAAA/gB,EAAAqa,EAAA2C,EAAAG,EAAA,KAAA8B,GAAAN,GAAA,KAAArB,EAAAmD,GAAAvD,GACAjG,GAAA,KAAA7f,EAAAijB,EAAA8C,EAAA,KAAA8B,GAAA+B,GAAA,KAAA1D,EAAAyD,SAAA,EAEA,SAAA5C,GAAAne,EAAA5I,GACA,MAAA,WAAA4I,GAAA,YAAAA,GACAqV,EAAAgH,OAAA,OACAhC,EAAA8D,KACA,KAAA/mB,EACAijB,EAAA8C,EAAA,KAAA8B,GAAA+B,GAAA,KAAA1D,QADA,EAIA,SAAAqB,GAAA3e,EAAA5I,GAEA,MADA,KAAAA,GAAAijB,EAAAiE,EAAAK,IACA,UAAA3e,EAAAqa,EAAAsE,IACA1H,GAAA6F,EAAA1lB,IAAAie,EAAAgH,OAAA,UAAAhC,EAAAsE,KACA1H,GAAA,QAAAjX,EAAAqa,EAAA+F,GAAAc,IACAnN,EAAAsK,GAAA+B,GAAAc,IAEA,SAAA7B,GAAArf,EAAA5I,GAEA,MAAA,YAAA4I,EAAAie,GAAAje,EAAA5I,GACAqqB,GAAAzhB,EAAA5I,GAEA,SAAA6mB,GAAAje,EAAA5I,GACA,GAAA,YAAA4I,EAAA,OAAAwc,EAAAplB,GAAAijB,EAAAoH,IAEA,SAAAA,GAAAzhB,EAAA5I,GACA,MAAA,KAAAA,EAAAijB,EAAA8C,EAAA,KAAA8B,GAAA+B,GAAA,KAAA1D,EAAAmE,IACA,WAAArqB,GAAA,cAAAA,GAAA6f,GAAA,KAAAjX,GACA,cAAA5I,IAAAie,EAAAgH,OAAA,WACAhC,EAAApD,EAAAmH,GAAAE,EAAAmD,KAEA,KAAAzhB,EAAAqa,EAAA8C,EAAA,KAAAuE,GAAApE,QAAA,EAEA,SAAAoE,GAAA1hB,EAAA5I,GACA,MAAA,SAAA4I,GACA,YAAAA,IACA,UAAA5I,GAAA,OAAAA,GAAA,OAAAA,GAAA6f,GAAA6F,EAAA1lB,KACAie,EAAAxH,OAAArH,MAAA,wBAAA,IACA6O,EAAAgH,OAAA,UACAhC,EAAAqH,KAEA,YAAA1hB,GAAA,WAAAqV,EAAAlG,OACAkG,EAAAgH,OAAA,WACAhC,EAAApD,EAAA0K,GAAA5D,GAAA2D,KAEA,UAAA1hB,GAAA,UAAAA,EAAAqa,EAAApD,EAAA0K,GAAA5D,GAAA2D,IACA,KAAA1hB,EACAqa,EAAAiE,EAAA8B,GAAA7C,EAAA,KAAAtG,EAAA0K,GAAA5D,GAAA2D,IACA,KAAAtqB,GACAie,EAAAgH,OAAA,UACAhC,EAAAqH,KAEAzK,GAAA,KAAAjX,EAAA+T,EAAAgN,GAAAW,IACA,KAAA1hB,GAAA,KAAAA,EAAAqa,EAAAqH,IACA,KAAA1hB,EAAAqa,IACA,KAAAjjB,EAAAijB,EAAAiE,EAAAoD,SAAA,EAEA,SAAAC,GAAA3hB,EAAA5I,GACA,GAAA,KAAAA,EAAA,OAAAijB,EAAAsH,IACA,GAAA,KAAA3hB,EAAA,OAAAqa,EAAA+D,GAAA8C,IACA,GAAA,KAAA9pB,EAAA,OAAAijB,EAAAwE,GACA,IAAAvP,EAAA+F,EAAAre,MAAA4jB,QAAArL,KAAAqS,EAAAtS,GAAA,aAAAA,EAAA0M,KACA,OAAAjI,EAAA6N,EAAAb,GAAAhD,IAEA,SAAAU,GAAAze,EAAA5I,GACA,MAAA,KAAAA,GAAAie,EAAAgH,OAAA,UAAAhC,EAAAwH,GAAAtE,EAAA,OACA,WAAAnmB,GAAAie,EAAAgH,OAAA,UAAAhC,EAAAiE,EAAAf,EAAA,OACA,KAAAvd,EAAAqa,EAAA4E,GAAA6C,GAAA,KAAAD,GAAAtE,EAAA,MACAxJ,EAAA2J,GAEA,SAAAoE,GAAA9hB,EAAA5I,GACA,MAAA,MAAAA,GAAAie,EAAAgH,OAAA,UAAAhC,EAAAkD,EAAA,cACA,YAAAvd,EAAA+T,EAAA8K,EAAAiD,SAAA,EAEA,SAAApD,GAAA1e,GACA,MAAA,UAAAA,EAAAqa,IACA,KAAAra,EAAA+T,EAAAuK,GACAvK,EAAAgO,GAAAC,GAAAH,IAEA,SAAAE,GAAA/hB,EAAA5I,GACA,MAAA,KAAA4I,EAAAuf,GAAAwC,GAAA,MACA,YAAA/hB,GAAAwc,EAAAplB,GACA,KAAAA,IAAAie,EAAAgH,OAAA,WACAhC,EAAA4H,KAEA,SAAAD,GAAAhiB,GACA,GAAA,KAAAA,EAAA,OAAAqa,EAAA0H,GAAAC,IAEA,SAAAC,GAAAX,EAAAlqB,GACA,GAAA,MAAAA,EAAA,OAAAie,EAAAgH,OAAA,UAAAhC,EAAA0H,IAEA,SAAAF,GAAAP,EAAAlqB,GACA,GAAA,QAAAA,EAAA,OAAAie,EAAAgH,OAAA,UAAAhC,EAAAiE,GAEA,SAAAgB,GAAAtf,GACA,MAAA,KAAAA,EAAAqa,IACAtG,EAAAkL,GAAAJ,EAAA,MAEA,SAAAX,KACA,OAAAnK,EAAAoJ,EAAA,QAAAkB,GAAAd,EAAA,KAAAJ,EAAA,KAAA8B,GAAAiD,GAAA,KAAA5E,EAAAA,GAEA,SAAA4E,KACA,OAAAnO,EAAAsK,GAAA6C,IASA,SAAA1G,GAAA3M,EAAA7W,EAAA2c,GACA,OAAA3c,EAAAgX,UAAAsM,GACA,iFAAAxL,KAAA9X,EAAA6jB,WACA,SAAA7jB,EAAA6jB,UAAA,SAAA/L,KAAAjB,EAAAsN,OAAA3nB,MAAA,EAAAqa,EAAA2N,KAAA7H,GAAA,KAKA,OAxfAuJ,EAAAG,KAAA,EAoBAC,EAAAD,KAAA,GAqeA1M,WAAA,SAAAwR,GACA,IAAAnrB,GACAgX,SAAAsM,EACAO,SAAA,MACAyB,MACA1B,QAAA,IAAAmB,GAAAoG,GAAA,GAAA3Y,EAAA,EAAA,SAAA,GACA2S,UAAA9J,EAAA8J,UACA7M,QAAA+C,EAAA8J,WAAA,IAAAtI,EAAA,KAAA,MAAA,GACAvD,SAAA6R,GAAA,GAIA,OAFA9P,EAAAwK,YAAA,iBAAAxK,EAAAwK,aACA7lB,EAAA6lB,WAAAxK,EAAAwK,YACA7lB,GAGA6Z,MAAA,SAAAhD,EAAA7W,GAOA,GANA6W,EAAAiD,QACA9Z,EAAA4jB,QAAAjL,eAAA,WACA3Y,EAAA4jB,QAAAhW,OAAA,GACA5N,EAAAsZ,SAAAzC,EAAAkD,cACAiK,EAAAnN,EAAA7W,IAEAA,EAAAgX,UAAAuM,GAAA1M,EAAAmD,WAAA,OAAA,KACA,IAAA7B,EAAAnY,EAAAgX,SAAAH,EAAA7W,GACA,MAAA,WAAAgJ,EAAAmP,GACAnY,EAAA6jB,SAAA,YAAA7a,GAAA,MAAA2W,GAAA,MAAAA,EAAA3W,EAAA,SA9mBA,SAAAhJ,EAAAmY,EAAAnP,EAAA2W,EAAA9I,GACA,IAAAyO,EAAAtlB,EAAAslB,GAGAjH,EAAAre,MAAAA,EAAAqe,EAAAxH,OAAAA,EAAAwH,EAAAgH,OAAA,KAAAhH,EAAAiH,GAAAA,EAAAjH,EAAAlG,MAAAA,EAEAnY,EAAA4jB,QAAAjL,eAAA,WACA3Y,EAAA4jB,QAAAhW,OAAA,GAEA,OAAA,CACA,IAAAwd,EAAA9F,EAAAjpB,OAAAipB,EAAArf,MAAA8Z,EAAAuH,EAAAZ,EACA,GAAA0E,EAAApiB,EAAA2W,GAAA,CACA,KAAA2F,EAAAjpB,QAAAipB,EAAAA,EAAAjpB,OAAA,GAAAgqB,KACAf,EAAArf,KAAAqf,GACA,OAAAjH,EAAAgH,OAAAhH,EAAAgH,OACA,YAAArc,GAAAic,EAAAjlB,EAAA2f,GAAA,aACAxH,IA+lBAkT,CAAArrB,EAAAmY,EAAAnP,EAAA2W,EAAA9I,KAGAvd,OAAA,SAAA0G,EAAAia,GACA,GAAAja,EAAAgX,UAAAuM,EAAA,OAAA5S,EAAAwJ,KACA,GAAAna,EAAAgX,UAAAsM,EAAA,OAAA,EACA,IAAAjX,EAAAif,EAAArR,GAAAA,EAAAqD,OAAA,GAAAsG,EAAA5jB,EAAA4jB,QAEA,IAAA,aAAA9L,KAAAmC,GAAA,IAAA,IAAA/U,EAAAlF,EAAAslB,GAAAjpB,OAAA,EAAA6I,GAAA,IAAAA,EAAA,CACA,IAAAqmB,EAAAvrB,EAAAslB,GAAApgB,GACA,GAAAqmB,GAAAjF,EAAA1C,EAAAA,EAAArL,UACA,GAAAgT,GAAAzE,GAAA,MAEA,MAAA,QAAAlD,EAAA5a,MAAA,QAAA4a,EAAA5a,QACA,KAAAsiB,IAAAjf,EAAArM,EAAAslB,GAAAtlB,EAAAslB,GAAAjpB,OAAA,MACAgQ,GAAA+b,GAAA/b,GAAA8b,KACA,mBAAArQ,KAAAmC,KACA2J,EAAAA,EAAArL,KACAqH,GAAA,KAAAgE,EAAA5a,MAAA,QAAA4a,EAAArL,KAAAvP,OACA4a,EAAAA,EAAArL,MACA,IAAAvP,EAAA4a,EAAA5a,KAAAwiB,EAAAF,GAAAtiB,EAEA,MAAA,UAAAA,EAAA4a,EAAAtK,UAAA,YAAAtZ,EAAA6jB,UAAA,KAAA7jB,EAAA6jB,SAAAD,EAAAoB,KAAA3oB,OAAA,EAAA,GACA,QAAA2M,GAAA,KAAAsiB,EAAA1H,EAAAtK,SACA,QAAAtQ,EAAA4a,EAAAtK,SAAA9G,EACA,QAAAxJ,EACA4a,EAAAtK,UAnEA,SAAAtZ,EAAAia,GACA,MAAA,YAAAja,EAAA6jB,UAAA,KAAA7jB,EAAA6jB,UACAV,EAAArL,KAAAmC,EAAAqD,OAAA,KACA,OAAAxF,KAAAmC,EAAAqD,OAAA,IAgEAmO,CAAAzrB,EAAAia,GAAA2F,GAAApN,EAAA,GACA,UAAAoR,EAAAoB,MAAAwG,GAAA,GAAAnQ,EAAAqQ,mBAEA9H,EAAAhW,MAAAgW,EAAA1L,QAAAsT,EAAA,EAAA,GACA5H,EAAAtK,UAAAkS,EAAA,EAAAhZ,GAFAoR,EAAAtK,UAAA,sBAAAxB,KAAAmC,GAAAzH,EAAA,EAAAA,IAKAkI,cAAA,oCACAC,kBAAAoF,EAAA,KAAA,KACAnF,gBAAAmF,EAAA,KAAA,KACAxB,qBAAAwB,EAAA,KAAA,MACA1D,YAAA0D,EAAA,KAAA,KACAvB,KAAA,QACAmN,cAAA,iBAEA7Q,WAAAiF,EAAA,OAAA,aACAF,WAAAA,EACAE,SAAAA,EAEAyD,kBAAAA,GAEAoI,eAAA,SAAA5rB,GACA,IAAAqM,EAAArM,EAAAslB,GAAAtlB,EAAAslB,GAAAjpB,OAAA,GACAgQ,GAAAib,GAAAjb,GAAAwb,GAAA7nB,EAAAslB,GAAArf,UAKA0K,EAAAyO,eAAA,YAAA,aAAA,SAEAzO,EAAAqK,WAAA,kBAAA,cACArK,EAAAqK,WAAA,kBAAA,cACArK,EAAAqK,WAAA,yBAAA,cACArK,EAAAqK,WAAA,2BAAA,cACArK,EAAAqK,WAAA,yBAAA,cACArK,EAAAqK,WAAA,oBAAA/Z,KAAA,aAAA+e,MAAA,IACArP,EAAAqK,WAAA,sBAAA/Z,KAAA,aAAA+e,MAAA,IACArP,EAAAqK,WAAA,uBAAA/Z,KAAA,aAAA6e,QAAA,IACAnP,EAAAqK,WAAA,mBAAA/Z,KAAA,aAAAif,YAAA,IACAvP,EAAAqK,WAAA,0BAAA/Z,KAAA,aAAAif,YAAA,MAQAloB,EAAA,+CACA,mBACA,aACA,2BACA,cACA,SAAA2Y,GAEA,aAEA,IAAAkb,GACAC,SACA,OAAA,sBAAA,eACA,OAAA,kEAAA,eACA,OAAA,IAAA,eACA,KAAA,KAAA,eAEA3T,QACA,OAAA,SAAA,QACA,OAAA,oCAAA,QACA,OAAA,IAAA,eACA,KAAA,KAAA,SAeA,IAAA4T,KAOA,SAAAC,EAAAnrB,EAAAG,GACA,IAAAwO,EAAA3O,EAAA2O,MAPA,SAAAxO,GACA,IAAA6jB,EAAAkH,EAAA/qB,GACA,OAAA6jB,IACAkH,EAAA/qB,GAAA,IAAAirB,OAAA,OAAAjrB,EAAA,yCAIAkrB,CAAAlrB,IACA,OAAAwO,EAAA,gBAAAgL,KAAAhL,EAAA,IAAA,GAAA,GAGA,SAAA2c,EAAAvU,EAAAwU,GACA,OAAA,IAAAH,QAAAG,EAAA,IAAA,IAAA,OAAAxU,EAAA,MAAA,KAGA,SAAAyU,EAAAC,EAAAva,GACA,IAAA,IAAAvG,KAAA8gB,EAGA,IAFA,IAAAC,EAAAxa,EAAAvG,KAAAuG,EAAAvG,OACAiI,EAAA6Y,EAAA9gB,GACAtG,EAAAuO,EAAApX,OAAA,EAAA6I,GAAA,EAAAA,IACAqnB,EAAAC,QAAA/Y,EAAAvO,IAWAyL,EAAAyF,WAAA,YAAA,SAAAI,EAAA6E,GACA,IAAA3E,EAAA/F,EAAA8b,QAAAjW,GACAvV,KAAA,MACAyV,UAAA,EACA2D,yBAAAgB,EAAAhB,yBACAD,0BAAAiB,EAAAjB,4BAGAsS,KACAC,EAAAtR,GAAAA,EAAAqR,KAAAE,EAAAvR,GAAAA,EAAAwR,YAGA,GAFAR,EAAAR,EAAAa,GACAC,GAAAN,EAAAM,EAAAD,GACAE,EAAA,IAAA,IAAA1nB,EAAA0nB,EAAAvwB,OAAA,EAAA6I,GAAA,EAAAA,IACAwnB,EAAAZ,OAAAU,SAAA,OAAAI,EAAA1nB,GAAA4nB,QAAAF,EAAA1nB,GAAAsM,OAEA,SAAArZ,EAAA0e,EAAA7W,GACA,IAAA4X,EAAAO,EAAAzB,EAAAmD,MAAAhD,EAAA7W,EAAA+sB,WAAAvhB,EAAA,UAAAsM,KAAAK,GACA,GAAA3M,IAAA,WAAAsM,KAAAjB,EAAAiC,aACAlB,EAAA5X,EAAA+sB,UAAAnV,SAAA5X,EAAA+sB,UAAAnV,QAAA1R,gBACAwmB,EAAA/T,eAAAf,GACA5X,EAAAwX,MAAAI,EAAA,SACA,GAAA5X,EAAAwX,OAAAhM,GAAA,KAAAsM,KAAAjB,EAAAiC,WAAA,CACA,IAAAtB,EAAA,gBAAAgD,KAAAxa,EAAAwX,OACAxX,EAAAwX,MAAA,KACA,IAAAwV,EAAA,KAAAnW,EAAAiC,WA/BA,SAAAmU,EAAAC,GACA,IAAA,IAAAhoB,EAAA,EAAAA,EAAA+nB,EAAA5wB,OAAA6I,IAAA,CACA,IAAAioB,EAAAF,EAAA/nB,GACA,IAAAioB,EAAA,IAAAA,EAAA,GAAArV,KAAAkU,EAAAkB,EAAAC,EAAA,KAAA,OAAAA,EAAA,IA4BAC,CAAAV,EAAAlV,EAAA,IAAAA,EAAA,IACAhG,EAAAb,EAAA8b,QAAAjW,EAAAwW,GACAK,EAAAlB,EAAA3U,EAAA,IAAA,GAAA8V,EAAAnB,EAAA3U,EAAA,IAAA,GACAxX,EAAA6Z,MAAA,SAAAhD,EAAA7W,GACA,OAAA6W,EAAArH,MAAA6d,GAAA,IACArtB,EAAA6Z,MAAA1hB,EACA6H,EAAAutB,WAAAvtB,EAAAwtB,UAAA,KACA,MA1EA,SAAA3W,EAAA4W,EAAAtV,GACA,IAAAuV,EAAA7W,EAAAiC,UAAA6U,EAAAD,EAAAE,OAAAH,GACAE,GAAA,EACA9W,EAAA8F,OAAA+Q,EAAArxB,OAAAsxB,GACAD,EAAAle,MAAA,WACAqH,EAAA8F,OAAA+Q,EAAArxB,QACAwa,EAAArH,MAAAie,GAAA,IAAA5W,EAAArH,MAAAke,IAEA,OAAAvV,EAoEA0V,CAAAhX,EAAAyW,EAAAttB,EAAAwtB,UAAA3T,MAAAhD,EAAA7W,EAAAutB,cAEAvtB,EAAAwtB,UAAAhc,EACAxR,EAAAutB,WAAA5c,EAAAgJ,WAAAnI,EAAAkF,EAAApd,OAAA0G,EAAA+sB,UAAA,GAAA,UACA/sB,EAAAwX,QACAxX,EAAAwX,OAAAX,EAAAiC,UACAjC,EAAAkB,QAAA/X,EAAAwX,OAAA,MAEA,OAAAW,EAGA,OACAwB,WAAA,WACA,IAAA3Z,EAAA2Q,EAAAgJ,WAAAjD,GACA,OAAAmD,MAAA1hB,EAAAqf,MAAA,KAAAgW,UAAA,KAAAD,WAAA,KAAAR,UAAA/sB,IAGA8tB,UAAA,SAAA9tB,GACA,IAAA+tB,EAIA,OAHA/tB,EAAAutB,aACAQ,EAAApd,EAAAmd,UAAA9tB,EAAAwtB,UAAAxtB,EAAAutB,cAEA1T,MAAA7Z,EAAA6Z,MAAArC,MAAAxX,EAAAwX,MACAgW,UAAAxtB,EAAAwtB,UAAAD,WAAAQ,EACAhB,UAAApc,EAAAmd,UAAApX,EAAA1W,EAAA+sB,aAGAlT,MAAA,SAAAhD,EAAA7W,GACA,OAAAA,EAAA6Z,MAAAhD,EAAA7W,IAGA1G,OAAA,SAAA0G,EAAAia,EAAA+T,GACA,OAAAhuB,EAAAwtB,WAAA,UAAA1V,KAAAmC,GACAvD,EAAApd,OAAA0G,EAAA+sB,UAAA9S,EAAA+T,GACAhuB,EAAAwtB,UAAAl0B,OACA0G,EAAAwtB,UAAAl0B,OAAA0G,EAAAutB,WAAAtT,EAAA+T,GAEArd,EAAAwJ,MAGA8T,UAAA,SAAAjuB,GACA,OAAAA,MAAAA,EAAAutB,YAAAvtB,EAAA+sB,UAAAvb,KAAAxR,EAAAwtB,WAAA9W,MAGA,MAAA,aAAA,OAEA/F,EAAAqK,WAAA,YAAA,eAGAhjB,EAAA,qDACA,qBACA,gCACA,eACA,eAQA,uBACA,6CACA,kCACA,kCACA,gDACA,+CACA,SAAAmF,EAAAwT,EAAA/N,EAAAoI,EAAA7S,GACA,IAIA+1B,EAAAljB,EAAA1N,SACA2D,KAAA,OAEAV,KAAA,OAEA5B,WAAA,EAEAT,MAAA,WAEA,IAAAE,EAWA,OAZA4M,EAAAzO,UAAA2B,MAAAzB,KAAAC,MACAA,KAAAuB,OAAA0K,SAAArK,GAAA,SAAAF,EAIA1B,KAHA,SAAA6B,GACA,OAAAH,EAAAH,OAAAI,GAAAuC,SAAA,SAAAxB,YAAA,YAGA1C,KAAAuB,OAAA0K,SAAArK,GAAA,OAAA,SAAAF,GACA,OAAA,SAAAG,GAEA,OADAH,EAAAH,OAAAI,GAAAe,YAAA,SACAhB,EAAAH,OAAAmL,SAAAhL,EAAAH,OAAA0K,SAAAU,QAHA,CAKA3M,OACAA,KAAAuB,OAAA0K,SAAArK,GAAA,QAAA,SAAAF,GACA,OAAA,SAAAG,GACA,OAAAH,EAAA+vB,mBAFA,CAIAzxB,QAGAyK,OAAA,aAEAwG,SAAA,WACA,IAAA5P,EAAAmH,EAAA3D,EAAArF,EACA2M,EAAAnM,KAIA,GAHAA,KAAAuB,OAAA2L,OACAlN,KAAAuB,OAAAI,GAAAa,YAAA,gBACAxC,KAAAuB,OAAAyY,SAAAha,KAAAuB,OAAAI,GAAAU,SAAA,gBACArC,KAAAuB,OAAAyY,SAAA,CACAha,KAAAuB,OAAAkM,cAEA,IAAAikB,GACA5c,KAAA,YACA6c,cAAA,EACAC,UAAA,EACAC,eAAA,EACAC,WAAA,EACAC,mBAAA,EACAC,eAAA,EACAlc,WAAA,EACAmc,gBAAA,EACAC,QAAA,EACAC,aACAC,kBACA,GAEArd,UACAtZ,MACA8Y,aAAA9Y,EAAAsZ,WAOAsd,aAAA,GAGAryB,KAAAuB,OAAAoM,OACA3N,KAAAsyB,kBAMAtyB,KAAAsyB,iBAAA5lB,SAAA1M,KAAAuB,OAAA0K,SAAAU,OACA3M,KAAAsyB,iBAAAvd,aANA/U,KAAAsyB,iBAAAre,EAAAse,aAAAvyB,KAAAuB,OAAA0K,SAAA,GAAAylB,GACA1xB,KAAAsyB,iBAAA1wB,GAAA,OAAA,WACAuK,EAAA5K,OAAAmL,SAAAP,EAAAmmB,iBAAA5kB,oBASA1N,KAAAuB,OAAAmL,SAAA1M,KAAAsyB,iBAAA5kB,YAIA,IADAlO,EAAAQ,KAAAuB,OAAAyK,SACAxD,EAAA,EAAA3D,EAAArF,EAAAG,OAAA6I,EAAA3D,EAAA2D,IAEA,UADAnH,EAAA7B,EAAAgJ,IACAjE,KACAlD,EAAAqN,UAAA1O,KAAAuB,OAAAyY,UAEA3Y,EAAAsN,YAAA3O,KAAAuB,OAAAyY,UAGA,OAAA,MAGAwY,aAAA,WACA,OAAA9yB,UAAA,IAUA+xB,gBAAA,WAEA,OADAzxB,KAAAyyB,mBAAAzyB,KAAAyyB,iBAAAzyB,KAAAuB,OAAA0K,SAAAymB,cAAA1yB,KAAAuB,OAAA0K,SAAA6E,UACA9Q,KAAAuB,OAAA0K,SAAA6E,OAAA9Q,KAAAuB,OAAA0K,SAAA,GAAA0mB,aAAA3yB,KAAAyyB,qBAQA,OAFAvsB,EAAAH,QAAAtK,KAAA+1B,EAEAA,IAEAl2B,EAAA,uDACA,sBACA,qBACA,eACA,iBACA,SAAAkF,EAAAC,EAAAyF,EAAAwJ,GACA,IAAAkjB,EAAAljB,EAAA9O,YAgOA,OA5NAgyB,EAAA/yB,UAAA+C,QACA+M,IAAA,EACA9M,MAAA,GAGA+vB,EAAA/yB,UAAA4B,OAAA,WACA,IAAAoxB,EAOAnxB,EAqFA,OA3FAmxB,EAAA,2EAAA7yB,KAAAkI,GAAA,YAAA,mIAAAlI,KAAAkI,GAAA,eAAA,gIAAAlI,KAAAkI,GAAA,YAAA,2IAAAlI,KAAAkI,GAAA,aAAA,qQAAAlI,KAAAkI,GAAA,oBAAA,uFACAlI,KAAA2B,GAAAuC,SAAA,iBAAA0F,OAAAipB,GACA7yB,KAAA8yB,MAAA9yB,KAAA2B,GAAAsC,KAAA,cACAjE,KAAA+yB,QAAA/yB,KAAA2B,GAAAsC,KAAA,gBACAjE,KAAAgzB,SAAAhzB,KAAA2B,GAAAsC,KAAA,iBACAjE,KAAAizB,MAAAjzB,KAAA2B,GAAAsC,KAAA,cACAjE,KAAA8yB,MAAAlxB,GAAA,WAAAF,EAWA1B,KAVA,SAAA6B,GACA,IAAAyQ,EACA,GAAA,KAAAzQ,EAAAqxB,QAAAxxB,EAAAkO,OAAAvN,SAAA,aAMA,OAHAR,EAAAG,iBACAsQ,EAAAxH,SAAAqoB,cACAzxB,EAAAL,OAAAE,OAAAW,SAAA8L,UAAAolB,cAAA1xB,EAAAkO,OAAA0C,GACA5Q,EAAAkF,UAGA5G,KAAA8yB,MAAAlxB,GAAA,OAAA,SAAAF,GACA,OAAA,SAAAG,GACA,OAAAH,EAAA2xB,WAAA3xB,EAAAoxB,MAAAnmB,QAFA,CAIA3M,OACAA,KAAA2B,GAAAsC,KAAA,eAAArC,GAAA,OAAA,SAAAF,GACA,OAAA,SAAAG,GAEA,OADAH,EAAA4xB,WAAA7yB,EAAAoB,EAAAwB,gBACA3B,EAAAC,GAAAuB,KAAA,WAAAqN,WAHA,CAKAvQ,OACAA,KAAA2B,GAAAsC,KAAA,eAAArC,GAAA,QAAA,SAAAF,GACA,OAAA,SAAAG,GACA,IAAA0xB,EAEA,GADAA,EAAA9yB,EAAAoB,EAAAwB,eACA,KAAAxB,EAAAqxB,OAAA,KAAArxB,EAAAqxB,OAAA,IAAArxB,EAAAqxB,MACA,OAAAxxB,EAAA4xB,WAAAC,GAAA,IALA,CAQAvzB,OACAA,KAAA2B,GAAAsC,KAAA,eAAArC,GAAA,UAAA,SAAAF,GACA,OAAA,SAAAG,GACA,IAAA2xB,EAAAD,EAAAjhB,EAEA,OADAihB,EAAA9yB,EAAAoB,EAAAwB,eACA,KAAAxB,EAAAqxB,OAAA,KAAArxB,EAAAqxB,OACArxB,EAAAG,iBACA,KAAAH,EAAAqxB,MACAxxB,EAAA4xB,WAAAC,GAEA7xB,EAAA+xB,cAEAD,EAAA9xB,EAAAkO,OACAlO,EAAAkF,OACA0L,EAAAxH,SAAAqoB,cACAzxB,EAAAL,OAAAE,OAAAW,SAAA8L,UAAAolB,cAAAI,EAAAlhB,IACA,IAAAzQ,EAAAqxB,MACAxxB,EAAAC,GAAAuB,KAAA,WAAAqN,eADA,GAfA,CAmBAvQ,OACAA,KAAAizB,MAAArxB,GAAA,UAAA,SAAAF,GACA,OAAA,SAAAG,GACA,IAAAyQ,EACA,GAAA,KAAAzQ,EAAAqxB,MAIA,OAHArxB,EAAAG,iBACAsQ,EAAAxH,SAAAqoB,cACAzxB,EAAAL,OAAAE,OAAAW,SAAA8L,UAAAolB,cAAA1xB,EAAAkO,OAAA0C,GACA5Q,EAAAkF,QAPA,CAUA5G,OACAA,KAAAizB,MAAArxB,GAAA,QAAA,SAAAF,GACA,OAAA,SAAAG,GACA,GAAA,KAAAA,EAAAqxB,OAAA,KAAArxB,EAAAqxB,OAAA,IAAArxB,EAAAqxB,MAIA,OADAxxB,EAAAgyB,IAAAhyB,EAAAuxB,MAAAtmB,MACAjL,EAAAkO,OAAAtL,KAAA,MAAA5C,EAAAgyB,MANA,CAQA1zB,OACAA,KAAA2B,GAAAsC,KAAA,gBAAArC,GAAA,QAAA,SAAAF,GACA,OAAA,SAAAG,GAEA,OADAH,EAAA+xB,cACA/xB,EAAAC,GAAAuB,KAAA,WAAAqN,WAHA,CAKAvQ,OACAA,KAAAuB,OAAAK,GAAA,eAAA,SAAAF,GACA,OAAA,SAAAG,GACA,GAAAH,EAAAiE,OACA,OAAAjE,EAAA6O,WAHA,CAMAvQ,OACAA,KAAA2zB,iBAGAf,EAAA/yB,UAAA8zB,cAAA,WACA,IAAAC,EAEA,GADAA,EAAA5zB,KAAA2B,GAAAsC,KAAA,eACA,MAAAjE,KAAAuB,OAAA2J,SAAA,CAKA,IAAAxJ,EAAA1B,KACA4zB,EAAAC,QACA51B,MAAAyD,EAAAwG,GAAA,eACA4rB,UAAA,EACAC,OAAA,qDACAC,OAAA,SAAAzsB,GACA7F,EAAAH,OAAA2J,SAAApD,OAAAP,GACAqX,QAAA,EACAjI,IAAAjV,EAAAkO,iBAZAgkB,EAAAzlB,UAmBAykB,EAAA/yB,UAAAyzB,WAAA,SAAAC,EAAAU,GACA,IAAAnjB,EAAApN,EAAA2M,EAKA,GAJA,MAAA4jB,IACAA,GAAA,GAEAvwB,EAAA,EAAA6vB,EAAA5mB,MACA3M,KAAA4P,SAAApP,EAAA0zB,SAAAxwB,IAAAA,EAAA,GAYA,OATA6vB,EAAA5wB,GAAA3C,KAAA+yB,UACA1iB,EAAA3M,EACAoN,EAAA9Q,KAAA8Q,OAAApN,EAAA1D,KAAAqQ,MACArQ,KAAAgzB,SAAArmB,IAAAmE,KAEAA,EAAApN,EACA2M,EAAArQ,KAAAqQ,MAAA3M,EAAA1D,KAAA8Q,OACA9Q,KAAA+yB,QAAApmB,IAAA0D,IAEA4jB,OAAA,GACAj0B,KAAA4P,OAAAtL,MACA+L,MAAAA,EACAS,OAAAA,IAEA9Q,KAAAuB,OAAA0B,QAAA,kBAIA2vB,EAAA/yB,UAAA4zB,YAAA,WACA,IAAAj0B,EAAA2J,EAQA,OAPAA,GAAA,OAAA3J,EAAAQ,KAAA4P,OAAA1M,KAAA,eAAA1D,EAAA8J,MAAA,UAAA,KAAAtJ,KAAAqQ,MAAArQ,KAAA8Q,QACA9Q,KAAA4P,OAAAtL,MACA+L,MAAA,EAAAlH,EAAA,GACA2H,OAAA,EAAA3H,EAAA,KAEAnJ,KAAA+yB,QAAApmB,IAAAxD,EAAA,IACAnJ,KAAAgzB,SAAArmB,IAAAxD,EAAA,IACAnJ,KAAAuB,OAAA0B,QAAA,iBAGA2vB,EAAA/yB,UAAAwzB,WAAA,SAAAc,EAAAC,GAUA,IAAA1yB,EATA,IAAA,cAAA0Z,KAAA+Y,IAAAn0B,KAAAuB,OAAA2J,UAMA,GAAAlL,KAAA4P,OAAAtL,KAAA,SAAA6vB,EAGA,OAAAn0B,KAAAqB,OAAAgzB,UAAAr0B,KAAA4P,OAAAukB,GAAAzyB,EA0BA1B,KAzBA,SAAA2W,GACA,IAAA2d,EACA,GAAA3d,EAmBA,OAhBAjV,EAAAiE,SACAjE,EAAA2O,MAAAsG,EAAAtG,MACA3O,EAAAoP,OAAA6F,EAAA7F,OACApP,EAAAqxB,QAAApmB,IAAAjL,EAAA2O,OACA3O,EAAAsxB,SAAArmB,IAAAjL,EAAAoP,SAEA,cAAAsK,KAAA+Y,KACAG,EAAA5yB,EAAAH,OAAAW,SAAAmL,KAAAknB,cAAAJ,IACA5vB,KAAA,mBACA7C,EAAAH,OAAA2J,SAAApD,OAAAwsB,GACA1V,QAAA,EACAjI,IAAAjV,EAAAkO,UAGAlO,EAAAH,OAAA0B,QAAA,gBAEAmxB,EACAA,EAAAzd,QADA,UA9BAyd,GACAA,GAAA,IAoCAxB,EAAA/yB,UAAA2N,KAAA,WACA,IAAAgmB,EAAAl0B,EAOA,OANAA,EAAA,GAAAI,UAAAC,OAAAC,MAAAC,UAAAC,MAAAC,KAAAL,UAAA,MACAgQ,EAAA7P,UAAA2N,KAAAT,MAAA/M,KAAAV,GACAk0B,EAAAxzB,KAAA4P,OACA5P,KAAAqQ,MAAAmjB,EAAAnjB,QACArQ,KAAA8Q,OAAA0iB,EAAA1iB,SACA9Q,KAAA0zB,IAAAF,EAAAlvB,KAAA,OACAkvB,EAAAnxB,SAAA,aACArC,KAAA8yB,MAAAnmB,IAAA3M,KAAAkI,GAAA,cAAA+R,KAAA,YAAA,IAEAja,KAAA8yB,MAAAnmB,IAAA6mB,EAAAlvB,KAAA,QAAA2V,KAAA,YAAA,GACAja,KAAA+yB,QAAApmB,IAAA3M,KAAAqQ,OACArQ,KAAAgzB,SAAArmB,IAAA3M,KAAA8Q,QACA9Q,KAAAizB,MAAAtmB,IAAA3M,KAAA0zB,OAIAd,IAGAt3B,EAAA,sDACA,sBACA,qBACA,2BACA,8BACA,eACA,eACA,iBACA,cACA,SAAAkF,EAAAC,EAAA+zB,EAAAC,EAAAvuB,EAAAoI,EAAAskB,EAAAr3B,GACA,IAAAm5B,EAAApmB,EAAA1N,SACA2D,KAAA,QAEAV,KAAA,QAEA2B,QAAA,MAEAC,WAAA,aAEAoG,iBAAA,GAEA5J,WAAA,EAEAT,MAAA,WAGA,IAAAmzB,EAAA/vB,EAAAC,EAAArF,EAiCAkC,EAhCA,GAHA4M,EAAAzO,UAAA2B,MAAAzB,KAAAC,MAGAA,KAAAuB,OAAAV,QAAA+zB,YACA,GAAAh1B,MAAAoF,QAAAhF,KAAAuB,OAAAV,QAAA+zB,aAGA,IAFA50B,KAAAe,QACAvB,EAAAQ,KAAAuB,OAAAV,QAAA+zB,YACAhwB,EAAA,EAAAC,EAAArF,EAAAG,OAAAiF,EAAAC,EAAAD,IACA+vB,EAAAn1B,EAAAoF,GACA5E,KAAAe,KAAAoE,MACAZ,KAAAowB,EAAA,SACAxwB,KAAAnE,KAAAkI,GAAAysB,EAAA,gBAIA30B,KAAAe,MAAA,OAGA,MAAAf,KAAAuB,OAAA2J,SACAlL,KAAAe,OAEAwD,KAAA,eACAJ,KAAA5I,EAAA8D,UAAA,eACA0C,MAAA,gBAEAwC,KAAA,iBACAJ,KAAA5I,EAAA8D,UAAA,iBACA0C,MAAA,kBAIA/B,KAAAe,MAAA,EA2EA,GAxEAf,KAAA6L,iBAAA7L,KAAAuB,OAAAV,QAAAqF,OAAAH,QAAA7J,MAAA2P,iBACA7L,KAAAuB,OAAA8K,KAAAzK,GAAA,QAAA,6BAAAF,EAYA1B,KAXA,SAAA6B,GACA,IAAA2xB,EAAAlhB,EAQA,OAPAkhB,EAAA/yB,EAAAoB,EAAAwB,gBACAiP,EAAAxH,SAAAqoB,eACA0B,WAAArB,EAAA,IACA9xB,EAAAH,OAAAW,SAAA8L,UAAAsE,MAAAA,GACA5Q,EAAAH,OAAAW,SAAAmL,KAAAynB,QAAAC,mBACArzB,EAAAH,OAAA0B,QAAA,qBAEA,KAGAjD,KAAAuB,OAAA8K,KAAAzK,GAAA,UAAA,4BAAA,SAAAC,GACA,OAAA,IAEA7B,KAAAuB,OAAAK,GAAA,yBAAA,SAAAF,GACA,OAAA,WACA,IAAAszB,EAAAxB,EAAAlhB,EAEA,GAAA,OADAA,EAAA5Q,EAAAH,OAAAW,SAAA8L,UAAAsE,SAKA,OAAA,KADA0iB,EAAAv0B,EAAA6R,EAAAC,iBAAAQ,YACApT,QAAAq1B,EAAAryB,GAAA,8BACA6wB,EAAA/yB,EAAA6R,EAAA2iB,gBAAAliB,WAAAmiB,GAAA5iB,EAAA6iB,aACAzzB,EAAAoM,UACApM,EAAAoM,QAAA,IAAA8kB,GACAvxB,OAAAK,KAIAA,EAAAoM,QAAAN,KAAAgmB,IAEA9xB,EAAAoM,QACApM,EAAAoM,QAAAlH,YADA,GAlBA,CAuBA5G,OACAA,KAAAuB,OAAAK,GAAA,qBAAA,SAAAF,GACA,OAAA,WACA,IAAA0zB,EAEA,IADAA,EAAA1zB,EAAAH,OAAAgB,QAAA0B,KAAA,2BACAtE,OAAA,EAGA,OAAAy1B,EAAAvnB,KAAA,SAAArF,EAAA6sB,GACA,IAAA7B,EAAA8B,EAAA5tB,EAGA,GAFA4tB,EAAA70B,EAAA40B,MACA7B,EAAA8B,EAAApyB,KAAA,SACAswB,EAAA+B,SAAA51B,OAAA,KACA21B,EAAAnnB,SACAqlB,IACA9rB,EAAA8rB,EAAAtwB,KAAA,WAEAxB,EAAAH,OAAA2J,SAAAR,OAAAhD,GACAhG,EAAAH,OAAA8K,KAAApI,KAAA,iBAAAtE,OAAA,IACA,OAAA+B,EAAAH,OAAA2J,SAAAjI,QAAA,eAAAyE,OAlBA,CAyBA1H,OAEAA,KAAA8N,QAAA,IAAA8kB,GACAvxB,OAAArB,OAGAA,KAAAuB,OAAAV,QAAAiH,OACA,OAAA9H,KAAA2zB,iBAMAA,cAAA,SAAA6B,GAEA,IAAA9zB,EAiGA,OAjGA1B,KAAAuB,OAAA2J,SAAAtJ,GAAA,gBAAAF,EA4BA1B,KA3BA,SAAA6B,EAAA6F,GACA,IAAA8rB,EACA,GAAA9rB,EAAAkX,OAWA,OARAlX,EAAAiP,IACA6c,EAAA/yB,EAAAiH,EAAAiP,MAEA6c,EAAA9xB,EAAA+zB,YAAA/tB,EAAAnD,MACAmD,EAAAiP,IAAA6c,GAEAA,EAAAtvB,SAAA,aACAsvB,EAAAtwB,KAAA,OAAAwE,GACA+sB,EAAA/sB,EAAAiB,KAAA4B,KAAA,SAAAoM,GACA,IAAAwd,EACA,GAAAX,EAAAnxB,SAAA,aAIA,OADA8xB,EAAAxd,EAAAA,EAAAwd,IAAAzyB,EAAAmK,iBACAnK,EAAA2yB,UAAAb,EAAAW,EAAA,WACA,GAAAzyB,EAAAoM,QAAAnI,OAEA,OADAjE,EAAAoM,QAAAyC,UACA7O,EAAAoM,QAAAglB,MAAAnmB,IAAAjL,EAAAwG,GAAA,cAAA+R,KAAA,YAAA,UAMAyb,eAAAl1B,EAAAm1B,MAAA31B,KAAAuB,OAAAW,SAAAmL,KAAAuoB,SAAA,SAAA/zB,EAAA6F,EAAA2C,EAAAC,GACA,IAAAkpB,EAAA8B,EAAAO,EACA,GAAAnuB,EAAAkX,SAGA0W,EAAA5tB,EAAAiP,IAAAzT,KAAA,SACA,CAIA,IADAswB,EAAA8B,EAAApyB,KAAA,QACAb,SAAA,cAAAmxB,EAAA+B,SAAA51B,OAAA,EASA,OAJAk2B,GAAA,KADAA,EAAAxrB,EAAAC,IACAwrB,QAAA,IACA,KACAD,EAAA,IAEAP,EAAArxB,KAAA,aAAA6M,OAAA,IAAA+kB,EAAA,KARAP,EAAAnnB,WASA,KAAAnO,MACAA,KAAAuB,OAAA2J,SAAAtJ,GAAA,iBAAA8zB,gBACA11B,KAAAuB,OAAA2J,SAAAtJ,GAAA,gBAAA,SAAAF,GACA,OAAA,SAAAG,EAAA6F,EAAAjI,GACA,IAAA+zB,EAAAuC,EACA,GAAAruB,EAAAkX,SAGA4U,EAAA9rB,EAAAiP,KACAtU,SAAA,cAAAmxB,EAAA+B,SAAA51B,OAAA,EAAA,CAGA,IACA,iBAAAF,IACAA,EAAAu2B,KAAAC,MAAAx2B,IAGAs2B,EADAr0B,EAAAH,OAAAV,QAAAiH,OAAAouB,kBACAx0B,EAAAH,OAAAV,QAAAiH,OAAAouB,kBAAAz2B,GAEAA,EAAA8H,MAAA,GAAAY,IAEA,MAAAguB,GACAA,EACA12B,GACA22B,SAAA,GAkBA,OAdA10B,EAAA2yB,UAAAb,EAAAuC,EAAA,WACA,IAAAT,EASA,GARA9B,EAAAtlB,WAAA,QACAslB,EAAA9wB,YAAA,aAAAA,YAAA,YACA4yB,EAAA9B,EAAAtwB,KAAA,UAEAoyB,EAAAnnB,SAEAqlB,EAAAtlB,WAAA,QACAxM,EAAAH,OAAA0B,QAAA,gBACAvB,EAAAH,OAAA8K,KAAApI,KAAA,iBAAAtE,OAAA,EACA,OAAA+B,EAAAH,OAAA2J,SAAAjI,QAAA,eAAAyE,EAAAjI,MAGAiC,EAAAoM,QAAAnI,QACAjE,EAAAoM,QAAAglB,MAAA7Y,KAAA,YAAA,GACAvY,EAAAoM,QAAAglB,MAAAnmB,IAAAopB,SAFA,IAxCA,CA6CA/1B,OACAA,KAAAuB,OAAA2J,SAAAtJ,GAAA,cAAA,SAAAF,GACA,OAAA,SAAAG,EAAA6F,EAAAmC,GACA,IAAA2pB,EAAA/zB,EACA,GAAAiI,EAAAkX,QAGA,UAAA/U,EAAAwsB,WAAA,CAGA,GAAAxsB,EAAAysB,aACA,IACA72B,EAAAu2B,KAAAC,MAAApsB,EAAAysB,cACA72B,EAAA82B,IACA,MAAAJ,GACAA,EACAz0B,EAAAwG,GAAA,eAIA,IADAsrB,EAAA9rB,EAAAiP,KACAtU,SAAA,cAAAmxB,EAAA+B,SAAA51B,OAAA,EAkBA,OAfA+B,EAAA2yB,UAAAb,EAAA9xB,EAAAmK,iBAAA,WACA,IAAAypB,EAOA,OANA9B,EAAAtlB,WAAA,QACAslB,EAAA9wB,YAAA,aAAAA,YAAA,YACA4yB,EAAA9B,EAAAtwB,KAAA,UAEAoyB,EAAAnnB,SAEAqlB,EAAAtlB,WAAA,UAEAxM,EAAAoM,QAAAnI,SACAjE,EAAAoM,QAAAglB,MAAA7Y,KAAA,YAAA,GACAvY,EAAAoM,QAAAglB,MAAAnmB,IAAAjL,EAAAmK,mBAEAnK,EAAAH,OAAA0B,QAAA,gBACAvB,EAAAH,OAAA8K,KAAApI,KAAA,iBAAAtE,OAAA,EACA+B,EAAAH,OAAA2J,SAAAjI,QAAA,eAAAyE,EAAAjI,SADA,IArCA,CAyCAO,QAGAiP,QAAA,WACA,OAAAjP,KAAAkP,kBAGAmlB,UAAA,SAAAb,EAAAW,EAAAC,GACA,IAAAkB,EAAA3e,EAAA6f,EACA90B,EAwDA,OAxDAA,EAYA1B,KAZAw2B,EACA,WACA,IAAAC,EAAAC,EAGA,OAFAD,EAAAjD,EAAA5wB,SACA8zB,EAAAh1B,EAAAH,OAAAgB,QAAAK,SACA0yB,EAAAvyB,KACA4M,IAAA8mB,EAAA9mB,IAAA+mB,EAAA/mB,IACA9M,KAAA4zB,EAAA5zB,KAAA6zB,EAAA7zB,KACAwN,MAAAmjB,EAAAnjB,QACAS,OAAA0iB,EAAA1iB,WACAtD,QAGAgmB,EAAAtvB,SAAA,YACAoxB,EAAA9B,EAAAtwB,KAAA,WAEAoyB,EAAA70B,EAAA,+EAAAmG,OAAApC,SAAAxE,KAAAuB,OAAAgB,SACAi0B,IACAhD,EAAAtwB,KAAA,OAAAoyB,GACAA,EAAApyB,KAAA,MAAAswB,KAEA7c,EAAA,IAAAggB,OACAC,OAAA,SAAAl1B,GACA,OAAA,WACA,IAAAoP,EAAAT,EACA,GAAAmjB,EAAAnxB,SAAA,YAAAmxB,EAAAnxB,SAAA,aAmBA,OAhBAgO,EAAAsG,EAAAtG,MACAS,EAAA6F,EAAA7F,OACA0iB,EAAAlvB,MACA6vB,IAAAA,EACA9jB,MAAAA,EACAS,OAAAA,EACA+lB,kBAAAxmB,EAAA,IAAAS,IACApO,YAAA,WACA8wB,EAAAnxB,SAAA,cACAX,EAAAH,OAAAW,SAAAmL,KAAAmD,OAAA9O,EAAAH,OAAA8K,MACAmqB,MAEAlB,EAAAnnB,SACAqlB,EAAAtlB,WAAA,SAEAxM,EAAAH,OAAA0B,QAAA,gBACAzC,EAAAs2B,WAAA1C,GACAA,EAAAzd,QADA,GAtBA,CA0BA3W,MACA2W,EAAAogB,QAAA,WAKA,OAJAv2B,EAAAs2B,WAAA1C,IACAA,GAAA,GAEAkB,EAAAnnB,SACAqlB,EAAAtlB,WAAA,QAAAxL,YAAA,YAEAiU,EAAAwd,IAAAA,GAGAsB,YAAA,SAAAlxB,GACA,IAAAivB,EAAAlhB,EAcA,OAbA,MAAA/N,IACAA,EAAA,SAEAvE,KAAAuB,OAAAW,SAAAC,aAAAC,SACApC,KAAAuB,OAAAe,SAEAgQ,EAAAtS,KAAAuB,OAAAW,SAAA8L,UAAAsE,SACA0kB,iBACAh3B,KAAAuB,OAAAW,SAAA8L,UAAAsE,MAAAA,GACAkhB,EAAA/yB,EAAA,UAAA6D,KAAA,MAAAC,GACA+N,EAAA2kB,WAAAzD,EAAA,IACAxzB,KAAAuB,OAAAW,SAAA8L,UAAAolB,cAAAI,EAAAlhB,GACAtS,KAAAuB,OAAA0B,QAAA,gBACAuwB,GAGAviB,SAAA,SAAAhQ,GACA,IAgBAS,EAhBAyK,EAAAnM,KACA,GAAA,eAAAiB,EAaA,CACA,IAAAuyB,EAAAxzB,KAAAy1B,cACA,OAAAz1B,KAAAq0B,UAAAb,EAAAxzB,KAAA6L,kBAAAnK,EAUA1B,KATA,WAIA,OAHA0B,EAAAH,OAAA0B,QAAA,gBACAvB,EAAAH,OAAAW,SAAAmL,KAAAmD,OAAAgjB,GACAA,EAAA0D,QACAx1B,EAAAoM,QAAAqpB,IAAA,cAAA,WAEA,OADAz1B,EAAAoM,QAAAglB,MAAAxwB,QACAZ,EAAAoM,QAAAglB,MAAA,GAAAsE,cArBA5C,GACAv2B,MAAA+B,KAAAkI,GAAA,eACA4rB,UAAA,EACAC,OAAA,qDACAC,OAAA,SAAAzsB,GACA4E,EAAA5K,OAAA2J,SAAApD,OAAAP,GACAqX,QAAA,UA2BA,OAFA1Y,EAAAH,QAAA7J,MAAAw4B,EAEAA,IAGAp5B,EAAA,uDACA,qBACA,eACA,gBACA,SAAAmF,EAAAyF,EAAAoI,GAEA,IAAA+oB,EAAA/oB,EAAA1N,SACA2D,KAAA,SAEAV,KAAA,SAEArC,MAAA,WACA,IAAA81B,EAGA,OAFAA,GAAA,IAAAt3B,KAAAuB,OAAAV,QAAA02B,UAAA,GAAA,SACAv3B,KAAA/B,MAAA+B,KAAAkI,GAAAlI,KAAAuE,MAAA+yB,EACAhpB,EAAAzO,UAAA2B,MAAAzB,KAAAC,OAGAiR,SAAA,WACA,OAAAjR,KAAAuB,OAAAW,SAAAtF,YAQA,OAFAsJ,EAAAH,QAAAnJ,OAAAy6B,EAEAA,IAEA/7B,EAAA,uDACA,qBACA,eACA,gBACA,SAAAmF,EAAAyF,EAAAoI,GAGA,IAAAkpB,EAAAlpB,EAAA1N,SACA2D,KAAA,SAEAV,KAAA,SAEA2B,QAAA,IAEAC,WAAA,MAEAI,SAAA,QAEArE,MAAA,WAOA,OANAxB,KAAAuB,OAAAW,SAAAmL,KAAAgE,GAAAC,IACAtR,KAAA/B,MAAA+B,KAAA/B,MAAA,gBAEA+B,KAAA/B,MAAA+B,KAAA/B,MAAA,gBACA+B,KAAA6F,SAAA,UAEAyI,EAAAzO,UAAA2B,MAAAzB,KAAAC,OAGAsP,cAAA,WACA,IAAA3J,EAGA,OAFAA,EAAA3F,KAAAuB,OAAAW,SAAAqP,SAAA,UACAvR,KAAA0O,UAAA/I,GACA3F,KAAA2F,QAGAsL,SAAA,WACA,OAAAjR,KAAAuB,OAAAW,SAAApF,YAOA,OAFAoJ,EAAAH,QAAAjJ,OAAA06B,EAEAA,IAGAl8B,EAAA,sDACA,qBACA,eACA,iBACA,SAAAmF,EAAAyF,EAAAwJ,GACA,IAAA+nB,EAAA/nB,EAAA9O,SACAa,OAAA,WACA,IAAAoxB,EAOAnxB,EA8CA,OApDAmxB,EAAA,2EAAA7yB,KAAAkI,GAAA,YAAA,8GAAAlI,KAAAkI,GAAA,cAAA,qIAAAlI,KAAAkI,GAAA,WAAA,6GAAAlI,KAAAkI,GAAA,cAAA,4EAAAlI,KAAAkI,GAAA,uBAAA,mDAAAlI,KAAAkI,GAAA,2BAAA,qDACAlI,KAAA2B,GAAAuC,SAAA,gBAAA0F,OAAAipB,GACA7yB,KAAA03B,OAAA13B,KAAA2B,GAAAsC,KAAA,cACAjE,KAAA23B,MAAA33B,KAAA2B,GAAAsC,KAAA,aACAjE,KAAA43B,SAAA53B,KAAA2B,GAAAsC,KAAA,eACAjE,KAAA63B,aAAA73B,KAAA2B,GAAAsC,KAAA,gBACAjE,KAAA03B,OAAA91B,GAAA,SAAAF,EAQA1B,KAPA,SAAA6B,GACA,GAAA,KAAAA,EAAAqxB,MAIA,OADAxxB,EAAAkO,OAAAzL,KAAAzC,EAAAg2B,OAAA/qB,OACAjL,EAAAH,OAAAW,SAAAC,aAAA21B,2BAGA93B,KAAA23B,MAAA/1B,GAAA,QAAA,SAAAF,GACA,OAAA,SAAAG,GACA,IAAA8K,EACA,GAAA,KAAA9K,EAAAqxB,MAQA,OALAvmB,EAAAjL,EAAAi2B,MAAAhrB,OACA,0DAAAyO,KAAAzO,IAAAA,IACAA,EAAA,UAAAA,GAEAjL,EAAAkO,OAAAtL,KAAA,OAAAqI,GACAjL,EAAAH,OAAAW,SAAAC,aAAA21B,yBAXA,CAaA93B,OACAS,GAAAT,KAAA23B,MAAA,GAAA33B,KAAA03B,OAAA,KAAA91B,GAAA,UAAA,SAAAF,GACA,OAAA,SAAAG,GACA,IAAAyQ,EACA,GAAA,KAAAzQ,EAAAqxB,OAAA,KAAArxB,EAAAqxB,QAAArxB,EAAAk2B,UAAA,IAAAl2B,EAAAqxB,OAAAzyB,EAAAoB,EAAA+N,QAAAvN,SAAA,YAKA,OAJAR,EAAAG,iBACAsQ,EAAAxH,SAAAqoB,cACAzxB,EAAAH,OAAAW,SAAA8L,UAAAolB,cAAA1xB,EAAAkO,OAAA0C,GACA5Q,EAAAkF,OACAlF,EAAAH,OAAAW,SAAAC,aAAA21B,yBARA,CAWA93B,OACAA,KAAA43B,SAAAh2B,GAAA,QAAA,SAAAF,GACA,OAAA,SAAAG,GACA,IAAAyQ,EAAA0lB,EAMA,OALAA,EAAAltB,SAAAmtB,eAAAv2B,EAAAkO,OAAAzL,QACAzC,EAAAkO,OAAAsoB,YAAAF,GACAt2B,EAAAkF,OACA0L,EAAAxH,SAAAqoB,cACAzxB,EAAAH,OAAAW,SAAA8L,UAAAolB,cAAA4E,EAAA1lB,GACA5Q,EAAAH,OAAAW,SAAAC,aAAA21B,yBARA,CAUA93B,OACAA,KAAA63B,aAAAj2B,GAAA,SAAA,SAAAF,GACA,OAAA,SAAAG,GAEA,OADAH,EAAAkO,OAAAtL,KAAA,SAAA5C,EAAAm2B,aAAAlrB,OACAjL,EAAAH,OAAAW,SAAAC,aAAA21B,yBAHA,CAKA93B,QAGAwN,KAAA,WACA,IAAAlO,EAIA,OAHAA,EAAA,GAAAI,UAAAC,OAAAC,MAAAC,UAAAC,MAAAC,KAAAL,UAAA,MACAgQ,EAAA7P,UAAA2N,KAAAT,MAAA/M,KAAAV,GACAU,KAAA03B,OAAA/qB,IAAA3M,KAAA4P,OAAAzL,QACAnE,KAAA23B,MAAAhrB,IAAA3M,KAAA4P,OAAAtL,KAAA,YAIA,OAAAmzB,IAEAn8B,EAAA,qDACA,qBACA,eACA,eACA,aACA,iBACA,SAAAmF,EAAAyF,EAAAoI,EAAA/S,EAAAk8B,GAGA,IAAAU,EAAA7pB,EAAA1N,SACA2D,KAAA,OAEAV,KAAA,OAEA2B,QAAA,IAEAC,WAAA,MAEAwJ,QAAA,WAEA,OADAX,EAAAzO,UAAAoP,QAAAlP,KAAAC,MACAA,KAAA2F,SAAA3F,KAAAuB,OAAAW,SAAA8L,UAAAoqB,aAAAp4B,KAAAyP,OACAzP,KAAA8N,UACA9N,KAAA8N,QAAA,IAAA2pB,GACAp2B,OAAArB,QAGAA,KAAA8N,QAAAN,KAAAxN,KAAAyP,OAEAzP,KAAA8N,QACA9N,KAAA8N,QAAAlH,YADA,GAMAqK,SAAA,WAEA,IAAAvP,EAcA,OAfA1B,KAAA2F,QACA3F,KAAA8N,QAAAqpB,IAAA,eAAAz1B,EAUA1B,KATA,WACA,OAAAhD,UACA0E,EAAAoM,QAAA6pB,MAAAr1B,QACAZ,EAAAoM,QAAA6pB,MAAA,GAAAP,WAEA11B,EAAAoM,QAAA4pB,OAAAp1B,QACAZ,EAAAoM,QAAA4pB,OAAA,GAAAN,aAOAp3B,KAAAuB,OAAAW,SAAAnF,KAAAiD,KAAA2F,OAAApK,EAAA8D,UAAA,gBAUA,OAFA6G,EAAAH,QAAAhJ,KAAAo7B,EAEAA,IAGA78B,EAAA,qDACA,qBACA,qBACA,eACA,gBACA,SAAA+8B,EAAA53B,EAAAyF,EAAAoI,GACA,IAAAgqB,EAAAhqB,EAAA1N,SACA0L,KAAA,GAEA7G,WAAA,aAEAwL,SAAA,SAAAlP,GACA,OAAA/B,KAAAuB,OAAAW,SAAA6E,KAAA/G,KAAAsM,KAAAvK,EAAA/B,KAAAyF,eAOA,OAAA6yB,IAGAh9B,EAAA,qDACA,qBACA,eACA,eACA,cACA,SAAAmF,EAAAyF,EAAAoI,EAAA/S,GAGA,IAAAg9B,EAAAjqB,EAAA1N,SACA2D,KAAA,OAEAV,KAAA,OAEA2B,QAAA,OAEAC,WAAA,aAEAwL,SAAA,WACA,IAAAunB,EAAAC,EAAAnmB,EAEA,OADAA,EAAAtS,KAAAuB,OAAAW,SAAA8L,UAAAsE,QACAtS,KAAA2F,QACA3F,KAAAuB,OAAAW,SAAA8L,UAAA0qB,OACA14B,KAAA24B,OAAArmB,GACAtS,KAAAuB,OAAAW,SAAA8L,UAAA4qB,eACA54B,KAAAuB,OAAA0B,QAAA,iBAGAqP,EAAAI,eAAA,GAGA1S,KAAAuB,OAAAW,SAAA8L,UAAA0qB,OACAD,EAAAh4B,EAAA6R,EAAA2iB,gBACAuD,EAAA/3B,EAAA6R,EAAAumB,cACAJ,EAAA1qB,QAAA,QAAApO,QACA2S,EAAAwmB,eAAAL,EAAA1qB,QAAA,QAAA,IAEAyqB,EAAAzqB,QAAA,QAAApO,QACA2S,EAAAymB,YAAAP,EAAAzqB,QAAA,QAAA,IAEA/N,KAAArE,KAAA2W,GACAtS,KAAAuB,OAAAW,SAAA8L,UAAA4qB,UACA54B,KAAAuB,OAAA0B,QAAA,gBACAjD,KAAAuB,OAAAW,SAAAmL,KAAAynB,QAAAC,kBACA/0B,KAAAuB,OAAA0B,QAAA,yBADA,IAKAtH,KAAA,SAAA2W,GACA,IAAA0iB,EAAAgE,EASA,OARA,MAAA1mB,IACAA,EAAAtS,KAAAuB,OAAAW,SAAA8L,UAAAsE,UAEA0iB,EAAAv0B,EAAA6R,EAAA2mB,oBACAh1B,KAAA,QAAA4J,KAAA,SAAA+Z,EAAAsR,GACA,OAAAz4B,EAAAy4B,GAAAhB,YAAAz3B,EAAAy4B,GAAAz9B,UAEAu9B,EAAAv4B,EAAA,UAAAmJ,OAAAorB,GACA1iB,EAAA2kB,WAAA+B,EAAA,KAGAL,OAAA,SAAArmB,GACA,IAAA0mB,EAcA,OAbA,MAAA1mB,IACAA,EAAAtS,KAAAuB,OAAAW,SAAA8L,UAAAsE,SAEAA,EAAAI,WACAsmB,EAAAv4B,EAAA6R,EAAA6mB,0BACAx2B,GAAA,UACAq2B,EAAAA,EAAAzD,UAEA90B,EAAA6R,EAAA2iB,gBAAAlnB,QAAA,QAAApO,OACAq5B,EAAAv4B,EAAA6R,EAAA2iB,gBAAAlnB,QAAA,QACAtN,EAAA6R,EAAAumB,cAAA9qB,QAAA,QAAApO,SACAq5B,EAAAv4B,EAAA6R,EAAAumB,cAAA9qB,QAAA,SAEAirB,EAAAd,YAAAc,EAAAv9B,WAQA,OAFAyK,EAAAH,QAAApK,KAAA48B,EAEAA,IAGAj9B,EAAA,0DACA,qBACA,eACA,gBACA,SAAAmF,EAAAyF,EAAAoyB,GACA,IAAAc,EAAAd,EAAA13B,SACA0L,KAAA,KAEA/H,KAAA,KAEAV,KAAA,SAEA2B,QAAA,KAEAK,SAAA,QAEArE,MAAA,WAOA,OANAxB,KAAAuB,OAAAW,SAAAmL,KAAAgE,GAAAC,IACAtR,KAAA/B,MAAA+B,KAAA/B,MAAA,gBAEA+B,KAAA/B,MAAA+B,KAAA/B,MAAA,gBACA+B,KAAA6F,SAAA,UAEAyyB,EAAAz4B,UAAA2B,MAAAzB,KAAAC,SAKA,OAAAkG,EAAAH,QAAAzI,GAAA87B,IAEA99B,EAAA,wDACA,qBACA,eACA,gBACA,SAAAmF,EAAAyF,EAAAoI,GACA,IAAA+qB,EAAA/qB,EAAA1N,SACA2D,KAAA,UAEAV,KAAA,UAEArC,MAAA,WACA,IAAA81B,EAGA,OAFAA,GAAA,IAAAt3B,KAAAuB,OAAAV,QAAA02B,UAAA,GAAA,iBACAv3B,KAAA/B,MAAA+B,KAAAkI,GAAAlI,KAAAuE,MAAA+yB,EACAhpB,EAAAzO,UAAA2B,MAAAzB,KAAAC,OAGAiP,QAAA,aAEAgC,SAAA,WACA,OAAAjR,KAAAuB,OAAAW,SAAArF,aAQA,OAFAqJ,EAAAH,QAAAlJ,QAAAw8B,EAEAA,IAGA/9B,EAAA,8DACA,qBACA,eACA,gBACA,SAAAmF,EAAAyF,EAAAoI,GAEA,IAAAgrB,EAAAhrB,EAAA1N,SACA2D,KAAA,gBAEAV,KAAA,gBAEA2B,QAAA,SAEAC,WAAA,MAEA6J,cAAA,WACA,IAAA3J,EAGA,OAFAA,EAAA3F,KAAAuB,OAAAW,SAAAqP,SAAA,iBACAvR,KAAA0O,UAAA/I,GACA3F,KAAA2F,QAGAsL,SAAA,WACA,OAAAjR,KAAAuB,OAAAW,SAAA1E,mBAMA,OAAA0I,EAAAH,QAAAvI,cAAA87B,IAEAh+B,EAAA,sDACA,sBACA,sBACA,qBACA,eACA,gBACA,SAAAkF,EAAA+4B,EAAA94B,EAAAyF,EAAAoI,GACA,IAAAkrB,EAAAlrB,EAAA1N,SACA2D,KAAA,QAEAV,KAAA,QAEA2B,QAAA,QAEAC,WAAA,sBAEA1E,MAAA,EAEAS,MAAA,WAcA,IAAAE,EAoDA,OAjEA4M,EAAAzO,UAAA2B,MAAAzB,KAAAC,MACAQ,EAAAgT,MAAAxT,KAAAuB,OAAAW,SAAA6M,UAAAC,cAAA,QAAA,KAAA,QAAA,KAAA,KAAA,WAAA,QACAxO,EAAAqI,OAAA7I,KAAAuB,OAAAW,SAAA6M,UAAA0E,oBACAkE,IAAA,UAAA,WACAE,IAAA,UAAA,WACArB,KAAA,WAEAhW,EAAAqI,OAAA7I,KAAAuB,OAAAW,SAAA6M,UAAA0qB,gBACA9hB,IAAA,cACAE,IAAA,gBAEA7X,KAAA05B,iBACA15B,KAAA25B,cACA35B,KAAAuB,OAAAK,GAAA,YAAAF,EAMA1B,KALA,SAAA6B,EAAAoQ,GACA,OAAAA,EAAAhO,KAAA,SAAA4J,KAAA,SAAArF,EAAA/K,GACA,OAAAiE,EAAAyQ,SAAA1R,EAAAhD,SAIAuC,KAAAuB,OAAAK,GAAA,aAAA,SAAAF,GACA,OAAA,SAAAG,EAAAoQ,GACA,OAAAA,EAAAhO,KAAA,SAAA4J,KAAA,SAAArF,EAAA/K,GACA,OAAAiE,EAAA0Q,WAAA3R,EAAAhD,OAHA,CAMAuC,OACAA,KAAAuB,OAAAK,GAAA,yBAAA,SAAAF,GACA,OAAA,SAAAG,GACA,IAAA+3B,EAAAtnB,EAGA,GAFA5Q,EAAAH,OAAA8K,KAAApI,KAAA,wCAAAvB,YAAA,UACA4P,EAAA5Q,EAAAH,OAAAW,SAAA8L,UAAAsE,QAQA,OAJAsnB,EAAAl4B,EAAAH,OAAAW,SAAA8L,UAAA6rB,gBACAvnB,EAAAI,WAAAknB,EAAAj3B,GAAA,mBACAjB,EAAAH,OAAAW,SAAA8L,UAAA8rB,gBAAAF,GAEAA,EAAA7rB,QAAA,SAAArM,EAAAH,OAAA8K,MAAAnI,SAAA,WAZA,CAcAlE,OACAA,KAAAuB,OAAAK,GAAA,aAAA,SAAAF,GACA,OAAA,SAAAG,GACA,OAAAH,EAAAH,OAAA8K,KAAApI,KAAA,wCAAAvB,YAAA,WAFA,CAIA1C,OACAA,KAAAuB,OAAAW,SAAA63B,UAAAlrB,IAAA,KAAA,KAAA,SAAAnN,GACA,OAAA,SAAAG,EAAAm4B,GAEA,OADAt4B,EAAAu4B,OAAAD,EAAA,OACA,GAHA,CAKAh6B,OACAA,KAAAuB,OAAAW,SAAA63B,UAAAlrB,IAAA,KAAA,KAAA,SAAAnN,GACA,OAAA,SAAAG,EAAAm4B,GAEA,OADAt4B,EAAAu4B,OAAAD,EAAA,OACA,GAHA,CAKAh6B,OACAA,KAAAuB,OAAAW,SAAA63B,UAAAlrB,IAAA,OAAA,KAAA,SAAAnN,GACA,OAAA,SAAAG,EAAAm4B,GAEA,OADAt4B,EAAAu4B,OAAAD,EAAA,SACA,GAHA,CAKAh6B,OACAA,KAAAuB,OAAAW,SAAA63B,UAAAlrB,IAAA,OAAA,KAAA,SAAAnN,GACA,OAAA,SAAAG,EAAAm4B,GAEA,OADAt4B,EAAAu4B,OAAAD,EAAA,SACA,GAHA,CAKAh6B,QAGAi6B,OAAA,SAAAC,EAAAC,GACA,IAAAC,EAAAC,EAAAh5B,EAAAumB,EAAApoB,EAQA,OAPA,MAAA26B,IACAA,EAAA,MAEA94B,EAAA,OAAA84B,EAAA,OAAA,QACA36B,EAAA,OAAA26B,GAAA,QAAA,UAAA,QAAA,UAAA,GAAA36B,EAAA,GACA66B,EAAAH,EAAA3E,OAAA,SACA6E,EAAAp6B,KAAA,IAAAqB,EAAA,OAAAg5B,IACA16B,OAAA,KAGAioB,EAAAyS,EAAAp2B,KAAA,UAAA2jB,MAAAsS,GACAl6B,KAAAuB,OAAAW,SAAA8L,UAAA8rB,gBAAAM,EAAAn2B,KAAA,UAAAixB,GAAAtN,MAGA+R,YAAA,WAEAJ,EAAAe,UAAAxvB,UACAyvB,YACAC,aAAA,wBACAj4B,QAAA,oBAMAm3B,eAAA,WACA,IAAAh4B,EAkBA,OAlBA1B,KAAAuB,OAAAW,SAAA0M,QAAAC,IAAA,eAAAnN,EAKA1B,KAJA,SAAA6B,GAEA,OADAH,EAAA+4B,SAAAx2B,KAAA,yCAAAizB,SACA,KAGAl3B,KAAAuB,OAAAW,SAAA0M,QAAAC,IAAA,gBAAA,SAAAnN,GACA,OAAA,SAAAG,GAEA,OADAH,EAAA+4B,SAAAx2B,KAAA,yCAAAizB,SACA,GAHA,CAKAl3B,OACAA,KAAAuB,OAAAW,SAAA0M,QAAAC,IAAA,gBAAA,SAAAnN,GACA,OAAA,SAAAG,GAEA,OADAH,EAAA+4B,SAAAx2B,KAAA,wCAAAizB,SACA,GAHA,CAKAl3B,OACAA,KAAAuB,OAAAW,SAAA0M,QAAAC,IAAA,iBAAA,SAAAnN,GACA,OAAA,SAAAG,GAEA,OADAH,EAAA+4B,SAAAx2B,KAAA,yCAAAizB,SACA,GAHA,CAKAl3B,QAGAyE,WAAA,WACA,IAAAi2B,EAKAh5B,EAiBA,OArBAjB,EAAA,4NAAAT,KAAAkI,GAAA,aAAA,iLAAAlI,KAAAkI,GAAA,kBAAA,oMAAAlI,KAAAkI,GAAA,kBAAA,6OAAAlI,KAAAkI,GAAA,gBAAA,gLAAAlI,KAAAkI,GAAA,oBAAA,oMAAAlI,KAAAkI,GAAA,qBAAA,+OAAAlI,KAAAkI,GAAA,eAAA,mDAAA1D,SAAAxE,KAAAgB,aACAhB,KAAA26B,WAAA36B,KAAAgB,YAAAiD,KAAA,sBACAjE,KAAAy6B,SAAAz6B,KAAAgB,YAAAiD,KAAA,oBACAy2B,EAAA16B,KAAA46B,YAAA,EAAA,GAAAp2B,SAAAxE,KAAA26B,YACA36B,KAAA26B,WAAA/4B,GAAA,aAAA,UAAAF,EAaA1B,KAZA,SAAA6B,GACA,IAAAq4B,EAAAG,EAAAQ,EAAAC,EASA,OARAp5B,EAAAi5B,WAAA12B,KAAA,UAAAvB,YAAA,YACAw3B,EAAAz5B,EAAAoB,EAAAwB,eACAg3B,EAAAH,EAAA3E,SACAuF,EAAAT,EAAAp2B,KAAA,UAAA2jB,MAAAsS,GAAA,EACAW,EAAAR,EAAAU,QAAA,MAAAC,UACAX,EAAA9E,SAAA5yB,GAAA,WACAk4B,EAAAA,EAAAhsB,IAAA6rB,EAAAz2B,KAAA,cAEA42B,EAAA52B,KAAA,SAAA62B,EAAA,YAAAA,EAAA,KAAA52B,SAAA,eAGAlE,KAAA26B,WAAA/4B,GAAA,aAAA,SAAAC,GACA,OAAApB,EAAAoB,EAAAwB,eAAAY,KAAA,UAAAvB,YAAA,cAEA1C,KAAA26B,WAAA/4B,GAAA,YAAA,SAAA,SAAAF,GACA,OAAA,SAAAG,GACA,IAAAo5B,EAAAf,EAAAG,EAAAa,EAAAC,EAEA,GADAz5B,EAAAa,QAAAG,YAAA,WACAhB,EAAAH,OAAAW,SAAAC,aAAAC,QAoBA,OAjBA83B,EAAAz5B,EAAAoB,EAAAwB,eACAg3B,EAAAH,EAAA3E,SACA2F,EAAAb,EAAAp2B,KAAA,MAAA2jB,MAAAsS,GAAA,EACAiB,EAAAd,EAAAU,QAAA,MAAAp7B,OAAA,EACA06B,EAAA9E,SAAA5yB,GAAA,WACAw4B,GAAA,GAEAT,EAAAh5B,EAAAk5B,YAAAO,EAAAD,GAAA,GACAD,EAAAv5B,EAAAH,OAAAW,SAAA8L,UAAAwE,aAAA4oB,OACA15B,EAAAH,OAAAW,SAAAmL,KAAAC,YAAA2tB,GACAA,EAAA/C,YAAAwC,GAEAO,EAAAI,MAAAX,GAEAh5B,EAAAyQ,SAAAuoB,GACAh5B,EAAAH,OAAAW,SAAA8L,UAAAstB,kBAAAZ,EAAAz2B,KAAA,aACAvC,EAAAH,OAAA0B,QAAA,iBACA,GAxBA,CA0BAjD,QAGAmS,SAAA,SAAAuoB,GACA,OAAAj6B,EAAA84B,EAAApnB,SAAAuoB,EAAA,IACAa,cAAA,gBACAf,aAAA,4BAKApoB,WAAA,SAAAsoB,GACA,OAAAj6B,EAAA84B,EAAAnnB,WAAAsoB,EAAA,IACAa,cAAA,gBACAf,aAAA,4BAKAI,YAAA,SAAAY,EAAAhlB,EAAAilB,GACA,OAAAh7B,EAAA84B,EAAAqB,YAAAY,EAAAhlB,EAAAilB,EAAAz7B,KAAAuB,OAAAW,SAAAmL,KAAAouB,KAAA,QAGAC,kBAAA,SAAAhB,GACA,OAAAj9B,MAAAi+B,kBAAAhB,EAAA,KAGAh9B,UAAA,SAAAw8B,GACA,IACAra,EADA1T,EAAAnM,KASA,OANAu5B,EAAA77B,UAAAw8B,EAAA,GAAA,SAAAyB,EAAA/T,GACA+T,IACA9b,EAAA1T,EAAA5K,OAAAW,SAAA8L,UAAA8rB,gBAAAr5B,EAAAk7B,GAAA13B,KAAA,UAAAixB,GAAAtN,OAIA/H,GAGA+b,UAAA,SAAA1B,EAAAC,GACA,IACAta,EADA1T,EAAAnM,KAOA,OAJAu5B,EAAAqC,UAAA1B,EAAA,GAAAC,EAAAhuB,EAAA5K,OAAAW,SAAAmL,KAAAouB,KAAA,SAAAE,EAAA/T,GACA/H,EAAA1T,EAAA5K,OAAAW,SAAA8L,UAAAstB,kBAAA76B,EAAAk7B,GAAA13B,KAAA,UAAAixB,GAAAtN,MAGA/H,GAIAgc,UAAA,SAAA3B,GACA,IACAra,EADA1T,EAAAnM,KASA,OANAu5B,EAAAsC,UAAA3B,EAAA,GAAA,SAAA4B,GACAA,IACAjc,EAAA1T,EAAA5K,OAAAW,SAAA8L,UAAA8rB,gBAAAr5B,EAAAq7B,OAIAjc,GAGAkc,UAAA,SAAA7B,EAAAC,GACA,IACAta,EADA1T,EAAAnM,KAOA,OAJAu5B,EAAAwC,UAAA7B,EAAA,GAAAC,EAAAhuB,EAAA5K,OAAAW,SAAAmL,KAAAouB,KAAA,SAAAK,GACAjc,EAAA1T,EAAA5K,OAAAW,SAAA8L,UAAAstB,kBAAA76B,EAAAq7B,MAGAjc,GAGA7hB,YAAA,SAAAk8B,GACA,IAAA/tB,EAAAnM,KACAu5B,EAAAv7B,YAAAk8B,EAAA,GAAA,SAAA8B,GACA,GAAAA,EAAAr8B,OAAA,EACA,OAAAwM,EAAA5K,OAAAW,SAAA8L,UAAAstB,kBAAAU,MAKA/qB,SAAA,SAAAlP,GACA,IAAAm4B,EAEA,IADAA,EAAAl6B,KAAAuB,OAAAW,SAAA8L,UAAA6rB,gBAAA9rB,QAAA,WACApO,OAAA,EAAA,CAGA,GAAA,cAAAoC,EACA/B,KAAAtC,UAAAw8B,QACA,GAAA,mBAAAn4B,EACA/B,KAAA47B,UAAA1B,EAAA,eACA,GAAA,mBAAAn4B,EACA/B,KAAA47B,UAAA1B,QACA,GAAA,cAAAn4B,EACA/B,KAAA67B,UAAA3B,QACA,GAAA,kBAAAn4B,EACA/B,KAAA+7B,UAAA7B,EAAA,eACA,GAAA,mBAAAn4B,EACA/B,KAAA+7B,UAAA7B,OACA,CAAA,GAAA,gBAAAn4B,EAGA,OAFA/B,KAAAhC,YAAAk8B,GAIA,OAAAl6B,KAAAuB,OAAA0B,QAAA,oBAQA,OAFAiD,EAAAH,QAAAtI,MAAA+7B,EAEAA,IAGAl+B,EAAA,sDACA,qBACA,eACA,eACA,cACA,SAAAmF,EAAAyF,EAAAoI,EAAA/S,GACA,IAAA0gC,EAAA3tB,EAAA1N,SACA2D,KAAA,QAEAiB,QAAA,qBAEA3B,KAAA,SAEA4B,WAAA,aAEAjE,MAAA,WA4BA,OA3BAxB,KAAAe,OAEAwD,KAAA,SACAJ,KAAA5I,EAAA8D,UAAA,cACA0C,MAAA,KACA,KACAwC,KAAA,KACAJ,KAAA5I,EAAA8D,UAAA,SAAA,KACA0C,MAAA,OAEAwC,KAAA,KACAJ,KAAA5I,EAAA8D,UAAA,SAAA,KACA0C,MAAA,OAEAwC,KAAA,KACAJ,KAAA5I,EAAA8D,UAAA,SAAA,KACA0C,MAAA,OAEAwC,KAAA,KACAJ,KAAA5I,EAAA8D,UAAA,SAAA,KACA0C,MAAA,OAEAwC,KAAA,KACAJ,KAAA5I,EAAA8D,UAAA,SAAA,KACA0C,MAAA,OAGAuM,EAAAzO,UAAA2B,MAAAzB,KAAAC,OAGA0O,UAAA,SAAA/I,EAAA5D,GACA4D,IACAA,EAAA3F,KAAAyP,KAAA,GAAAyL,QAAA1R,eAEA8E,EAAAzO,UAAA6O,UAAA3O,KAAAC,KAAA2F,IAGAsL,SAAA,SAAAlP,GACA,OAAA/B,KAAAuB,OAAAW,SAAAjE,MAAA8D,EAAA/B,KAAAyF,eAOA,OAFAS,EAAAH,QAAA9H,MAAAg+B,EAEAA,IAGA3gC,EAAA,0DACA,qBACA,eACA,gBACA,SAAAmF,EAAAyF,EAAAoI,GACA,IAAA4tB,EAAA5tB,EAAA1N,SACA2D,KAAA,YAEAV,KAAA,YAEA2B,QAAA,IAEAC,WAAA,MAEAI,SAAA,QAEApE,OAAA,WAOA,OANAzB,KAAAuB,OAAAW,SAAAmL,KAAAgE,GAAAC,IACAtR,KAAA/B,MAAA+B,KAAA/B,MAAA,gBAEA+B,KAAA/B,MAAA+B,KAAA/B,MAAA,gBACA+B,KAAA6F,SAAA,UAEAyI,EAAAzO,UAAA4B,OAAA1B,KAAAC,OAGAsP,cAAA,WACA,IAAA3J,EAGA,OAFAA,EAAA3F,KAAAuB,OAAAW,SAAAqP,SAAA,aACAvR,KAAA0O,UAAA/I,GACA3F,KAAA2F,QAGAsL,SAAA,WACA,OAAAjR,KAAAuB,OAAAW,SAAA/D,eAQA,OAFA+H,EAAAH,QAAA5H,UAAA+9B,EAEAA,IAGA5gC,EAAA,4DACA,qBACA,eACA,gBACA,SAAAmF,EAAAyF,EAAAoyB,GACA,IAAA6D,EAAA7D,EAAA13B,SACA0L,KAAA,KAEA/H,KAAA,KAEAV,KAAA,SAEA2B,QAAA,KAEAK,SAAA,QAEArE,MAAA,WAOA,OANAxB,KAAAuB,OAAAW,SAAAmL,KAAAgE,GAAAC,IACAtR,KAAA/B,MAAA+B,KAAA/B,MAAA,gBAEA+B,KAAA/B,MAAA+B,KAAA/B,MAAA,gBACA+B,KAAA6F,SAAA,UAEAyyB,EAAAz4B,UAAA2B,MAAAzB,KAAAC,SAQA,OAFAkG,EAAAH,QAAAxI,GAAA4+B,EAEAA,IAGA7gC,EAAA,uDACA,qBACA,eACA,iBACA,SAAAmF,EAAAyF,EAAAwJ,GACA,IAAA0sB,EAAA1sB,EAAA9O,SACAgC,QACA+M,IAAA,EACA9M,MAAA,GAGAw5B,WAAA,SAAAC,EAAAlI,GACA,IAAAkI,GAAAt8B,KAAA4P,OAAAtL,KAAA,SAAAg4B,EAAAnI,IAGA,OAAA1zB,EAAA,mBAAAyC,KAAA,cAAAlD,KAAAqB,OAAAk7B,UAAA97B,EAAA,mBAAAyC,KAAA,aAAAo5B,EACA,SAAA3lB,OAQAlV,OAAA,WACA,IAAAoxB,EAwBAnxB,EAAA,OAvBAmxB,EAAA,4FAAA7yB,KAAAkI,GAAA,SAAA,wCAAAlI,KAAAkI,GAAA,oBAAA,2GAAAlI,KAAAkI,GAAA,aAAA,6SAAAlI,KAAAkI,GAAA,kBAAA,2BACAlI,KAAA2B,GAAAuC,SAAA,iBAAA0F,OAAAipB,GACA7yB,KAAA8yB,MAAA9yB,KAAA2B,GAAAsC,KAAA,eACAjE,KAAA+yB,QAAA/yB,KAAA2B,GAAAsC,KAAA,gBACAjE,KAAAgzB,SAAAhzB,KAAA2B,GAAAsC,KAAA,iBACAjE,KAAA2B,GAAAsC,KAAA,eAAArC,GAAA,UACA,SAAAC,GACA,GAAA,KAAAA,EAAAqxB,OAAA,KAAArxB,EAAAqxB,MAEA,OADArxB,EAAAG,iBACAvB,EAAA,mBAAAy2B,UAKAl3B,KAAA8yB,MAAAlxB,GAAA,UACA,SAAAC,GACA,GAAA,KAAAA,EAAAqxB,OAAA,KAAArxB,EAAAqxB,MAEA,OADArxB,EAAAG,iBACAvB,EAAA,mBAAAy2B,UAKAl3B,KAAAuB,OAAAK,GAAA,gBAAAF,EAMA1B,KALA,SAAA6B,GACA,GAAAH,EAAAiE,OACA,OAAAjE,EAAA6O,cAMA/C,KAAA,WACA,IAAAgvB,EAAAl9B,EAAAg9B,EAmBA,OAlBAh9B,EAAA,GAAAI,UAAAC,OAAAC,MAAAC,UAAAC,MAAAC,KAAAL,UAAA,MACAgQ,EAAA7P,UAAA2N,KAAAT,MAAA/M,KAAAV,GACAk9B,EAAA98B,UAAA,IAAAM,KAAA4P,OACA5P,KAAAqQ,MAAAmsB,EAAAl4B,KAAA,eAAAk4B,EAAAnsB,QACArQ,KAAA8Q,OAAA0rB,EAAAl4B,KAAA,gBAAAk4B,EAAA1rB,SACA0rB,EAAAl4B,KAAA,eACAg4B,GACAv/B,KAAAy/B,EAAAl4B,KAAA,aACAwK,IAAA0tB,EAAAl4B,KAAA,YACA+L,MAAArQ,KAAAqQ,MACAS,OAAA9Q,KAAA8Q,QAEA9Q,KAAAm0B,IAAAmI,EAAAv/B,MAEAiD,KAAA+yB,QAAApmB,IAAA3M,KAAAqQ,OACArQ,KAAAgzB,SAAArmB,IAAA3M,KAAA8Q,QACA9Q,KAAA8yB,MAAAnmB,IAAA3M,KAAAm0B,KACA1zB,EAAA,mBAAAyC,KAAA,YAAAs5B,GACAx8B,KAAA4P,UAIA,OAAAwsB,IAEA9gC,EAAA,sDACA,sBACA,qBACA,eACA,eACA,kBACA,SAAAkF,EAAAC,EAAAyF,EAAAoI,EAAA8tB,GACA,IAAAK,EAAA,mJACAC,EAAA,4CAEAC,EAAAruB,EAAA1N,SACA2D,KAAA,QAEAV,KAAA,QAEA2B,QAAA,gBAEAC,WAAA,kBAEAvG,iBAAA,QAEA09B,oBAAA,kBAEA9wB,kBAAA,GAEA7J,WAAA,EAEAT,MAAA,WAYA,IAAAE,EAoDA,OA/DA1B,KAAA/B,MAAA+B,KAAAkI,GAAAlI,KAAAuE,MACA/D,EAAAgT,MAAAxT,KAAAuB,OAAAW,SAAA6M,UAAAC,cAAA,QAAA,SAAA,UACAxO,EAAAqI,OAAA7I,KAAAuB,OAAAW,SAAA6M,UAAA0E,oBACAgD,OAAA,QAAA,QAAA,SAAA,QAAA,OAAA,cAAA,MAAA,QAAA,OAAA,OAAA,OAAA,oBAAA,mBACAomB,QAAA,QAAA,QAAA,SAAA,QAAA,MAAA,cAAA,YAAA,aAAA,eACA99B,OAAA,QAAA,QAAA,SAAA,QAAA,SAAA,WAAA,kBAAA,MAAA,YAAA,cAGAiB,KAAA8L,kBAAA9L,KAAAuB,OAAAV,QAAAqF,OAAAH,QAAAhH,MAAA+M,kBAGArL,EAAAqK,UAAAlJ,GAAA,QAAA,mBAAAF,EAeA1B,KAdA,SAAA6B,GACA,IAAAy6B,EASA,OARAA,GACAv/B,KAAA0D,EAAA,eAAAkM,MACA0D,MAAA5P,EAAA,gBAAAkM,OAAA,IACAmE,OAAArQ,EAAA,iBAAAkM,OAAA,KAEAlM,EAAA,eAAAkM,IAAA,IACAlM,EAAA,gBAAAkM,IAAA,IACAlM,EAAA,iBAAAkM,IAAA,IACAjL,EAAAo7B,QAAAr8B,EAAA,mBAAAyC,KAAA,aAAAo5B,EAAA,WACA,OAAA56B,EAAAH,OAAA0B,QAAA,qBAKAjD,KAAAuB,OAAA8K,KAAAzK,GAAA,QAAA,yBAAA,SAAAF,GACA,OAAA,SAAAG,GACA,IAAA26B,EAAA/7B,EAAAoB,EAAAwB,eAAAY,KAAA,kBACA,OAAAvC,EAAAoM,QAAAN,KAAAgvB,IAHA,CAKAx8B,OACAA,KAAAuB,OAAA8K,KAAAzK,GAAA,YAAA,SAAAF,GACA,OAAA,WACA,IAAAq7B,EAMA,OALAA,EAAAt8B,EAAA,mBAAAyC,KAAA,eACA65B,EAAAthC,SAAAiG,EAAAxC,mBACA69B,EAAA5uB,SACA1N,EAAA,mBAAAyC,KAAA,YAAA,OAEAxB,EAAAoM,QAAAlH,QARA,CAUA5G,OACAA,KAAAuB,OAAAK,GAAA,WAAA,SAAAF,GACA,OAAA,SAAAG,EAAAoQ,GACA,OAAAA,EAAAhO,KAAA,kBAAA4J,KAAA,SAAArF,EAAAzJ,GACA,OAAA2C,EAAAyQ,SAAA1R,EAAA1B,OAHA,CAMAiB,OACAA,KAAAuB,OAAAK,GAAA,aAAA,SAAAF,GACA,OAAA,SAAAG,EAAAoQ,GACA,OAAAA,EAAAhO,KAAA,kBAAA4J,KAAA,SAAArF,EAAAzJ,GACA,OAAA2C,EAAA0Q,WAAA3R,EAAA1B,OAHA,CAMAiB,OAEAA,KAAA8N,QAAA,IAAAsuB,GACA/6B,OAAArB,OAEAsO,EAAAzO,UAAA2B,MAAAzB,KAAAC,OAIAmS,SAAA,SAAAqqB,GACA,KAAAA,EAAAjH,OAAA,0BAAA51B,OAAA,GAIA,OADA68B,EAAAQ,KAAA,mDACAR,EAAAjH,UAGAnjB,WAAA,SAAAoqB,GACA,GAAAA,EAAAjH,OAAA,0BAAA51B,OAAA,EAGA,OAAA68B,EAAAjH,SAAA2C,YAAAsE,IAGAvrB,SAAA,WACA,IAAAurB,EAAAx8B,KAAAi9B,UACA,OAAAj9B,KAAA8N,QAAAN,KAAAgvB,IAGAvtB,QAAA,WACA,OAAAjP,KAAAkP,kBAGA+tB,QAAA,WACA,IAAAT,EAAAlqB,EAmBA,OAlBAtS,KAAAuB,OAAAW,SAAAC,aAAAC,SACApC,KAAAuB,OAAAe,SAEAgQ,EAAAtS,KAAAuB,OAAAW,SAAA8L,UAAAsE,WAEAA,EAAA0kB,iBACAh3B,KAAAuB,OAAAW,SAAA8L,UAAAsE,MAAAA,IAEAkqB,EAAA/7B,EAAA,YAAA6D,MACA44B,OAAAl9B,KAAA8L,kBACAuE,MAAA,IACAS,OAAA,IACAoV,MAAA,kBAEA5T,EAAA2kB,WAAAuF,EAAA,IACAx8B,KAAAuB,OAAAW,SAAA8L,UAAAolB,cAAAoJ,EAAAlqB,GACAtS,KAAAuB,OAAA0B,QAAA,gBACAjD,KAAAmS,SAAAqqB,GACAA,GAGAM,QAAA,SAAAN,EAAAF,EAAAlI,GAEA,GAAAkI,EAAAv/B,KAEA,CACA,IAAAmG,EAAAo5B,EAAAv/B,KACA,IAAAmG,EAAA4P,MAAA,2BAAA,CAEA,IAAAqqB,EAAA,qDACAC,EAAA,8CAEAl6B,EAAA4P,MAAA2pB,GACAv5B,EAAAA,EAAAhD,QAAAu8B,EAAAU,EAAA,mCAAAC,GACAl6B,EAAA4P,MAAA4pB,KACAx5B,EAAAA,EAAAhD,QAAAw8B,EAAAS,EAAA,oCAAAC,IAGA,IAAAC,EAAA58B,EAAAyC,GAAAuY,OACApL,MAAAisB,EAAAjsB,MAAA,KACAS,OAAAwrB,EAAAxrB,OAAA,OACAxM,MACA+L,MAAAisB,EAAAjsB,MAAA,KACAS,OAAAwrB,EAAAxrB,OAAA,KACAoV,MAAA,gBACAoX,YAAAhB,EAAAv/B,KACAwgC,aAAAjB,EAAAjsB,MACAmtB,cAAAlB,EAAAxrB,SAGA0rB,EAAAtE,YAAAmF,GACAb,EAAAa,OA3BAr9B,KAAAy9B,QAAAjB,GA+BA,OAFAx8B,KAAAuB,OAAA0B,QAAA,gBACAjD,KAAA8N,QAAAlH,OACAwtB,EAAAoI,IAGAiB,QAAA,SAAAjB,GACAA,EAAAjH,SAAApnB,YAQA,OAFAjI,EAAAH,QAAAhH,MAAA49B,EAEAA,IAGArhC,EAAA,gEACA,sBACA,qBACA,sBACA,gBACA,mBACA,SAAAkF,EAAAC,EAAAE,EAAApF,EAAA2K,GAEA,IAAAw3B,EAAA/8B,EAAAC,SACA6C,UAAA,SAAAyN,GASA,OAPAvQ,EAAAd,UAAA4D,UAAA1D,KAAAC,OAAAkR,GAEAlR,KAAA2B,GAAAe,YAAA,oCACAwO,GACAlR,KAAA2B,GAAAuC,SAAA,QAAA1D,EAAAm9B,WAAAzsB,IAEAlR,KAAAgE,QAAA,QAAAxD,EAAAm9B,WAAAzsB,IACAlR,KAAAiF,OAAAhB,KAAA,cAAAuJ,OAAAof,MAAA3oB,KAAA,cAAAiN,GAAAtK,UASA,OAFAV,EAAA5E,QAAA0E,MAAA5H,UAAAs/B,EAEAA,IAGApiC,EAAA,4DACA,qBACA,sBACA,gBACA,mBACA,SAAAmF,EAAAE,EAAApF,EAAA2K,GAGA,IAAA03B,EAAAj9B,EAAAC,SACAa,OAAA,WACA,IAAAnC,EAEA,OADAA,EAAA,GAAAI,UAAAC,OAAAC,MAAAC,UAAAC,MAAAC,KAAAL,UAAA,MACAiB,EAAAd,UAAA4B,OAAAsL,MAAA/M,KAAAV,IAGAmF,WAAA,WAKA,OAJAhE,EAAA,wmBAAA+D,SAAAxE,KAAAgB,aACAhB,KAAAgB,YAAAY,GAAA,YAAA,cAAA,SAAAC,GACA,OAAA,IAEA7B,KAAAgB,YAAAY,GAAA,QAAA,eAAAF,EAsBA1B,KArBA,SAAA6B,GACA,IAAAg8B,EAAAC,EAAAC,EAAAC,EAGA,GAFAt8B,EAAAa,QAAAG,YAAA,YACAm7B,EAAAp9B,EAAAoB,EAAAwB,gBACAhB,SAAA,sBAAA,CAEA,MADAy7B,EAAAp8B,EAAAH,OAAA8K,KAAApI,KAAA,UACAtE,OAAA,GACA,OAEAq+B,EAAAj2B,OAAAk2B,iBAAAH,EAAA,GAAA,MAAAI,iBAAA,SACAH,EAAAr8B,EAAAy8B,iBAAAH,QAEAA,EAAAj2B,OAAAk2B,iBAAAJ,EAAA,GAAA,MAAAK,iBAAA,oBACAH,EAAAr8B,EAAAy8B,iBAAAH,GAEA,GAAAD,EAIA,OAAAr8B,EAAAH,OAAAW,SAAAoJ,UAAAyyB,EAAAF,EAAAx7B,SAAA,sBAAA9G,EAAA8D,UAAA,mBApBA,IAAAqC,GAyBAy8B,iBAAA,SAAAH,GACA,IAAAlrB,EAGA,OADAA,EADA,kCACAgL,KAAAkgB,IAIA,SAAAI,EAAAC,EAAAC,GACA,IAAAC,EAUA,MAAA,KATAA,EAAA,SAAA1P,GACA,IAAAkP,EAEA,OAAA,KADAA,EAAAlP,EAAA2P,SAAA,KACA7+B,OACA,IAAAo+B,EAEAA,IAGAK,GAAAG,EAAAF,GAAAE,EAAAD,GAEAG,CAAA,EAAA3rB,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAAA,IAfA,MAwBA,OAHA5M,EAAA5E,QAAA0E,MAAAjK,MAAA6hC,EAGAA,IAGAtiC,EAAA,4DACA,sBACA,qBACA,sBACA,gBACA,mBACA,SAAAkF,EAAAC,EAAAE,EAAApF,EAAA2K,GAEA,IAAAw4B,EAAA/9B,EAAAC,SAEA6D,WAAA,WACA,IAAAk6B,EAAAvmB,EAAA3c,EAAA8I,EAAAnD,EAAA+yB,EAAAtB,EAAA+L,EAAAC,EAAAC,EAiBAp9B,EARA,IARAmxB,EAAA,iCACAzxB,EAAAZ,EAAAqI,QACAk2B,UAAA,gBACAC,OAAAN,EAAAM,QACAh/B,KAAAuB,OAAAV,QAAAqF,OAAA5E,QAAA0E,MAAAtK,WACAD,EAAA,GACA2c,EAAAhX,EAAA29B,UAAA7+B,QAAA,MAAA,IAAA,IACA4+B,EAAA19B,EAAA49B,OACAJ,EAAA,EAAAC,EAAAC,EAAAn/B,OAAAi/B,EAAAC,EAAAD,IACAr6B,EAAAu6B,EAAAF,GACAzK,EAAA,GAAA/b,EAAA7T,EACAA,EAAAA,EAAA+E,MAAA,KAAA,GACA7N,GAAA,kBAAA8I,EAAA,eAAA4vB,EAAA,iCAAA5vB,EAAA,YAIA,OAFAo6B,EAAAl+B,EAAAoyB,IACAp3B,KAAAA,GAAA+I,SAAAxE,KAAAgB,aACA29B,EAAA/8B,GAAA,YAAA,MAAAF,EAgBA1B,KAfA,SAAA6B,GACA,IAAA2xB,EAEA,GADA9xB,EAAAa,QAAAG,YAAA,WACAhB,EAAAH,OAAAW,SAAAC,aAAAC,QAUA,OAPAoxB,EAAA/yB,EAAAoB,EAAAwB,eAAAY,KAAA,OAAAg7B,QAAA36B,MACA46B,cAAA,EACAC,kBAAA,IAEAz9B,EAAAH,OAAAW,SAAA8L,UAAAipB,WAAAzD,GACA9xB,EAAAH,OAAA0B,QAAA,gBACAvB,EAAAH,OAAA0B,QAAA,qBACA,QAsBA,OAdAy7B,EAAAnjC,MACAC,SACAE,MAAA,MAEAyD,SACAzD,MAAA,UAIAgjC,EAAAM,QAAA,YAAA,aAAA,eAAA,YAAA,iBAAA,YAAA,cAAA,WAAA,WAAA,0BAAA,mCAAA,uBAAA,eAAA,cAAA,qBAAA,kBAAA,iBAAA,UAAA,UAAA,YAAA,WAAA,aAAA,iBAAA,YAAA,mBAAA,WAAA,YAAA,kBAAA,eAAA,UAAA,eAAA,iBAAA,cAAA,YAAA,QAAA,WAAA,aAAA,WAAA,YAAA,iBAGA94B,EAAA5E,QAAA0E,MAAAtK,MAAAgjC,EAEAA,IAGApjC,EAAA,4DACA,sBACA,qBACA,sBACA,gBACA,mBACA,SAAAkF,EAAAC,EAAAE,EAAApF,EAAA2K,GAEA,IAAAk5B,EAAAz+B,EAAAC,SACA6C,UAAA,SAAAkC,GAIA,OAFAhF,EAAAd,UAAA4D,UAAA1D,KAAAC,KAAA2F,GAEAA,GACA3F,KAAA26B,WAAA/zB,OACA5G,KAAAy6B,SAAAjtB,SAEAxN,KAAA26B,WAAAntB,OACAxN,KAAAy6B,SAAA7zB,WA8DA,OAvDAw4B,EAAAv/B,UAAA4E,WAAA,WACA,IAAAi2B,EAKAh5B,EAiBA,OArBAjB,EAAA,4NAAAlF,EAAA8D,UAAA,aAAA,iLAAA9D,EAAA8D,UAAA,kBAAA,oMAAA9D,EAAA8D,UAAA,kBAAA,6OAAA9D,EAAA8D,UAAA,gBAAA,gLAAA9D,EAAA8D,UAAA,oBAAA,oMAAA9D,EAAA8D,UAAA,qBAAA,+OAAA9D,EAAA8D,UAAA,eAAA,mDAAAmF,SAAAxE,KAAAgB,aACAhB,KAAA26B,WAAA36B,KAAAgB,YAAAiD,KAAA,sBACAjE,KAAAy6B,SAAAz6B,KAAAgB,YAAAiD,KAAA,oBACAy2B,EAAA16B,KAAAqB,OAAAu5B,YAAA,EAAA,GAAAp2B,SAAAxE,KAAA26B,YACA36B,KAAA26B,WAAA/4B,GAAA,aAAA,UAAAF,EAaA1B,KAZA,SAAA6B,GACA,IAAAq4B,EAAAG,EAAAQ,EAAAC,EASA,OARAp5B,EAAAi5B,WAAA12B,KAAA,UAAAvB,YAAA,YACAw3B,EAAAz5B,EAAAoB,EAAAwB,eACAg3B,EAAAH,EAAA3E,SACAuF,EAAAT,EAAAp2B,KAAA,UAAA2jB,MAAAsS,GAAA,EACAW,EAAAR,EAAAU,QAAA,MAAAC,UACAX,EAAA9E,SAAA5yB,GAAA,WACAk4B,EAAAA,EAAAhsB,IAAA6rB,EAAAz2B,KAAA,cAEA42B,EAAA52B,KAAA,SAAA62B,EAAA,YAAAA,EAAA,KAAA52B,SAAA,eAGAlE,KAAA26B,WAAA/4B,GAAA,aAAA,SAAAC,GACA,OAAApB,EAAAoB,EAAAwB,eAAAY,KAAA,UAAAvB,YAAA,cAEA1C,KAAA26B,WAAA/4B,GAAA,YAAA,SAAA,SAAAF,GACA,OAAA,SAAAG,GACA,IAAAo5B,EAAAf,EAAAG,EAAAa,EAAAC,EAEA,GADAz5B,EAAAa,QAAAG,YAAA,WACAhB,EAAAH,OAAAW,SAAAC,aAAAC,QAoBA,OAjBA83B,EAAAz5B,EAAAoB,EAAAwB,eACAg3B,EAAAH,EAAA3E,SACA2F,EAAAb,EAAAp2B,KAAA,MAAA2jB,MAAAsS,GAAA,EACAiB,EAAAd,EAAAU,QAAA,MAAAp7B,OAAA,EACA06B,EAAA9E,SAAA5yB,GAAA,WACAw4B,GAAA,GAEAT,EAAAh5B,EAAAL,OAAAu5B,YAAAO,EAAAD,GAAA,GACAD,EAAAv5B,EAAAH,OAAAW,SAAA8L,UAAAwE,aAAA4oB,OACA15B,EAAAH,OAAAW,SAAAmL,KAAAC,YAAA2tB,GACAA,EAAA/C,YAAAwC,GAEAO,EAAAI,MAAAX,GAEAh5B,EAAAL,OAAA8Q,SAAAuoB,GACAh5B,EAAAH,OAAAW,SAAA8L,UAAAstB,kBAAAZ,EAAAz2B,KAAA,aACAvC,EAAAH,OAAA0B,QAAA,iBACA,GAxBA,CA0BAjD,QAIAkG,EAAA5E,QAAA0E,MAAAvI,MAAA2hC,EAEAA,IAIA9jC,EAAA,4DACA,qBACA,sBACA,mBACA,SAAAmF,EAAAE,EAAAuF,GACA,IAAAm5B,EAAA1+B,EAAAC,SACA6C,UAAA,SAAAC,GACA,IAAAiC,IAAAjC,EACA3B,EAAA2B,EAOA,GANA/C,EAAAd,UAAA4D,UAAA1D,KAAAC,KAAA2F,GAEAA,IACA5D,IAAAA,EAAA/B,KAAAyP,KAAA,GAAAyL,QAAA1R,gBAEAxJ,KAAA2B,GAAAe,YAAA,8DACAiD,EACA,OAAA3F,KAAA2B,GAAAuC,SAAA,iBAAAnC,MAQA,OAFAmE,EAAA5E,QAAA0E,MAAA/H,MAAAohC,EAEAA,IAGA/jC,EAAA,gCACA,YACA,WACA,YACA,YACA,eAEA,mCACA,oCACA,8BACA,8BACA,+BACA,+BACA,+BACA,mCACA,oCACA,4BACA,8BACA,+BACA,gCACA,gCACA,gCACA,8BACA,+BACA,8BACA,8BACA,mCACA,iCACA,uCACA,+BACA,+BACA,mCACA,qCACA,+BAEA,yCACA,qCACA,qCACA,qCACA,sCACA,SAAA6P,GAEA,OAAAA,IAEA7P,EAAA,2BAAA,gCAAA,SAAAgkC,GAAA,OAAAA","file":"../skylark-widgets-wordpad.js","sourcesContent":["define('skylark-widgets-wordpad/i18n',[\r\n\r\n],function(){ \r\n\r\n    var i18n =  {\r\n      'zh-CN': {\r\n        'html' : 'HTML源码',\r\n        'emoji' : '表情',\r\n        'mark' : '标记',\r\n        'blockquote': '引用',\r\n        'bold': '加粗文字',\r\n        'code': '插入代码',\r\n        'color': '文字颜色',\r\n        'coloredText': '彩色文字',\r\n        'hr': '分隔线',\r\n        'image': '插入图片',\r\n        'externalImage': '指定链接',\r\n        'uploadImage': '上传图片',\r\n        'uploadFailed': '上传失败了',\r\n        'uploadError': '上传出错了',\r\n        'imageUrl': '图片地址',\r\n        'imageSize': '图片尺寸',\r\n        'imageAlt': '图片描述',\r\n        'restoreImageSize': '还原图片尺寸',\r\n        'uploading': '正在上传',\r\n        'indent': '向右缩进',\r\n        'outdent': '向左缩进',\r\n        'italic': '斜体文字',\r\n        'link': '插入链接',\r\n        'linkText': '链接文字',\r\n        'linkUrl': '链接地址',\r\n        'linkTarget': '打开方式',\r\n        'openLinkInCurrentWindow': '在当前窗口中打开',\r\n        'openLinkInNewWindow': '在新窗口中打开',\r\n        'removeLink': '移除链接',\r\n        'ol': '有序列表',\r\n        'ul': '无序列表',\r\n        'strikethrough': '删除线文字',\r\n        'table': '表格',\r\n        'deleteRow': '删除行',\r\n        'insertRowAbove': '在上面插入行',\r\n        'insertRowBelow': '在下面插入行',\r\n        'deleteColumn': '删除列',\r\n        'insertColumnLeft': '在左边插入列',\r\n        'insertColumnRight': '在右边插入列',\r\n        'deleteTable': '删除表格',\r\n        'title': '标题',\r\n        'normalText': '普通文本',\r\n        'underline': '下划线文字',\r\n        'alignment': '水平对齐',\r\n        'alignCenter': '居中',\r\n        'alignLeft': '居左',\r\n        'alignRight': '居右',\r\n        'selectLanguage': '选择程序语言',\r\n        'fontScale': '字体大小',\r\n        'fontScaleXLarge': '超大字体',\r\n        'fontScaleLarge': '大号字体',\r\n        'fontScaleNormal': '正常大小',\r\n        'fontScaleSmall': '小号字体',\r\n        'fontScaleXSmall': '超小字体',\r\n        \"video\": \"视屏\",\r\n        \"videoSize\" : \"尺寸\",\r\n        \"uploadVideoBtn\" : \"插入\",\r\n        \"videoPlaceholder\": \"视频嵌入代码\"\r\n      },\r\n      'en-US': {\r\n        'html' : 'HTML Source',\r\n        'emoji' : 'Emoji',\r\n        'mark' : 'Mark',\r\n        'blockquote': 'Block Quote',\r\n        'bold': 'Bold',\r\n        'code': 'Code',\r\n        'color': 'Text Color',\r\n        'coloredText': 'Colored Text',\r\n        'hr': 'Horizontal Line',\r\n        'image': 'Insert Image',\r\n        'externalImage': 'External Image',\r\n        'uploadImage': 'Upload Image',\r\n        'uploadFailed': 'Upload failed',\r\n        'uploadError': 'Error occurs during upload',\r\n        'imageUrl': 'Url',\r\n        'imageSize': 'Size',\r\n        'imageAlt': 'Alt',\r\n        'restoreImageSize': 'Restore Origin Size',\r\n        'uploading': 'Uploading',\r\n        'indent': 'Indent',\r\n        'outdent': 'Outdent',\r\n        'italic': 'Italic',\r\n        'link': 'Insert Link',\r\n        'linkText': 'Text',\r\n        'linkUrl': 'Url',\r\n        'linkTarget': 'Target',\r\n        'openLinkInCurrentWindow': 'Open link in current window',\r\n        'openLinkInNewWindow': 'Open link in new window',\r\n        'removeLink': 'Remove Link',\r\n        'ol': 'Ordered List',\r\n        'ul': 'Unordered List',\r\n        'strikethrough': 'Strikethrough',\r\n        'table': 'Table',\r\n        'deleteRow': 'Delete Row',\r\n        'insertRowAbove': 'Insert Row Above',\r\n        'insertRowBelow': 'Insert Row Below',\r\n        'deleteColumn': 'Delete Column',\r\n        'insertColumnLeft': 'Insert Column Left',\r\n        'insertColumnRight': 'Insert Column Right',\r\n        'deleteTable': 'Delete Table',\r\n        'title': 'Title',\r\n        'normalText': 'Text',\r\n        'underline': 'Underline',\r\n        'alignment': 'Alignment',\r\n        'alignCenter': 'Align Center',\r\n        'alignLeft': 'Align Left',\r\n        'alignRight': 'Align Right',\r\n        'selectLanguage': 'Select Language',\r\n        'fontScale': 'Font Size',\r\n        'fontScaleXLarge': 'X Large Size',\r\n        'fontScaleLarge': 'Large Size',\r\n        'fontScaleNormal': 'Normal Size',\r\n        'fontScaleSmall': 'Small Size',\r\n        'fontScaleXSmall': 'X Small Size',\r\n        \"video\": \"Video\",\r\n        \"videoSize\" : \"Size\",\r\n        \"uploadVideoBtn\" : \"Insert\",\r\n        \"videoPlaceholder\": \"Video Embed Code\"\r\n      },\r\n\r\n      'ja' : {\r\n        'html' : 'HTMLソースコード',\r\n        'emoji' : '表情',\r\n        'mark' : 'マーク',\r\n        'blockquote': 'ブロック引用文',\r\n        'bold': '太字',\r\n        'code': 'コードを挿入',\r\n        'color': 'フォントの色',\r\n        'coloredText': 'カラー文字',\r\n        'hr': '水平線',\r\n        'image': 'イメージを挿入',\r\n        'externalImage': 'リンクを指定',\r\n        'uploadImage': 'アップロード',\r\n        'uploadFailed': 'アップロードが失敗しまいた',\r\n        'uploadError': 'アップロードエラー',\r\n        'imageUrl': 'イメージのURL',\r\n        'imageSize': 'イメージのサイズ',\r\n        'imageAlt': 'イメージの説明文',\r\n        'restoreImageSize': 'イメージのサイズを元に戻す',\r\n        'uploading': 'アップロード中',\r\n        'indent': 'インデントを増やす',\r\n        'outdent': 'インデントを減らす',\r\n        'italic': '斜体',\r\n        'link': 'リンクを挿入',\r\n        'linkText': 'リンクテキスト',\r\n        'linkUrl': 'リンクURL',\r\n        'linkTarget': 'リンクの表示先を指定',\r\n        'openLinkInCurrentWindow': '同じウィンドウで開く',\r\n        'openLinkInNewWindow': '新規ウインドウで開く',\r\n        'removeLink': 'リンクを削除',\r\n        'ol': '段落番号',\r\n        'ul': '箇条書き',\r\n        'strikethrough': '取消線',\r\n        'table': 'テーブル',\r\n        'deleteRow': '行を削除',\r\n        'insertRowAbove': '上に行を挿入',\r\n        'insertRowBelow': '下に行を挿入',\r\n        'deleteColumn': '列を削除',\r\n        'insertColumnLeft': '左に列を挿入',\r\n        'insertColumnRight': '右に列を挿入',\r\n        'deleteTable': 'テーブルを削除',\r\n        'title': 'タイトル',\r\n        'normalText': '標準',\r\n        'underline': '下線',\r\n        'alignment': '位置',\r\n        'alignCenter': '中央揃え',\r\n        'alignLeft': '左揃え',\r\n        'alignRight': '右揃え',\r\n        'selectLanguage': '言語を選択',\r\n        'fontScale': 'フォントのサイズ',\r\n        'fontScaleXLarge': '超大きいサイズ',\r\n        'fontScaleLarge': '大きいサイズ',\r\n        'fontScaleNormal': '通常サイズ',\r\n        'fontScaleSmall': '小さいサイズ',\r\n        'fontScaleXSmall': '超小さいサイズ',\r\n        \"video\": \"ビデオ\",\r\n        \"videoSize\" : \"サイズ\",\r\n        \"uploadVideoBtn\" : \"挿入\",\r\n        \"videoPlaceholder\": \"ビデオ埋め込みコード\"\r\n      },\r\n\r\n      translate : function() {\r\n        var args, key, ref, result;\r\n        key = arguments[0], args = 2 <= arguments.length ? Array.prototype.slice.call(arguments, 1) : [];\r\n        result = ((ref = i18n[this.locale]) != null ? ref[key] : void 0) || '';\r\n        if (!(args.length > 0)) {\r\n          return result;\r\n        }\r\n        result = result.replace(/([^%]|^)%(?:(\\d+)\\$)?s/g, function(p0, p, position) {\r\n          if (position) {\r\n            return p + args[parseInt(position) - 1];\r\n          } else {\r\n            return p + args.shift();\r\n          }\r\n        });\r\n        return result.replace(/%%s/g, '%s');\r\n      }\r\n\r\n    };\r\n\r\n    return i18n;\r\n});\ndefine('skylark-widgets-wordpad/ToolButton',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-widgets-base/Widget\",\r\n  \"./i18n\"\r\n],function(langx, $, Widget, i18n){ \r\n  var slice = [].slice;\r\n\r\n  var ToolButton = Widget.inherit( {\r\n\r\n    options : {\r\n      template: '<li><a tabindex=\"-1\" unselectable=\"on\" class=\"toolbar-item\" href=\"javascript:;\"><span></span></a></li>',\r\n\r\n      menu : {\r\n        menuWrapper: '<div class=\"toolbar-menu\"></div>',\r\n        menuItem: '<li><a tabindex=\"-1\" unselectable=\"on\" class=\"menu-item\" href=\"javascript:;\"><span></span></a></li>',\r\n        separator: '<li><span class=\"separator\"></span></li>'      \r\n      }\r\n\r\n    },\r\n\r\n    _construct : function(opts) {\r\n      this.action = opts.action;\r\n      this.toolbar = opts.toolbar;\r\n      this.editor = opts.toolbar.editor;\r\n      Widget.prototype._construct.call(this,opts);\r\n    },\r\n\r\n    _init : function() {\r\n      var k, len, ref, tag;\r\n      this.render();\r\n      var _this = this;\r\n      this.el.on('mousedown', function(e) {\r\n          var exceed, noFocus, param;\r\n          e.preventDefault();\r\n          noFocus = _this.needFocus && !_this.editor.editable.inputManager.focused;\r\n          if (_this.el.hasClass('disabled')) {\r\n            return false;\r\n          }\r\n          if (noFocus) {\r\n            _this.editor.focus();\r\n          }\r\n          if (_this.menu) {\r\n            _this.wrapper.toggleClass('menu-on').siblings('li').removeClass('menu-on');\r\n            if (_this.wrapper.is('.menu-on')) {\r\n              exceed = _this.menuWrapper.offset().left + _this.menuWrapper.outerWidth() + 5 - _this.editor.wrapper.offset().left - _this.editor.wrapper.outerWidth();\r\n              if (exceed > 0) {\r\n                _this.menuWrapper.css({\r\n                  'left': 'auto',\r\n                  'right': 0\r\n                });\r\n              }\r\n              _this.trigger('menuexpand');\r\n            }\r\n            return false;\r\n          }\r\n          param = _this.el.data('param');\r\n          _this.command(param);\r\n          return false;\r\n      });\r\n      this.wrapper.on('click', 'a.menu-item', function(e) {\r\n          var btn, noFocus, param;\r\n          e.preventDefault();\r\n          btn = $(e.currentTarget);\r\n          _this.wrapper.removeClass('menu-on');\r\n          noFocus = _this.needFocus && !_this.editor.editable.inputManager.focused;\r\n          if (btn.hasClass('disabled') || noFocus) {\r\n            return false;\r\n          }\r\n          _this.toolbar.wrapper.removeClass('menu-on');\r\n          param = btn.data('param');\r\n          _this.command(param);\r\n          return false;\r\n      });\r\n      this.wrapper.on('mousedown', 'a.menu-item', function(e) {\r\n        return false;\r\n      });\r\n\r\n      this.action.state.on(\"changed\", function(e,args) {\r\n        var updates = args.data;\r\n        if (updates[\"active\"] !== undefined) {\r\n          _this._doActive(updates[\"active\"].value);\r\n        }\r\n\r\n        if (updates[\"disabled\"] !== undefined) {\r\n          _this._doDisabled(updates[\"disabled\"].value);\r\n        }\r\n\r\n      });\r\n    },\r\n\r\n    _doActive : function(value) {\r\n      return this.el.toggleClass('active', value);\r\n    },\r\n\r\n    _doDisabled : function(value) {\r\n      return this.el.toggleClass('disabled', value);\r\n    },\r\n\r\n    iconClassOf : function(icon) {\r\n      if (icon) {\r\n        if (this.editor.options.classes.icons[icon]) {\r\n          return this.editor.options.classes.icons[icon];\r\n        } else {\r\n          return \"wordpad-icon wordpad-icon-\" + icon;\r\n        }\r\n      } else {\r\n        return '';\r\n      }\r\n    },\r\n\r\n    setIcon : function(icon) {\r\n      return this.el.find('span').removeClass().addClass(this.iconClassOf(icon)).text(this.text);\r\n    },\r\n\r\n    render : function() {\r\n\r\n      //this.wrapper = $(this._tpl.item).appendTo(this.toolbar.list);\r\n      this.toolbar.addToolItem(this);\r\n      this.wrapper = $(this._elm);\r\n\r\n      this.el = this.wrapper.find('a.toolbar-item');\r\n      this.el.attr('title', this.title).addClass(\"toolbar-item-\" + this.name).data('button', this);\r\n      this.setIcon(this.icon);\r\n      if (!this.menu) {\r\n        return;\r\n      }\r\n      this.menuWrapper = $(this.options.menu.menuWrapper).appendTo(this.wrapper);\r\n      this.menuWrapper.addClass(\"toolbar-menu-\" + this.name);\r\n      return this.renderMenu();\r\n    },\r\n\r\n    renderMenu : function() {\r\n      var $menuBtnEl, $menuItemEl, k, len, menuItem, ref, ref1, results;\r\n      if (!langx.isArray(this.menu)) {\r\n        return;\r\n      }\r\n      this.menuEl = $('<ul/>').appendTo(this.menuWrapper);\r\n      ref = this.menu;\r\n      results = [];\r\n      for (k = 0, len = ref.length; k < len; k++) {\r\n        menuItem = ref[k];\r\n        if (menuItem === '|') {\r\n          $(this.options.menu.separator).appendTo(this.menuEl);\r\n          continue;\r\n        }\r\n        $menuItemEl = $(this.options.menu.menuItem).appendTo(this.menuEl);\r\n        $menuBtnEl = $menuItemEl.find('a.menu-item').attr({\r\n          'title': (ref1 = menuItem.title) != null ? ref1 : menuItem.text,\r\n          'data-param': menuItem.param\r\n        }).addClass('menu-item-' + menuItem.name);\r\n        if (menuItem.icon) {\r\n          results.push($menuBtnEl.find('span').addClass(this.iconClassOf(menuItem.icon)));\r\n        } else {\r\n          results.push($menuBtnEl.find('span').text(menuItem.text));\r\n        }\r\n      }\r\n      return results;\r\n    },\r\n\r\n    command : function(params) {\r\n      this.action.execute(params);\r\n    },\r\n\r\n    \"name\" : {\r\n      get : function() {\r\n        return this.action.name;\r\n      }\r\n    },\r\n\r\n    \"icon\" : {\r\n      get : function() {\r\n        return this.action.icon;\r\n      }\r\n    },\r\n\r\n    \"title\" : {\r\n      get : function() {\r\n        return this.action.tooltip || i18n.translate(this.action.name);\r\n;\r\n      }\r\n    },\r\n\r\n    \"text\" : {\r\n      get : function() {\r\n        return this.action.text;\r\n      }\r\n    },\r\n\r\n    \"htmlTag\" : {\r\n      get : function() {\r\n        return this.action.htmlTag;\r\n      }\r\n    },\r\n\r\n    \"disableTag\" : {\r\n      get : function() {\r\n        return this.action.disableTag;\r\n      }\r\n    },\r\n\r\n    \"menu\" : {\r\n      get : function() {\r\n        return this.action.menu;\r\n      }\r\n    },\r\n\r\n    \"editable\" : {\r\n      get : function() {\r\n        return this._options.editable;\r\n      }\r\n    },\r\n\r\n    \"active\" : {\r\n      get : function() {\r\n        return this.action.active;\r\n      }\r\n    },\r\n\r\n    \"disabled\" : {\r\n      get : function() {\r\n        return this.action.disabled;\r\n      }\r\n    },\r\n\r\n    \"needFocus\" : {\r\n      get : function() {\r\n        return this.action.needFocus;\r\n      }\r\n    },\r\n\r\n\r\n    \"shortcut\" : {\r\n      get : function() {\r\n        return this.action.shortcut;\r\n      }\r\n    }\r\n\r\n\r\n  }); \r\n\r\n\r\n  return ToolButton;\r\n});\r\n\ndefine('skylark-widgets-wordpad/addons',[],function(){\r\n\treturn {\r\n\t    general : {\r\n\r\n\t    },\r\n\r\n\t    actions : {\r\n\r\n\t    },\r\n\r\n\t    toolbar : {\r\n\t      items : {\r\n\t        \r\n\t      }\r\n\t      \r\n\t    }  \t\t\r\n\t};\r\n});\ndefine('skylark-widgets-wordpad/Toolbar',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-widgets-swt/Toolbar\",\r\n  \"./ToolButton\",\r\n  \"./addons\"\r\n],function(langx,$,_Toolbar, ToolButton,addons){ \r\n\r\n  var Toolbar = _Toolbar.inherit({\r\n    pluginName : \"lark.wordpad.toolbar\",\r\n\r\n    _construct : function(editor,opts) {\r\n      this.editor =editor;\r\n      _Toolbar.prototype._construct.call(this,opts);\r\n    },\r\n\r\n    _init : function() {\r\n      _Toolbar.prototype._init.call(this);\r\n      this._render();\r\n    }\r\n\r\n  });\r\n\r\n  Toolbar.prototype._render = function() {\r\n    var k, len, name, ref;\r\n    this.buttons = [];\r\n    //this.wrapper = $(this._tpl.wrapper).prependTo(this.editor.wrapper);\r\n    this.wrapper = $(this._elm).prependTo(this.editor.wrapper);\r\n    ref = this.opts.toolbar;\r\n    for (k = 0, len = ref.length; k < len; k++) {\r\n      name = ref[k];\r\n      if (name === '|') {\r\n        this.addSeparator();\r\n        continue;\r\n      }\r\n\r\n      var action  = this.editor.findAction(name),\r\n          toolItemCtor = addons.toolbar.items[name];\r\n\r\n      if (!toolItemCtor) {\r\n        toolItemCtor = ToolButton;\r\n      }\r\n\r\n      this.buttons.push(new toolItemCtor({\r\n        \"action\" : action,\r\n        \"toolbar\" : this\r\n      }));\r\n    }\r\n    if (this.opts.toolbarHidden) {\r\n      return this.wrapper.hide();\r\n    }\r\n  };\r\n\r\n  Toolbar.prototype.findButton = function(name) {\r\n    var button;\r\n    button = this.list.find('.toolbar-item-' + name).data('button');\r\n    return button != null ? button : null;\r\n  };\r\n\r\n  Toolbar.addButton = function(btn) {\r\n    return this.buttons[btn.prototype.name] = btn;\r\n  };\r\n\r\n  Toolbar.buttons = {};\r\n\r\n  return Toolbar;\r\n\r\n});\ndefine('skylark-widgets-wordpad/uploader',[\n  \"skylark-langx/langx\",\n  \"skylark-domx-query\",\n  \"skylark-net-http/Xhr\"\n],function(langx,$,Xhr){ \n\n  var Uploader = langx.Evented.inherit({\n    init : function(options){\n      this.options = langx.mixin({},this.options,options);\n\n      this.files = [];\n      this.queue = [];\n      this.id = ++Uploader.count;\n      this.on('uploadcomplete', (function(_this) {\n        return function(e, file) {\n          _this.files.splice(langx.inArray(file, _this.files), 1);\n          if (_this.queue.length > 0 && _this.files.length < _this.options.connectionCount) {\n            return _this.upload(_this.queue.shift());\n          } else {\n            return _this.uploading = false;\n          }\n        };\n      })(this));\n      $(window).on('beforeunload.uploader-' + this.id, (function(_this) {\n        return function(e) {\n          if (!_this.uploading) {\n            return;\n          }\n          e.originalEvent.returnValue = _this._t('leaveConfirm');\n          return _this._t('leaveConfirm');  \n        };\n      })(this));\n    }\n\n  });\n\n  Uploader.count = 0;\n\n  Uploader.prototype.options = {\n    url: '',\n    params: null,\n    fileKey: 'upload_file',\n    connectionCount: 3,\n    headers: null\n  };\n\n\n\n  Uploader.prototype.generateId = (function() {\n    var id;\n    id = 0;\n    return function() {\n      return id += 1;\n    };\n  })();\n\n  Uploader.prototype.upload = function(file, options) {\n    var f, i, key, len;\n    if (options == null) {\n      options = {};\n    }\n    if (file == null) {\n      return;\n    }\n    if (langx.isArray(file) || file instanceof FileList) {\n      for (i = 0, len = file.length; i < len; i++) {\n        f = file[i];\n        this.upload(f, options);\n      }\n    } else if ($(file).is('input:file')) {\n      key = $(file).attr('name');\n      if (key) {\n        options.fileKey = key;\n      }\n      this.upload(langx.makeArray($(file)[0].files), options);\n    } else if (!file.id || !file.obj) {\n      file = this.getFile(file);\n    }\n    if (!(file && file.obj)) {\n      return;\n    }\n    langx.extend(file, options);\n    if (this.files.length >= this.options.connectionCount) {\n      this.queue.push(file);\n      return;\n    }\n    if (this.trigger('beforeupload', file) === false) {\n      return;\n    }\n    this.files.push(file);\n    this._xhrUpload(file);\n    return this.uploading = true;\n  };\n\n  Uploader.prototype.getFile = function(fileObj) {\n    var name, ref, ref1;\n    if (fileObj instanceof window.File || fileObj instanceof window.Blob) {\n      name = (ref = fileObj.fileName) != null ? ref : fileObj.name;\n    } else {\n      return null;\n    }\n    return {\n      id: this.generateId(),\n      url: this.options.url,\n      params: this.options.params,\n      fileKey: this.options.fileKey,\n      name: name,\n      headers : this.options.headers,\n      size: (ref1 = fileObj.fileSize) != null ? ref1 : fileObj.size,\n      ext: name ? name.split('.').pop().toLowerCase() : '',\n      obj: fileObj\n    };\n  };\n\n  Uploader.prototype._xhrUpload = function(file) {\n    var formData, k, ref, v;\n    formData = new FormData();\n    formData.append(file.fileKey, file.obj);\n    formData.append(\"original_filename\", file.name);\n    if (file.params) {\n      ref = file.params;\n      for (k in ref) {\n        v = ref[k];\n        formData.append(k, v);\n      }\n    }\n\n    //TODO\n    var xhr =  file.xhr = new Xhr({\n      url: this.options.url\n    });\n\n    var headers = {\n        'X-File-Name': encodeURIComponent(file.name)\n    };\n\n    if (file.headers) {\n      ref = file.headers;\n      for (k in ref) {\n        v = ref[k];\n        headers[k] =  v;\n      }\n    }\n\n    var _this = this;\n\n    xhr.post({\n      data: formData,\n      processData: false,\n      contentType: false,\n      headers: headers\n    }).progress(function(e){\n      if (!e.lengthComputable) {\n        return;\n      }\n      return _this.trigger('uploadprogress', file, e.loaded, e.total);\n    }).then(function(result){\n      _this.trigger('uploadsuccess', file, result);\n\n      _this.trigger('uploadcomplete');\n\n    }).catch(function(e,status){\n      _this.trigger('uploaderror', file,xhr);\n      _this.trigger('uploadcomplete');\n    });\n\n    return xhr;\n  };\n\n  Uploader.prototype.cancel = function(file) {\n    var f, i, len, ref;\n    if (!file.id) {\n      ref = this.files;\n      for (i = 0, len = ref.length; i < len; i++) {\n        f = ref[i];\n        if (f.id === file * 1) {\n          file = f;\n          break;\n        }\n      }\n    }\n    this.trigger('uploadcancel', [file]);\n    if (file.xhr) {\n      file.xhr.abort();\n    }\n    return file.xhr = null;\n  };\n\n\n  Uploader.prototype.destroy = function() {\n    var file, i, len, ref;\n    this.queue.length = 0;\n    ref = this.files;\n    for (i = 0, len = ref.length; i < len; i++) {\n      file = ref[i];\n      this.cancel(file);\n    }\n    $(window).off('.uploader-' + this.id);\n    return $(document).off('.uploader-' + this.id);\n  };\n\n  Uploader.i18n = {\n    'zh-CN': {\n      leaveConfirm: '正在上传文件，如果离开上传会自动取消'\n    }\n  };\n\n  Uploader.locale = 'zh-CN';\n\n  return  function(options) {\n    return new Uploader(options);\n  };\n\n});\n\ndefine('skylark-widgets-wordpad/Wordpad',[\n  \"skylark-langx/skylark\",\n  \"skylark-langx/langx\",\n  \"skylark-domx-query\",\n  \"skylark-domx-contents/Editable\",\n  \"skylark-widgets-base/Widget\",\n  \"./Toolbar\",\n  \"./uploader\",\n  \"./i18n\",\n  \"./addons\"\n\n],function(skylark,langx, $, Editable,Widget,Toolbar,uploader,i18n,addons){ \n\n  var Wordpad = Widget.inherit({\n      klassName : \"Wordpad\",\n      pluginName : \"lark.wordpad\",\n\n      options : {\n        classes : {\n          icons : {\n            html : \"fa fa-html5\",\n            \n            header: \"fa fa-header\",\n\n            bold : \"fa fa-bold\",\n            italic : \"fa fa-italic\",\n            underline: \"fa fa-underline\",\n            strikethrough : \"fa fa-strikethrough\",\n            fontScale: \"fa fa-text-height\",\n            fontColor: \"fa fa-font\",\n            mark : \"fa fa-pencil\",\n\n            blockquote: \"fa fa-quote-right\",\n            listul : \"fa fa-list-ul\",\n            listol : \"fa fa-list-ol\",\n            code: \"fa fa-code\",\n            table : \"fa fa-table\",\n\n            fullscreen : \"fa fa-expand\",\n\n            emoji: \"fa fa-smile-o\",\n            link : \"fa fa-link\",\n            image: \"fa fa-picture-o\",\n            video: \"fa fa-video-camera\",\n            hr: \"fa fa-minus\",\n\n            indent: \"fa fa-indent\",\n            outdent: \"fa fa-dedent\",\n            alignLeft: \"fa fa-align-left\",\n            alignCenter: \"fa fa-align-center\",\n            alignRight: \"fa fa-align-right\",\n            alignJustify: \"fa fa-align-justify\",\n\n          }\n        },\n        srcNodeRef: null,\n        placeholder: '',\n        addons : {\n          actions : {\n            image : {\n               placeholderImage: 'images/image.png',\n            },\n            video : {\n              placeholderPoster: \"images/poster.jpg\"\n            }\n          },\n          toolbar : {\n            items : {\n              emoji : {\n\n              }\n            }\n          }\n        },\n       \n        params: {},\n        upload: false,\n        template : \"<div class=\\\"lark-wordpad\\\">\\n  <div class=\\\"wordpad-wrapper\\\">\\n    <div class=\\\"wordpad-placeholder\\\"></div>\\n    <div class=\\\"wordpad-body\\\" contenteditable=\\\"true\\\">\\n    </div>\\n  </div>\\n</div>\"\n      },\n\n\n    _init : function() {\n      this._actions = [];\n\n      //this.opts = langx.extend({}, this.opts, opts);\n      this.opts = this.options;\n\n      var e, editor, uploadOpts;\n      this.textarea = $(this.options.srcNodeRef);\n\n      this.options.placeholder = this.options.placeholder || this.textarea.attr('placeholder');\n\n      if (!this.textarea.length) {\n        throw new Error('Wordpad: param textarea is required.');\n        return;\n      }\n\n      editor = this.textarea.data('wordpad');\n      if (editor != null) {\n        editor.destroy();\n      }\n      this.id = ++Wordpad.count;\n      this._render();\n\n\n      var self = this;\n      this.editable = new Editable(this._elm,{\n        classPrefix : \"lark-wordpad-\",\n        textarea : this.textarea,\n        body : this.body\n      });\n\n      // TODO\n      this.editable.on(\"all\",function(e,data){\n        return self.trigger(e.type,data);\n      });\n\n      if (this.options.upload && uploader) {\n        uploadOpts = typeof this.options.upload === 'object' ? this.options.upload : {};\n        this.uploader = uploader(uploadOpts);\n      }\n\n      this.toolbar = new Toolbar(this,{\n        toolbar: this.options.toolbar,\n        toolbarFloat:  this.options.toolbarFloat,\n        toolbarHidden:  this.options.toolbarHidden,\n        toolbarFloatOffset:  this.options.toolbarFloatOffset\n\n      });\n\n      if (this.options.placeholder) {\n        this.on('valuechanged', function() {\n          return self._placeholder();\n        });\n      }\n      this.setValue(this.textarea.val().trim() || '');\n      if (this.textarea.attr('autofocus')) {\n        return self.focus();\n      }\n\n\n    }\n  });\n\n \n  Wordpad.prototype.triggerHandler =  Wordpad.prototype.trigger = function(type,data) {\n    var args, ref;\n    args = [type];\n    if (data) {\n      args = args.concat(data);\n    }\n    langx.Evented.prototype.trigger.apply(this, args);\n    return this;\n  };\n\n\n  //Wordpad.connect(Util);\n\n  //Wordpad.connect(InputManager);\n\n  //Wordpad.connect(Selection);\n\n  //Wordpad.connect(UndoManager);\n\n  //Wordpad.connect(Keystroke);\n\n  //Wordpad.connect(Formatter);\n\n  //Wordpad.connect(Toolbar);\n\n  //Wordpad.connect(Indentation);\n\n  //Wordpad.connect(Clipboard);\n\n  Wordpad.count = 0;\n\n\n  Wordpad.prototype._render = function() {\n    var key, ref, results, val;\n\n    //this.el = $(this._tpl).insertBefore(this.textarea);\n    this.el = $(this._elm).insertBefore (this.textarea);\n\n    this.wrapper = this.el.find('.wordpad-wrapper');\n    this.body = this.wrapper.find('.wordpad-body');\n    this.placeholderEl = this.wrapper.find('.wordpad-placeholder').append(this.options.placeholder);\n    this.el.data('wordpad', this);\n    this.wrapper.append(this.textarea);\n    this.textarea.data('wordpad', this).blur();\n    this.body.attr('tabindex', this.textarea.attr('tabindex'));\n\n    if (this.options.params) {\n      ref = this.options.params;\n      results = [];\n      for (key in ref) {\n        val = ref[key];\n        results.push($('<input/>', {\n          type: 'hidden',\n          name: key,\n          value: val\n        }).insertAfter(this.textarea));\n      }\n      return results;\n    }\n  };\n\n  Wordpad.prototype._placeholder = function() {\n    var children;\n    children = this.body.children();\n    if (children.length === 0 || (children.length === 1 && this.editable.util.isEmptyNode(children) && parseInt(children.css('margin-left') || 0) < this.options.indentWidth)) {\n      return this.placeholderEl.show();\n    } else {\n      return this.placeholderEl.hide();\n    }\n  };\n\n  Wordpad.prototype.setValue = function(val) {\n    this.hidePopover();\n\n    this.editable.setValue(val);\n\n    return this.trigger('valuechanged');\n  };\n\n  Wordpad.prototype.getValue = function() {\n    return this.editable.getValue();\n  };\n\n  Wordpad.prototype.sync = function() {\n    this.editable.sync();\n    return this;\n  };\n\n  Wordpad.prototype.focus = function() {\n    this.editable.focus();\n    return this;\n  };\n\n  Wordpad.prototype.blur = function() {\n    this.editable.blur();\n    return this;\n  };\n\n  Wordpad.prototype.findAction = function(name) {\n    var action = this._actions[name];\n    if (!action) {\n      if (!this.constructor.addons.actions[name]) {\n        throw new Error(\"Wordpad: invalid action \" + name);\n      }\n\n      action = this._actions[name] = new this.constructor.addons.actions[name]({\n        editor: this\n      });\n\n      this._actions.push(action);\n    }\n\n    return action;\n  };\n\n  Wordpad.prototype.hidePopover = function() {\n    return this.el.find('.wordpad-popover').each(function(i, popover) {\n      popover = $(popover).data('popover');\n      if (popover.active) {\n        return popover.hide();\n      }\n    });\n  };\n\n  Wordpad.prototype.destroy = function() {\n    this.trigger('destroy');\n    this.textarea.closest('form').off('.Wordpad .wordpad-' + this.id);\n    this.selection.clear();\n    this.inputManager.focused = false;\n    this.textarea.insertBefore(this.el).hide().val('').removeData('wordpad');\n    this.el.remove();\n    $(document).off('.wordpad-' + this.id);\n    $(window).off('.wordpad-' + this.id);\n    return this.off();\n  };\n\n\n  Wordpad.Toolbar = Toolbar;\n\n  Wordpad.i18n = i18n;\n\n  Wordpad.addons = addons;\n\n\n  return skylark.attach(\"widgets.Wordpad\",Wordpad);\n\n});\n\ndefine('skylark-widgets-wordpad/Action',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-widgets-base/Action\",\r\n  \"./Wordpad\",\r\n  \"./i18n\"\r\n],function(langx, _Action, Wordpad,i18n){ \r\n  var slice = [].slice;\r\n\r\n  var Action = _Action.inherit( {\r\n    htmlTag : '',\r\n\r\n    disableTag : '',\r\n\r\n    menu : false,\r\n\r\n    active : {\r\n      get : function() {\r\n        return this.state.get(\"active\");\r\n      },\r\n\r\n      set : function(value) {\r\n        return this.state.set(\"active\",value);\r\n\r\n      }\r\n\r\n    },\r\n\r\n    disabled : {\r\n      get : function() {\r\n        return this.state.get(\"disabled\");\r\n      },\r\n\r\n      set : function(value) {\r\n        return this.state.set(\"disabled\",value);\r\n\r\n      }\r\n    },\r\n\r\n    needFocus : true,\r\n\r\n    _construct  : function(opts) {\r\n      _Action.prototype._construct.apply(this,arguments);\r\n      //this.toolbar = opts.toolbar;\r\n      //this.editor = this.toolbar.editor;\r\n      this.title = i18n.translate(this.name);\r\n\r\n      var _this = this;\r\n\r\n      this.editor.on('blur', function() {\r\n        var editorActive;\r\n        editorActive = _this.editor.body.is(':visible') && _this.editor.body.is('[contenteditable]');\r\n        if (!(editorActive && !_this.editor.editable.clipboard.pasting)) {\r\n          return;\r\n        }\r\n        _this.setActive(false);\r\n        return _this.setDisabled(false);\r\n      });\r\n\r\n      if (this.shortcut != null) {\r\n        this.editor.editable.hotkeys.add(this.shortcut, function(e) {\r\n          //_this.el.mousedown();\r\n          _this.execute();\r\n          return false;\r\n        });\r\n      }\r\n\r\n      var ref = this.htmlTag.split(',');\r\n      for (k = 0, len = ref.length; k < len; k++) {\r\n        tag = ref[k];\r\n        tag = langx.trim(tag);\r\n        if (tag && langx.inArray(tag, this.editor.editable.formatter._allowedTags) < 0) {\r\n          this.editor.editable.formatter._allowedTags.push(tag);\r\n        }\r\n      }\r\n      this.editor.on('selectionchanged', function(e) {\r\n        if (_this.editor.editable.inputManager.focused) {\r\n          return _this._status();\r\n        }\r\n      });\r\n\r\n      this._init();\r\n    },\r\n\r\n    _init : function() {\r\n\r\n\r\n    },\r\n\r\n    _disableStatus : function() {\r\n      var disabled, endNodes, startNodes;\r\n      startNodes = this.editor.editable.selection.startNodes();\r\n      endNodes = this.editor.editable.selection.endNodes();\r\n      disabled = startNodes.filter(this.disableTag).length > 0 || endNodes.filter(this.disableTag).length > 0;\r\n      this.setDisabled(disabled);\r\n      if (this.disabled) {\r\n        this.setActive(false);\r\n      }\r\n      return this.disabled;\r\n    },\r\n\r\n    _activeStatus : function() {\r\n      var active, endNode, endNodes, startNode, startNodes;\r\n      startNodes = this.editor.editable.selection.startNodes();\r\n      endNodes = this.editor.editable.selection.endNodes();\r\n      startNode = startNodes.filter(this.htmlTag);\r\n      endNode = endNodes.filter(this.htmlTag);\r\n      active = startNode.length > 0 && endNode.length > 0 && startNode.is(endNode);\r\n      this.node = active ? startNode : null;\r\n      this.setActive(active);\r\n      return this.active;\r\n    },\r\n\r\n    _status : function() {\r\n      this._disableStatus();\r\n      if (this.disabled) {\r\n        return;\r\n      }\r\n      return this._activeStatus();\r\n    },\r\n\r\n    setActive : function(active) {\r\n      if (active === this.active) {\r\n        return;\r\n      }\r\n      this.active = active;\r\n    },\r\n\r\n    setDisabled : function(disabled) {\r\n      if (disabled === this.disabled) {\r\n        return;\r\n      }\r\n      this.disabled = disabled;\r\n    }\r\n  }); \r\n\r\n\r\n  Action.prototype._t = i18n.translate;\r\n\r\n  Action.i18n = i18n;\r\n  \r\n  return Action;\r\n\r\n});\ndefine('skylark-widgets-wordpad/Popover',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"./Wordpad\",\r\n  \"./i18n\"\r\n],function(langx,$,Wordpad,i18n){ \r\n\r\n  var Popover = langx.Evented.inherit({\r\n     init : function(opts) {\r\n      this.action = opts.action;\r\n      this.editor = opts.action.editor;\r\n      this._init();\r\n    }\r\n  });\r\n\r\n\r\n  Popover.prototype.offset = {\r\n    top: 4,\r\n    left: 0\r\n  };\r\n\r\n  Popover.prototype.target = null;\r\n\r\n  Popover.prototype.active = false;\r\n\r\n  Popover.prototype._init = function() {\r\n    this.el = $('<div class=\"wordpad-popover\"></div>').appendTo(this.editor.el).data('popover', this);\r\n    this.render();\r\n    this.el.on('mouseenter', (function(_this) {\r\n      return function(e) {\r\n        return _this.el.addClass('hover');\r\n      };\r\n    })(this));\r\n    return this.el.on('mouseleave', (function(_this) {\r\n      return function(e) {\r\n        return _this.el.removeClass('hover');\r\n      };\r\n    })(this));\r\n  };\r\n\r\n  Popover.prototype.render = function() {};\r\n\r\n  Popover.prototype._initLabelWidth = function() {\r\n    var $fields;\r\n    $fields = this.el.find('.settings-field');\r\n    if (!($fields.length > 0)) {\r\n      return;\r\n    }\r\n    this._labelWidth = 0;\r\n    $fields.each((function(_this) {\r\n      return function(i, field) {\r\n        var $field, $label;\r\n        $field = $(field);\r\n        $label = $field.find('label');\r\n        if (!($label.length > 0)) {\r\n          return;\r\n        }\r\n        return _this._labelWidth = Math.max(_this._labelWidth, $label.width());\r\n      };\r\n    })(this));\r\n    return $fields.find('label').width(this._labelWidth);\r\n  };\r\n\r\n  Popover.prototype.show = function($target, position) {\r\n    if (position == null) {\r\n      position = 'bottom';\r\n    }\r\n    if ($target == null) {\r\n      return;\r\n    }\r\n    this.el.siblings('.wordpad-popover').each(function(i, popover) {\r\n      popover = $(popover).data('popover');\r\n      if (popover.active) {\r\n        return popover.hide();\r\n      }\r\n    });\r\n    if (this.active && this.target) {\r\n      this.target.removeClass('selected');\r\n    }\r\n    this.target = $target.addClass('selected');\r\n    if (this.active) {\r\n      this.refresh(position);\r\n      return this.trigger('popovershow');\r\n    } else {\r\n      this.active = true;\r\n      this.el.css({\r\n        left: -9999\r\n      }).show();\r\n      if (!this._labelWidth) {\r\n        this._initLabelWidth();\r\n      }\r\n      this.editor.editable.util.reflow();\r\n      this.refresh(position);\r\n      return this.trigger('popovershow');\r\n    }\r\n  };\r\n\r\n  Popover.prototype.hide = function() {\r\n    if (!this.active) {\r\n      return;\r\n    }\r\n    if (this.target) {\r\n      this.target.removeClass('selected');\r\n    }\r\n    this.target = null;\r\n    this.active = false;\r\n    this.el.hide();\r\n    return this.trigger('popoverhide');\r\n  };\r\n\r\n  Popover.prototype.refresh = function(position) {\r\n    var editorOffset, left, maxLeft, targetH, targetOffset, top;\r\n    if (position == null) {\r\n      position = 'bottom';\r\n    }\r\n    if (!this.active) {\r\n      return;\r\n    }\r\n    editorOffset = this.editor.el.offset();\r\n    targetOffset = this.target.offset();\r\n    targetH = this.target.outerHeight();\r\n    if (position === 'bottom') {\r\n      top = targetOffset.top - editorOffset.top + targetH;\r\n    } else if (position === 'top') {\r\n      top = targetOffset.top - editorOffset.top - this.el.height();\r\n    }\r\n    maxLeft = this.editor.wrapper.width() - this.el.outerWidth() - 10;\r\n    left = Math.min(targetOffset.left - editorOffset.left, maxLeft);\r\n    return this.el.css({\r\n      top: top + this.offset.top,\r\n      left: left + this.offset.left\r\n    });\r\n  };\r\n\r\n  Popover.prototype.destroy = function() {\r\n    this.target = null;\r\n    this.active = false;\r\n    this.editor.off('.linkpopover');\r\n    return this.el.remove();\r\n  };\r\n\r\n  Popover.prototype._t = function(name) {\r\n    var args, ref, result;\r\n    args = 1 <= arguments.length ? Array.prototype.slice.call(arguments, 0) : [];\r\n    result = i18n.translate.apply(i18n, args);\r\n    return result;\r\n  };\r\n\r\n  Wordpad.Popover = Popover;\r\n\r\n  return Popover;\r\n\r\n\t\r\n});\ndefine('skylark-widgets-wordpad/addons/actions/AlignmentAction',[\r\n  \"skylark-domx-query\",\r\n  \"../../addons\",\r\n  \"../../Action\",\r\n  \"../../i18n\"\r\n],function($,addons,Action,i18n){ \r\n  var AlignmentAction = Action.inherit({\r\n    name : \"alignment\",\r\n\r\n    icon : 'alignLeft',\r\n    \r\n    htmlTag : 'p, h1, h2, h3, h4, td, th',\r\n\r\n    _init : function() {\r\n     Action.prototype._init.call(this);\r\n     this.menu = [\r\n          {\r\n            name: 'left',\r\n            text: i18n.translate('alignLeft'),\r\n            icon: 'alignLeft',\r\n            param: 'left'\r\n          }, {\r\n            name: 'center',\r\n            text: i18n.translate('alignCenter'),\r\n            icon: 'alignCenter',\r\n            param: 'center'\r\n          }, {\r\n            name: 'right',\r\n            text: i18n.translate('alignRight'),\r\n            icon: 'alignRight',\r\n            param: 'right'\r\n          }\r\n      ] ;    \r\n    },\r\n\r\n\r\n    _execute : function(align) {\r\n      return this.editor.editable.alignment(align,this.htmlTag);\r\n    },\r\n\r\n    setActive : function(align) {\r\n      if (align == null) {\r\n        align = 'left';\r\n      }\r\n      if (align !== 'left' && align !== 'center' && align !== 'right') {\r\n        align = 'left';\r\n      }\r\n      Action.prototype.setActive.call(this, align);\r\n   },\r\n\r\n    _status : function() {\r\n      var value = this.editor.editable.status(\"alignment\",this.htmlTag);\r\n      if (value) {\r\n        this.setDisabled(false);\r\n        return this.setActive(value);\r\n      } else {\r\n        this.setDisabled(true);\r\n        return this.setActive(\"left\");\r\n      }    \r\n    }\r\n  });\r\n \r\n  return addons.actions.alignment = AlignmentAction;\r\n});\ndefine('skylark-widgets-wordpad/addons/actions/BlockquoteAction',[\r\n  \"skylark-domx-query\",\r\n  \"../../addons\",\r\n  \"../../Action\"\r\n],function($,addons,Action){ \r\n   var BlockquoteAction = Action.inherit({\r\n      name : 'blockquote',\r\n\r\n      icon : 'blockquote',\r\n\r\n      htmlTag : 'blockquote',\r\n\r\n      disableTag : 'pre, table',\r\n\r\n      _execute : function() {\r\n        return this.editor.editable.blockquote(this.disableTag);\r\n      }\r\n   });\r\n\r\n\r\n   addons.actions.blockquote = BlockquoteAction; \r\n\r\n   return BlockquoteAction;\r\n});\ndefine('skylark-widgets-wordpad/addons/actions/BoldAction',[\r\n  \"skylark-domx-query\",\r\n  \"../../addons\",\r\n  \"../../Action\"\r\n],function($,addons,Action){ \r\n  \r\n    var BoldAction = Action.inherit({\r\n      name : 'bold',\r\n\r\n      icon : 'bold',\r\n\r\n      htmlTag : 'b, strong',\r\n\r\n      disableTag : 'pre',\r\n\r\n      shortcut : 'cmd+b',\r\n\r\n      _init : function() {\r\n        if (this.editor.editable.util.os.mac) {\r\n          this.title = this.title + ' ( Cmd + b )';\r\n        } else {\r\n          this.title = this.title + ' ( Ctrl + b )';\r\n          this.shortcut = 'ctrl+b';\r\n        }\r\n        return Action.prototype._init.call(this);\r\n      },\r\n\r\n      _activeStatus : function() {\r\n        var active;\r\n        active = this.editor.editable.isActive('bold');\r\n        this.setActive(active);\r\n        return this.active;\r\n      },\r\n\r\n      _execute : function() {\r\n        return this.editor.editable.bold();\r\n      }\r\n\r\n    });\r\n\r\n\r\n    addons.actions.bold = BoldAction; \r\n\r\n    return BoldAction;\r\n});\ndefine('skylark-widgets-wordpad/addons/actions/CodePopover',[\r\n  \"skylark-domx-query\",\r\n  \"../../addons\",\r\n  \"../../Popover\"\r\n],function($,addons,Popover){ \r\n  \r\n   var CodePopover = Popover.inherit({\r\n     render : function() {\r\n      var $option, k, lang, len, ref;\r\n      this._tpl = \"<div class=\\\"code-settings\\\">\\n  <div class=\\\"settings-field\\\">\\n    <select class=\\\"select-lang\\\">\\n      <option value=\\\"-1\\\">\" + (this._t('selectLanguage')) + \"</option>\\n    </select>\\n  </div>\\n</div>\";\r\n      this.langs = this.editor.options.codeLanguages || [\r\n        {\r\n          name: 'Bash',\r\n          value: 'bash'\r\n        }, {\r\n          name: 'C++',\r\n          value: 'c++'\r\n        }, {\r\n          name: 'C#',\r\n          value: 'cs'\r\n        }, {\r\n          name: 'CSS',\r\n          value: 'css'\r\n        }, {\r\n          name: 'Erlang',\r\n          value: 'erlang'\r\n        }, {\r\n          name: 'Less',\r\n          value: 'less'\r\n        }, {\r\n          name: 'Sass',\r\n          value: 'sass'\r\n        }, {\r\n          name: 'Diff',\r\n          value: 'diff'\r\n        }, {\r\n          name: 'CoffeeScript',\r\n          value: 'coffeescript'\r\n        }, {\r\n          name: 'HTML,XML',\r\n          value: 'html'\r\n        }, {\r\n          name: 'JSON',\r\n          value: 'json'\r\n        }, {\r\n          name: 'Java',\r\n          value: 'java'\r\n        }, {\r\n          name: 'JavaScript',\r\n          value: 'js'\r\n        }, {\r\n          name: 'Markdown',\r\n          value: 'markdown'\r\n        }, {\r\n          name: 'Objective C',\r\n          value: 'oc'\r\n        }, {\r\n          name: 'PHP',\r\n          value: 'php'\r\n        }, {\r\n          name: 'Perl',\r\n          value: 'parl'\r\n        }, {\r\n          name: 'Python',\r\n          value: 'python'\r\n        }, {\r\n          name: 'Ruby',\r\n          value: 'ruby'\r\n        }, {\r\n          name: 'SQL',\r\n          value: 'sql'\r\n        }\r\n      ];\r\n      this.el.addClass('code-popover').append(this._tpl);\r\n      this.selectEl = this.el.find('.select-lang');\r\n      ref = this.langs;\r\n      for (k = 0, len = ref.length; k < len; k++) {\r\n        lang = ref[k];\r\n        $option = $('<option/>', {\r\n          text: lang.name,\r\n          value: lang.value\r\n        }).appendTo(this.selectEl);\r\n      }\r\n      this.selectEl.on('change', (function(_this) {\r\n        return function(e) {\r\n          var selected;\r\n          _this.lang = _this.selectEl.val();\r\n          selected = _this.target.hasClass('selected');\r\n          _this.target.removeClass().removeAttr('data-lang');\r\n          if (_this.lang !== -1) {\r\n            _this.target.attr('data-lang', _this.lang);\r\n          }\r\n          if (selected) {\r\n            _this.target.addClass('selected');\r\n          }\r\n          return _this.editor.trigger('valuechanged');\r\n        };\r\n      })(this));\r\n      return this.editor.on('valuechanged', (function(_this) {\r\n        return function(e) {\r\n          if (_this.active) {\r\n            return _this.refresh();\r\n          }\r\n        };\r\n      })(this));\r\n    },\r\n\r\n    show : function() {\r\n      var args;\r\n      args = 1 <= arguments.length ? Array.prototype.slice.call(arguments, 0) : [];\r\n      Popover.prototype.show.apply(this, args);\r\n      this.lang = this.target.attr('data-lang');\r\n      if (this.lang != null) {\r\n        return this.selectEl.val(this.lang);\r\n      } else {\r\n        return this.selectEl.val(-1);\r\n      }\r\n    }\r\n   });\r\n\r\n  return CodePopover;\r\n});\ndefine('skylark-widgets-wordpad/addons/actions/CodeAction',[\r\n  \"skylark-domx-query\",\r\n  \"../../addons\",\r\n  \"../../Action\",\r\n  \"./CodePopover\"\r\n],function($,addons,Action,CodePopover){ \r\n  \r\n\r\n   var CodeAction = Action.inherit({\r\n      name : 'code',\r\n\r\n      icon : 'code',\r\n\r\n      htmlTag : 'pre',\r\n\r\n      disableTag : 'ul, ol, table',\r\n\r\n      _init : function() {\r\n        Action.prototype._init.call(this);\r\n        this.editor.on('decorate', (function(_this) {\r\n          return function(e, $el) {\r\n            return $el.find('pre').each(function(i, pre) {\r\n              return _this.decorate($(pre));\r\n            });\r\n          };\r\n        })(this));\r\n        return this.editor.on('undecorate', (function(_this) {\r\n          return function(e, $el) {\r\n            return $el.find('pre').each(function(i, pre) {\r\n              return _this.undecorate($(pre));\r\n            });\r\n          };\r\n        })(this));\r\n      },\r\n\r\n      _checkMode : function() {\r\n        var $blockNodes, range;\r\n        range = this.editor.editable.selection.range();\r\n        if (($blockNodes = $(range.cloneContents()).find(this.editor.editable.util.blockNodes.join(','))) > 0 || (range.collapsed && this.editor.editable.selection.startNodes().filter('code').length === 0)) {\r\n          this.inlineMode = false;\r\n          return this.htmlTag = 'pre';\r\n        } else {\r\n          this.inlineMode = true;\r\n          return this.htmlTag = 'code';\r\n        }\r\n      },\r\n\r\n      _status : function() {\r\n        this._checkMode();\r\n        Action.prototype._status.call(this);\r\n        if (this.inlineMode) {\r\n          return;\r\n        }\r\n        if (this.active) {\r\n          if (!this.popover) {\r\n            this.popover = new CodePopover({\r\n              action: this\r\n            });\r\n          }\r\n          return this.popover.show(this.node);\r\n        } else {\r\n          if (this.popover) {\r\n            return this.popover.hide();\r\n          }\r\n        }\r\n      },\r\n\r\n      decorate : function($pre) {\r\n        var $code, lang, ref, ref1;\r\n        $code = $pre.find('> code');\r\n        if ($code.length > 0) {\r\n          lang = (ref = $code.attr('class')) != null ? (ref1 = ref.match(/lang-(\\S+)/)) != null ? ref1[1] : void 0 : void 0;\r\n          $code.contents().unwrap();\r\n          if (lang) {\r\n            return $pre.attr('data-lang', lang);\r\n          }\r\n        }\r\n      },\r\n\r\n      undecorate : function($pre) {\r\n        var $code, lang;\r\n        lang = $pre.attr('data-lang');\r\n        $code = $('<code/>');\r\n        if (lang && lang !== -1) {\r\n          $code.addClass('lang-' + lang);\r\n        }\r\n        return $pre.wrapInner($code).removeAttr('data-lang');\r\n      },\r\n\r\n      _execute : function() {\r\n        if (this.inlineMode) {\r\n          return this._inlineCommand();\r\n        } else {\r\n          return this._blockCommand();\r\n        }\r\n      },\r\n\r\n      _blockCommand : function() {\r\n        return this.editor.editable.blockCode(this.htmlTag,this.disableTag);\r\n      },\r\n\r\n      _inlineCommand : function() {\r\n        return this.editor.editable.inlineCode(this.active);\r\n      }\r\n   });\r\n\r\n\r\n   addons.actions.code = CodeAction; \r\n\r\n   return CodeAction;\r\n\r\n});\ndefine('skylark-widgets-wordpad/addons/actions/ColorAction',[\r\n  \"skylark-domx-query\",\r\n  \"../../addons\",\r\n  \"../../Action\",\r\n  \"../../i18n\"\r\n],function($,addons,Action,i18n){ \r\n  \r\n\r\n   var ColorAction = Action.inherit({\r\n    name : 'color',\r\n\r\n    icon : 'fontColor',\r\n\r\n    disableTag : 'pre',\r\n\r\n    menu : true\r\n\r\n   });\r\n\r\n   addons.actions.color = ColorAction; \r\n\r\n\r\n   return ColorAction;\r\n\t\r\n});\ndefine('skylark-widgets-wordpad/addons/actions/EmojiAction',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"../../addons\",\r\n  \"../../Action\"\r\n],function(langx,$,addons,Action){ \r\n  var EmojiAction = Action.inherit({\r\n    name : 'emoji',\r\n\r\n    icon : 'emoji',\r\n\r\n    menu : true,\r\n\r\n    _init : function() {\r\n      Action.prototype._init.apply(this);\r\n      langx.merge(this.editor.editable.formatter._allowedAttributes['img'], ['data-emoji', 'alt']);\r\n    }\r\n\r\n  });\r\n\r\n\r\n  addons.actions.emoji = EmojiAction; \r\n\r\n  return EmojiAction;\r\n\t\r\n});\ndefine('skylark-widgets-wordpad/addons/actions/FontScaleAction',[\r\n  \"skylark-domx-query\",\r\n  \"../../addons\",\r\n  \"../../Action\",\r\n  \"../../i18n\"\r\n],function($,addons,Action,i18n){ \r\n  \r\n  var FontScaleAction = Action.inherit({\r\n    name : 'fontScale',\r\n\r\n    icon : 'fontScale',\r\n\r\n    htmlTag : 'span',\r\n\r\n    disableTag : 'pre, h1, h2, h3, h4, h5',\r\n\r\n\r\n    _init : function() {\r\n      this.menu = [\r\n        {\r\n          name: '150%',\r\n          text: i18n.translate('fontScaleXLarge'),\r\n          param: '5'\r\n        }, {\r\n          name: '125%',\r\n          text: i18n.translate('fontScaleLarge'),\r\n          param: '4'\r\n        }, {\r\n          name: '100%',\r\n          text: i18n.translate('fontScaleNormal'),\r\n          param: '3'\r\n        }, {\r\n          name: '75%',\r\n          text: i18n.translate('fontScaleSmall'),\r\n          param: '2'\r\n        }, {\r\n          name: '50%',\r\n          text: i18n.translate('fontScaleXSmall'),\r\n          param: '1'\r\n        }\r\n      ];\r\n      return Action.prototype._init.call(this);\r\n    },\r\n\r\n    _activeStatus : function() {\r\n      var active, endNode, endNodes, range, startNode, startNodes;\r\n      range = this.editor.editable.selection.range();\r\n      startNodes = this.editor.editable.selection.startNodes();\r\n      endNodes = this.editor.editable.selection.endNodes();\r\n      startNode = startNodes.filter('span[style*=\"font-size\"]');\r\n      endNode = endNodes.filter('span[style*=\"font-size\"]');\r\n      active = startNodes.length > 0 && endNodes.length > 0 && startNode.is(endNode);\r\n      this.setActive(active);\r\n      return this.active;\r\n    },\r\n\r\n    _execute : function(param) {\r\n      return this.editor.editable.fontScale(param);\r\n    }\r\n  });\r\n\r\n\r\n  addons.actions.fontScale = FontScaleAction; \r\n\r\n  return FontScaleAction;\r\n});\ndefine('skylark-widgets-wordpad/addons/actions/FullScreenAction',[\r\n  \"skylark-domx-query\",\r\n  \"../../addons\",\r\n  \"../../Action\",\r\n  \"../../i18n\"\r\n],function($,addons,Action,i18n){ \r\n\r\n  \r\n  var FullScrennAction = Action.inherit({\r\n    name : 'fullscreen',\r\n\r\n    icon : \"fullscreen\",\r\n\r\n    needFocus : false,\r\n\r\n    _init : function() {\r\n      Action.prototype._init.call(this);\r\n\r\n      this.window = $(window);\r\n      this.body = $('body');\r\n      this.editable = this.editor.body;\r\n    },\r\n\r\n\r\n    status : function() {\r\n      return this.setActive(this.body.hasClass(this.constructor.cls));\r\n    },\r\n\r\n    _execute : function() {\r\n      var editablePadding, isFullscreen;\r\n      this.body.toggleClass(this.constructor.cls);\r\n      isFullscreen = this.body.hasClass(this.constructor.cls);\r\n      if (isFullscreen) {\r\n        editablePadding = this.editable.outerHeight() - this.editable.height();\r\n        this.window.on(\"resize.wordpad-fullscreen-\" + this.editor.id, (function(_this) {\r\n          return function() {\r\n            return _this._resize({\r\n              height: _this.window.height() - $(_this.editor.toolbar._elm).outerHeight() - editablePadding\r\n            });\r\n          };\r\n        })(this));\r\n      } else {\r\n        this.window.off(\"resize.wordpad-fullscreen-\" + this.editor.id);\r\n        //this._resize({\r\n        //  height: 'auto'\r\n        //});\r\n      }\r\n      return this.setActive(isFullscreen);\r\n    },\r\n    \r\n    _resize : function(size) {\r\n      return this.editable.height(size.height);\r\n    }\r\n  });\r\n\r\n  FullScrennAction.cls = 'wordpad-fullscreen';\r\n\r\n  FullScrennAction.i18n = {\r\n    'zh-CN': {\r\n      fullscreen: '全屏'\r\n    }\r\n  };\r\n\r\n\r\n  addons.actions.fullscreen = FullScrennAction; \r\n\r\n  return FullScrennAction;\r\n\r\n }); \ndefine('skylark-widgets-wordpad/addons/actions/HrAction',[\r\n  \"skylark-domx-query\",\r\n  \"../../addons\",\r\n  \"../../Action\"\r\n],function($,addons,Action){ \r\n  \r\n   var HrAction = Action.inherit({\r\n\r\n\t  name : 'hr',\r\n\r\n\t  icon : 'hr',\r\n\r\n\t  htmlTag : 'hr',\r\n\r\n\t  _status : function() {},\r\n\r\n\t  _execute : function() {\r\n\t    return this.editor.editable.hr();\r\n\t  }\r\n\r\n   });\r\n\r\n\r\n  addons.actions.hr = HrAction; \r\n\r\n  return HrAction;\t\r\n});\ndefine('skylark-codemirror/addon/beautify/beautify',[\r\n  \"skylark-langx/langx\",\r\n  \"../../CodeMirror\"\r\n], function(langx,CodeMirror) {\r\n  'use strict';\r\n  var Pos = CodeMirror.Pos;\r\n\r\n  var defaultOptions = {\r\n    initialBeautify: true,\r\n    autoBeautify: true,\r\n    javascript: {\r\n      beautifyFunc: null,\r\n      completionFunc: function (cm, change) {\r\n        return ['}', ']', ';'].indexOf(change.text[0]) !== -1;\r\n      }\r\n    },\r\n    css: {\r\n      beautifyFunc: null,\r\n      completionFunc: function (cm, change) {\r\n        return ['}', ';'].indexOf(change.text[0]) !== -1;\r\n      }\r\n    },\r\n    html: {\r\n      beautifyFunc: null,\r\n      completionFunc: function (cm, change) {\r\n        return ['>'].indexOf(change.text[0]) !== -1;\r\n      }\r\n    }\r\n  };\r\n\r\n  function getOptions (cm) {\r\n    if (!cm || !cm.doc || !cm.doc.mode || !cm.state)\r\n      return;\r\n\r\n    if (cm.doc.mode.name === 'javascript')\r\n      return cm.state.beautify.javascript;\r\n    else if (cm.doc.mode.name === 'css')\r\n      return cm.state.beautify.css;\r\n    else if (cm.doc.mode.name === 'htmlmixed')\r\n      return cm.state.beautify.html;\r\n  }\r\n\r\n  function beautify (cm) {\r\n    var options = getOptions(cm);\r\n\r\n    if (options && options.beautifyFunc)\r\n      cm.setValue(options.beautifyFunc(cm.getValue(), options));\r\n  }\r\n\r\n  function shouldComplete(cm, change) {\r\n    var options = getOptions(cm);\r\n\r\n    if (options.completionFunc)\r\n      return options.completionFunc(cm, change);\r\n\r\n    return false;\r\n  }\r\n\r\n  function onChange (cm, change) {\r\n    if (cm.state.beautify && !cm.state.beautify.autoBeautify)\r\n      return;\r\n\r\n    if (shouldComplete(cm, change)) {\r\n      var bracketChar = change.text[0];\r\n      var bracketCount = cm.getRange(new Pos(0, 0), change.to).split(bracketChar).length;\r\n\r\n      beautify(cm);\r\n\r\n      var searchCount = 0;\r\n\r\n      for (var i = 0; i < cm.lineCount(); i++) {\r\n        var offset = -1;\r\n        var lineText = cm.getLine(i);\r\n\r\n        while ((offset = lineText.indexOf(bracketChar, offset + 1)) !== -1) {\r\n          searchCount++;\r\n\r\n          if (bracketCount === searchCount) {\r\n            cm.setCursor(new Pos(i, offset + 1));\r\n            break;\r\n          }\r\n        }\r\n\r\n        if (bracketCount === searchCount)\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  CodeMirror.defineOption('beautify', false, function(cm, val, old) {\r\n    if (old && old !== CodeMirror.Init)\r\n      cm.off('change', onChange);\r\n    if (val) {\r\n      var indentUnit = cm.getOption('indentUnit');\r\n\r\n      var cmOptions = {\r\n        javascript: {\r\n          indent_size: indentUnit\r\n        },\r\n        css: {\r\n          indent_size: indentUnit\r\n        },\r\n        html: {\r\n          indent_size: indentUnit\r\n        }\r\n      };\r\n\r\n      if (typeof val === 'object')\r\n        cm.state.beautify = langx.mixin({}, defaultOptions, cmOptions, val,true);\r\n      else\r\n        cm.state.beautify = langx.mixin({}, defaultOptions, cmOptions,true);\r\n\r\n      if (cm.state.beautify.initialBeautify)\r\n        beautify(cm);\r\n\r\n      cm.on('change', onChange);\r\n    }\r\n  });\r\n\r\n  CodeMirror.defineExtension('beautify', function () {\r\n    beautify(this);\r\n  });\r\n});\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\r\n// Distributed under an MIT license: https://codemirror.net/LICENSE\r\n\r\ndefine('skylark-codemirror/mode/xml/xml',[\"../../CodeMirror\"], function(CodeMirror) {\r\n\r\n\r\nvar htmlConfig = {\r\n  autoSelfClosers: {'area': true, 'base': true, 'br': true, 'col': true, 'command': true,\r\n                    'embed': true, 'frame': true, 'hr': true, 'img': true, 'input': true,\r\n                    'keygen': true, 'link': true, 'meta': true, 'param': true, 'source': true,\r\n                    'track': true, 'wbr': true, 'menuitem': true},\r\n  implicitlyClosed: {'dd': true, 'li': true, 'optgroup': true, 'option': true, 'p': true,\r\n                     'rp': true, 'rt': true, 'tbody': true, 'td': true, 'tfoot': true,\r\n                     'th': true, 'tr': true},\r\n  contextGrabbers: {\r\n    'dd': {'dd': true, 'dt': true},\r\n    'dt': {'dd': true, 'dt': true},\r\n    'li': {'li': true},\r\n    'option': {'option': true, 'optgroup': true},\r\n    'optgroup': {'optgroup': true},\r\n    'p': {'address': true, 'article': true, 'aside': true, 'blockquote': true, 'dir': true,\r\n          'div': true, 'dl': true, 'fieldset': true, 'footer': true, 'form': true,\r\n          'h1': true, 'h2': true, 'h3': true, 'h4': true, 'h5': true, 'h6': true,\r\n          'header': true, 'hgroup': true, 'hr': true, 'menu': true, 'nav': true, 'ol': true,\r\n          'p': true, 'pre': true, 'section': true, 'table': true, 'ul': true},\r\n    'rp': {'rp': true, 'rt': true},\r\n    'rt': {'rp': true, 'rt': true},\r\n    'tbody': {'tbody': true, 'tfoot': true},\r\n    'td': {'td': true, 'th': true},\r\n    'tfoot': {'tbody': true},\r\n    'th': {'td': true, 'th': true},\r\n    'thead': {'tbody': true, 'tfoot': true},\r\n    'tr': {'tr': true}\r\n  },\r\n  doNotIndent: {\"pre\": true},\r\n  allowUnquoted: true,\r\n  allowMissing: true,\r\n  caseFold: true\r\n}\r\n\r\nvar xmlConfig = {\r\n  autoSelfClosers: {},\r\n  implicitlyClosed: {},\r\n  contextGrabbers: {},\r\n  doNotIndent: {},\r\n  allowUnquoted: false,\r\n  allowMissing: false,\r\n  allowMissingTagName: false,\r\n  caseFold: false\r\n}\r\n\r\nCodeMirror.defineMode(\"xml\", function(editorConf, config_) {\r\n  var indentUnit = editorConf.indentUnit\r\n  var config = {}\r\n  var defaults = config_.htmlMode ? htmlConfig : xmlConfig\r\n  for (var prop in defaults) config[prop] = defaults[prop]\r\n  for (var prop in config_) config[prop] = config_[prop]\r\n\r\n  // Return variables for tokenizers\r\n  var type, setStyle;\r\n\r\n  function inText(stream, state) {\r\n    function chain(parser) {\r\n      state.tokenize = parser;\r\n      return parser(stream, state);\r\n    }\r\n\r\n    var ch = stream.next();\r\n    if (ch == \"<\") {\r\n      if (stream.eat(\"!\")) {\r\n        if (stream.eat(\"[\")) {\r\n          if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));\r\n          else return null;\r\n        } else if (stream.match(\"--\")) {\r\n          return chain(inBlock(\"comment\", \"-->\"));\r\n        } else if (stream.match(\"DOCTYPE\", true, true)) {\r\n          stream.eatWhile(/[\\w\\._\\-]/);\r\n          return chain(doctype(1));\r\n        } else {\r\n          return null;\r\n        }\r\n      } else if (stream.eat(\"?\")) {\r\n        stream.eatWhile(/[\\w\\._\\-]/);\r\n        state.tokenize = inBlock(\"meta\", \"?>\");\r\n        return \"meta\";\r\n      } else {\r\n        type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\r\n        state.tokenize = inTag;\r\n        return \"tag bracket\";\r\n      }\r\n    } else if (ch == \"&\") {\r\n      var ok;\r\n      if (stream.eat(\"#\")) {\r\n        if (stream.eat(\"x\")) {\r\n          ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\r\n        } else {\r\n          ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\r\n        }\r\n      } else {\r\n        ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\r\n      }\r\n      return ok ? \"atom\" : \"error\";\r\n    } else {\r\n      stream.eatWhile(/[^&<]/);\r\n      return null;\r\n    }\r\n  }\r\n  inText.isInText = true;\r\n\r\n  function inTag(stream, state) {\r\n    var ch = stream.next();\r\n    if (ch == \">\" || (ch == \"/\" && stream.eat(\">\"))) {\r\n      state.tokenize = inText;\r\n      type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\r\n      return \"tag bracket\";\r\n    } else if (ch == \"=\") {\r\n      type = \"equals\";\r\n      return null;\r\n    } else if (ch == \"<\") {\r\n      state.tokenize = inText;\r\n      state.state = baseState;\r\n      state.tagName = state.tagStart = null;\r\n      var next = state.tokenize(stream, state);\r\n      return next ? next + \" tag error\" : \"tag error\";\r\n    } else if (/[\\'\\\"]/.test(ch)) {\r\n      state.tokenize = inAttribute(ch);\r\n      state.stringStartCol = stream.column();\r\n      return state.tokenize(stream, state);\r\n    } else {\r\n      stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\r\n      return \"word\";\r\n    }\r\n  }\r\n\r\n  function inAttribute(quote) {\r\n    var closure = function(stream, state) {\r\n      while (!stream.eol()) {\r\n        if (stream.next() == quote) {\r\n          state.tokenize = inTag;\r\n          break;\r\n        }\r\n      }\r\n      return \"string\";\r\n    };\r\n    closure.isInAttribute = true;\r\n    return closure;\r\n  }\r\n\r\n  function inBlock(style, terminator) {\r\n    return function(stream, state) {\r\n      while (!stream.eol()) {\r\n        if (stream.match(terminator)) {\r\n          state.tokenize = inText;\r\n          break;\r\n        }\r\n        stream.next();\r\n      }\r\n      return style;\r\n    }\r\n  }\r\n\r\n  function doctype(depth) {\r\n    return function(stream, state) {\r\n      var ch;\r\n      while ((ch = stream.next()) != null) {\r\n        if (ch == \"<\") {\r\n          state.tokenize = doctype(depth + 1);\r\n          return state.tokenize(stream, state);\r\n        } else if (ch == \">\") {\r\n          if (depth == 1) {\r\n            state.tokenize = inText;\r\n            break;\r\n          } else {\r\n            state.tokenize = doctype(depth - 1);\r\n            return state.tokenize(stream, state);\r\n          }\r\n        }\r\n      }\r\n      return \"meta\";\r\n    };\r\n  }\r\n\r\n  function Context(state, tagName, startOfLine) {\r\n    this.prev = state.context;\r\n    this.tagName = tagName;\r\n    this.indent = state.indented;\r\n    this.startOfLine = startOfLine;\r\n    if (config.doNotIndent.hasOwnProperty(tagName) || (state.context && state.context.noIndent))\r\n      this.noIndent = true;\r\n  }\r\n  function popContext(state) {\r\n    if (state.context) state.context = state.context.prev;\r\n  }\r\n  function maybePopContext(state, nextTagName) {\r\n    var parentTagName;\r\n    while (true) {\r\n      if (!state.context) {\r\n        return;\r\n      }\r\n      parentTagName = state.context.tagName;\r\n      if (!config.contextGrabbers.hasOwnProperty(parentTagName) ||\r\n          !config.contextGrabbers[parentTagName].hasOwnProperty(nextTagName)) {\r\n        return;\r\n      }\r\n      popContext(state);\r\n    }\r\n  }\r\n\r\n  function baseState(type, stream, state) {\r\n    if (type == \"openTag\") {\r\n      state.tagStart = stream.column();\r\n      return tagNameState;\r\n    } else if (type == \"closeTag\") {\r\n      return closeTagNameState;\r\n    } else {\r\n      return baseState;\r\n    }\r\n  }\r\n  function tagNameState(type, stream, state) {\r\n    if (type == \"word\") {\r\n      state.tagName = stream.current();\r\n      setStyle = \"tag\";\r\n      return attrState;\r\n    } else if (config.allowMissingTagName && type == \"endTag\") {\r\n      setStyle = \"tag bracket\";\r\n      return attrState(type, stream, state);\r\n    } else {\r\n      setStyle = \"error\";\r\n      return tagNameState;\r\n    }\r\n  }\r\n  function closeTagNameState(type, stream, state) {\r\n    if (type == \"word\") {\r\n      var tagName = stream.current();\r\n      if (state.context && state.context.tagName != tagName &&\r\n          config.implicitlyClosed.hasOwnProperty(state.context.tagName))\r\n        popContext(state);\r\n      if ((state.context && state.context.tagName == tagName) || config.matchClosing === false) {\r\n        setStyle = \"tag\";\r\n        return closeState;\r\n      } else {\r\n        setStyle = \"tag error\";\r\n        return closeStateErr;\r\n      }\r\n    } else if (config.allowMissingTagName && type == \"endTag\") {\r\n      setStyle = \"tag bracket\";\r\n      return closeState(type, stream, state);\r\n    } else {\r\n      setStyle = \"error\";\r\n      return closeStateErr;\r\n    }\r\n  }\r\n\r\n  function closeState(type, _stream, state) {\r\n    if (type != \"endTag\") {\r\n      setStyle = \"error\";\r\n      return closeState;\r\n    }\r\n    popContext(state);\r\n    return baseState;\r\n  }\r\n  function closeStateErr(type, stream, state) {\r\n    setStyle = \"error\";\r\n    return closeState(type, stream, state);\r\n  }\r\n\r\n  function attrState(type, _stream, state) {\r\n    if (type == \"word\") {\r\n      setStyle = \"attribute\";\r\n      return attrEqState;\r\n    } else if (type == \"endTag\" || type == \"selfcloseTag\") {\r\n      var tagName = state.tagName, tagStart = state.tagStart;\r\n      state.tagName = state.tagStart = null;\r\n      if (type == \"selfcloseTag\" ||\r\n          config.autoSelfClosers.hasOwnProperty(tagName)) {\r\n        maybePopContext(state, tagName);\r\n      } else {\r\n        maybePopContext(state, tagName);\r\n        state.context = new Context(state, tagName, tagStart == state.indented);\r\n      }\r\n      return baseState;\r\n    }\r\n    setStyle = \"error\";\r\n    return attrState;\r\n  }\r\n  function attrEqState(type, stream, state) {\r\n    if (type == \"equals\") return attrValueState;\r\n    if (!config.allowMissing) setStyle = \"error\";\r\n    return attrState(type, stream, state);\r\n  }\r\n  function attrValueState(type, stream, state) {\r\n    if (type == \"string\") return attrContinuedState;\r\n    if (type == \"word\" && config.allowUnquoted) {setStyle = \"string\"; return attrState;}\r\n    setStyle = \"error\";\r\n    return attrState(type, stream, state);\r\n  }\r\n  function attrContinuedState(type, stream, state) {\r\n    if (type == \"string\") return attrContinuedState;\r\n    return attrState(type, stream, state);\r\n  }\r\n\r\n  return {\r\n    startState: function(baseIndent) {\r\n      var state = {tokenize: inText,\r\n                   state: baseState,\r\n                   indented: baseIndent || 0,\r\n                   tagName: null, tagStart: null,\r\n                   context: null}\r\n      if (baseIndent != null) state.baseIndent = baseIndent\r\n      return state\r\n    },\r\n\r\n    token: function(stream, state) {\r\n      if (!state.tagName && stream.sol())\r\n        state.indented = stream.indentation();\r\n\r\n      if (stream.eatSpace()) return null;\r\n      type = null;\r\n      var style = state.tokenize(stream, state);\r\n      if ((style || type) && style != \"comment\") {\r\n        setStyle = null;\r\n        state.state = state.state(type || style, stream, state);\r\n        if (setStyle)\r\n          style = setStyle == \"error\" ? style + \" error\" : setStyle;\r\n      }\r\n      return style;\r\n    },\r\n\r\n    indent: function(state, textAfter, fullLine) {\r\n      var context = state.context;\r\n      // Indent multi-line strings (e.g. css).\r\n      if (state.tokenize.isInAttribute) {\r\n        if (state.tagStart == state.indented)\r\n          return state.stringStartCol + 1;\r\n        else\r\n          return state.indented + indentUnit;\r\n      }\r\n      if (context && context.noIndent) return CodeMirror.Pass;\r\n      if (state.tokenize != inTag && state.tokenize != inText)\r\n        return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0;\r\n      // Indent the starts of attribute names.\r\n      if (state.tagName) {\r\n        if (config.multilineTagIndentPastTag !== false)\r\n          return state.tagStart + state.tagName.length + 2;\r\n        else\r\n          return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\r\n      }\r\n      if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\r\n      var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\r\n      if (tagAfter && tagAfter[1]) { // Closing tag spotted\r\n        while (context) {\r\n          if (context.tagName == tagAfter[2]) {\r\n            context = context.prev;\r\n            break;\r\n          } else if (config.implicitlyClosed.hasOwnProperty(context.tagName)) {\r\n            context = context.prev;\r\n          } else {\r\n            break;\r\n          }\r\n        }\r\n      } else if (tagAfter) { // Opening tag spotted\r\n        while (context) {\r\n          var grabbers = config.contextGrabbers[context.tagName];\r\n          if (grabbers && grabbers.hasOwnProperty(tagAfter[2]))\r\n            context = context.prev;\r\n          else\r\n            break;\r\n        }\r\n      }\r\n      while (context && context.prev && !context.startOfLine)\r\n        context = context.prev;\r\n      if (context) return context.indent + indentUnit;\r\n      else return state.baseIndent || 0;\r\n    },\r\n\r\n    electricInput: /<\\/[\\s\\w:]+>$/,\r\n    blockCommentStart: \"<!--\",\r\n    blockCommentEnd: \"-->\",\r\n\r\n    configuration: config.htmlMode ? \"html\" : \"xml\",\r\n    helperType: config.htmlMode ? \"html\" : \"xml\",\r\n\r\n    skipAttribute: function(state) {\r\n      if (state.state == attrValueState)\r\n        state.state = attrState\r\n    }\r\n  };\r\n});\r\n\r\nCodeMirror.defineMIME(\"text/xml\", \"xml\");\r\nCodeMirror.defineMIME(\"application/xml\", \"xml\");\r\nif (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\"))\r\n  CodeMirror.defineMIME(\"text/html\", {name: \"xml\", htmlMode: true});\r\n\r\n});\r\n\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\r\n// Distributed under an MIT license: https://codemirror.net/LICENSE\r\n\r\ndefine('skylark-codemirror/mode/css/css',[\"../../CodeMirror\"], function(CodeMirror) {\r\n\r\n\r\nCodeMirror.defineMode(\"css\", function(config, parserConfig) {\r\n  var inline = parserConfig.inline\r\n  if (!parserConfig.propertyKeywords) parserConfig = CodeMirror.resolveMode(\"text/css\");\r\n\r\n  var indentUnit = config.indentUnit,\r\n      tokenHooks = parserConfig.tokenHooks,\r\n      documentTypes = parserConfig.documentTypes || {},\r\n      mediaTypes = parserConfig.mediaTypes || {},\r\n      mediaFeatures = parserConfig.mediaFeatures || {},\r\n      mediaValueKeywords = parserConfig.mediaValueKeywords || {},\r\n      propertyKeywords = parserConfig.propertyKeywords || {},\r\n      nonStandardPropertyKeywords = parserConfig.nonStandardPropertyKeywords || {},\r\n      fontProperties = parserConfig.fontProperties || {},\r\n      counterDescriptors = parserConfig.counterDescriptors || {},\r\n      colorKeywords = parserConfig.colorKeywords || {},\r\n      valueKeywords = parserConfig.valueKeywords || {},\r\n      allowNested = parserConfig.allowNested,\r\n      lineComment = parserConfig.lineComment,\r\n      supportsAtComponent = parserConfig.supportsAtComponent === true;\r\n\r\n  var type, override;\r\n  function ret(style, tp) { type = tp; return style; }\r\n\r\n  // Tokenizers\r\n\r\n  function tokenBase(stream, state) {\r\n    var ch = stream.next();\r\n    if (tokenHooks[ch]) {\r\n      var result = tokenHooks[ch](stream, state);\r\n      if (result !== false) return result;\r\n    }\r\n    if (ch == \"@\") {\r\n      stream.eatWhile(/[\\w\\\\\\-]/);\r\n      return ret(\"def\", stream.current());\r\n    } else if (ch == \"=\" || (ch == \"~\" || ch == \"|\") && stream.eat(\"=\")) {\r\n      return ret(null, \"compare\");\r\n    } else if (ch == \"\\\"\" || ch == \"'\") {\r\n      state.tokenize = tokenString(ch);\r\n      return state.tokenize(stream, state);\r\n    } else if (ch == \"#\") {\r\n      stream.eatWhile(/[\\w\\\\\\-]/);\r\n      return ret(\"atom\", \"hash\");\r\n    } else if (ch == \"!\") {\r\n      stream.match(/^\\s*\\w*/);\r\n      return ret(\"keyword\", \"important\");\r\n    } else if (/\\d/.test(ch) || ch == \".\" && stream.eat(/\\d/)) {\r\n      stream.eatWhile(/[\\w.%]/);\r\n      return ret(\"number\", \"unit\");\r\n    } else if (ch === \"-\") {\r\n      if (/[\\d.]/.test(stream.peek())) {\r\n        stream.eatWhile(/[\\w.%]/);\r\n        return ret(\"number\", \"unit\");\r\n      } else if (stream.match(/^-[\\w\\\\\\-]*/)) {\r\n        stream.eatWhile(/[\\w\\\\\\-]/);\r\n        if (stream.match(/^\\s*:/, false))\r\n          return ret(\"variable-2\", \"variable-definition\");\r\n        return ret(\"variable-2\", \"variable\");\r\n      } else if (stream.match(/^\\w+-/)) {\r\n        return ret(\"meta\", \"meta\");\r\n      }\r\n    } else if (/[,+>*\\/]/.test(ch)) {\r\n      return ret(null, \"select-op\");\r\n    } else if (ch == \".\" && stream.match(/^-?[_a-z][_a-z0-9-]*/i)) {\r\n      return ret(\"qualifier\", \"qualifier\");\r\n    } else if (/[:;{}\\[\\]\\(\\)]/.test(ch)) {\r\n      return ret(null, ch);\r\n    } else if (stream.match(/[\\w-.]+(?=\\()/)) {\r\n      if (/^(url(-prefix)?|domain|regexp)$/.test(stream.current().toLowerCase())) {\r\n        state.tokenize = tokenParenthesized;\r\n      }\r\n      return ret(\"variable callee\", \"variable\");\r\n    } else if (/[\\w\\\\\\-]/.test(ch)) {\r\n      stream.eatWhile(/[\\w\\\\\\-]/);\r\n      return ret(\"property\", \"word\");\r\n    } else {\r\n      return ret(null, null);\r\n    }\r\n  }\r\n\r\n  function tokenString(quote) {\r\n    return function(stream, state) {\r\n      var escaped = false, ch;\r\n      while ((ch = stream.next()) != null) {\r\n        if (ch == quote && !escaped) {\r\n          if (quote == \")\") stream.backUp(1);\r\n          break;\r\n        }\r\n        escaped = !escaped && ch == \"\\\\\";\r\n      }\r\n      if (ch == quote || !escaped && quote != \")\") state.tokenize = null;\r\n      return ret(\"string\", \"string\");\r\n    };\r\n  }\r\n\r\n  function tokenParenthesized(stream, state) {\r\n    stream.next(); // Must be '('\r\n    if (!stream.match(/\\s*[\\\"\\')]/, false))\r\n      state.tokenize = tokenString(\")\");\r\n    else\r\n      state.tokenize = null;\r\n    return ret(null, \"(\");\r\n  }\r\n\r\n  // Context management\r\n\r\n  function Context(type, indent, prev) {\r\n    this.type = type;\r\n    this.indent = indent;\r\n    this.prev = prev;\r\n  }\r\n\r\n  function pushContext(state, stream, type, indent) {\r\n    state.context = new Context(type, stream.indentation() + (indent === false ? 0 : indentUnit), state.context);\r\n    return type;\r\n  }\r\n\r\n  function popContext(state) {\r\n    if (state.context.prev)\r\n      state.context = state.context.prev;\r\n    return state.context.type;\r\n  }\r\n\r\n  function pass(type, stream, state) {\r\n    return states[state.context.type](type, stream, state);\r\n  }\r\n  function popAndPass(type, stream, state, n) {\r\n    for (var i = n || 1; i > 0; i--)\r\n      state.context = state.context.prev;\r\n    return pass(type, stream, state);\r\n  }\r\n\r\n  // Parser\r\n\r\n  function wordAsValue(stream) {\r\n    var word = stream.current().toLowerCase();\r\n    if (valueKeywords.hasOwnProperty(word))\r\n      override = \"atom\";\r\n    else if (colorKeywords.hasOwnProperty(word))\r\n      override = \"keyword\";\r\n    else\r\n      override = \"variable\";\r\n  }\r\n\r\n  var states = {};\r\n\r\n  states.top = function(type, stream, state) {\r\n    if (type == \"{\") {\r\n      return pushContext(state, stream, \"block\");\r\n    } else if (type == \"}\" && state.context.prev) {\r\n      return popContext(state);\r\n    } else if (supportsAtComponent && /@component/i.test(type)) {\r\n      return pushContext(state, stream, \"atComponentBlock\");\r\n    } else if (/^@(-moz-)?document$/i.test(type)) {\r\n      return pushContext(state, stream, \"documentTypes\");\r\n    } else if (/^@(media|supports|(-moz-)?document|import)$/i.test(type)) {\r\n      return pushContext(state, stream, \"atBlock\");\r\n    } else if (/^@(font-face|counter-style)/i.test(type)) {\r\n      state.stateArg = type;\r\n      return \"restricted_atBlock_before\";\r\n    } else if (/^@(-(moz|ms|o|webkit)-)?keyframes$/i.test(type)) {\r\n      return \"keyframes\";\r\n    } else if (type && type.charAt(0) == \"@\") {\r\n      return pushContext(state, stream, \"at\");\r\n    } else if (type == \"hash\") {\r\n      override = \"builtin\";\r\n    } else if (type == \"word\") {\r\n      override = \"tag\";\r\n    } else if (type == \"variable-definition\") {\r\n      return \"maybeprop\";\r\n    } else if (type == \"interpolation\") {\r\n      return pushContext(state, stream, \"interpolation\");\r\n    } else if (type == \":\") {\r\n      return \"pseudo\";\r\n    } else if (allowNested && type == \"(\") {\r\n      return pushContext(state, stream, \"parens\");\r\n    }\r\n    return state.context.type;\r\n  };\r\n\r\n  states.block = function(type, stream, state) {\r\n    if (type == \"word\") {\r\n      var word = stream.current().toLowerCase();\r\n      if (propertyKeywords.hasOwnProperty(word)) {\r\n        override = \"property\";\r\n        return \"maybeprop\";\r\n      } else if (nonStandardPropertyKeywords.hasOwnProperty(word)) {\r\n        override = \"string-2\";\r\n        return \"maybeprop\";\r\n      } else if (allowNested) {\r\n        override = stream.match(/^\\s*:(?:\\s|$)/, false) ? \"property\" : \"tag\";\r\n        return \"block\";\r\n      } else {\r\n        override += \" error\";\r\n        return \"maybeprop\";\r\n      }\r\n    } else if (type == \"meta\") {\r\n      return \"block\";\r\n    } else if (!allowNested && (type == \"hash\" || type == \"qualifier\")) {\r\n      override = \"error\";\r\n      return \"block\";\r\n    } else {\r\n      return states.top(type, stream, state);\r\n    }\r\n  };\r\n\r\n  states.maybeprop = function(type, stream, state) {\r\n    if (type == \":\") return pushContext(state, stream, \"prop\");\r\n    return pass(type, stream, state);\r\n  };\r\n\r\n  states.prop = function(type, stream, state) {\r\n    if (type == \";\") return popContext(state);\r\n    if (type == \"{\" && allowNested) return pushContext(state, stream, \"propBlock\");\r\n    if (type == \"}\" || type == \"{\") return popAndPass(type, stream, state);\r\n    if (type == \"(\") return pushContext(state, stream, \"parens\");\r\n\r\n    if (type == \"hash\" && !/^#([0-9a-fA-f]{3,4}|[0-9a-fA-f]{6}|[0-9a-fA-f]{8})$/.test(stream.current())) {\r\n      override += \" error\";\r\n    } else if (type == \"word\") {\r\n      wordAsValue(stream);\r\n    } else if (type == \"interpolation\") {\r\n      return pushContext(state, stream, \"interpolation\");\r\n    }\r\n    return \"prop\";\r\n  };\r\n\r\n  states.propBlock = function(type, _stream, state) {\r\n    if (type == \"}\") return popContext(state);\r\n    if (type == \"word\") { override = \"property\"; return \"maybeprop\"; }\r\n    return state.context.type;\r\n  };\r\n\r\n  states.parens = function(type, stream, state) {\r\n    if (type == \"{\" || type == \"}\") return popAndPass(type, stream, state);\r\n    if (type == \")\") return popContext(state);\r\n    if (type == \"(\") return pushContext(state, stream, \"parens\");\r\n    if (type == \"interpolation\") return pushContext(state, stream, \"interpolation\");\r\n    if (type == \"word\") wordAsValue(stream);\r\n    return \"parens\";\r\n  };\r\n\r\n  states.pseudo = function(type, stream, state) {\r\n    if (type == \"meta\") return \"pseudo\";\r\n\r\n    if (type == \"word\") {\r\n      override = \"variable-3\";\r\n      return state.context.type;\r\n    }\r\n    return pass(type, stream, state);\r\n  };\r\n\r\n  states.documentTypes = function(type, stream, state) {\r\n    if (type == \"word\" && documentTypes.hasOwnProperty(stream.current())) {\r\n      override = \"tag\";\r\n      return state.context.type;\r\n    } else {\r\n      return states.atBlock(type, stream, state);\r\n    }\r\n  };\r\n\r\n  states.atBlock = function(type, stream, state) {\r\n    if (type == \"(\") return pushContext(state, stream, \"atBlock_parens\");\r\n    if (type == \"}\" || type == \";\") return popAndPass(type, stream, state);\r\n    if (type == \"{\") return popContext(state) && pushContext(state, stream, allowNested ? \"block\" : \"top\");\r\n\r\n    if (type == \"interpolation\") return pushContext(state, stream, \"interpolation\");\r\n\r\n    if (type == \"word\") {\r\n      var word = stream.current().toLowerCase();\r\n      if (word == \"only\" || word == \"not\" || word == \"and\" || word == \"or\")\r\n        override = \"keyword\";\r\n      else if (mediaTypes.hasOwnProperty(word))\r\n        override = \"attribute\";\r\n      else if (mediaFeatures.hasOwnProperty(word))\r\n        override = \"property\";\r\n      else if (mediaValueKeywords.hasOwnProperty(word))\r\n        override = \"keyword\";\r\n      else if (propertyKeywords.hasOwnProperty(word))\r\n        override = \"property\";\r\n      else if (nonStandardPropertyKeywords.hasOwnProperty(word))\r\n        override = \"string-2\";\r\n      else if (valueKeywords.hasOwnProperty(word))\r\n        override = \"atom\";\r\n      else if (colorKeywords.hasOwnProperty(word))\r\n        override = \"keyword\";\r\n      else\r\n        override = \"error\";\r\n    }\r\n    return state.context.type;\r\n  };\r\n\r\n  states.atComponentBlock = function(type, stream, state) {\r\n    if (type == \"}\")\r\n      return popAndPass(type, stream, state);\r\n    if (type == \"{\")\r\n      return popContext(state) && pushContext(state, stream, allowNested ? \"block\" : \"top\", false);\r\n    if (type == \"word\")\r\n      override = \"error\";\r\n    return state.context.type;\r\n  };\r\n\r\n  states.atBlock_parens = function(type, stream, state) {\r\n    if (type == \")\") return popContext(state);\r\n    if (type == \"{\" || type == \"}\") return popAndPass(type, stream, state, 2);\r\n    return states.atBlock(type, stream, state);\r\n  };\r\n\r\n  states.restricted_atBlock_before = function(type, stream, state) {\r\n    if (type == \"{\")\r\n      return pushContext(state, stream, \"restricted_atBlock\");\r\n    if (type == \"word\" && state.stateArg == \"@counter-style\") {\r\n      override = \"variable\";\r\n      return \"restricted_atBlock_before\";\r\n    }\r\n    return pass(type, stream, state);\r\n  };\r\n\r\n  states.restricted_atBlock = function(type, stream, state) {\r\n    if (type == \"}\") {\r\n      state.stateArg = null;\r\n      return popContext(state);\r\n    }\r\n    if (type == \"word\") {\r\n      if ((state.stateArg == \"@font-face\" && !fontProperties.hasOwnProperty(stream.current().toLowerCase())) ||\r\n          (state.stateArg == \"@counter-style\" && !counterDescriptors.hasOwnProperty(stream.current().toLowerCase())))\r\n        override = \"error\";\r\n      else\r\n        override = \"property\";\r\n      return \"maybeprop\";\r\n    }\r\n    return \"restricted_atBlock\";\r\n  };\r\n\r\n  states.keyframes = function(type, stream, state) {\r\n    if (type == \"word\") { override = \"variable\"; return \"keyframes\"; }\r\n    if (type == \"{\") return pushContext(state, stream, \"top\");\r\n    return pass(type, stream, state);\r\n  };\r\n\r\n  states.at = function(type, stream, state) {\r\n    if (type == \";\") return popContext(state);\r\n    if (type == \"{\" || type == \"}\") return popAndPass(type, stream, state);\r\n    if (type == \"word\") override = \"tag\";\r\n    else if (type == \"hash\") override = \"builtin\";\r\n    return \"at\";\r\n  };\r\n\r\n  states.interpolation = function(type, stream, state) {\r\n    if (type == \"}\") return popContext(state);\r\n    if (type == \"{\" || type == \";\") return popAndPass(type, stream, state);\r\n    if (type == \"word\") override = \"variable\";\r\n    else if (type != \"variable\" && type != \"(\" && type != \")\") override = \"error\";\r\n    return \"interpolation\";\r\n  };\r\n\r\n  return {\r\n    startState: function(base) {\r\n      return {tokenize: null,\r\n              state: inline ? \"block\" : \"top\",\r\n              stateArg: null,\r\n              context: new Context(inline ? \"block\" : \"top\", base || 0, null)};\r\n    },\r\n\r\n    token: function(stream, state) {\r\n      if (!state.tokenize && stream.eatSpace()) return null;\r\n      var style = (state.tokenize || tokenBase)(stream, state);\r\n      if (style && typeof style == \"object\") {\r\n        type = style[1];\r\n        style = style[0];\r\n      }\r\n      override = style;\r\n      if (type != \"comment\")\r\n        state.state = states[state.state](type, stream, state);\r\n      return override;\r\n    },\r\n\r\n    indent: function(state, textAfter) {\r\n      var cx = state.context, ch = textAfter && textAfter.charAt(0);\r\n      var indent = cx.indent;\r\n      if (cx.type == \"prop\" && (ch == \"}\" || ch == \")\")) cx = cx.prev;\r\n      if (cx.prev) {\r\n        if (ch == \"}\" && (cx.type == \"block\" || cx.type == \"top\" ||\r\n                          cx.type == \"interpolation\" || cx.type == \"restricted_atBlock\")) {\r\n          // Resume indentation from parent context.\r\n          cx = cx.prev;\r\n          indent = cx.indent;\r\n        } else if (ch == \")\" && (cx.type == \"parens\" || cx.type == \"atBlock_parens\") ||\r\n            ch == \"{\" && (cx.type == \"at\" || cx.type == \"atBlock\")) {\r\n          // Dedent relative to current context.\r\n          indent = Math.max(0, cx.indent - indentUnit);\r\n        }\r\n      }\r\n      return indent;\r\n    },\r\n\r\n    electricChars: \"}\",\r\n    blockCommentStart: \"/*\",\r\n    blockCommentEnd: \"*/\",\r\n    blockCommentContinue: \" * \",\r\n    lineComment: lineComment,\r\n    fold: \"brace\"\r\n  };\r\n});\r\n\r\n  function keySet(array) {\r\n    var keys = {};\r\n    for (var i = 0; i < array.length; ++i) {\r\n      keys[array[i].toLowerCase()] = true;\r\n    }\r\n    return keys;\r\n  }\r\n\r\n  var documentTypes_ = [\r\n    \"domain\", \"regexp\", \"url\", \"url-prefix\"\r\n  ], documentTypes = keySet(documentTypes_);\r\n\r\n  var mediaTypes_ = [\r\n    \"all\", \"aural\", \"braille\", \"handheld\", \"print\", \"projection\", \"screen\",\r\n    \"tty\", \"tv\", \"embossed\"\r\n  ], mediaTypes = keySet(mediaTypes_);\r\n\r\n  var mediaFeatures_ = [\r\n    \"width\", \"min-width\", \"max-width\", \"height\", \"min-height\", \"max-height\",\r\n    \"device-width\", \"min-device-width\", \"max-device-width\", \"device-height\",\r\n    \"min-device-height\", \"max-device-height\", \"aspect-ratio\",\r\n    \"min-aspect-ratio\", \"max-aspect-ratio\", \"device-aspect-ratio\",\r\n    \"min-device-aspect-ratio\", \"max-device-aspect-ratio\", \"color\", \"min-color\",\r\n    \"max-color\", \"color-index\", \"min-color-index\", \"max-color-index\",\r\n    \"monochrome\", \"min-monochrome\", \"max-monochrome\", \"resolution\",\r\n    \"min-resolution\", \"max-resolution\", \"scan\", \"grid\", \"orientation\",\r\n    \"device-pixel-ratio\", \"min-device-pixel-ratio\", \"max-device-pixel-ratio\",\r\n    \"pointer\", \"any-pointer\", \"hover\", \"any-hover\"\r\n  ], mediaFeatures = keySet(mediaFeatures_);\r\n\r\n  var mediaValueKeywords_ = [\r\n    \"landscape\", \"portrait\", \"none\", \"coarse\", \"fine\", \"on-demand\", \"hover\",\r\n    \"interlace\", \"progressive\"\r\n  ], mediaValueKeywords = keySet(mediaValueKeywords_);\r\n\r\n  var propertyKeywords_ = [\r\n    \"align-content\", \"align-items\", \"align-self\", \"alignment-adjust\",\r\n    \"alignment-baseline\", \"anchor-point\", \"animation\", \"animation-delay\",\r\n    \"animation-direction\", \"animation-duration\", \"animation-fill-mode\",\r\n    \"animation-iteration-count\", \"animation-name\", \"animation-play-state\",\r\n    \"animation-timing-function\", \"appearance\", \"azimuth\", \"backface-visibility\",\r\n    \"background\", \"background-attachment\", \"background-blend-mode\", \"background-clip\",\r\n    \"background-color\", \"background-image\", \"background-origin\", \"background-position\",\r\n    \"background-repeat\", \"background-size\", \"baseline-shift\", \"binding\",\r\n    \"bleed\", \"bookmark-label\", \"bookmark-level\", \"bookmark-state\",\r\n    \"bookmark-target\", \"border\", \"border-bottom\", \"border-bottom-color\",\r\n    \"border-bottom-left-radius\", \"border-bottom-right-radius\",\r\n    \"border-bottom-style\", \"border-bottom-width\", \"border-collapse\",\r\n    \"border-color\", \"border-image\", \"border-image-outset\",\r\n    \"border-image-repeat\", \"border-image-slice\", \"border-image-source\",\r\n    \"border-image-width\", \"border-left\", \"border-left-color\",\r\n    \"border-left-style\", \"border-left-width\", \"border-radius\", \"border-right\",\r\n    \"border-right-color\", \"border-right-style\", \"border-right-width\",\r\n    \"border-spacing\", \"border-style\", \"border-top\", \"border-top-color\",\r\n    \"border-top-left-radius\", \"border-top-right-radius\", \"border-top-style\",\r\n    \"border-top-width\", \"border-width\", \"bottom\", \"box-decoration-break\",\r\n    \"box-shadow\", \"box-sizing\", \"break-after\", \"break-before\", \"break-inside\",\r\n    \"caption-side\", \"caret-color\", \"clear\", \"clip\", \"color\", \"color-profile\", \"column-count\",\r\n    \"column-fill\", \"column-gap\", \"column-rule\", \"column-rule-color\",\r\n    \"column-rule-style\", \"column-rule-width\", \"column-span\", \"column-width\",\r\n    \"columns\", \"content\", \"counter-increment\", \"counter-reset\", \"crop\", \"cue\",\r\n    \"cue-after\", \"cue-before\", \"cursor\", \"direction\", \"display\",\r\n    \"dominant-baseline\", \"drop-initial-after-adjust\",\r\n    \"drop-initial-after-align\", \"drop-initial-before-adjust\",\r\n    \"drop-initial-before-align\", \"drop-initial-size\", \"drop-initial-value\",\r\n    \"elevation\", \"empty-cells\", \"fit\", \"fit-position\", \"flex\", \"flex-basis\",\r\n    \"flex-direction\", \"flex-flow\", \"flex-grow\", \"flex-shrink\", \"flex-wrap\",\r\n    \"float\", \"float-offset\", \"flow-from\", \"flow-into\", \"font\", \"font-feature-settings\",\r\n    \"font-family\", \"font-kerning\", \"font-language-override\", \"font-size\", \"font-size-adjust\",\r\n    \"font-stretch\", \"font-style\", \"font-synthesis\", \"font-variant\",\r\n    \"font-variant-alternates\", \"font-variant-caps\", \"font-variant-east-asian\",\r\n    \"font-variant-ligatures\", \"font-variant-numeric\", \"font-variant-position\",\r\n    \"font-weight\", \"grid\", \"grid-area\", \"grid-auto-columns\", \"grid-auto-flow\",\r\n    \"grid-auto-rows\", \"grid-column\", \"grid-column-end\", \"grid-column-gap\",\r\n    \"grid-column-start\", \"grid-gap\", \"grid-row\", \"grid-row-end\", \"grid-row-gap\",\r\n    \"grid-row-start\", \"grid-template\", \"grid-template-areas\", \"grid-template-columns\",\r\n    \"grid-template-rows\", \"hanging-punctuation\", \"height\", \"hyphens\",\r\n    \"icon\", \"image-orientation\", \"image-rendering\", \"image-resolution\",\r\n    \"inline-box-align\", \"justify-content\", \"justify-items\", \"justify-self\", \"left\", \"letter-spacing\",\r\n    \"line-break\", \"line-height\", \"line-stacking\", \"line-stacking-ruby\",\r\n    \"line-stacking-shift\", \"line-stacking-strategy\", \"list-style\",\r\n    \"list-style-image\", \"list-style-position\", \"list-style-type\", \"margin\",\r\n    \"margin-bottom\", \"margin-left\", \"margin-right\", \"margin-top\",\r\n    \"marks\", \"marquee-direction\", \"marquee-loop\",\r\n    \"marquee-play-count\", \"marquee-speed\", \"marquee-style\", \"max-height\",\r\n    \"max-width\", \"min-height\", \"min-width\", \"mix-blend-mode\", \"move-to\", \"nav-down\", \"nav-index\",\r\n    \"nav-left\", \"nav-right\", \"nav-up\", \"object-fit\", \"object-position\",\r\n    \"opacity\", \"order\", \"orphans\", \"outline\",\r\n    \"outline-color\", \"outline-offset\", \"outline-style\", \"outline-width\",\r\n    \"overflow\", \"overflow-style\", \"overflow-wrap\", \"overflow-x\", \"overflow-y\",\r\n    \"padding\", \"padding-bottom\", \"padding-left\", \"padding-right\", \"padding-top\",\r\n    \"page\", \"page-break-after\", \"page-break-before\", \"page-break-inside\",\r\n    \"page-policy\", \"pause\", \"pause-after\", \"pause-before\", \"perspective\",\r\n    \"perspective-origin\", \"pitch\", \"pitch-range\", \"place-content\", \"place-items\", \"place-self\", \"play-during\", \"position\",\r\n    \"presentation-level\", \"punctuation-trim\", \"quotes\", \"region-break-after\",\r\n    \"region-break-before\", \"region-break-inside\", \"region-fragment\",\r\n    \"rendering-intent\", \"resize\", \"rest\", \"rest-after\", \"rest-before\", \"richness\",\r\n    \"right\", \"rotation\", \"rotation-point\", \"ruby-align\", \"ruby-overhang\",\r\n    \"ruby-position\", \"ruby-span\", \"shape-image-threshold\", \"shape-inside\", \"shape-margin\",\r\n    \"shape-outside\", \"size\", \"speak\", \"speak-as\", \"speak-header\",\r\n    \"speak-numeral\", \"speak-punctuation\", \"speech-rate\", \"stress\", \"string-set\",\r\n    \"tab-size\", \"table-layout\", \"target\", \"target-name\", \"target-new\",\r\n    \"target-position\", \"text-align\", \"text-align-last\", \"text-decoration\",\r\n    \"text-decoration-color\", \"text-decoration-line\", \"text-decoration-skip\",\r\n    \"text-decoration-style\", \"text-emphasis\", \"text-emphasis-color\",\r\n    \"text-emphasis-position\", \"text-emphasis-style\", \"text-height\",\r\n    \"text-indent\", \"text-justify\", \"text-outline\", \"text-overflow\", \"text-shadow\",\r\n    \"text-size-adjust\", \"text-space-collapse\", \"text-transform\", \"text-underline-position\",\r\n    \"text-wrap\", \"top\", \"transform\", \"transform-origin\", \"transform-style\",\r\n    \"transition\", \"transition-delay\", \"transition-duration\",\r\n    \"transition-property\", \"transition-timing-function\", \"unicode-bidi\",\r\n    \"user-select\", \"vertical-align\", \"visibility\", \"voice-balance\", \"voice-duration\",\r\n    \"voice-family\", \"voice-pitch\", \"voice-range\", \"voice-rate\", \"voice-stress\",\r\n    \"voice-volume\", \"volume\", \"white-space\", \"widows\", \"width\", \"will-change\", \"word-break\",\r\n    \"word-spacing\", \"word-wrap\", \"z-index\",\r\n    // SVG-specific\r\n    \"clip-path\", \"clip-rule\", \"mask\", \"enable-background\", \"filter\", \"flood-color\",\r\n    \"flood-opacity\", \"lighting-color\", \"stop-color\", \"stop-opacity\", \"pointer-events\",\r\n    \"color-interpolation\", \"color-interpolation-filters\",\r\n    \"color-rendering\", \"fill\", \"fill-opacity\", \"fill-rule\", \"image-rendering\",\r\n    \"marker\", \"marker-end\", \"marker-mid\", \"marker-start\", \"shape-rendering\", \"stroke\",\r\n    \"stroke-dasharray\", \"stroke-dashoffset\", \"stroke-linecap\", \"stroke-linejoin\",\r\n    \"stroke-miterlimit\", \"stroke-opacity\", \"stroke-width\", \"text-rendering\",\r\n    \"baseline-shift\", \"dominant-baseline\", \"glyph-orientation-horizontal\",\r\n    \"glyph-orientation-vertical\", \"text-anchor\", \"writing-mode\"\r\n  ], propertyKeywords = keySet(propertyKeywords_);\r\n\r\n  var nonStandardPropertyKeywords_ = [\r\n    \"scrollbar-arrow-color\", \"scrollbar-base-color\", \"scrollbar-dark-shadow-color\",\r\n    \"scrollbar-face-color\", \"scrollbar-highlight-color\", \"scrollbar-shadow-color\",\r\n    \"scrollbar-3d-light-color\", \"scrollbar-track-color\", \"shape-inside\",\r\n    \"searchfield-cancel-button\", \"searchfield-decoration\", \"searchfield-results-button\",\r\n    \"searchfield-results-decoration\", \"zoom\"\r\n  ], nonStandardPropertyKeywords = keySet(nonStandardPropertyKeywords_);\r\n\r\n  var fontProperties_ = [\r\n    \"font-family\", \"src\", \"unicode-range\", \"font-variant\", \"font-feature-settings\",\r\n    \"font-stretch\", \"font-weight\", \"font-style\"\r\n  ], fontProperties = keySet(fontProperties_);\r\n\r\n  var counterDescriptors_ = [\r\n    \"additive-symbols\", \"fallback\", \"negative\", \"pad\", \"prefix\", \"range\",\r\n    \"speak-as\", \"suffix\", \"symbols\", \"system\"\r\n  ], counterDescriptors = keySet(counterDescriptors_);\r\n\r\n  var colorKeywords_ = [\r\n    \"aliceblue\", \"antiquewhite\", \"aqua\", \"aquamarine\", \"azure\", \"beige\",\r\n    \"bisque\", \"black\", \"blanchedalmond\", \"blue\", \"blueviolet\", \"brown\",\r\n    \"burlywood\", \"cadetblue\", \"chartreuse\", \"chocolate\", \"coral\", \"cornflowerblue\",\r\n    \"cornsilk\", \"crimson\", \"cyan\", \"darkblue\", \"darkcyan\", \"darkgoldenrod\",\r\n    \"darkgray\", \"darkgreen\", \"darkkhaki\", \"darkmagenta\", \"darkolivegreen\",\r\n    \"darkorange\", \"darkorchid\", \"darkred\", \"darksalmon\", \"darkseagreen\",\r\n    \"darkslateblue\", \"darkslategray\", \"darkturquoise\", \"darkviolet\",\r\n    \"deeppink\", \"deepskyblue\", \"dimgray\", \"dodgerblue\", \"firebrick\",\r\n    \"floralwhite\", \"forestgreen\", \"fuchsia\", \"gainsboro\", \"ghostwhite\",\r\n    \"gold\", \"goldenrod\", \"gray\", \"grey\", \"green\", \"greenyellow\", \"honeydew\",\r\n    \"hotpink\", \"indianred\", \"indigo\", \"ivory\", \"khaki\", \"lavender\",\r\n    \"lavenderblush\", \"lawngreen\", \"lemonchiffon\", \"lightblue\", \"lightcoral\",\r\n    \"lightcyan\", \"lightgoldenrodyellow\", \"lightgray\", \"lightgreen\", \"lightpink\",\r\n    \"lightsalmon\", \"lightseagreen\", \"lightskyblue\", \"lightslategray\",\r\n    \"lightsteelblue\", \"lightyellow\", \"lime\", \"limegreen\", \"linen\", \"magenta\",\r\n    \"maroon\", \"mediumaquamarine\", \"mediumblue\", \"mediumorchid\", \"mediumpurple\",\r\n    \"mediumseagreen\", \"mediumslateblue\", \"mediumspringgreen\", \"mediumturquoise\",\r\n    \"mediumvioletred\", \"midnightblue\", \"mintcream\", \"mistyrose\", \"moccasin\",\r\n    \"navajowhite\", \"navy\", \"oldlace\", \"olive\", \"olivedrab\", \"orange\", \"orangered\",\r\n    \"orchid\", \"palegoldenrod\", \"palegreen\", \"paleturquoise\", \"palevioletred\",\r\n    \"papayawhip\", \"peachpuff\", \"peru\", \"pink\", \"plum\", \"powderblue\",\r\n    \"purple\", \"rebeccapurple\", \"red\", \"rosybrown\", \"royalblue\", \"saddlebrown\",\r\n    \"salmon\", \"sandybrown\", \"seagreen\", \"seashell\", \"sienna\", \"silver\", \"skyblue\",\r\n    \"slateblue\", \"slategray\", \"snow\", \"springgreen\", \"steelblue\", \"tan\",\r\n    \"teal\", \"thistle\", \"tomato\", \"turquoise\", \"violet\", \"wheat\", \"white\",\r\n    \"whitesmoke\", \"yellow\", \"yellowgreen\"\r\n  ], colorKeywords = keySet(colorKeywords_);\r\n\r\n  var valueKeywords_ = [\r\n    \"above\", \"absolute\", \"activeborder\", \"additive\", \"activecaption\", \"afar\",\r\n    \"after-white-space\", \"ahead\", \"alias\", \"all\", \"all-scroll\", \"alphabetic\", \"alternate\",\r\n    \"always\", \"amharic\", \"amharic-abegede\", \"antialiased\", \"appworkspace\",\r\n    \"arabic-indic\", \"armenian\", \"asterisks\", \"attr\", \"auto\", \"auto-flow\", \"avoid\", \"avoid-column\", \"avoid-page\",\r\n    \"avoid-region\", \"background\", \"backwards\", \"baseline\", \"below\", \"bidi-override\", \"binary\",\r\n    \"bengali\", \"blink\", \"block\", \"block-axis\", \"bold\", \"bolder\", \"border\", \"border-box\",\r\n    \"both\", \"bottom\", \"break\", \"break-all\", \"break-word\", \"bullets\", \"button\", \"button-bevel\",\r\n    \"buttonface\", \"buttonhighlight\", \"buttonshadow\", \"buttontext\", \"calc\", \"cambodian\",\r\n    \"capitalize\", \"caps-lock-indicator\", \"caption\", \"captiontext\", \"caret\",\r\n    \"cell\", \"center\", \"checkbox\", \"circle\", \"cjk-decimal\", \"cjk-earthly-branch\",\r\n    \"cjk-heavenly-stem\", \"cjk-ideographic\", \"clear\", \"clip\", \"close-quote\",\r\n    \"col-resize\", \"collapse\", \"color\", \"color-burn\", \"color-dodge\", \"column\", \"column-reverse\",\r\n    \"compact\", \"condensed\", \"contain\", \"content\", \"contents\",\r\n    \"content-box\", \"context-menu\", \"continuous\", \"copy\", \"counter\", \"counters\", \"cover\", \"crop\",\r\n    \"cross\", \"crosshair\", \"currentcolor\", \"cursive\", \"cyclic\", \"darken\", \"dashed\", \"decimal\",\r\n    \"decimal-leading-zero\", \"default\", \"default-button\", \"dense\", \"destination-atop\",\r\n    \"destination-in\", \"destination-out\", \"destination-over\", \"devanagari\", \"difference\",\r\n    \"disc\", \"discard\", \"disclosure-closed\", \"disclosure-open\", \"document\",\r\n    \"dot-dash\", \"dot-dot-dash\",\r\n    \"dotted\", \"double\", \"down\", \"e-resize\", \"ease\", \"ease-in\", \"ease-in-out\", \"ease-out\",\r\n    \"element\", \"ellipse\", \"ellipsis\", \"embed\", \"end\", \"ethiopic\", \"ethiopic-abegede\",\r\n    \"ethiopic-abegede-am-et\", \"ethiopic-abegede-gez\", \"ethiopic-abegede-ti-er\",\r\n    \"ethiopic-abegede-ti-et\", \"ethiopic-halehame-aa-er\",\r\n    \"ethiopic-halehame-aa-et\", \"ethiopic-halehame-am-et\",\r\n    \"ethiopic-halehame-gez\", \"ethiopic-halehame-om-et\",\r\n    \"ethiopic-halehame-sid-et\", \"ethiopic-halehame-so-et\",\r\n    \"ethiopic-halehame-ti-er\", \"ethiopic-halehame-ti-et\", \"ethiopic-halehame-tig\",\r\n    \"ethiopic-numeric\", \"ew-resize\", \"exclusion\", \"expanded\", \"extends\", \"extra-condensed\",\r\n    \"extra-expanded\", \"fantasy\", \"fast\", \"fill\", \"fixed\", \"flat\", \"flex\", \"flex-end\", \"flex-start\", \"footnotes\",\r\n    \"forwards\", \"from\", \"geometricPrecision\", \"georgian\", \"graytext\", \"grid\", \"groove\",\r\n    \"gujarati\", \"gurmukhi\", \"hand\", \"hangul\", \"hangul-consonant\", \"hard-light\", \"hebrew\",\r\n    \"help\", \"hidden\", \"hide\", \"higher\", \"highlight\", \"highlighttext\",\r\n    \"hiragana\", \"hiragana-iroha\", \"horizontal\", \"hsl\", \"hsla\", \"hue\", \"icon\", \"ignore\",\r\n    \"inactiveborder\", \"inactivecaption\", \"inactivecaptiontext\", \"infinite\",\r\n    \"infobackground\", \"infotext\", \"inherit\", \"initial\", \"inline\", \"inline-axis\",\r\n    \"inline-block\", \"inline-flex\", \"inline-grid\", \"inline-table\", \"inset\", \"inside\", \"intrinsic\", \"invert\",\r\n    \"italic\", \"japanese-formal\", \"japanese-informal\", \"justify\", \"kannada\",\r\n    \"katakana\", \"katakana-iroha\", \"keep-all\", \"khmer\",\r\n    \"korean-hangul-formal\", \"korean-hanja-formal\", \"korean-hanja-informal\",\r\n    \"landscape\", \"lao\", \"large\", \"larger\", \"left\", \"level\", \"lighter\", \"lighten\",\r\n    \"line-through\", \"linear\", \"linear-gradient\", \"lines\", \"list-item\", \"listbox\", \"listitem\",\r\n    \"local\", \"logical\", \"loud\", \"lower\", \"lower-alpha\", \"lower-armenian\",\r\n    \"lower-greek\", \"lower-hexadecimal\", \"lower-latin\", \"lower-norwegian\",\r\n    \"lower-roman\", \"lowercase\", \"ltr\", \"luminosity\", \"malayalam\", \"match\", \"matrix\", \"matrix3d\",\r\n    \"media-controls-background\", \"media-current-time-display\",\r\n    \"media-fullscreen-button\", \"media-mute-button\", \"media-play-button\",\r\n    \"media-return-to-realtime-button\", \"media-rewind-button\",\r\n    \"media-seek-back-button\", \"media-seek-forward-button\", \"media-slider\",\r\n    \"media-sliderthumb\", \"media-time-remaining-display\", \"media-volume-slider\",\r\n    \"media-volume-slider-container\", \"media-volume-sliderthumb\", \"medium\",\r\n    \"menu\", \"menulist\", \"menulist-button\", \"menulist-text\",\r\n    \"menulist-textfield\", \"menutext\", \"message-box\", \"middle\", \"min-intrinsic\",\r\n    \"mix\", \"mongolian\", \"monospace\", \"move\", \"multiple\", \"multiply\", \"myanmar\", \"n-resize\",\r\n    \"narrower\", \"ne-resize\", \"nesw-resize\", \"no-close-quote\", \"no-drop\",\r\n    \"no-open-quote\", \"no-repeat\", \"none\", \"normal\", \"not-allowed\", \"nowrap\",\r\n    \"ns-resize\", \"numbers\", \"numeric\", \"nw-resize\", \"nwse-resize\", \"oblique\", \"octal\", \"opacity\", \"open-quote\",\r\n    \"optimizeLegibility\", \"optimizeSpeed\", \"oriya\", \"oromo\", \"outset\",\r\n    \"outside\", \"outside-shape\", \"overlay\", \"overline\", \"padding\", \"padding-box\",\r\n    \"painted\", \"page\", \"paused\", \"persian\", \"perspective\", \"plus-darker\", \"plus-lighter\",\r\n    \"pointer\", \"polygon\", \"portrait\", \"pre\", \"pre-line\", \"pre-wrap\", \"preserve-3d\",\r\n    \"progress\", \"push-button\", \"radial-gradient\", \"radio\", \"read-only\",\r\n    \"read-write\", \"read-write-plaintext-only\", \"rectangle\", \"region\",\r\n    \"relative\", \"repeat\", \"repeating-linear-gradient\",\r\n    \"repeating-radial-gradient\", \"repeat-x\", \"repeat-y\", \"reset\", \"reverse\",\r\n    \"rgb\", \"rgba\", \"ridge\", \"right\", \"rotate\", \"rotate3d\", \"rotateX\", \"rotateY\",\r\n    \"rotateZ\", \"round\", \"row\", \"row-resize\", \"row-reverse\", \"rtl\", \"run-in\", \"running\",\r\n    \"s-resize\", \"sans-serif\", \"saturation\", \"scale\", \"scale3d\", \"scaleX\", \"scaleY\", \"scaleZ\", \"screen\",\r\n    \"scroll\", \"scrollbar\", \"scroll-position\", \"se-resize\", \"searchfield\",\r\n    \"searchfield-cancel-button\", \"searchfield-decoration\",\r\n    \"searchfield-results-button\", \"searchfield-results-decoration\", \"self-start\", \"self-end\",\r\n    \"semi-condensed\", \"semi-expanded\", \"separate\", \"serif\", \"show\", \"sidama\",\r\n    \"simp-chinese-formal\", \"simp-chinese-informal\", \"single\",\r\n    \"skew\", \"skewX\", \"skewY\", \"skip-white-space\", \"slide\", \"slider-horizontal\",\r\n    \"slider-vertical\", \"sliderthumb-horizontal\", \"sliderthumb-vertical\", \"slow\",\r\n    \"small\", \"small-caps\", \"small-caption\", \"smaller\", \"soft-light\", \"solid\", \"somali\",\r\n    \"source-atop\", \"source-in\", \"source-out\", \"source-over\", \"space\", \"space-around\", \"space-between\", \"space-evenly\", \"spell-out\", \"square\",\r\n    \"square-button\", \"start\", \"static\", \"status-bar\", \"stretch\", \"stroke\", \"sub\",\r\n    \"subpixel-antialiased\", \"super\", \"sw-resize\", \"symbolic\", \"symbols\", \"system-ui\", \"table\",\r\n    \"table-caption\", \"table-cell\", \"table-column\", \"table-column-group\",\r\n    \"table-footer-group\", \"table-header-group\", \"table-row\", \"table-row-group\",\r\n    \"tamil\",\r\n    \"telugu\", \"text\", \"text-bottom\", \"text-top\", \"textarea\", \"textfield\", \"thai\",\r\n    \"thick\", \"thin\", \"threeddarkshadow\", \"threedface\", \"threedhighlight\",\r\n    \"threedlightshadow\", \"threedshadow\", \"tibetan\", \"tigre\", \"tigrinya-er\",\r\n    \"tigrinya-er-abegede\", \"tigrinya-et\", \"tigrinya-et-abegede\", \"to\", \"top\",\r\n    \"trad-chinese-formal\", \"trad-chinese-informal\", \"transform\",\r\n    \"translate\", \"translate3d\", \"translateX\", \"translateY\", \"translateZ\",\r\n    \"transparent\", \"ultra-condensed\", \"ultra-expanded\", \"underline\", \"unset\", \"up\",\r\n    \"upper-alpha\", \"upper-armenian\", \"upper-greek\", \"upper-hexadecimal\",\r\n    \"upper-latin\", \"upper-norwegian\", \"upper-roman\", \"uppercase\", \"urdu\", \"url\",\r\n    \"var\", \"vertical\", \"vertical-text\", \"visible\", \"visibleFill\", \"visiblePainted\",\r\n    \"visibleStroke\", \"visual\", \"w-resize\", \"wait\", \"wave\", \"wider\",\r\n    \"window\", \"windowframe\", \"windowtext\", \"words\", \"wrap\", \"wrap-reverse\", \"x-large\", \"x-small\", \"xor\",\r\n    \"xx-large\", \"xx-small\"\r\n  ], valueKeywords = keySet(valueKeywords_);\r\n\r\n  var allWords = documentTypes_.concat(mediaTypes_).concat(mediaFeatures_).concat(mediaValueKeywords_)\r\n    .concat(propertyKeywords_).concat(nonStandardPropertyKeywords_).concat(colorKeywords_)\r\n    .concat(valueKeywords_);\r\n  CodeMirror.registerHelper(\"hintWords\", \"css\", allWords);\r\n\r\n  function tokenCComment(stream, state) {\r\n    var maybeEnd = false, ch;\r\n    while ((ch = stream.next()) != null) {\r\n      if (maybeEnd && ch == \"/\") {\r\n        state.tokenize = null;\r\n        break;\r\n      }\r\n      maybeEnd = (ch == \"*\");\r\n    }\r\n    return [\"comment\", \"comment\"];\r\n  }\r\n\r\n  CodeMirror.defineMIME(\"text/css\", {\r\n    documentTypes: documentTypes,\r\n    mediaTypes: mediaTypes,\r\n    mediaFeatures: mediaFeatures,\r\n    mediaValueKeywords: mediaValueKeywords,\r\n    propertyKeywords: propertyKeywords,\r\n    nonStandardPropertyKeywords: nonStandardPropertyKeywords,\r\n    fontProperties: fontProperties,\r\n    counterDescriptors: counterDescriptors,\r\n    colorKeywords: colorKeywords,\r\n    valueKeywords: valueKeywords,\r\n    tokenHooks: {\r\n      \"/\": function(stream, state) {\r\n        if (!stream.eat(\"*\")) return false;\r\n        state.tokenize = tokenCComment;\r\n        return tokenCComment(stream, state);\r\n      }\r\n    },\r\n    name: \"css\"\r\n  });\r\n\r\n  CodeMirror.defineMIME(\"text/x-scss\", {\r\n    mediaTypes: mediaTypes,\r\n    mediaFeatures: mediaFeatures,\r\n    mediaValueKeywords: mediaValueKeywords,\r\n    propertyKeywords: propertyKeywords,\r\n    nonStandardPropertyKeywords: nonStandardPropertyKeywords,\r\n    colorKeywords: colorKeywords,\r\n    valueKeywords: valueKeywords,\r\n    fontProperties: fontProperties,\r\n    allowNested: true,\r\n    lineComment: \"//\",\r\n    tokenHooks: {\r\n      \"/\": function(stream, state) {\r\n        if (stream.eat(\"/\")) {\r\n          stream.skipToEnd();\r\n          return [\"comment\", \"comment\"];\r\n        } else if (stream.eat(\"*\")) {\r\n          state.tokenize = tokenCComment;\r\n          return tokenCComment(stream, state);\r\n        } else {\r\n          return [\"operator\", \"operator\"];\r\n        }\r\n      },\r\n      \":\": function(stream) {\r\n        if (stream.match(/\\s*\\{/, false))\r\n          return [null, null]\r\n        return false;\r\n      },\r\n      \"$\": function(stream) {\r\n        stream.match(/^[\\w-]+/);\r\n        if (stream.match(/^\\s*:/, false))\r\n          return [\"variable-2\", \"variable-definition\"];\r\n        return [\"variable-2\", \"variable\"];\r\n      },\r\n      \"#\": function(stream) {\r\n        if (!stream.eat(\"{\")) return false;\r\n        return [null, \"interpolation\"];\r\n      }\r\n    },\r\n    name: \"css\",\r\n    helperType: \"scss\"\r\n  });\r\n\r\n  CodeMirror.defineMIME(\"text/x-less\", {\r\n    mediaTypes: mediaTypes,\r\n    mediaFeatures: mediaFeatures,\r\n    mediaValueKeywords: mediaValueKeywords,\r\n    propertyKeywords: propertyKeywords,\r\n    nonStandardPropertyKeywords: nonStandardPropertyKeywords,\r\n    colorKeywords: colorKeywords,\r\n    valueKeywords: valueKeywords,\r\n    fontProperties: fontProperties,\r\n    allowNested: true,\r\n    lineComment: \"//\",\r\n    tokenHooks: {\r\n      \"/\": function(stream, state) {\r\n        if (stream.eat(\"/\")) {\r\n          stream.skipToEnd();\r\n          return [\"comment\", \"comment\"];\r\n        } else if (stream.eat(\"*\")) {\r\n          state.tokenize = tokenCComment;\r\n          return tokenCComment(stream, state);\r\n        } else {\r\n          return [\"operator\", \"operator\"];\r\n        }\r\n      },\r\n      \"@\": function(stream) {\r\n        if (stream.eat(\"{\")) return [null, \"interpolation\"];\r\n        if (stream.match(/^(charset|document|font-face|import|(-(moz|ms|o|webkit)-)?keyframes|media|namespace|page|supports)\\b/i, false)) return false;\r\n        stream.eatWhile(/[\\w\\\\\\-]/);\r\n        if (stream.match(/^\\s*:/, false))\r\n          return [\"variable-2\", \"variable-definition\"];\r\n        return [\"variable-2\", \"variable\"];\r\n      },\r\n      \"&\": function() {\r\n        return [\"atom\", \"atom\"];\r\n      }\r\n    },\r\n    name: \"css\",\r\n    helperType: \"less\"\r\n  });\r\n\r\n  CodeMirror.defineMIME(\"text/x-gss\", {\r\n    documentTypes: documentTypes,\r\n    mediaTypes: mediaTypes,\r\n    mediaFeatures: mediaFeatures,\r\n    propertyKeywords: propertyKeywords,\r\n    nonStandardPropertyKeywords: nonStandardPropertyKeywords,\r\n    fontProperties: fontProperties,\r\n    counterDescriptors: counterDescriptors,\r\n    colorKeywords: colorKeywords,\r\n    valueKeywords: valueKeywords,\r\n    supportsAtComponent: true,\r\n    tokenHooks: {\r\n      \"/\": function(stream, state) {\r\n        if (!stream.eat(\"*\")) return false;\r\n        state.tokenize = tokenCComment;\r\n        return tokenCComment(stream, state);\r\n      }\r\n    },\r\n    name: \"css\",\r\n    helperType: \"gss\"\r\n  });\r\n\r\n});\r\n\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\r\n// Distributed under an MIT license: https://codemirror.net/LICENSE\r\n\r\ndefine('skylark-codemirror/mode/javascript/javascript',[\"../../CodeMirror\"], function(CodeMirror) {\r\n\r\n\r\nCodeMirror.defineMode(\"javascript\", function(config, parserConfig) {\r\n  var indentUnit = config.indentUnit;\r\n  var statementIndent = parserConfig.statementIndent;\r\n  var jsonldMode = parserConfig.jsonld;\r\n  var jsonMode = parserConfig.json || jsonldMode;\r\n  var isTS = parserConfig.typescript;\r\n  var wordRE = parserConfig.wordCharacters || /[\\w$\\xa1-\\uffff]/;\r\n\r\n  // Tokenizer\r\n\r\n  var keywords = function(){\r\n    function kw(type) {return {type: type, style: \"keyword\"};}\r\n    var A = kw(\"keyword a\"), B = kw(\"keyword b\"), C = kw(\"keyword c\"), D = kw(\"keyword d\");\r\n    var operator = kw(\"operator\"), atom = {type: \"atom\", style: \"atom\"};\r\n\r\n    return {\r\n      \"if\": kw(\"if\"), \"while\": A, \"with\": A, \"else\": B, \"do\": B, \"try\": B, \"finally\": B,\r\n      \"return\": D, \"break\": D, \"continue\": D, \"new\": kw(\"new\"), \"delete\": C, \"void\": C, \"throw\": C,\r\n      \"debugger\": kw(\"debugger\"), \"var\": kw(\"var\"), \"const\": kw(\"var\"), \"let\": kw(\"var\"),\r\n      \"function\": kw(\"function\"), \"catch\": kw(\"catch\"),\r\n      \"for\": kw(\"for\"), \"switch\": kw(\"switch\"), \"case\": kw(\"case\"), \"default\": kw(\"default\"),\r\n      \"in\": operator, \"typeof\": operator, \"instanceof\": operator,\r\n      \"true\": atom, \"false\": atom, \"null\": atom, \"undefined\": atom, \"NaN\": atom, \"Infinity\": atom,\r\n      \"this\": kw(\"this\"), \"class\": kw(\"class\"), \"super\": kw(\"atom\"),\r\n      \"yield\": C, \"export\": kw(\"export\"), \"import\": kw(\"import\"), \"extends\": C,\r\n      \"await\": C\r\n    };\r\n  }();\r\n\r\n  var isOperatorChar = /[+\\-*&%=<>!?|~^@]/;\r\n  var isJsonldKeyword = /^@(context|id|value|language|type|container|list|set|reverse|index|base|vocab|graph)\"/;\r\n\r\n  function readRegexp(stream) {\r\n    var escaped = false, next, inSet = false;\r\n    while ((next = stream.next()) != null) {\r\n      if (!escaped) {\r\n        if (next == \"/\" && !inSet) return;\r\n        if (next == \"[\") inSet = true;\r\n        else if (inSet && next == \"]\") inSet = false;\r\n      }\r\n      escaped = !escaped && next == \"\\\\\";\r\n    }\r\n  }\r\n\r\n  // Used as scratch variables to communicate multiple values without\r\n  // consing up tons of objects.\r\n  var type, content;\r\n  function ret(tp, style, cont) {\r\n    type = tp; content = cont;\r\n    return style;\r\n  }\r\n  function tokenBase(stream, state) {\r\n    var ch = stream.next();\r\n    if (ch == '\"' || ch == \"'\") {\r\n      state.tokenize = tokenString(ch);\r\n      return state.tokenize(stream, state);\r\n    } else if (ch == \".\" && stream.match(/^\\d+(?:[eE][+\\-]?\\d+)?/)) {\r\n      return ret(\"number\", \"number\");\r\n    } else if (ch == \".\" && stream.match(\"..\")) {\r\n      return ret(\"spread\", \"meta\");\r\n    } else if (/[\\[\\]{}\\(\\),;\\:\\.]/.test(ch)) {\r\n      return ret(ch);\r\n    } else if (ch == \"=\" && stream.eat(\">\")) {\r\n      return ret(\"=>\", \"operator\");\r\n    } else if (ch == \"0\" && stream.match(/^(?:x[\\da-f]+|o[0-7]+|b[01]+)n?/i)) {\r\n      return ret(\"number\", \"number\");\r\n    } else if (/\\d/.test(ch)) {\r\n      stream.match(/^\\d*(?:n|(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)?/);\r\n      return ret(\"number\", \"number\");\r\n    } else if (ch == \"/\") {\r\n      if (stream.eat(\"*\")) {\r\n        state.tokenize = tokenComment;\r\n        return tokenComment(stream, state);\r\n      } else if (stream.eat(\"/\")) {\r\n        stream.skipToEnd();\r\n        return ret(\"comment\", \"comment\");\r\n      } else if (expressionAllowed(stream, state, 1)) {\r\n        readRegexp(stream);\r\n        stream.match(/^\\b(([gimyus])(?![gimyus]*\\2))+\\b/);\r\n        return ret(\"regexp\", \"string-2\");\r\n      } else {\r\n        stream.eat(\"=\");\r\n        return ret(\"operator\", \"operator\", stream.current());\r\n      }\r\n    } else if (ch == \"`\") {\r\n      state.tokenize = tokenQuasi;\r\n      return tokenQuasi(stream, state);\r\n    } else if (ch == \"#\") {\r\n      stream.skipToEnd();\r\n      return ret(\"error\", \"error\");\r\n    } else if (isOperatorChar.test(ch)) {\r\n      if (ch != \">\" || !state.lexical || state.lexical.type != \">\") {\r\n        if (stream.eat(\"=\")) {\r\n          if (ch == \"!\" || ch == \"=\") stream.eat(\"=\")\r\n        } else if (/[<>*+\\-]/.test(ch)) {\r\n          stream.eat(ch)\r\n          if (ch == \">\") stream.eat(ch)\r\n        }\r\n      }\r\n      return ret(\"operator\", \"operator\", stream.current());\r\n    } else if (wordRE.test(ch)) {\r\n      stream.eatWhile(wordRE);\r\n      var word = stream.current()\r\n      if (state.lastType != \".\") {\r\n        if (keywords.propertyIsEnumerable(word)) {\r\n          var kw = keywords[word]\r\n          return ret(kw.type, kw.style, word)\r\n        }\r\n        if (word == \"async\" && stream.match(/^(\\s|\\/\\*.*?\\*\\/)*[\\[\\(\\w]/, false))\r\n          return ret(\"async\", \"keyword\", word)\r\n      }\r\n      return ret(\"variable\", \"variable\", word)\r\n    }\r\n  }\r\n\r\n  function tokenString(quote) {\r\n    return function(stream, state) {\r\n      var escaped = false, next;\r\n      if (jsonldMode && stream.peek() == \"@\" && stream.match(isJsonldKeyword)){\r\n        state.tokenize = tokenBase;\r\n        return ret(\"jsonld-keyword\", \"meta\");\r\n      }\r\n      while ((next = stream.next()) != null) {\r\n        if (next == quote && !escaped) break;\r\n        escaped = !escaped && next == \"\\\\\";\r\n      }\r\n      if (!escaped) state.tokenize = tokenBase;\r\n      return ret(\"string\", \"string\");\r\n    };\r\n  }\r\n\r\n  function tokenComment(stream, state) {\r\n    var maybeEnd = false, ch;\r\n    while (ch = stream.next()) {\r\n      if (ch == \"/\" && maybeEnd) {\r\n        state.tokenize = tokenBase;\r\n        break;\r\n      }\r\n      maybeEnd = (ch == \"*\");\r\n    }\r\n    return ret(\"comment\", \"comment\");\r\n  }\r\n\r\n  function tokenQuasi(stream, state) {\r\n    var escaped = false, next;\r\n    while ((next = stream.next()) != null) {\r\n      if (!escaped && (next == \"`\" || next == \"$\" && stream.eat(\"{\"))) {\r\n        state.tokenize = tokenBase;\r\n        break;\r\n      }\r\n      escaped = !escaped && next == \"\\\\\";\r\n    }\r\n    return ret(\"quasi\", \"string-2\", stream.current());\r\n  }\r\n\r\n  var brackets = \"([{}])\";\r\n  // This is a crude lookahead trick to try and notice that we're\r\n  // parsing the argument patterns for a fat-arrow function before we\r\n  // actually hit the arrow token. It only works if the arrow is on\r\n  // the same line as the arguments and there's no strange noise\r\n  // (comments) in between. Fallback is to only notice when we hit the\r\n  // arrow, and not declare the arguments as locals for the arrow\r\n  // body.\r\n  function findFatArrow(stream, state) {\r\n    if (state.fatArrowAt) state.fatArrowAt = null;\r\n    var arrow = stream.string.indexOf(\"=>\", stream.start);\r\n    if (arrow < 0) return;\r\n\r\n    if (isTS) { // Try to skip TypeScript return type declarations after the arguments\r\n      var m = /:\\s*(?:\\w+(?:<[^>]*>|\\[\\])?|\\{[^}]*\\})\\s*$/.exec(stream.string.slice(stream.start, arrow))\r\n      if (m) arrow = m.index\r\n    }\r\n\r\n    var depth = 0, sawSomething = false;\r\n    for (var pos = arrow - 1; pos >= 0; --pos) {\r\n      var ch = stream.string.charAt(pos);\r\n      var bracket = brackets.indexOf(ch);\r\n      if (bracket >= 0 && bracket < 3) {\r\n        if (!depth) { ++pos; break; }\r\n        if (--depth == 0) { if (ch == \"(\") sawSomething = true; break; }\r\n      } else if (bracket >= 3 && bracket < 6) {\r\n        ++depth;\r\n      } else if (wordRE.test(ch)) {\r\n        sawSomething = true;\r\n      } else if (/[\"'\\/]/.test(ch)) {\r\n        return;\r\n      } else if (sawSomething && !depth) {\r\n        ++pos;\r\n        break;\r\n      }\r\n    }\r\n    if (sawSomething && !depth) state.fatArrowAt = pos;\r\n  }\r\n\r\n  // Parser\r\n\r\n  var atomicTypes = {\"atom\": true, \"number\": true, \"variable\": true, \"string\": true, \"regexp\": true, \"this\": true, \"jsonld-keyword\": true};\r\n\r\n  function JSLexical(indented, column, type, align, prev, info) {\r\n    this.indented = indented;\r\n    this.column = column;\r\n    this.type = type;\r\n    this.prev = prev;\r\n    this.info = info;\r\n    if (align != null) this.align = align;\r\n  }\r\n\r\n  function inScope(state, varname) {\r\n    for (var v = state.localVars; v; v = v.next)\r\n      if (v.name == varname) return true;\r\n    for (var cx = state.context; cx; cx = cx.prev) {\r\n      for (var v = cx.vars; v; v = v.next)\r\n        if (v.name == varname) return true;\r\n    }\r\n  }\r\n\r\n  function parseJS(state, style, type, content, stream) {\r\n    var cc = state.cc;\r\n    // Communicate our context to the combinators.\r\n    // (Less wasteful than consing up a hundred closures on every call.)\r\n    cx.state = state; cx.stream = stream; cx.marked = null, cx.cc = cc; cx.style = style;\r\n\r\n    if (!state.lexical.hasOwnProperty(\"align\"))\r\n      state.lexical.align = true;\r\n\r\n    while(true) {\r\n      var combinator = cc.length ? cc.pop() : jsonMode ? expression : statement;\r\n      if (combinator(type, content)) {\r\n        while(cc.length && cc[cc.length - 1].lex)\r\n          cc.pop()();\r\n        if (cx.marked) return cx.marked;\r\n        if (type == \"variable\" && inScope(state, content)) return \"variable-2\";\r\n        return style;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Combinator utils\r\n\r\n  var cx = {state: null, column: null, marked: null, cc: null};\r\n  function pass() {\r\n    for (var i = arguments.length - 1; i >= 0; i--) cx.cc.push(arguments[i]);\r\n  }\r\n  function cont() {\r\n    pass.apply(null, arguments);\r\n    return true;\r\n  }\r\n  function inList(name, list) {\r\n    for (var v = list; v; v = v.next) if (v.name == name) return true\r\n    return false;\r\n  }\r\n  function register(varname) {\r\n    var state = cx.state;\r\n    cx.marked = \"def\";\r\n    if (state.context) {\r\n      if (state.lexical.info == \"var\" && state.context && state.context.block) {\r\n        // FIXME function decls are also not block scoped\r\n        var newContext = registerVarScoped(varname, state.context)\r\n        if (newContext != null) {\r\n          state.context = newContext\r\n          return\r\n        }\r\n      } else if (!inList(varname, state.localVars)) {\r\n        state.localVars = new Var(varname, state.localVars)\r\n        return\r\n      }\r\n    }\r\n    // Fall through means this is global\r\n    if (parserConfig.globalVars && !inList(varname, state.globalVars))\r\n      state.globalVars = new Var(varname, state.globalVars)\r\n  }\r\n  function registerVarScoped(varname, context) {\r\n    if (!context) {\r\n      return null\r\n    } else if (context.block) {\r\n      var inner = registerVarScoped(varname, context.prev)\r\n      if (!inner) return null\r\n      if (inner == context.prev) return context\r\n      return new Context(inner, context.vars, true)\r\n    } else if (inList(varname, context.vars)) {\r\n      return context\r\n    } else {\r\n      return new Context(context.prev, new Var(varname, context.vars), false)\r\n    }\r\n  }\r\n\r\n  function isModifier(name) {\r\n    return name == \"public\" || name == \"private\" || name == \"protected\" || name == \"abstract\" || name == \"readonly\"\r\n  }\r\n\r\n  // Combinators\r\n\r\n  function Context(prev, vars, block) { this.prev = prev; this.vars = vars; this.block = block }\r\n  function Var(name, next) { this.name = name; this.next = next }\r\n\r\n  var defaultVars = new Var(\"this\", new Var(\"arguments\", null))\r\n  function pushcontext() {\r\n    cx.state.context = new Context(cx.state.context, cx.state.localVars, false)\r\n    cx.state.localVars = defaultVars\r\n  }\r\n  function pushblockcontext() {\r\n    cx.state.context = new Context(cx.state.context, cx.state.localVars, true)\r\n    cx.state.localVars = null\r\n  }\r\n  function popcontext() {\r\n    cx.state.localVars = cx.state.context.vars\r\n    cx.state.context = cx.state.context.prev\r\n  }\r\n  popcontext.lex = true\r\n  function pushlex(type, info) {\r\n    var result = function() {\r\n      var state = cx.state, indent = state.indented;\r\n      if (state.lexical.type == \"stat\") indent = state.lexical.indented;\r\n      else for (var outer = state.lexical; outer && outer.type == \")\" && outer.align; outer = outer.prev)\r\n        indent = outer.indented;\r\n      state.lexical = new JSLexical(indent, cx.stream.column(), type, null, state.lexical, info);\r\n    };\r\n    result.lex = true;\r\n    return result;\r\n  }\r\n  function poplex() {\r\n    var state = cx.state;\r\n    if (state.lexical.prev) {\r\n      if (state.lexical.type == \")\")\r\n        state.indented = state.lexical.indented;\r\n      state.lexical = state.lexical.prev;\r\n    }\r\n  }\r\n  poplex.lex = true;\r\n\r\n  function expect(wanted) {\r\n    function exp(type) {\r\n      if (type == wanted) return cont();\r\n      else if (wanted == \";\" || type == \"}\" || type == \")\" || type == \"]\") return pass();\r\n      else return cont(exp);\r\n    };\r\n    return exp;\r\n  }\r\n\r\n  function statement(type, value) {\r\n    if (type == \"var\") return cont(pushlex(\"vardef\", value), vardef, expect(\";\"), poplex);\r\n    if (type == \"keyword a\") return cont(pushlex(\"form\"), parenExpr, statement, poplex);\r\n    if (type == \"keyword b\") return cont(pushlex(\"form\"), statement, poplex);\r\n    if (type == \"keyword d\") return cx.stream.match(/^\\s*$/, false) ? cont() : cont(pushlex(\"stat\"), maybeexpression, expect(\";\"), poplex);\r\n    if (type == \"debugger\") return cont(expect(\";\"));\r\n    if (type == \"{\") return cont(pushlex(\"}\"), pushblockcontext, block, poplex, popcontext);\r\n    if (type == \";\") return cont();\r\n    if (type == \"if\") {\r\n      if (cx.state.lexical.info == \"else\" && cx.state.cc[cx.state.cc.length - 1] == poplex)\r\n        cx.state.cc.pop()();\r\n      return cont(pushlex(\"form\"), parenExpr, statement, poplex, maybeelse);\r\n    }\r\n    if (type == \"function\") return cont(functiondef);\r\n    if (type == \"for\") return cont(pushlex(\"form\"), forspec, statement, poplex);\r\n    if (type == \"class\" || (isTS && value == \"interface\")) {\r\n      cx.marked = \"keyword\"\r\n      return cont(pushlex(\"form\", type == \"class\" ? type : value), className, poplex)\r\n    }\r\n    if (type == \"variable\") {\r\n      if (isTS && value == \"declare\") {\r\n        cx.marked = \"keyword\"\r\n        return cont(statement)\r\n      } else if (isTS && (value == \"module\" || value == \"enum\" || value == \"type\") && cx.stream.match(/^\\s*\\w/, false)) {\r\n        cx.marked = \"keyword\"\r\n        if (value == \"enum\") return cont(enumdef);\r\n        else if (value == \"type\") return cont(typename, expect(\"operator\"), typeexpr, expect(\";\"));\r\n        else return cont(pushlex(\"form\"), pattern, expect(\"{\"), pushlex(\"}\"), block, poplex, poplex)\r\n      } else if (isTS && value == \"namespace\") {\r\n        cx.marked = \"keyword\"\r\n        return cont(pushlex(\"form\"), expression, statement, poplex)\r\n      } else if (isTS && value == \"abstract\") {\r\n        cx.marked = \"keyword\"\r\n        return cont(statement)\r\n      } else {\r\n        return cont(pushlex(\"stat\"), maybelabel);\r\n      }\r\n    }\r\n    if (type == \"switch\") return cont(pushlex(\"form\"), parenExpr, expect(\"{\"), pushlex(\"}\", \"switch\"), pushblockcontext,\r\n                                      block, poplex, poplex, popcontext);\r\n    if (type == \"case\") return cont(expression, expect(\":\"));\r\n    if (type == \"default\") return cont(expect(\":\"));\r\n    if (type == \"catch\") return cont(pushlex(\"form\"), pushcontext, maybeCatchBinding, statement, poplex, popcontext);\r\n    if (type == \"export\") return cont(pushlex(\"stat\"), afterExport, poplex);\r\n    if (type == \"import\") return cont(pushlex(\"stat\"), afterImport, poplex);\r\n    if (type == \"async\") return cont(statement)\r\n    if (value == \"@\") return cont(expression, statement)\r\n    return pass(pushlex(\"stat\"), expression, expect(\";\"), poplex);\r\n  }\r\n  function maybeCatchBinding(type) {\r\n    if (type == \"(\") return cont(funarg, expect(\")\"))\r\n  }\r\n  function expression(type, value) {\r\n    return expressionInner(type, value, false);\r\n  }\r\n  function expressionNoComma(type, value) {\r\n    return expressionInner(type, value, true);\r\n  }\r\n  function parenExpr(type) {\r\n    if (type != \"(\") return pass()\r\n    return cont(pushlex(\")\"), expression, expect(\")\"), poplex)\r\n  }\r\n  function expressionInner(type, value, noComma) {\r\n    if (cx.state.fatArrowAt == cx.stream.start) {\r\n      var body = noComma ? arrowBodyNoComma : arrowBody;\r\n      if (type == \"(\") return cont(pushcontext, pushlex(\")\"), commasep(funarg, \")\"), poplex, expect(\"=>\"), body, popcontext);\r\n      else if (type == \"variable\") return pass(pushcontext, pattern, expect(\"=>\"), body, popcontext);\r\n    }\r\n\r\n    var maybeop = noComma ? maybeoperatorNoComma : maybeoperatorComma;\r\n    if (atomicTypes.hasOwnProperty(type)) return cont(maybeop);\r\n    if (type == \"function\") return cont(functiondef, maybeop);\r\n    if (type == \"class\" || (isTS && value == \"interface\")) { cx.marked = \"keyword\"; return cont(pushlex(\"form\"), classExpression, poplex); }\r\n    if (type == \"keyword c\" || type == \"async\") return cont(noComma ? expressionNoComma : expression);\r\n    if (type == \"(\") return cont(pushlex(\")\"), maybeexpression, expect(\")\"), poplex, maybeop);\r\n    if (type == \"operator\" || type == \"spread\") return cont(noComma ? expressionNoComma : expression);\r\n    if (type == \"[\") return cont(pushlex(\"]\"), arrayLiteral, poplex, maybeop);\r\n    if (type == \"{\") return contCommasep(objprop, \"}\", null, maybeop);\r\n    if (type == \"quasi\") return pass(quasi, maybeop);\r\n    if (type == \"new\") return cont(maybeTarget(noComma));\r\n    if (type == \"import\") return cont(expression);\r\n    return cont();\r\n  }\r\n  function maybeexpression(type) {\r\n    if (type.match(/[;\\}\\)\\],]/)) return pass();\r\n    return pass(expression);\r\n  }\r\n\r\n  function maybeoperatorComma(type, value) {\r\n    if (type == \",\") return cont(expression);\r\n    return maybeoperatorNoComma(type, value, false);\r\n  }\r\n  function maybeoperatorNoComma(type, value, noComma) {\r\n    var me = noComma == false ? maybeoperatorComma : maybeoperatorNoComma;\r\n    var expr = noComma == false ? expression : expressionNoComma;\r\n    if (type == \"=>\") return cont(pushcontext, noComma ? arrowBodyNoComma : arrowBody, popcontext);\r\n    if (type == \"operator\") {\r\n      if (/\\+\\+|--/.test(value) || isTS && value == \"!\") return cont(me);\r\n      if (isTS && value == \"<\" && cx.stream.match(/^([^>]|<.*?>)*>\\s*\\(/, false))\r\n        return cont(pushlex(\">\"), commasep(typeexpr, \">\"), poplex, me);\r\n      if (value == \"?\") return cont(expression, expect(\":\"), expr);\r\n      return cont(expr);\r\n    }\r\n    if (type == \"quasi\") { return pass(quasi, me); }\r\n    if (type == \";\") return;\r\n    if (type == \"(\") return contCommasep(expressionNoComma, \")\", \"call\", me);\r\n    if (type == \".\") return cont(property, me);\r\n    if (type == \"[\") return cont(pushlex(\"]\"), maybeexpression, expect(\"]\"), poplex, me);\r\n    if (isTS && value == \"as\") { cx.marked = \"keyword\"; return cont(typeexpr, me) }\r\n    if (type == \"regexp\") {\r\n      cx.state.lastType = cx.marked = \"operator\"\r\n      cx.stream.backUp(cx.stream.pos - cx.stream.start - 1)\r\n      return cont(expr)\r\n    }\r\n  }\r\n  function quasi(type, value) {\r\n    if (type != \"quasi\") return pass();\r\n    if (value.slice(value.length - 2) != \"${\") return cont(quasi);\r\n    return cont(expression, continueQuasi);\r\n  }\r\n  function continueQuasi(type) {\r\n    if (type == \"}\") {\r\n      cx.marked = \"string-2\";\r\n      cx.state.tokenize = tokenQuasi;\r\n      return cont(quasi);\r\n    }\r\n  }\r\n  function arrowBody(type) {\r\n    findFatArrow(cx.stream, cx.state);\r\n    return pass(type == \"{\" ? statement : expression);\r\n  }\r\n  function arrowBodyNoComma(type) {\r\n    findFatArrow(cx.stream, cx.state);\r\n    return pass(type == \"{\" ? statement : expressionNoComma);\r\n  }\r\n  function maybeTarget(noComma) {\r\n    return function(type) {\r\n      if (type == \".\") return cont(noComma ? targetNoComma : target);\r\n      else if (type == \"variable\" && isTS) return cont(maybeTypeArgs, noComma ? maybeoperatorNoComma : maybeoperatorComma)\r\n      else return pass(noComma ? expressionNoComma : expression);\r\n    };\r\n  }\r\n  function target(_, value) {\r\n    if (value == \"target\") { cx.marked = \"keyword\"; return cont(maybeoperatorComma); }\r\n  }\r\n  function targetNoComma(_, value) {\r\n    if (value == \"target\") { cx.marked = \"keyword\"; return cont(maybeoperatorNoComma); }\r\n  }\r\n  function maybelabel(type) {\r\n    if (type == \":\") return cont(poplex, statement);\r\n    return pass(maybeoperatorComma, expect(\";\"), poplex);\r\n  }\r\n  function property(type) {\r\n    if (type == \"variable\") {cx.marked = \"property\"; return cont();}\r\n  }\r\n  function objprop(type, value) {\r\n    if (type == \"async\") {\r\n      cx.marked = \"property\";\r\n      return cont(objprop);\r\n    } else if (type == \"variable\" || cx.style == \"keyword\") {\r\n      cx.marked = \"property\";\r\n      if (value == \"get\" || value == \"set\") return cont(getterSetter);\r\n      var m // Work around fat-arrow-detection complication for detecting typescript typed arrow params\r\n      if (isTS && cx.state.fatArrowAt == cx.stream.start && (m = cx.stream.match(/^\\s*:\\s*/, false)))\r\n        cx.state.fatArrowAt = cx.stream.pos + m[0].length\r\n      return cont(afterprop);\r\n    } else if (type == \"number\" || type == \"string\") {\r\n      cx.marked = jsonldMode ? \"property\" : (cx.style + \" property\");\r\n      return cont(afterprop);\r\n    } else if (type == \"jsonld-keyword\") {\r\n      return cont(afterprop);\r\n    } else if (isTS && isModifier(value)) {\r\n      cx.marked = \"keyword\"\r\n      return cont(objprop)\r\n    } else if (type == \"[\") {\r\n      return cont(expression, maybetype, expect(\"]\"), afterprop);\r\n    } else if (type == \"spread\") {\r\n      return cont(expressionNoComma, afterprop);\r\n    } else if (value == \"*\") {\r\n      cx.marked = \"keyword\";\r\n      return cont(objprop);\r\n    } else if (type == \":\") {\r\n      return pass(afterprop)\r\n    }\r\n  }\r\n  function getterSetter(type) {\r\n    if (type != \"variable\") return pass(afterprop);\r\n    cx.marked = \"property\";\r\n    return cont(functiondef);\r\n  }\r\n  function afterprop(type) {\r\n    if (type == \":\") return cont(expressionNoComma);\r\n    if (type == \"(\") return pass(functiondef);\r\n  }\r\n  function commasep(what, end, sep) {\r\n    function proceed(type, value) {\r\n      if (sep ? sep.indexOf(type) > -1 : type == \",\") {\r\n        var lex = cx.state.lexical;\r\n        if (lex.info == \"call\") lex.pos = (lex.pos || 0) + 1;\r\n        return cont(function(type, value) {\r\n          if (type == end || value == end) return pass()\r\n          return pass(what)\r\n        }, proceed);\r\n      }\r\n      if (type == end || value == end) return cont();\r\n      if (sep && sep.indexOf(\";\") > -1) return pass(what)\r\n      return cont(expect(end));\r\n    }\r\n    return function(type, value) {\r\n      if (type == end || value == end) return cont();\r\n      return pass(what, proceed);\r\n    };\r\n  }\r\n  function contCommasep(what, end, info) {\r\n    for (var i = 3; i < arguments.length; i++)\r\n      cx.cc.push(arguments[i]);\r\n    return cont(pushlex(end, info), commasep(what, end), poplex);\r\n  }\r\n  function block(type) {\r\n    if (type == \"}\") return cont();\r\n    return pass(statement, block);\r\n  }\r\n  function maybetype(type, value) {\r\n    if (isTS) {\r\n      if (type == \":\" || value == \"in\") return cont(typeexpr);\r\n      if (value == \"?\") return cont(maybetype);\r\n    }\r\n  }\r\n  function mayberettype(type) {\r\n    if (isTS && type == \":\") {\r\n      if (cx.stream.match(/^\\s*\\w+\\s+is\\b/, false)) return cont(expression, isKW, typeexpr)\r\n      else return cont(typeexpr)\r\n    }\r\n  }\r\n  function isKW(_, value) {\r\n    if (value == \"is\") {\r\n      cx.marked = \"keyword\"\r\n      return cont()\r\n    }\r\n  }\r\n  function typeexpr(type, value) {\r\n    if (value == \"keyof\" || value == \"typeof\" || value == \"infer\") {\r\n      cx.marked = \"keyword\"\r\n      return cont(value == \"typeof\" ? expressionNoComma : typeexpr)\r\n    }\r\n    if (type == \"variable\" || value == \"void\") {\r\n      cx.marked = \"type\"\r\n      return cont(afterType)\r\n    }\r\n    if (value == \"|\" || value == \"&\") return cont(typeexpr)\r\n    if (type == \"string\" || type == \"number\" || type == \"atom\") return cont(afterType);\r\n    if (type == \"[\") return cont(pushlex(\"]\"), commasep(typeexpr, \"]\", \",\"), poplex, afterType)\r\n    if (type == \"{\") return cont(pushlex(\"}\"), commasep(typeprop, \"}\", \",;\"), poplex, afterType)\r\n    if (type == \"(\") return cont(commasep(typearg, \")\"), maybeReturnType, afterType)\r\n    if (type == \"<\") return cont(commasep(typeexpr, \">\"), typeexpr)\r\n  }\r\n  function maybeReturnType(type) {\r\n    if (type == \"=>\") return cont(typeexpr)\r\n  }\r\n  function typeprop(type, value) {\r\n    if (type == \"variable\" || cx.style == \"keyword\") {\r\n      cx.marked = \"property\"\r\n      return cont(typeprop)\r\n    } else if (value == \"?\" || type == \"number\" || type == \"string\") {\r\n      return cont(typeprop)\r\n    } else if (type == \":\") {\r\n      return cont(typeexpr)\r\n    } else if (type == \"[\") {\r\n      return cont(expect(\"variable\"), maybetype, expect(\"]\"), typeprop)\r\n    } else if (type == \"(\") {\r\n      return pass(functiondecl, typeprop)\r\n    }\r\n  }\r\n  function typearg(type, value) {\r\n    if (type == \"variable\" && cx.stream.match(/^\\s*[?:]/, false) || value == \"?\") return cont(typearg)\r\n    if (type == \":\") return cont(typeexpr)\r\n    if (type == \"spread\") return cont(typearg)\r\n    return pass(typeexpr)\r\n  }\r\n  function afterType(type, value) {\r\n    if (value == \"<\") return cont(pushlex(\">\"), commasep(typeexpr, \">\"), poplex, afterType)\r\n    if (value == \"|\" || type == \".\" || value == \"&\") return cont(typeexpr)\r\n    if (type == \"[\") return cont(typeexpr, expect(\"]\"), afterType)\r\n    if (value == \"extends\" || value == \"implements\") { cx.marked = \"keyword\"; return cont(typeexpr) }\r\n    if (value == \"?\") return cont(typeexpr, expect(\":\"), typeexpr)\r\n  }\r\n  function maybeTypeArgs(_, value) {\r\n    if (value == \"<\") return cont(pushlex(\">\"), commasep(typeexpr, \">\"), poplex, afterType)\r\n  }\r\n  function typeparam() {\r\n    return pass(typeexpr, maybeTypeDefault)\r\n  }\r\n  function maybeTypeDefault(_, value) {\r\n    if (value == \"=\") return cont(typeexpr)\r\n  }\r\n  function vardef(_, value) {\r\n    if (value == \"enum\") {cx.marked = \"keyword\"; return cont(enumdef)}\r\n    return pass(pattern, maybetype, maybeAssign, vardefCont);\r\n  }\r\n  function pattern(type, value) {\r\n    if (isTS && isModifier(value)) { cx.marked = \"keyword\"; return cont(pattern) }\r\n    if (type == \"variable\") { register(value); return cont(); }\r\n    if (type == \"spread\") return cont(pattern);\r\n    if (type == \"[\") return contCommasep(eltpattern, \"]\");\r\n    if (type == \"{\") return contCommasep(proppattern, \"}\");\r\n  }\r\n  function proppattern(type, value) {\r\n    if (type == \"variable\" && !cx.stream.match(/^\\s*:/, false)) {\r\n      register(value);\r\n      return cont(maybeAssign);\r\n    }\r\n    if (type == \"variable\") cx.marked = \"property\";\r\n    if (type == \"spread\") return cont(pattern);\r\n    if (type == \"}\") return pass();\r\n    if (type == \"[\") return cont(expression, expect(']'), expect(':'), proppattern);\r\n    return cont(expect(\":\"), pattern, maybeAssign);\r\n  }\r\n  function eltpattern() {\r\n    return pass(pattern, maybeAssign)\r\n  }\r\n  function maybeAssign(_type, value) {\r\n    if (value == \"=\") return cont(expressionNoComma);\r\n  }\r\n  function vardefCont(type) {\r\n    if (type == \",\") return cont(vardef);\r\n  }\r\n  function maybeelse(type, value) {\r\n    if (type == \"keyword b\" && value == \"else\") return cont(pushlex(\"form\", \"else\"), statement, poplex);\r\n  }\r\n  function forspec(type, value) {\r\n    if (value == \"await\") return cont(forspec);\r\n    if (type == \"(\") return cont(pushlex(\")\"), forspec1, poplex);\r\n  }\r\n  function forspec1(type) {\r\n    if (type == \"var\") return cont(vardef, forspec2);\r\n    if (type == \"variable\") return cont(forspec2);\r\n    return pass(forspec2)\r\n  }\r\n  function forspec2(type, value) {\r\n    if (type == \")\") return cont()\r\n    if (type == \";\") return cont(forspec2)\r\n    if (value == \"in\" || value == \"of\") { cx.marked = \"keyword\"; return cont(expression, forspec2) }\r\n    return pass(expression, forspec2)\r\n  }\r\n  function functiondef(type, value) {\r\n    if (value == \"*\") {cx.marked = \"keyword\"; return cont(functiondef);}\r\n    if (type == \"variable\") {register(value); return cont(functiondef);}\r\n    if (type == \"(\") return cont(pushcontext, pushlex(\")\"), commasep(funarg, \")\"), poplex, mayberettype, statement, popcontext);\r\n    if (isTS && value == \"<\") return cont(pushlex(\">\"), commasep(typeparam, \">\"), poplex, functiondef)\r\n  }\r\n  function functiondecl(type, value) {\r\n    if (value == \"*\") {cx.marked = \"keyword\"; return cont(functiondecl);}\r\n    if (type == \"variable\") {register(value); return cont(functiondecl);}\r\n    if (type == \"(\") return cont(pushcontext, pushlex(\")\"), commasep(funarg, \")\"), poplex, mayberettype, popcontext);\r\n    if (isTS && value == \"<\") return cont(pushlex(\">\"), commasep(typeparam, \">\"), poplex, functiondecl)\r\n  }\r\n  function typename(type, value) {\r\n    if (type == \"keyword\" || type == \"variable\") {\r\n      cx.marked = \"type\"\r\n      return cont(typename)\r\n    } else if (value == \"<\") {\r\n      return cont(pushlex(\">\"), commasep(typeparam, \">\"), poplex)\r\n    }\r\n  }\r\n  function funarg(type, value) {\r\n    if (value == \"@\") cont(expression, funarg)\r\n    if (type == \"spread\") return cont(funarg);\r\n    if (isTS && isModifier(value)) { cx.marked = \"keyword\"; return cont(funarg); }\r\n    if (isTS && type == \"this\") return cont(maybetype, maybeAssign)\r\n    return pass(pattern, maybetype, maybeAssign);\r\n  }\r\n  function classExpression(type, value) {\r\n    // Class expressions may have an optional name.\r\n    if (type == \"variable\") return className(type, value);\r\n    return classNameAfter(type, value);\r\n  }\r\n  function className(type, value) {\r\n    if (type == \"variable\") {register(value); return cont(classNameAfter);}\r\n  }\r\n  function classNameAfter(type, value) {\r\n    if (value == \"<\") return cont(pushlex(\">\"), commasep(typeparam, \">\"), poplex, classNameAfter)\r\n    if (value == \"extends\" || value == \"implements\" || (isTS && type == \",\")) {\r\n      if (value == \"implements\") cx.marked = \"keyword\";\r\n      return cont(isTS ? typeexpr : expression, classNameAfter);\r\n    }\r\n    if (type == \"{\") return cont(pushlex(\"}\"), classBody, poplex);\r\n  }\r\n  function classBody(type, value) {\r\n    if (type == \"async\" ||\r\n        (type == \"variable\" &&\r\n         (value == \"static\" || value == \"get\" || value == \"set\" || (isTS && isModifier(value))) &&\r\n         cx.stream.match(/^\\s+[\\w$\\xa1-\\uffff]/, false))) {\r\n      cx.marked = \"keyword\";\r\n      return cont(classBody);\r\n    }\r\n    if (type == \"variable\" || cx.style == \"keyword\") {\r\n      cx.marked = \"property\";\r\n      return cont(isTS ? classfield : functiondef, classBody);\r\n    }\r\n    if (type == \"number\" || type == \"string\") return cont(isTS ? classfield : functiondef, classBody);\r\n    if (type == \"[\")\r\n      return cont(expression, maybetype, expect(\"]\"), isTS ? classfield : functiondef, classBody)\r\n    if (value == \"*\") {\r\n      cx.marked = \"keyword\";\r\n      return cont(classBody);\r\n    }\r\n    if (isTS && type == \"(\") return pass(functiondecl, classBody)\r\n    if (type == \";\" || type == \",\") return cont(classBody);\r\n    if (type == \"}\") return cont();\r\n    if (value == \"@\") return cont(expression, classBody)\r\n  }\r\n  function classfield(type, value) {\r\n    if (value == \"?\") return cont(classfield)\r\n    if (type == \":\") return cont(typeexpr, maybeAssign)\r\n    if (value == \"=\") return cont(expressionNoComma)\r\n    var context = cx.state.lexical.prev, isInterface = context && context.info == \"interface\"\r\n    return pass(isInterface ? functiondecl : functiondef)\r\n  }\r\n  function afterExport(type, value) {\r\n    if (value == \"*\") { cx.marked = \"keyword\"; return cont(maybeFrom, expect(\";\")); }\r\n    if (value == \"default\") { cx.marked = \"keyword\"; return cont(expression, expect(\";\")); }\r\n    if (type == \"{\") return cont(commasep(exportField, \"}\"), maybeFrom, expect(\";\"));\r\n    return pass(statement);\r\n  }\r\n  function exportField(type, value) {\r\n    if (value == \"as\") { cx.marked = \"keyword\"; return cont(expect(\"variable\")); }\r\n    if (type == \"variable\") return pass(expressionNoComma, exportField);\r\n  }\r\n  function afterImport(type) {\r\n    if (type == \"string\") return cont();\r\n    if (type == \"(\") return pass(expression);\r\n    return pass(importSpec, maybeMoreImports, maybeFrom);\r\n  }\r\n  function importSpec(type, value) {\r\n    if (type == \"{\") return contCommasep(importSpec, \"}\");\r\n    if (type == \"variable\") register(value);\r\n    if (value == \"*\") cx.marked = \"keyword\";\r\n    return cont(maybeAs);\r\n  }\r\n  function maybeMoreImports(type) {\r\n    if (type == \",\") return cont(importSpec, maybeMoreImports)\r\n  }\r\n  function maybeAs(_type, value) {\r\n    if (value == \"as\") { cx.marked = \"keyword\"; return cont(importSpec); }\r\n  }\r\n  function maybeFrom(_type, value) {\r\n    if (value == \"from\") { cx.marked = \"keyword\"; return cont(expression); }\r\n  }\r\n  function arrayLiteral(type) {\r\n    if (type == \"]\") return cont();\r\n    return pass(commasep(expressionNoComma, \"]\"));\r\n  }\r\n  function enumdef() {\r\n    return pass(pushlex(\"form\"), pattern, expect(\"{\"), pushlex(\"}\"), commasep(enummember, \"}\"), poplex, poplex)\r\n  }\r\n  function enummember() {\r\n    return pass(pattern, maybeAssign);\r\n  }\r\n\r\n  function isContinuedStatement(state, textAfter) {\r\n    return state.lastType == \"operator\" || state.lastType == \",\" ||\r\n      isOperatorChar.test(textAfter.charAt(0)) ||\r\n      /[,.]/.test(textAfter.charAt(0));\r\n  }\r\n\r\n  function expressionAllowed(stream, state, backUp) {\r\n    return state.tokenize == tokenBase &&\r\n      /^(?:operator|sof|keyword [bcd]|case|new|export|default|spread|[\\[{}\\(,;:]|=>)$/.test(state.lastType) ||\r\n      (state.lastType == \"quasi\" && /\\{\\s*$/.test(stream.string.slice(0, stream.pos - (backUp || 0))))\r\n  }\r\n\r\n  // Interface\r\n\r\n  return {\r\n    startState: function(basecolumn) {\r\n      var state = {\r\n        tokenize: tokenBase,\r\n        lastType: \"sof\",\r\n        cc: [],\r\n        lexical: new JSLexical((basecolumn || 0) - indentUnit, 0, \"block\", false),\r\n        localVars: parserConfig.localVars,\r\n        context: parserConfig.localVars && new Context(null, null, false),\r\n        indented: basecolumn || 0\r\n      };\r\n      if (parserConfig.globalVars && typeof parserConfig.globalVars == \"object\")\r\n        state.globalVars = parserConfig.globalVars;\r\n      return state;\r\n    },\r\n\r\n    token: function(stream, state) {\r\n      if (stream.sol()) {\r\n        if (!state.lexical.hasOwnProperty(\"align\"))\r\n          state.lexical.align = false;\r\n        state.indented = stream.indentation();\r\n        findFatArrow(stream, state);\r\n      }\r\n      if (state.tokenize != tokenComment && stream.eatSpace()) return null;\r\n      var style = state.tokenize(stream, state);\r\n      if (type == \"comment\") return style;\r\n      state.lastType = type == \"operator\" && (content == \"++\" || content == \"--\") ? \"incdec\" : type;\r\n      return parseJS(state, style, type, content, stream);\r\n    },\r\n\r\n    indent: function(state, textAfter) {\r\n      if (state.tokenize == tokenComment) return CodeMirror.Pass;\r\n      if (state.tokenize != tokenBase) return 0;\r\n      var firstChar = textAfter && textAfter.charAt(0), lexical = state.lexical, top\r\n      // Kludge to prevent 'maybelse' from blocking lexical scope pops\r\n      if (!/^\\s*else\\b/.test(textAfter)) for (var i = state.cc.length - 1; i >= 0; --i) {\r\n        var c = state.cc[i];\r\n        if (c == poplex) lexical = lexical.prev;\r\n        else if (c != maybeelse) break;\r\n      }\r\n      while ((lexical.type == \"stat\" || lexical.type == \"form\") &&\r\n             (firstChar == \"}\" || ((top = state.cc[state.cc.length - 1]) &&\r\n                                   (top == maybeoperatorComma || top == maybeoperatorNoComma) &&\r\n                                   !/^[,\\.=+\\-*:?[\\(]/.test(textAfter))))\r\n        lexical = lexical.prev;\r\n      if (statementIndent && lexical.type == \")\" && lexical.prev.type == \"stat\")\r\n        lexical = lexical.prev;\r\n      var type = lexical.type, closing = firstChar == type;\r\n\r\n      if (type == \"vardef\") return lexical.indented + (state.lastType == \"operator\" || state.lastType == \",\" ? lexical.info.length + 1 : 0);\r\n      else if (type == \"form\" && firstChar == \"{\") return lexical.indented;\r\n      else if (type == \"form\") return lexical.indented + indentUnit;\r\n      else if (type == \"stat\")\r\n        return lexical.indented + (isContinuedStatement(state, textAfter) ? statementIndent || indentUnit : 0);\r\n      else if (lexical.info == \"switch\" && !closing && parserConfig.doubleIndentSwitch != false)\r\n        return lexical.indented + (/^(?:case|default)\\b/.test(textAfter) ? indentUnit : 2 * indentUnit);\r\n      else if (lexical.align) return lexical.column + (closing ? 0 : 1);\r\n      else return lexical.indented + (closing ? 0 : indentUnit);\r\n    },\r\n\r\n    electricInput: /^\\s*(?:case .*?:|default:|\\{|\\})$/,\r\n    blockCommentStart: jsonMode ? null : \"/*\",\r\n    blockCommentEnd: jsonMode ? null : \"*/\",\r\n    blockCommentContinue: jsonMode ? null : \" * \",\r\n    lineComment: jsonMode ? null : \"//\",\r\n    fold: \"brace\",\r\n    closeBrackets: \"()[]{}''\\\"\\\"``\",\r\n\r\n    helperType: jsonMode ? \"json\" : \"javascript\",\r\n    jsonldMode: jsonldMode,\r\n    jsonMode: jsonMode,\r\n\r\n    expressionAllowed: expressionAllowed,\r\n\r\n    skipExpression: function(state) {\r\n      var top = state.cc[state.cc.length - 1]\r\n      if (top == expression || top == expressionNoComma) state.cc.pop()\r\n    }\r\n  };\r\n});\r\n\r\nCodeMirror.registerHelper(\"wordChars\", \"javascript\", /[\\w$]/);\r\n\r\nCodeMirror.defineMIME(\"text/javascript\", \"javascript\");\r\nCodeMirror.defineMIME(\"text/ecmascript\", \"javascript\");\r\nCodeMirror.defineMIME(\"application/javascript\", \"javascript\");\r\nCodeMirror.defineMIME(\"application/x-javascript\", \"javascript\");\r\nCodeMirror.defineMIME(\"application/ecmascript\", \"javascript\");\r\nCodeMirror.defineMIME(\"application/json\", {name: \"javascript\", json: true});\r\nCodeMirror.defineMIME(\"application/x-json\", {name: \"javascript\", json: true});\r\nCodeMirror.defineMIME(\"application/ld+json\", {name: \"javascript\", jsonld: true});\r\nCodeMirror.defineMIME(\"text/typescript\", { name: \"javascript\", typescript: true });\r\nCodeMirror.defineMIME(\"application/typescript\", { name: \"javascript\", typescript: true });\r\n\r\n});\r\n\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\r\n// Distributed under an MIT license: https://codemirror.net/LICENSE\r\n\r\n\r\ndefine('skylark-codemirror/mode/htmlmixed/htmlmixed',[\r\n  \"../../CodeMirror\",\r\n  \"../xml/xml\",\r\n  \"../javascript/javascript\",\r\n  \"../css/css\"\r\n], function(CodeMirror) {\r\n\r\n  \"use strict\";\r\n\r\n  var defaultTags = {\r\n    script: [\r\n      [\"lang\", /(javascript|babel)/i, \"javascript\"],\r\n      [\"type\", /^(?:text|application)\\/(?:x-)?(?:java|ecma)script$|^module$|^$/i, \"javascript\"],\r\n      [\"type\", /./, \"text/plain\"],\r\n      [null, null, \"javascript\"]\r\n    ],\r\n    style:  [\r\n      [\"lang\", /^css$/i, \"css\"],\r\n      [\"type\", /^(text\\/)?(x-)?(stylesheet|css)$/i, \"css\"],\r\n      [\"type\", /./, \"text/plain\"],\r\n      [null, null, \"css\"]\r\n    ]\r\n  };\r\n\r\n  function maybeBackup(stream, pat, style) {\r\n    var cur = stream.current(), close = cur.search(pat);\r\n    if (close > -1) {\r\n      stream.backUp(cur.length - close);\r\n    } else if (cur.match(/<\\/?$/)) {\r\n      stream.backUp(cur.length);\r\n      if (!stream.match(pat, false)) stream.match(cur);\r\n    }\r\n    return style;\r\n  }\r\n\r\n  var attrRegexpCache = {};\r\n  function getAttrRegexp(attr) {\r\n    var regexp = attrRegexpCache[attr];\r\n    if (regexp) return regexp;\r\n    return attrRegexpCache[attr] = new RegExp(\"\\\\s+\" + attr + \"\\\\s*=\\\\s*('|\\\")?([^'\\\"]+)('|\\\")?\\\\s*\");\r\n  }\r\n\r\n  function getAttrValue(text, attr) {\r\n    var match = text.match(getAttrRegexp(attr))\r\n    return match ? /^\\s*(.*?)\\s*$/.exec(match[2])[1] : \"\"\r\n  }\r\n\r\n  function getTagRegexp(tagName, anchored) {\r\n    return new RegExp((anchored ? \"^\" : \"\") + \"<\\/\\s*\" + tagName + \"\\s*>\", \"i\");\r\n  }\r\n\r\n  function addTags(from, to) {\r\n    for (var tag in from) {\r\n      var dest = to[tag] || (to[tag] = []);\r\n      var source = from[tag];\r\n      for (var i = source.length - 1; i >= 0; i--)\r\n        dest.unshift(source[i])\r\n    }\r\n  }\r\n\r\n  function findMatchingMode(tagInfo, tagText) {\r\n    for (var i = 0; i < tagInfo.length; i++) {\r\n      var spec = tagInfo[i];\r\n      if (!spec[0] || spec[1].test(getAttrValue(tagText, spec[0]))) return spec[2];\r\n    }\r\n  }\r\n\r\n  CodeMirror.defineMode(\"htmlmixed\", function (config, parserConfig) {\r\n    var htmlMode = CodeMirror.getMode(config, {\r\n      name: \"xml\",\r\n      htmlMode: true,\r\n      multilineTagIndentFactor: parserConfig.multilineTagIndentFactor,\r\n      multilineTagIndentPastTag: parserConfig.multilineTagIndentPastTag\r\n    });\r\n\r\n    var tags = {};\r\n    var configTags = parserConfig && parserConfig.tags, configScript = parserConfig && parserConfig.scriptTypes;\r\n    addTags(defaultTags, tags);\r\n    if (configTags) addTags(configTags, tags);\r\n    if (configScript) for (var i = configScript.length - 1; i >= 0; i--)\r\n      tags.script.unshift([\"type\", configScript[i].matches, configScript[i].mode])\r\n\r\n    function html(stream, state) {\r\n      var style = htmlMode.token(stream, state.htmlState), tag = /\\btag\\b/.test(style), tagName\r\n      if (tag && !/[<>\\s\\/]/.test(stream.current()) &&\r\n          (tagName = state.htmlState.tagName && state.htmlState.tagName.toLowerCase()) &&\r\n          tags.hasOwnProperty(tagName)) {\r\n        state.inTag = tagName + \" \"\r\n      } else if (state.inTag && tag && />$/.test(stream.current())) {\r\n        var inTag = /^([\\S]+) (.*)/.exec(state.inTag)\r\n        state.inTag = null\r\n        var modeSpec = stream.current() == \">\" && findMatchingMode(tags[inTag[1]], inTag[2])\r\n        var mode = CodeMirror.getMode(config, modeSpec)\r\n        var endTagA = getTagRegexp(inTag[1], true), endTag = getTagRegexp(inTag[1], false);\r\n        state.token = function (stream, state) {\r\n          if (stream.match(endTagA, false)) {\r\n            state.token = html;\r\n            state.localState = state.localMode = null;\r\n            return null;\r\n          }\r\n          return maybeBackup(stream, endTag, state.localMode.token(stream, state.localState));\r\n        };\r\n        state.localMode = mode;\r\n        state.localState = CodeMirror.startState(mode, htmlMode.indent(state.htmlState, \"\", \"\"));\r\n      } else if (state.inTag) {\r\n        state.inTag += stream.current()\r\n        if (stream.eol()) state.inTag += \" \"\r\n      }\r\n      return style;\r\n    };\r\n\r\n    return {\r\n      startState: function () {\r\n        var state = CodeMirror.startState(htmlMode);\r\n        return {token: html, inTag: null, localMode: null, localState: null, htmlState: state};\r\n      },\r\n\r\n      copyState: function (state) {\r\n        var local;\r\n        if (state.localState) {\r\n          local = CodeMirror.copyState(state.localMode, state.localState);\r\n        }\r\n        return {token: state.token, inTag: state.inTag,\r\n                localMode: state.localMode, localState: local,\r\n                htmlState: CodeMirror.copyState(htmlMode, state.htmlState)};\r\n      },\r\n\r\n      token: function (stream, state) {\r\n        return state.token(stream, state);\r\n      },\r\n\r\n      indent: function (state, textAfter, line) {\r\n        if (!state.localMode || /^\\s*<\\//.test(textAfter))\r\n          return htmlMode.indent(state.htmlState, textAfter, line);\r\n        else if (state.localMode.indent)\r\n          return state.localMode.indent(state.localState, textAfter, line);\r\n        else\r\n          return CodeMirror.Pass;\r\n      },\r\n\r\n      innerMode: function (state) {\r\n        return {state: state.localState || state.htmlState, mode: state.localMode || htmlMode};\r\n      }\r\n    };\r\n  }, \"xml\", \"javascript\", \"css\");\r\n\r\n  CodeMirror.defineMIME(\"text/html\", \"htmlmixed\");\r\n});\r\n\ndefine('skylark-widgets-wordpad/addons/actions/HtmlAction',[\r\n  \"skylark-domx-query\",\r\n  \"skylark-codemirror/CodeMirror\",\r\n  \"../../addons\",\r\n  \"../../Action\",\r\n//  \"skylark-codemirror/addon/fold/foldcode\",\r\n//  \"skylark-codemirror/addon/fold/foldgutter\",\r\n//  \"skylark-codemirror/addon/fold/brace-fold\",\r\n//  \"skylark-codemirror/addon/fold/xml-fold\",\r\n//  \"skylark-codemirror/addon/fold/indent-fold\",\r\n//  \"skylark-codemirror/addon/fold/markdown-fold\",\r\n//  \"skylark-codemirror/addon/fold/comment-fold\",  \r\n  \"skylark-parsers-html\",\r\n  \"skylark-codemirror/addon/beautify/beautify\",  \r\n  \"skylark-codemirror/mode/xml/xml\",\r\n  \"skylark-codemirror/mode/css/css\",\r\n  \"skylark-codemirror/mode/javascript/javascript\",\r\n  \"skylark-codemirror/mode/htmlmixed/htmlmixed\"\r\n],function($,CodeMirror,addons,Action,html){ \r\n   var  hasProp = {}.hasOwnProperty,\r\n        slice = [].slice;\r\n  \r\n\r\n   var HtmlAction = Action.inherit({\r\n    name : 'html',\r\n\r\n    icon : 'html',\r\n\r\n    needFocus : false,\r\n\r\n    _init : function() {\r\n      Action.prototype._init.call(this);\r\n      this.editor.textarea.on('focus', (function(_this) {\r\n        return function(e) {\r\n          return _this.editor.el.addClass('focus').removeClass('error');\r\n        };\r\n      })(this));\r\n      this.editor.textarea.on('blur', (function(_this) {\r\n        return function(e) {\r\n          _this.editor.el.removeClass('focus');\r\n          return _this.editor.setValue(_this.editor.textarea.val());\r\n        };\r\n      })(this));\r\n      return this.editor.textarea.on('input', (function(_this) {\r\n        return function(e) {\r\n          return _this._resizeTextarea();\r\n        };\r\n      })(this));\r\n    },\r\n\r\n    status : function() {},\r\n\r\n    _execute : function() {\r\n      var action, i, len, ref,\r\n          self = this;\r\n      this.editor.blur();\r\n      this.editor.el.toggleClass('wordpad-html');\r\n      this.editor.htmlMode = this.editor.el.hasClass('wordpad-html');\r\n      if (this.editor.htmlMode) {\r\n        this.editor.hidePopover();\r\n        //this.editor.textarea.val(this.beautifyHTML(this.editor.textarea.val()));\r\n        var  codemirrorOptions =  { \r\n          mode: 'htmlmixed', \r\n          lineWrapping: true, \r\n          dragDrop: false, \r\n          autoCloseTags: true, \r\n          matchTags: true, \r\n          autoCloseBrackets: true, \r\n          matchBrackets: true, \r\n          indentUnit: 4, \r\n          indentWithTabs: false, \r\n          tabSize: 4, \r\n          hintOptions: {\r\n              completionSingle:\r\n              false\r\n          },\r\n          beautify : {\r\n            html : {\r\n              beautifyFunc: html.beautify\r\n            }\r\n          },\r\n          \r\n  //        extraKeys: {\"Ctrl-Q\": function(cm){ cm.foldCode(cm.getCursor()); }},\r\n  //        foldGutter: true,\r\n  //        gutters: [\"CodeMirror-linenumbers\", \"CodeMirror-foldgutter\"],\r\n        lineNumbers: true\r\n  \r\n        };\r\n       this.editor.sync(); \r\n       if (!this.CodeMirrorEditor) {\r\n         this.CodeMirrorEditor = CodeMirror.fromTextArea(this.editor.textarea[0], codemirrorOptions);\r\n         this.CodeMirrorEditor.on(\"blur\",function(){\r\n           self.editor.setValue(self.CodeMirrorEditor.getValue());\r\n         })\r\n       } else {\r\n         this.CodeMirrorEditor.setValue(this.editor.textarea.val());\r\n         this.CodeMirrorEditor.beautify();\r\n       }\r\n       //this._resizeTextarea();\r\n\r\n      } else {\r\n        this.editor.setValue(this.CodeMirrorEditor.getValue());\r\n        //this.editor.setValue(this.editor.textarea.val());\r\n      }\r\n      ref = this.editor._actions;\r\n      for (i = 0, len = ref.length; i < len; i++) {\r\n        action = ref[i];\r\n        if (action.name === 'html') {\r\n          action.setActive(this.editor.htmlMode);\r\n        } else {\r\n          action.setDisabled(this.editor.htmlMode);\r\n        }\r\n      }\r\n      return null;\r\n    },\r\n\r\n    beautifyHTML : function() {\r\n      return arguments[0];\r\n      var args;\r\n      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\r\n      if (beautify.html) {\r\n        return beautify.html.apply(beautify, args);\r\n      } else {\r\n        return beautify.apply(null, args);\r\n      }\r\n    },\r\n\r\n    _resizeTextarea : function() {\r\n      this._textareaPadding || (this._textareaPadding = this.editor.textarea.innerHeight() - this.editor.textarea.height());\r\n      return this.editor.textarea.height(this.editor.textarea[0].scrollHeight - this._textareaPadding);\r\n    }\r\n\r\n   });\r\n\r\n\r\n   addons.actions.html = HtmlAction; \r\n\r\n   return HtmlAction;\r\n});\ndefine('skylark-widgets-wordpad/addons/actions/ImagePopover',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"../../addons\",\r\n  \"../../Popover\"\r\n],function(langx, $,addons,Popover){ \r\n   var ImagePopover = Popover.inherit({\r\n\r\n   });\r\n\r\n  ImagePopover.prototype.offset = {\r\n    top: 6,\r\n    left: -4\r\n  };\r\n\r\n  ImagePopover.prototype.render = function() {\r\n    var tpl;\r\n    tpl = \"<div class=\\\"link-settings\\\">\\n  <div class=\\\"settings-field\\\">\\n    <label>\" + (this._t('imageUrl')) + \"</label>\\n    <input class=\\\"image-src\\\" type=\\\"text\\\" tabindex=\\\"1\\\" />\\n    <a class=\\\"btn-upload\\\" href=\\\"javascript:;\\\"\\n      title=\\\"\" + (this._t('uploadImage')) + \"\\\" tabindex=\\\"-1\\\">\\n      <span class=\\\"fa fa-upload\\\"></span>\\n    </a>\\n  </div>\\n  <div class='settings-field'>\\n    <label>\" + (this._t('imageAlt')) + \"</label>\\n    <input class=\\\"image-alt\\\" id=\\\"image-alt\\\" type=\\\"text\\\" tabindex=\\\"1\\\" />\\n  </div>\\n  <div class=\\\"settings-field\\\">\\n    <label>\" + (this._t('imageSize')) + \"</label>\\n    <input class=\\\"image-size\\\" id=\\\"image-width\\\" type=\\\"text\\\" tabindex=\\\"2\\\" />\\n    <span class=\\\"times\\\">×</span>\\n    <input class=\\\"image-size\\\" id=\\\"image-height\\\" type=\\\"text\\\" tabindex=\\\"3\\\" />\\n    <a class=\\\"btn-restore\\\" href=\\\"javascript:;\\\"\\n      title=\\\"\" + (this._t('restoreImageSize')) + \"\\\" tabindex=\\\"-1\\\">\\n      <span class=\\\"fa fa-undo\\\"></span>\\n    </a>\\n  </div>\\n</div>\";\r\n    this.el.addClass('image-popover').append(tpl);\r\n    this.srcEl = this.el.find('.image-src');\r\n    this.widthEl = this.el.find('#image-width');\r\n    this.heightEl = this.el.find('#image-height');\r\n    this.altEl = this.el.find('#image-alt');\r\n    this.srcEl.on('keydown', (function(_this) {\r\n      return function(e) {\r\n        var range;\r\n        if (!(e.which === 13 && !_this.target.hasClass('uploading'))) {\r\n          return;\r\n        }\r\n        e.preventDefault();\r\n        range = document.createRange();\r\n        _this.action.editor.editable.selection.setRangeAfter(_this.target, range);\r\n        return _this.hide();\r\n      };\r\n    })(this));\r\n    this.srcEl.on('blur', (function(_this) {\r\n      return function(e) {\r\n        return _this._loadImage(_this.srcEl.val());\r\n      };\r\n    })(this));\r\n    this.el.find('.image-size').on('blur', (function(_this) {\r\n      return function(e) {\r\n        _this._resizeImg($(e.currentTarget));\r\n        return _this.el.data('popover').refresh();\r\n      };\r\n    })(this));\r\n    this.el.find('.image-size').on('keyup', (function(_this) {\r\n      return function(e) {\r\n        var inputEl;\r\n        inputEl = $(e.currentTarget);\r\n        if (!(e.which === 13 || e.which === 27 || e.which === 9)) {\r\n          return _this._resizeImg(inputEl, true);\r\n        }\r\n      };\r\n    })(this));\r\n    this.el.find('.image-size').on('keydown', (function(_this) {\r\n      return function(e) {\r\n        var $img, inputEl, range;\r\n        inputEl = $(e.currentTarget);\r\n        if (e.which === 13 || e.which === 27) {\r\n          e.preventDefault();\r\n          if (e.which === 13) {\r\n            _this._resizeImg(inputEl);\r\n          } else {\r\n            _this._restoreImg();\r\n          }\r\n          $img = _this.target;\r\n          _this.hide();\r\n          range = document.createRange();\r\n          return _this.action.editor.editable.selection.setRangeAfter($img, range);\r\n        } else if (e.which === 9) {\r\n          return _this.el.data('popover').refresh();\r\n        }\r\n      };\r\n    })(this));\r\n    this.altEl.on('keydown', (function(_this) {\r\n      return function(e) {\r\n        var range;\r\n        if (e.which === 13) {\r\n          e.preventDefault();\r\n          range = document.createRange();\r\n          _this.action.editor.editable.selection.setRangeAfter(_this.target, range);\r\n          return _this.hide();\r\n        }\r\n      };\r\n    })(this));\r\n    this.altEl.on('keyup', (function(_this) {\r\n      return function(e) {\r\n        if (e.which === 13 || e.which === 27 || e.which === 9) {\r\n          return;\r\n        }\r\n        _this.alt = _this.altEl.val();\r\n        return _this.target.attr('alt', _this.alt);\r\n      };\r\n    })(this));\r\n    this.el.find('.btn-restore').on('click', (function(_this) {\r\n      return function(e) {\r\n        _this._restoreImg();\r\n        return _this.el.data('popover').refresh();\r\n      };\r\n    })(this));\r\n    this.editor.on('valuechanged', (function(_this) {\r\n      return function(e) {\r\n        if (_this.active) {\r\n          return _this.refresh();\r\n        }\r\n      };\r\n    })(this));\r\n    return this._initUploader();\r\n  };\r\n\r\n  ImagePopover.prototype._initUploader = function() {\r\n    var $uploadBtn, createInput;\r\n    $uploadBtn = this.el.find('.btn-upload');\r\n    if (this.editor.uploader == null) {\r\n      $uploadBtn.remove();\r\n      return;\r\n    }\r\n\r\n    var _this = this;\r\n    $uploadBtn.picker({\r\n      title: _this._t('uploadImage'),\r\n      multiple: false,\r\n      accept: 'image/gif,image/jpeg,image/jpg,image/png,image/svg',\r\n      picked : function(files){\r\n        _this.editor.uploader.upload(files, {\r\n          inline: true,\r\n          img: _this.target\r\n        });\r\n      }      \r\n\r\n    });\r\n  };\r\n\r\n  ImagePopover.prototype._resizeImg = function(inputEl, onlySetVal) {\r\n    var height, value, width;\r\n    if (onlySetVal == null) {\r\n      onlySetVal = false;\r\n    }\r\n    value = inputEl.val() * 1;\r\n    if (!(this.target && (langx.isNumber(value) || value < 0))) {\r\n      return;\r\n    }\r\n    if (inputEl.is(this.widthEl)) {\r\n      width = value;\r\n      height = this.height * value / this.width;\r\n      this.heightEl.val(height);\r\n    } else {\r\n      height = value;\r\n      width = this.width * value / this.height;\r\n      this.widthEl.val(width);\r\n    }\r\n    if (!onlySetVal) {\r\n      this.target.attr({\r\n        width: width,\r\n        height: height\r\n      });\r\n      return this.editor.trigger('valuechanged');\r\n    }\r\n  };\r\n\r\n  ImagePopover.prototype._restoreImg = function() {\r\n    var ref, size;\r\n    size = ((ref = this.target.data('image-size')) != null ? ref.split(\",\") : void 0) || [this.width, this.height];\r\n    this.target.attr({\r\n      width: size[0] * 1,\r\n      height: size[1] * 1\r\n    });\r\n    this.widthEl.val(size[0]);\r\n    this.heightEl.val(size[1]);\r\n    return this.editor.trigger('valuechanged');\r\n  };\r\n\r\n  ImagePopover.prototype._loadImage = function(src, callback) {\r\n    if (/^data:image/.test(src) && !this.editor.uploader) {\r\n      if (callback) {\r\n        callback(false);\r\n      }\r\n      return;\r\n    }\r\n    if (this.target.attr('src') === src) {\r\n      return;\r\n    }\r\n    return this.action.loadImage(this.target, src, (function(_this) {\r\n      return function(img) {\r\n        var blob;\r\n        if (!img) {\r\n          return;\r\n        }\r\n        if (_this.active) {\r\n          _this.width = img.width;\r\n          _this.height = img.height;\r\n          _this.widthEl.val(_this.width);\r\n          _this.heightEl.val(_this.height);\r\n        }\r\n        if (/^data:image/.test(src)) {\r\n          blob = _this.editor.editable.util.dataURLtoBlob(src);\r\n          blob.name = \"Base64 Image.png\";\r\n          _this.editor.uploader.upload(blob, {\r\n            inline: true,\r\n            img: _this.target\r\n          });\r\n        } else {\r\n          _this.editor.trigger('valuechanged');\r\n        }\r\n        if (callback) {\r\n          return callback(img);\r\n        }\r\n      };\r\n    })(this));\r\n  };\r\n\r\n  ImagePopover.prototype.show = function() {\r\n    var $img, args;\r\n    args = 1 <= arguments.length ? Array.prototype.slice.call(arguments, 0) : [];\r\n    Popover.prototype.show.apply(this, args);\r\n    $img = this.target;\r\n    this.width = $img.width();\r\n    this.height = $img.height();\r\n    this.alt = $img.attr('alt');\r\n    if ($img.hasClass('uploading')) {\r\n      return this.srcEl.val(this._t('uploading')).prop('disabled', true);\r\n    } else {\r\n      this.srcEl.val($img.attr('src')).prop('disabled', false);\r\n      this.widthEl.val(this.width);\r\n      this.heightEl.val(this.height);\r\n      return this.altEl.val(this.alt);\r\n    }\r\n  };\r\n\r\n  return ImagePopover;\r\n\r\n});\ndefine('skylark-widgets-wordpad/addons/actions/ImageAction',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-io-diskfs/select\",\r\n  \"skylark-io-diskfs/readImage\",  \r\n  \"../../addons\",\r\n  \"../../Action\",\r\n  \"./ImagePopover\",\r\n  \"../../i18n\"\r\n],function(langx, $, selectFile,readImage, addons,Action,ImagePopover,i18n){ \r\n   var ImageAction = Action.inherit({\r\n      name : 'image',\r\n\r\n      icon : 'image',\r\n\r\n      htmlTag : 'img',\r\n\r\n      disableTag : 'pre, table',\r\n\r\n      placeholderImage : '',\r\n\r\n      needFocus : false,\r\n\r\n      _init : function() {\r\n        Action.prototype._init.call(this);\r\n\r\n        var item, k, len, ref;\r\n        if (this.editor.options.imageAction) {\r\n          if (Array.isArray(this.editor.options.imageAction)) {\r\n            this.menu = [];\r\n            ref = this.editor.options.imageAction;\r\n            for (k = 0, len = ref.length; k < len; k++) {\r\n              item = ref[k];\r\n              this.menu.push({\r\n                name: item + '-image',\r\n                text: this._t(item + 'Image')\r\n              });\r\n            }\r\n          } else {\r\n            this.menu = false;\r\n          }\r\n        } else {\r\n          if (this.editor.uploader != null) {\r\n            this.menu = [\r\n              {\r\n                name: 'upload-image',\r\n                text: i18n.translate('uploadImage'),\r\n                param: 'uploadImage'\r\n              }, {\r\n                name: 'external-image',\r\n                text: i18n.translate('externalImage'),\r\n                param : 'externalImage'\r\n              }\r\n            ];\r\n          } else {\r\n            this.menu = false;\r\n          }\r\n        }\r\n        this.placeholderImage = this.editor.options.addons.actions.image.placeholderImage;\r\n        this.editor.body.on('click', 'img:not([data-non-image])', (function(_this) {\r\n          return function(e) {\r\n            var $img, range;\r\n            $img = $(e.currentTarget);\r\n            range = document.createRange();\r\n            range.selectNode($img[0]);\r\n            _this.editor.editable.selection.range(range);\r\n            if (!_this.editor.editable.util.support.onselectionchange) {\r\n              _this.editor.trigger('selectionchanged');\r\n            }\r\n            return false;\r\n          };\r\n        })(this));\r\n        this.editor.body.on('mouseup', 'img:not([data-non-image])', function(e) {\r\n          return false;\r\n        });\r\n        this.editor.on('selectionchanged.image', (function(_this) {\r\n          return function() {\r\n            var $contents, $img, range;\r\n            range = _this.editor.editable.selection.range();\r\n            if (range == null) {\r\n              return;\r\n            }\r\n            $contents = $(range.cloneContents()).contents();\r\n            if ($contents.length === 1 && $contents.is('img:not([data-non-image])')) {\r\n              $img = $(range.startContainer).contents().eq(range.startOffset);\r\n              if (!_this.popover) {\r\n                _this.popover = new ImagePopover({\r\n                  action: _this\r\n                });                \r\n              }\r\n\r\n              return _this.popover.show($img);\r\n            } else {\r\n              if (_this.popover) {\r\n                  return _this.popover.hide();\r\n              }\r\n            }\r\n          };\r\n        })(this));\r\n        this.editor.on('valuechanged.image', (function(_this) {\r\n          return function() {\r\n            var $masks;\r\n            $masks = _this.editor.wrapper.find('.wordpad-image-loading');\r\n            if (!($masks.length > 0)) {\r\n              return;\r\n            }\r\n            return $masks.each(function(i, mask) {\r\n              var $img, $mask, file;\r\n              $mask = $(mask);\r\n              $img = $mask.data('img');\r\n              if (!($img && $img.parent().length > 0)) {\r\n                $mask.remove();\r\n                if ($img) {\r\n                  file = $img.data('file');\r\n                  if (file) {\r\n                    _this.editor.uploader.cancel(file);\r\n                    if (_this.editor.body.find('img.uploading').length < 1) {\r\n                      return _this.editor.uploader.trigger('uploadready', [file]);\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            });\r\n          };\r\n        })(this));\r\n\r\n        this.popover = new ImagePopover({\r\n          action: this\r\n        });\r\n\r\n        if (this.editor.options.upload) {\r\n          return this._initUploader();\r\n        }\r\n\r\n\r\n      },\r\n\r\n      _initUploader : function($uploadItem) {\r\n\r\n        this.editor.uploader.on('beforeupload', (function(_this) {\r\n          return function(e, file) {\r\n            var $img;\r\n            if (!file.inline) {\r\n              return;\r\n            }\r\n            if (file.img) {\r\n              $img = $(file.img);\r\n            } else {\r\n              $img = _this.createImage(file.name);\r\n              file.img = $img;\r\n            }\r\n            $img.addClass('uploading');\r\n            $img.data('file', file);\r\n            return readImage(file.obj).then(function(img) {\r\n              var src;\r\n              if (!$img.hasClass('uploading')) {\r\n                return;\r\n              }\r\n              src = img ? img.src : _this.placeholderImage;\r\n              return _this.loadImage($img, src, function() {\r\n                if (_this.popover.active) {\r\n                  _this.popover.refresh();\r\n                  return _this.popover.srcEl.val(_this._t('uploading')).prop('disabled', true);\r\n                }\r\n              });\r\n            });\r\n          };\r\n        })(this));\r\n        uploadProgress = langx.proxy(this.editor.editable.util.throttle(function(e, file, loaded, total) {\r\n          var $img, $mask, percent;\r\n          if (!file.inline) {\r\n            return;\r\n          }\r\n          $mask = file.img.data('mask');\r\n          if (!$mask) {\r\n            return;\r\n          }\r\n          $img = $mask.data('img');\r\n          if (!($img.hasClass('uploading') && $img.parent().length > 0)) {\r\n            $mask.remove();\r\n            return;\r\n          }\r\n          percent = loaded / total;\r\n          percent = (percent * 100).toFixed(0);\r\n          if (percent > 99) {\r\n            percent = 99;\r\n          }\r\n          return $mask.find('.progress').height((100 - percent) + \"%\");\r\n        }, 500), this);\r\n        this.editor.uploader.on('uploadprogress', uploadProgress);\r\n        this.editor.uploader.on('uploadsuccess', (function(_this) {\r\n          return function(e, file, result) {\r\n            var $img, img_path, msg;\r\n            if (!file.inline) {\r\n              return;\r\n            }\r\n            $img = file.img;\r\n            if (!($img.hasClass('uploading') && $img.parent().length > 0)) {\r\n              return;\r\n            }\r\n            try {\r\n                if (typeof result !== 'object') {\r\n                   result = JSON.parse(result);\r\n                }\r\n                if (_this.editor.options.upload.uploadedImagePath) {\r\n                \timg_path = _this.editor.options.upload.uploadedImagePath(result);\r\n                } else {\r\n\t                img_path = result.files[0].url;\r\n                }\r\n            } catch (_error) {\r\n                e = _error;\r\n                result = {\r\n                  success: false\r\n                };\r\n            }\r\n\r\n            _this.loadImage($img, img_path, function() {\r\n              var $mask;\r\n              $img.removeData('file');\r\n              $img.removeClass('uploading').removeClass('loading');\r\n              $mask = $img.data('mask');\r\n              if ($mask) {\r\n                $mask.remove();\r\n              }\r\n              $img.removeData('mask');\r\n              _this.editor.trigger('valuechanged');\r\n              if (_this.editor.body.find('img.uploading').length < 1) {\r\n                return _this.editor.uploader.trigger('uploadready', [file, result]);\r\n              }\r\n            });\r\n            if (_this.popover.active) {\r\n              _this.popover.srcEl.prop('disabled', false);\r\n              return _this.popover.srcEl.val(img_path);\r\n            }\r\n          };\r\n        })(this));\r\n        return this.editor.uploader.on('uploaderror', (function(_this) {\r\n          return function(e, file, xhr) {\r\n            var $img, msg, result;\r\n            if (!file.inline) {\r\n              return;\r\n            }\r\n            if (xhr.statusText === 'abort') {\r\n              return;\r\n            }\r\n            if (xhr.responseText) {\r\n              try {\r\n                result = JSON.parse(xhr.responseText);\r\n                msg = result.msg;\r\n              } catch (_error) {\r\n                e = _error;\r\n                msg = _this._t('uploadError');\r\n              }\r\n            }\r\n            $img = file.img;\r\n            if (!($img.hasClass('uploading') && $img.parent().length > 0)) {\r\n              return;\r\n            }\r\n            _this.loadImage($img, _this.placeholderImage, function() {\r\n              var $mask;\r\n              $img.removeData('file');\r\n              $img.removeClass('uploading').removeClass('loading');\r\n              $mask = $img.data('mask');\r\n              if ($mask) {\r\n                $mask.remove();\r\n              }\r\n              return $img.removeData('mask');\r\n            });\r\n            if (_this.popover.active) {\r\n              _this.popover.srcEl.prop('disabled', false);\r\n              _this.popover.srcEl.val(_this.placeholderImage);\r\n            }\r\n            _this.editor.trigger('valuechanged');\r\n            if (_this.editor.body.find('img.uploading').length < 1) {\r\n              return _this.editor.uploader.trigger('uploadready', [file, result]);\r\n            }\r\n          };\r\n        })(this));\r\n      },\r\n\r\n      _status : function() {\r\n        return this._disableStatus();\r\n      },\r\n\r\n      loadImage : function($img, src, callback) {\r\n        var $mask, img, positionMask;\r\n        positionMask = (function(_this) {\r\n          return function() {\r\n            var imgOffset, wrapperOffset;\r\n            imgOffset = $img.offset();\r\n            wrapperOffset = _this.editor.wrapper.offset();\r\n            return $mask.css({\r\n              top: imgOffset.top - wrapperOffset.top,\r\n              left: imgOffset.left - wrapperOffset.left,\r\n              width: $img.width(),\r\n              height: $img.height()\r\n            }).show();\r\n          };\r\n        })(this);\r\n        $img.addClass('loading');\r\n        $mask = $img.data('mask');\r\n        if (!$mask) {\r\n          $mask = $('<div class=\"wordpad-image-loading\">\\n  <div class=\"progress\"></div>\\n</div>').hide().appendTo(this.editor.wrapper);\r\n          positionMask();\r\n          $img.data('mask', $mask);\r\n          $mask.data('img', $img);\r\n        }\r\n        img = new Image();\r\n        img.onload = (function(_this) {\r\n          return function() {\r\n            var height, width;\r\n            if (!$img.hasClass('loading') && !$img.hasClass('uploading')) {\r\n              return;\r\n            }\r\n            width = img.width;\r\n            height = img.height;\r\n            $img.attr({\r\n              src: src,\r\n              width: width,\r\n              height: height,\r\n              'data-image-size': width + ',' + height\r\n            }).removeClass('loading');\r\n            if ($img.hasClass('uploading')) {\r\n              _this.editor.editable.util.reflow(_this.editor.body);\r\n              positionMask();\r\n            } else {\r\n              $mask.remove();\r\n              $img.removeData('mask');\r\n            }\r\n            _this.editor.trigger('valuechanged');\r\n            if (langx.isFunction(callback)) {\r\n              return callback(img);\r\n            }\r\n          };\r\n        })(this);\r\n        img.onerror = function() {\r\n          if (langx.isFunction(callback)) {\r\n            callback(false);\r\n          }\r\n          $mask.remove();\r\n          return $img.removeData('mask').removeClass('loading');\r\n        };\r\n        return img.src = src;\r\n      },\r\n\r\n      createImage : function(name) {\r\n        var $img, range;\r\n        if (name == null) {\r\n          name = 'Image';\r\n        }\r\n        if (!this.editor.editable.inputManager.focused) {\r\n          this.editor.focus();\r\n        }\r\n        range = this.editor.editable.selection.range();\r\n        range.deleteContents();\r\n        this.editor.editable.selection.range(range);\r\n        $img = $('<img/>').attr('alt', name);\r\n        range.insertNode($img[0]);\r\n        this.editor.editable.selection.setRangeAfter($img, range);\r\n        this.editor.trigger('valuechanged');\r\n        return $img;\r\n      },\r\n\r\n      _execute : function(menuItem) {\r\n        var self = this;\r\n        if (menuItem==\"uploadImage\") {\r\n          selectFile({\r\n            title: this._t('uploadImage'),\r\n            multiple: true,\r\n            accept: 'image/gif,image/jpeg,image/jpg,image/png,image/svg',\r\n            picked : function(files){\r\n              self.editor.uploader.upload(files, {\r\n                inline: true,\r\n//                img: $img\r\n              });\r\n            }      \r\n\r\n          });\r\n        } else {\r\n          var $img = this.createImage();\r\n          return this.loadImage($img, this.placeholderImage, (function(_this) {\r\n            return function() {\r\n              _this.editor.trigger('valuechanged');\r\n              _this.editor.editable.util.reflow($img);\r\n              $img.click();\r\n              return _this.popover.one('popovershow', function() {\r\n                _this.popover.srcEl.focus();\r\n                return _this.popover.srcEl[0].select();\r\n              });\r\n            };\r\n          })(this));\r\n\r\n        }\r\n      }\r\n\r\n   });\r\n\r\n   addons.actions.image = ImageAction; \r\n\r\n   return ImageAction;\r\n\r\n});\ndefine('skylark-widgets-wordpad/addons/actions/IndentAction',[\r\n  \"skylark-domx-query\",\r\n  \"../../addons\",\r\n  \"../../Action\"\r\n],function($,addons,Action){ \r\n  \r\n   var IndentAction = Action.inherit({\r\n      name :'indent',\r\n\r\n      icon : 'indent',\r\n\r\n      _init : function() {\r\n        var hotkey;\r\n        hotkey = this.editor.options.tabIndent === false ? '' : ' (Tab)';\r\n        this.title = this._t(this.name) + hotkey;\r\n        return Action.prototype._init.call(this);\r\n      },\r\n\r\n      _execute : function() {\r\n        return this.editor.editable.indent()\r\n      }\r\n\r\n   });\r\n\r\n\r\n   addons.actions.indent = IndentAction; \r\n\r\n   return IndentAction;\r\n});\ndefine('skylark-widgets-wordpad/addons/actions/ItalicAction',[\r\n  \"skylark-domx-query\",\r\n  \"../../addons\",\r\n  \"../../Action\"\r\n],function($,addons,Action){ \r\n  \r\n\r\n  var ItalicAction = Action.inherit({\r\n      name : 'italic',\r\n\r\n      icon : 'italic',\r\n\r\n      htmlTag : 'i',\r\n\r\n      disableTag : 'pre',\r\n\r\n      shortcut : 'cmd+i',\r\n\r\n      _init : function() {\r\n        if (this.editor.editable.util.os.mac) {\r\n          this.title = this.title + \" ( Cmd + i )\";\r\n        } else {\r\n          this.title = this.title + \" ( Ctrl + i )\";\r\n          this.shortcut = 'ctrl+i';\r\n        }\r\n        return Action.prototype._init.call(this);\r\n      },\r\n\r\n      _activeStatus : function() {\r\n        var active;\r\n        active = this.editor.editable.isActive('italic');\r\n        this.setActive(active);\r\n        return this.active;\r\n      },\r\n\r\n      _execute : function() {\r\n        return this.editor.editable.italic();\r\n      }\r\n   });\r\n\r\n\r\n   addons.actions.italic = ItalicAction; \r\n\r\n   return ItalicAction;\r\n\r\n});\ndefine('skylark-widgets-wordpad/addons/actions/LinkPopover',[\r\n  \"skylark-domx-query\",\r\n  \"../../addons\",\r\n  \"../../Popover\"\r\n],function($,addons,Popover){ \r\n  var LinkPopover = Popover.inherit({\r\n    render : function() {\r\n      var tpl;\r\n      tpl = \"<div class=\\\"link-settings\\\">\\n  <div class=\\\"settings-field\\\">\\n    <label>\" + (this._t('linkText')) + \"</label>\\n    <input class=\\\"link-text\\\" type=\\\"text\\\"/>\\n    <a class=\\\"btn-unlink\\\" href=\\\"javascript:;\\\" title=\\\"\" + (this._t('removeLink')) + \"\\\"\\n      tabindex=\\\"-1\\\">\\n      <span class=\\\"fa fa-unlink\\\"></span>\\n    </a>\\n  </div>\\n  <div class=\\\"settings-field\\\">\\n    <label>\" + (this._t('linkUrl')) + \"</label>\\n    <input class=\\\"link-url\\\" type=\\\"text\\\"/>\\n  </div>\\n  <div class=\\\"settings-field\\\">\\n    <label>\" + (this._t('linkTarget')) + \"</label>\\n    <select class=\\\"link-target\\\">\\n      <option value=\\\"_blank\\\">\" + (this._t('openLinkInNewWindow')) + \" (_blank)</option>\\n      <option value=\\\"_self\\\">\" + (this._t('openLinkInCurrentWindow')) + \" (_self)</option>\\n    </select>\\n  </div>\\n</div>\";\r\n      this.el.addClass('link-popover').append(tpl);\r\n      this.textEl = this.el.find('.link-text');\r\n      this.urlEl = this.el.find('.link-url');\r\n      this.unlinkEl = this.el.find('.btn-unlink');\r\n      this.selectTarget = this.el.find('.link-target');\r\n      this.textEl.on('keyup', (function(_this) {\r\n        return function(e) {\r\n          if (e.which === 13) {\r\n            return;\r\n          }\r\n          _this.target.text(_this.textEl.val());\r\n          return _this.editor.editable.inputManager.throttledValueChanged();\r\n        };\r\n      })(this));\r\n      this.urlEl.on('keyup', (function(_this) {\r\n        return function(e) {\r\n          var val;\r\n          if (e.which === 13) {\r\n            return;\r\n          }\r\n          val = _this.urlEl.val();\r\n          if (!(/^(http|https|ftp|ftps|file)?:\\/\\/|^(mailto|tel)?:|^\\//ig.test(val) || !val)) {\r\n            val = 'http://' + val;\r\n          }\r\n          _this.target.attr('href', val);\r\n          return _this.editor.editable.inputManager.throttledValueChanged();\r\n        };\r\n      })(this));\r\n      $([this.urlEl[0], this.textEl[0]]).on('keydown', (function(_this) {\r\n        return function(e) {\r\n          var range;\r\n          if (e.which === 13 || e.which === 27 || (!e.shiftKey && e.which === 9 && $(e.target).hasClass('link-url'))) {\r\n            e.preventDefault();\r\n            range = document.createRange();\r\n            _this.editor.editable.selection.setRangeAfter(_this.target, range);\r\n            _this.hide();\r\n            return _this.editor.editable.inputManager.throttledValueChanged();\r\n          }\r\n        };\r\n      })(this));\r\n      this.unlinkEl.on('click', (function(_this) {\r\n        return function(e) {\r\n          var range, txtNode;\r\n          txtNode = document.createTextNode(_this.target.text());\r\n          _this.target.replaceWith(txtNode);\r\n          _this.hide();\r\n          range = document.createRange();\r\n          _this.editor.editable.selection.setRangeAfter(txtNode, range);\r\n          return _this.editor.editable.inputManager.throttledValueChanged();\r\n        };\r\n      })(this));\r\n      return this.selectTarget.on('change', (function(_this) {\r\n        return function(e) {\r\n          _this.target.attr('target', _this.selectTarget.val());\r\n          return _this.editor.editable.inputManager.throttledValueChanged();\r\n        };\r\n      })(this));\r\n    },\r\n\r\n    show : function() {\r\n      var args;\r\n      args = 1 <= arguments.length ? Array.prototype.slice.call(arguments, 0) : [];\r\n      Popover.prototype.show.apply(this, args);\r\n      this.textEl.val(this.target.text());\r\n      return this.urlEl.val(this.target.attr('href'));\r\n    }\r\n  });\r\n\r\n  return LinkPopover;\r\n});\ndefine('skylark-widgets-wordpad/addons/actions/LinkAction',[\r\n  \"skylark-domx-query\",\r\n  \"../../addons\",\r\n  \"../../Action\",\r\n  \"../../i18n\",\r\n  \"./LinkPopover\"\r\n],function($,addons,Action,i18n,LinkPopover){ \r\n  \r\n\r\n  var LinkAction = Action.inherit({\r\n    name : 'link',\r\n\r\n    icon : 'link',\r\n\r\n    htmlTag : 'a',\r\n\r\n    disableTag : 'pre',\r\n\r\n    _status : function() {\r\n     Action.prototype._status.call(this);\r\n      if (this.active && !this.editor.editable.selection.rangeAtEndOf(this.node)) {\r\n        if (!this.popover) {\r\n          this.popover = new LinkPopover({\r\n            action: this\r\n          });\r\n        }\r\n        return this.popover.show(this.node);\r\n      } else {\r\n        if (this.popover) {\r\n          return this.popover.hide();\r\n        }\r\n      }\r\n    },\r\n\r\n    _execute : function() {\r\n      if (this.active) {\r\n        this.popover.one('popovershow', (function(_this) {\r\n          return function() {\r\n            if (linkText) {\r\n              _this.popover.urlEl.focus();\r\n              return _this.popover.urlEl[0].select();\r\n            } else {\r\n              _this.popover.textEl.focus();\r\n              return _this.popover.textEl[0].select();\r\n            }\r\n          };\r\n        })(this));\r\n\r\n      }\r\n\r\n      return this.editor.editable.link(this.active,i18n.translate('linkText'));\r\n\r\n    }\r\n\r\n   });\r\n\r\n\r\n\r\n  addons.actions.link = LinkAction; \r\n\r\n  return LinkAction;\r\n\r\n});\ndefine('skylark-widgets-wordpad/addons/actions/ListAction',[\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-query\",\r\n  \"../../addons\",\r\n  \"../../Action\"\r\n],function(noder,$,addons,Action){ \r\n  var ListAction = Action.inherit({\r\n    type : '',\r\n\r\n    disableTag : 'pre, table',\r\n\r\n    _execute : function(param) {\r\n      return this.editor.editable.list(this.type,param,this.disableTag);\r\n    }\r\n\r\n   });\r\n\r\n\r\n\r\n    return ListAction;\r\n\t\r\n});\ndefine('skylark-widgets-wordpad/addons/actions/MarkAction',[\r\n  \"skylark-domx-query\",\r\n  \"../../addons\",\r\n  \"../../Action\",\r\n  \"../../i18n\"\r\n],function($,addons,Action,i18n){ \r\n\r\n\r\n  var MarkAction = Action.inherit({\r\n    name : 'mark',\r\n\r\n    icon : 'mark',\r\n\r\n    htmlTag : 'mark',\r\n\r\n    disableTag : 'pre, table',\r\n\r\n    _execute : function() {\r\n      var $end, $start, range;\r\n      range = this.editor.editable.selection.range();\r\n      if (this.active) {\r\n        this.editor.editable.selection.save();\r\n        this.unmark(range);\r\n        this.editor.editable.selection.restore();\r\n        this.editor.trigger('valuechanged');\r\n        return;\r\n      }\r\n      if (range.collapsed) {\r\n        return;\r\n      }\r\n      this.editor.editable.selection.save();\r\n      $start = $(range.startContainer);\r\n      $end = $(range.endContainer);\r\n      if ($start.closest('mark').length) {\r\n        range.setStartBefore($start.closest('mark')[0]);\r\n      }\r\n      if ($end.closest('mark').length) {\r\n        range.setEndAfter($end.closest('mark')[0]);\r\n      }\r\n      this.mark(range);\r\n      this.editor.editable.selection.restore();\r\n      this.editor.trigger('valuechanged');\r\n      if (this.editor.editable.util.support.onselectionchange) {\r\n        return this.editor.trigger('selectionchanged');\r\n      }\r\n    },\r\n\r\n    mark : function(range) {\r\n      var $contents, $mark;\r\n      if (range == null) {\r\n        range = this.editor.editable.selection.range();\r\n      }\r\n      $contents = $(range.extractContents());\r\n      $contents.find('mark').each(function(index, ele) {\r\n        return $(ele).replaceWith($(ele).html());\r\n      });\r\n      $mark = $('<mark>').append($contents);\r\n      return range.insertNode($mark[0]);\r\n    },\r\n\r\n    unmark : function(range) {\r\n      var $mark;\r\n      if (range == null) {\r\n        range = this.editor.editable.selection.range();\r\n      }\r\n      if (range.collapsed) {\r\n        $mark = $(range.commonAncestorContainer);\r\n        if (!$mark.is('mark')) {\r\n          $mark = $mark.parent();\r\n        }\r\n      } else if ($(range.startContainer).closest('mark').length) {\r\n        $mark = $(range.startContainer).closest('mark');\r\n      } else if ($(range.endContainer).closest('mark').length) {\r\n        $mark = $(range.endContainer).closest('mark');\r\n      }\r\n      return $mark.replaceWith($mark.html());\r\n    }\r\n\r\n  });\r\n\r\n  \r\n  addons.actions.mark = MarkAction;\r\n\r\n  return MarkAction;\r\n\r\n }); \ndefine('skylark-widgets-wordpad/addons/actions/OrderListAction',[\r\n  \"skylark-domx-query\",\r\n  \"../../addons\",\r\n  \"./ListAction\"\r\n],function($,addons,ListAction){ \r\n  var OrderListAction = ListAction.inherit({\r\n    type : 'ol',\r\n\r\n    name : 'ol',\r\n\r\n    icon : 'listol',\r\n\r\n    htmlTag : 'ol',\r\n\r\n    shortcut : 'cmd+/',\r\n\r\n    _init : function() {\r\n      if (this.editor.editable.util.os.mac) {\r\n        this.title = this.title + ' ( Cmd + / )';\r\n      } else {\r\n        this.title = this.title + ' ( ctrl + / )';\r\n        this.shortcut = 'ctrl+/';\r\n      }\r\n      return ListAction.prototype._init.call(this);\r\n    }\r\n\r\n   });\r\n\r\n    return addons.actions.ol = OrderListAction;\t\r\n});\ndefine('skylark-widgets-wordpad/addons/actions/OutdentAction',[\r\n  \"skylark-domx-query\",\r\n  \"../../addons\",\r\n  \"../../Action\"\r\n],function($,addons,Action){ \r\n  var OutdentAction = Action.inherit({\r\n    name : 'outdent',\r\n\r\n    icon : 'outdent',\r\n\r\n    _init : function() {\r\n      var hotkey;\r\n      hotkey = this.editor.options.tabIndent === false ? '' : ' (Shift + Tab)';\r\n      this.title = this._t(this.name) + hotkey;\r\n      return Action.prototype._init.call(this);\r\n    },\r\n\r\n    _status : function() {},\r\n\r\n    _execute : function() {\r\n      return this.editor.editable.outdent();\r\n    }\r\n\r\n   });\r\n\r\n\r\n   addons.actions.outdent = OutdentAction; \r\n \r\n   return OutdentAction;\r\n\r\n});\ndefine('skylark-widgets-wordpad/addons/actions/StrikethroughAction',[\r\n  \"skylark-domx-query\",\r\n  \"../../addons\",\r\n  \"../../Action\"\r\n],function($,addons,Action){ \r\n  \r\n  var StrikethroughAction = Action.inherit({\r\n    name : 'strikethrough',\r\n\r\n    icon : 'strikethrough',\r\n\r\n    htmlTag : 'strike',\r\n\r\n    disableTag : 'pre',\r\n\r\n    _activeStatus : function() {\r\n      var active;\r\n      active = this.editor.editable.isActive('strikethrough');\r\n      this.setActive(active);\r\n      return this.active;\r\n    },\r\n\r\n    _execute : function() {\r\n      return this.editor.editable.strikethrough();\r\n    }\r\n\r\n  });\r\n\r\n\r\n  return addons.actions.strikethrough = StrikethroughAction;\t\r\n});\ndefine('skylark-widgets-wordpad/addons/actions/TableAction',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-tables\",\r\n  \"skylark-domx-query\",\r\n  \"../../addons\",\r\n  \"../../Action\"\r\n],function(langx,tables,$,addons,Action){ \r\n  var TableAction = Action.inherit({\r\n    name : 'table',\r\n\r\n    icon : 'table',\r\n\r\n    htmlTag : 'table',\r\n\r\n    disableTag : 'pre, li, blockquote',\r\n\r\n    menu : true,\r\n\r\n    _init : function() {\r\n      Action.prototype._init.call(this);\r\n      langx.merge(this.editor.editable.formatter._allowedTags, ['thead', 'th', 'tbody', 'tr', 'td', 'colgroup', 'col']);\r\n      langx.extend(this.editor.editable.formatter._allowedAttributes, {\r\n        td: ['rowspan', 'colspan'],\r\n        th: ['rowspan', 'colspan'],\r\n        col: ['width']\r\n      });\r\n      langx.extend(this.editor.editable.formatter._allowedStyles, {\r\n        td: ['text-align'],\r\n        th: ['text-align']\r\n      });\r\n      this._initShortcuts();\r\n      this._initResize();\r\n      this.editor.on('decorate', (function(_this) {\r\n        return function(e, $el) {\r\n          return $el.find('table').each(function(i, table) {\r\n            return _this.decorate($(table));\r\n          });\r\n        };\r\n      })(this));\r\n      this.editor.on('undecorate', (function(_this) {\r\n        return function(e, $el) {\r\n          return $el.find('table').each(function(i, table) {\r\n            return _this.undecorate($(table));\r\n          });\r\n        };\r\n      })(this));\r\n      this.editor.on('selectionchanged.table', (function(_this) {\r\n        return function(e) {\r\n          var $container, range;\r\n          _this.editor.body.find('.wordpad-table td, .wordpad-table th').removeClass('active');\r\n          range = _this.editor.editable.selection.range();\r\n          if (!range) {\r\n            return;\r\n          }\r\n          $container = _this.editor.editable.selection.containerNode();\r\n          if (range.collapsed && $container.is('.wordpad-table')) {\r\n            _this.editor.editable.selection.setRangeAtEndOf($container);\r\n          }\r\n          return $container.closest('td, th', _this.editor.body).addClass('active');\r\n        };\r\n      })(this));\r\n      this.editor.on('blur.table', (function(_this) {\r\n        return function(e) {\r\n          return _this.editor.body.find('.wordpad-table td, .wordpad-table th').removeClass('active');\r\n        };\r\n      })(this));\r\n      this.editor.editable.keystroke.add('up', 'td', (function(_this) {\r\n        return function(e, $node) {\r\n          _this._tdNav($node, 'up');\r\n          return true;\r\n        };\r\n      })(this));\r\n      this.editor.editable.keystroke.add('up', 'th', (function(_this) {\r\n        return function(e, $node) {\r\n          _this._tdNav($node, 'up');\r\n          return true;\r\n        };\r\n      })(this));\r\n      this.editor.editable.keystroke.add('down', 'td', (function(_this) {\r\n        return function(e, $node) {\r\n          _this._tdNav($node, 'down');\r\n          return true;\r\n        };\r\n      })(this));\r\n      return this.editor.editable.keystroke.add('down', 'th', (function(_this) {\r\n        return function(e, $node) {\r\n          _this._tdNav($node, 'down');\r\n          return true;\r\n        };\r\n      })(this));\r\n    },\r\n\r\n    _tdNav : function($td, direction) {\r\n      var $anotherTr, $tr, action, anotherTag, index, parentTag, ref;\r\n      if (direction == null) {\r\n        direction = 'up';\r\n      }\r\n      action = direction === 'up' ? 'prev' : 'next';\r\n      ref = direction === 'up' ? ['tbody', 'thead'] : ['thead', 'tbody'], parentTag = ref[0], anotherTag = ref[1];\r\n      $tr = $td.parent('tr');\r\n      $anotherTr = this[\"_\" + action + \"Row\"]($tr);\r\n      if (!($anotherTr.length > 0)) {\r\n        return true;\r\n      }\r\n      index = $tr.find('td, th').index($td);\r\n      return this.editor.editable.selection.setRangeAtEndOf($anotherTr.find('td, th').eq(index));\r\n    },\r\n\r\n    _initResize : function() {\r\n\r\n      tables.resizable(document,{\r\n        cssClasses : {\r\n          resizeHandle : \"wordpad-resize-handle\",\r\n          wrapper : \"wordpad-table\"\r\n        }\r\n      });\r\n\r\n    },\r\n\r\n    _initShortcuts : function() {\r\n      this.editor.editable.hotkeys.add('ctrl+alt+up', (function(_this) {\r\n        return function(e) {\r\n          _this.editMenu.find('.menu-item[data-param=insertRowAbove]').click();\r\n          return false;\r\n        };\r\n      })(this));\r\n      this.editor.editable.hotkeys.add('ctrl+alt+down', (function(_this) {\r\n        return function(e) {\r\n          _this.editMenu.find('.menu-item[data-param=insertRowBelow]').click();\r\n          return false;\r\n        };\r\n      })(this));\r\n      this.editor.editable.hotkeys.add('ctrl+alt+left', (function(_this) {\r\n        return function(e) {\r\n          _this.editMenu.find('.menu-item[data-param=insertColLeft]').click();\r\n          return false;\r\n        };\r\n      })(this));\r\n      return this.editor.editable.hotkeys.add('ctrl+alt+right', (function(_this) {\r\n        return function(e) {\r\n          _this.editMenu.find('.menu-item[data-param=insertColRight]').click();\r\n          return false;\r\n        };\r\n      })(this));\r\n    },\r\n\r\n    renderMenu : function() {\r\n      var $table;\r\n      $(\"<div class=\\\"menu-create-table\\\">\\n</div>\\n<div class=\\\"menu-edit-table\\\">\\n  <ul>\\n    <li>\\n      <a tabindex=\\\"-1\\\" unselectable=\\\"on\\\" class=\\\"menu-item\\\"\\n        href=\\\"javascript:;\\\" data-param=\\\"deleteRow\\\">\\n        <span>\" + (this._t('deleteRow')) + \"</span>\\n      </a>\\n    </li>\\n    <li>\\n      <a tabindex=\\\"-1\\\" unselectable=\\\"on\\\" class=\\\"menu-item\\\"\\n        href=\\\"javascript:;\\\" data-param=\\\"insertRowAbove\\\">\\n        <span>\" + (this._t('insertRowAbove')) + \" ( Ctrl + Alt + ↑ )</span>\\n      </a>\\n    </li>\\n    <li>\\n      <a tabindex=\\\"-1\\\" unselectable=\\\"on\\\" class=\\\"menu-item\\\"\\n        href=\\\"javascript:;\\\" data-param=\\\"insertRowBelow\\\">\\n        <span>\" + (this._t('insertRowBelow')) + \" ( Ctrl + Alt + ↓ )</span>\\n      </a>\\n    </li>\\n    <li><span class=\\\"separator\\\"></span></li>\\n    <li>\\n      <a tabindex=\\\"-1\\\" unselectable=\\\"on\\\" class=\\\"menu-item\\\"\\n        href=\\\"javascript:;\\\" data-param=\\\"deleteCol\\\">\\n        <span>\" + (this._t('deleteColumn')) + \"</span>\\n      </a>\\n    </li>\\n    <li>\\n      <a tabindex=\\\"-1\\\" unselectable=\\\"on\\\" class=\\\"menu-item\\\"\\n        href=\\\"javascript:;\\\" data-param=\\\"insertColLeft\\\">\\n        <span>\" + (this._t('insertColumnLeft')) + \" ( Ctrl + Alt + ← )</span>\\n      </a>\\n    </li>\\n    <li>\\n      <a tabindex=\\\"-1\\\" unselectable=\\\"on\\\" class=\\\"menu-item\\\"\\n        href=\\\"javascript:;\\\" data-param=\\\"insertColRight\\\">\\n        <span>\" + (this._t('insertColumnRight')) + \" ( Ctrl + Alt + → )</span>\\n      </a>\\n    </li>\\n    <li><span class=\\\"separator\\\"></span></li>\\n    <li>\\n      <a tabindex=\\\"-1\\\" unselectable=\\\"on\\\" class=\\\"menu-item\\\"\\n        href=\\\"javascript:;\\\" data-param=\\\"deleteTable\\\">\\n        <span>\" + (this._t('deleteTable')) + \"</span>\\n      </a>\\n    </li>\\n  </ul>\\n</div>\").appendTo(this.menuWrapper);\r\n      this.createMenu = this.menuWrapper.find('.menu-create-table');\r\n      this.editMenu = this.menuWrapper.find('.menu-edit-table');\r\n      $table = this.createTable(6, 6).appendTo(this.createMenu);\r\n      this.createMenu.on('mouseenter', 'td, th', (function(_this) {\r\n        return function(e) {\r\n          var $td, $tr, $trs, num;\r\n          _this.createMenu.find('td, th').removeClass('selected');\r\n          $td = $(e.currentTarget);\r\n          $tr = $td.parent();\r\n          num = $tr.find('td, th').index($td) + 1;\r\n          $trs = $tr.prevAll('tr').addBack();\r\n          if ($tr.parent().is('tbody')) {\r\n            $trs = $trs.add($table.find('thead tr'));\r\n          }\r\n          return $trs.find(\"td:lt(\" + num + \"), th:lt(\" + num + \")\").addClass('selected');\r\n        };\r\n      })(this));\r\n      this.createMenu.on('mouseleave', function(e) {\r\n        return $(e.currentTarget).find('td, th').removeClass('selected');\r\n      });\r\n      return this.createMenu.on('mousedown', 'td, th', (function(_this) {\r\n        return function(e) {\r\n          var $closestBlock, $td, $tr, colNum, rowNum;\r\n          _this.wrapper.removeClass('menu-on');\r\n          if (!_this.editor.editable.inputManager.focused) {\r\n            return;\r\n          }\r\n          $td = $(e.currentTarget);\r\n          $tr = $td.parent();\r\n          colNum = $tr.find('td').index($td) + 1;\r\n          rowNum = $tr.prevAll('tr').length + 1;\r\n          if ($tr.parent().is('tbody')) {\r\n            rowNum += 1;\r\n          }\r\n          $table = _this.createTable(rowNum, colNum, true);\r\n          $closestBlock = _this.editor.editable.selection.blockNodes().last();\r\n          if (_this.editor.editable.util.isEmptyNode($closestBlock)) {\r\n            $closestBlock.replaceWith($table);\r\n          } else {\r\n            $closestBlock.after($table);\r\n          }\r\n          _this.decorate($table);\r\n          _this.editor.editable.selection.setRangeAtStartOf($table.find('th:first'));\r\n          _this.editor.trigger('valuechanged');\r\n          return false;\r\n        };\r\n      })(this));\r\n    },\r\n\r\n    decorate : function($table) {\r\n      return $(tables.decorate($table[0],{\r\n        tableDecorate : 'wordpad-table',\r\n        resizeHandle : 'wordpad-resize-handle'\r\n      }));\r\n\r\n    },\r\n\r\n    undecorate : function($table) {\r\n      return $(tables.undecorate($table[0],{\r\n        tableDecorate : 'wordpad-table',\r\n        resizeHandle : 'wordpad-resize-handle'\r\n      }));\r\n\r\n    },\r\n\r\n    createTable : function(row, col, phBr) {\r\n      return $(tables.createTable(row,col,phBr ? this.editor.editable.util.phBr : null));\r\n    },\r\n\r\n    refreshTableWidth : function($table) {\r\n      return table.refreshTableWidth($table[0]);\r\n    },\r\n\r\n    deleteRow : function($td) {\r\n      var self = this,\r\n          ret; \r\n\r\n      tables.deleteRow($td[0],function(newTr,index){\r\n        if (newTr) {\r\n          ret = self.editor.editable.selection.setRangeAtEndOf($(newTr).find('td, th').eq(index));\r\n        }\r\n      })\r\n\r\n      return ret;\r\n    },\r\n\r\n    insertRow : function($td, direction) {\r\n      var self = this,\r\n          ret; \r\n\r\n      tables.insertRow($td[0],direction,self.editor.editable.util.phBr,function(newTr,index){\r\n        ret =  self.editor.editable.selection.setRangeAtStartOf($(newTr).find('td, th').eq(index));\r\n      })\r\n\r\n      return ret;\r\n\r\n    },\r\n\r\n    deleteCol : function($td) {\r\n      var self = this,\r\n          ret; \r\n\r\n      tables.deleteCol($td[0],function(newTd){\r\n        if (newTd) {\r\n          ret = self.editor.editable.selection.setRangeAtEndOf($(newTd));\r\n        }\r\n      })\r\n\r\n      return ret;\r\n    },\r\n\r\n    insertCol : function($td, direction) {\r\n      var self = this,\r\n          ret; \r\n\r\n      tables.insertCol($td[0],direction,self.editor.editable.util.phBr,function(newTd){\r\n        ret = self.editor.editable.selection.setRangeAtStartOf($(newTd));\r\n      })\r\n\r\n      return ret;\r\n    },\r\n\r\n    deleteTable : function($td) {\r\n      var self = this;\r\n      tables.deleteTable($td[0],function($block){\r\n        if ($block.length > 0) {\r\n          return self.editor.editable.selection.setRangeAtStartOf($block);\r\n        }\r\n      });\r\n    },\r\n\r\n    _execute : function(param) {\r\n      var $td;\r\n      $td = this.editor.editable.selection.containerNode().closest('td, th');\r\n      if (!($td.length > 0)) {\r\n        return;\r\n      }\r\n      if (param === 'deleteRow') {\r\n        this.deleteRow($td);\r\n      } else if (param === 'insertRowAbove') {\r\n        this.insertRow($td, 'before');\r\n      } else if (param === 'insertRowBelow') {\r\n        this.insertRow($td);\r\n      } else if (param === 'deleteCol') {\r\n        this.deleteCol($td);\r\n      } else if (param === 'insertColLeft') {\r\n        this.insertCol($td, 'before');\r\n      } else if (param === 'insertColRight') {\r\n        this.insertCol($td);\r\n      } else if (param === 'deleteTable') {\r\n        this.deleteTable($td);\r\n      } else {\r\n        return;\r\n      }\r\n      return this.editor.trigger('valuechanged');\r\n    }\r\n\r\n   });\r\n\r\n\r\n  addons.actions.table = TableAction;\r\n\r\n  return TableAction;\r\n\r\n});\ndefine('skylark-widgets-wordpad/addons/actions/TitleAction',[\r\n  \"skylark-domx-query\",\r\n  \"../../addons\",\r\n  \"../../Action\",\r\n  \"../../i18n\"\r\n],function($,addons,Action,i18n){ \r\n  var TitleAction = Action.inherit({\r\n    name : 'title',\r\n\r\n    htmlTag : 'h1, h2, h3, h4, h5',\r\n\r\n    icon : \"header\",\r\n\r\n    disableTag : 'pre, table',\r\n\r\n    _init : function() {\r\n      this.menu = [\r\n        {\r\n          name: 'normal',\r\n          text: i18n.translate('normalText'),\r\n          param: 'p'\r\n        }, '|', {\r\n          name: 'h1',\r\n          text: i18n.translate('title') + ' 1',\r\n          param: 'h1'\r\n        }, {\r\n          name: 'h2',\r\n          text: i18n.translate('title') + ' 2',\r\n          param: 'h2'\r\n        }, {\r\n          name: 'h3',\r\n          text: i18n.translate('title') + ' 3',\r\n          param: 'h3'\r\n        }, {\r\n          name: 'h4',\r\n          text: i18n.translate('title') + ' 4',\r\n          param: 'h4'\r\n        }, {\r\n          name: 'h5',\r\n          text: i18n.translate('title') + ' 5',\r\n          param: 'h5'\r\n        }\r\n      ];\r\n      return Action.prototype._init.call(this);\r\n    },\r\n\r\n    setActive : function(active, param) {\r\n      if (active) {\r\n        active = this.node[0].tagName.toLowerCase();\r\n      }\r\n      Action.prototype.setActive.call(this, active);\r\n    },\r\n\r\n    _execute : function(param) {\r\n      return this.editor.editable.title(param,this.disableTag);\r\n    }\r\n\r\n  });\r\n\r\n  addons.actions.title = TitleAction;\r\n\r\n  return TitleAction;\r\n\r\n});\ndefine('skylark-widgets-wordpad/addons/actions/UnderlineAction',[\r\n  \"skylark-domx-query\",\r\n  \"../../addons\",\r\n  \"../../Action\"\r\n],function($,addons,Action){\r\n  var UnderlineAction = Action.inherit({\r\n    name : 'underline',\r\n\r\n    icon : 'underline',\r\n\r\n    htmlTag : 'u',\r\n\r\n    disableTag : 'pre',\r\n\r\n    shortcut : 'cmd+u',\r\n\r\n    render : function() {\r\n      if (this.editor.editable.util.os.mac) {\r\n        this.title = this.title + ' ( Cmd + u )';\r\n      } else {\r\n        this.title = this.title + ' ( Ctrl + u )';\r\n        this.shortcut = 'ctrl+u';\r\n      }\r\n      return Action.prototype.render.call(this);\r\n    },\r\n\r\n    _activeStatus : function() {\r\n      var active;\r\n      active = this.editor.editable.isActive('underline');\r\n      this.setActive(active);\r\n      return this.active;\r\n    },\r\n\r\n    _execute : function() {\r\n      return this.editor.editable.underline();\r\n    }\r\n\r\n   });\r\n\r\n\r\n  addons.actions.underline = UnderlineAction;\r\n\r\n  return UnderlineAction;\r\n\r\n});\ndefine('skylark-widgets-wordpad/addons/actions/UnorderListAction',[\r\n  \"skylark-domx-query\",\r\n  \"../../addons\",\r\n  \"./ListAction\"\r\n],function($,addons,ListAction){ \r\n   var UnorderListAction = ListAction.inherit({\r\n      type : 'ul',\r\n\r\n      name : 'ul',\r\n\r\n      icon : 'listul',\r\n\r\n      htmlTag : 'ul',\r\n\r\n      shortcut : 'cmd+.',\r\n\r\n      _init : function() {\r\n        if (this.editor.editable.util.os.mac) {\r\n          this.title = this.title + ' ( Cmd + . )';\r\n        } else {\r\n          this.title = this.title + ' ( Ctrl + . )';\r\n          this.shortcut = 'ctrl+.';\r\n        }\r\n        return ListAction.prototype._init.call(this);\r\n      }\r\n\r\n   });\r\n\r\n\r\n    addons.actions.ul = UnorderListAction;\r\n\r\n    return UnorderListAction;\r\n\r\n});\ndefine('skylark-widgets-wordpad/addons/actions/VideoPopover',[\r\n  \"skylark-domx-query\",\r\n  \"../../addons\",\r\n  \"../../Popover\"\r\n],function($,addons,Popover){ \r\n  var VideoPopover = Popover.inherit({\r\n    offset : {\r\n      top: 6,\r\n      left: -4\r\n    },\r\n\r\n    _loadVideo : function(videoData, callback) {\r\n      if (videoData && this.target.attr('src') === videoData.src) {\r\n        return;\r\n      }\r\n      return $('.insertVideoBtn').data('videowrap') && this.action.loadVideo($('.insertVideoBtn').data('videowrap'), videoData, (function(_this) {\r\n        return function(img) {\r\n          if (!img) {\r\n\r\n          }\r\n        };\r\n      })(this));\r\n    },\r\n\r\n    render : function() {\r\n      var tpl;\r\n      tpl = \"<div class=\\\"link-settings\\\">\\n  <div class=\\\"settings-field video-embed-code\\\">\\n    <label>\" + (this._t('video')) + \"</label>\\n    <textarea placeholder=\\\"\" + (this._t('videoPlaceholder')) + \"\\\" type=\\\"text\\\" class=\\\"video-link\\\" ></textarea>\\n  </div><br>\\n  <div class=\\\"settings-field\\\">\\n    <label>\" + (this._t('videoSize')) + \"</label>\\n    <input class=\\\"image-size video-size\\\" id=\\\"video-width\\\" type=\\\"text\\\" tabindex=\\\"2\\\" />\\n    <span class=\\\"times\\\">×</span>\\n    <input class=\\\"image-size video-size\\\" id=\\\"video-height\\\" type=\\\"text\\\" tabindex=\\\"3\\\" />\\n  </div>\\n  <div class=\\\"video-upload\\\">\\n    <button class=\\\"btn insertVideoBtn\\\">\" + (this._t('uploadVideoBtn')) + \"</div>\\n  </div>\\n</div>\";\r\n      this.el.addClass('video-popover').append(tpl);\r\n      this.srcEl = this.el.find('.video-link');\r\n      this.widthEl = this.el.find('#video-width');\r\n      this.heightEl = this.el.find('#video-height');\r\n      this.el.find('.video-size').on('keydown', (function(_this) {\r\n        return function(e) {\r\n          if (e.which === 13 || e.which === 27) {\r\n            e.preventDefault();\r\n            return $('.insertVideoBtn').click();\r\n          }\r\n        };\r\n      })(this));\r\n\r\n      this.srcEl.on('keydown', (function(_this) {\r\n        return function(e) {\r\n          if (e.which === 13 || e.which === 27) {\r\n            e.preventDefault();\r\n            return $('.insertVideoBtn').click();\r\n          }\r\n        };\r\n      })(this));\r\n\r\n      return this.editor.on('valuechanged', (function(_this) {\r\n        return function(e) {\r\n          if (_this.active) {\r\n            return _this.refresh();\r\n          }\r\n        };\r\n      })(this));\r\n    },\r\n\r\n    show : function() {\r\n      var $video, $videoWrap, args, videoData;\r\n      args = 1 <= arguments.length ? Array.prototype.slice.call(arguments, 0) : [];\r\n      Popover.prototype.show.apply(this, args);\r\n      $video = arguments[0] || this.target;\r\n      this.width = $video.attr('data-width') || $video.width();\r\n      this.height = $video.attr('data-height') || $video.height();\r\n      if ($video.attr('data-link')) {\r\n        videoData = {\r\n          link: $video.attr('data-link'),\r\n          tag: $video.attr('data-tag'),\r\n          width: this.width,\r\n          height: this.height\r\n        };\r\n        this.src = videoData.link;\r\n      }\r\n      this.widthEl.val(this.width);\r\n      this.heightEl.val(this.height);\r\n      this.srcEl.val(this.src);\r\n      $('.insertVideoBtn').data('videowrap', $video);\r\n      return $videoWrap = this.target;\r\n    }\r\n  });\r\n\r\n  return VideoPopover;\r\n});\ndefine('skylark-widgets-wordpad/addons/actions/VideoAction',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"../../addons\",\r\n  \"../../Action\",\r\n  \"./VideoPopover\"\r\n],function(langx,$,addons,Action,VideoPopover){ \r\n   var reUrlYoutube = /https?:\\/\\/(?:[0-9A-Z-]+\\.)?(?:youtu\\.be\\/|youtube\\.com\\S*[^\\w\\-\\s])([\\w\\-]{11})(?=[^\\w\\-]|$)(?![?=&+%\\w.-]*(?:['\"][^<>]*>|<\\/a>))[?=&+%\\w.-]*/ig,\r\n      reUrlVimeo = /https?:\\/\\/(www\\.)?vimeo.com\\/(\\d+)($|\\/)/;\r\n\r\n   var VideoAction = Action.inherit({\r\n      name : 'video',\r\n\r\n      icon : 'video',\r\n\r\n      htmlTag : 'embed, iframe',\r\n\r\n      disableTag : 'pre, table, div',\r\n\r\n      videoPlaceholder : 'video',\r\n\r\n      videoContainerClass : 'video-container',\r\n\r\n      placeholderPoster : '',\r\n\r\n      needFocus : true,\r\n\r\n      _init : function() {\r\n        this.title = this._t(this.name);\r\n        langx.merge(this.editor.editable.formatter._allowedTags, ['embed', 'iframe', 'video']);\r\n        langx.extend(this.editor.editable.formatter._allowedAttributes, {\r\n          embed: ['class', 'width', 'height', 'style','type', 'pluginspage', 'src', 'wmode', 'play', 'loop', 'menu', 'allowscriptaccess', 'allowfullscreen'],\r\n          iframe: ['class', 'width', 'height','style', 'src', 'frameborder','data-link','data-width','data-height'],\r\n          video: ['class', 'width', 'height', 'style','poster', 'controls', 'allowfullscreen', 'src', 'data-link', 'data-tag']\r\n        });\r\n\r\n        this.placeholderPoster =  this.editor.options.addons.actions.video.placeholderPoster;\r\n\r\n\r\n        $(document).on('click', '.insertVideoBtn', (function(_this) {\r\n          return function(e) {\r\n            var videoData;\r\n            videoData = {\r\n              link: $('.video-link').val(),\r\n              width: $('#video-width').val() || 100,\r\n              height: $('#video-height').val() || 100\r\n            };\r\n            $('.video-link').val('');\r\n            $('#video-width').val('');\r\n            $('#video-height').val('');\r\n            return _this._insert($('.insertVideoBtn').data('videowrap'), videoData, function() {\r\n              return _this.editor.trigger('valuechanged');\r\n            });\r\n          };\r\n        })(this));\r\n\r\n        this.editor.body.on('click', '.wordpad-video-wrapper', (function(_this) {\r\n          return function(e) {\r\n            var $video = $(e.currentTarget).find('.wordpad-video');//siblings('video').show();\r\n            return _this.popover.show($video);\r\n          };\r\n        })(this));\r\n        this.editor.body.on('mousedown', (function(_this) {\r\n          return function() {\r\n            var $videoWrap;\r\n            $videoWrap = $('.insertVideoBtn').data('videowrap');\r\n            if ($videoWrap && $videoWrap.html() === _this.videoPlaceholder) {\r\n              $videoWrap.remove();\r\n              $('.insertVideoBtn').data('videowrap', null);\r\n            }\r\n            return _this.popover.hide();\r\n          };\r\n        })(this));\r\n        this.editor.on('decorate', (function(_this) {\r\n          return function(e, $el) {\r\n            return $el.find('.wordpad-video').each(function(i, video) {\r\n              return _this.decorate($(video));\r\n            });\r\n          };\r\n        })(this));\r\n        this.editor.on('undecorate', (function(_this) {\r\n          return function(e, $el) {\r\n            return $el.find('.wordpad-video').each(function(i, video) {\r\n              return _this.undecorate($(video));\r\n            });\r\n          };\r\n        })(this));\r\n\r\n        this.popover = new VideoPopover({\r\n          action: this\r\n        });\r\n        return Action.prototype._init.call(this);\r\n      },\r\n\r\n\r\n      decorate : function($video) {\r\n        if ($video.parent('.wordpad-video-wrapper').length > 0) {\r\n          return;\r\n        }\r\n        $video.wrap('<figure class=\"wordpad-video-wrapper\"></figure>');\r\n        return $video.parent();\r\n      },\r\n\r\n      undecorate : function($video) {\r\n        if (!($video.parent('.wordpad-video-wrapper').length > 0)) {\r\n          return;\r\n        }\r\n        return $video.parent().replaceWith($video);\r\n      },\r\n\r\n      _execute : function() {\r\n        var $video = this._create();\r\n        return this.popover.show($video);\r\n      },\r\n\r\n      _status : function() {\r\n        return this._disableStatus();\r\n      },\r\n\r\n      _create : function() {\r\n        var $video, range;\r\n        if (!this.editor.editable.inputManager.focused) {\r\n          this.editor.focus();\r\n        }\r\n        range = this.editor.editable.selection.range();\r\n        if (range) {\r\n          range.deleteContents();\r\n          this.editor.editable.selection.range(range);\r\n        }\r\n        $video = $('<video/>').attr({\r\n          'poster': this.placeholderPoster,\r\n          'width': 225,\r\n          'height': 225,\r\n          'class' : 'wordpad-video'\r\n        });\r\n        range.insertNode($video[0]);\r\n        this.editor.editable.selection.setRangeAfter($video, range);\r\n        this.editor.trigger('valuechanged');\r\n        this.decorate($video);\r\n        return $video;\r\n      },\r\n\r\n      _insert : function($video, videoData, callback) {\r\n        var e, originNode, realVideo, videoLink, videoTag;\r\n        if (!videoData.link) {\r\n          this._remove($video);\r\n        } else {\r\n          var data = videoData.link;\r\n          if (!data.match(/<iframe|<video|<embed/gi)) {\r\n            // parse if it is link on youtube & vimeo\r\n            var iframeStart = '<iframe style=\"width: 500px; height: 281px;\" src=\"',\r\n              iframeEnd = '\" frameborder=\"0\" allowfullscreen></iframe>';\r\n\r\n            if (data.match(reUrlYoutube))    {\r\n              data = data.replace(reUrlYoutube, iframeStart + 'https://www.youtube.com/embed/$1' + iframeEnd);\r\n            } else if (data.match(reUrlVimeo)) {\r\n              data = data.replace(reUrlVimeo, iframeStart + 'https://player.vimeo.com/video/$2' + iframeEnd);\r\n            }\r\n          }\r\n          var $video1 = $(data).style({\r\n            width : videoData.width + \"px\",\r\n            height : videoData.height + \"px\"\r\n          }).attr({\r\n            \"width\" : videoData.width + \"px\",\r\n            \"height\" : videoData.height + \"px\",\r\n            'class' : 'wordpad-video',\r\n            \"data-link\" : videoData.link,\r\n            \"data-width\" : videoData.width,\r\n            \"data-height\" : videoData.height\r\n          });\r\n          \r\n          $video.replaceWith($video1);\r\n          $video = $video1;\r\n        }\r\n        this.editor.trigger('valuechanged');\r\n        this.popover.hide();\r\n        return callback($video);\r\n      },\r\n\r\n      _remove : function($video) {\r\n        $video.parent().remove();\r\n      }\r\n\r\n   });\r\n\r\n\r\n   addons.actions.video = VideoAction; \r\n\r\n   return VideoAction;\r\n\r\n});\ndefine('skylark-widgets-wordpad/addons/toolbar/items/AlignmentButton',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"../../../ToolButton\",\r\n  \"../../../i18n\",\r\n  \"../../../addons\"\r\n],function(langx,$,ToolButton,i18n,addons){ \r\n\r\n var AlignmentButton = ToolButton.inherit({\r\n    _doActive : function(align) {\r\n\r\n      ToolButton.prototype._doActive.call(this, !!align);\r\n\r\n      this.el.removeClass('alignLeft alignCenter alignRight');\r\n      if (align) {\r\n        this.el.addClass('align' + langx.upperFirst(align));\r\n      }\r\n      this.setIcon('align' + langx.upperFirst(align));\r\n      return this.menuEl.find('.menu-item').show().end().find('.menu-item-' + align).hide();\r\n\r\n    }\r\n\r\n  });\r\n\r\n\r\n  addons.toolbar.items.alignment = AlignmentButton;\r\n\r\n  return AlignmentButton;\r\n\r\n});\ndefine('skylark-widgets-wordpad/addons/toolbar/items/ColorButton',[\r\n  \"skylark-domx-query\",\r\n  \"../../../ToolButton\",\r\n  \"../../../i18n\",\r\n  \"../../../addons\"\r\n],function($,ToolButton,i18n,addons){ \r\n  \r\n\r\n   var ColorButton = ToolButton.inherit({\r\n    render : function() {\r\n      var args;\r\n      args = 1 <= arguments.length ? Array.prototype.slice.call(arguments, 0) : [];\r\n      return ToolButton.prototype.render.apply(this, args);\r\n    },\r\n\r\n    renderMenu : function() {\r\n      $('<ul class=\"color-list\">\\n  <li><a href=\"javascript:;\" class=\"font-color font-color-1\"></a></li>\\n  <li><a href=\"javascript:;\" class=\"font-color font-color-2\"></a></li>\\n  <li><a href=\"javascript:;\" class=\"font-color font-color-3\"></a></li>\\n  <li><a href=\"javascript:;\" class=\"font-color font-color-4\"></a></li>\\n  <li><a href=\"javascript:;\" class=\"font-color font-color-5\"></a></li>\\n  <li><a href=\"javascript:;\" class=\"font-color font-color-6\"></a></li>\\n  <li><a href=\"javascript:;\" class=\"font-color font-color-7\"></a></li>\\n  <li><a href=\"javascript:;\" class=\"font-color font-color-default\"></a></li>\\n</ul>').appendTo(this.menuWrapper);\r\n      this.menuWrapper.on('mousedown', '.color-list', function(e) {\r\n        return false;\r\n      });\r\n      return this.menuWrapper.on('click', '.font-color', (function(_this) {\r\n        return function(e) {\r\n          var $link, $p, hex, range, rgb, textNode;\r\n          _this.wrapper.removeClass('menu-on');\r\n          $link = $(e.currentTarget);\r\n          if ($link.hasClass('font-color-default')) {\r\n            $p = _this.editor.body.find('p, li');\r\n            if (!($p.length > 0)) {\r\n              return;\r\n            }\r\n            rgb = window.getComputedStyle($p[0], null).getPropertyValue('color');\r\n            hex = _this._convertRgbToHex(rgb);\r\n          } else {\r\n            rgb = window.getComputedStyle($link[0], null).getPropertyValue('background-color');\r\n            hex = _this._convertRgbToHex(rgb);\r\n          }\r\n          if (!hex) {\r\n            return;\r\n          }\r\n\r\n          return _this.editor.editable.fontColor(hex,$link.hasClass('font-color-default'),i18n.translate('coloredText'));\r\n        };\r\n      })(this));\r\n    },\r\n\r\n    _convertRgbToHex : function(rgb) {\r\n      var match, re, rgbToHex;\r\n      re = /rgb\\((\\d+),\\s?(\\d+),\\s?(\\d+)\\)/g;\r\n      match = re.exec(rgb);\r\n      if (!match) {\r\n        return '';\r\n      }\r\n      rgbToHex = function(r, g, b) {\r\n        var componentToHex;\r\n        componentToHex = function(c) {\r\n          var hex;\r\n          hex = c.toString(16);\r\n          if (hex.length === 1) {\r\n            return '0' + hex;\r\n          } else {\r\n            return hex;\r\n          }\r\n        };\r\n        return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\r\n      };\r\n      return rgbToHex(match[1] * 1, match[2] * 1, match[3] * 1);\r\n    }\r\n\r\n   });\r\n\r\n   \r\n   addons.toolbar.items.color = ColorButton; \r\n\r\n\r\n   return ColorButton;\r\n\t\r\n});\ndefine('skylark-widgets-wordpad/addons/toolbar/items/EmojiButton',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"../../../ToolButton\",\r\n  \"../../../i18n\",\r\n  \"../../../addons\"\r\n],function(langx, $,ToolButton,i18n,addons){ \r\n\r\n  var EmojiButton = ToolButton.inherit({\r\n\r\n    renderMenu : function() {\r\n      var $list, dir, html, name, opts, src, tpl, _i, _len, _ref;\r\n      tpl = '<ul class=\"emoji-list\">\\n</ul>'; \r\n      opts = langx.extend({\r\n        imagePath: 'images/emoji/',\r\n        images: EmojiButton.images\r\n      }, this.editor.options.addons.toolbar.items.emoji || {});\r\n      html = \"\";\r\n      dir = opts.imagePath.replace(/\\/$/, '') + '/';\r\n      _ref = opts.images;\r\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\r\n        name = _ref[_i];\r\n        src = \"\" + dir + name;\r\n        name = name.split('.')[0];\r\n        html += \"<li data-name='\" + name + \"'><img src='\" + src + \"' width='20' height='20' alt='\" + name + \"' /></li>\";\r\n      }\r\n      $list = $(tpl);\r\n      $list.html(html).appendTo(this.menuWrapper);\r\n      return $list.on('mousedown', 'li', (function(_this) {\r\n        return function(e) {\r\n          var $img;\r\n          _this.wrapper.removeClass('menu-on');\r\n          if (!_this.editor.editable.inputManager.focused) {\r\n            return;\r\n          }\r\n          $img = $(e.currentTarget).find('img').clone().attr({\r\n            'data-emoji': true,\r\n            'data-non-image': true\r\n          });\r\n          _this.editor.editable.selection.insertNode($img);\r\n          _this.editor.trigger('valuechanged');\r\n          _this.editor.trigger('selectionchanged');\r\n          return false;\r\n        };\r\n      })(this));\r\n    }\r\n\r\n  });\r\n\r\n\r\n  EmojiButton.i18n = {\r\n    'zh-CN': {\r\n      emoji: '表情'\r\n    },\r\n    'en-US': {\r\n      emoji: 'emoji'\r\n    }\r\n  };\r\n\r\n  EmojiButton.images = ['smile.png', 'smiley.png', 'laughing.png', 'blush.png', 'heart_eyes.png', 'smirk.png', 'flushed.png', 'grin.png', 'wink.png', 'kissing_closed_eyes.png', 'stuck_out_tongue_winking_eye.png', 'stuck_out_tongue.png', 'sleeping.png', 'worried.png', 'expressionless.png', 'sweat_smile.png', 'cold_sweat.png', 'joy.png', 'sob.png', 'angry.png', 'mask.png', 'scream.png', 'sunglasses.png', 'heart.png', 'broken_heart.png', 'star.png', 'anger.png', 'exclamation.png', 'question.png', 'zzz.png', 'thumbsup.png', 'thumbsdown.png', 'ok_hand.png', 'punch.png', 'v.png', 'clap.png', 'muscle.png', 'pray.png', 'skull.png', 'trollface.png'];\r\n\r\n\r\n  addons.toolbar.items.emoji = EmojiButton; \r\n\r\n  return EmojiButton;\r\n\t\r\n});\ndefine('skylark-widgets-wordpad/addons/toolbar/items/TableButton',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"../../../ToolButton\",\r\n  \"../../../i18n\",\r\n  \"../../../addons\"\r\n],function(langx, $,ToolButton,i18n,addons){ \r\n\r\n  var TableButton = ToolButton.inherit({\r\n    _doActive : function(active) {\r\n\r\n      ToolButton.prototype._doActive.call(this, active);\r\n\r\n      if (active) {\r\n        this.createMenu.hide();\r\n        return this.editMenu.show();\r\n      } else {\r\n        this.createMenu.show();\r\n        return this.editMenu.hide();\r\n      }\r\n\r\n    }\r\n   });\r\n\r\n\r\n  TableButton.prototype.renderMenu = function() {\r\n    var $table;\r\n    $(\"<div class=\\\"menu-create-table\\\">\\n</div>\\n<div class=\\\"menu-edit-table\\\">\\n  <ul>\\n    <li>\\n      <a tabindex=\\\"-1\\\" unselectable=\\\"on\\\" class=\\\"menu-item\\\"\\n        href=\\\"javascript:;\\\" data-param=\\\"deleteRow\\\">\\n        <span>\" + (i18n.translate('deleteRow')) + \"</span>\\n      </a>\\n    </li>\\n    <li>\\n      <a tabindex=\\\"-1\\\" unselectable=\\\"on\\\" class=\\\"menu-item\\\"\\n        href=\\\"javascript:;\\\" data-param=\\\"insertRowAbove\\\">\\n        <span>\" + (i18n.translate('insertRowAbove')) + \" ( Ctrl + Alt + ↑ )</span>\\n      </a>\\n    </li>\\n    <li>\\n      <a tabindex=\\\"-1\\\" unselectable=\\\"on\\\" class=\\\"menu-item\\\"\\n        href=\\\"javascript:;\\\" data-param=\\\"insertRowBelow\\\">\\n        <span>\" + (i18n.translate('insertRowBelow')) + \" ( Ctrl + Alt + ↓ )</span>\\n      </a>\\n    </li>\\n    <li><span class=\\\"separator\\\"></span></li>\\n    <li>\\n      <a tabindex=\\\"-1\\\" unselectable=\\\"on\\\" class=\\\"menu-item\\\"\\n        href=\\\"javascript:;\\\" data-param=\\\"deleteCol\\\">\\n        <span>\" + (i18n.translate('deleteColumn')) + \"</span>\\n      </a>\\n    </li>\\n    <li>\\n      <a tabindex=\\\"-1\\\" unselectable=\\\"on\\\" class=\\\"menu-item\\\"\\n        href=\\\"javascript:;\\\" data-param=\\\"insertColLeft\\\">\\n        <span>\" + (i18n.translate('insertColumnLeft')) + \" ( Ctrl + Alt + ← )</span>\\n      </a>\\n    </li>\\n    <li>\\n      <a tabindex=\\\"-1\\\" unselectable=\\\"on\\\" class=\\\"menu-item\\\"\\n        href=\\\"javascript:;\\\" data-param=\\\"insertColRight\\\">\\n        <span>\" + (i18n.translate('insertColumnRight')) + \" ( Ctrl + Alt + → )</span>\\n      </a>\\n    </li>\\n    <li><span class=\\\"separator\\\"></span></li>\\n    <li>\\n      <a tabindex=\\\"-1\\\" unselectable=\\\"on\\\" class=\\\"menu-item\\\"\\n        href=\\\"javascript:;\\\" data-param=\\\"deleteTable\\\">\\n        <span>\" + (i18n.translate('deleteTable')) + \"</span>\\n      </a>\\n    </li>\\n  </ul>\\n</div>\").appendTo(this.menuWrapper);\r\n    this.createMenu = this.menuWrapper.find('.menu-create-table');\r\n    this.editMenu = this.menuWrapper.find('.menu-edit-table');\r\n    $table = this.action.createTable(6, 6).appendTo(this.createMenu);\r\n    this.createMenu.on('mouseenter', 'td, th', (function(_this) {\r\n      return function(e) {\r\n        var $td, $tr, $trs, num;\r\n        _this.createMenu.find('td, th').removeClass('selected');\r\n        $td = $(e.currentTarget);\r\n        $tr = $td.parent();\r\n        num = $tr.find('td, th').index($td) + 1;\r\n        $trs = $tr.prevAll('tr').addBack();\r\n        if ($tr.parent().is('tbody')) {\r\n          $trs = $trs.add($table.find('thead tr'));\r\n        }\r\n        return $trs.find(\"td:lt(\" + num + \"), th:lt(\" + num + \")\").addClass('selected');\r\n      };\r\n    })(this));\r\n    this.createMenu.on('mouseleave', function(e) {\r\n      return $(e.currentTarget).find('td, th').removeClass('selected');\r\n    });\r\n    return this.createMenu.on('mousedown', 'td, th', (function(_this) {\r\n      return function(e) {\r\n        var $closestBlock, $td, $tr, colNum, rowNum;\r\n        _this.wrapper.removeClass('menu-on');\r\n        if (!_this.editor.editable.inputManager.focused) {\r\n          return;\r\n        }\r\n        $td = $(e.currentTarget);\r\n        $tr = $td.parent();\r\n        colNum = $tr.find('td').index($td) + 1;\r\n        rowNum = $tr.prevAll('tr').length + 1;\r\n        if ($tr.parent().is('tbody')) {\r\n          rowNum += 1;\r\n        }\r\n        $table = _this.action.createTable(rowNum, colNum, true);\r\n        $closestBlock = _this.editor.editable.selection.blockNodes().last();\r\n        if (_this.editor.editable.util.isEmptyNode($closestBlock)) {\r\n          $closestBlock.replaceWith($table);\r\n        } else {\r\n          $closestBlock.after($table);\r\n        }\r\n        _this.action.decorate($table);\r\n        _this.editor.editable.selection.setRangeAtStartOf($table.find('th:first'));\r\n        _this.editor.trigger('valuechanged');\r\n        return false;\r\n      };\r\n    })(this));\r\n  };\r\n\r\n\r\n  addons.toolbar.items.table = TableButton;\r\n\r\n  return TableButton;\r\n\r\n\r\n});\ndefine('skylark-widgets-wordpad/addons/toolbar/items/TitleButton',[\r\n  \"skylark-domx-query\",\r\n  \"../../../ToolButton\",\r\n  \"../../../addons\"\r\n],function($,ToolButton,addons){ \r\n  var TitleButton = ToolButton.inherit({\r\n      _doActive : function(value) {\r\n        var active = !!value,\r\n            param = value;\r\n        ToolButton.prototype._doActive.call(this, active);\r\n\r\n        if (active) {\r\n          param || (param = this.node[0].tagName.toLowerCase());\r\n        }\r\n        this.el.removeClass('active-p active-h1 active-h2 active-h3 active-h4 active-h5');\r\n        if (active) {\r\n          return this.el.addClass('active active-' + param);\r\n        }\r\n      }\r\n   });\r\n\r\n\r\n  addons.toolbar.items.title = TitleButton;\r\n\r\n  return TitleButton;\r\n\r\n});\ndefine('skylark-widgets-wordpad/main',[\r\n  \"./Wordpad\", \r\n  \"./Action\",\r\n  \"./Popover\",\r\n  \"./Toolbar\",\r\n  \"./ToolButton\", \r\n\r\n  \"./addons/actions/AlignmentAction\", \r\n  \"./addons/actions/BlockquoteAction\", \r\n  \"./addons/actions/BoldAction\", \r\n  \"./addons/actions/CodeAction\", \r\n  \"./addons/actions/CodePopover\", \r\n  \"./addons/actions/ColorAction\", \r\n  \"./addons/actions/EmojiAction\", \r\n  \"./addons/actions/FontScaleAction\", \r\n  \"./addons/actions/FullScreenAction\", \r\n  \"./addons/actions/HrAction\", \r\n  \"./addons/actions/HtmlAction\", \r\n  \"./addons/actions/ImageAction\", \r\n  \"./addons/actions/ImagePopover\", \r\n  \"./addons/actions/IndentAction\", \r\n  \"./addons/actions/ItalicAction\", \r\n  \"./addons/actions/LinkAction\", \r\n  \"./addons/actions/LinkPopover\", \r\n  \"./addons/actions/ListAction\", \r\n  \"./addons/actions/MarkAction\", \r\n  \"./addons/actions/OrderListAction\", \r\n  \"./addons/actions/OutdentAction\",\r\n  \"./addons/actions/StrikethroughAction\", \r\n  \"./addons/actions/TableAction\", \r\n  \"./addons/actions/TitleAction\", \r\n  \"./addons/actions/UnderlineAction\", \r\n  \"./addons/actions/UnorderListAction\",\r\n  \"./addons/actions/VideoAction\",\r\n\r\n  \"./addons/toolbar/items/AlignmentButton\",\r\n  \"./addons/toolbar/items/ColorButton\",\r\n  \"./addons/toolbar/items/EmojiButton\",\r\n  \"./addons/toolbar/items/TableButton\",\r\n  \"./addons/toolbar/items/TitleButton\"\r\n],function(Wordpad){\r\n\t\r\n  return Wordpad;\r\n});\ndefine('skylark-widgets-wordpad', ['skylark-widgets-wordpad/main'], function (main) { return main; });\n\n"]}