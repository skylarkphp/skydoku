{"version":3,"sources":["removing/buttons/AutoSaveButton.js"],"names":["define","$","Toolbar","Wordpad","Button","i18n","AutoSaveButton","inherit","name","needFocus","_init","link","val","_this","prototype","call","this","editor","_module","opts","autosave","autosavePath","path","href","location","textarea","data","pathname","replace","on","storage","set","getValue","el","closest","id","e","remove","get","is","confirm","setValue","pluginName","supported","localStorage","setItem","removeItem","_error","key","session","sessionStorage"],"mappings":";;;;;;;AAAAA,QACE,qBACA,aACA,aACA,YACA,WACA,SAASC,EAAEC,EAAQC,EAAQC,EAAOC,GAGlC,IAAIC,EAAiBF,EAAOG,SAC1BC,KAAO,WAEPC,WAAY,EAEZC,MAAQ,WAGP,IAAgBC,EAAMH,EAAMI,EAkBaC,EAhBzC,IAJGT,EAAOU,UAAUJ,MAAMK,KAAKC,MAG/BA,KAAKC,OAASD,KAAKE,QACdF,KAAKG,KAAKC,YAGfJ,KAAKR,KAAqC,iBAAvBQ,KAAKG,KAAKC,SAAwBJ,KAAKG,KAAKC,SAAW,WACtEJ,KAAKG,KAAKE,aACZL,KAAKM,KAAON,KAAKG,KAAKE,cAEtBV,EAAOV,EAAE,QACPsB,KAAMC,SAASD,OAEjBf,EAAOQ,KAAKC,OAAOQ,SAASC,KAAK,aAAeV,KAAKR,KACrDQ,KAAKM,KAAO,IAAOX,EAAK,GAAGgB,SAASC,QAAQ,OAAQ,IAAIA,QAAQ,OAAQ,IAAO,aAAepB,EAAO,KAElGQ,KAAKM,OAGVN,KAAKC,OAAOY,GAAG,gBAA0BhB,EAItCG,KAHM,WACL,OAAOH,EAAMiB,QAAQC,IAAIlB,EAAMS,KAAMT,EAAMI,OAAOe,eAGtDhB,KAAKC,OAAOgB,GAAGC,QAAQ,QAAQL,GAAG,yBAA2Bb,KAAKC,OAAOkB,GAAI,SAAUtB,GACrF,OAAO,SAASuB,GACd,OAAOvB,EAAMiB,QAAQO,OAAOxB,EAAMS,OAFuC,CAI1EN,QACHJ,EAAMI,KAAKc,QAAQQ,IAAItB,KAAKM,QAKxBV,IADSI,KAAKC,OAAOQ,SAASb,QAIlC,OAAII,KAAKC,OAAOQ,SAASc,GAAG,2BACtBC,QAAQxB,KAAKC,OAAOQ,SAASC,KAAK,qBAAuB,4CACpDV,KAAKC,OAAOwB,SAAS7B,GAErBI,KAAKc,QAAQO,OAAOrB,KAAKM,MAG3BN,KAAKC,OAAOwB,SAAS7B,MAiEjC,OAvDAN,EAAeoC,WAAa,WAE5BpC,EAAeQ,UAAUK,MACvBC,UAAU,EACVC,aAAc,MAIhBf,EAAeQ,UAAUgB,SACvBa,UAAW,WAET,IAGE,OAFAC,aAAaC,QAAQ,oBAAqB,OAC1CD,aAAaE,WAAW,sBACjB,EACP,MAAOC,GAEP,OADQA,GACD,IAGXhB,IAAK,SAASiB,EAAKpC,EAAKqC,GAKtB,GAHe,MAAXA,IACFA,GAAU,GAEPjC,KAAK2B,YAIV,OADUM,EAAUC,eAAiBN,cACtBC,QAAQG,EAAKpC,IAE9B0B,IAAK,SAASU,EAAKC,GAKjB,GAHe,MAAXA,IACFA,GAAU,GAEPjC,KAAK2B,YAIV,OADUM,EAAUC,eAAiBN,cACtBI,IAEjBX,OAAQ,SAASW,EAAKC,GAKpB,GAHe,MAAXA,IACFA,GAAU,GAEPjC,KAAK2B,YAIV,OADUM,EAAUC,eAAiBN,cACtBE,WAAWE,KAIvB1C","file":"../../../removing/buttons/AutoSaveButton.js","sourcesContent":["define([\r\n  \"skylark-domx-query\",\r\n  \"../Toolbar\",\r\n  \"../Wordpad\",\r\n  \"../Button\",\r\n  \"../i18n\"\r\n],function($,Toolbar,Wordpad,Button,i18n){ \r\n\r\n\r\n  var AutoSaveButton = Button.inherit({\r\n    name : 'autosave',\r\n\r\n    needFocus : false,\r\n\r\n    _init : function() {\r\n        Button.prototype._init.call(this);\r\n\r\n\t    var currentVal, link, name, val;\r\n\t    this.editor = this._module;\r\n\t    if (!this.opts.autosave) {\r\n\t      return;\r\n\t    }\r\n\t    this.name = typeof this.opts.autosave === 'string' ? this.opts.autosave : 'simditor';\r\n\t    if (this.opts.autosavePath) {\r\n\t      this.path = this.opts.autosavePath;\r\n\t    } else {\r\n\t      link = $(\"<a/>\", {\r\n\t        href: location.href\r\n\t      });\r\n\t      name = this.editor.textarea.data('autosave') || this.name;\r\n\t      this.path = \"/\" + (link[0].pathname.replace(/\\/$/g, \"\").replace(/^\\//g, \"\")) + \"/autosave/\" + name + \"/\";\r\n\t    }\r\n\t    if (!this.path) {\r\n\t      return;\r\n\t    }\r\n\t    this.editor.on(\"valuechanged\", (function(_this) {\r\n\t      return function() {\r\n\t        return _this.storage.set(_this.path, _this.editor.getValue());\r\n\t      };\r\n\t    })(this));\r\n\t    this.editor.el.closest('form').on('ajax:success.simditor-' + this.editor.id, (function(_this) {\r\n\t      return function(e) {\r\n\t        return _this.storage.remove(_this.path);\r\n\t      };\r\n\t    })(this));\r\n\t    val = this.storage.get(this.path);\r\n\t    if (!val) {\r\n\t      return;\r\n\t    }\r\n\t    currentVal = this.editor.textarea.val();\r\n\t    if (val === currentVal) {\r\n\t      return;\r\n\t    }\r\n\t    if (this.editor.textarea.is('[data-autosave-confirm]')) {\r\n\t      if (confirm(this.editor.textarea.data('autosave-confirm') || 'Are you sure to restore unsaved changes?')) {\r\n\t        return this.editor.setValue(val);\r\n\t      } else {\r\n\t        return this.storage.remove(this.path);\r\n\t      }\r\n\t    } else {\r\n\t      return this.editor.setValue(val);\r\n\t    }\r\n\r\n    }\r\n\r\n\r\n\r\n  });\r\n\r\n\r\n  AutoSaveButton.pluginName = 'Autosave';\r\n\r\n  AutoSaveButton.prototype.opts = {\r\n    autosave: true,\r\n    autosavePath: null\r\n  };\r\n\r\n\r\n  AutoSaveButton.prototype.storage = {\r\n    supported: function() {\r\n      var error;\r\n      try {\r\n        localStorage.setItem('_storageSupported', 'yes');\r\n        localStorage.removeItem('_storageSupported');\r\n        return true;\r\n      } catch (_error) {\r\n        error = _error;\r\n        return false;\r\n      }\r\n    },\r\n    set: function(key, val, session) {\r\n      var storage;\r\n      if (session == null) {\r\n        session = false;\r\n      }\r\n      if (!this.supported()) {\r\n        return;\r\n      }\r\n      storage = session ? sessionStorage : localStorage;\r\n      return storage.setItem(key, val);\r\n    },\r\n    get: function(key, session) {\r\n      var storage;\r\n      if (session == null) {\r\n        session = false;\r\n      }\r\n      if (!this.supported()) {\r\n        return;\r\n      }\r\n      storage = session ? sessionStorage : localStorage;\r\n      return storage[key];\r\n    },\r\n    remove: function(key, session) {\r\n      var storage;\r\n      if (session == null) {\r\n        session = false;\r\n      }\r\n      if (!this.supported()) {\r\n        return;\r\n      }\r\n      storage = session ? sessionStorage : localStorage;\r\n      return storage.removeItem(key);\r\n    }\r\n  };\r\n\r\n  return AutoSaveButton;\r\n\r\n});"]}