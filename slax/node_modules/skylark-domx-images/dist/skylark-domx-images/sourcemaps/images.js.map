{"version":3,"sources":["images.js"],"names":["define","skylark","langx","eventer","noder","finder","geom","styler","datax","transforms","$","watch","imgs","isArray","totalCount","length","progressedCount","successedCount","faileredCount","d","Deferred","complete","resolve","total","successed","failered","progress","img","isLoaded","progressed","defer","forEach","isCompleted","on","load","error","promise","undefined","naturalWidth","loaded","elm","options","addBackgroundImage","elm1","matches","exec","css","url","Image","src","push","nodeName","childImgs","findAll","i","background","children","viewer","el","style","clientSize","loadedCallback","onload","top","height","offsetHeight","left","width","offsetWidth","reset","visibility","onerror","_load","position","border","padding","margin","append","ret","dispose","remove","name","args","makeArray","arguments","unshift","apply","images","fn","imagesLoaded","this","imagesViewer","transform","mixin","preload","urls","isString","attach"],"mappings":"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","file":"../images.js","sourcesContent":["define([\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-data\",\r\n    \"skylark-domx-transforms\",\r\n    \"skylark-domx-query\"\r\n], function(skylark,langx,eventer,noder,finder,geom,styler,datax,transforms,$) {\r\n\r\n  function watch(imgs) {\r\n    if (!langx.isArray(imgs)) {\r\n      imgs = [imgs];\r\n    }\r\n    var totalCount = imgs.length,\r\n        progressedCount = 0,\r\n        successedCount = 0,\r\n        faileredCount = 0,\r\n        d = new langx.Deferred();\r\n\r\n\r\n    function complete() {\r\n\r\n      d.resolve({\r\n        \"total\" : totalCount,\r\n        \"successed\" : successedCount,\r\n        \"failered\" : faileredCount,\r\n        \"imgs\" : imgs \r\n      });\r\n    }\r\n\r\n    function progress(img,isLoaded) {\r\n\r\n      progressedCount++;\r\n      if (isLoaded) {\r\n        successedCount ++ ; \r\n      } else {\r\n        faileredCount ++ ;\r\n      }\r\n\r\n      // progress event\r\n      d.progress({\r\n        \"img\" : img,\r\n        \"isLoaded\" : isLoaded,\r\n        \"progressed\" : progressedCount,\r\n        \"total\" : totalCount,\r\n        \"imgs\" : imgs \r\n      });\r\n\r\n      // check if completed\r\n      if ( progressedCount == totalCount ) {\r\n        complete();\r\n      }\r\n    }\r\n\r\n    function check() {\r\n      if (!imgs.length ) {\r\n        complete();\r\n        return;\r\n      }\r\n\r\n      imgs.forEach(function(img) {\r\n        if (isCompleted(img)) {\r\n          progress(img,isLoaded(img));\r\n        } else {\r\n          eventer.on(img,{\r\n            \"load\" : function() {\r\n              progress(img,true);\r\n            },\r\n\r\n            \"error\" : function() {\r\n              progress(img,false);\r\n            }\r\n          });      \r\n        }\r\n      });\r\n    }\r\n\r\n    langx.defer(check);\r\n\r\n    d.promise.totalCount = totalCount;\r\n    return d.promise;\r\n  }\r\n\r\n\r\n  function isCompleted(img) {\r\n     return img.complete && img.naturalWidth !== undefined;\r\n  }\r\n\r\n  function isLoaded(img) {\r\n    return img.complete && img.naturalWidth !== 0;\r\n  }\r\n\r\n  function loaded(elm,options) {\r\n    var imgs = [];\r\n\r\n    options = options || {};\r\n\r\n    function addBackgroundImage (elm1) {\r\n\r\n      var reURL = /url\\((['\"])?(.*?)\\1\\)/gi;\r\n      var matches = reURL.exec( styler.css(elm1,\"background-image\"));\r\n      var url = matches && matches[2];\r\n      if ( url ) {\r\n        var img = new Image();\r\n        img.src = url;\r\n        imgs.push(img);\r\n      }\r\n    }\r\n\r\n    // filter siblings\r\n    if ( elm.nodeName == 'IMG' ) {\r\n      imgs.push( elm );\r\n    } else {\r\n      // find children\r\n      var childImgs = finder.findAll(elm,'img');\r\n      // concat childElems to filterFound array\r\n      for ( var i=0; i < childImgs.length; i++ ) {\r\n        imgs.push(childImgs[i]);\r\n      }\r\n\r\n      // get background image on element\r\n      if ( options.background === true ) {\r\n        addBackgroundImage(elm);\r\n      } else  if ( typeof options.background == 'string' ) {\r\n        var children = finder.findAll(elm, options.background );\r\n        for ( i=0; i < children.length; i++ ) {\r\n          addBackgroundImage( children[i] );\r\n        }\r\n      }\r\n    }\r\n\r\n    return watch(imgs);\r\n  }\r\n\r\n  function preload(urls,options) {\r\n      if (langx.isString(urls)) {\r\n        urls = [urls];\r\n      }\r\n      var images = [];\r\n\r\n      urls.forEach(function(url){\r\n        var img = new Image();\r\n        img.src = url;\r\n        images.push(img);\r\n      });\r\n\r\n      return watch(images);\r\n  }\r\n\r\n\r\n  $.fn.imagesLoaded = function( options ) {\r\n    return loaded(this,options);\r\n  };\r\n\r\n\r\n  function viewer(el,options) {\r\n    var img ,\r\n        style = {},\r\n        clientSize = geom.clientSize(el),\r\n        loadedCallback = options.loaded,\r\n        faileredCallback = options.failered;\r\n\r\n    function onload() {\r\n        styler.css(img,{//居中\r\n          top: (clientSize.height - img.offsetHeight) / 2 + \"px\",\r\n          left: (clientSize.width - img.offsetWidth) / 2 + \"px\"\r\n        });\r\n\r\n        transforms.reset(img);\r\n\r\n        styler.css(img,{\r\n          visibility: \"visible\"\r\n        });\r\n\r\n        if (loadedCallback) {\r\n          loadedCallback();\r\n        }\r\n    }\r\n\r\n    function onerror() {\r\n\r\n    }\r\n    function _init() {\r\n      style = styler.css(el,[\"position\",\"overflow\"]);\r\n      if (style.position != \"relative\" && style.position != \"absolute\") { \r\n        styler.css(el,\"position\", \"relative\" );\r\n      }\r\n      styler.css(el,\"overflow\", \"hidden\" );\r\n\r\n      img = new Image();\r\n\r\n      styler.css(img,{\r\n        position: \"absolute\",\r\n        border: 0, padding: 0, margin: 0, width: \"auto\", height: \"auto\",\r\n        visibility: \"hidden\"\r\n      });\r\n\r\n      img.onload = onload;\r\n      img.onerror = onerror;\r\n\r\n      noder.append(el,img);\r\n\r\n      if (options.url) {\r\n        _load(options.url);\r\n      }\r\n    }\r\n\r\n    function _load(url) {\r\n        img.style.visibility = \"hidden\";\r\n        img.src = url;\r\n    }\r\n\r\n    function _dispose() {\r\n        noder.remove(img);\r\n        styler.css(el,style);\r\n        img = img.onload = img.onerror = null;\r\n    }\r\n\r\n    _init();\r\n\r\n    var ret =  {\r\n      load : _load,\r\n      dispose : _dispose\r\n    };\r\n\r\n    [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\",\"reset\"].forEach(\r\n      function(name){\r\n        ret[name] = function() {\r\n          var args = langx.makeArray(arguments);\r\n          args.unshift(img);\r\n          transforms[name].apply(null,args);\r\n        }\r\n      }\r\n    );\r\n\r\n    return ret;\r\n  }\r\n\r\n  $.fn.imagesViewer = function( options ) {\r\n    return viewer(this,options);\r\n  };\r\n\r\n  function images() {\r\n    return images;\r\n  }\r\n\r\n  images.transform = function (el,options) {\r\n  };\r\n\r\n  [\"vertical\",\"horizontal\",\"rotate\",\"left\",\"right\",\"scale\",\"zoom\",\"zoomin\",\"zoomout\",\"reset\"].forEach(\r\n    function(name){\r\n      images.transform[name] = transforms[name];\r\n    }\r\n  );\r\n\r\n\r\n  langx.mixin(images, {\r\n    isCompleted : isCompleted,\r\n\r\n    isLoaded : isLoaded,\r\n\r\n    loaded : loaded,\r\n\r\n    preload : preload,\r\n\r\n    viewer : viewer\r\n  });\r\n\r\n  return skylark.attach(\"domx.images\" , images);\r\n});\r\n"]}