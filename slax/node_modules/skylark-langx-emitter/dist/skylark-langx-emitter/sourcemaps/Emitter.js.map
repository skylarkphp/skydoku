{"version":3,"sources":["Emitter.js"],"names":["define","skylark","types","objects","arrays","klass","Event","slice","Array","prototype","compact","isDefined","isPlainObject","isFunction","isString","isEmptyObject","mixin","safeMixin","parse","event","segs","split","name","ns","join","Emitter","on","events","selector","data","callback","ctx","one","self","this","_hub","each","type","fn","undefined","forEach","parsed","push","emit","e","Object","defineProperty","value","args","call","arguments","concat","eventName","listeners","len","length","reCompact","i","isImmediatePropagationStopped","listener","startsWith","apply","listened","_events","listenTo","obj","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","indexOf","listenToOnce","off","evts","liveEvents","_","unlistenTo","j","trigger","createEvent","props","attach"],"mappings":";;;;;;;AAAAA,QACE,sBACA,sBACA,wBACA,uBACA,sBACA,WACA,SAASC,EAAQC,EAAMC,EAAQC,EAAOC,EAAMC,GAC1C,IAAIC,EAAQC,MAAMC,UAAUF,MACxBG,EAAUN,EAAOM,QACjBC,EAAYT,EAAMS,UAClBC,EAAgBV,EAAMU,cACtBC,EAAaX,EAAMW,WACnBC,EAAWZ,EAAMY,SACjBC,EAAgBb,EAAMa,cACtBC,EAAQb,EAAQa,MACJb,EAAQc,UAExB,SAASC,EAAMC,GACX,IAAIC,GAAQ,GAAKD,GAAOE,MAAM,KAC9B,OACIC,KAAMF,EAAK,GACXG,GAAIH,EAAKb,MAAM,GAAGiB,KAAK,MAI/B,IAAIC,EAAUpB,GACVqB,GAAI,SAASC,EAAQC,EAAUC,EAAMC,EAAUC,EAAyBC,GACpE,IAAIC,EAAOC,KACPC,EAAOD,KAAKC,OAASD,KAAKC,SAE9B,OAAIvB,EAAce,IACdI,EAAMD,EACNM,KAAKT,EAAQ,SAASU,EAAMC,GACxBL,EAAKP,GAAGW,EAAMT,EAAUC,EAAMS,EAAIP,EAAKC,KAEpCE,OAGNpB,EAASc,IAAcf,EAAWiB,KACnCC,EAAMD,EACNA,EAAWD,EACXA,EAAOD,EACPA,OAAWW,GAGX1B,EAAWgB,KACXE,EAAMD,EACNA,EAAWD,EACXA,EAAO,MAGPf,EAASa,KACTA,EAASA,EAAON,MAAM,OAG1BM,EAAOa,QAAQ,SAASrB,GACpB,IAAIsB,EAASvB,EAAMC,GACfG,EAAOmB,EAAOnB,KACdC,EAAKkB,EAAOlB,IAEfY,EAAKb,KAAUa,EAAKb,QAAaoB,MAC9BJ,GAAIR,EACJF,SAAUA,EACVC,KAAMA,EACNE,IAAKA,EACLR,GAAKA,EACLS,IAAKA,MAINE,OAGXF,IAAK,SAASL,EAAQC,EAAUC,EAAMC,EAAUC,GAC5C,OAAOG,KAAKR,GAAGC,EAAQC,EAAUC,EAAMC,EAAUC,EAAK,IAG1DY,KAAM,SAASC,GACX,IAAKV,KAAKC,KACN,OAAOD,KAGX,IAAID,EAAOC,KAEPpB,EAAS8B,KACTA,EAAI,IAAItC,EAAMsC,IAGlBC,OAAOC,eAAeF,EAAE,UACpBG,MAAQb,OAGZ,IAAIc,EAAOzC,EAAM0C,KAAKC,UAAW,GA8CjC,OA5CIF,EADArC,EAAUqC,IACFJ,GAAGO,OAAOH,IAEVJ,IAEXA,EAAEP,MAAQO,EAAEtB,KAAM,OAAOkB,QAAQ,SAASY,GACvC,IAAIX,EAASvB,EAAMkC,GACf9B,EAAOmB,EAAOnB,KACdC,EAAKkB,EAAOlB,GAEZ8B,EAAYpB,EAAKE,KAAKb,GAC1B,GAAK+B,EAAL,CAOA,IAHA,IAAIC,EAAMD,EAAUE,OAChBC,GAAY,EAEPC,EAAI,EAAGA,EAAIH,EAAKG,IAAK,CAC1B,GAAIb,EAAEc,+BAAiCd,EAAEc,gCACrC,OAAOxB,KAEX,IAAIyB,EAAWN,EAAUI,KACrBlC,GAAQoC,EAASpC,IAAQoC,EAASpC,GAAGqC,WAAWrC,MAGhDqB,EAAEf,KACE8B,EAAS9B,OACTe,EAAEf,KAAOb,KAAU2C,EAAS9B,KAAMe,EAAEf,OAGxCe,EAAEf,KAAO8B,EAAS9B,MAAQ,KAE9B8B,EAASrB,GAAGuB,MAAMF,EAAS5B,IAAKiB,GAC5BW,EAAS3B,MACTqB,EAAUI,GAAK,KACfD,GAAY,IAIhBA,IACAvB,EAAKE,KAAKiB,GAAa1C,EAAQ2C,OAIhCnB,MAGX4B,SAAU,SAAS3C,GAEf,QADee,KAAKC,OAASD,KAAK6B,aAAe5C,QACnCoC,OAAS,GAG3BS,SAAU,SAASC,EAAK9C,EAAOW,EAA8BE,GACzD,IAAKiC,EACD,OAAO/B,KAIPpB,EAASgB,KACTA,EAAWI,KAAKJ,IAGhBE,EACAiC,EAAIjC,IAAIb,EAAOW,EAAUI,MAEzB+B,EAAIvC,GAAGP,EAAOW,EAAUI,MAO5B,IAHA,IACIgC,EADAC,EAAcjC,KAAKkC,eAAiBlC,KAAKkC,iBAGpCX,EAAI,EAAGA,EAAIU,EAAYZ,OAAQE,IACpC,GAAIU,EAAYV,GAAGQ,KAAOA,EAAK,CAC3BC,EAAYC,EAAYV,GACxB,MAGHS,GACDC,EAAYzB,KACRwB,GACID,IAAKA,EACLtC,YAIZ,IAAI0C,EAAkBH,EAAUvC,OAC5B2C,EAAiBD,EAAgBlD,GAASkD,EAAgBlD,OAK9D,OAJyC,GAArCmD,EAAeC,QAAQzC,IACvBwC,EAAe5B,KAAKZ,GAGjBI,MAGXsC,aAAc,SAASP,EAAK9C,EAAOW,GAC/B,OAAOI,KAAK8B,SAASC,EAAK9C,EAAOW,EAAU,IAG/C2C,IAAK,SAAS9C,EAAQG,GAClB,IAAIK,EAAOD,KAAKC,OAASD,KAAKC,SAuC9B,OAtCIrB,EAASa,KACTA,EAASA,EAAON,MAAM,OAG1BM,EAAOa,QAAQ,SAASrB,GACpB,IAAIsB,EAASvB,EAAMC,GACfG,EAAOmB,EAAOnB,KACdC,EAAKkB,EAAOlB,GAEZmD,EAAOvC,EAAKb,GAEhB,GAAIoD,EAAM,CACN,IAAIC,KAEJ,GAAI7C,GAAYP,EACZ,IAAK,IAAIkC,EAAI,EAAGH,EAAMoB,EAAKnB,OAAQE,EAAIH,EAAKG,IAEpC3B,GAAY4C,EAAKjB,GAAGnB,KAAOR,GAAY4C,EAAKjB,GAAGnB,GAAGsC,IAAM9C,EACxD6C,EAAWjC,KAAKgC,EAAKjB,KAIrBlC,GAAQmD,EAAKjB,GAAGlC,IAA8B,GAAxBmD,EAAKjB,GAAGlC,GAAGgD,QAAQhD,IACzCoD,EAAWjC,KAAKgC,EAAKjB,IAM7BkB,EAAWpB,OACXpB,EAAKb,GAAQqD,SAENxC,EAAKb,MAMjBY,MAEX2C,WAAY,SAASZ,EAAK9C,EAAOW,GAC7B,IAAIqC,EAAcjC,KAAKkC,aACvB,IAAKD,EACD,OAAOjC,KAEX,IAAK,IAAIuB,EAAI,EAAGA,EAAIU,EAAYZ,OAAQE,IAAK,CACzC,IAAIS,EAAYC,EAAYV,GAE5B,IAAIQ,GAAOA,GAAOC,EAAUD,IAA5B,CAIA,IAAII,EAAkBH,EAAUvC,OAChC,IAAK,IAAIyB,KAAaiB,EAClB,IAAIlD,GAASA,GAASiC,EAAtB,CAMA,IAFA,IAAIkB,EAAiBD,EAAgBjB,GAE5B0B,EAAI,EAAGA,EAAIR,EAAef,OAAQuB,IAClChD,GAAYA,GAAYwC,EAAeb,KACxCS,EAAUD,IAAIQ,IAAIrB,EAAWkB,EAAeb,GAAIvB,MAChDoC,EAAeb,GAAK,MAI5Ba,EAAiBD,EAAgBjB,GAAa1C,EAAQ4D,GAElDvD,EAAcuD,KACdD,EAAgBjB,GAAa,MAKjCrC,EAAcsD,KACdF,EAAYV,GAAK,OASzB,OALAU,EAAcjC,KAAKkC,aAAe1D,EAAQyD,GACtCpD,EAAcoD,KACdjC,KAAKkC,aAAe,MAGjBlC,MAGX6C,QAAW,WACP,OAAO7C,KAAKS,KAAKkB,MAAM3B,KAAKgB,cAYpC,OARAzB,EAAQuD,YAAc,SAAU3C,EAAK4C,GAGjC,OAAO,IAAI3E,EAAM+B,EAAK4C,IAG1BxD,EAAQnB,MAAQA,EAETL,EAAQiF,OAAO,gBAAgBzD","file":"../Emitter.js","sourcesContent":["define([\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-arrays\",\r\n  \"skylark-langx-klass\",\r\n  \"./Event\"\r\n],function(skylark,types,objects,arrays,klass,Event){\r\n    var slice = Array.prototype.slice,\r\n        compact = arrays.compact,\r\n        isDefined = types.isDefined,\r\n        isPlainObject = types.isPlainObject,\r\n        isFunction = types.isFunction,\r\n        isString = types.isString,\r\n        isEmptyObject = types.isEmptyObject,\r\n        mixin = objects.mixin,\r\n        safeMixin = objects.safeMixin;\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            name: segs[0],\r\n            ns: segs.slice(1).join(\" \")\r\n        };\r\n    }\r\n\r\n    var Emitter = klass({\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(event) {\r\n                var parsed = parse(event),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    ns : ns,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        emit: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new Event(e); //new CustomEvent(e);\r\n            }\r\n\r\n            Object.defineProperty(e,\"target\",{\r\n                value : this\r\n            });\r\n\r\n            var args = slice.call(arguments, 1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var parsed = parse(eventName),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                var listeners = self._hub[name];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                        return this;\r\n                    }\r\n                    var listener = listeners[i];\r\n                    if (ns && (!listener.ns ||  !listener.ns.startsWith(ns))) {\r\n                        continue;\r\n                    }\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                obj.one(event, callback, this);\r\n            } else {\r\n                obj.on(event, callback, this);\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event, callback) {\r\n            return this.listenTo(obj, event, callback, 1);\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(event) {\r\n                var parsed = parse(event),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                var evts = _hub[name];\r\n\r\n                if (evts) {\r\n                    var liveEvents = [];\r\n\r\n                    if (callback || ns) {\r\n                        for (var i = 0, len = evts.length; i < len; i++) {\r\n                            \r\n                            if (callback && evts[i].fn !== callback && evts[i].fn._ !== callback) {\r\n                                liveEvents.push(evts[i]);\r\n                                continue;\r\n                            } \r\n\r\n                            if (ns && (!evts[i].ns || evts[i].ns.indexOf(ns)!=0)) {\r\n                                liveEvents.push(evts[i]);\r\n                                continue;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (liveEvents.length) {\r\n                        _hub[name] = liveEvents;\r\n                    } else {\r\n                        delete _hub[name];\r\n                    }\r\n\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    var listeningEvent = listeningEvents[eventName];\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        trigger  : function() {\r\n            return this.emit.apply(this,arguments);\r\n        }\r\n    });\r\n\r\n    Emitter.createEvent = function (type,props) {\r\n        //var e = new CustomEvent(type,props);\r\n        //return safeMixin(e, props);\r\n        return new Event(type,props);\r\n    };\r\n\r\n    Emitter.Event = Event;\r\n\r\n    return skylark.attach(\"langx.Emitter\",Emitter);\r\n\r\n})"]}