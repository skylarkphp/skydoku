{"version":3,"sources":["skylark-langx-emitter.js"],"names":["define","objects","funcs","klass","eventMethods","preventDefault","stopImmediatePropagation","stopPropagation","compatible","event","source","isDefaultPrevented","each","name","predicate","sourceMethod","this","returnTrue","apply","arguments","returnFalse","Event","CustomEvent","[object Object]","type","props","super","safeMixin","skylark","types","arrays","slice","Array","prototype","compact","isDefined","isPlainObject","isFunction","isString","isEmptyObject","mixin","parse","segs","split","ns","join","Emitter","on","events","selector","data","callback","ctx","one","self","_hub","fn","undefined","forEach","parsed","push","emit","e","Object","defineProperty","value","args","call","concat","eventName","listeners","len","length","reCompact","i","isImmediatePropagationStopped","listener","startsWith","listened","evtArr","_events","listenTo","obj","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","indexOf","listenToOnce","off","evts","liveEvents","_","unlistenTo","j","trigger","createEvent","attach","main"],"mappings":"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","file":"../skylark-langx-emitter.js","sourcesContent":["define('skylark-langx-emitter/Event',[\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-funcs\",\r\n  \"skylark-langx-klass\",\r\n],function(objects,funcs,klass){\r\n    var eventMethods = {\r\n        preventDefault: \"isDefaultPrevented\",\r\n        stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n        stopPropagation: \"isPropagationStopped\"\r\n     };\r\n        \r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            objects.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = funcs.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = funcs.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n\r\n    /*\r\n    var Event = klass({\r\n        _construct : function(type,props) {\r\n            CustomEvent.call(this,type.props);\r\n            objects.safeMixin(this, props);\r\n            compatible(this);\r\n        }\r\n    },CustomEvent);\r\n    */\r\n\r\n    class Event extends CustomEvent {\r\n        constructor(type,props) {\r\n            super(type,props);\r\n            objects.safeMixin(this, props);\r\n            compatible(this);\r\n        } \r\n    }\r\n\r\n\r\n    Event.compatible = compatible;\r\n\r\n    return Event;\r\n    \r\n});\ndefine('skylark-langx-emitter/Emitter',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-arrays\",\r\n  \"skylark-langx-klass\",\r\n  \"./Event\"\r\n],function(skylark,types,objects,arrays,klass,Event){\r\n    var slice = Array.prototype.slice,\r\n        compact = arrays.compact,\r\n        isDefined = types.isDefined,\r\n        isPlainObject = types.isPlainObject,\r\n        isFunction = types.isFunction,\r\n        isString = types.isString,\r\n        isEmptyObject = types.isEmptyObject,\r\n        mixin = objects.mixin,\r\n        safeMixin = objects.safeMixin;\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            name: segs[0],\r\n            ns: segs.slice(1).join(\" \")\r\n        };\r\n    }\r\n\r\n    var Emitter = klass({\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(event) {\r\n                var parsed = parse(event),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    ns : ns,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        emit: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new Event(e); //new CustomEvent(e);\r\n            }\r\n\r\n            Object.defineProperty(e,\"target\",{\r\n                value : this\r\n            });\r\n\r\n            var args = slice.call(arguments, 1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var parsed = parse(eventName),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                var listeners = self._hub[name];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                        return this;\r\n                    }\r\n                    var listener = listeners[i];\r\n                    if (ns && (!listener.ns ||  !listener.ns.startsWith(ns))) {\r\n                        continue;\r\n                    }\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                obj.one(event, callback, this);\r\n            } else {\r\n                obj.on(event, callback, this);\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event, callback) {\r\n            return this.listenTo(obj, event, callback, 1);\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(event) {\r\n                var parsed = parse(event),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                var evts = _hub[name];\r\n\r\n                if (evts) {\r\n                    var liveEvents = [];\r\n\r\n                    if (callback || ns) {\r\n                        for (var i = 0, len = evts.length; i < len; i++) {\r\n                            \r\n                            if (callback && evts[i].fn !== callback && evts[i].fn._ !== callback) {\r\n                                liveEvents.push(evts[i]);\r\n                                continue;\r\n                            } \r\n\r\n                            if (ns && (!evts[i].ns || evts[i].ns.indexOf(ns)!=0)) {\r\n                                liveEvents.push(evts[i]);\r\n                                continue;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (liveEvents.length) {\r\n                        _hub[name] = liveEvents;\r\n                    } else {\r\n                        delete _hub[name];\r\n                    }\r\n\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    var listeningEvent = listeningEvents[eventName];\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        trigger  : function() {\r\n            return this.emit.apply(this,arguments);\r\n        }\r\n    });\r\n\r\n    Emitter.createEvent = function (type,props) {\r\n        //var e = new CustomEvent(type,props);\r\n        //return safeMixin(e, props);\r\n        return new Event(type,props);\r\n    };\r\n\r\n    Emitter.Event = Event;\r\n\r\n    return skylark.attach(\"langx.Emitter\",Emitter);\r\n\r\n});\ndefine('skylark-langx-emitter/Evented',[\r\n  \"skylark-langx-ns/ns\",\r\n\t\"./Emitter\"\r\n],function(skylark,Emitter){\r\n\treturn skylark.attach(\"langx.Evented\",Emitter);\r\n});\ndefine('skylark-langx-emitter/main',[\r\n\t\"./Emitter\",\r\n\t\"./Evented\"\r\n],function(Emitter){\r\n\treturn Emitter;\r\n});\ndefine('skylark-langx-emitter', ['skylark-langx-emitter/main'], function (main) { return main; });\n\n"]}