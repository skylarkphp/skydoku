{"version":3,"sources":["widgets/progressbar.js"],"names":["define","$","widget","version","options","classes","ui-progressbar","ui-progressbar-value","ui-progressbar-complete","max","value","change","complete","min","_create","this","oldValue","_constrainedValue","element","attr","role","aria-valuemin","_addClass","valueDiv","appendTo","_refreshValue","_destroy","removeAttr","remove","newValue","undefined","indeterminate","Math","_setOptions","_super","_setOption","key","_setOptionDisabled","_toggleClass","_percentage","percentage","toggle","width","toFixed","overlayDiv","aria-valuemax","aria-valuenow","_trigger"],"mappings":";;;;;;;AAoBAA,QACG,iBACA,aACA,aACD,SAAUC,GAEZ,OAAOA,EAAEC,OAAQ,kBAChBC,QAAS,WACTC,SACCC,SACCC,iBAAkB,gBAClBC,uBAAwB,iBACxBC,0BAA2B,mBAE5BC,IAAK,IACLC,MAAO,EAEPC,OAAQ,KACRC,SAAU,MAGXC,IAAK,EAELC,QAAS,WAGRC,KAAKC,SAAWD,KAAKX,QAAQM,MAAQK,KAAKE,oBAE1CF,KAAKG,QAAQC,MAIZC,KAAM,cACNC,gBAAiBN,KAAKF,MAEvBE,KAAKO,UAAW,iBAAkB,+BAElCP,KAAKQ,SAAWtB,EAAG,SAAUuB,SAAUT,KAAKG,SAC5CH,KAAKO,UAAWP,KAAKQ,SAAU,uBAAwB,oBACvDR,KAAKU,iBAGNC,SAAU,WACTX,KAAKG,QAAQS,WAAY,kDAEzBZ,KAAKQ,SAASK,UAGflB,MAAO,SAAUmB,GAChB,QAAkBC,IAAbD,EACJ,OAAOd,KAAKX,QAAQM,MAGrBK,KAAKX,QAAQM,MAAQK,KAAKE,kBAAmBY,GAC7Cd,KAAKU,iBAGNR,kBAAmB,SAAUY,GAY5B,YAXkBC,IAAbD,IACJA,EAAWd,KAAKX,QAAQM,OAGzBK,KAAKgB,eAA6B,IAAbF,EAGI,iBAAbA,IACXA,EAAW,IAGLd,KAAKgB,eACXC,KAAKnB,IAAKE,KAAKX,QAAQK,IAAKuB,KAAKvB,IAAKM,KAAKF,IAAKgB,KAGlDI,YAAa,SAAU7B,GAGtB,IAAIM,EAAQN,EAAQM,aACbN,EAAQM,MAEfK,KAAKmB,OAAQ9B,GAEbW,KAAKX,QAAQM,MAAQK,KAAKE,kBAAmBP,GAC7CK,KAAKU,iBAGNU,WAAY,SAAUC,EAAK1B,GACb,QAAR0B,IAGJ1B,EAAQsB,KAAKvB,IAAKM,KAAKF,IAAKH,IAE7BK,KAAKmB,OAAQE,EAAK1B,IAGnB2B,mBAAoB,SAAU3B,GAC7BK,KAAKmB,OAAQxB,GAEbK,KAAKG,QAAQC,KAAM,gBAAiBT,GACpCK,KAAKuB,aAAc,KAAM,sBAAuB5B,IAGjD6B,YAAa,WACZ,OAAOxB,KAAKgB,cACX,IACA,KAAQhB,KAAKX,QAAQM,MAAQK,KAAKF,MAAUE,KAAKX,QAAQK,IAAMM,KAAKF,MAGtEY,cAAe,WACd,IAAIf,EAAQK,KAAKX,QAAQM,MACxB8B,EAAazB,KAAKwB,cAEnBxB,KAAKQ,SACHkB,OAAQ1B,KAAKgB,eAAiBrB,EAAQK,KAAKF,KAC3C6B,MAAOF,EAAWG,QAAS,GAAM,KAEnC5B,KACEuB,aAAcvB,KAAKQ,SAAU,0BAA2B,KACxDb,IAAUK,KAAKX,QAAQK,KACvB6B,aAAc,+BAAgC,KAAMvB,KAAKgB,eAEtDhB,KAAKgB,eACThB,KAAKG,QAAQS,WAAY,iBACnBZ,KAAK6B,aACV7B,KAAK6B,WAAa3C,EAAG,SAAUuB,SAAUT,KAAKQ,UAC9CR,KAAKO,UAAWP,KAAK6B,WAAY,6BAGlC7B,KAAKG,QAAQC,MACZ0B,gBAAiB9B,KAAKX,QAAQK,IAC9BqC,gBAAiBpC,IAEbK,KAAK6B,aACT7B,KAAK6B,WAAWhB,SAChBb,KAAK6B,WAAa,OAIf7B,KAAKC,WAAaN,IACtBK,KAAKC,SAAWN,EAChBK,KAAKgC,SAAU,WAEXrC,IAAUK,KAAKX,QAAQK,KAC3BM,KAAKgC,SAAU","file":"../../widgets/progressbar.js","sourcesContent":["/*!\r\n * jQuery UI Progressbar @VERSION\r\n * http://jqueryui.com\r\n *\r\n * Copyright jQuery Foundation and other contributors\r\n * Released under the MIT license.\r\n * http://jquery.org/license\r\n */\r\n\r\n//>>label: Progressbar\r\n//>>group: Widgets\r\n// jscs:disable maximumLineLength\r\n//>>description: Displays a status indicator for loading state, standard percentage, and other progress indicators.\r\n// jscs:enable maximumLineLength\r\n//>>docs: http://api.jqueryui.com/progressbar/\r\n//>>demos: http://jqueryui.com/progressbar/\r\n//>>css.structure: ../../themes/base/core.css\r\n//>>css.structure: ../../themes/base/progressbar.css\r\n//>>css.theme: ../../themes/base/theme.css\r\n\r\ndefine( [\r\n\t\t\t\"skylark-jquery\",\r\n\t\t\t\"../version\",\r\n\t\t\t\"../widget\"\r\n],function( $ ) {\r\n\r\nreturn $.widget( \"ui.progressbar\", {\r\n\tversion: \"@VERSION\",\r\n\toptions: {\r\n\t\tclasses: {\r\n\t\t\t\"ui-progressbar\": \"ui-corner-all\",\r\n\t\t\t\"ui-progressbar-value\": \"ui-corner-left\",\r\n\t\t\t\"ui-progressbar-complete\": \"ui-corner-right\"\r\n\t\t},\r\n\t\tmax: 100,\r\n\t\tvalue: 0,\r\n\r\n\t\tchange: null,\r\n\t\tcomplete: null\r\n\t},\r\n\r\n\tmin: 0,\r\n\r\n\t_create: function() {\r\n\r\n\t\t// Constrain initial value\r\n\t\tthis.oldValue = this.options.value = this._constrainedValue();\r\n\r\n\t\tthis.element.attr( {\r\n\r\n\t\t\t// Only set static values; aria-valuenow and aria-valuemax are\r\n\t\t\t// set inside _refreshValue()\r\n\t\t\trole: \"progressbar\",\r\n\t\t\t\"aria-valuemin\": this.min\r\n\t\t} );\r\n\t\tthis._addClass( \"ui-progressbar\", \"ui-widget ui-widget-content\" );\r\n\r\n\t\tthis.valueDiv = $( \"<div>\" ).appendTo( this.element );\r\n\t\tthis._addClass( this.valueDiv, \"ui-progressbar-value\", \"ui-widget-header\" );\r\n\t\tthis._refreshValue();\r\n\t},\r\n\r\n\t_destroy: function() {\r\n\t\tthis.element.removeAttr( \"role aria-valuemin aria-valuemax aria-valuenow\" );\r\n\r\n\t\tthis.valueDiv.remove();\r\n\t},\r\n\r\n\tvalue: function( newValue ) {\r\n\t\tif ( newValue === undefined ) {\r\n\t\t\treturn this.options.value;\r\n\t\t}\r\n\r\n\t\tthis.options.value = this._constrainedValue( newValue );\r\n\t\tthis._refreshValue();\r\n\t},\r\n\r\n\t_constrainedValue: function( newValue ) {\r\n\t\tif ( newValue === undefined ) {\r\n\t\t\tnewValue = this.options.value;\r\n\t\t}\r\n\r\n\t\tthis.indeterminate = newValue === false;\r\n\r\n\t\t// Sanitize value\r\n\t\tif ( typeof newValue !== \"number\" ) {\r\n\t\t\tnewValue = 0;\r\n\t\t}\r\n\r\n\t\treturn this.indeterminate ? false :\r\n\t\t\tMath.min( this.options.max, Math.max( this.min, newValue ) );\r\n\t},\r\n\r\n\t_setOptions: function( options ) {\r\n\r\n\t\t// Ensure \"value\" option is set after other values (like max)\r\n\t\tvar value = options.value;\r\n\t\tdelete options.value;\r\n\r\n\t\tthis._super( options );\r\n\r\n\t\tthis.options.value = this._constrainedValue( value );\r\n\t\tthis._refreshValue();\r\n\t},\r\n\r\n\t_setOption: function( key, value ) {\r\n\t\tif ( key === \"max\" ) {\r\n\r\n\t\t\t// Don't allow a max less than min\r\n\t\t\tvalue = Math.max( this.min, value );\r\n\t\t}\r\n\t\tthis._super( key, value );\r\n\t},\r\n\r\n\t_setOptionDisabled: function( value ) {\r\n\t\tthis._super( value );\r\n\r\n\t\tthis.element.attr( \"aria-disabled\", value );\r\n\t\tthis._toggleClass( null, \"ui-state-disabled\", !!value );\r\n\t},\r\n\r\n\t_percentage: function() {\r\n\t\treturn this.indeterminate ?\r\n\t\t\t100 :\r\n\t\t\t100 * ( this.options.value - this.min ) / ( this.options.max - this.min );\r\n\t},\r\n\r\n\t_refreshValue: function() {\r\n\t\tvar value = this.options.value,\r\n\t\t\tpercentage = this._percentage();\r\n\r\n\t\tthis.valueDiv\r\n\t\t\t.toggle( this.indeterminate || value > this.min )\r\n\t\t\t.width( percentage.toFixed( 0 ) + \"%\" );\r\n\r\n\t\tthis\r\n\t\t\t._toggleClass( this.valueDiv, \"ui-progressbar-complete\", null,\r\n\t\t\t\tvalue === this.options.max )\r\n\t\t\t._toggleClass( \"ui-progressbar-indeterminate\", null, this.indeterminate );\r\n\r\n\t\tif ( this.indeterminate ) {\r\n\t\t\tthis.element.removeAttr( \"aria-valuenow\" );\r\n\t\t\tif ( !this.overlayDiv ) {\r\n\t\t\t\tthis.overlayDiv = $( \"<div>\" ).appendTo( this.valueDiv );\r\n\t\t\t\tthis._addClass( this.overlayDiv, \"ui-progressbar-overlay\" );\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.element.attr( {\r\n\t\t\t\t\"aria-valuemax\": this.options.max,\r\n\t\t\t\t\"aria-valuenow\": value\r\n\t\t\t} );\r\n\t\t\tif ( this.overlayDiv ) {\r\n\t\t\t\tthis.overlayDiv.remove();\r\n\t\t\t\tthis.overlayDiv = null;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( this.oldValue !== value ) {\r\n\t\t\tthis.oldValue = value;\r\n\t\t\tthis._trigger( \"change\" );\r\n\t\t}\r\n\t\tif ( value === this.options.max ) {\r\n\t\t\tthis._trigger( \"complete\" );\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n});\r\n"]}