{"version":3,"sources":["widgets/checkboxradio.js"],"names":["define","$","widget","ui","formResetMixin","version","options","disabled","label","icon","classes","ui-checkboxradio-label","ui-checkboxradio-icon","_getCreateOptions","labels","that","this","_super","_readType","element","length","error","originalLabel","contents","not","each","nodeType","text","outerHTML","_create","checked","_bindFormResetHandler","_setOption","_addClass","type","_updateLabel","_enhance","_on","change","focus","blur","_removeClass","nodeName","toLowerCase","test","_updateIcon","_getRadioGroup","name","nameSelector","escapeSelector","form","elements","filter","_form","_toggleClasses","_toggleClass","instance","checkboxradio","_destroy","_unbindFormResetHandler","remove","iconSpace","key","value","refresh","toAdd","prependTo","after","undefined","append","isDisabled","_setOptions"],"mappings":"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","file":"../../widgets/checkboxradio.js","sourcesContent":["define( [\r\n\t\"skylark-jquery\",\r\n\t\"../escape-selector\",\r\n\t\"../form-reset-mixin\",\r\n\t\"../labels\",\r\n\t\"../widget\"\r\n],function( $ ) {\r\n\r\n$.widget( \"ui.checkboxradio\", [ $.ui.formResetMixin, {\r\n\tversion: \"@VERSION\",\r\n\toptions: {\r\n\t\tdisabled: null,\r\n\t\tlabel: null,\r\n\t\ticon: true,\r\n\t\tclasses: {\r\n\t\t\t\"ui-checkboxradio-label\": \"ui-corner-all\",\r\n\t\t\t\"ui-checkboxradio-icon\": \"ui-corner-all\"\r\n\t\t}\r\n\t},\r\n\r\n\t_getCreateOptions: function() {\r\n\t\tvar disabled, labels;\r\n\t\tvar that = this;\r\n\t\tvar options = this._super() || {};\r\n\r\n\t\t// We read the type here, because it makes more sense to throw a element type error first,\r\n\t\t// rather then the error for lack of a label. Often if its the wrong type, it\r\n\t\t// won't have a label (e.g. calling on a div, btn, etc)\r\n\t\tthis._readType();\r\n\r\n\t\tlabels = this.element.labels();\r\n\r\n\t\t// If there are multiple labels, use the last one\r\n\t\tthis.label = $( labels[ labels.length - 1 ] );\r\n\t\tif ( !this.label.length ) {\r\n\t\t\t$.error( \"No label found for checkboxradio widget\" );\r\n\t\t}\r\n\r\n\t\tthis.originalLabel = \"\";\r\n\r\n\t\t// We need to get the label text but this may also need to make sure it does not contain the\r\n\t\t// input itself.\r\n\t\tthis.label.contents().not( this.element[ 0 ] ).each( function() {\r\n\r\n\t\t\t// The label contents could be text, html, or a mix. We concat each element to get a\r\n\t\t\t// string representation of the label, without the input as part of it.\r\n\t\t\tthat.originalLabel += this.nodeType === 3 ? $( this ).text() : this.outerHTML;\r\n\t\t} );\r\n\r\n\t\t// Set the label option if we found label text\r\n\t\tif ( this.originalLabel ) {\r\n\t\t\toptions.label = this.originalLabel;\r\n\t\t}\r\n\r\n\t\tdisabled = this.element[ 0 ].disabled;\r\n\t\tif ( disabled != null ) {\r\n\t\t\toptions.disabled = disabled;\r\n\t\t}\r\n\t\treturn options;\r\n\t},\r\n\r\n\t_create: function() {\r\n\t\tvar checked = this.element[ 0 ].checked;\r\n\r\n\t\tthis._bindFormResetHandler();\r\n\r\n\t\tif ( this.options.disabled == null ) {\r\n\t\t\tthis.options.disabled = this.element[ 0 ].disabled;\r\n\t\t}\r\n\r\n\t\tthis._setOption( \"disabled\", this.options.disabled );\r\n\t\tthis._addClass( \"ui-checkboxradio\", \"ui-helper-hidden-accessible\" );\r\n\t\tthis._addClass( this.label, \"ui-checkboxradio-label\", \"ui-button ui-widget\" );\r\n\r\n\t\tif ( this.type === \"radio\" ) {\r\n\t\t\tthis._addClass( this.label, \"ui-checkboxradio-radio-label\" );\r\n\t\t}\r\n\r\n\t\tif ( this.options.label && this.options.label !== this.originalLabel ) {\r\n\t\t\tthis._updateLabel();\r\n\t\t} else if ( this.originalLabel ) {\r\n\t\t\tthis.options.label = this.originalLabel;\r\n\t\t}\r\n\r\n\t\tthis._enhance();\r\n\r\n\t\tif ( checked ) {\r\n\t\t\tthis._addClass( this.label, \"ui-checkboxradio-checked\", \"ui-state-active\" );\r\n\t\t}\r\n\r\n\t\tthis._on( {\r\n\t\t\tchange: \"_toggleClasses\",\r\n\t\t\tfocus: function() {\r\n\t\t\t\tthis._addClass( this.label, null, \"ui-state-focus ui-visual-focus\" );\r\n\t\t\t},\r\n\t\t\tblur: function() {\r\n\t\t\t\tthis._removeClass( this.label, null, \"ui-state-focus ui-visual-focus\" );\r\n\t\t\t}\r\n\t\t} );\r\n\t},\r\n\r\n\t_readType: function() {\r\n\t\tvar nodeName = this.element[ 0 ].nodeName.toLowerCase();\r\n\t\tthis.type = this.element[ 0 ].type;\r\n\t\tif ( nodeName !== \"input\" || !/radio|checkbox/.test( this.type ) ) {\r\n\t\t\t$.error( \"Can't create checkboxradio on element.nodeName=\" + nodeName +\r\n\t\t\t\t\" and element.type=\" + this.type );\r\n\t\t}\r\n\t},\r\n\r\n\t// Support jQuery Mobile enhanced option\r\n\t_enhance: function() {\r\n\t\tthis._updateIcon( this.element[ 0 ].checked );\r\n\t},\r\n\r\n\twidget: function() {\r\n\t\treturn this.label;\r\n\t},\r\n\r\n\t_getRadioGroup: function() {\r\n\t\tvar group;\r\n\t\tvar name = this.element[ 0 ].name;\r\n\t\tvar nameSelector = \"input[name='\" + $.ui.escapeSelector( name ) + \"']\";\r\n\r\n\t\tif ( !name ) {\r\n\t\t\treturn $( [] );\r\n\t\t}\r\n\r\n\t\tif ( this.form.length ) {\r\n\t\t\tgroup = $( this.form[ 0 ].elements ).filter( nameSelector );\r\n\t\t} else {\r\n\r\n\t\t\t// Not inside a form, check all inputs that also are not inside a form\r\n\t\t\tgroup = $( nameSelector ).filter( function() {\r\n\t\t\t\treturn $( this )._form().length === 0;\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\treturn group.not( this.element );\r\n\t},\r\n\r\n\t_toggleClasses: function() {\r\n\t\tvar checked = this.element[ 0 ].checked;\r\n\t\tthis._toggleClass( this.label, \"ui-checkboxradio-checked\", \"ui-state-active\", checked );\r\n\r\n\t\tif ( this.options.icon && this.type === \"checkbox\" ) {\r\n\t\t\tthis._toggleClass( this.icon, null, \"ui-icon-check ui-state-checked\", checked )\r\n\t\t\t\t._toggleClass( this.icon, null, \"ui-icon-blank\", !checked );\r\n\t\t}\r\n\r\n\t\tif ( this.type === \"radio\" ) {\r\n\t\t\tthis._getRadioGroup()\r\n\t\t\t\t.each( function() {\r\n\t\t\t\t\tvar instance = $( this ).checkboxradio( \"instance\" );\r\n\r\n\t\t\t\t\tif ( instance ) {\r\n\t\t\t\t\t\tinstance._removeClass( instance.label,\r\n\t\t\t\t\t\t\t\"ui-checkboxradio-checked\", \"ui-state-active\" );\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\t\t}\r\n\t},\r\n\r\n\t_destroy: function() {\r\n\t\tthis._unbindFormResetHandler();\r\n\r\n\t\tif ( this.icon ) {\r\n\t\t\tthis.icon.remove();\r\n\t\t\tthis.iconSpace.remove();\r\n\t\t}\r\n\t},\r\n\r\n\t_setOption: function( key, value ) {\r\n\r\n\t\t// We don't allow the value to be set to nothing\r\n\t\tif ( key === \"label\" && !value ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._super( key, value );\r\n\r\n\t\tif ( key === \"disabled\" ) {\r\n\t\t\tthis._toggleClass( this.label, null, \"ui-state-disabled\", value );\r\n\t\t\tthis.element[ 0 ].disabled = value;\r\n\r\n\t\t\t// Don't refresh when setting disabled\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.refresh();\r\n\t},\r\n\r\n\t_updateIcon: function( checked ) {\r\n\t\tvar toAdd = \"ui-icon ui-icon-background \";\r\n\r\n\t\tif ( this.options.icon ) {\r\n\t\t\tif ( !this.icon ) {\r\n\t\t\t\tthis.icon = $( \"<span>\" );\r\n\t\t\t\tthis.iconSpace = $( \"<span> </span>\" );\r\n\t\t\t\tthis._addClass( this.iconSpace, \"ui-checkboxradio-icon-space\" );\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.type === \"checkbox\" ) {\r\n\t\t\t\ttoAdd += checked ? \"ui-icon-check ui-state-checked\" : \"ui-icon-blank\";\r\n\t\t\t\tthis._removeClass( this.icon, null, checked ? \"ui-icon-blank\" : \"ui-icon-check\" );\r\n\t\t\t} else {\r\n\t\t\t\ttoAdd += \"ui-icon-blank\";\r\n\t\t\t}\r\n\t\t\tthis._addClass( this.icon, \"ui-checkboxradio-icon\", toAdd );\r\n\t\t\tif ( !checked ) {\r\n\t\t\t\tthis._removeClass( this.icon, null, \"ui-icon-check ui-state-checked\" );\r\n\t\t\t}\r\n\t\t\tthis.icon.prependTo( this.label ).after( this.iconSpace );\r\n\t\t} else if ( this.icon !== undefined ) {\r\n\t\t\tthis.icon.remove();\r\n\t\t\tthis.iconSpace.remove();\r\n\t\t\tdelete this.icon;\r\n\t\t}\r\n\t},\r\n\r\n\t_updateLabel: function() {\r\n\r\n\t\t// Remove the contents of the label ( minus the icon, icon space, and input )\r\n\t\tvar contents = this.label.contents().not( this.element[ 0 ] );\r\n\t\tif ( this.icon ) {\r\n\t\t\tcontents = contents.not( this.icon[ 0 ] );\r\n\t\t}\r\n\t\tif ( this.iconSpace ) {\r\n\t\t\tcontents = contents.not( this.iconSpace[ 0 ] );\r\n\t\t}\r\n\t\tcontents.remove();\r\n\r\n\t\tthis.label.append( this.options.label );\r\n\t},\r\n\r\n\trefresh: function() {\r\n\t\tvar checked = this.element[ 0 ].checked,\r\n\t\t\tisDisabled = this.element[ 0 ].disabled;\r\n\r\n\t\tthis._updateIcon( checked );\r\n\t\tthis._toggleClass( this.label, \"ui-checkboxradio-checked\", \"ui-state-active\", checked );\r\n\t\tif ( this.options.label !== null ) {\r\n\t\t\tthis._updateLabel();\r\n\t\t}\r\n\r\n\t\tif ( isDisabled !== this.options.disabled ) {\r\n\t\t\tthis._setOptions( { \"disabled\": isDisabled } );\r\n\t\t}\r\n\t}\r\n\r\n} ] );\r\n\r\nreturn $.ui.checkboxradio;\r\n\r\n});\r\n"]}