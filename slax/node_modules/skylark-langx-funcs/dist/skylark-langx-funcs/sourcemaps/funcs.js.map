{"version":3,"sources":["funcs.js"],"names":["define","skylark","types","objects","mixin","slice","Array","prototype","isFunction","isString","proxy","fn","context","args","arguments","call","apply","concat","unshift","TypeError","delegate","TMP","obj","props","tmp","templateSettings","evaluate","interpolate","escape","noMatch","escapes","'","\\","\r","\n","\t"," "," ","escaper","attach","bind","debounce","wait","timeout","this","clearTimeout","setTimeout","defer","requestAnimationFrame","setTimeoutout","negate","predicate","noop","returnTrue","returnFalse","template","text","data","settings","render","defaults","matcher","RegExp","source","join","index","replace","match","offset","length","variable","Function","e","argument"],"mappings":"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","file":"../funcs.js","sourcesContent":["define([\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\"\r\n],function(skylark,types,objects){\r\n\tvar mixin = objects.mixin,\r\n        slice = Array.prototype.slice,\r\n        isFunction = types.isFunction,\r\n        isString = types.isString;\r\n\r\n    function defer(fn) {\r\n        if (requestAnimationFrame) {\r\n            requestAnimationFrame(fn);\r\n        } else {\r\n            setTimeoutout(fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function noop() {\r\n    }\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n    function debounce(fn, wait) {\r\n        var timeout;\r\n        return function () {\r\n            var context = this, args = arguments;\r\n            var later = function () {\r\n                timeout = null;\r\n                fn.apply(context, args);\r\n            };\r\n            if (timeout) clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n   \r\n    var delegate = (function() {\r\n        // boodman/crockford delegation w/ cornford optimization\r\n        function TMP() {}\r\n        return function(obj, props) {\r\n            TMP.prototype = obj;\r\n            var tmp = new TMP();\r\n            TMP.prototype = null;\r\n            if (props) {\r\n                mixin(tmp, props);\r\n            }\r\n            return tmp; // Object\r\n        };\r\n    })();\r\n\r\n\r\n    // By default, Underscore uses ERB-style template delimiters, change the\r\n    // following template settings to use alternative delimiters.\r\n    var templateSettings = {\r\n        evaluate: /<%([\\s\\S]+?)%>/g,\r\n        interpolate: /<%=([\\s\\S]+?)%>/g,\r\n        escape: /<%-([\\s\\S]+?)%>/g\r\n    };\r\n\r\n    // When customizing `templateSettings`, if you don't want to define an\r\n    // interpolation, evaluation or escaping regex, we need one that is\r\n    // guaranteed not to match.\r\n    var noMatch = /(.)^/;\r\n\r\n\r\n    // Certain characters need to be escaped so that they can be put into a\r\n    // string literal.\r\n    var escapes = {\r\n      \"'\":      \"'\",\r\n      '\\\\':     '\\\\',\r\n      '\\r':     'r',\r\n      '\\n':     'n',\r\n      '\\t':     't',\r\n      '\\u2028': 'u2028',\r\n      '\\u2029': 'u2029'\r\n    };\r\n\r\n    var escaper = /\\\\|'|\\r|\\n|\\t|\\u2028|\\u2029/g;\r\n\r\n\r\n    function template(text, data, settings) {\r\n        var render;\r\n        settings = objects.defaults({}, settings,templateSettings);\r\n\r\n        // Combine delimiters into one regular expression via alternation.\r\n        var matcher = RegExp([\r\n          (settings.escape || noMatch).source,\r\n          (settings.interpolate || noMatch).source,\r\n          (settings.evaluate || noMatch).source\r\n        ].join('|') + '|$', 'g');\r\n\r\n        // Compile the template source, escaping string literals appropriately.\r\n        var index = 0;\r\n        var source = \"__p+='\";\r\n        text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\r\n          source += text.slice(index, offset)\r\n              .replace(escaper, function(match) { return '\\\\' + escapes[match]; });\r\n\r\n          if (escape) {\r\n            source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\r\n          }\r\n          if (interpolate) {\r\n            source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\r\n          }\r\n          if (evaluate) {\r\n            source += \"';\\n\" + evaluate + \"\\n__p+='\";\r\n          }\r\n          index = offset + match.length;\r\n          return match;\r\n        });\r\n        source += \"';\\n\";\r\n\r\n        // If a variable is not specified, place data values in local scope.\r\n        if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\r\n\r\n        source = \"var __t,__p='',__j=Array.prototype.join,\" +\r\n          \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\r\n          source + 'return __p;\\n';\r\n\r\n        try {\r\n          render = new Function(settings.variable || 'obj', '_', source);\r\n        } catch (e) {\r\n          e.source = source;\r\n          throw e;\r\n        }\r\n\r\n        if (data) {\r\n          return render(data,this)\r\n        }\r\n        var template = proxy(function(data) {\r\n          return render.call(this, data,this);\r\n        },this);\r\n\r\n        // Provide the compiled source as a convenience for precompilation.\r\n        var argument = settings.variable || 'obj';\r\n        template.source = 'function(' + argument + '){\\n' + source + '}';\r\n\r\n        return template;\r\n    }\r\n\r\n\r\n    /**\r\n     * Creates a function that negates the result of the predicate `func`. The\r\n     * `func` predicate is invoked with the `this` binding and arguments of the\r\n     * created function.\r\n     * @category Function\r\n     * @param {Function} predicate The predicate to negate.\r\n     * @returns {Function} Returns the new negated function.\r\n     * @example\r\n     *\r\n     * function isEven(n) {\r\n     *   return n % 2 == 0\r\n     * }\r\n     *\r\n     * filter([1, 2, 3, 4, 5, 6], negate(isEven))\r\n     * // => [1, 3, 5]\r\n     */\r\n    function negate(predicate) {\r\n      if (typeof predicate !== 'function') {\r\n        throw new TypeError('Expected a function')\r\n      }\r\n      return function(...args) {\r\n        return !predicate.apply(this, args)\r\n      }\r\n    }\r\n\r\n\r\n    return skylark.attach(\"langx.funcs\",{\r\n        bind : proxy,\r\n        \r\n        debounce: debounce,\r\n\r\n        delegate: delegate,\r\n\r\n        defer: defer,\r\n\r\n        negate: negate,\r\n\r\n        noop : noop,\r\n\r\n        proxy: proxy,\r\n\r\n        returnTrue: function() {\r\n            return true;\r\n        },\r\n\r\n        returnFalse: function() {\r\n            return false;\r\n        },\r\n\r\n        templateSettings : templateSettings,\r\n        template : template\r\n    });\r\n});"]}