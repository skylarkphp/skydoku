{"version":3,"sources":["skylark-domx-fx.js"],"names":["define","skylark","langx","browser","noder","geom","styler","eventer","animationName","animationDuration","animationTiming","transitionProperty","transitionDuration","transitionTiming","transitionDelay","animationEnd","normalizeCssEvent","transitionEnd","supportedTransforms","transform","css3PropPrefix","cssReset","animate","elm","properties","duration","ease","callback","delay","key","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","this","fired","hasScrollTop","isPlainObject","easing","complete","isString","fx","speeds","undefined","normal","off","isFunction","eace","v","test","top","right","bottom","left","css","size","width","height","push","dasherize","join","event","target","currentTarget","call","on","debounce","clientLeft","scrollToTop","show","speed","opacity","scale","hide","pos","scrollFrom","parseInt","scrollTop","i","freq","scrollTo","interval","setInterval","clearInterval","fadeTo","fadeIn","fadeOut","options","slideDown","position","visibility","marginTop","marginBottom","paddingTop","paddingBottom","overflow","apply","slideUp","queue","normalizeCssProperty","mixin","fast","slow","emulateTransitionEnd","called","one","setTimeout","trigger","support","transition","end","fadeToggle","ceasing","allback","isInvisible","slideToggle","throb","params","timer","text","time","style","throbber","createElement","class","className","overlayDiv","zIndex","appendChild","overlay","textNode","createTextNode","remove","clearTimeout","update","nodeValue","toggle","attach","velm","$","delegate","fn","wraps","wrapper_every_act","toogle","main"],"mappings":"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","file":"../skylark-domx-fx.js","sourcesContent":["define('skylark-domx-fx/fx',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-eventer\"\r\n], function(skylark, langx, browser, noder, geom, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    /*   \r\n     * Perform a custom animation of a set of CSS properties.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} properties\r\n     * @param {String} ease\r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     * @param {Number or String} delay\r\n     */\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false,\r\n            resetClipAuto = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                var v = properties[key];\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + v + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    if (key == \"clip\" && langx.isPlainObject(v)) {\r\n                        cssValues[key] = \"rect(\" + v.top+\"px,\"+ v.right +\"px,\"+ v.bottom +\"px,\"+ v.left+\"px)\";\r\n                        if (styler.css(elm,\"clip\") == \"auto\") {\r\n                            var size = geom.size(elm);\r\n                            styler.css(elm,\"clip\",\"rect(\"+\"0px,\"+ size.width +\"px,\"+ size.height +\"px,\"+\"0px)\");  \r\n                            resetClipAuto = true;\r\n                        }\r\n\r\n                    } else {\r\n                        cssValues[key] = v;\r\n                    }\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            if (resetClipAuto) {\r\n //               styler.css(elm,\"clip\",\"auto\");\r\n            }\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Hide an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Set the vertical position of the scroll bar for an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} pos\r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Adjust the opacity of an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Number or String} opacity\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display an element by fading them to opaque.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide an element by fading them to transparent.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            opacity = styler.css(elm,\"opacity\"),\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.css(elm,\"opacity\",opacity);\r\n            styler.hide(elm);\r\n            if (complete) {\r\n                complete.call(elm);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element by animating its opacity.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} ceasing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeToggle(elm, speed, ceasing, allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing, callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideDown(elm, duration, callback) {\r\n\r\n        // get the element position to restore it then\r\n        var position = styler.css(elm, 'position');\r\n\r\n        // show element if it is hidden\r\n        show(elm);\r\n\r\n        // place it so it displays as usually but hidden\r\n        styler.css(elm, {\r\n            position: 'absolute',\r\n            visibility: 'hidden'\r\n        });\r\n\r\n        // get naturally height, margin, padding\r\n        var marginTop = styler.css(elm, 'margin-top');\r\n        var marginBottom = styler.css(elm, 'margin-bottom');\r\n        var paddingTop = styler.css(elm, 'padding-top');\r\n        var paddingBottom = styler.css(elm, 'padding-bottom');\r\n        var height = styler.css(elm, 'height');\r\n\r\n        // set initial css for animation\r\n        styler.css(elm, {\r\n            position: position,\r\n            visibility: 'visible',\r\n            overflow: 'hidden',\r\n            height: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n\r\n        // animate to gotten height, margin and padding\r\n        animate(elm, {\r\n            height: height,\r\n            marginTop: marginTop,\r\n            marginBottom: marginBottom,\r\n            paddingTop: paddingTop,\r\n            paddingBottom: paddingBottom\r\n        }, {\r\n            duration: duration,\r\n            complete: function() {\r\n                if (callback) {\r\n                    callback.apply(elm);\r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideUp(elm, duration, callback) {\r\n        // active the function only if the element is visible\r\n        if (geom.height(elm) > 0) {\r\n\r\n            // get the element position to restore it then\r\n            var position = styler.css(elm, 'position');\r\n\r\n            // get the element height, margin and padding to restore them then\r\n            var height = styler.css(elm, 'height');\r\n            var marginTop = styler.css(elm, 'margin-top');\r\n            var marginBottom = styler.css(elm, 'margin-bottom');\r\n            var paddingTop = styler.css(elm, 'padding-top');\r\n            var paddingBottom = styler.css(elm, 'padding-bottom');\r\n\r\n            // set initial css for animation\r\n            styler.css(elm, {\r\n                visibility: 'visible',\r\n                overflow: 'hidden',\r\n                height: height,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                paddingTop: paddingTop,\r\n                paddingBottom: paddingBottom\r\n            });\r\n\r\n            // animate element height, margin and padding to zero\r\n            animate(elm, {\r\n                height: 0,\r\n                marginTop: 0,\r\n                marginBottom: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0\r\n            }, {\r\n                // callback : restore the element position, height, margin and padding to original values\r\n                duration: duration,\r\n                queue: false,\r\n                complete: function() {\r\n                    hide(elm);\r\n                    styler.css(elm, {\r\n                        visibility: 'visible',\r\n                        overflow: 'hidden',\r\n                        height: height,\r\n                        marginTop: marginTop,\r\n                        marginBottom: marginBottom,\r\n                        paddingTop: paddingTop,\r\n                        paddingBottom: paddingBottom\r\n                    });\r\n                    if (callback) {\r\n                        callback.apply(elm);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display or hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideToggle(elm, duration, callback) {\r\n\r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm, duration, callback);\r\n        }\r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm, duration, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function emulateTransitionEnd(elm,duration) {\r\n        var called = false;\r\n        eventer.one(elm,'transitionEnd', function () { \r\n            called = true;\r\n        })\r\n        var callback = function () { \r\n            if (!called) {\r\n                eventer.trigger(elm,browser.support.transition.end) \r\n            }\r\n        };\r\n        setTimeout(callback, duration);\r\n        \r\n        return this;\r\n    } \r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     * @param {Node} params\r\n     */\r\n    function overlay(elm, params) {\r\n        var overlayDiv = noder.createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n    \r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {HTMLElement} elm\r\n     * @param {Node} params\r\n     */\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n\r\n            throbber = noder.createElement(\"div\", {\r\n                \"class\": params.className || \"throbber\"\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                \"class\": 'overlay fade'\r\n            }),\r\n            throb = noder.createElement(\"div\", {\r\n                \"class\": \"throb\"\r\n            }),\r\n            textNode = noder.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    noder.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        if (params.style) {\r\n            styler.css(throbber,params.style);\r\n        }\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate,\r\n        emulateTransitionEnd,\r\n        fadeIn,\r\n        fadeOut,\r\n        fadeTo,\r\n        fadeToggle,\r\n        hide,\r\n        scrollToTop,\r\n\r\n        slideDown,\r\n        slideToggle,\r\n        slideUp,\r\n        show,\r\n        throb,\r\n        toggle\r\n    });\r\n\r\n    return skylark.attach(\"domx.fx\", fx);\r\n});\ndefine('skylark-domx-fx/main',[\r\n\t\"./fx\",\r\n\t\"skylark-domx-velm\",\r\n\t\"skylark-domx-query\"\t\r\n],function(fx,velm,$){\r\n    // from ./fx\r\n    velm.delegate([\r\n        \"animate\",\r\n        \"emulateTransitionEnd\",\r\n        \"fadeIn\",\r\n        \"fadeOut\",\r\n        \"fadeTo\",\r\n        \"fadeToggle\",\r\n        \"hide\",\r\n        \"scrollToTop\",\r\n        \"slideDown\",\r\n        \"slideToggle\",\r\n        \"slideUp\",\r\n        \"show\",\r\n        \"toggle\"\r\n    ], fx);\r\n\r\n    $.fn.hide =  $.wraps.wrapper_every_act(fx.hide, fx);\r\n\r\n    $.fn.animate = $.wraps.wrapper_every_act(fx.animate, fx);\r\n    $.fn.emulateTransitionEnd = $.wraps.wrapper_every_act(fx.emulateTransitionEnd, fx);\r\n\r\n    $.fn.show = $.wraps.wrapper_every_act(fx.show, fx);\r\n    $.fn.hide = $.wraps.wrapper_every_act(fx.hide, fx);\r\n    $.fn.toogle = $.wraps.wrapper_every_act(fx.toogle, fx);\r\n    $.fn.fadeTo = $.wraps.wrapper_every_act(fx.fadeTo, fx);\r\n    $.fn.fadeIn = $.wraps.wrapper_every_act(fx.fadeIn, fx);\r\n    $.fn.fadeOut = $.wraps.wrapper_every_act(fx.fadeOut, fx);\r\n    $.fn.fadeToggle = $.wraps.wrapper_every_act(fx.fadeToggle, fx);\r\n\r\n    $.fn.slideDown = $.wraps.wrapper_every_act(fx.slideDown, fx);\r\n    $.fn.slideToggle = $.wraps.wrapper_every_act(fx.slideToggle, fx);\r\n    $.fn.slideUp = $.wraps.wrapper_every_act(fx.slideUp, fx);\r\n\r\n\treturn fx;\r\n});\ndefine('skylark-domx-fx', ['skylark-domx-fx/main'], function (main) { return main; });\n\n"]}